{
  "sha": "1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
  "node_id": "C_kwDOBtgov9oAKDFiOTA2MDRiMmQwMTkwMDJlNjZjNWY5Zjc0YzFlMDljZTQ1ZGIyY2Q",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2023-04-02T07:34:32Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2023-04-02T08:47:35Z"
    },
    "message": "update go modules, fix Apple auth redirect\n\nPreviously the redirect after successful authentication didn't work.",
    "tree": {
      "sha": "82dd4211713e49e5332ca4cf48304658921a5877",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/82dd4211713e49e5332ca4cf48304658921a5877"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
  "html_url": "https://github.com/umputun/remark42/commit/1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a03c002df452fc7a5e199be89d03c770d5707fee",
      "url": "https://api.github.com/repos/umputun/remark42/commits/a03c002df452fc7a5e199be89d03c770d5707fee",
      "html_url": "https://github.com/umputun/remark42/commit/a03c002df452fc7a5e199be89d03c770d5707fee"
    }
  ],
  "stats": {
    "total": 41039,
    "additions": 29133,
    "deletions": 11906
  },
  "files": [
    {
      "sha": "52dd7e9ebe688daedd3085a9e61b29345ea6e52d",
      "filename": "backend/_example/memory_store/go.mod",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.mod?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -4,17 +4,17 @@ go 1.17\n \n require (\n \tgithub.com/go-pkgz/jrpc v0.3.0\n-\tgithub.com/go-pkgz/lgr v0.10.4\n+\tgithub.com/go-pkgz/lgr v0.11.0\n \tgithub.com/jessevdk/go-flags v1.5.0\n-\tgithub.com/stretchr/testify v1.8.1\n+\tgithub.com/stretchr/testify v1.8.2\n \tgithub.com/umputun/remark42/backend v1.11.2\n )\n \n require (\n \tgithub.com/Depado/bfchroma/v2 v2.0.0 // indirect\n-\tgithub.com/PuerkitoBio/goquery v1.8.0 // indirect\n+\tgithub.com/PuerkitoBio/goquery v1.8.1 // indirect\n \tgithub.com/ajg/form v1.5.1 // indirect\n-\tgithub.com/alecthomas/chroma/v2 v2.4.0 // indirect\n+\tgithub.com/alecthomas/chroma/v2 v2.7.0 // indirect\n \tgithub.com/andybalholm/cascadia v1.3.1 // indirect\n \tgithub.com/aymerick/douceur v0.2.0 // indirect\n \tgithub.com/davecgh/go-spew v1.1.1 // indirect\n@@ -26,16 +26,16 @@ require (\n \tgithub.com/go-pkgz/expirable-cache v0.1.0 // indirect\n \tgithub.com/go-pkgz/rest v1.17.0 // indirect\n \tgithub.com/gorilla/css v1.0.0 // indirect\n-\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n+\tgithub.com/hashicorp/errwrap v1.0.0 // indirect\n \tgithub.com/hashicorp/go-multierror v1.1.1 // indirect\n-\tgithub.com/microcosm-cc/bluemonday v1.0.21 // indirect\n+\tgithub.com/microcosm-cc/bluemonday v1.0.23 // indirect\n \tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n \tgithub.com/rs/xid v1.4.0 // indirect\n \tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n-\tgo.etcd.io/bbolt v1.3.6 // indirect\n-\tgolang.org/x/image v0.3.0 // indirect\n-\tgolang.org/x/net v0.5.0 // indirect\n-\tgolang.org/x/sys v0.4.0 // indirect\n+\tgo.etcd.io/bbolt v1.3.7 // indirect\n+\tgolang.org/x/image v0.6.0 // indirect\n+\tgolang.org/x/net v0.8.0 // indirect\n+\tgolang.org/x/sys v0.6.0 // indirect\n \tgopkg.in/yaml.v3 v3.0.1 // indirect\n )\n "
    },
    {
      "sha": "c3a3ac0f89f6b1fa392ec526e29b709a1089066e",
      "filename": "backend/_example/memory_store/go.sum",
      "status": "modified",
      "additions": 30,
      "deletions": 25,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.sum?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,13 +1,13 @@\n github.com/Depado/bfchroma/v2 v2.0.0 h1:IRpN9BPkNwEpR6w1ectIcNWOuhDSLx+8f1pn83fzxx8=\n github.com/Depado/bfchroma/v2 v2.0.0/go.mod h1:wFwW/Pw8Tnd0irzgO9Zxtxgzp3aPS8qBWlyadxujxmw=\n-github.com/PuerkitoBio/goquery v1.8.0 h1:PJTF7AmFCFKk1N6V6jmKfrNH9tV5pNE6lZMkG0gta/U=\n-github.com/PuerkitoBio/goquery v1.8.0/go.mod h1:ypIiRMtY7COPGk+I/YbZLbxsxn9g5ejnI2HSMtkjZvI=\n+github.com/PuerkitoBio/goquery v1.8.1 h1:uQxhNlArOIdbrH1tr0UXwdVFgDcZDrZVdcpygAcwmWM=\n+github.com/PuerkitoBio/goquery v1.8.1/go.mod h1:Q8ICL1kNUJ2sXGoAhPGUdYDJvgQgHzJsnnd3H7Ho5jQ=\n github.com/ajg/form v1.5.1 h1:t9c7v8JUKu/XxOGBU0yjNpaMloxGEJhUkqFRq0ibGeU=\n github.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\n-github.com/alecthomas/assert/v2 v2.2.0 h1:f6L/b7KE2bfA+9O4FL3CM/xJccDEwPVYd5fALBiuwvw=\n-github.com/alecthomas/chroma/v2 v2.4.0 h1:Loe2ZjT5x3q1bcWwemqyqEi8p11/IV/ncFCeLYDpWC4=\n-github.com/alecthomas/chroma/v2 v2.4.0/go.mod h1:6kHzqF5O6FUSJzBXW7fXELjb+e+7OXW4UpoPqMO7IBQ=\n-github.com/alecthomas/repr v0.1.0 h1:ENn2e1+J3k09gyj2shc0dHr/yjaWSHRlrJ4DPMevDqE=\n+github.com/alecthomas/assert/v2 v2.2.1 h1:XivOgYcduV98QCahG8T5XTezV5bylXe+lBxLG2K2ink=\n+github.com/alecthomas/chroma/v2 v2.7.0 h1:hm1rY6c/Ob4eGclpQ7X/A3yhqBOZNUTk9q+yhyLIViI=\n+github.com/alecthomas/chroma/v2 v2.7.0/go.mod h1:yrkMI9807G1ROx13fhe1v6PN2DDeaR73L3d+1nmYQtw=\n+github.com/alecthomas/repr v0.2.0 h1:HAzS41CIzNW5syS8Mf9UwXhNH1J9aix/BvDRf1Ml2Yk=\n github.com/andybalholm/cascadia v1.3.1 h1:nhxRkql1kdYCc8Snf7D5/D3spOX+dBgjA6u8x004T2c=\n github.com/andybalholm/cascadia v1.3.1/go.mod h1:R4bJ1UQfqADjvDa4P6HZHLh/3OxWWEqc0Sk8XGwHqvA=\n github.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=\n@@ -32,16 +32,15 @@ github.com/go-pkgz/expirable-cache v0.1.0 h1:3bw0m8vlTK8qlwz5KXuygNBTkiKRTPrAGXU\n github.com/go-pkgz/expirable-cache v0.1.0/go.mod h1:GTrEl0X+q0mPNqN6dtcQXksACnzCBQ5k/k1SwXJsZKs=\n github.com/go-pkgz/jrpc v0.3.0 h1:Fls38KqPsHzvp0FWfivr6cGnncC+iFBodHBqvUPY+0U=\n github.com/go-pkgz/jrpc v0.3.0/go.mod h1:MFtKs75JESiSqVicsQkgN2iDFFuCd3gVT1/vKiwRi00=\n-github.com/go-pkgz/lgr v0.10.4 h1:l7qyFjqEZgwRgaQQSEp6tve4A3OU80VrfzpvtEX8ngw=\n-github.com/go-pkgz/lgr v0.10.4/go.mod h1:CD0s1z6EFpIUplV067gitF77tn25JItzwHNKAPqeCF0=\n+github.com/go-pkgz/lgr v0.11.0 h1:9XH5o+vj09L0sRWEswIGK1lJ6g07xVB4/Z28RV9Z+qM=\n+github.com/go-pkgz/lgr v0.11.0/go.mod h1:4rdRmMSs4yGFjnUg0rSDbKx21LmFNZoH4y8OLl3qDnU=\n github.com/go-pkgz/rest v1.15.6/go.mod h1:KUWAqbDteYGS/CiXftomQsKjtEOifXsJ36Ka0skYbmk=\n github.com/go-pkgz/rest v1.17.0 h1:LoBI/lDBMuqwWhOOkc6thM9NnwJO+K9nWvCOjZ7BAgE=\n github.com/go-pkgz/rest v1.17.0/go.mod h1:HHlLOt02NJc2sgffXBF6hYVMcRo4Gz3vjg43zTzN7VM=\n github.com/gorilla/css v1.0.0 h1:BQqNyPTi50JCFMTw/b67hByjMVXZRwGha6wxVGkeihY=\n github.com/gorilla/css v1.0.0/go.mod h1:Dn721qIggHpt4+EFCcTLTU/vk5ySda2ReITrtgBl60c=\n+github.com/hashicorp/errwrap v1.0.0 h1:hLrqtEDnRye3+sgx6z4qVLNuviH3MR5aQ0ykNJa/UYA=\n github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\n-github.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\n-github.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\n github.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\n github.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\n github.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\n@@ -52,8 +51,8 @@ github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORN\n github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\n github.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\n github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\n-github.com/microcosm-cc/bluemonday v1.0.21 h1:dNH3e4PSyE4vNX+KlRGHT5KrSvjeUkoNPwEORjffHJg=\n-github.com/microcosm-cc/bluemonday v1.0.21/go.mod h1:ytNkv4RrDrLJ2pqlsSI46O6IVXmZOBBD4SaJyDwwTkM=\n+github.com/microcosm-cc/bluemonday v1.0.23 h1:SMZe2IGa0NuHvnVNAZ+6B38gsTbi5e4sViiWJyDDqFY=\n+github.com/microcosm-cc/bluemonday v1.0.23/go.mod h1:mN70sk7UkkF8TUr2IGBpNN0jAgStuPzlK76QuruE/z4=\n github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n@@ -64,48 +63,54 @@ github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQD\n github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n github.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\n github.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\n-github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\n-github.com/stretchr/testify v1.8.1 h1:w7B6lhMri9wdJUVmEZPGGhZzrYTPvgJArz7wNPgYKsk=\n-github.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\n+github.com/stretchr/testify v1.8.2 h1:+h33VjcLVPDHtOdpUCuF+7gSuG3yGIftsP1YvFihtJ8=\n+github.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\n github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\n-go.etcd.io/bbolt v1.3.6 h1:/ecaJf0sk1l4l6V4awd65v2C3ILy7MSj+s/x1ADCIMU=\n-go.etcd.io/bbolt v1.3.6/go.mod h1:qXsaaIqmgQH0T+OPdb99Bf+PKfBBQVAdyD6TY9G8XM4=\n+go.etcd.io/bbolt v1.3.7 h1:j+zJOnnEjF/kyHlDDgGnVL/AIqIJPq8UoB2GSNfkUfQ=\n+go.etcd.io/bbolt v1.3.7/go.mod h1:N9Mkw9X8x5fupy0IKsmuqVtoGDyxsaDlbk4Rd05IAQw=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\n-golang.org/x/image v0.3.0 h1:HTDXbdK9bjfSWkPzDJIw89W8CAtfFGduujWs33NLLsg=\n-golang.org/x/image v0.3.0/go.mod h1:fXd9211C/0VTlYuAcOhW8dY/RtEJqODXOWBDpmYBf+A=\n+golang.org/x/image v0.6.0 h1:bR8b5okrPI3g/gyZakLZHeWxAR8Dn5CyxXv1hLH5g/4=\n+golang.org/x/image v0.6.0/go.mod h1:MXLdDR43H7cDJq5GEGXEVeeNhPgi+YYEQ2pC1byI1x0=\n golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\n+golang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\n golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\n golang.org/x/net v0.0.0-20210916014120-12bc252f5db8/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\n golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\n-golang.org/x/net v0.5.0 h1:GyT4nK/YDHSqa1c4753ouYCDajOYKTja9Xb/OHtgvSw=\n-golang.org/x/net v0.5.0/go.mod h1:DivGGAXEgPSlEBzxGzZI+ZLohi+xUj054jfeKui00ws=\n+golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n+golang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n+golang.org/x/net v0.8.0 h1:Zrh2ngAOFYneWTAIAPethzeaQLuHwhuBkuV6ZiRnUaQ=\n+golang.org/x/net v0.8.0/go.mod h1:QVkue5JL9kW//ek3r6jTKnTFis1tRmNAW2P1shuFdJc=\n golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n+golang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n-golang.org/x/sys v0.0.0-20200923182605-d9f96fdee20d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.4.0 h1:Zr2JFtRQNX3BCZ8YtxRE9hNJYC8J6I1MVbMg6owUp18=\n-golang.org/x/sys v0.4.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n+golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n+golang.org/x/sys v0.6.0 h1:MVltZSvRTcU2ljQOhs94SXPftV6DCNnZViHeQps87pQ=\n+golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\n+golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\n golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\n golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\n golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\n-golang.org/x/text v0.6.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\n+golang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\n+golang.org/x/text v0.8.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\n golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\n golang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\n golang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\n+golang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\n golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\n gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY="
    },
    {
      "sha": "ed0380bf9f68c728db02c928468bb56d08de473e",
      "filename": "backend/app/cmd/server.go",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fapp%2Fcmd%2Fserver.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fapp%2Fcmd%2Fserver.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Fcmd%2Fserver.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -857,9 +857,10 @@ func (s *ServerCommand) addAuthProviders(authenticator *auth.Service) error {\n \tif s.Auth.Apple.CID != \"\" && s.Auth.Apple.TID != \"\" && s.Auth.Apple.KID != \"\" {\n \t\terr := authenticator.AddAppleProvider(\n \t\t\tprovider.AppleConfig{\n-\t\t\t\tClientID: s.Auth.Apple.CID,\n-\t\t\t\tTeamID:   s.Auth.Apple.TID,\n-\t\t\t\tKeyID:    s.Auth.Apple.KID,\n+\t\t\t\tClientID:     s.Auth.Apple.CID,\n+\t\t\t\tTeamID:       s.Auth.Apple.TID,\n+\t\t\t\tKeyID:        s.Auth.Apple.KID,\n+\t\t\t\tResponseMode: \"query\", // default is form_post which wouldn't work here\n \t\t\t},\n \t\t\tprovider.LoadApplePrivateKeyFromFile(s.Auth.Apple.PrivateKeyFilePath),\n \t\t)"
    },
    {
      "sha": "28045e2a5a7fd2d4833d1cb42aa582c217a68483",
      "filename": "backend/app/store/formatter_test.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fapp%2Fstore%2Fformatter_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fapp%2Fstore%2Fformatter_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Fstore%2Fformatter_test.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -36,9 +36,9 @@ func TestFormatter_FormatText(t *testing.T) {\n \t\t},\n \t\t{\"&mdash; not translated #354\", \"<p>— not translated #354</p>\\n!converted\", \"mdash\"},\n \t\t{\"smth\\n```go\\nfunc main(aa string) int {return 0}\\n```\", `<p>smth</p>\n-<pre tabindex=\"0\" class=\"chroma\"><code><span class=\"line\"><span class=\"cl\"><span class=\"kd\">func</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"nx\">aa</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"kt\">int</span> <span class=\"p\">{</span><span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">}</span>\n+<pre class=\"chroma\"><code><span class=\"line\"><span class=\"cl\"><span class=\"kd\">func</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"nx\">aa</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"kt\">int</span> <span class=\"p\">{</span><span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">}</span>\n </span></span></code></pre>!converted`, \"code with language\"},\n-\t\t{\"```\\ntest_code\\n```\", `<pre tabindex=\"0\" class=\"chroma\"><code><span class=\"line\"><span class=\"cl\">test_code\n+\t\t{\"```\\ntest_code\\n```\", `<pre class=\"chroma\"><code><span class=\"line\"><span class=\"cl\">test_code\n </span></span></code></pre>!converted`, \"code without language\"},\n \t}\n \tf := NewCommentFormatter(mockConverter{})"
    },
    {
      "sha": "3c70d35bf398c708d244202600a27272d7dc9925",
      "filename": "backend/go.mod",
      "status": "modified",
      "additions": 28,
      "deletions": 27,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.mod?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -4,17 +4,17 @@ go 1.17\n \n require (\n \tgithub.com/Depado/bfchroma/v2 v2.0.0\n-\tgithub.com/PuerkitoBio/goquery v1.8.0\n-\tgithub.com/alecthomas/chroma/v2 v2.4.0\n+\tgithub.com/PuerkitoBio/goquery v1.8.1\n+\tgithub.com/alecthomas/chroma/v2 v2.7.0\n \tgithub.com/didip/tollbooth/v7 v7.0.1\n \tgithub.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f\n \tgithub.com/go-chi/chi/v5 v5.0.8\n \tgithub.com/go-chi/cors v1.2.1\n \tgithub.com/go-chi/render v1.0.2\n-\tgithub.com/go-pkgz/auth v1.20.1-0.20230115185815-90b4b947ab05\n+\tgithub.com/go-pkgz/auth v1.21.0\n \tgithub.com/go-pkgz/jrpc v0.3.0\n-\tgithub.com/go-pkgz/lcw v1.0.3-0.20221226231215-a66ea7c4aff7\n-\tgithub.com/go-pkgz/lgr v0.10.4\n+\tgithub.com/go-pkgz/lcw v1.0.2\n+\tgithub.com/go-pkgz/lgr v0.11.0\n \tgithub.com/go-pkgz/notify v0.2.0\n \tgithub.com/go-pkgz/repeater v1.1.3\n \tgithub.com/go-pkgz/rest v1.17.0\n@@ -24,21 +24,22 @@ require (\n \tgithub.com/gorilla/feeds v1.1.1\n \tgithub.com/hashicorp/go-multierror v1.1.1\n \tgithub.com/jessevdk/go-flags v1.5.0\n-\tgithub.com/kyokomi/emoji/v2 v2.2.11\n-\tgithub.com/microcosm-cc/bluemonday v1.0.21\n+\tgithub.com/kyokomi/emoji/v2 v2.2.12\n+\tgithub.com/microcosm-cc/bluemonday v1.0.23\n \tgithub.com/rs/xid v1.4.0\n \tgithub.com/russross/blackfriday/v2 v2.1.0\n \tgithub.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e\n-\tgithub.com/stretchr/testify v1.8.1\n-\tgo.etcd.io/bbolt v1.3.6\n-\tgo.uber.org/goleak v1.2.0\n-\tgolang.org/x/crypto v0.5.0\n-\tgolang.org/x/image v0.3.0\n-\tgolang.org/x/net v0.5.0\n+\tgithub.com/stretchr/testify v1.8.2\n+\tgo.etcd.io/bbolt v1.3.7\n+\tgo.uber.org/goleak v1.2.1\n+\tgolang.org/x/crypto v0.7.0\n+\tgolang.org/x/image v0.6.0\n+\tgolang.org/x/net v0.8.0\n )\n \n require (\n-\tcloud.google.com/go/compute v1.6.1 // indirect\n+\tcloud.google.com/go/compute v1.14.0 // indirect\n+\tcloud.google.com/go/compute/metadata v0.2.3 // indirect\n \tgithub.com/ajg/form v1.5.1 // indirect\n \tgithub.com/andybalholm/cascadia v1.3.1 // indirect\n \tgithub.com/aymerick/douceur v0.2.0 // indirect\n@@ -47,17 +48,17 @@ require (\n \tgithub.com/dghubble/oauth1 v0.7.2 // indirect\n \tgithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f // indirect\n \tgithub.com/dlclark/regexp2 v1.4.0 // indirect\n-\tgithub.com/go-oauth2/oauth2/v4 v4.5.1 // indirect\n+\tgithub.com/go-oauth2/oauth2/v4 v4.5.2 // indirect\n \tgithub.com/go-pkgz/email v0.4.1 // indirect\n \tgithub.com/go-pkgz/expirable-cache v0.1.0 // indirect\n \tgithub.com/go-redis/redis/v8 v8.11.5 // indirect\n \tgithub.com/golang/protobuf v1.5.2 // indirect\n-\tgithub.com/golang/snappy v0.0.4 // indirect\n+\tgithub.com/golang/snappy v0.0.1 // indirect\n \tgithub.com/gorilla/css v1.0.0 // indirect\n-\tgithub.com/gorilla/websocket v1.5.0 // indirect\n-\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n-\tgithub.com/hashicorp/golang-lru v0.6.0 // indirect\n-\tgithub.com/klauspost/compress v1.15.2 // indirect\n+\tgithub.com/gorilla/websocket v1.4.2 // indirect\n+\tgithub.com/hashicorp/errwrap v1.0.0 // indirect\n+\tgithub.com/hashicorp/golang-lru v0.5.4 // indirect\n+\tgithub.com/klauspost/compress v1.15.0 // indirect\n \tgithub.com/montanaflynn/stats v0.0.0-20171201202039-1bf9dbcd8cbe // indirect\n \tgithub.com/nullrocks/identicon v0.0.0-20180626043057-7875f45b0022 // indirect\n \tgithub.com/pkg/errors v0.9.1 // indirect\n@@ -66,13 +67,13 @@ require (\n \tgithub.com/xdg-go/pbkdf2 v1.0.0 // indirect\n \tgithub.com/xdg-go/scram v1.1.1 // indirect\n \tgithub.com/xdg-go/stringprep v1.0.3 // indirect\n-\tgithub.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a // indirect\n-\tgo.mongodb.org/mongo-driver v1.11.1 // indirect\n-\tgolang.org/x/oauth2 v0.4.0 // indirect\n-\tgolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4 // indirect\n-\tgolang.org/x/sys v0.4.0 // indirect\n-\tgolang.org/x/text v0.6.0 // indirect\n+\tgithub.com/youmark/pkcs8 v0.0.0-20181117223130-1be2e3e5546d // indirect\n+\tgo.mongodb.org/mongo-driver v1.11.3 // indirect\n+\tgolang.org/x/oauth2 v0.6.0 // indirect\n+\tgolang.org/x/sync v0.1.0 // indirect\n+\tgolang.org/x/sys v0.6.0 // indirect\n+\tgolang.org/x/text v0.8.0 // indirect\n \tgoogle.golang.org/appengine v1.6.7 // indirect\n-\tgoogle.golang.org/protobuf v1.28.0 // indirect\n+\tgoogle.golang.org/protobuf v1.28.1 // indirect\n \tgopkg.in/yaml.v3 v3.0.1 // indirect\n )"
    },
    {
      "sha": "3b2b9524e0979f048c6d4f16c13d1cda43756f1f",
      "filename": "backend/go.sum",
      "status": "modified",
      "additions": 66,
      "deletions": 603,
      "changes": 669,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.sum?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,108 +1,36 @@\n-cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\n cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\n-cloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\n-cloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\n-cloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\n-cloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\n-cloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\n-cloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\n-cloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\n-cloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\n-cloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\n-cloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\n-cloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\n-cloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\n-cloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\n-cloud.google.com/go v0.72.0/go.mod h1:M+5Vjvlc2wnp6tjzE102Dw08nGShTscUx2nZMufOKPI=\n-cloud.google.com/go v0.74.0/go.mod h1:VV1xSbzvo+9QJOxLDaJfTjx5e+MePCpCWwvftOeQmWk=\n-cloud.google.com/go v0.78.0/go.mod h1:QjdrLG0uq+YwhjoVOLsS1t7TW8fs36kLs4XO5R5ECHg=\n-cloud.google.com/go v0.79.0/go.mod h1:3bzgcEeQlzbuEAYu4mrWhKqWjmpprinYgKJLgKHnbb8=\n-cloud.google.com/go v0.81.0/go.mod h1:mk/AM35KwGk/Nm2YSeZbxXdrNK3KZOYHmLkOqC2V6E0=\n-cloud.google.com/go v0.83.0/go.mod h1:Z7MJUsANfY0pYPdw0lbnivPx4/vhy/e2FEkSkF7vAVY=\n-cloud.google.com/go v0.84.0/go.mod h1:RazrYuxIK6Kb7YrzzhPoLmCVzl7Sup4NrbKPg8KHSUM=\n-cloud.google.com/go v0.87.0/go.mod h1:TpDYlFy7vuLzZMMZ+B6iRiELaY7z/gJPaqbMx6mlWcY=\n-cloud.google.com/go v0.90.0/go.mod h1:kRX0mNRHe0e2rC6oNakvwQqzyDmg57xJ+SZU1eT2aDQ=\n-cloud.google.com/go v0.93.3/go.mod h1:8utlLll2EF5XMAV15woO4lSbWQlk8rer9aLOfLh7+YI=\n-cloud.google.com/go v0.94.1/go.mod h1:qAlAugsXlC+JWO+Bke5vCtc9ONxjQT3drlTTnAplMW4=\n-cloud.google.com/go v0.97.0/go.mod h1:GF7l59pYBVlXQIBLx3a761cZ41F9bBH3JUlihCt2Udc=\n-cloud.google.com/go v0.99.0/go.mod h1:w0Xx2nLzqWJPuozYQX+hFfCSI8WioryfRDzkoI/Y2ZA=\n-cloud.google.com/go v0.100.2 h1:t9Iw5QH5v4XtlEQaCtUY7x6sCABps8sW0acw7e2WQ6Y=\n-cloud.google.com/go v0.100.2/go.mod h1:4Xra9TjzAeYHrl5+oeLlzbM2k3mjVhZh4UqTZ//w99A=\n-cloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\n-cloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\n-cloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\n-cloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\n-cloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\n-cloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\n-cloud.google.com/go/compute v0.1.0/go.mod h1:GAesmwr110a34z04OlxYkATPBEfVhkymfTBXtfbBFow=\n-cloud.google.com/go/compute v1.3.0/go.mod h1:cCZiE1NHEtai4wiufUhW8I8S1JKkAnhnQJWM7YD99wM=\n-cloud.google.com/go/compute v1.5.0/go.mod h1:9SMHyhJlzhlkJqrPAc839t2BZFTSk6Jdj6mkzQJeu0M=\n-cloud.google.com/go/compute v1.6.0/go.mod h1:T29tfhtVbq1wvAPo0E3+7vhgmkOYeXjhFvz/FMzPu0s=\n-cloud.google.com/go/compute v1.6.1 h1:2sMmt8prCn7DPaG4Pmh0N3Inmc8cT8ae5k1M6VJ9Wqc=\n-cloud.google.com/go/compute v1.6.1/go.mod h1:g85FgpzFvNULZ+S8AYq87axRKuf2Kh7deLqV/jJ3thU=\n-cloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\n-cloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\n-cloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\n-cloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\n-cloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\n-cloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\n-cloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\n-cloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\n-cloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\n-cloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\n-cloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\n-dmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\n-github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\n-github.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\n+cloud.google.com/go/compute v1.14.0 h1:hfm2+FfxVmnRlh6LpB7cg1ZNU+5edAHmW679JePztk0=\n+cloud.google.com/go/compute v1.14.0/go.mod h1:YfLtxrj9sU4Yxv+sXzZkyPjEyPBZfXHUvjxega5vAdo=\n+cloud.google.com/go/compute/metadata v0.2.3 h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=\n+cloud.google.com/go/compute/metadata v0.2.3/go.mod h1:VAV5nSsACxMJvgaAuX6Pk2AawlZn8kiOGuCv6gTkwuA=\n github.com/Depado/bfchroma/v2 v2.0.0 h1:IRpN9BPkNwEpR6w1ectIcNWOuhDSLx+8f1pn83fzxx8=\n github.com/Depado/bfchroma/v2 v2.0.0/go.mod h1:wFwW/Pw8Tnd0irzgO9Zxtxgzp3aPS8qBWlyadxujxmw=\n-github.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=\n-github.com/PuerkitoBio/goquery v1.8.0 h1:PJTF7AmFCFKk1N6V6jmKfrNH9tV5pNE6lZMkG0gta/U=\n-github.com/PuerkitoBio/goquery v1.8.0/go.mod h1:ypIiRMtY7COPGk+I/YbZLbxsxn9g5ejnI2HSMtkjZvI=\n+github.com/PuerkitoBio/goquery v1.8.1 h1:uQxhNlArOIdbrH1tr0UXwdVFgDcZDrZVdcpygAcwmWM=\n+github.com/PuerkitoBio/goquery v1.8.1/go.mod h1:Q8ICL1kNUJ2sXGoAhPGUdYDJvgQgHzJsnnd3H7Ho5jQ=\n github.com/ajg/form v1.5.1 h1:t9c7v8JUKu/XxOGBU0yjNpaMloxGEJhUkqFRq0ibGeU=\n github.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\n-github.com/alecthomas/chroma/v2 v2.2.0/go.mod h1:vf4zrexSH54oEjJ7EdB65tGNHmH3pGZmVkgTP5RHvAs=\n-github.com/alecthomas/chroma/v2 v2.3.0 h1:83xfxrnjv8eK+Cf8qZDzNo3PPF9IbTWHs7z28GY6D0U=\n-github.com/alecthomas/chroma/v2 v2.3.0/go.mod h1:mZxeWZlxP2Dy+/8cBob2PYd8O2DwNAzave5AY7A2eQw=\n-github.com/alecthomas/chroma/v2 v2.4.0 h1:Loe2ZjT5x3q1bcWwemqyqEi8p11/IV/ncFCeLYDpWC4=\n-github.com/alecthomas/chroma/v2 v2.4.0/go.mod h1:6kHzqF5O6FUSJzBXW7fXELjb+e+7OXW4UpoPqMO7IBQ=\n-github.com/alecthomas/repr v0.0.0-20220113201626-b1b626ac65ae/go.mod h1:2kn6fqh/zIyPLmm3ugklbEi5hg5wS435eygvNfaDQL8=\n-github.com/alecthomas/repr v0.1.0 h1:ENn2e1+J3k09gyj2shc0dHr/yjaWSHRlrJ4DPMevDqE=\n-github.com/alecthomas/repr v0.1.0/go.mod h1:2kn6fqh/zIyPLmm3ugklbEi5hg5wS435eygvNfaDQL8=\n+github.com/alecthomas/assert/v2 v2.2.1 h1:XivOgYcduV98QCahG8T5XTezV5bylXe+lBxLG2K2ink=\n+github.com/alecthomas/chroma/v2 v2.7.0 h1:hm1rY6c/Ob4eGclpQ7X/A3yhqBOZNUTk9q+yhyLIViI=\n+github.com/alecthomas/chroma/v2 v2.7.0/go.mod h1:yrkMI9807G1ROx13fhe1v6PN2DDeaR73L3d+1nmYQtw=\n+github.com/alecthomas/repr v0.2.0 h1:HAzS41CIzNW5syS8Mf9UwXhNH1J9aix/BvDRf1Ml2Yk=\n github.com/alicebob/gopher-json v0.0.0-20200520072559-a9ecdc9d1d3a h1:HbKu58rmZpUGpz5+4FfNmIU+FmZg2P3Xaj2v2bfNWmk=\n github.com/alicebob/gopher-json v0.0.0-20200520072559-a9ecdc9d1d3a/go.mod h1:SGnFV6hVsYE877CKEZ6tDNTjaSXYUk6QqoIK6PrAtcc=\n-github.com/alicebob/miniredis/v2 v2.23.1 h1:jR6wZggBxwWygeXcdNyguCOCIjPsZyNUNlAkTx2fu0U=\n-github.com/alicebob/miniredis/v2 v2.23.1/go.mod h1:84TWKZlxYkfgMucPBf5SOQBYJceZeQRFIaQgNMiCX6Q=\n+github.com/alicebob/miniredis/v2 v2.22.0 h1:lIHHiSkEyS1MkKHCHzN+0mWrA4YdbGdimE5iZ2sHSzo=\n+github.com/alicebob/miniredis/v2 v2.22.0/go.mod h1:XNqvJdQJv5mSuVMc0ynneafpnL/zv52acZ6kqeS0t88=\n github.com/andybalholm/brotli v1.0.4 h1:V7DdXeJtZscaqfNuAdSRuRFzuiKlHSC/Zh3zl9qY3JY=\n github.com/andybalholm/brotli v1.0.4/go.mod h1:fO7iG3H7G2nSZ7m0zPUDn85XEX2GTukHGRSepvi9Eig=\n github.com/andybalholm/cascadia v1.3.1 h1:nhxRkql1kdYCc8Snf7D5/D3spOX+dBgjA6u8x004T2c=\n github.com/andybalholm/cascadia v1.3.1/go.mod h1:R4bJ1UQfqADjvDa4P6HZHLh/3OxWWEqc0Sk8XGwHqvA=\n-github.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=\n github.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=\n github.com/aymerick/douceur v0.2.0/go.mod h1:wlT5vV2O3h55X9m7iVYN0TBM0NH/MmbLnd30/FjWUq4=\n-github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\n-github.com/cespare/xxhash v1.1.0 h1:a6HrQnmkObjyL+Gs60czilIUGqrzKutQD6XZog3p+ko=\n-github.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=\n-github.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\n github.com/cespare/xxhash/v2 v2.1.2 h1:YRXhKfTDauu4ajMg1TPgFO5jnlC2HCbmLXMcTG5cbYE=\n github.com/cespare/xxhash/v2 v2.1.2/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\n github.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\n github.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\n github.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\n-github.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\n-github.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\n-github.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\n-github.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\n-github.com/cncf/udpa/go v0.0.0-20210930031921-04548b0d99d4/go.mod h1:6pvJx4me5XPnfI9Z40ddWsdw2W/uZgQLFXToKeRcDiI=\n-github.com/cncf/xds/go v0.0.0-20210312221358-fbca930ec8ed/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\n-github.com/cncf/xds/go v0.0.0-20210805033703-aa0b78936158/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\n-github.com/cncf/xds/go v0.0.0-20210922020428-25de7278fc84/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\n-github.com/cncf/xds/go v0.0.0-20211011173535-cb28da3451f1/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\n github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\n github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n-github.com/dghubble/oauth1 v0.7.1 h1:JjbOVSVVkms9A4h/sTQy5Jb2nFuAAVb2qVYgenJPyrE=\n-github.com/dghubble/oauth1 v0.7.1/go.mod h1:0eEzON0UY/OLACQrmnjgJjmvCGXzjBCsZqL1kWDXtF0=\n github.com/dghubble/oauth1 v0.7.2 h1:pwcinOZy8z6XkNxvPmUDY52M7RDPxt0Xw1zgZ6Cl5JA=\n github.com/dghubble/oauth1 v0.7.2/go.mod h1:9erQdIhqhOHG/7K9s/tgh9Ks/AfoyrO5mW/43Lu2+kE=\n github.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f h1:lO4WD4F/rVNCu3HqELle0jiPLLBs70cWOduZpkS1E78=\n@@ -114,15 +42,6 @@ github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f h1:jtKwihcLmUC\n github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f/go.mod h1:q9C80dnsuVRP2dAskjnXRNWdUJqtGgwG9wNrzt0019s=\n github.com/dlclark/regexp2 v1.4.0 h1:F1rxgk7p4uKjwIQxBs9oAXe5CqrXlCduYEJvrF4u93E=\n github.com/dlclark/regexp2 v1.4.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n-github.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\n-github.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\n-github.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\n-github.com/envoyproxy/go-control-plane v0.9.7/go.mod h1:cwu0lG7PUMfa9snN8LXBig5ynNVH9qI8YYLbd1fK2po=\n-github.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\n-github.com/envoyproxy/go-control-plane v0.9.9-0.20210217033140-668b12f5399d/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\n-github.com/envoyproxy/go-control-plane v0.9.9-0.20210512163311-63b5d3c536b0/go.mod h1:hliV/p42l8fGbc6Y9bQ70uLwIvmJyVE5k4iMKlh8wCQ=\n-github.com/envoyproxy/go-control-plane v0.9.10-0.20210907150352-cf90f659a021/go.mod h1:AFq3mo9L8Lqqiid3OhADV3RfLJnjiw63cSpi+fDTRC0=\n-github.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\n github.com/fasthttp-contrib/websocket v0.0.0-20160511215533-1f3b11f56072/go.mod h1:duJ4Jxv5lDcvg4QuQr0oowTf7dz4/CR8NtyCooz9HL8=\n github.com/fatih/structs v1.1.0 h1:Q7juDM0QtcnhCpeyLGQKyg4TOIghuNXrkL32pHAUMxo=\n github.com/fatih/structs v1.1.0/go.mod h1:9NiDSp5zOcgEDl+j00MP/WkGVPOlPRLejGD8Ga6PJ7M=\n@@ -131,8 +50,6 @@ github.com/fsnotify/fsnotify v1.4.9 h1:hsms1Qyu0jgnwNXIxa+/V/PDsU6CfLf6CNO8H7IWo\n github.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\n github.com/gavv/httpexpect v2.0.0+incompatible h1:1X9kcRshkSKEjNJJxX9Y9mQ5BRfbxU5kORdjhlA1yX8=\n github.com/gavv/httpexpect v2.0.0+incompatible/go.mod h1:x+9tiU1YnrOvnB725RkpoLv1M62hOWzwo5OXotisrKc=\n-github.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\n-github.com/go-chi/chi/v5 v5.0.7 h1:rDTPXLDHGATaeHvVlLcR4Qe0zftYethFucbjVQ1PxU8=\n github.com/go-chi/chi/v5 v5.0.7/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n github.com/go-chi/chi/v5 v5.0.8 h1:lD+NLqFcAi1ovnVZpsnObHGW4xb4J8lNmoYVfECH1Y0=\n github.com/go-chi/chi/v5 v5.0.8/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n@@ -141,35 +58,25 @@ github.com/go-chi/cors v1.2.1/go.mod h1:sSbTewc+6wYHBBCW7ytsFSn836hqM7JxpglAy2Vz\n github.com/go-chi/render v1.0.1/go.mod h1:pq4Rr7HbnsdaeHagklXub+p6Wd16Af5l9koip1OvJns=\n github.com/go-chi/render v1.0.2 h1:4ER/udB0+fMWB2Jlf15RV3F4A2FDuYi/9f+lFttR/Lg=\n github.com/go-chi/render v1.0.2/go.mod h1:/gr3hVkmYR0YlEy3LxCuVRFzEu9Ruok+gFqbIofjao0=\n-github.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\n-github.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\n-github.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\n-github.com/go-oauth2/oauth2/v4 v4.5.1 h1:3vxp+cjLqDe1TbogbwtMyeHRHr1tD+ksrK7xNppYRDs=\n-github.com/go-oauth2/oauth2/v4 v4.5.1/go.mod h1:wk/2uLImWIa9VVQDgxz99H2GDbhmfi/9/Xr+GvkSUSQ=\n-github.com/go-pkgz/auth v1.20.1-0.20221226231300-65f433fba0f1 h1:MJA4rZAwjd+KpaR2PqrxeDPloNu9Wml1UVQjL2fOtVM=\n-github.com/go-pkgz/auth v1.20.1-0.20221226231300-65f433fba0f1/go.mod h1:fG1CP4+LDPnebYeO1BAZg/euTQQ8cnGn+5ZrXvJfckA=\n-github.com/go-pkgz/auth v1.20.1-0.20230103203948-168bd5a101b7 h1:ktKI3Y3UytkBLL1cOEzJmAi3nNKeaRGOzDj51Kgqp6M=\n-github.com/go-pkgz/auth v1.20.1-0.20230103203948-168bd5a101b7/go.mod h1:fG1CP4+LDPnebYeO1BAZg/euTQQ8cnGn+5ZrXvJfckA=\n-github.com/go-pkgz/auth v1.20.1-0.20230115185815-90b4b947ab05 h1:AVT3lrGI0V9zHpeM0SK/ybFP8VmA6ZLvxtcJeSzH1X0=\n-github.com/go-pkgz/auth v1.20.1-0.20230115185815-90b4b947ab05/go.mod h1:ERRbvtLARasBHop3BOY7Cm6iAqu6bfJ3qDGcmg+zqAA=\n-github.com/go-pkgz/email v0.3.1-0.20221002173339-19d25a20d99c/go.mod h1:TpnmSLkQW3FyICit2hn7WIhCUDrhCX6btzz5wS3wHRI=\n+github.com/go-oauth2/oauth2/v4 v4.5.2 h1:CuZhD3lhGuI6aNLyUbRHXsgG2RwGRBOuCBfd4WQKqBQ=\n+github.com/go-oauth2/oauth2/v4 v4.5.2/go.mod h1:wk/2uLImWIa9VVQDgxz99H2GDbhmfi/9/Xr+GvkSUSQ=\n+github.com/go-pkgz/auth v1.21.0 h1:XMb1WmHzYZw8x+hI0LdR+fG4u929yIK2Jx1S7yfYE0M=\n+github.com/go-pkgz/auth v1.21.0/go.mod h1:igeH/aExq5nD8rsuvLJ+wSat4eHaGIAb8A3Ct6NFJzE=\n github.com/go-pkgz/email v0.4.1 h1:2vtP2gibsSzqhz6eD5DklSp11m657XEVf17fuXaxMvk=\n github.com/go-pkgz/email v0.4.1/go.mod h1:BdxglsQnymzhfdbnncEE72a6DrucZHy6I+42LK2jLEc=\n github.com/go-pkgz/expirable-cache v0.1.0 h1:3bw0m8vlTK8qlwz5KXuygNBTkiKRTPrAGXU0Ej2AC1g=\n github.com/go-pkgz/expirable-cache v0.1.0/go.mod h1:GTrEl0X+q0mPNqN6dtcQXksACnzCBQ5k/k1SwXJsZKs=\n github.com/go-pkgz/jrpc v0.3.0 h1:Fls38KqPsHzvp0FWfivr6cGnncC+iFBodHBqvUPY+0U=\n github.com/go-pkgz/jrpc v0.3.0/go.mod h1:MFtKs75JESiSqVicsQkgN2iDFFuCd3gVT1/vKiwRi00=\n-github.com/go-pkgz/lcw v1.0.3-0.20221226231215-a66ea7c4aff7 h1:PJ1JEt2G0Dn7OUkLEgbNIrABRcbkCPM8v58BIBOSkm8=\n-github.com/go-pkgz/lcw v1.0.3-0.20221226231215-a66ea7c4aff7/go.mod h1:adhOCEhc8G6+Bd992MMp0h796aBxZ/b4feUGU5twkRU=\n-github.com/go-pkgz/lgr v0.10.4 h1:l7qyFjqEZgwRgaQQSEp6tve4A3OU80VrfzpvtEX8ngw=\n-github.com/go-pkgz/lgr v0.10.4/go.mod h1:CD0s1z6EFpIUplV067gitF77tn25JItzwHNKAPqeCF0=\n+github.com/go-pkgz/lcw v1.0.2 h1:68T8xRkVWSo1KIbMfFXBY1xbFF3XWl7YD+ub3jkUlNE=\n+github.com/go-pkgz/lcw v1.0.2/go.mod h1:CPJJzunpmGToOtD0Ga82TV152eL69sYEIIPcy9fbxlU=\n+github.com/go-pkgz/lgr v0.11.0 h1:9XH5o+vj09L0sRWEswIGK1lJ6g07xVB4/Z28RV9Z+qM=\n+github.com/go-pkgz/lgr v0.11.0/go.mod h1:4rdRmMSs4yGFjnUg0rSDbKx21LmFNZoH4y8OLl3qDnU=\n github.com/go-pkgz/notify v0.2.0 h1:mxHjcLc3goT+k1qnBPJ06PpNuVUDcu21Xy+6hEo4IaU=\n github.com/go-pkgz/notify v0.2.0/go.mod h1:uB4bcohkZB+P8zT279KQv5aXqQEkeMXI3Ey0Y3r0SQk=\n github.com/go-pkgz/repeater v1.1.3 h1:q6+JQF14ESSy28Dd7F+wRelY4F+41HJ0LEy/szNnMiE=\n github.com/go-pkgz/repeater v1.1.3/go.mod h1:hVTavuO5x3Gxnu8zW7d6sQBfAneKV8X2FjU48kGfpKw=\n github.com/go-pkgz/rest v1.15.6/go.mod h1:KUWAqbDteYGS/CiXftomQsKjtEOifXsJ36Ka0skYbmk=\n-github.com/go-pkgz/rest v1.16.0 h1:3An51XJXUq1XtICHvfAEp048ZCbUHBEga3g0WEu3zK0=\n-github.com/go-pkgz/rest v1.16.0/go.mod h1:HHlLOt02NJc2sgffXBF6hYVMcRo4Gz3vjg43zTzN7VM=\n github.com/go-pkgz/rest v1.17.0 h1:LoBI/lDBMuqwWhOOkc6thM9NnwJO+K9nWvCOjZ7BAgE=\n github.com/go-pkgz/rest v1.17.0/go.mod h1:HHlLOt02NJc2sgffXBF6hYVMcRo4Gz3vjg43zTzN7VM=\n github.com/go-pkgz/syncs v1.2.0 h1:aiizQFILlMZ4KtRNaYLcDffRbUQZH9fclsgr5KybWyY=\n@@ -183,138 +90,68 @@ github.com/go-test/deep v1.0.4/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3a\n github.com/golang-jwt/jwt v3.2.1+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=\n github.com/golang-jwt/jwt v3.2.2+incompatible h1:IfV12K8xAKAnZqdXVzCZ+TOjboZ2keLg81eXfW3O+oY=\n github.com/golang-jwt/jwt v3.2.2+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=\n-github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\n-github.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\n-github.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\n-github.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\n-github.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\n-github.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\n-github.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\n-github.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\n-github.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\n-github.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\n-github.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\n-github.com/golang/mock v1.5.0/go.mod h1:CWnOUgYIOo4TcNZ0wHX3YZCqsaM1I1Jvs6v3mP3KVu8=\n-github.com/golang/mock v1.6.0/go.mod h1:p6yTPP+5HYm5mzsMV8JkE6ZKdX+/wYM6Hr+LicevLPs=\n github.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\n github.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\n-github.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\n-github.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\n-github.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\n-github.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\n github.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\n github.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\n github.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\n github.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\n github.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\n-github.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\n github.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\n-github.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\n github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\n-github.com/golang/protobuf v1.5.1/go.mod h1:DopwsBzvsk0Fs44TXzsVbJyPhcCPeIwnvohx4u74HPM=\n github.com/golang/protobuf v1.5.2 h1:ROPKBNFfQgOUMifHyP+KYbvpjbdoFNs+aK7DXlji0Tw=\n github.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\n+github.com/golang/snappy v0.0.1 h1:Qgr9rKW7uDUkrbSmQeiDsGa8SjGyCOGtuasMWwvp2P4=\n github.com/golang/snappy v0.0.1/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\n-github.com/golang/snappy v0.0.3/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\n-github.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\n-github.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\n-github.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\n-github.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\n-github.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\n github.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\n github.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\n github.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n-github.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n-github.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n-github.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n github.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n-github.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n-github.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n-github.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n-github.com/google/go-cmp v0.5.7 h1:81/ik6ipDQS2aGcBfIN5dHDB36BwrStyeAQquSYCV4o=\n github.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=\n+github.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\n github.com/google/go-querystring v1.0.0 h1:Xkwi/a1rcvNg1PPYe5vI8GbeBY/jrVuDX5ASuANWTrk=\n github.com/google/go-querystring v1.0.0/go.mod h1:odCYkC5MyYFN7vkCjXpyrEuKhc/BUO6wN/zVPAxq5ck=\n-github.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\n-github.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\n-github.com/google/martian/v3 v3.1.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\n-github.com/google/martian/v3 v3.2.1/go.mod h1:oBOf6HBosgwRXnUGWUB05QECsc6uvmMiJ3+6W4l/CUk=\n-github.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\n-github.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\n-github.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\n-github.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\n-github.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\n-github.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\n-github.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\n-github.com/google/pprof v0.0.0-20201023163331-3e6fc7fc9c4c/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\n-github.com/google/pprof v0.0.0-20201203190320-1bf35d6f28c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\n-github.com/google/pprof v0.0.0-20210122040257-d980be63207e/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\n-github.com/google/pprof v0.0.0-20210226084205-cbba55b83ad5/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\n github.com/google/pprof v0.0.0-20210407192527-94a9f03dee38/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\n-github.com/google/pprof v0.0.0-20210601050228-01bbb1931b22/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\n-github.com/google/pprof v0.0.0-20210609004039-a478d1d731e9/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\n-github.com/google/pprof v0.0.0-20210720184732-4bb14d4b1be1/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\n-github.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\n github.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n-github.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n github.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\n github.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n-github.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\n-github.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\n-github.com/googleapis/gax-go/v2 v2.1.0/go.mod h1:Q3nei7sK6ybPYH7twZdmQpAd1MKb7pfu6SK+H1/DsU0=\n-github.com/googleapis/gax-go/v2 v2.1.1/go.mod h1:hddJymUZASv3XPyGkUpKj8pPO47Rmb0eJc8R6ouapiM=\n-github.com/googleapis/gax-go/v2 v2.2.0/go.mod h1:as02EH8zWkzwUoLbBaFeQ+arQaj/OthfcblKl4IGNaM=\n-github.com/googleapis/gax-go/v2 v2.3.0/go.mod h1:b8LNqSzNabLiUpXKkY7HAR5jr6bIT99EXz9pXxye9YM=\n github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\n github.com/gorilla/css v1.0.0 h1:BQqNyPTi50JCFMTw/b67hByjMVXZRwGha6wxVGkeihY=\n github.com/gorilla/css v1.0.0/go.mod h1:Dn721qIggHpt4+EFCcTLTU/vk5ySda2ReITrtgBl60c=\n github.com/gorilla/feeds v1.1.1 h1:HwKXxqzcRNg9to+BbvJog4+f3s/xzvtZXICcQGutYfY=\n github.com/gorilla/feeds v1.1.1/go.mod h1:Nk0jZrvPFZX1OBe5NPiddPw7CfwF6Q9eqzaBbaightA=\n+github.com/gorilla/websocket v1.4.2 h1:+/TMaTYc4QFitKJxsQ7Yye35DkWvkdLcvGKqM+x0Ufc=\n github.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\n-github.com/gorilla/websocket v1.5.0 h1:PPwGk2jz7EePpoHN/+ClbZu8SPxiqlu12wZP/3sWmnc=\n-github.com/gorilla/websocket v1.5.0/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\n-github.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=\n+github.com/hashicorp/errwrap v1.0.0 h1:hLrqtEDnRye3+sgx6z4qVLNuviH3MR5aQ0ykNJa/UYA=\n github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\n-github.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\n-github.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\n github.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\n github.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\n-github.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\n-github.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\n-github.com/hashicorp/golang-lru v0.6.0 h1:uL2shRDx7RTrOrTCUZEGP/wJUFiUI8QT6E7z5o8jga4=\n-github.com/hashicorp/golang-lru v0.6.0/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\n+github.com/hashicorp/golang-lru v0.5.4 h1:YDjusn29QI/Das2iO9M0BHnIbxPeyuCHsjMW+lJfyTc=\n+github.com/hashicorp/golang-lru v0.5.4/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\n+github.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\n github.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\n-github.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\n github.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\n github.com/imkira/go-interpol v1.1.0 h1:KIiKr0VSG2CUW1hl1jpiyuzuJeKUUpC8iM1AIE7N1Vk=\n github.com/imkira/go-interpol v1.1.0/go.mod h1:z0h2/2T3XF8kyEPpRgJ3kmNv+C43p+I/CoI+jC3w2iA=\n github.com/jessevdk/go-flags v1.5.0 h1:1jKYvbxEjfUl0fmqTCOfonvskHHXMjBySTLW4y9LFvc=\n github.com/jessevdk/go-flags v1.5.0/go.mod h1:Fw0T6WPc1dYxT4mKEZRfG5kJhaTDP9pj1c2EWnYs/m4=\n-github.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\n-github.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\n github.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\n github.com/k0kubun/colorstring v0.0.0-20150214042306-9440f1994b88/go.mod h1:3w7q1U84EfirKl04SVQ/s7nPm1ZPhiXd34z40TNz36k=\n-github.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\n github.com/klauspost/compress v1.13.6/go.mod h1:/3/Vjq9QcHkK5uEr5lBEmyoZ1iFhe47etQ6QUkpK6sk=\n+github.com/klauspost/compress v1.15.0 h1:xqfchp4whNFxn5A4XFyyYtitiWI8Hy5EW59jEwcyL6U=\n github.com/klauspost/compress v1.15.0/go.mod h1:/3/Vjq9QcHkK5uEr5lBEmyoZ1iFhe47etQ6QUkpK6sk=\n-github.com/klauspost/compress v1.15.2 h1:3WH+AG7s2+T8o3nrM/8u2rdqUEcQhmga7smjrT41nAw=\n-github.com/klauspost/compress v1.15.2/go.mod h1:PhcZ0MbTNciWF3rruxRgKxI5NkcHHrHUDtV4Yw2GlzU=\n github.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\n github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\n github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\n github.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\n github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\n-github.com/kyokomi/emoji/v2 v2.2.10 h1:1z5eMVcxFifsmEoNpdeq4UahbcicgQ4FEHuzrCVwmiI=\n-github.com/kyokomi/emoji/v2 v2.2.10/go.mod h1:JUcn42DTdsXJo1SWanHh4HKDEyPaR5CqkmoirZZP9qE=\n-github.com/kyokomi/emoji/v2 v2.2.11 h1:Pf/ZWVTbnAVkHOLJLWjPxM/FmgyPe+d85cv/OLP5Yus=\n-github.com/kyokomi/emoji/v2 v2.2.11/go.mod h1:JUcn42DTdsXJo1SWanHh4HKDEyPaR5CqkmoirZZP9qE=\n+github.com/kyokomi/emoji/v2 v2.2.12 h1:sSVA5nH9ebR3Zji1o31wu3yOwD1zKXQA2z0zUyeit60=\n+github.com/kyokomi/emoji/v2 v2.2.12/go.mod h1:JUcn42DTdsXJo1SWanHh4HKDEyPaR5CqkmoirZZP9qE=\n github.com/mattn/go-colorable v0.1.7/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\n github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\n-github.com/microcosm-cc/bluemonday v1.0.20 h1:flpzsq4KU3QIYAYGV/szUat7H+GPOXR0B2JU5A1Wp8Y=\n-github.com/microcosm-cc/bluemonday v1.0.20/go.mod h1:yfBmMi8mxvaZut3Yytv+jTXRY8mxyjJ0/kQBTElld50=\n-github.com/microcosm-cc/bluemonday v1.0.21 h1:dNH3e4PSyE4vNX+KlRGHT5KrSvjeUkoNPwEORjffHJg=\n-github.com/microcosm-cc/bluemonday v1.0.21/go.mod h1:ytNkv4RrDrLJ2pqlsSI46O6IVXmZOBBD4SaJyDwwTkM=\n+github.com/microcosm-cc/bluemonday v1.0.23 h1:SMZe2IGa0NuHvnVNAZ+6B38gsTbi5e4sViiWJyDDqFY=\n+github.com/microcosm-cc/bluemonday v1.0.23/go.mod h1:mN70sk7UkkF8TUr2IGBpNN0jAgStuPzlK76QuruE/z4=\n github.com/montanaflynn/stats v0.0.0-20171201202039-1bf9dbcd8cbe h1:iruDEfMl2E6fbMZ9s0scYfZQ84/6SPL6zC8ACM2oIL0=\n github.com/montanaflynn/stats v0.0.0-20171201202039-1bf9dbcd8cbe/go.mod h1:wL8QJuTMNUDYhXwkmfOly8iTdp5TEcJFWZD2D7SIkUc=\n github.com/moul/http2curl v1.0.0 h1:dRMWoAtb+ePxMlLkrCbAqh4TlPHXvoGUSQ323/9Zahs=\n@@ -340,9 +177,6 @@ github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\n github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n-github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\n-github.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=\n-github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\n github.com/rs/xid v1.4.0 h1:qd7wPTDkN6KQx2VmMBLrpHkiyQwgFXRnkOLacUiaSNY=\n github.com/rs/xid v1.4.0/go.mod h1:trrq9SKmegXys3aeAKXMUTdJsYXVwGY3RLcfgqegfbg=\n github.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\n@@ -356,7 +190,6 @@ github.com/slack-go/slack v0.11.3 h1:GN7revxEMax4amCc3El9a+9SGnjmBvSUobs0QnO6ZO8\n github.com/slack-go/slack v0.11.3/go.mod h1:hlGi5oXA+Gt+yWTPP0plCdRKmjsDxecdHxYQdlMQKOw=\n github.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\n github.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=\n-github.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=\n github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n github.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\n github.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\n@@ -368,8 +201,8 @@ github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/\n github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\n-github.com/stretchr/testify v1.8.1 h1:w7B6lhMri9wdJUVmEZPGGhZzrYTPvgJArz7wNPgYKsk=\n-github.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\n+github.com/stretchr/testify v1.8.2 h1:+h33VjcLVPDHtOdpUCuF+7gSuG3yGIftsP1YvFihtJ8=\n+github.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\n github.com/tidwall/btree v0.0.0-20191029221954-400434d76274 h1:G6Z6HvJuPjG6XfNGi/feOATzeJrfgTNJY+rGrHbA04E=\n github.com/tidwall/btree v0.0.0-20191029221954-400434d76274/go.mod h1:huei1BkDWJ3/sLXmO+bsCNELL+Bp2Kks9OLyQFkzvA8=\n github.com/tidwall/buntdb v1.1.2 h1:noCrqQXL9EKMtcdwJcmuVKSEjqu1ua99RHHgbLTEHRo=\n@@ -408,494 +241,134 @@ github.com/xeipuuv/gojsonschema v1.2.0 h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17\n github.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=\n github.com/yalp/jsonpath v0.0.0-20180802001716-5cc68e5049a0 h1:6fRhSjgLCkTD3JnJxvaJ4Sj+TYblw757bqYgZaOq5ZY=\n github.com/yalp/jsonpath v0.0.0-20180802001716-5cc68e5049a0/go.mod h1:/LWChgwKmvncFJFHJ7Gvn9wZArjbV5/FppcK2fKk/tI=\n+github.com/youmark/pkcs8 v0.0.0-20181117223130-1be2e3e5546d h1:splanxYIlg+5LfHAM6xpdFEAYOk8iySO56hMFq6uLyA=\n github.com/youmark/pkcs8 v0.0.0-20181117223130-1be2e3e5546d/go.mod h1:rHwXgn7JulP+udvsHwJoVG1YGAP6VLg4y9I5dyZdqmA=\n-github.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a h1:fZHgsYlfvtyqToslyjUt3VOPF4J7aK/3MPcK7xp3PDk=\n-github.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a/go.mod h1:ul22v+Nro/R083muKhosV54bj5niojjWZvU8xrevuH4=\n github.com/yudai/gojsondiff v1.0.0 h1:27cbfqXLVEJ1o8I6v3y9lg8Ydm53EKqHXAOMxEGlCOA=\n github.com/yudai/gojsondiff v1.0.0/go.mod h1:AY32+k2cwILAkW1fbgxQ5mUmMiZFgLIV+FBNExI05xg=\n github.com/yudai/golcs v0.0.0-20170316035057-ecda9a501e82 h1:BHyfKlQyqbsFN5p3IfnEUduWvb9is428/nNb5L3U01M=\n github.com/yudai/golcs v0.0.0-20170316035057-ecda9a501e82/go.mod h1:lgjkn3NuSvDfVJdfcVVdX+jpBxNmX4rDAzaS45IcYoM=\n github.com/yudai/pp v2.0.1+incompatible/go.mod h1:PuxR/8QJ7cyCkFp/aUDS+JY727OFEZkTdatxwunjIkc=\n-github.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\n-github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\n-github.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\n github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\n-github.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\n github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\n-github.com/yuin/gopher-lua v0.0.0-20220504180219-658193537a64 h1:5mLPGnFdSsevFRFc9q3yYbBkB6tsm4aCwwQV/j1JQAQ=\n-github.com/yuin/gopher-lua v0.0.0-20220504180219-658193537a64/go.mod h1:GBR0iDaNXjAgGg9zfCvksxSRnQx76gclCIb7kdAd1Pw=\n-go.etcd.io/bbolt v1.3.6 h1:/ecaJf0sk1l4l6V4awd65v2C3ILy7MSj+s/x1ADCIMU=\n-go.etcd.io/bbolt v1.3.6/go.mod h1:qXsaaIqmgQH0T+OPdb99Bf+PKfBBQVAdyD6TY9G8XM4=\n-go.mongodb.org/mongo-driver v1.10.2 h1:4Wk3cnqOrQCn0P92L3/mmurMxzdvWWs5J9jinAVKD+k=\n-go.mongodb.org/mongo-driver v1.10.2/go.mod h1:z4XpeoU6w+9Vht+jAFyLgVrD+jGSQQe0+CBWFHNiHt8=\n-go.mongodb.org/mongo-driver v1.11.1 h1:QP0znIRTuL0jf1oBQoAoM0C6ZJfBK4kx0Uumtv1A7w8=\n-go.mongodb.org/mongo-driver v1.11.1/go.mod h1:s7p5vEtfbeR1gYi6pnj3c3/urpbLv2T5Sfd6Rp2HBB8=\n-go.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\n-go.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\n-go.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\n-go.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\n-go.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\n-go.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=\n-go.opencensus.io v0.23.0/go.mod h1:XItmlyltB5F7CS4xOC1DcqMoFqwtC6OG2xF7mCv7P7E=\n-go.opentelemetry.io/proto/otlp v0.7.0/go.mod h1:PqfVotwruBrMGOCsRd/89rSnXhoiJIqeYNgFYFoEGnI=\n-go.uber.org/goleak v1.2.0 h1:xqgm/S+aQvhWFTtR0XK3Jvg7z8kGV8P4X14IzwN3Eqk=\n-go.uber.org/goleak v1.2.0/go.mod h1:XJYK+MuIchqpmGmUSAzotztawfKvYLUIgg7guXrwVUo=\n+github.com/yuin/gopher-lua v0.0.0-20210529063254-f4c35e4016d9 h1:k/gmLsJDWwWqbLCur2yWnJzwQEKRcAHXo6seXGuSwWw=\n+github.com/yuin/gopher-lua v0.0.0-20210529063254-f4c35e4016d9/go.mod h1:E1AXubJBdNmFERAOucpDIxNzeGfLzg0mYh+UfMWdChA=\n+go.etcd.io/bbolt v1.3.7 h1:j+zJOnnEjF/kyHlDDgGnVL/AIqIJPq8UoB2GSNfkUfQ=\n+go.etcd.io/bbolt v1.3.7/go.mod h1:N9Mkw9X8x5fupy0IKsmuqVtoGDyxsaDlbk4Rd05IAQw=\n+go.mongodb.org/mongo-driver v1.11.3 h1:Ql6K6qYHEzB6xvu4+AU0BoRoqf9vFPcc4o7MUIdPW8Y=\n+go.mongodb.org/mongo-driver v1.11.3/go.mod h1:PTSz5yu21bkT/wXpkS7WR5f0ddqw5quethTUn9WM+2g=\n+go.uber.org/goleak v1.2.1 h1:NBol2c7O1ZokfZ0LEU9K6Whx/KnwvepVetCUhtKja4A=\n+go.uber.org/goleak v1.2.1/go.mod h1:qlT2yGI9QafXHhZZLxlSuNsMw3FFLxBr+tBRlmO1xH4=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n-golang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\n-golang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\n golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\n-golang.org/x/crypto v0.0.0-20200302210943-78000ba7a073/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\n golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\n golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\n golang.org/x/crypto v0.0.0-20220214200702-86341886e292/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\n-golang.org/x/crypto v0.0.0-20220622213112-05595931fe9d h1:sK3txAijHtOK88l68nt020reeT1ZdKLIYetKl95FzVY=\n golang.org/x/crypto v0.0.0-20220622213112-05595931fe9d/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\n-golang.org/x/crypto v0.5.0 h1:U/0M97KRkSFvyD/3FSmdP5W5swImpNgle/EHFhOsQPE=\n-golang.org/x/crypto v0.5.0/go.mod h1:NK/OQwhpMQP3MwtdjgLlYHnH9ebylxKWv3e0fK+mkQU=\n-golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\n-golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\n-golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\n-golang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\n-golang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\n-golang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\n-golang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\n-golang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\n-golang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\n-golang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\n-golang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\n-golang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\n-golang.org/x/image v0.0.0-20220413100746-70e8d0d3baa9/go.mod h1:023OzeP/+EPmXeapQh35lcL3II3LrY8Ic+EFFKVhULM=\n-golang.org/x/image v0.0.0-20220617043117-41969df76e82 h1:KpZB5pUSBvrHltNEdK/tw0xlPeD13M6M6aGP32gKqiw=\n-golang.org/x/image v0.0.0-20220617043117-41969df76e82/go.mod h1:doUCurBvlfPMKfmIpRIywoHmhN3VyhnoFDbvIEWF4hY=\n-golang.org/x/image v0.3.0 h1:HTDXbdK9bjfSWkPzDJIw89W8CAtfFGduujWs33NLLsg=\n-golang.org/x/image v0.3.0/go.mod h1:fXd9211C/0VTlYuAcOhW8dY/RtEJqODXOWBDpmYBf+A=\n-golang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\n-golang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\n-golang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\n-golang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\n-golang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\n-golang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\n-golang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\n-golang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\n-golang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\n-golang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\n-golang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\n-golang.org/x/lint v0.0.0-20210508222113-6edffad5e616 h1:VLliZ0d+/avPrXXH+OakdXhpJuEoBZuwh1m2j7U6Iug=\n-golang.org/x/lint v0.0.0-20210508222113-6edffad5e616/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\n-golang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\n-golang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\n-golang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\n-golang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\n-golang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\n-golang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\n-golang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\n+golang.org/x/crypto v0.7.0 h1:AvwMYaRytfdeVt3u6mLaxYtErKYjxA2OXjJ1HHq6t3A=\n+golang.org/x/crypto v0.7.0/go.mod h1:pYwdfH91IfpZVANVyUOhSIPZaFoJGxTFbZhFTx+dXZU=\n+golang.org/x/image v0.6.0 h1:bR8b5okrPI3g/gyZakLZHeWxAR8Dn5CyxXv1hLH5g/4=\n+golang.org/x/image v0.6.0/go.mod h1:MXLdDR43H7cDJq5GEGXEVeeNhPgi+YYEQ2pC1byI1x0=\n golang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\n-golang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\n-golang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\n-golang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\n golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\n+golang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\n golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n-golang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n golang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n golang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n-golang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n golang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\n golang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\n-golang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\n-golang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\n golang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\n golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n-golang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n-golang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n-golang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n-golang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n-golang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n-golang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n-golang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n-golang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n-golang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\n-golang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\n-golang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\n-golang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\n golang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\n-golang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\n-golang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\n-golang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\n-golang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\n golang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\n-golang.org/x/net v0.0.0-20201031054903-ff519b6c9102/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\n-golang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\n-golang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\n-golang.org/x/net v0.0.0-20210119194325-5f4716e94777/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\n golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\n-golang.org/x/net v0.0.0-20210316092652-d523dce5a7f4/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=\n-golang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\n golang.org/x/net v0.0.0-20210428140749-89ef3d95e781/go.mod h1:OJAsFXCWl8Ukc7SiCT/9KSuxbyM7479/AVlXFRxuMCk=\n-golang.org/x/net v0.0.0-20210503060351-7fd8e65b6420/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\n golang.org/x/net v0.0.0-20210916014120-12bc252f5db8/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\n golang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\n-golang.org/x/net v0.0.0-20220127200216-cd36cc0744dd/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\n golang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\n-golang.org/x/net v0.0.0-20220325170049-de3da57026de/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\n-golang.org/x/net v0.0.0-20220412020605-290c469a71a5/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\n golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\n-golang.org/x/net v0.0.0-20220826154423-83b083e8dc8b h1:ZmngSVLe/wycRns9MKikG9OWIEjGcGAkacif7oYQaUY=\n-golang.org/x/net v0.0.0-20220826154423-83b083e8dc8b/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=\n-golang.org/x/net v0.5.0 h1:GyT4nK/YDHSqa1c4753ouYCDajOYKTja9Xb/OHtgvSw=\n-golang.org/x/net v0.5.0/go.mod h1:DivGGAXEgPSlEBzxGzZI+ZLohi+xUj054jfeKui00ws=\n-golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\n-golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n-golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n-golang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n+golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n+golang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n+golang.org/x/net v0.8.0 h1:Zrh2ngAOFYneWTAIAPethzeaQLuHwhuBkuV6ZiRnUaQ=\n+golang.org/x/net v0.8.0/go.mod h1:QVkue5JL9kW//ek3r6jTKnTFis1tRmNAW2P1shuFdJc=\n golang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n-golang.org/x/oauth2 v0.0.0-20200902213428-5d25da1a8d43/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\n-golang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\n-golang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\n-golang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\n-golang.org/x/oauth2 v0.0.0-20210220000619-9bb904979d93/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\n-golang.org/x/oauth2 v0.0.0-20210313182246-cd4f82c27b84/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\n-golang.org/x/oauth2 v0.0.0-20210514164344-f6687ab2804c/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\n-golang.org/x/oauth2 v0.0.0-20210628180205-a41e5a781914/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\n-golang.org/x/oauth2 v0.0.0-20210805134026-6f1e6394065a/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\n-golang.org/x/oauth2 v0.0.0-20210819190943-2bc19b11175f/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\n-golang.org/x/oauth2 v0.0.0-20211104180415-d3ed0bb246c8/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\n-golang.org/x/oauth2 v0.0.0-20220223155221-ee480838109b/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=\n-golang.org/x/oauth2 v0.0.0-20220309155454-6242fa91716a/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=\n-golang.org/x/oauth2 v0.0.0-20220411215720-9780585627b5 h1:OSnWWcOd/CtWQC2cYSBgbTSJv3ciqd8r54ySIW2y3RE=\n-golang.org/x/oauth2 v0.0.0-20220411215720-9780585627b5/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=\n-golang.org/x/oauth2 v0.4.0 h1:NF0gk8LVPg1Ml7SSbGyySuoxdsXitj7TvgvuRxIMc/M=\n-golang.org/x/oauth2 v0.4.0/go.mod h1:RznEsdpjGAINPTOF0UH/t+xJ75L18YO3Ho6Pyn+uRec=\n+golang.org/x/oauth2 v0.6.0 h1:Lh8GPgSKBfWSwFvtuWOfeI3aAAnbXTSutYxJiOJFgIw=\n+golang.org/x/oauth2 v0.6.0/go.mod h1:ycmewcwgD4Rpr3eZJLSB4Kyyljb3qDh40vJ8STE5HKw=\n golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n-golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n-golang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n-golang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n-golang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n-golang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n-golang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n-golang.org/x/sync v0.0.0-20210220032951-036812b2e83c h1:5KslGYwFpkhGh+Q16bwMP3cOontH8FOep7tGV86Y7SQ=\n golang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n-golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4 h1:uVc8UZUe6tr40fFVnUP5Oj+veunVezqYl9z7DYw9xzw=\n golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n-golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n+golang.org/x/sync v0.1.0 h1:wsuoTGHzEhffawBOhz5CYhcrV4IdKZbEyZjBMuTp12o=\n+golang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190204203706-41f3e6584952/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n-golang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200519105757-fe76b779f299/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200905004654-be1d3432aa8f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200923182605-d9f96fdee20d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20201201145000-ef89a241ccb3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210104204734-6f8348627aad/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210112080510-489259a85091/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210220050731-9a76102bfb43/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210305230114-8fe3ee5dd75b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210315160823-c6e025ad8005/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20210514084401-e8d321eab015/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20210603125802-9665404d3644/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20210806184541-e5e7981a1069/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20210823070655-63515b42dcdf/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20210908233432-aa78b53d3365/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20211124211545-fe61309f8881/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20211210111614-af8b64212486/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20220128215802-99c3d69c2c27/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20220209214540-3681064d5158/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20220227234510-4e6760a101f9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20220328115105-d36c6a25d886/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20220412211240-33da011f77ad/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10 h1:WIoqL4EROvwiPdUtaip4VcDdpZ4kha7wBWZrbVKCIZg=\n-golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.4.0 h1:Zr2JFtRQNX3BCZ8YtxRE9hNJYC8J6I1MVbMg6owUp18=\n-golang.org/x/sys v0.4.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n+golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n+golang.org/x/sys v0.6.0 h1:MVltZSvRTcU2ljQOhs94SXPftV6DCNnZViHeQps87pQ=\n+golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\n-golang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n+golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\n golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n-golang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n golang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\n golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\n-golang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\n-golang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\n golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\n-golang.org/x/text v0.3.7 h1:olpwvP2KacW1ZWvsR7uQhoyTYvKAupfQrRGBFM352Gk=\n golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\n-golang.org/x/text v0.6.0 h1:3XmdazWV+ubf7QgHSTWeykHOci5oeekaGJBLkrkaw4k=\n-golang.org/x/text v0.6.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\n-golang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\n-golang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\n-golang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\n+golang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\n+golang.org/x/text v0.8.0 h1:57P1ETyNKtuIjB4SRd15iJxuhj8Gc416Y78H3qgMh68=\n+golang.org/x/text v0.8.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\n golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\n-golang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\n-golang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\n-golang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\n-golang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\n-golang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\n golang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\n-golang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\n-golang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\n-golang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\n-golang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\n-golang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\n-golang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\n-golang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\n-golang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\n-golang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\n-golang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\n-golang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\n golang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\n-golang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\n-golang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\n-golang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\n-golang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\n-golang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\n-golang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\n-golang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\n-golang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\n-golang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\n-golang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\n-golang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\n-golang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\n-golang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\n-golang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\n-golang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\n-golang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\n-golang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\n-golang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\n-golang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\n-golang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\n-golang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\n-golang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\n-golang.org/x/tools v0.0.0-20200904185747-39188db58858/go.mod h1:Cj7w3i3Rnn0Xh82ur9kSqwfTHTeVxaDqrfMjpcNT6bE=\n-golang.org/x/tools v0.0.0-20201110124207-079ba7bd75cd/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\n-golang.org/x/tools v0.0.0-20201201161351-ac6f37ff4c2a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\n-golang.org/x/tools v0.0.0-20201208233053-a543418bbed2/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\n golang.org/x/tools v0.0.0-20201224043029-2b0845dc783e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\n-golang.org/x/tools v0.0.0-20210105154028-b0ab187a4818/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\n-golang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\n-golang.org/x/tools v0.1.1/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\n-golang.org/x/tools v0.1.2/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\n-golang.org/x/tools v0.1.3/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\n-golang.org/x/tools v0.1.4/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\n-golang.org/x/tools v0.1.5 h1:ouewzE6p+/VEB31YYnTbEJdi8pFqKp4P4n85vwo3DHA=\n-golang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\n-golang.org/x/tools v0.1.12 h1:VveCTK38A2rkS8ZqFY25HIDFscX5X9OoEhJd3quQmXU=\n golang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\n+golang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\n golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\n golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\n golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\n golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\n-golang.org/x/xerrors v0.0.0-20220411194840-2f41105eb62f h1:GGU+dLjvlC3qDwqYgL6UgRmHXhOOgns0bZu2Ty5mm6U=\n-golang.org/x/xerrors v0.0.0-20220411194840-2f41105eb62f/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\n-google.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\n-google.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\n-google.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\n-google.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\n-google.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\n-google.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\n-google.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\n-google.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\n-google.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\n-google.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\n-google.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\n-google.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\n-google.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\n-google.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\n-google.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\n-google.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\n-google.golang.org/api v0.35.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=\n-google.golang.org/api v0.36.0/go.mod h1:+z5ficQTmoYpPn8LCUNVpK5I7hwkpjbcgqA7I34qYtE=\n-google.golang.org/api v0.40.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=\n-google.golang.org/api v0.41.0/go.mod h1:RkxM5lITDfTzmyKFPt+wGrCJbVfniCr2ool8kTBzRTU=\n-google.golang.org/api v0.43.0/go.mod h1:nQsDGjRXMo4lvh5hP0TKqF244gqhGcr/YSIykhUk/94=\n-google.golang.org/api v0.47.0/go.mod h1:Wbvgpq1HddcWVtzsVLyfLp8lDg6AA241LmgIL59tHXo=\n-google.golang.org/api v0.48.0/go.mod h1:71Pr1vy+TAZRPkPs/xlCf5SsU8WjuAWv1Pfjbtukyy4=\n-google.golang.org/api v0.50.0/go.mod h1:4bNT5pAuq5ji4SRZm+5QIkjny9JAyVD/3gaSihNefaw=\n-google.golang.org/api v0.51.0/go.mod h1:t4HdrdoNgyN5cbEfm7Lum0lcLDLiise1F8qDKX00sOU=\n-google.golang.org/api v0.54.0/go.mod h1:7C4bFFOvVDGXjfDTAsgGwDgAxRDeQ4X8NvUedIt6z3k=\n-google.golang.org/api v0.55.0/go.mod h1:38yMfeP1kfjsl8isn0tliTjIb1rJXcQi4UXlbqivdVE=\n-google.golang.org/api v0.56.0/go.mod h1:38yMfeP1kfjsl8isn0tliTjIb1rJXcQi4UXlbqivdVE=\n-google.golang.org/api v0.57.0/go.mod h1:dVPlbZyBo2/OjBpmvNdpn2GRm6rPy75jyU7bmhdrMgI=\n-google.golang.org/api v0.61.0/go.mod h1:xQRti5UdCmoCEqFxcz93fTl338AVqDgyaDRuOZ3hg9I=\n-google.golang.org/api v0.63.0/go.mod h1:gs4ij2ffTRXwuzzgJl/56BdwJaA194ijkfn++9tDuPo=\n-google.golang.org/api v0.67.0/go.mod h1:ShHKP8E60yPsKNw/w8w+VYaj9H6buA5UqDp8dhbQZ6g=\n-google.golang.org/api v0.70.0/go.mod h1:Bs4ZM2HGifEvXwd50TtW70ovgJffJYw2oRCOFU/SkfA=\n-google.golang.org/api v0.71.0/go.mod h1:4PyU6e6JogV1f9eA4voyrTY2batOLdgZ5qZ5HOCc4j8=\n-google.golang.org/api v0.74.0/go.mod h1:ZpfMZOVRMywNyvJFeqL9HRWBgAuRfSjJFpe9QtRRyDs=\n-google.golang.org/api v0.75.0/go.mod h1:pU9QmyHLnzlpar1Mjt4IbapUCy8J+6HD6GeELN69ljA=\n-google.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\n google.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\n-google.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\n-google.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\n-google.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\n google.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\n google.golang.org/appengine v1.6.7 h1:FZR1q0exgwxzPzp/aF+VccGrSfxfPpkBqjIIEq3ru6c=\n google.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\n-google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\n-google.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\n-google.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\n-google.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\n-google.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\n-google.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\n-google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\n-google.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\n-google.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\n-google.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\n-google.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\n-google.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\n-google.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\n-google.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\n-google.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\n-google.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\n-google.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\n-google.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\n-google.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\n-google.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\n-google.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\n-google.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\n-google.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\n-google.golang.org/genproto v0.0.0-20200513103714-09dca8ec2884/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\n-google.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\n-google.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\n-google.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\n-google.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\n-google.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\n-google.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\n-google.golang.org/genproto v0.0.0-20200904004341-0bd0a958aa1d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\n-google.golang.org/genproto v0.0.0-20201109203340-2640f1f9cdfb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\n-google.golang.org/genproto v0.0.0-20201201144952-b05cb90ed32e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\n-google.golang.org/genproto v0.0.0-20201210142538-e3217bee35cc/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\n-google.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\n-google.golang.org/genproto v0.0.0-20210222152913-aa3ee6e6a81c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\n-google.golang.org/genproto v0.0.0-20210303154014-9728d6b83eeb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\n-google.golang.org/genproto v0.0.0-20210310155132-4ce2db91004e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\n-google.golang.org/genproto v0.0.0-20210319143718-93e7006c17a6/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\n-google.golang.org/genproto v0.0.0-20210402141018-6c239bbf2bb1/go.mod h1:9lPAdzaEmUacj36I+k7YKbEc5CXzPIeORRgDAUOu28A=\n-google.golang.org/genproto v0.0.0-20210513213006-bf773b8c8384/go.mod h1:P3QM42oQyzQSnHPnZ/vqoCdDmzH28fzWByN9asMeM8A=\n-google.golang.org/genproto v0.0.0-20210602131652-f16073e35f0c/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=\n-google.golang.org/genproto v0.0.0-20210604141403-392c879c8b08/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=\n-google.golang.org/genproto v0.0.0-20210608205507-b6d2f5bf0d7d/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=\n-google.golang.org/genproto v0.0.0-20210624195500-8bfb893ecb84/go.mod h1:SzzZ/N+nwJDaO1kznhnlzqS8ocJICar6hYhVyhi++24=\n-google.golang.org/genproto v0.0.0-20210713002101-d411969a0d9a/go.mod h1:AxrInvYm1dci+enl5hChSFPOmmUF1+uAa/UsgNRWd7k=\n-google.golang.org/genproto v0.0.0-20210716133855-ce7ef5c701ea/go.mod h1:AxrInvYm1dci+enl5hChSFPOmmUF1+uAa/UsgNRWd7k=\n-google.golang.org/genproto v0.0.0-20210728212813-7823e685a01f/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=\n-google.golang.org/genproto v0.0.0-20210805201207-89edb61ffb67/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=\n-google.golang.org/genproto v0.0.0-20210813162853-db860fec028c/go.mod h1:cFeNkxwySK631ADgubI+/XFU/xp8FD5KIVV4rj8UC5w=\n-google.golang.org/genproto v0.0.0-20210821163610-241b8fcbd6c8/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\n-google.golang.org/genproto v0.0.0-20210828152312-66f60bf46e71/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\n-google.golang.org/genproto v0.0.0-20210831024726-fe130286e0e2/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\n-google.golang.org/genproto v0.0.0-20210903162649-d08c68adba83/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\n-google.golang.org/genproto v0.0.0-20210909211513-a8c4777a87af/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\n-google.golang.org/genproto v0.0.0-20210924002016-3dee208752a0/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\n-google.golang.org/genproto v0.0.0-20211118181313-81c1377c94b1/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\n-google.golang.org/genproto v0.0.0-20211206160659-862468c7d6e0/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\n-google.golang.org/genproto v0.0.0-20211208223120-3a66f561d7aa/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\n-google.golang.org/genproto v0.0.0-20211221195035-429b39de9b1c/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\n-google.golang.org/genproto v0.0.0-20220126215142-9970aeb2e350/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\n-google.golang.org/genproto v0.0.0-20220207164111-0872dc986b00/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\n-google.golang.org/genproto v0.0.0-20220218161850-94dd64e39d7c/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=\n-google.golang.org/genproto v0.0.0-20220222213610-43724f9ea8cf/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=\n-google.golang.org/genproto v0.0.0-20220304144024-325a89244dc8/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=\n-google.golang.org/genproto v0.0.0-20220310185008-1973136f34c6/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=\n-google.golang.org/genproto v0.0.0-20220324131243-acbaeb5b85eb/go.mod h1:hAL49I2IFola2sVEjAn7MEwsja0xp51I0tlGAf9hz4E=\n-google.golang.org/genproto v0.0.0-20220407144326-9054f6ed7bac/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\n-google.golang.org/genproto v0.0.0-20220413183235-5e96e2839df9/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\n-google.golang.org/genproto v0.0.0-20220414192740-2d67ff6cf2b4/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\n-google.golang.org/genproto v0.0.0-20220421151946-72621c1f0bd3/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\n-google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\n-google.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\n-google.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\n-google.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\n-google.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\n-google.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\n-google.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\n-google.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\n-google.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\n-google.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\n-google.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\n-google.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\n-google.golang.org/grpc v1.31.1/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\n-google.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=\n-google.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\n-google.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=\n-google.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\n-google.golang.org/grpc v1.36.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\n-google.golang.org/grpc v1.36.1/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\n-google.golang.org/grpc v1.37.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\n-google.golang.org/grpc v1.37.1/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\n-google.golang.org/grpc v1.38.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\n-google.golang.org/grpc v1.39.0/go.mod h1:PImNr+rS9TWYb2O4/emRugxiyHZ5JyHW5F+RPnDzfrE=\n-google.golang.org/grpc v1.39.1/go.mod h1:PImNr+rS9TWYb2O4/emRugxiyHZ5JyHW5F+RPnDzfrE=\n-google.golang.org/grpc v1.40.0/go.mod h1:ogyxbiOoUXAkP+4+xa6PZSE9DZgIHtSpzjDTB9KAK34=\n-google.golang.org/grpc v1.40.1/go.mod h1:ogyxbiOoUXAkP+4+xa6PZSE9DZgIHtSpzjDTB9KAK34=\n-google.golang.org/grpc v1.44.0/go.mod h1:k+4IHHFw41K8+bbowsex27ge2rCb65oeWqe4jJ590SU=\n-google.golang.org/grpc v1.45.0/go.mod h1:lN7owxKUQEqMfSyQikvvk5tf/6zMPsrK+ONuO11+0rQ=\n-google.golang.org/grpc/cmd/protoc-gen-go-grpc v1.1.0/go.mod h1:6Kw0yEErY5E/yWrBtf03jp27GLLJujG4z/JK95pnjjw=\n google.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\n google.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\n google.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\n google.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\n google.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\n-google.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\n google.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\n-google.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\n-google.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\n-google.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\n google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\n google.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\n-google.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\n-google.golang.org/protobuf v1.28.0 h1:w43yiav+6bVFTBQFZX0r7ipe9JQ1QsbMgHwbBziscLw=\n-google.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\n+google.golang.org/protobuf v1.28.1 h1:d0NfwRgPtno5B1Wa6L2DAG+KivqkdutMf1UhdNx175w=\n+google.golang.org/protobuf v1.28.1/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\n gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n gopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15 h1:YR8cESwS4TdDjEe65xsg0ogRM/Nc3DYOhEAlW+xobZo=\n gopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n-gopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\n gopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\n gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\n gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\n gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\n-gopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\n gopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\n gopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\n gopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\n@@ -904,13 +377,3 @@ gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C\n gopkg.in/yaml.v3 v3.0.0-20200615113413-eeeca48fe776/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\n gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n-honnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n-honnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n-honnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n-honnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n-honnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\n-honnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\n-honnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\n-rsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\n-rsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\n-rsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA="
    },
    {
      "sha": "c9ba91825c29df7e0313f6b928c26e3300bcd1a6",
      "filename": "backend/vendor/cloud.google.com/go/compute/internal/version.go",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Finternal%2Fversion.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Finternal%2Fversion.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Finternal%2Fversion.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2022 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package internal\n+\n+// Version is the current tagged release of the library.\n+const Version = \"1.14.0\""
    },
    {
      "sha": "06b957349afd55e51b01ce79e4516f603fba0208",
      "filename": "backend/vendor/cloud.google.com/go/compute/metadata/CHANGES.md",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2FCHANGES.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2FCHANGES.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2FCHANGES.md?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,19 @@\n+# Changes\n+\n+## [0.2.3](https://github.com/googleapis/google-cloud-go/compare/compute/metadata/v0.2.2...compute/metadata/v0.2.3) (2022-12-15)\n+\n+\n+### Bug Fixes\n+\n+* **compute/metadata:** Switch DNS lookup to an absolute lookup ([119b410](https://github.com/googleapis/google-cloud-go/commit/119b41060c7895e45e48aee5621ad35607c4d021)), refs [#7165](https://github.com/googleapis/google-cloud-go/issues/7165)\n+\n+## [0.2.2](https://github.com/googleapis/google-cloud-go/compare/compute/metadata/v0.2.1...compute/metadata/v0.2.2) (2022-12-01)\n+\n+\n+### Bug Fixes\n+\n+* **compute/metadata:** Set IdleConnTimeout for http.Client ([#7084](https://github.com/googleapis/google-cloud-go/issues/7084)) ([766516a](https://github.com/googleapis/google-cloud-go/commit/766516aaf3816bfb3159efeea65aa3d1d205a3e2)), refs [#5430](https://github.com/googleapis/google-cloud-go/issues/5430)\n+\n+## [0.1.0] (2022-10-26)\n+\n+Initial release of metadata being it's own module."
    },
    {
      "sha": "d645695673349e3947e8e5ae42332d0ac3164cd7",
      "filename": "backend/vendor/cloud.google.com/go/compute/metadata/LICENSE",
      "status": "added",
      "additions": 202,
      "deletions": 0,
      "changes": 202,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2FLICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2FLICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2FLICENSE?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,202 @@\n+\n+                                 Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"[]\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright [yyyy] [name of copyright owner]\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License."
    },
    {
      "sha": "f940fb2c85b836fb3afbe6150461d56cee6df41c",
      "filename": "backend/vendor/cloud.google.com/go/compute/metadata/README.md",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2FREADME.md?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,27 @@\n+# Compute API\n+\n+[![Go Reference](https://pkg.go.dev/badge/cloud.google.com/go/compute.svg)](https://pkg.go.dev/cloud.google.com/go/compute/metadata)\n+\n+This is a utility library for communicating with Google Cloud metadata service\n+on Google Cloud.\n+\n+## Install\n+\n+```bash\n+go get cloud.google.com/go/compute/metadata\n+```\n+\n+## Go Version Support\n+\n+See the [Go Versions Supported](https://github.com/googleapis/google-cloud-go#go-versions-supported)\n+section in the root directory's README.\n+\n+## Contributing\n+\n+Contributions are welcome. Please, see the [CONTRIBUTING](https://github.com/GoogleCloudPlatform/google-cloud-go/blob/main/CONTRIBUTING.md)\n+document for details.\n+\n+Please note that this project is released with a Contributor Code of Conduct.\n+By participating in this project you agree to abide by its terms. See\n+[Contributor Code of Conduct](https://github.com/GoogleCloudPlatform/google-cloud-go/blob/main/CONTRIBUTING.md#contributor-code-of-conduct)\n+for more information."
    },
    {
      "sha": "c17faa142a44fbf403eba447676ad42bed81eed7",
      "filename": "backend/vendor/cloud.google.com/go/compute/metadata/metadata.go",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fmetadata.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fmetadata.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fmetadata.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -16,7 +16,7 @@\n // metadata and API service accounts.\n //\n // This package is a wrapper around the GCE metadata service,\n-// as documented at https://developers.google.com/compute/docs/metadata.\n+// as documented at https://cloud.google.com/compute/docs/metadata/overview.\n package metadata // import \"cloud.google.com/go/compute/metadata\"\n \n import (\n@@ -70,7 +70,9 @@ func newDefaultHTTPClient() *http.Client {\n \t\t\t\tTimeout:   2 * time.Second,\n \t\t\t\tKeepAlive: 30 * time.Second,\n \t\t\t}).Dial,\n+\t\t\tIdleConnTimeout: 60 * time.Second,\n \t\t},\n+\t\tTimeout: 5 * time.Second,\n \t}\n }\n \n@@ -145,7 +147,7 @@ func testOnGCE() bool {\n \n \tgo func() {\n \t\tresolver := &net.Resolver{}\n-\t\taddrs, err := resolver.LookupHost(ctx, \"metadata.google.internal\")\n+\t\taddrs, err := resolver.LookupHost(ctx, \"metadata.google.internal.\")\n \t\tif err != nil || len(addrs) == 0 {\n \t\t\tresc <- false\n \t\t\treturn"
    },
    {
      "sha": "4cef48500817ce0a06c0bbea5d3cd854b8100961",
      "filename": "backend/vendor/cloud.google.com/go/compute/metadata/tidyfix.go",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Ftidyfix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Ftidyfix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Ftidyfix.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2022 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// This file, and the {{.RootMod}} import, won't actually become part of\n+// the resultant binary.\n+//go:build modhack\n+// +build modhack\n+\n+package metadata\n+\n+// Necessary for safely adding multi-module repo. See: https://github.com/golang/go/wiki/Modules#is-it-possible-to-add-a-module-to-a-multi-module-repository\n+import _ \"cloud.google.com/go/compute/internal\""
    },
    {
      "sha": "582ccac90fec189d9177b0e53111d8425b7c5a79",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/README.md",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2FREADME.md?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -40,6 +40,7 @@ Please note that because of the net/html dependency, goquery requires Go1.1+ and\n \n **Note that goquery's API is now stable, and will not break.**\n \n+*    **2023-02-18 (v1.8.1)** : Update `go.mod` dependencies, update CI workflow.\n *    **2021-10-25 (v1.8.0)** : Add `Render` function to render a `Selection` to an `io.Writer` (thanks [@anthonygedeon](https://github.com/anthonygedeon)).\n *    **2021-07-11 (v1.7.1)** : Update go.mod dependencies and add dependabot config (thanks [@jauderho](https://github.com/jauderho)).\n *    **2021-06-14 (v1.7.0)** : Add `Single` and `SingleMatcher` functions to optimize first-match selection (thanks [@gdollardollar](https://github.com/gdollardollar)).\n@@ -154,6 +155,8 @@ func main() {\n - [Geziyor](https://github.com/geziyor/geziyor), a fast web crawling & scraping framework for Go. Supports JS rendering.\n - [Pagser](https://github.com/foolin/pagser), a simple, easy, extensible, configurable HTML parser to struct based on goquery and struct tags.\n - [stitcherd](https://github.com/vhodges/stitcherd), A server for doing server side includes using css selectors and DOM updates.\n+- [goskyr](https://github.com/jakopako/goskyr), an easily configurable command-line scraper written in Go.\n+- [goGetJS](https://github.com/davemolk/goGetJS), a tool for extracting, searching, and saving JavaScript files (with optional headless browser).\n \n ## Support\n "
    },
    {
      "sha": "ecd3453f7c8b0589f10a6a0a0282dddfb46a981f",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/utilities.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2Futilities.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2Futilities.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2Futilities.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -58,8 +58,8 @@ func nodeName(node *html.Node) string {\n \t}\n }\n \n-// Render renders the html of the first element from selector and writes it to\n-// the writer.  It behaves the same as OuterHtml but writes to w instead of\n+// Render renders the HTML of the first item in the selection and writes it to\n+// the writer. It behaves the same as OuterHtml but writes to w instead of\n // returning the string.\n func Render(w io.Writer, s *Selection) error {\n \tif s.Length() == 0 {\n@@ -73,7 +73,7 @@ func Render(w io.Writer, s *Selection) error {\n // the selection - that is, the HTML including the first element's\n // tag and attributes.\n //\n-// Unlike InnerHtml, this is a function and not a method on the Selection,\n+// Unlike Html, this is a function and not a method on the Selection,\n // because this is not a jQuery method (in javascript-land, this is\n // a property provided by the DOM).\n func OuterHtml(s *Selection) (string, error) {"
    },
    {
      "sha": "6ff4b070feb9814881b7b8e0bccdfd021176973e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/.gitignore",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.gitignore",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.gitignore?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -17,3 +17,4 @@\n _models/\n \n _examples/\n+*.min.*"
    },
    {
      "sha": "120ea7158c113b51c12b4a29a11927263ec9042a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/.golangci.yml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.golangci.yml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -48,6 +48,7 @@ linters:\n     - govet\n     - nosnakecase\n     - testableexamples\n+    - musttag\n \n linters-settings:\n   govet:"
    },
    {
      "sha": "fe7cb0bed4fed26c6e25a9272a28c1cc024ada69",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/Makefile",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FMakefile",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FMakefile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FMakefile?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,6 +1,8 @@\n .PHONY: chromad upload all\n \n VERSION ?= $(shell git describe --tags --dirty  --always)\n+export GOOS ?= linux\n+export GOARCH ?= amd64\n \n all: README.md tokentype_string.go\n \n@@ -12,7 +14,9 @@ tokentype_string.go: types.go\n \n chromad:\n \trm -f chromad\n-\t(export CGOENABLED=0 GOOS=linux GOARCH=amd64; cd ./cmd/chromad && go build -ldflags=\"-X 'main.version=$(VERSION)'\" -o ../../chromad .)\n+\tesbuild --bundle cmd/chromad/static/index.js --minify --outfile=cmd/chromad/static/index.min.js\n+\tesbuild --bundle cmd/chromad/static/index.css --minify --outfile=cmd/chromad/static/index.min.css\n+\t(export CGOENABLED=0 ; cd ./cmd/chromad && go build -ldflags=\"-X 'main.version=$(VERSION)'\" -o ../../chromad .)\n \n upload: chromad\n \tscp chromad root@swapoff.org: && \\"
    },
    {
      "sha": "3b057793795b2e097bd9296593ffae548b0c1f49",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/README.md",
      "status": "modified",
      "additions": 16,
      "deletions": 1,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -27,7 +27,8 @@ translators for Pygments lexers and styles.\n     2. [Formatters](#formatters)\n     3. [Styles](#styles)\n 6. [Command-line interface](#command-line-interface)\n-7. [What's missing compared to Pygments?](#whats-missing-compared-to-pygments)\n+7. [Testing lexers](#testing-lexers)\n+8. [What's missing compared to Pygments?](#whats-missing-compared-to-pygments)\n \n <!-- /TOC -->\n \n@@ -277,6 +278,20 @@ Debian and derivatives](https://manpages.debian.org/lesspipe#USER_DEFINED_FILTER\n for that setup the `chroma` executable can be just symlinked to `~/.lessfilter`.\n \n <a id=\"markdown-whats-missing-compared-to-pygments\" name=\"whats-missing-compared-to-pygments\"></a>\n+\n+<a id=\"markdown-testing-lexers\" name=\"testing-lexers\"></a>\n+## Testing lexers\n+If you edit some lexers and want to test it, open a shell in `cmd/chromad` and run:\n+```shell\n+go run .\n+```\n+A Link will be printed. Open it in your Browser. Now you can test on the Playground with your local changes.\n+\n+If you want to run the tests and the lexers, open a shell in the root directory and run:\n+```shell\n+go test ./lexers\n+```\n+\n ## What's missing compared to Pygments?\n \n - Quite a few lexers, for various reasons (pull-requests welcome):"
    },
    {
      "sha": "0ad6b31ce260642b1a0009af1f05a246d0b77b43",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/formatters/html/html.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatters%2Fhtml%2Fhtml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatters%2Fhtml%2Fhtml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatters%2Fhtml%2Fhtml.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -171,10 +171,10 @@ var (\n \tdefaultPreWrapper = preWrapper{\n \t\tstart: func(code bool, styleAttr string) string {\n \t\t\tif code {\n-\t\t\t\treturn fmt.Sprintf(`<pre tabindex=\"0\"%s><code>`, styleAttr)\n+\t\t\t\treturn fmt.Sprintf(`<pre%s><code>`, styleAttr)\n \t\t\t}\n \n-\t\t\treturn fmt.Sprintf(`<pre tabindex=\"0\"%s>`, styleAttr)\n+\t\t\treturn fmt.Sprintf(`<pre%s>`, styleAttr)\n \t\t},\n \t\tend: func(code bool) string {\n \t\t\tif code {\n@@ -513,7 +513,7 @@ func (f *Formatter) styleToCSS(style *chroma.Style) map[chroma.TokenType]string\n \tif f.wrapLongLines {\n \t\tclasses[chroma.PreWrapper] += `white-space: pre-wrap; word-break: break-word;`\n \t}\n-\tlineNumbersStyle := `white-space: pre; user-select: none; margin-right: 0.4em; padding: 0 0.4em 0 0.4em;`\n+\tlineNumbersStyle := `white-space: pre; -webkit-user-select: none; user-select: none; margin-right: 0.4em; padding: 0 0.4em 0 0.4em;`\n \t// All rules begin with default rules followed by user provided rules\n \tclasses[chroma.Line] = `display: flex;` + classes[chroma.Line]\n \tclasses[chroma.LineNumbers] = lineNumbersStyle + classes[chroma.LineNumbers]"
    },
    {
      "sha": "bea9393ab686c97e35e2fa0fce085f68613fe5dc",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/bashsession.go",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fbashsession.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fbashsession.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fbashsession.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,26 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// BashSession lexer.\n-var BashSession = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"BashSession\",\n-\t\tAliases:   []string{\"bash-session\", \"console\", \"shell-session\"},\n-\t\tFilenames: []string{\".sh-session\"},\n-\t\tMimeTypes: []string{\"text/x-sh\"},\n-\t\tEnsureNL:  true,\n-\t},\n-\tbashsessionRules,\n-))\n-\n-func bashsessionRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^((?:\\[[^]]+@[^]]+\\]\\s?)?[#$%>])(\\s*)(.*\\n?)`, ByGroups(GenericPrompt, Text, Using(\"Bash\")), nil},\n-\t\t\t{`^.+\\n?`, GenericOutput, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "b9b55e0d010a4ee416db36ab1ffe1ada12e285a0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/bashsession.xml",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbashsession.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbashsession.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbashsession.xml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,25 @@\n+<lexer>\n+  <config>\n+    <name>BashSession</name>\n+    <alias>bash-session</alias>\n+    <alias>console</alias>\n+    <alias>shell-session</alias>\n+    <filename>*.sh-session</filename>\n+    <mime_type>text/x-sh</mime_type>\n+    <ensure_nl>true</ensure_nl>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"^((?:\\[[^]]+@[^]]+\\]\\s?)?[#$%>])(\\s*)(.*\\n?)\">\n+        <bygroups>\n+          <token type=\"GenericPrompt\"/>\n+          <token type=\"Text\"/>\n+          <using lexer=\"bash\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^.+\\n?\">\n+        <token type=\"GenericOutput\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "49503050506e65db73d0c0272ffa461c340b983f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/cfengine3.xml",
      "status": "modified",
      "additions": 10,
      "deletions": 7,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcfengine3.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcfengine3.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcfengine3.xml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -38,7 +38,7 @@\n       <rule pattern=\"#.*?\\n\">\n         <token type=\"Comment\"/>\n       </rule>\n-      <rule pattern=\"@.*?\\n\">\n+      <rule pattern=\"^@.*?\\n\">\n         <token type=\"CommentPreproc\"/>\n       </rule>\n       <rule pattern=\"(body)(\\s+)(\\S+)(\\s+)(control)\">\n@@ -78,6 +78,12 @@\n           <token type=\"Text\"/>\n         </bygroups>\n       </rule>\n+      <rule pattern=\"([\\w.!&amp;|()&#34;&#36;]+)(::)\">\n+        <bygroups>\n+          <token type=\"NameClass\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n       <rule pattern=\"&#34;\">\n         <token type=\"LiteralString\"/>\n         <push state=\"doublequotestring\"/>\n@@ -96,12 +102,6 @@\n           <token type=\"Punctuation\"/>\n         </bygroups>\n       </rule>\n-      <rule pattern=\"([\\w.!&amp;|()]+)(::)\">\n-        <bygroups>\n-          <token type=\"NameClass\"/>\n-          <token type=\"Punctuation\"/>\n-        </bygroups>\n-      </rule>\n       <rule pattern=\"(\\w+)(:)\">\n         <bygroups>\n           <token type=\"KeywordDeclaration\"/>\n@@ -111,6 +111,9 @@\n       <rule pattern=\"@[{(][^)}]+[})]\">\n         <token type=\"NameVariable\"/>\n       </rule>\n+      <rule pattern=\"\\$[(][^)]+[)]\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n       <rule pattern=\"[(){},;]\">\n         <token type=\"Punctuation\"/>\n       </rule>"
    },
    {
      "sha": "dc0beb7fdfd219746bacfcc66d98af3e41ed8f07",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/diff.xml",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdiff.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdiff.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdiff.xml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -14,6 +14,18 @@\n       <rule pattern=\" .*\\n\">\n         <token type=\"Text\"/>\n       </rule>\n+      <rule pattern=\"\\d+(,\\d+)?(a|c|d)\\d+(,\\d+)?\\n\">\n+        <token type=\"GenericSubheading\"/>\n+      </rule>\n+      <rule pattern=\"---\\n\">\n+        <token type=\"GenericStrong\"/>\n+      </rule>\n+      <rule pattern=\"&lt; .*\\n\">\n+        <token type=\"GenericDeleted\"/>\n+      </rule>\n+      <rule pattern=\"&gt; .*\\n\">\n+        <token type=\"GenericInserted\"/>\n+      </rule>\n       <rule pattern=\"\\+.*\\n\">\n         <token type=\"GenericInserted\"/>\n       </rule>"
    },
    {
      "sha": "d49d4f3b14f8e93b1b5567a6c9cace4f3d7c48cd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/groovy.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgroovy.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgroovy.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgroovy.xml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -56,7 +56,7 @@\n       <rule pattern=\"(true|false|null)\\b\">\n         <token type=\"KeywordConstant\"/>\n       </rule>\n-      <rule pattern=\"(class|interface)(\\s+)\">\n+      <rule pattern=\"(class|interface|record)(\\s+)\">\n         <bygroups>\n           <token type=\"KeywordDeclaration\"/>\n           <token type=\"Text\"/>"
    },
    {
      "sha": "cd2d9d16b2affd739767e492ceccdcfe4e7799fa",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/holyc.xml",
      "status": "added",
      "additions": 252,
      "deletions": 0,
      "changes": 252,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fholyc.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fholyc.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fholyc.xml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,252 @@\n+<lexer>\n+  <config>\n+    <name>HolyC</name>\n+    <alias>holyc</alias>\n+    <filename>*.HC</filename>\n+    <filename>*.hc</filename>\n+    <filename>*.HH</filename>\n+    <filename>*.hh</filename>\n+    <filename>*.hc.z</filename>\n+    <filename>*.HC.Z</filename>\n+    <mime_type>text/x-chdr</mime_type>\n+    <mime_type>text/x-csrc</mime_type>\n+    <mime_type>image/x-xbitmap</mime_type>\n+    <mime_type>image/x-xpixmap</mime_type>\n+    <ensure_nl>true</ensure_nl>\n+  </config>\n+  <rules>\n+    <state name=\"statement\">\n+      <rule>\n+        <include state=\"whitespace\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"statements\"/>\n+      </rule>\n+      <rule pattern=\"[{}]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\";\">\n+        <token type=\"Punctuation\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"function\">\n+      <rule>\n+        <include state=\"whitespace\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"statements\"/>\n+      </rule>\n+      <rule pattern=\";\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"\\{\">\n+        <token type=\"Punctuation\"/>\n+        <push/>\n+      </rule>\n+      <rule pattern=\"\\}\">\n+        <token type=\"Punctuation\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\\\([\\\\abfnrtv&#34;\\&#39;]|x[a-fA-F0-9]{2,4}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|[0-7]{1,3})\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\&#34;\\n]+\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\\n\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+    </state>\n+    <state name=\"macro\">\n+      <rule pattern=\"(include)(\\s*(?:/[*].*?[*]/\\s*)?)([^\\n]+)\">\n+        <bygroups>\n+          <token type=\"CommentPreproc\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"CommentPreprocFile\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"[^/\\n]+\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"/[*](.|\\n)*?[*]/\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"//.*?\\n\">\n+        <token type=\"CommentSingle\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"/\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=\\\\)\\n\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"\\n\">\n+        <token type=\"CommentPreproc\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"if0\">\n+      <rule pattern=\"^\\s*#if.*?(?&lt;!\\\\)\\n\">\n+        <token type=\"CommentPreproc\"/>\n+        <push/>\n+      </rule>\n+      <rule pattern=\"^\\s*#el(?:se|if).*\\n\">\n+        <token type=\"CommentPreproc\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"^\\s*#endif.*?(?&lt;!\\\\)\\n\">\n+        <token type=\"CommentPreproc\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\".*?\\n\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+    </state>\n+    <state name=\"whitespace\">\n+      <rule pattern=\"^#if\\s+0\">\n+        <token type=\"CommentPreproc\"/>\n+        <push state=\"if0\"/>\n+      </rule>\n+      <rule pattern=\"^#\">\n+        <token type=\"CommentPreproc\"/>\n+        <push state=\"macro\"/>\n+      </rule>\n+      <rule pattern=\"^(\\s*(?:/[*].*?[*]/\\s*)?)(#if\\s+0)\">\n+        <bygroups>\n+          <usingself state=\"root\"/>\n+          <token type=\"CommentPreproc\"/>\n+        </bygroups>\n+        <push state=\"if0\"/>\n+      </rule>\n+      <rule pattern=\"^(\\s*(?:/[*].*?[*]/\\s*)?)(#)\">\n+        <bygroups>\n+          <usingself state=\"root\"/>\n+          <token type=\"CommentPreproc\"/>\n+        </bygroups>\n+        <push state=\"macro\"/>\n+      </rule>\n+      <rule pattern=\"\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"//(\\n|[\\w\\W]*?[^\\\\]\\n)\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/(\\\\\\n)?[*][\\w\\W]*?[*](\\\\\\n)?/\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"/(\\\\\\n)?[*][\\w\\W]*\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+    </state>\n+    <state name=\"statements\">\n+      <rule pattern=\"(L?)(&#34;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralString\"/>\n+        </bygroups>\n+        <push state=\"string\"/>\n+      </rule>\n+      <rule pattern=\"(L?)(&#39;)(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,2}|[^\\\\\\&#39;\\n])(&#39;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringChar\"/>\n+          <token type=\"LiteralStringChar\"/>\n+          <token type=\"LiteralStringChar\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+[LlUu]*\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0x[0-9a-fA-F]+[LlUu]*\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"0[0-7]+[LlUu]*\">\n+        <token type=\"LiteralNumberOct\"/>\n+      </rule>\n+      <rule pattern=\"\\d+[LlUu]*\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"\\*/\">\n+        <token type=\"Error\"/>\n+      </rule>\n+      <rule pattern=\"[~!%^&amp;*+=|?:&lt;&gt;/-]\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[()\\[\\],.]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"(break|case|continue|default|do|else|for|goto|if|return|switch|while|throw|try|catch|extern|MOV|CALL|PUSH|LEAVE|RET|SUB|SHR|ADD|RETF|CMP|JNE|BTS|INT|XOR|JC|JZ|LOOP|POP|TEST|SHL|ADC|SBB|JMP|INC)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(U0|I8|U8|I16|U16|I32|U32|I64|U64|F64|Bool|class|union|DU8|DU16|DU32|DU64|RAX|RCX|RDX|RBX|RSP|RBP|RSI|RDI|EAX|ECX|EDX|EBX|ESP|EBP|ESI|EDI|AX|CX|DX|BX|SP|BP|SI|DI|SS|CS|DS|ES|FS|GS|CH|asm|const|extern|register|restrict|static|volatile|inline|_extern|_import|IMPORT|public)\\b\">\n+        <token type=\"KeywordType\"/>\n+      </rule>\n+      <rule pattern=\"__()\\b\">\n+        <token type=\"KeywordReserved\"/>\n+      </rule>\n+      <rule pattern=\"(NULL|TRUE|FALSE|ON|OFF)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"([a-zA-Z_]\\w*)(\\s*)(:)(?!:)\">\n+        <bygroups>\n+          <token type=\"NameLabel\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"\\b[A-Za-z_]\\w*(?=\\s*\\()\">\n+          <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"[a-zA-Z_]\\w*\">\n+        <token type=\"Name\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule>\n+        <include state=\"whitespace\"/>\n+      </rule>\n+      <rule pattern=\"((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;{]*)(\\{)\">\n+        <bygroups>\n+          <usingself state=\"root\"/>\n+          <token type=\"NameFunction\"/>\n+          <usingself state=\"root\"/>\n+          <usingself state=\"root\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+        <push state=\"function\"/>\n+      </rule>\n+      <rule pattern=\"((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;]*)(;)\">\n+        <bygroups>\n+          <usingself state=\"root\"/>\n+          <token type=\"NameFunction\"/>\n+          <usingself state=\"root\"/>\n+          <usingself state=\"root\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule>\n+        <push state=\"statement\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>"
    },
    {
      "sha": "707252b4c188cd1d00fc4c31511b93605e5b0243",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/natural.xml",
      "status": "added",
      "additions": 143,
      "deletions": 0,
      "changes": 143,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnatural.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnatural.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnatural.xml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,143 @@\n+<lexer>\n+  <config>\n+    <name>Natural</name>\n+    <alias>natural</alias>\n+    <filename>*.NSN</filename>\n+    <filename>*.NSP</filename>\n+    <filename>*.NSS</filename>\n+    <filename>*.NSH</filename>\n+    <filename>*.NSG</filename>\n+    <filename>*.NSL</filename>\n+    <filename>*.NSA</filename>\n+    <filename>*.NSM</filename>\n+    <filename>*.NSC</filename>\n+    <filename>*.NS7</filename>\n+    <mime_type>text/x-natural</mime_type>\n+    <case_insensitive>true</case_insensitive>\n+  </config>\n+  <rules>\n+    <state name=\"common\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"^\\*.*$\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/\\*.*$\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+    </state>\n+    <state name=\"variable-names\">\n+      <rule pattern=\"[#+]?[\\w\\-\\d]+\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+      <rule pattern=\"\\([a-zA-z]\\d*\\)\">\n+        <token type=\"Other\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule>\n+        <include state=\"common\"/>\n+      </rule>\n+      <rule pattern=\"(?:END-DEFINE|END-IF|END-FOR|END-SUBROUTINE|END-ERROR|END|IGNORE)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(?:INIT|CONST)\\s*&lt;\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(FORM)(\\s+)(\\w+)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameFunction\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(DEFINE)(\\s+)(SUBROUTINE)(\\s+)([#+]?[\\w\\-\\d]+)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameFunction\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(PERFORM)(\\s+)([#+]?[\\w\\-\\d]+)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameFunction\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(METHOD)(\\s+)([\\w~]+)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameFunction\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\s+)([\\w\\-]+)([=\\-]&gt;)([\\w\\-~]+)\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"NameVariable\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"NameFunction\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?&lt;=(=|-)&gt;)([\\w\\-~]+)(?=\\()\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"(TEXT)(-)(\\d{3})\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"LiteralNumberInteger\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(TEXT)(-)(\\w{3})\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"NameVariable\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?i)\\b(?&lt;!-)(?&lt;!#)(ENTIRE|BY|NAME|ARRAY|SPECIFIED|VIEW|MODULE|FUNCTION|RETURNS|AND|NUMERIC|OPTIONAL|END-PARSE|TRUE|END-RESULT|LEAVING|NOT|CONDITION|NUMBER|NO|EXP|FULL|REPLACE|INSERT|DOEND|LOG|ABS|ANY|REPEAT|SET|DLOGOFF|DOWNLOAD|BREAK|VALUES|DIVIDE|COMPRESS|UPDATE|SORTKEY|OR|END-FIND|END-ENDPAGE|REDUCE|IGNORE|MIN|WASTE|END-DEFINE|SUBSTR|END|FIND|ADD|INVESTIGATE|DNATIVE|CONST|COS|ENDHOC|SGN|COPY|REDEFINE|DEFINE|MULTIPLY|ASSIGN|LE|VALUE|COMPOSE|FALSE|POS|CALL|TAN|ERROR|CLOSE|PARSE|LT|WITH_CTE|END-SORT|EJECT|RESET|SHOW|LOCAL|PERFORM|TERMINATE|VAL|BACKOUT|END-LOOP|REJECT|SUM|CREATE|SORT|RETURN|AT|SIN|SETTIME|INT|NE|GLOBAL|END-SELECT|ELSE|DELETE|TOP|INCLUDE|END-ENDDATA|LOOP|OLD|SUSPEND|SKIP|SQRT|RULEVAR|NMIN|AVER|PROCESS|SELECT|MAP|USING|END-HISTOGRAM|MAX|NEWPAGE|ON|OFF|KEY|NAMED|CONTROL|PF1|PF2|PF3|PF4|PF5|PF6|PF7|PF8|PF9|INITIAL|WRITE|STORE|FETCH|ATN|RET|END-WORK|RESTORE|GET|LIMIT|END-ERROR|SEND|OPEN|ESCAPE|COMPUTE|COUNT|TRANSFER|RELEASE|DO|DYNAMIC|ROLLBACK|END-READ|DISPLAY|UPLOAD|END-DATA|NULL-HANDLE|NCOUNT|RESIZE|END-PROCESS|REQUEST|READ|SEPARATE|EQ|INPUT|DATA|END-START|STACK|REINPUT|INCDIC|INCCONT|END-IF|WHEN|END-BEFORE|WHILE|END-ENDFILE|END-TOPPAGE|INCDIR|PARAMETER|OBTAIN|CALLDBPROC|END-BROWSE|MOVE|SUBTRACT|DLOGON|EXAMINE|SUBSTRING|BEFORE|STOP|RUN|END-BREAK|EXPORT|END-SUBROUTINE|FOR|GE|PRINT|BROWSE|IMPORT|EXPAND|ALL|PASSW|FORMAT|GT|END-NOREC|END-DECIDE|END-FOR|CALLNAT|END-ALL|OPTIONS|RETRY|NONE|INCMAC|END-FILE|DECIDE|INIT|HISTOGRAM|NAVER|START|ACCEPT|COMMIT|TOTAL|IF|FRAC|END-REPEAT|UNTIL|TO|INTO|WITH|DELIMITER|FIRST|OF|INTO|SUBROUTINE|GIVING|POSITION)\\b(?!-)\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=(\\s|.))(AND|OR|NOT|EQUAL|NE|EQ|GT|GE|LT|LE)\\b\">\n+        <token type=\"OperatorWord\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"variable-names\"/>\n+      </rule>\n+      <rule pattern=\"[?*&lt;&gt;=\\-+&amp;]\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"(?:(ESCAPE)(\\s+)(MODULE|ROUTINE|BOTTOM|TOP))\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Keyword\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"&#39;(&#39;&#39;|[^&#39;])*&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"`([^`])*`\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"([|}])([^{}|]*?)([|{])\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"LiteralStringSingle\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"[/;:()\\[\\],.]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "41c07cfbbd378ae3d6f166086fede588af091613",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/nim.xml",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnim.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnim.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnim.xml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -44,18 +44,18 @@\n       </rule>\n     </state>\n     <state name=\"int-suffix\">\n-      <rule pattern=\"\\&#39;i(32|64)\">\n+      <rule pattern=\"\\&#39;(i|u)(32|64)\">\n         <token type=\"LiteralNumberIntegerLong\"/>\n       </rule>\n-      <rule pattern=\"\\&#39;i(8|16)\">\n+      <rule pattern=\"\\&#39;(u|(i|u)(8|16))\">\n         <token type=\"LiteralNumberInteger\"/>\n       </rule>\n       <rule>\n         <pop depth=\"1\"/>\n       </rule>\n     </state>\n     <state name=\"float-suffix\">\n-      <rule pattern=\"\\&#39;f(32|64)\">\n+      <rule pattern=\"\\&#39;(f|d|f(32|64))\">\n         <token type=\"LiteralNumberFloat\"/>\n       </rule>\n       <rule>\n@@ -176,7 +176,7 @@\n       <rule pattern=\"\\b((?![_\\d])\\w)(((?!_)\\w)|(_(?!_)\\w))*\">\n         <token type=\"Name\"/>\n       </rule>\n-      <rule pattern=\"[0-9][0-9_]*(?=([e.]|\\&#39;f(32|64)))\">\n+      <rule pattern=\"[0-9][0-9_]*(?=([e.]|\\&#39;(f|d|f(32|64))))\">\n         <token type=\"LiteralNumberFloat\"/>\n         <push state=\"float-suffix\" state=\"float-number\"/>\n       </rule>"
    },
    {
      "sha": "c9e22ea5778a4f7019de9404aab29c1f49109183",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/php.xml",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fphp.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fphp.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fphp.xml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -12,6 +12,7 @@\n     <case_insensitive>true</case_insensitive>\n     <dot_all>true</dot_all>\n     <ensure_nl>true</ensure_nl>\n+    <priority>3</priority>\n   </config>\n   <rules>\n     <state name=\"magicfuncs\">\n@@ -208,4 +209,4 @@\n       </rule>\n     </state>\n   </rules>\n-</lexer>\n\\ No newline at end of file\n+</lexer>"
    },
    {
      "sha": "3c6af86e8a2736f96d28cd536d6cff8b17f80404",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/python.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpython.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpython.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpython.xml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -206,7 +206,7 @@\n       </rule>\n     </state>\n     <state name=\"keywords\">\n-      <rule pattern=\"(yield from|nonlocal|continue|finally|except|lambda|assert|global|return|raise|yield|while|break|await|async|pass|else|elif|with|try|for|del|as|if)\\b\">\n+      <rule pattern=\"(yield from|nonlocal|continue|finally|except|lambda|assert|global|return|raise|yield|while|break|await|async|pass|else|elif|with|try|for|del|as|if|match|case)\\b\">\n         <token type=\"Keyword\"/>\n       </rule>\n       <rule pattern=\"(False|True|None)\\b\">"
    },
    {
      "sha": "083b96ffe0b7df7a9e661283f6f08bf78039c6c6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/rust.xml",
      "status": "modified",
      "additions": 65,
      "deletions": 19,
      "changes": 84,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Frust.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Frust.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Frust.xml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -23,9 +23,6 @@\n       </rule>\n     </state>\n     <state name=\"lifetime\">\n-      <rule pattern=\"(static|_)\">\n-        <token type=\"NameBuiltin\"/>\n-      </rule>\n       <rule pattern=\"[a-zA-Z_]+\\w*\">\n         <token type=\"NameAttribute\"/>\n       </rule>\n@@ -108,12 +105,30 @@\n         <pop depth=\"1\"/>\n       </rule>\n     </state>\n+    <state name=\"formatted_string\">\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\\\[&#39;&#34;\\\\nrt]|\\\\(?=\\n)|\\\\x[0-7][0-9a-fA-F]|\\\\0|\\\\u\\{[0-9a-fA-F]{1,6}\\}|\\{\\{|\\}\\}\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+      <rule pattern=\"\\{[^}]*\\}\">\n+        <token type=\"LiteralStringInterpol\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\&#34;\\{\\}]+\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+    </state>\n     <state name=\"string\">\n       <rule pattern=\"&#34;\">\n         <token type=\"LiteralString\"/>\n         <pop depth=\"1\"/>\n       </rule>\n-      <rule pattern=\"\\\\[&#39;&#34;\\\\nrt]|\\\\x[0-7][0-9a-fA-F]|\\\\0|\\\\u\\{[0-9a-fA-F]{1,6}\\}\">\n+      <rule pattern=\"\\\\[&#39;&#34;\\\\nrt]|\\\\(?=\\n)|\\\\x[0-7][0-9a-fA-F]|\\\\0|\\\\u\\{[0-9a-fA-F]{1,6}\\}\">\n         <token type=\"LiteralStringEscape\"/>\n       </rule>\n       <rule pattern=\"[^\\\\&#34;]+\">\n@@ -171,11 +186,9 @@\n         <token type=\"CommentMultiline\"/>\n         <push state=\"comment\"/>\n       </rule>\n-      <rule pattern=\"r#*&#34;(?:\\\\.|[^\\\\;])*&#34;#*\">\n-        <token type=\"LiteralString\"/>\n-      </rule>\n-      <rule pattern=\"&#34;(?:\\\\.|[^\\\\&#34;])*&#34;\">\n+      <rule pattern=\"&#34;\">\n         <token type=\"LiteralString\"/>\n+        <push state=\"string\"/>\n       </rule>\n       <rule pattern=\"\\$([a-zA-Z_]\\w*|\\(,?|\\),?|,?)\">\n         <token type=\"CommentPreproc\"/>\n@@ -223,9 +236,6 @@\n       <rule pattern=\"(DoubleEndedIterator|ExactSizeIterator|IntoIterator|PartialOrd|PartialEq|ToString|Iterator|ToOwned|Default|Result|String|FnOnce|Extend|Option|FnMut|Unpin|Sized|AsRef|AsMut|Clone|None|From|Into|Sync|drop|Send|Drop|Copy|Some|Ord|Err|Box|Vec|Eq|Ok|Fn)\\b\">\n         <token type=\"NameBuiltin\"/>\n       </rule>\n-      <rule pattern=\"(is_powerpc64_feature_detected|is_aarch64_feature_detected|is_powerpc_feature_detected|is_mips64_feature_detected|is_mips_feature_detected|is_x86_feature_detected|is_arm_feature_detected|debug_assert_ne|debug_assert_eq|format_args_nl|concat_idents|unimplemented|include_bytes|compile_error|debug_assert|thread_local|trace_macros|macro_rules|format_args|module_path|unreachable|include_str|option_env|global_asm|log_syntax|stringify|assert_ne|assert_eq|llvm_asm|eprintln|include|matches|println|writeln|format|column|assert|concat|eprint|write|panic|print|file|todo|line|env|dbg|vec|cfg|asm)!\">\n-        <token type=\"NameFunctionMagic\"/>\n-      </rule>\n       <rule pattern=\"::\\b\">\n         <token type=\"Text\"/>\n       </rule>\n@@ -243,8 +253,11 @@\n       <rule pattern=\"&#39;(\\\\[&#39;&#34;\\\\nrt]|\\\\x[0-7][0-9a-fA-F]|\\\\0|\\\\u\\{[0-9a-fA-F]{1,6}\\}|.)&#39;\">\n         <token type=\"LiteralStringChar\"/>\n       </rule>\n-      <rule pattern=\"b&#39;(\\\\[&#39;&#34;\\\\nrt]|\\\\x[0-9a-fA-F]{2}|\\\\0|\\\\u\\{[0-9a-fA-F]{1,6}\\}|.)&#39;\">\n-        <token type=\"LiteralStringChar\"/>\n+      <rule pattern=\"(b)(&#39;(?:\\\\[&#39;&#34;\\\\nrt]|\\\\x[0-9a-fA-F]{2}|\\\\0|.)&#39;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringChar\"/>\n+        </bygroups>\n       </rule>\n       <rule pattern=\"0b[01_]+\">\n         <token type=\"LiteralNumberBin\"/>\n@@ -266,15 +279,25 @@\n         <token type=\"LiteralNumberInteger\"/>\n         <push state=\"number_lit\"/>\n       </rule>\n-      <rule pattern=\"b&#34;\">\n-        <token type=\"LiteralString\"/>\n+      <rule pattern=\"(b)(&#34;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralString\"/>\n+        </bygroups>\n         <push state=\"bytestring\"/>\n       </rule>\n-      <rule pattern=\"(?s)b?r(#*)&#34;.*?&#34;\\1\">\n-        <token type=\"LiteralString\"/>\n+      <rule pattern=\"(?s)(b?r)(#*)(&#34;.*?&#34;\\2)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralString\"/>\n+          <token type=\"LiteralString\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"&#39;(static|_)\">\n+        <token type=\"NameBuiltin\"/>\n       </rule>\n       <rule pattern=\"&#39;\">\n-        <token type=\"Operator\"/>\n+        <token type=\"NameAttribute\"/>\n         <push state=\"lifetime\"/>\n       </rule>\n       <rule pattern=\"\\.\\.=?\">\n@@ -286,6 +309,26 @@\n       <rule pattern=\"[+\\-*/%&amp;|&lt;&gt;^!~@=:?]\">\n         <token type=\"Operator\"/>\n       </rule>\n+      <rule pattern=\"\\b(r#)?_?([A-Z][A-Z0-9_]*){2,}\\b\">\n+        <token type=\"NameConstant\"/>\n+      </rule>\n+      <rule pattern=\"((?:e?print(?:ln)?|format(?:_args)?|panic|todo|un(?:reachable|implemented))!)(\\s*)(\\()(\\s*)(&#34;)\">\n+        <bygroups>\n+          <token type=\"NameFunctionMagic\"/>\n+          <token type=\"TextWhitespace\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"TextWhitespace\"/>\n+          <token type=\"LiteralString\"/>\n+        </bygroups>\n+        <push state=\"formatted_string\"/>\n+      </rule>\n+      <rule pattern=\"([a-zA-Z_]\\w*!)(\\s*)(\\(|\\[|\\{)\">\n+        <bygroups>\n+          <token type=\"NameFunctionMagic\"/>\n+          <token type=\"TextWhitespace\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n       <rule pattern=\"(r#)?[a-zA-Z_]\\w*\">\n         <token type=\"Name\"/>\n       </rule>\n@@ -307,8 +350,11 @@\n       <rule pattern=\"&amp;\">\n         <token type=\"KeywordPseudo\"/>\n       </rule>\n+      <rule pattern=\"&#39;(static|_)\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n       <rule pattern=\"&#39;\">\n-        <token type=\"Operator\"/>\n+        <token type=\"NameAttribute\"/>\n         <push state=\"lifetime\"/>\n       </rule>\n       <rule pattern=\"(DoubleEndedIterator|ExactSizeIterator|IntoIterator|PartialOrd|PartialEq|ToString|Iterator|ToOwned|Default|Result|String|FnOnce|Extend|Option|FnMut|Unpin|Sized|AsRef|AsMut|Clone|None|From|Into|Sync|drop|Send|Drop|Copy|Some|Ord|Err|Box|Vec|Eq|Ok|Fn)\\b\">"
    },
    {
      "sha": "97a0b6ed9bddc318e6cc1d4f90389a813998d511",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/yaml.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fyaml.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fyaml.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fyaml.xml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -49,7 +49,7 @@\n       </rule>\n     </state>\n     <state name=\"value\">\n-      <rule pattern=\"([&gt;|](?:[+-])?)(\\n(^ {1,})(?:.*\\n*(?:^\\3 *).*)*)\">\n+      <rule pattern=\"([&gt;|](?:[+-])?)(\\n(^ {1,})(?:(?:.*\\n*(?:^\\3 *).*)+|.*))\">\n         <bygroups>\n           <token type=\"Punctuation\"/>\n           <token type=\"LiteralStringDoc\"/>"
    },
    {
      "sha": "410183261069af5a50ce030d0a7c79b552156e6b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/z80.xml",
      "status": "added",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fz80.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fz80.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fz80.xml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,36 @@\n+\n+<lexer>\n+  <config>\n+    <name>Z80 Assembly</name>\n+    <alias>z80</alias>\n+    <filename>*.z80</filename>\n+    <filename>*.asm</filename>\n+    <case_insensitive>true</case_insensitive>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\";.*?$\"><token type=\"CommentSingle\"/></rule>\n+      <rule pattern=\"^[.\\w]+:\"><token type=\"NameLabel\"/></rule>\n+      <rule pattern=\"((0x)|\\$)[0-9a-fA-F]+\"><token type=\"LiteralNumberHex\"/></rule>\n+      <rule pattern=\"[0-9][0-9a-fA-F]+h\"><token type=\"LiteralNumberHex\"/></rule>\n+      <rule pattern=\"((0b)|%)[01]+\"><token type=\"LiteralNumberBin\"/></rule>\n+      <rule pattern=\"-?[0-9]+\"><token type=\"LiteralNumberInteger\"/></rule>\n+      <rule pattern=\"&quot;\"><token type=\"LiteralString\"/><push state=\"string\"/></rule>\n+      <rule pattern=\"&#x27;\\\\?.&#x27;\"><token type=\"LiteralStringChar\"/></rule>\n+      <rule pattern=\"[,=()\\\\]\"><token type=\"Punctuation\"/></rule>\n+      <rule pattern=\"^\\s*#\\w+\"><token type=\"CommentPreproc\"/></rule>\n+      <rule pattern=\"\\.(db|dw|end|org|byte|word|fill|block|addinstr|echo|error|list|nolist|equ|show|option|seek)\"><token type=\"NameBuiltin\"/></rule>\n+      <rule pattern=\"(ex|exx|ld|ldd|lddr|ldi|ldir|pop|push|adc|add|cp|cpd|cpdr|cpi|cpir|cpl|daa|dec|inc|neg|sbc|sub|and|bit|ccf|or|res|scf|set|xor|rl|rla|rlc|rlca|rld|rr|rra|rrc|rrca|rrd|sla|sra|srl|call|djnz|jp|jr|ret|rst|nop|reti|retn|di|ei|halt|im|in|ind|indr|ini|inir|out|outd|otdr|outi|otir)\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"(z|nz|c|nc|po|pe|p|m)\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"[+-/*~\\^&amp;|]\"><token type=\"Operator\"/></rule>\n+      <rule pattern=\"\\w+\"><token type=\"Text\"/></rule>\n+      <rule pattern=\"\\s+\"><token type=\"Text\"/></rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"[^&quot;\\\\]+\"><token type=\"LiteralString\"/></rule>\n+      <rule pattern=\"\\\\.\"><token type=\"LiteralStringEscape\"/></rule>\n+      <rule pattern=\"&quot;\"><token type=\"LiteralString\"/><pop depth=\"1\"/></rule>\n+    </state>\n+  </rules>\n+</lexer>\n+"
    },
    {
      "sha": "8085bc7e48d5910b557ca502790f00110803cdef",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/raku.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fraku.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fraku.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fraku.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -655,7 +655,7 @@ func rakuRules() Rules {\n \t\t\t// Substitution\n \t\t\t{`(?<=^|\\b|\\s)(?<!\\.)(ss|S|s|TR|tr)\\b(\\s*)`, ByGroups(Keyword, Text), Push(\"substitution\")},\n \t\t\t{keywordsPattern, Keyword, nil},\n-\t\t\t{builtinTypesPattern, NameBuiltin, nil},\n+\t\t\t{builtinTypesPattern, KeywordType, nil},\n \t\t\t{builtinRoutinesPattern, NameBuiltin, nil},\n \t\t\t// Class name\n \t\t\t{"
    },
    {
      "sha": "4e690945e2e8e37c5692eda6128841579e4644b3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/vulcan.xml",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvulcan.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvulcan.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvulcan.xml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,7 +1,7 @@\n <style name=\"vulcan\">\n   <entry type=\"Other\" style=\"#c9c9c9\"/>\n   <entry type=\"Error\" style=\"#cf5967\"/>\n-  <entry type=\"Background\" style=\"#282c34\"/>\n+  <entry type=\"Background\" style=\"bg:#282c34\"/>\n   <entry type=\"Keyword\" style=\"#7fbaf5\"/>\n   <entry type=\"KeywordConstant\" style=\"#cf5967 bg:#43454f\"/>\n   <entry type=\"KeywordDeclaration\" style=\"#7fbaf5\"/>\n@@ -71,4 +71,4 @@\n   <entry type=\"GenericUnderline\" style=\"underline\"/>\n   <entry type=\"Text\" style=\"#c9c9c9\"/>\n   <entry type=\"TextWhitespace\" style=\"#c9c9c9\"/>\n-</style>\n\\ No newline at end of file\n+</style>"
    },
    {
      "sha": "ec522447b274910ba70dcc632bee84ba063ad5ff",
      "filename": "backend/vendor/github.com/go-oauth2/oauth2/v4/model.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-oauth2%2Foauth2%2Fv4%2Fmodel.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-oauth2%2Foauth2%2Fv4%2Fmodel.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-oauth2%2Foauth2%2Fv4%2Fmodel.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -10,6 +10,7 @@ type (\n \t\tGetID() string\n \t\tGetSecret() string\n \t\tGetDomain() string\n+\t\tIsPublic() bool\n \t\tGetUserID() string\n \t}\n "
    },
    {
      "sha": "bc05a546192c3383dd5f99126d3701fe0eed3883",
      "filename": "backend/vendor/github.com/go-pkgz/auth/.golangci.yml",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2F.golangci.yml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -67,5 +67,9 @@ issues:\n       text: \"Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server\"\n       linters:\n         - gosec\n+    - path: _test\\.go\n+      text: \"Deferring unsafe method \\\"Close\\\" on type \\\"io.ReadCloser\\\"\"\n+      linters:\n+        - gosec\n \n   exclude-use-default: false"
    },
    {
      "sha": "8de414c74ca07831bfa71b9e24e3c8845ff49de4",
      "filename": "backend/vendor/github.com/go-pkgz/auth/README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2FREADME.md?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -522,7 +522,7 @@ After completing the previous steps, you can proceed with configuring the Apple\n - _ClientID_ (**required**) - Service ID identifier which is used for Sign with Apple\n - _TeamID_ (**required**) - Identifier a developer account (use as prefix for all App ID)\n - _KeyID_ (**required**) - Identifier a generated key for Sign with Apple\n-\n+- _ResponseMode_  - Response Mode, please see [documentation](https://developer.apple.com/documentation/sign_in_with_apple/request_an_authorization_to_the_sign_in_with_apple_server?changes=_1_2#4066168) for reference, default is `form_post`\n \n ```go\n     // apple config parameters"
    },
    {
      "sha": "78b12d9ac534b6dc19efb650c447286b5902c105",
      "filename": "backend/vendor/github.com/go-pkgz/auth/avatar/avatar.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Favatar%2Favatar.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Favatar%2Favatar.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Favatar%2Favatar.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -217,7 +217,7 @@ func GetGravatarURL(email string) (res string, err error) {\n \tif err != nil {\n \t\treturn \"\", err\n \t}\n-\tdefer resp.Body.Close()\n+\tdefer resp.Body.Close() //nolint gosec // we don't care about response body\n \tif resp.StatusCode != 200 {\n \t\treturn \"\", fmt.Errorf(\"%s\", resp.Status)\n \t}"
    },
    {
      "sha": "560bcfc1d40b58c940b217886417bdaf52bb98d0",
      "filename": "backend/vendor/github.com/go-pkgz/auth/avatar/noop.go",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Favatar%2Fnoop.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Favatar%2Fnoop.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Favatar%2Fnoop.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -15,18 +15,18 @@ func NewNoOp() *NoOp { return &NoOp{} }\n func (s *NoOp) String() string { return \"\" }\n \n // Put is a NoOp implementation\n-func (s *NoOp) Put(userID string, reader io.Reader) (avatarID string, err error) { return \"\", nil }\n+func (s *NoOp) Put(string, io.Reader) (avatarID string, err error) { return \"\", nil }\n \n // Get is a NoOp implementation\n-func (s *NoOp) Get(avatarID string) (reader io.ReadCloser, size int, err error) {\n+func (s *NoOp) Get(string) (reader io.ReadCloser, size int, err error) {\n \treturn io.NopCloser(bytes.NewBuffer([]byte(\"\"))), 0, nil\n }\n \n // ID is a NoOp implementation\n-func (s *NoOp) ID(avatarID string) (id string) { return \"\" }\n+func (s *NoOp) ID(string) (id string) { return \"\" }\n \n // Remove is a NoOp implementation\n-func (s *NoOp) Remove(avatarID string) error { return nil }\n+func (s *NoOp) Remove(string) error { return nil }\n \n // List is a NoOp implementation\n func (s *NoOp) List() (ids []string, err error) { return nil, nil }"
    },
    {
      "sha": "ab51a1b8d9d6a9905653c9491a1f17b763f99dfb",
      "filename": "backend/vendor/github.com/go-pkgz/auth/avatar/store.go",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Favatar%2Fstore.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Favatar%2Fstore.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Favatar%2Fstore.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -52,10 +52,11 @@ func NewStore(uri string) (Store, error) {\n \t\t\treturn nil, fmt.Errorf(\"can't parse mongo store uri %s: %w\", uri, err)\n \t\t}\n \n-\t\tctx, cancel := context.WithTimeout(context.Background(), time.Second*30)\n+\t\tconst timeout = time.Second * 30\n+\t\tctx, cancel := context.WithTimeout(context.Background(), timeout)\n \t\tdefer cancel()\n \n-\t\tclient, err := mongo.Connect(ctx, options.Client().ApplyURI(u))\n+\t\tclient, err := mongo.Connect(ctx, options.Client().ApplyURI(u).SetConnectTimeout(timeout))\n \t\tif err != nil {\n \t\t\treturn nil, fmt.Errorf(\"failed to connect to mongo server: %w\", err)\n \t\t}"
    },
    {
      "sha": "2663cf11daa1d7b2bb75c820be91b9b0158eca8c",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/apple.go",
      "status": "modified",
      "additions": 20,
      "deletions": 9,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fapple.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fapple.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fapple.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -70,9 +70,10 @@ type appleVerificationResponse struct {\n \n // AppleConfig is the main oauth2 required parameters for \"Sign in with Apple\"\n type AppleConfig struct {\n-\tClientID string // the identifier Services ID for your app created in Apple developer account.\n-\tTeamID   string // developer Team ID (10 characters), required for create JWT. It available, after signed in at developer account, by link: https://developer.apple.com/account/#/membership\n-\tKeyID    string // private key ID  assigned to private key obtain in Apple developer account\n+\tClientID     string // the identifier Services ID for your app created in Apple developer account.\n+\tTeamID       string // developer Team ID (10 characters), required for create JWT. It available, after signed in at developer account, by link: https://developer.apple.com/account/#/membership\n+\tKeyID        string // private key ID  assigned to private key obtain in Apple developer account\n+\tResponseMode string // changes method of receiving data in callback. Default value \"form_post\" (https://developer.apple.com/documentation/sign_in_with_apple/request_an_authorization_to_the_sign_in_with_apple_server?changes=_1_2#4066168)\n \n \tscopes       []string         // for this package allow only username scope and UID in token claims. Apple service API provide only \"email\" and \"name\" scope values (https://developer.apple.com/documentation/sign_in_with_apple/clientconfigi/3230955-scope)\n \tprivateKey   interface{}      // private key from Apple obtained in developer account (the keys section). Required for create the Client Secret (https://developer.apple.com/documentation/sign_in_with_apple/generate_and_validate_tokens#3262048)\n@@ -156,16 +157,22 @@ func NewApple(p Params, appleCfg AppleConfig, privateKeyLoader PrivateKeyLoaderI\n \t\treturn nil, fmt.Errorf(\"required params missed: %s\", strings.Join(emptyParams, \", \"))\n \t}\n \n+\tresponseMode := \"form_post\"\n+\tif appleCfg.ResponseMode != \"\" {\n+\t\tresponseMode = appleCfg.ResponseMode\n+\t}\n+\n \tah := AppleHandler{\n \t\tParams: p,\n \t\tname:   \"apple\", // static name for an Apple provider\n \n \t\tconf: AppleConfig{\n-\t\t\tClientID: appleCfg.ClientID,\n-\t\t\tTeamID:   appleCfg.TeamID,\n-\t\t\tKeyID:    appleCfg.KeyID,\n-\t\t\tscopes:   []string{\"name\"},\n-\t\t\tjwkURL:   appleKeysURL,\n+\t\t\tClientID:     appleCfg.ClientID,\n+\t\t\tTeamID:       appleCfg.TeamID,\n+\t\t\tKeyID:        appleCfg.KeyID,\n+\t\t\tscopes:       []string{\"name\"},\n+\t\t\tjwkURL:       appleKeysURL,\n+\t\t\tResponseMode: responseMode,\n \t\t},\n \n \t\tendpoint: oauth2.Endpoint{\n@@ -503,6 +510,10 @@ func (ah *AppleHandler) prepareLoginURL(state, path string) (string, error) {\n \n \tscopesList := strings.Join(ah.conf.scopes, \" \")\n \n+\tif scopesList != \"\" && ah.conf.ResponseMode != \"form_post\" {\n+\t\treturn \"\", fmt.Errorf(\"response_mode must be form_post if scope is not empty\")\n+\t}\n+\n \tauthURL, err := url.Parse(ah.endpoint.AuthURL)\n \tif err != nil {\n \t\treturn \"\", err\n@@ -511,7 +522,7 @@ func (ah *AppleHandler) prepareLoginURL(state, path string) (string, error) {\n \tquery := authURL.Query()\n \tquery.Set(\"state\", state)\n \tquery.Set(\"response_type\", \"code\")\n-\tquery.Set(\"response_mode\", \"form_post\")\n+\tquery.Set(\"response_mode\", ah.conf.ResponseMode)\n \tquery.Set(\"client_id\", ah.conf.ClientID)\n \tquery.Set(\"scope\", scopesList)\n \tquery.Set(\"redirect_uri\", ah.makeRedirURL(path))"
    },
    {
      "sha": "ac49f0293f0c6a959b148dbe359afd9d15af6a21",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/custom_server.go",
      "status": "modified",
      "additions": 11,
      "deletions": 9,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fcustom_server.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fcustom_server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fcustom_server.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -22,10 +22,11 @@ import (\n \n // CustomHandlerOpt are options to initialize a handler for oauth2 server\n type CustomHandlerOpt struct {\n-\tEndpoint  oauth2.Endpoint\n-\tInfoURL   string\n-\tMapUserFn func(UserData, []byte) token.User\n-\tScopes    []string\n+\tEndpoint          oauth2.Endpoint\n+\tInfoURL           string\n+\tMapUserFn         func(UserData, []byte) token.User\n+\tBearerTokenHookFn BearerTokenHook\n+\tScopes            []string\n }\n \n // CustomServerOpt are options to initialize a custom go-oauth2/oauth2 server\n@@ -205,11 +206,12 @@ func (c *CustomServer) Shutdown() {\n // NewCustom creates a handler for go-oauth2/oauth2 server\n func NewCustom(name string, p Params, copts CustomHandlerOpt) Oauth2Handler {\n \treturn initOauth2Handler(p, Oauth2Handler{\n-\t\tname:     name,\n-\t\tendpoint: copts.Endpoint,\n-\t\tscopes:   copts.Scopes,\n-\t\tinfoURL:  copts.InfoURL,\n-\t\tmapUser:  copts.MapUserFn,\n+\t\tname:            name,\n+\t\tendpoint:        copts.Endpoint,\n+\t\tscopes:          copts.Scopes,\n+\t\tinfoURL:         copts.InfoURL,\n+\t\tmapUser:         copts.MapUserFn,\n+\t\tbearerTokenHook: copts.BearerTokenHookFn,\n \t})\n }\n "
    },
    {
      "sha": "742ebd5ab360d9d0ce7724130354c618f1162503",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/direct.go",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fdirect.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fdirect.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fdirect.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -69,11 +69,12 @@ func (p DirectHandler) Name() string { return p.ProviderName }\n // user=name&passwd=xyz&aud=bar\n //\n // application/json body example:\n-// {\n-//   \"user\": \"name\",\n-//   \"passwd\": \"xyz\",\n-//   \"aud\": \"bar\",\n-// }\n+//\n+//\t{\n+//\t  \"user\": \"name\",\n+//\t  \"passwd\": \"xyz\",\n+//\t  \"aud\": \"bar\",\n+//\t}\n func (p DirectHandler) LoginHandler(w http.ResponseWriter, r *http.Request) {\n \tcreds, err := p.getCredentials(w, r)\n \tif err != nil {\n@@ -184,9 +185,9 @@ func (p DirectHandler) getCredentials(w http.ResponseWriter, r *http.Request) (c\n }\n \n // AuthHandler doesn't do anything for direct login as it has no callbacks\n-func (p DirectHandler) AuthHandler(w http.ResponseWriter, r *http.Request) {}\n+func (p DirectHandler) AuthHandler(http.ResponseWriter, *http.Request) {}\n \n // LogoutHandler - GET /logout\n-func (p DirectHandler) LogoutHandler(w http.ResponseWriter, r *http.Request) {\n+func (p DirectHandler) LogoutHandler(w http.ResponseWriter, _ *http.Request) {\n \tp.TokenService.Reset(w)\n }"
    },
    {
      "sha": "ef647b18bf50244503836b3d38e0f2949e2d8707",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/oauth2.go",
      "status": "modified",
      "additions": 15,
      "deletions": 6,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Foauth2.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Foauth2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Foauth2.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -22,12 +22,13 @@ type Oauth2Handler struct {\n \tParams\n \n \t// all of these fields specific to particular oauth2 provider\n-\tname     string\n-\tinfoURL  string\n-\tendpoint oauth2.Endpoint\n-\tscopes   []string\n-\tmapUser  func(UserData, []byte) token.User // map info from InfoURL to User\n-\tconf     oauth2.Config\n+\tname            string\n+\tinfoURL         string\n+\tendpoint        oauth2.Endpoint\n+\tscopes          []string\n+\tmapUser         func(UserData, []byte) token.User // map info from InfoURL to User\n+\tbearerTokenHook BearerTokenHook                   // a way to get a Bearer token received from oauth2-provider\n+\tconf            oauth2.Config\n }\n \n // Params to make initialized and ready to use provider\n@@ -56,6 +57,9 @@ func (u UserData) Value(key string) string {\n \treturn \"\"\n }\n \n+// BearerTokenHook accepts provider name, user and token, received during oauth2 authentication\n+type BearerTokenHook func(provider string, user token.User, token oauth2.Token)\n+\n // initOauth2Handler makes oauth2 handler for given provider\n func initOauth2Handler(p Params, service Oauth2Handler) Oauth2Handler {\n \tif p.L == nil {\n@@ -217,6 +221,11 @@ func (p Oauth2Handler) AuthHandler(w http.ResponseWriter, r *http.Request) {\n \t\treturn\n \t}\n \n+\tif p.bearerTokenHook != nil && tok != nil {\n+\t\tp.Logf(\"[DEBUG] pass bearer token %s, %s\", p.Name(), tok.TokenType)\n+\t\tp.bearerTokenHook(p.Name(), u, *tok)\n+\t}\n+\n \tp.Logf(\"[DEBUG] user info %+v\", u)\n \n \t// redirect to back url if presented in login query params"
    },
    {
      "sha": "177c1c02660e560b8c4e0c75a89963d788d6177b",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/telegram.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Ftelegram.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Ftelegram.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Ftelegram.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -459,7 +459,7 @@ func (tg *tgAPI) request(ctx context.Context, method string, data interface{}) e\n \t\tif err != nil {\n \t\t\treturn fmt.Errorf(\"failed to send request: %w\", err)\n \t\t}\n-\t\tdefer resp.Body.Close()\n+\t\tdefer resp.Body.Close() //nolint gosec // we don't care about response body\n \n \t\tif resp.StatusCode != http.StatusOK {\n \t\t\treturn tg.parseError(resp.Body, resp.StatusCode)"
    },
    {
      "sha": "23da8263333253e5637042ca89fb314803fe767b",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/verify.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fverify.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fverify.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fverify.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -199,10 +199,10 @@ func (e VerifyHandler) sendConfirmation(w http.ResponseWriter, r *http.Request)\n }\n \n // AuthHandler doesn't do anything for direct login as it has no callbacks\n-func (e VerifyHandler) AuthHandler(w http.ResponseWriter, r *http.Request) {}\n+func (e VerifyHandler) AuthHandler(http.ResponseWriter, *http.Request) {}\n \n // LogoutHandler - GET /logout\n-func (e VerifyHandler) LogoutHandler(w http.ResponseWriter, r *http.Request) {\n+func (e VerifyHandler) LogoutHandler(w http.ResponseWriter, _ *http.Request) {\n \te.TokenService.Reset(w)\n }\n "
    },
    {
      "sha": "1a78e9cf1c3941579f7a360f86da35b82457690b",
      "filename": "backend/vendor/github.com/go-pkgz/lcw/.golangci.yml",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flcw%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flcw%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flcw%2F.golangci.yml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -26,14 +26,18 @@ linters:\n     - revive\n     - govet\n     - unconvert\n+    - megacheck\n+    - structcheck\n     - gas\n     - gocyclo\n     - dupl\n     - misspell\n     - unparam\n-    - unused\n+    - varcheck\n+    - deadcode\n     - typecheck\n     - ineffassign\n+    - varcheck\n     - stylecheck\n     - gochecknoinits\n     - exportloopref"
    },
    {
      "sha": "c0e04d0c8b23b66a8f05e8a03c18b18715f32355",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/.golangci.yml",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flgr%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flgr%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flgr%2F.golangci.yml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -28,24 +28,21 @@ linters-settings:\n linters:\n   enable:\n     - megacheck\n-    - golint\n+    - revive\n     - govet\n     - unconvert\n     - megacheck\n-    - structcheck\n     - gas\n     - gocyclo\n     - dupl\n     - misspell\n     - unparam\n-    - varcheck\n-    - deadcode\n+    - unused\n     - typecheck\n     - ineffassign\n-    - varcheck\n     - stylecheck\n     - gochecknoinits\n-    - scopelint\n+    - exportloopref\n     - gocritic\n     - nakedret\n     - gosimple"
    },
    {
      "sha": "dc0ae1a1f84351641152e6164ea44145443d90de",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/LICENSE",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flgr%2FLICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flgr%2FLICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flgr%2FLICENSE?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,6 +1,6 @@\n MIT License\n \n-Copyright (c) 2020 Umputun\n+Copyright (c) 2023 Umputun\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
    },
    {
      "sha": "3759437866813c1705a895a32593e33902398aa0",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/logger.go",
      "status": "modified",
      "additions": 26,
      "deletions": 4,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flgr%2Flogger.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flgr%2Flogger.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flgr%2Flogger.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -2,6 +2,7 @@\n // The logger's output can be customized in 2 ways:\n //   - by setting individual formatting flags, i.e. lgr.New(lgr.Msec, lgr.CallerFunc)\n //   - by passing formatting template, i.e. lgr.New(lgr.Format(lgr.Short))\n+//\n // Leveled output works for messages based on text prefix, i.e. Logf(\"INFO some message\") means INFO level.\n // Debug and trace levels can be filtered based on lgr.Trace and lgr.Debug options.\n // ERROR, FATAL and PANIC levels send to err as well. FATAL terminate caller application with os.Exit(1)\n@@ -51,6 +52,7 @@ var (\n type Logger struct {\n \t// set with Option calls\n \tstdout, stderr io.Writer // destination writes for out and err\n+\tsameStream     bool      // stdout and stderr are the same stream\n \tdbg            bool      // allows reporting for DEBUG level\n \ttrace          bool      // allows reporting for TRACE and DEBUG levels\n \tcallerFile     bool      // reports caller file with line number, i.e. foo/bar.go:89\n@@ -128,6 +130,8 @@ func New(options ...Option) *Logger {\n \tres.callerOn = strings.Contains(res.format, \"{{.Caller\") || res.callerFile || res.callerFunc || res.callerPkg\n \tres.levelBracesOn = strings.Contains(res.format, \"[{{.Level}}]\") || res.levelBraces\n \n+\tres.sameStream = isStreamsSame(res.stdout, res.stderr)\n+\n \treturn &res\n }\n \n@@ -140,7 +144,7 @@ func (l *Logger) Logf(format string, args ...interface{}) {\n \tl.logf(format, args...)\n }\n \n-//nolint gocyclo\n+// nolint gocyclo\n func (l *Logger) logf(format string, args ...interface{}) {\n \n \tvar lv, msg string\n@@ -197,7 +201,7 @@ func (l *Logger) logf(format string, args ...interface{}) {\n \t// write to err as well for high levels, exit(1) on fatal and panic and dump stack on panic level\n \tswitch lv {\n \tcase \"ERROR\":\n-\t\tif l.stderr != l.stdout {\n+\t\tif !l.sameStream {\n \t\t\t_, _ = l.stderr.Write(data)\n \t\t}\n \t\tif l.errorDump {\n@@ -210,12 +214,12 @@ func (l *Logger) logf(format string, args ...interface{}) {\n \t\t\t}\n \t\t}\n \tcase \"FATAL\":\n-\t\tif l.stderr != l.stdout {\n+\t\tif !l.sameStream {\n \t\t\t_, _ = l.stderr.Write(data)\n \t\t}\n \t\tl.fatal()\n \tcase \"PANIC\":\n-\t\tif l.stderr != l.stdout {\n+\t\tif !l.sameStream {\n \t\t\t_, _ = l.stderr.Write(data)\n \t\t}\n \t\t_, _ = l.stderr.Write(getDump())\n@@ -405,3 +409,21 @@ func getDump() []byte {\n \t}\n \treturn stacktrace[:length]\n }\n+\n+// isStreamsSame checks if two streams are the same by comparing file which they refer to\n+func isStreamsSame(s1, s2 io.Writer) bool {\n+\ts1File, outOk := s1.(*os.File)\n+\ts2File, errOk := s2.(*os.File)\n+\tif outOk && errOk {\n+\t\toutStat, err := s1File.Stat()\n+\t\tif err != nil {\n+\t\t\treturn false\n+\t\t}\n+\t\terrStat, err := s2File.Stat()\n+\t\tif err != nil {\n+\t\t\treturn false\n+\t\t}\n+\t\treturn os.SameFile(outStat, errStat)\n+\t}\n+\treturn s1 == s2\n+}"
    },
    {
      "sha": "af63b3dfb56a0a7706f90c45451d2ea947f290c6",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/options.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flgr%2Foptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flgr%2Foptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Flgr%2Foptions.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -5,7 +5,7 @@ import \"io\"\n // Option func type\n type Option func(l *Logger)\n \n-// Out sets out writer, stdout by default\n+// Out sets output writer, stdout by default\n func Out(w io.Writer) Option {\n \treturn func(l *Logger) {\n \t\tl.stdout = w"
    },
    {
      "sha": "bcfa19520af9be47bf00b12b35e3e65d2435428c",
      "filename": "backend/vendor/github.com/golang/snappy/AUTHORS",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2FAUTHORS",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2FAUTHORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2FAUTHORS?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -8,11 +8,8 @@\n \n # Please keep the list sorted.\n \n-Amazon.com, Inc\n Damian Gryski <dgryski@gmail.com>\n-Eric Buth <eric@topos.com>\n Google Inc.\n Jan Mercl <0xjnml@gmail.com>\n-Klaus Post <klauspost@gmail.com>\n Rodolfo Carvalho <rhcarvalho@gmail.com>\n Sebastien Binet <seb.binet@gmail.com>"
    },
    {
      "sha": "931ae31606f8c09ea5487f6ac4b419d7844ce25e",
      "filename": "backend/vendor/github.com/golang/snappy/CONTRIBUTORS",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2FCONTRIBUTORS",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2FCONTRIBUTORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2FCONTRIBUTORS?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -26,13 +26,9 @@\n \n # Please keep the list sorted.\n \n-Alex Legg <alexlegg@google.com>\n Damian Gryski <dgryski@gmail.com>\n-Eric Buth <eric@topos.com>\n Jan Mercl <0xjnml@gmail.com>\n-Jonathan Swinney <jswinney@amazon.com>\n Kai Backman <kaib@golang.org>\n-Klaus Post <klauspost@gmail.com>\n Marc-Antoine Ruel <maruel@chromium.org>\n Nigel Tao <nigeltao@golang.org>\n Rob Pike <r@golang.org>"
    },
    {
      "sha": "72efb0353ddfc02dc509b67b1332c1d3595ccb6a",
      "filename": "backend/vendor/github.com/golang/snappy/decode.go",
      "status": "modified",
      "additions": 30,
      "deletions": 57,
      "changes": 87,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fdecode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fdecode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fdecode.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -52,8 +52,6 @@ const (\n // Otherwise, a newly allocated slice will be returned.\n //\n // The dst and src must not overlap. It is valid to pass a nil dst.\n-//\n-// Decode handles the Snappy block format, not the Snappy stream format.\n func Decode(dst, src []byte) ([]byte, error) {\n \tdLen, s, err := decodedLen(src)\n \tif err != nil {\n@@ -85,8 +83,6 @@ func NewReader(r io.Reader) *Reader {\n }\n \n // Reader is an io.Reader that can read Snappy-compressed bytes.\n-//\n-// Reader handles the Snappy stream format, not the Snappy block format.\n type Reader struct {\n \tr       io.Reader\n \terr     error\n@@ -118,23 +114,32 @@ func (r *Reader) readFull(p []byte, allowEOF bool) (ok bool) {\n \treturn true\n }\n \n-func (r *Reader) fill() error {\n-\tfor r.i >= r.j {\n+// Read satisfies the io.Reader interface.\n+func (r *Reader) Read(p []byte) (int, error) {\n+\tif r.err != nil {\n+\t\treturn 0, r.err\n+\t}\n+\tfor {\n+\t\tif r.i < r.j {\n+\t\t\tn := copy(p, r.decoded[r.i:r.j])\n+\t\t\tr.i += n\n+\t\t\treturn n, nil\n+\t\t}\n \t\tif !r.readFull(r.buf[:4], true) {\n-\t\t\treturn r.err\n+\t\t\treturn 0, r.err\n \t\t}\n \t\tchunkType := r.buf[0]\n \t\tif !r.readHeader {\n \t\t\tif chunkType != chunkTypeStreamIdentifier {\n \t\t\t\tr.err = ErrCorrupt\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tr.readHeader = true\n \t\t}\n \t\tchunkLen := int(r.buf[1]) | int(r.buf[2])<<8 | int(r.buf[3])<<16\n \t\tif chunkLen > len(r.buf) {\n \t\t\tr.err = ErrUnsupported\n-\t\t\treturn r.err\n+\t\t\treturn 0, r.err\n \t\t}\n \n \t\t// The chunk types are specified at\n@@ -144,31 +149,31 @@ func (r *Reader) fill() error {\n \t\t\t// Section 4.2. Compressed data (chunk type 0x00).\n \t\t\tif chunkLen < checksumSize {\n \t\t\t\tr.err = ErrCorrupt\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tbuf := r.buf[:chunkLen]\n \t\t\tif !r.readFull(buf, false) {\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tchecksum := uint32(buf[0]) | uint32(buf[1])<<8 | uint32(buf[2])<<16 | uint32(buf[3])<<24\n \t\t\tbuf = buf[checksumSize:]\n \n \t\t\tn, err := DecodedLen(buf)\n \t\t\tif err != nil {\n \t\t\t\tr.err = err\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tif n > len(r.decoded) {\n \t\t\t\tr.err = ErrCorrupt\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tif _, err := Decode(r.decoded, buf); err != nil {\n \t\t\t\tr.err = err\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tif crc(r.decoded[:n]) != checksum {\n \t\t\t\tr.err = ErrCorrupt\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tr.i, r.j = 0, n\n \t\t\tcontinue\n@@ -177,25 +182,25 @@ func (r *Reader) fill() error {\n \t\t\t// Section 4.3. Uncompressed data (chunk type 0x01).\n \t\t\tif chunkLen < checksumSize {\n \t\t\t\tr.err = ErrCorrupt\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tbuf := r.buf[:checksumSize]\n \t\t\tif !r.readFull(buf, false) {\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tchecksum := uint32(buf[0]) | uint32(buf[1])<<8 | uint32(buf[2])<<16 | uint32(buf[3])<<24\n \t\t\t// Read directly into r.decoded instead of via r.buf.\n \t\t\tn := chunkLen - checksumSize\n \t\t\tif n > len(r.decoded) {\n \t\t\t\tr.err = ErrCorrupt\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tif !r.readFull(r.decoded[:n], false) {\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tif crc(r.decoded[:n]) != checksum {\n \t\t\t\tr.err = ErrCorrupt\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tr.i, r.j = 0, n\n \t\t\tcontinue\n@@ -204,15 +209,15 @@ func (r *Reader) fill() error {\n \t\t\t// Section 4.1. Stream identifier (chunk type 0xff).\n \t\t\tif chunkLen != len(magicBody) {\n \t\t\t\tr.err = ErrCorrupt\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tif !r.readFull(r.buf[:len(magicBody)], false) {\n-\t\t\t\treturn r.err\n+\t\t\t\treturn 0, r.err\n \t\t\t}\n \t\t\tfor i := 0; i < len(magicBody); i++ {\n \t\t\t\tif r.buf[i] != magicBody[i] {\n \t\t\t\t\tr.err = ErrCorrupt\n-\t\t\t\t\treturn r.err\n+\t\t\t\t\treturn 0, r.err\n \t\t\t\t}\n \t\t\t}\n \t\t\tcontinue\n@@ -221,44 +226,12 @@ func (r *Reader) fill() error {\n \t\tif chunkType <= 0x7f {\n \t\t\t// Section 4.5. Reserved unskippable chunks (chunk types 0x02-0x7f).\n \t\t\tr.err = ErrUnsupported\n-\t\t\treturn r.err\n+\t\t\treturn 0, r.err\n \t\t}\n \t\t// Section 4.4 Padding (chunk type 0xfe).\n \t\t// Section 4.6. Reserved skippable chunks (chunk types 0x80-0xfd).\n \t\tif !r.readFull(r.buf[:chunkLen], false) {\n-\t\t\treturn r.err\n+\t\t\treturn 0, r.err\n \t\t}\n \t}\n-\n-\treturn nil\n-}\n-\n-// Read satisfies the io.Reader interface.\n-func (r *Reader) Read(p []byte) (int, error) {\n-\tif r.err != nil {\n-\t\treturn 0, r.err\n-\t}\n-\n-\tif err := r.fill(); err != nil {\n-\t\treturn 0, err\n-\t}\n-\n-\tn := copy(p, r.decoded[r.i:r.j])\n-\tr.i += n\n-\treturn n, nil\n-}\n-\n-// ReadByte satisfies the io.ByteReader interface.\n-func (r *Reader) ReadByte() (byte, error) {\n-\tif r.err != nil {\n-\t\treturn 0, r.err\n-\t}\n-\n-\tif err := r.fill(); err != nil {\n-\t\treturn 0, err\n-\t}\n-\n-\tc := r.decoded[r.i]\n-\tr.i++\n-\treturn c, nil\n }"
    },
    {
      "sha": "fcd192b849eda1c391d5460b24ce4e263f3a6b90",
      "filename": "backend/vendor/github.com/golang/snappy/decode_amd64.go",
      "status": "renamed",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fdecode_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fdecode_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fdecode_amd64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -5,7 +5,6 @@\n // +build !appengine\n // +build gc\n // +build !noasm\n-// +build amd64 arm64\n \n package snappy\n ",
      "previous_filename": "backend/vendor/github.com/golang/snappy/decode_asm.go"
    },
    {
      "sha": "7a3ead17eacfe3add2fb2387c40e3682bda4641f",
      "filename": "backend/vendor/github.com/golang/snappy/decode_arm64.s",
      "status": "removed",
      "additions": 0,
      "deletions": 494,
      "changes": 494,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fdecode_arm64.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fdecode_arm64.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fdecode_arm64.s?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,494 +0,0 @@\n-// Copyright 2020 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-// +build !appengine\n-// +build gc\n-// +build !noasm\n-\n-#include \"textflag.h\"\n-\n-// The asm code generally follows the pure Go code in decode_other.go, except\n-// where marked with a \"!!!\".\n-\n-// func decode(dst, src []byte) int\n-//\n-// All local variables fit into registers. The non-zero stack size is only to\n-// spill registers and push args when issuing a CALL. The register allocation:\n-//\t- R2\tscratch\n-//\t- R3\tscratch\n-//\t- R4\tlength or x\n-//\t- R5\toffset\n-//\t- R6\t&src[s]\n-//\t- R7\t&dst[d]\n-//\t+ R8\tdst_base\n-//\t+ R9\tdst_len\n-//\t+ R10\tdst_base + dst_len\n-//\t+ R11\tsrc_base\n-//\t+ R12\tsrc_len\n-//\t+ R13\tsrc_base + src_len\n-//\t- R14\tused by doCopy\n-//\t- R15\tused by doCopy\n-//\n-// The registers R8-R13 (marked with a \"+\") are set at the start of the\n-// function, and after a CALL returns, and are not otherwise modified.\n-//\n-// The d variable is implicitly R7 - R8,  and len(dst)-d is R10 - R7.\n-// The s variable is implicitly R6 - R11, and len(src)-s is R13 - R6.\n-TEXT ·decode(SB), NOSPLIT, $56-56\n-\t// Initialize R6, R7 and R8-R13.\n-\tMOVD dst_base+0(FP), R8\n-\tMOVD dst_len+8(FP), R9\n-\tMOVD R8, R7\n-\tMOVD R8, R10\n-\tADD  R9, R10, R10\n-\tMOVD src_base+24(FP), R11\n-\tMOVD src_len+32(FP), R12\n-\tMOVD R11, R6\n-\tMOVD R11, R13\n-\tADD  R12, R13, R13\n-\n-loop:\n-\t// for s < len(src)\n-\tCMP R13, R6\n-\tBEQ end\n-\n-\t// R4 = uint32(src[s])\n-\t//\n-\t// switch src[s] & 0x03\n-\tMOVBU (R6), R4\n-\tMOVW  R4, R3\n-\tANDW  $3, R3\n-\tMOVW  $1, R1\n-\tCMPW  R1, R3\n-\tBGE   tagCopy\n-\n-\t// ----------------------------------------\n-\t// The code below handles literal tags.\n-\n-\t// case tagLiteral:\n-\t// x := uint32(src[s] >> 2)\n-\t// switch\n-\tMOVW $60, R1\n-\tLSRW $2, R4, R4\n-\tCMPW R4, R1\n-\tBLS  tagLit60Plus\n-\n-\t// case x < 60:\n-\t// s++\n-\tADD $1, R6, R6\n-\n-doLit:\n-\t// This is the end of the inner \"switch\", when we have a literal tag.\n-\t//\n-\t// We assume that R4 == x and x fits in a uint32, where x is the variable\n-\t// used in the pure Go decode_other.go code.\n-\n-\t// length = int(x) + 1\n-\t//\n-\t// Unlike the pure Go code, we don't need to check if length <= 0 because\n-\t// R4 can hold 64 bits, so the increment cannot overflow.\n-\tADD $1, R4, R4\n-\n-\t// Prepare to check if copying length bytes will run past the end of dst or\n-\t// src.\n-\t//\n-\t// R2 = len(dst) - d\n-\t// R3 = len(src) - s\n-\tMOVD R10, R2\n-\tSUB  R7, R2, R2\n-\tMOVD R13, R3\n-\tSUB  R6, R3, R3\n-\n-\t// !!! Try a faster technique for short (16 or fewer bytes) copies.\n-\t//\n-\t// if length > 16 || len(dst)-d < 16 || len(src)-s < 16 {\n-\t//   goto callMemmove // Fall back on calling runtime·memmove.\n-\t// }\n-\t//\n-\t// The C++ snappy code calls this TryFastAppend. It also checks len(src)-s\n-\t// against 21 instead of 16, because it cannot assume that all of its input\n-\t// is contiguous in memory and so it needs to leave enough source bytes to\n-\t// read the next tag without refilling buffers, but Go's Decode assumes\n-\t// contiguousness (the src argument is a []byte).\n-\tCMP $16, R4\n-\tBGT callMemmove\n-\tCMP $16, R2\n-\tBLT callMemmove\n-\tCMP $16, R3\n-\tBLT callMemmove\n-\n-\t// !!! Implement the copy from src to dst as a 16-byte load and store.\n-\t// (Decode's documentation says that dst and src must not overlap.)\n-\t//\n-\t// This always copies 16 bytes, instead of only length bytes, but that's\n-\t// OK. If the input is a valid Snappy encoding then subsequent iterations\n-\t// will fix up the overrun. Otherwise, Decode returns a nil []byte (and a\n-\t// non-nil error), so the overrun will be ignored.\n-\t//\n-\t// Note that on arm64, it is legal and cheap to issue unaligned 8-byte or\n-\t// 16-byte loads and stores. This technique probably wouldn't be as\n-\t// effective on architectures that are fussier about alignment.\n-\tLDP 0(R6), (R14, R15)\n-\tSTP (R14, R15), 0(R7)\n-\n-\t// d += length\n-\t// s += length\n-\tADD R4, R7, R7\n-\tADD R4, R6, R6\n-\tB   loop\n-\n-callMemmove:\n-\t// if length > len(dst)-d || length > len(src)-s { etc }\n-\tCMP R2, R4\n-\tBGT errCorrupt\n-\tCMP R3, R4\n-\tBGT errCorrupt\n-\n-\t// copy(dst[d:], src[s:s+length])\n-\t//\n-\t// This means calling runtime·memmove(&dst[d], &src[s], length), so we push\n-\t// R7, R6 and R4 as arguments. Coincidentally, we also need to spill those\n-\t// three registers to the stack, to save local variables across the CALL.\n-\tMOVD R7, 8(RSP)\n-\tMOVD R6, 16(RSP)\n-\tMOVD R4, 24(RSP)\n-\tMOVD R7, 32(RSP)\n-\tMOVD R6, 40(RSP)\n-\tMOVD R4, 48(RSP)\n-\tCALL runtime·memmove(SB)\n-\n-\t// Restore local variables: unspill registers from the stack and\n-\t// re-calculate R8-R13.\n-\tMOVD 32(RSP), R7\n-\tMOVD 40(RSP), R6\n-\tMOVD 48(RSP), R4\n-\tMOVD dst_base+0(FP), R8\n-\tMOVD dst_len+8(FP), R9\n-\tMOVD R8, R10\n-\tADD  R9, R10, R10\n-\tMOVD src_base+24(FP), R11\n-\tMOVD src_len+32(FP), R12\n-\tMOVD R11, R13\n-\tADD  R12, R13, R13\n-\n-\t// d += length\n-\t// s += length\n-\tADD R4, R7, R7\n-\tADD R4, R6, R6\n-\tB   loop\n-\n-tagLit60Plus:\n-\t// !!! This fragment does the\n-\t//\n-\t// s += x - 58; if uint(s) > uint(len(src)) { etc }\n-\t//\n-\t// checks. In the asm version, we code it once instead of once per switch case.\n-\tADD  R4, R6, R6\n-\tSUB  $58, R6, R6\n-\tMOVD R6, R3\n-\tSUB  R11, R3, R3\n-\tCMP  R12, R3\n-\tBGT  errCorrupt\n-\n-\t// case x == 60:\n-\tMOVW $61, R1\n-\tCMPW R1, R4\n-\tBEQ  tagLit61\n-\tBGT  tagLit62Plus\n-\n-\t// x = uint32(src[s-1])\n-\tMOVBU -1(R6), R4\n-\tB     doLit\n-\n-tagLit61:\n-\t// case x == 61:\n-\t// x = uint32(src[s-2]) | uint32(src[s-1])<<8\n-\tMOVHU -2(R6), R4\n-\tB     doLit\n-\n-tagLit62Plus:\n-\tCMPW $62, R4\n-\tBHI  tagLit63\n-\n-\t// case x == 62:\n-\t// x = uint32(src[s-3]) | uint32(src[s-2])<<8 | uint32(src[s-1])<<16\n-\tMOVHU -3(R6), R4\n-\tMOVBU -1(R6), R3\n-\tORR   R3<<16, R4\n-\tB     doLit\n-\n-tagLit63:\n-\t// case x == 63:\n-\t// x = uint32(src[s-4]) | uint32(src[s-3])<<8 | uint32(src[s-2])<<16 | uint32(src[s-1])<<24\n-\tMOVWU -4(R6), R4\n-\tB     doLit\n-\n-\t// The code above handles literal tags.\n-\t// ----------------------------------------\n-\t// The code below handles copy tags.\n-\n-tagCopy4:\n-\t// case tagCopy4:\n-\t// s += 5\n-\tADD $5, R6, R6\n-\n-\t// if uint(s) > uint(len(src)) { etc }\n-\tMOVD R6, R3\n-\tSUB  R11, R3, R3\n-\tCMP  R12, R3\n-\tBGT  errCorrupt\n-\n-\t// length = 1 + int(src[s-5])>>2\n-\tMOVD $1, R1\n-\tADD  R4>>2, R1, R4\n-\n-\t// offset = int(uint32(src[s-4]) | uint32(src[s-3])<<8 | uint32(src[s-2])<<16 | uint32(src[s-1])<<24)\n-\tMOVWU -4(R6), R5\n-\tB     doCopy\n-\n-tagCopy2:\n-\t// case tagCopy2:\n-\t// s += 3\n-\tADD $3, R6, R6\n-\n-\t// if uint(s) > uint(len(src)) { etc }\n-\tMOVD R6, R3\n-\tSUB  R11, R3, R3\n-\tCMP  R12, R3\n-\tBGT  errCorrupt\n-\n-\t// length = 1 + int(src[s-3])>>2\n-\tMOVD $1, R1\n-\tADD  R4>>2, R1, R4\n-\n-\t// offset = int(uint32(src[s-2]) | uint32(src[s-1])<<8)\n-\tMOVHU -2(R6), R5\n-\tB     doCopy\n-\n-tagCopy:\n-\t// We have a copy tag. We assume that:\n-\t//\t- R3 == src[s] & 0x03\n-\t//\t- R4 == src[s]\n-\tCMP $2, R3\n-\tBEQ tagCopy2\n-\tBGT tagCopy4\n-\n-\t// case tagCopy1:\n-\t// s += 2\n-\tADD $2, R6, R6\n-\n-\t// if uint(s) > uint(len(src)) { etc }\n-\tMOVD R6, R3\n-\tSUB  R11, R3, R3\n-\tCMP  R12, R3\n-\tBGT  errCorrupt\n-\n-\t// offset = int(uint32(src[s-2])&0xe0<<3 | uint32(src[s-1]))\n-\tMOVD  R4, R5\n-\tAND   $0xe0, R5\n-\tMOVBU -1(R6), R3\n-\tORR   R5<<3, R3, R5\n-\n-\t// length = 4 + int(src[s-2])>>2&0x7\n-\tMOVD $7, R1\n-\tAND  R4>>2, R1, R4\n-\tADD  $4, R4, R4\n-\n-doCopy:\n-\t// This is the end of the outer \"switch\", when we have a copy tag.\n-\t//\n-\t// We assume that:\n-\t//\t- R4 == length && R4 > 0\n-\t//\t- R5 == offset\n-\n-\t// if offset <= 0 { etc }\n-\tMOVD $0, R1\n-\tCMP  R1, R5\n-\tBLE  errCorrupt\n-\n-\t// if d < offset { etc }\n-\tMOVD R7, R3\n-\tSUB  R8, R3, R3\n-\tCMP  R5, R3\n-\tBLT  errCorrupt\n-\n-\t// if length > len(dst)-d { etc }\n-\tMOVD R10, R3\n-\tSUB  R7, R3, R3\n-\tCMP  R3, R4\n-\tBGT  errCorrupt\n-\n-\t// forwardCopy(dst[d:d+length], dst[d-offset:]); d += length\n-\t//\n-\t// Set:\n-\t//\t- R14 = len(dst)-d\n-\t//\t- R15 = &dst[d-offset]\n-\tMOVD R10, R14\n-\tSUB  R7, R14, R14\n-\tMOVD R7, R15\n-\tSUB  R5, R15, R15\n-\n-\t// !!! Try a faster technique for short (16 or fewer bytes) forward copies.\n-\t//\n-\t// First, try using two 8-byte load/stores, similar to the doLit technique\n-\t// above. Even if dst[d:d+length] and dst[d-offset:] can overlap, this is\n-\t// still OK if offset >= 8. Note that this has to be two 8-byte load/stores\n-\t// and not one 16-byte load/store, and the first store has to be before the\n-\t// second load, due to the overlap if offset is in the range [8, 16).\n-\t//\n-\t// if length > 16 || offset < 8 || len(dst)-d < 16 {\n-\t//   goto slowForwardCopy\n-\t// }\n-\t// copy 16 bytes\n-\t// d += length\n-\tCMP  $16, R4\n-\tBGT  slowForwardCopy\n-\tCMP  $8, R5\n-\tBLT  slowForwardCopy\n-\tCMP  $16, R14\n-\tBLT  slowForwardCopy\n-\tMOVD 0(R15), R2\n-\tMOVD R2, 0(R7)\n-\tMOVD 8(R15), R3\n-\tMOVD R3, 8(R7)\n-\tADD  R4, R7, R7\n-\tB    loop\n-\n-slowForwardCopy:\n-\t// !!! If the forward copy is longer than 16 bytes, or if offset < 8, we\n-\t// can still try 8-byte load stores, provided we can overrun up to 10 extra\n-\t// bytes. As above, the overrun will be fixed up by subsequent iterations\n-\t// of the outermost loop.\n-\t//\n-\t// The C++ snappy code calls this technique IncrementalCopyFastPath. Its\n-\t// commentary says:\n-\t//\n-\t// ----\n-\t//\n-\t// The main part of this loop is a simple copy of eight bytes at a time\n-\t// until we've copied (at least) the requested amount of bytes.  However,\n-\t// if d and d-offset are less than eight bytes apart (indicating a\n-\t// repeating pattern of length < 8), we first need to expand the pattern in\n-\t// order to get the correct results. For instance, if the buffer looks like\n-\t// this, with the eight-byte <d-offset> and <d> patterns marked as\n-\t// intervals:\n-\t//\n-\t//    abxxxxxxxxxxxx\n-\t//    [------]           d-offset\n-\t//      [------]         d\n-\t//\n-\t// a single eight-byte copy from <d-offset> to <d> will repeat the pattern\n-\t// once, after which we can move <d> two bytes without moving <d-offset>:\n-\t//\n-\t//    ababxxxxxxxxxx\n-\t//    [------]           d-offset\n-\t//        [------]       d\n-\t//\n-\t// and repeat the exercise until the two no longer overlap.\n-\t//\n-\t// This allows us to do very well in the special case of one single byte\n-\t// repeated many times, without taking a big hit for more general cases.\n-\t//\n-\t// The worst case of extra writing past the end of the match occurs when\n-\t// offset == 1 and length == 1; the last copy will read from byte positions\n-\t// [0..7] and write to [4..11], whereas it was only supposed to write to\n-\t// position 1. Thus, ten excess bytes.\n-\t//\n-\t// ----\n-\t//\n-\t// That \"10 byte overrun\" worst case is confirmed by Go's\n-\t// TestSlowForwardCopyOverrun, which also tests the fixUpSlowForwardCopy\n-\t// and finishSlowForwardCopy algorithm.\n-\t//\n-\t// if length > len(dst)-d-10 {\n-\t//   goto verySlowForwardCopy\n-\t// }\n-\tSUB $10, R14, R14\n-\tCMP R14, R4\n-\tBGT verySlowForwardCopy\n-\n-makeOffsetAtLeast8:\n-\t// !!! As above, expand the pattern so that offset >= 8 and we can use\n-\t// 8-byte load/stores.\n-\t//\n-\t// for offset < 8 {\n-\t//   copy 8 bytes from dst[d-offset:] to dst[d:]\n-\t//   length -= offset\n-\t//   d      += offset\n-\t//   offset += offset\n-\t//   // The two previous lines together means that d-offset, and therefore\n-\t//   // R15, is unchanged.\n-\t// }\n-\tCMP  $8, R5\n-\tBGE  fixUpSlowForwardCopy\n-\tMOVD (R15), R3\n-\tMOVD R3, (R7)\n-\tSUB  R5, R4, R4\n-\tADD  R5, R7, R7\n-\tADD  R5, R5, R5\n-\tB    makeOffsetAtLeast8\n-\n-fixUpSlowForwardCopy:\n-\t// !!! Add length (which might be negative now) to d (implied by R7 being\n-\t// &dst[d]) so that d ends up at the right place when we jump back to the\n-\t// top of the loop. Before we do that, though, we save R7 to R2 so that, if\n-\t// length is positive, copying the remaining length bytes will write to the\n-\t// right place.\n-\tMOVD R7, R2\n-\tADD  R4, R7, R7\n-\n-finishSlowForwardCopy:\n-\t// !!! Repeat 8-byte load/stores until length <= 0. Ending with a negative\n-\t// length means that we overrun, but as above, that will be fixed up by\n-\t// subsequent iterations of the outermost loop.\n-\tMOVD $0, R1\n-\tCMP  R1, R4\n-\tBLE  loop\n-\tMOVD (R15), R3\n-\tMOVD R3, (R2)\n-\tADD  $8, R15, R15\n-\tADD  $8, R2, R2\n-\tSUB  $8, R4, R4\n-\tB    finishSlowForwardCopy\n-\n-verySlowForwardCopy:\n-\t// verySlowForwardCopy is a simple implementation of forward copy. In C\n-\t// parlance, this is a do/while loop instead of a while loop, since we know\n-\t// that length > 0. In Go syntax:\n-\t//\n-\t// for {\n-\t//   dst[d] = dst[d - offset]\n-\t//   d++\n-\t//   length--\n-\t//   if length == 0 {\n-\t//     break\n-\t//   }\n-\t// }\n-\tMOVB (R15), R3\n-\tMOVB R3, (R7)\n-\tADD  $1, R15, R15\n-\tADD  $1, R7, R7\n-\tSUB  $1, R4, R4\n-\tCBNZ R4, verySlowForwardCopy\n-\tB    loop\n-\n-\t// The code above handles copy tags.\n-\t// ----------------------------------------\n-\n-end:\n-\t// This is the end of the \"for s < len(src)\".\n-\t//\n-\t// if d != len(dst) { etc }\n-\tCMP R10, R7\n-\tBNE errCorrupt\n-\n-\t// return 0\n-\tMOVD $0, ret+48(FP)\n-\tRET\n-\n-errCorrupt:\n-\t// return decodeErrCodeCorrupt\n-\tMOVD $1, R2\n-\tMOVD R2, ret+48(FP)\n-\tRET"
    },
    {
      "sha": "8c9f2049bc7be00b86e7237a7c91206c9dfabd02",
      "filename": "backend/vendor/github.com/golang/snappy/decode_other.go",
      "status": "modified",
      "additions": 5,
      "deletions": 19,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fdecode_other.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fdecode_other.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fdecode_other.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build !amd64,!arm64 appengine !gc noasm\n+// +build !amd64 appengine !gc noasm\n \n package snappy\n \n@@ -85,28 +85,14 @@ func decode(dst, src []byte) int {\n \t\tif offset <= 0 || d < offset || length > len(dst)-d {\n \t\t\treturn decodeErrCodeCorrupt\n \t\t}\n-\t\t// Copy from an earlier sub-slice of dst to a later sub-slice.\n-\t\t// If no overlap, use the built-in copy:\n-\t\tif offset >= length {\n-\t\t\tcopy(dst[d:d+length], dst[d-offset:])\n-\t\t\td += length\n-\t\t\tcontinue\n-\t\t}\n-\n-\t\t// Unlike the built-in copy function, this byte-by-byte copy always runs\n+\t\t// Copy from an earlier sub-slice of dst to a later sub-slice. Unlike\n+\t\t// the built-in copy function, this byte-by-byte copy always runs\n \t\t// forwards, even if the slices overlap. Conceptually, this is:\n \t\t//\n \t\t// d += forwardCopy(dst[d:d+length], dst[d-offset:])\n-\t\t//\n-\t\t// We align the slices into a and b and show the compiler they are the same size.\n-\t\t// This allows the loop to run without bounds checks.\n-\t\ta := dst[d : d+length]\n-\t\tb := dst[d-offset:]\n-\t\tb = b[:len(a)]\n-\t\tfor i := range a {\n-\t\t\ta[i] = b[i]\n+\t\tfor end := d + length; d != end; d++ {\n+\t\t\tdst[d] = dst[d-offset]\n \t\t}\n-\t\td += length\n \t}\n \tif d != len(dst) {\n \t\treturn decodeErrCodeCorrupt"
    },
    {
      "sha": "8d393e904bb3126decbc1bec4fb2b9ffee02f1d3",
      "filename": "backend/vendor/github.com/golang/snappy/encode.go",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fencode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fencode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fencode.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -15,8 +15,6 @@ import (\n // Otherwise, a newly allocated slice will be returned.\n //\n // The dst and src must not overlap. It is valid to pass a nil dst.\n-//\n-// Encode handles the Snappy block format, not the Snappy stream format.\n func Encode(dst, src []byte) []byte {\n \tif n := MaxEncodedLen(len(src)); n < 0 {\n \t\tpanic(ErrTooLarge)\n@@ -141,8 +139,6 @@ func NewBufferedWriter(w io.Writer) *Writer {\n }\n \n // Writer is an io.Writer that can write Snappy-compressed bytes.\n-//\n-// Writer handles the Snappy stream format, not the Snappy block format.\n type Writer struct {\n \tw   io.Writer\n \terr error"
    },
    {
      "sha": "150d91bc8be57d3cc659ceefbd11f08932106459",
      "filename": "backend/vendor/github.com/golang/snappy/encode_amd64.go",
      "status": "renamed",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fencode_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fencode_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fencode_amd64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -5,7 +5,6 @@\n // +build !appengine\n // +build gc\n // +build !noasm\n-// +build amd64 arm64\n \n package snappy\n ",
      "previous_filename": "backend/vendor/github.com/golang/snappy/encode_asm.go"
    },
    {
      "sha": "f8d54adfc5c1db9628a677ae5d9cd036ea6865ac",
      "filename": "backend/vendor/github.com/golang/snappy/encode_arm64.s",
      "status": "removed",
      "additions": 0,
      "deletions": 722,
      "changes": 722,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fencode_arm64.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fencode_arm64.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fencode_arm64.s?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,722 +0,0 @@\n-// Copyright 2020 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-// +build !appengine\n-// +build gc\n-// +build !noasm\n-\n-#include \"textflag.h\"\n-\n-// The asm code generally follows the pure Go code in encode_other.go, except\n-// where marked with a \"!!!\".\n-\n-// ----------------------------------------------------------------------------\n-\n-// func emitLiteral(dst, lit []byte) int\n-//\n-// All local variables fit into registers. The register allocation:\n-//\t- R3\tlen(lit)\n-//\t- R4\tn\n-//\t- R6\treturn value\n-//\t- R8\t&dst[i]\n-//\t- R10\t&lit[0]\n-//\n-// The 32 bytes of stack space is to call runtime·memmove.\n-//\n-// The unusual register allocation of local variables, such as R10 for the\n-// source pointer, matches the allocation used at the call site in encodeBlock,\n-// which makes it easier to manually inline this function.\n-TEXT ·emitLiteral(SB), NOSPLIT, $32-56\n-\tMOVD dst_base+0(FP), R8\n-\tMOVD lit_base+24(FP), R10\n-\tMOVD lit_len+32(FP), R3\n-\tMOVD R3, R6\n-\tMOVW R3, R4\n-\tSUBW $1, R4, R4\n-\n-\tCMPW $60, R4\n-\tBLT  oneByte\n-\tCMPW $256, R4\n-\tBLT  twoBytes\n-\n-threeBytes:\n-\tMOVD $0xf4, R2\n-\tMOVB R2, 0(R8)\n-\tMOVW R4, 1(R8)\n-\tADD  $3, R8, R8\n-\tADD  $3, R6, R6\n-\tB    memmove\n-\n-twoBytes:\n-\tMOVD $0xf0, R2\n-\tMOVB R2, 0(R8)\n-\tMOVB R4, 1(R8)\n-\tADD  $2, R8, R8\n-\tADD  $2, R6, R6\n-\tB    memmove\n-\n-oneByte:\n-\tLSLW $2, R4, R4\n-\tMOVB R4, 0(R8)\n-\tADD  $1, R8, R8\n-\tADD  $1, R6, R6\n-\n-memmove:\n-\tMOVD R6, ret+48(FP)\n-\n-\t// copy(dst[i:], lit)\n-\t//\n-\t// This means calling runtime·memmove(&dst[i], &lit[0], len(lit)), so we push\n-\t// R8, R10 and R3 as arguments.\n-\tMOVD R8, 8(RSP)\n-\tMOVD R10, 16(RSP)\n-\tMOVD R3, 24(RSP)\n-\tCALL runtime·memmove(SB)\n-\tRET\n-\n-// ----------------------------------------------------------------------------\n-\n-// func emitCopy(dst []byte, offset, length int) int\n-//\n-// All local variables fit into registers. The register allocation:\n-//\t- R3\tlength\n-//\t- R7\t&dst[0]\n-//\t- R8\t&dst[i]\n-//\t- R11\toffset\n-//\n-// The unusual register allocation of local variables, such as R11 for the\n-// offset, matches the allocation used at the call site in encodeBlock, which\n-// makes it easier to manually inline this function.\n-TEXT ·emitCopy(SB), NOSPLIT, $0-48\n-\tMOVD dst_base+0(FP), R8\n-\tMOVD R8, R7\n-\tMOVD offset+24(FP), R11\n-\tMOVD length+32(FP), R3\n-\n-loop0:\n-\t// for length >= 68 { etc }\n-\tCMPW $68, R3\n-\tBLT  step1\n-\n-\t// Emit a length 64 copy, encoded as 3 bytes.\n-\tMOVD $0xfe, R2\n-\tMOVB R2, 0(R8)\n-\tMOVW R11, 1(R8)\n-\tADD  $3, R8, R8\n-\tSUB  $64, R3, R3\n-\tB    loop0\n-\n-step1:\n-\t// if length > 64 { etc }\n-\tCMP $64, R3\n-\tBLE step2\n-\n-\t// Emit a length 60 copy, encoded as 3 bytes.\n-\tMOVD $0xee, R2\n-\tMOVB R2, 0(R8)\n-\tMOVW R11, 1(R8)\n-\tADD  $3, R8, R8\n-\tSUB  $60, R3, R3\n-\n-step2:\n-\t// if length >= 12 || offset >= 2048 { goto step3 }\n-\tCMP  $12, R3\n-\tBGE  step3\n-\tCMPW $2048, R11\n-\tBGE  step3\n-\n-\t// Emit the remaining copy, encoded as 2 bytes.\n-\tMOVB R11, 1(R8)\n-\tLSRW $3, R11, R11\n-\tAND  $0xe0, R11, R11\n-\tSUB  $4, R3, R3\n-\tLSLW $2, R3\n-\tAND  $0xff, R3, R3\n-\tORRW R3, R11, R11\n-\tORRW $1, R11, R11\n-\tMOVB R11, 0(R8)\n-\tADD  $2, R8, R8\n-\n-\t// Return the number of bytes written.\n-\tSUB  R7, R8, R8\n-\tMOVD R8, ret+40(FP)\n-\tRET\n-\n-step3:\n-\t// Emit the remaining copy, encoded as 3 bytes.\n-\tSUB  $1, R3, R3\n-\tAND  $0xff, R3, R3\n-\tLSLW $2, R3, R3\n-\tORRW $2, R3, R3\n-\tMOVB R3, 0(R8)\n-\tMOVW R11, 1(R8)\n-\tADD  $3, R8, R8\n-\n-\t// Return the number of bytes written.\n-\tSUB  R7, R8, R8\n-\tMOVD R8, ret+40(FP)\n-\tRET\n-\n-// ----------------------------------------------------------------------------\n-\n-// func extendMatch(src []byte, i, j int) int\n-//\n-// All local variables fit into registers. The register allocation:\n-//\t- R6\t&src[0]\n-//\t- R7\t&src[j]\n-//\t- R13\t&src[len(src) - 8]\n-//\t- R14\t&src[len(src)]\n-//\t- R15\t&src[i]\n-//\n-// The unusual register allocation of local variables, such as R15 for a source\n-// pointer, matches the allocation used at the call site in encodeBlock, which\n-// makes it easier to manually inline this function.\n-TEXT ·extendMatch(SB), NOSPLIT, $0-48\n-\tMOVD src_base+0(FP), R6\n-\tMOVD src_len+8(FP), R14\n-\tMOVD i+24(FP), R15\n-\tMOVD j+32(FP), R7\n-\tADD  R6, R14, R14\n-\tADD  R6, R15, R15\n-\tADD  R6, R7, R7\n-\tMOVD R14, R13\n-\tSUB  $8, R13, R13\n-\n-cmp8:\n-\t// As long as we are 8 or more bytes before the end of src, we can load and\n-\t// compare 8 bytes at a time. If those 8 bytes are equal, repeat.\n-\tCMP  R13, R7\n-\tBHI  cmp1\n-\tMOVD (R15), R3\n-\tMOVD (R7), R4\n-\tCMP  R4, R3\n-\tBNE  bsf\n-\tADD  $8, R15, R15\n-\tADD  $8, R7, R7\n-\tB    cmp8\n-\n-bsf:\n-\t// If those 8 bytes were not equal, XOR the two 8 byte values, and return\n-\t// the index of the first byte that differs.\n-\t// RBIT reverses the bit order, then CLZ counts the leading zeros, the\n-\t// combination of which finds the least significant bit which is set.\n-\t// The arm64 architecture is little-endian, and the shift by 3 converts\n-\t// a bit index to a byte index.\n-\tEOR  R3, R4, R4\n-\tRBIT R4, R4\n-\tCLZ  R4, R4\n-\tADD  R4>>3, R7, R7\n-\n-\t// Convert from &src[ret] to ret.\n-\tSUB  R6, R7, R7\n-\tMOVD R7, ret+40(FP)\n-\tRET\n-\n-cmp1:\n-\t// In src's tail, compare 1 byte at a time.\n-\tCMP  R7, R14\n-\tBLS  extendMatchEnd\n-\tMOVB (R15), R3\n-\tMOVB (R7), R4\n-\tCMP  R4, R3\n-\tBNE  extendMatchEnd\n-\tADD  $1, R15, R15\n-\tADD  $1, R7, R7\n-\tB    cmp1\n-\n-extendMatchEnd:\n-\t// Convert from &src[ret] to ret.\n-\tSUB  R6, R7, R7\n-\tMOVD R7, ret+40(FP)\n-\tRET\n-\n-// ----------------------------------------------------------------------------\n-\n-// func encodeBlock(dst, src []byte) (d int)\n-//\n-// All local variables fit into registers, other than \"var table\". The register\n-// allocation:\n-//\t- R3\t.\t.\n-//\t- R4\t.\t.\n-//\t- R5\t64\tshift\n-//\t- R6\t72\t&src[0], tableSize\n-//\t- R7\t80\t&src[s]\n-//\t- R8\t88\t&dst[d]\n-//\t- R9\t96\tsLimit\n-//\t- R10\t.\t&src[nextEmit]\n-//\t- R11\t104\tprevHash, currHash, nextHash, offset\n-//\t- R12\t112\t&src[base], skip\n-//\t- R13\t.\t&src[nextS], &src[len(src) - 8]\n-//\t- R14\t.\tlen(src), bytesBetweenHashLookups, &src[len(src)], x\n-//\t- R15\t120\tcandidate\n-//\t- R16\t.\thash constant, 0x1e35a7bd\n-//\t- R17\t.\t&table\n-//\t- .  \t128\ttable\n-//\n-// The second column (64, 72, etc) is the stack offset to spill the registers\n-// when calling other functions. We could pack this slightly tighter, but it's\n-// simpler to have a dedicated spill map independent of the function called.\n-//\n-// \"var table [maxTableSize]uint16\" takes up 32768 bytes of stack space. An\n-// extra 64 bytes, to call other functions, and an extra 64 bytes, to spill\n-// local variables (registers) during calls gives 32768 + 64 + 64 = 32896.\n-TEXT ·encodeBlock(SB), 0, $32896-56\n-\tMOVD dst_base+0(FP), R8\n-\tMOVD src_base+24(FP), R7\n-\tMOVD src_len+32(FP), R14\n-\n-\t// shift, tableSize := uint32(32-8), 1<<8\n-\tMOVD  $24, R5\n-\tMOVD  $256, R6\n-\tMOVW  $0xa7bd, R16\n-\tMOVKW $(0x1e35<<16), R16\n-\n-calcShift:\n-\t// for ; tableSize < maxTableSize && tableSize < len(src); tableSize *= 2 {\n-\t//\tshift--\n-\t// }\n-\tMOVD $16384, R2\n-\tCMP  R2, R6\n-\tBGE  varTable\n-\tCMP  R14, R6\n-\tBGE  varTable\n-\tSUB  $1, R5, R5\n-\tLSL  $1, R6, R6\n-\tB    calcShift\n-\n-varTable:\n-\t// var table [maxTableSize]uint16\n-\t//\n-\t// In the asm code, unlike the Go code, we can zero-initialize only the\n-\t// first tableSize elements. Each uint16 element is 2 bytes and each\n-\t// iterations writes 64 bytes, so we can do only tableSize/32 writes\n-\t// instead of the 2048 writes that would zero-initialize all of table's\n-\t// 32768 bytes. This clear could overrun the first tableSize elements, but\n-\t// it won't overrun the allocated stack size.\n-\tADD  $128, RSP, R17\n-\tMOVD R17, R4\n-\n-\t// !!! R6 = &src[tableSize]\n-\tADD R6<<1, R17, R6\n-\n-memclr:\n-\tSTP.P (ZR, ZR), 64(R4)\n-\tSTP   (ZR, ZR), -48(R4)\n-\tSTP   (ZR, ZR), -32(R4)\n-\tSTP   (ZR, ZR), -16(R4)\n-\tCMP   R4, R6\n-\tBHI   memclr\n-\n-\t// !!! R6 = &src[0]\n-\tMOVD R7, R6\n-\n-\t// sLimit := len(src) - inputMargin\n-\tMOVD R14, R9\n-\tSUB  $15, R9, R9\n-\n-\t// !!! Pre-emptively spill R5, R6 and R9 to the stack. Their values don't\n-\t// change for the rest of the function.\n-\tMOVD R5, 64(RSP)\n-\tMOVD R6, 72(RSP)\n-\tMOVD R9, 96(RSP)\n-\n-\t// nextEmit := 0\n-\tMOVD R6, R10\n-\n-\t// s := 1\n-\tADD $1, R7, R7\n-\n-\t// nextHash := hash(load32(src, s), shift)\n-\tMOVW 0(R7), R11\n-\tMULW R16, R11, R11\n-\tLSRW R5, R11, R11\n-\n-outer:\n-\t// for { etc }\n-\n-\t// skip := 32\n-\tMOVD $32, R12\n-\n-\t// nextS := s\n-\tMOVD R7, R13\n-\n-\t// candidate := 0\n-\tMOVD $0, R15\n-\n-inner0:\n-\t// for { etc }\n-\n-\t// s := nextS\n-\tMOVD R13, R7\n-\n-\t// bytesBetweenHashLookups := skip >> 5\n-\tMOVD R12, R14\n-\tLSR  $5, R14, R14\n-\n-\t// nextS = s + bytesBetweenHashLookups\n-\tADD R14, R13, R13\n-\n-\t// skip += bytesBetweenHashLookups\n-\tADD R14, R12, R12\n-\n-\t// if nextS > sLimit { goto emitRemainder }\n-\tMOVD R13, R3\n-\tSUB  R6, R3, R3\n-\tCMP  R9, R3\n-\tBHI  emitRemainder\n-\n-\t// candidate = int(table[nextHash])\n-\tMOVHU 0(R17)(R11<<1), R15\n-\n-\t// table[nextHash] = uint16(s)\n-\tMOVD R7, R3\n-\tSUB  R6, R3, R3\n-\n-\tMOVH R3, 0(R17)(R11<<1)\n-\n-\t// nextHash = hash(load32(src, nextS), shift)\n-\tMOVW 0(R13), R11\n-\tMULW R16, R11\n-\tLSRW R5, R11, R11\n-\n-\t// if load32(src, s) != load32(src, candidate) { continue } break\n-\tMOVW 0(R7), R3\n-\tMOVW (R6)(R15), R4\n-\tCMPW R4, R3\n-\tBNE  inner0\n-\n-fourByteMatch:\n-\t// As per the encode_other.go code:\n-\t//\n-\t// A 4-byte match has been found. We'll later see etc.\n-\n-\t// !!! Jump to a fast path for short (<= 16 byte) literals. See the comment\n-\t// on inputMargin in encode.go.\n-\tMOVD R7, R3\n-\tSUB  R10, R3, R3\n-\tCMP  $16, R3\n-\tBLE  emitLiteralFastPath\n-\n-\t// ----------------------------------------\n-\t// Begin inline of the emitLiteral call.\n-\t//\n-\t// d += emitLiteral(dst[d:], src[nextEmit:s])\n-\n-\tMOVW R3, R4\n-\tSUBW $1, R4, R4\n-\n-\tMOVW $60, R2\n-\tCMPW R2, R4\n-\tBLT  inlineEmitLiteralOneByte\n-\tMOVW $256, R2\n-\tCMPW R2, R4\n-\tBLT  inlineEmitLiteralTwoBytes\n-\n-inlineEmitLiteralThreeBytes:\n-\tMOVD $0xf4, R1\n-\tMOVB R1, 0(R8)\n-\tMOVW R4, 1(R8)\n-\tADD  $3, R8, R8\n-\tB    inlineEmitLiteralMemmove\n-\n-inlineEmitLiteralTwoBytes:\n-\tMOVD $0xf0, R1\n-\tMOVB R1, 0(R8)\n-\tMOVB R4, 1(R8)\n-\tADD  $2, R8, R8\n-\tB    inlineEmitLiteralMemmove\n-\n-inlineEmitLiteralOneByte:\n-\tLSLW $2, R4, R4\n-\tMOVB R4, 0(R8)\n-\tADD  $1, R8, R8\n-\n-inlineEmitLiteralMemmove:\n-\t// Spill local variables (registers) onto the stack; call; unspill.\n-\t//\n-\t// copy(dst[i:], lit)\n-\t//\n-\t// This means calling runtime·memmove(&dst[i], &lit[0], len(lit)), so we push\n-\t// R8, R10 and R3 as arguments.\n-\tMOVD R8, 8(RSP)\n-\tMOVD R10, 16(RSP)\n-\tMOVD R3, 24(RSP)\n-\n-\t// Finish the \"d +=\" part of \"d += emitLiteral(etc)\".\n-\tADD   R3, R8, R8\n-\tMOVD  R7, 80(RSP)\n-\tMOVD  R8, 88(RSP)\n-\tMOVD  R15, 120(RSP)\n-\tCALL  runtime·memmove(SB)\n-\tMOVD  64(RSP), R5\n-\tMOVD  72(RSP), R6\n-\tMOVD  80(RSP), R7\n-\tMOVD  88(RSP), R8\n-\tMOVD  96(RSP), R9\n-\tMOVD  120(RSP), R15\n-\tADD   $128, RSP, R17\n-\tMOVW  $0xa7bd, R16\n-\tMOVKW $(0x1e35<<16), R16\n-\tB     inner1\n-\n-inlineEmitLiteralEnd:\n-\t// End inline of the emitLiteral call.\n-\t// ----------------------------------------\n-\n-emitLiteralFastPath:\n-\t// !!! Emit the 1-byte encoding \"uint8(len(lit)-1)<<2\".\n-\tMOVB R3, R4\n-\tSUBW $1, R4, R4\n-\tAND  $0xff, R4, R4\n-\tLSLW $2, R4, R4\n-\tMOVB R4, (R8)\n-\tADD  $1, R8, R8\n-\n-\t// !!! Implement the copy from lit to dst as a 16-byte load and store.\n-\t// (Encode's documentation says that dst and src must not overlap.)\n-\t//\n-\t// This always copies 16 bytes, instead of only len(lit) bytes, but that's\n-\t// OK. Subsequent iterations will fix up the overrun.\n-\t//\n-\t// Note that on arm64, it is legal and cheap to issue unaligned 8-byte or\n-\t// 16-byte loads and stores. This technique probably wouldn't be as\n-\t// effective on architectures that are fussier about alignment.\n-\tLDP 0(R10), (R0, R1)\n-\tSTP (R0, R1), 0(R8)\n-\tADD R3, R8, R8\n-\n-inner1:\n-\t// for { etc }\n-\n-\t// base := s\n-\tMOVD R7, R12\n-\n-\t// !!! offset := base - candidate\n-\tMOVD R12, R11\n-\tSUB  R15, R11, R11\n-\tSUB  R6, R11, R11\n-\n-\t// ----------------------------------------\n-\t// Begin inline of the extendMatch call.\n-\t//\n-\t// s = extendMatch(src, candidate+4, s+4)\n-\n-\t// !!! R14 = &src[len(src)]\n-\tMOVD src_len+32(FP), R14\n-\tADD  R6, R14, R14\n-\n-\t// !!! R13 = &src[len(src) - 8]\n-\tMOVD R14, R13\n-\tSUB  $8, R13, R13\n-\n-\t// !!! R15 = &src[candidate + 4]\n-\tADD $4, R15, R15\n-\tADD R6, R15, R15\n-\n-\t// !!! s += 4\n-\tADD $4, R7, R7\n-\n-inlineExtendMatchCmp8:\n-\t// As long as we are 8 or more bytes before the end of src, we can load and\n-\t// compare 8 bytes at a time. If those 8 bytes are equal, repeat.\n-\tCMP  R13, R7\n-\tBHI  inlineExtendMatchCmp1\n-\tMOVD (R15), R3\n-\tMOVD (R7), R4\n-\tCMP  R4, R3\n-\tBNE  inlineExtendMatchBSF\n-\tADD  $8, R15, R15\n-\tADD  $8, R7, R7\n-\tB    inlineExtendMatchCmp8\n-\n-inlineExtendMatchBSF:\n-\t// If those 8 bytes were not equal, XOR the two 8 byte values, and return\n-\t// the index of the first byte that differs.\n-\t// RBIT reverses the bit order, then CLZ counts the leading zeros, the\n-\t// combination of which finds the least significant bit which is set.\n-\t// The arm64 architecture is little-endian, and the shift by 3 converts\n-\t// a bit index to a byte index.\n-\tEOR  R3, R4, R4\n-\tRBIT R4, R4\n-\tCLZ  R4, R4\n-\tADD  R4>>3, R7, R7\n-\tB    inlineExtendMatchEnd\n-\n-inlineExtendMatchCmp1:\n-\t// In src's tail, compare 1 byte at a time.\n-\tCMP  R7, R14\n-\tBLS  inlineExtendMatchEnd\n-\tMOVB (R15), R3\n-\tMOVB (R7), R4\n-\tCMP  R4, R3\n-\tBNE  inlineExtendMatchEnd\n-\tADD  $1, R15, R15\n-\tADD  $1, R7, R7\n-\tB    inlineExtendMatchCmp1\n-\n-inlineExtendMatchEnd:\n-\t// End inline of the extendMatch call.\n-\t// ----------------------------------------\n-\n-\t// ----------------------------------------\n-\t// Begin inline of the emitCopy call.\n-\t//\n-\t// d += emitCopy(dst[d:], base-candidate, s-base)\n-\n-\t// !!! length := s - base\n-\tMOVD R7, R3\n-\tSUB  R12, R3, R3\n-\n-inlineEmitCopyLoop0:\n-\t// for length >= 68 { etc }\n-\tMOVW $68, R2\n-\tCMPW R2, R3\n-\tBLT  inlineEmitCopyStep1\n-\n-\t// Emit a length 64 copy, encoded as 3 bytes.\n-\tMOVD $0xfe, R1\n-\tMOVB R1, 0(R8)\n-\tMOVW R11, 1(R8)\n-\tADD  $3, R8, R8\n-\tSUBW $64, R3, R3\n-\tB    inlineEmitCopyLoop0\n-\n-inlineEmitCopyStep1:\n-\t// if length > 64 { etc }\n-\tMOVW $64, R2\n-\tCMPW R2, R3\n-\tBLE  inlineEmitCopyStep2\n-\n-\t// Emit a length 60 copy, encoded as 3 bytes.\n-\tMOVD $0xee, R1\n-\tMOVB R1, 0(R8)\n-\tMOVW R11, 1(R8)\n-\tADD  $3, R8, R8\n-\tSUBW $60, R3, R3\n-\n-inlineEmitCopyStep2:\n-\t// if length >= 12 || offset >= 2048 { goto inlineEmitCopyStep3 }\n-\tMOVW $12, R2\n-\tCMPW R2, R3\n-\tBGE  inlineEmitCopyStep3\n-\tMOVW $2048, R2\n-\tCMPW R2, R11\n-\tBGE  inlineEmitCopyStep3\n-\n-\t// Emit the remaining copy, encoded as 2 bytes.\n-\tMOVB R11, 1(R8)\n-\tLSRW $8, R11, R11\n-\tLSLW $5, R11, R11\n-\tSUBW $4, R3, R3\n-\tAND  $0xff, R3, R3\n-\tLSLW $2, R3, R3\n-\tORRW R3, R11, R11\n-\tORRW $1, R11, R11\n-\tMOVB R11, 0(R8)\n-\tADD  $2, R8, R8\n-\tB    inlineEmitCopyEnd\n-\n-inlineEmitCopyStep3:\n-\t// Emit the remaining copy, encoded as 3 bytes.\n-\tSUBW $1, R3, R3\n-\tLSLW $2, R3, R3\n-\tORRW $2, R3, R3\n-\tMOVB R3, 0(R8)\n-\tMOVW R11, 1(R8)\n-\tADD  $3, R8, R8\n-\n-inlineEmitCopyEnd:\n-\t// End inline of the emitCopy call.\n-\t// ----------------------------------------\n-\n-\t// nextEmit = s\n-\tMOVD R7, R10\n-\n-\t// if s >= sLimit { goto emitRemainder }\n-\tMOVD R7, R3\n-\tSUB  R6, R3, R3\n-\tCMP  R3, R9\n-\tBLS  emitRemainder\n-\n-\t// As per the encode_other.go code:\n-\t//\n-\t// We could immediately etc.\n-\n-\t// x := load64(src, s-1)\n-\tMOVD -1(R7), R14\n-\n-\t// prevHash := hash(uint32(x>>0), shift)\n-\tMOVW R14, R11\n-\tMULW R16, R11, R11\n-\tLSRW R5, R11, R11\n-\n-\t// table[prevHash] = uint16(s-1)\n-\tMOVD R7, R3\n-\tSUB  R6, R3, R3\n-\tSUB  $1, R3, R3\n-\n-\tMOVHU R3, 0(R17)(R11<<1)\n-\n-\t// currHash := hash(uint32(x>>8), shift)\n-\tLSR  $8, R14, R14\n-\tMOVW R14, R11\n-\tMULW R16, R11, R11\n-\tLSRW R5, R11, R11\n-\n-\t// candidate = int(table[currHash])\n-\tMOVHU 0(R17)(R11<<1), R15\n-\n-\t// table[currHash] = uint16(s)\n-\tADD   $1, R3, R3\n-\tMOVHU R3, 0(R17)(R11<<1)\n-\n-\t// if uint32(x>>8) == load32(src, candidate) { continue }\n-\tMOVW (R6)(R15), R4\n-\tCMPW R4, R14\n-\tBEQ  inner1\n-\n-\t// nextHash = hash(uint32(x>>16), shift)\n-\tLSR  $8, R14, R14\n-\tMOVW R14, R11\n-\tMULW R16, R11, R11\n-\tLSRW R5, R11, R11\n-\n-\t// s++\n-\tADD $1, R7, R7\n-\n-\t// break out of the inner1 for loop, i.e. continue the outer loop.\n-\tB outer\n-\n-emitRemainder:\n-\t// if nextEmit < len(src) { etc }\n-\tMOVD src_len+32(FP), R3\n-\tADD  R6, R3, R3\n-\tCMP  R3, R10\n-\tBEQ  encodeBlockEnd\n-\n-\t// d += emitLiteral(dst[d:], src[nextEmit:])\n-\t//\n-\t// Push args.\n-\tMOVD R8, 8(RSP)\n-\tMOVD $0, 16(RSP)  // Unnecessary, as the callee ignores it, but conservative.\n-\tMOVD $0, 24(RSP)  // Unnecessary, as the callee ignores it, but conservative.\n-\tMOVD R10, 32(RSP)\n-\tSUB  R10, R3, R3\n-\tMOVD R3, 40(RSP)\n-\tMOVD R3, 48(RSP)  // Unnecessary, as the callee ignores it, but conservative.\n-\n-\t// Spill local variables (registers) onto the stack; call; unspill.\n-\tMOVD R8, 88(RSP)\n-\tCALL ·emitLiteral(SB)\n-\tMOVD 88(RSP), R8\n-\n-\t// Finish the \"d +=\" part of \"d += emitLiteral(etc)\".\n-\tMOVD 56(RSP), R1\n-\tADD  R1, R8, R8\n-\n-encodeBlockEnd:\n-\tMOVD dst_base+0(FP), R3\n-\tSUB  R3, R8, R8\n-\tMOVD R8, d+48(FP)\n-\tRET"
    },
    {
      "sha": "dbcae905e6e047ba3c00f68057f5bf8541e981fa",
      "filename": "backend/vendor/github.com/golang/snappy/encode_other.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fencode_other.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fencode_other.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fsnappy%2Fencode_other.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build !amd64,!arm64 appengine !gc noasm\n+// +build !amd64 appengine !gc noasm\n \n package snappy\n "
    },
    {
      "sha": "19aa2e75c82413cf81c9ae8a7df8214a35632c21",
      "filename": "backend/vendor/github.com/gorilla/websocket/README.md",
      "status": "modified",
      "additions": 32,
      "deletions": 7,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FREADME.md?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -6,13 +6,6 @@\n Gorilla WebSocket is a [Go](http://golang.org/) implementation of the\n [WebSocket](http://www.rfc-editor.org/rfc/rfc6455.txt) protocol.\n \n-\n----\n-\n-⚠️ **[The Gorilla WebSocket Package is looking for a new maintainer](https://github.com/gorilla/websocket/issues/370)**\n-\n----\n-\n ### Documentation\n \n * [API Reference](https://pkg.go.dev/github.com/gorilla/websocket?tab=doc)\n@@ -37,3 +30,35 @@ The Gorilla WebSocket package passes the server tests in the [Autobahn Test\n Suite](https://github.com/crossbario/autobahn-testsuite) using the application in the [examples/autobahn\n subdirectory](https://github.com/gorilla/websocket/tree/master/examples/autobahn).\n \n+### Gorilla WebSocket compared with other packages\n+\n+<table>\n+<tr>\n+<th></th>\n+<th><a href=\"http://godoc.org/github.com/gorilla/websocket\">github.com/gorilla</a></th>\n+<th><a href=\"http://godoc.org/golang.org/x/net/websocket\">golang.org/x/net</a></th>\n+</tr>\n+<tr>\n+<tr><td colspan=\"3\"><a href=\"http://tools.ietf.org/html/rfc6455\">RFC 6455</a> Features</td></tr>\n+<tr><td>Passes <a href=\"https://github.com/crossbario/autobahn-testsuite\">Autobahn Test Suite</a></td><td><a href=\"https://github.com/gorilla/websocket/tree/master/examples/autobahn\">Yes</a></td><td>No</td></tr>\n+<tr><td>Receive <a href=\"https://tools.ietf.org/html/rfc6455#section-5.4\">fragmented</a> message<td>Yes</td><td><a href=\"https://code.google.com/p/go/issues/detail?id=7632\">No</a>, see note 1</td></tr>\n+<tr><td>Send <a href=\"https://tools.ietf.org/html/rfc6455#section-5.5.1\">close</a> message</td><td><a href=\"http://godoc.org/github.com/gorilla/websocket#hdr-Control_Messages\">Yes</a></td><td><a href=\"https://code.google.com/p/go/issues/detail?id=4588\">No</a></td></tr>\n+<tr><td>Send <a href=\"https://tools.ietf.org/html/rfc6455#section-5.5.2\">pings</a> and receive <a href=\"https://tools.ietf.org/html/rfc6455#section-5.5.3\">pongs</a></td><td><a href=\"http://godoc.org/github.com/gorilla/websocket#hdr-Control_Messages\">Yes</a></td><td>No</td></tr>\n+<tr><td>Get the <a href=\"https://tools.ietf.org/html/rfc6455#section-5.6\">type</a> of a received data message</td><td>Yes</td><td>Yes, see note 2</td></tr>\n+<tr><td colspan=\"3\">Other Features</tr></td>\n+<tr><td><a href=\"https://tools.ietf.org/html/rfc7692\">Compression Extensions</a></td><td>Experimental</td><td>No</td></tr>\n+<tr><td>Read message using io.Reader</td><td><a href=\"http://godoc.org/github.com/gorilla/websocket#Conn.NextReader\">Yes</a></td><td>No, see note 3</td></tr>\n+<tr><td>Write message using io.WriteCloser</td><td><a href=\"http://godoc.org/github.com/gorilla/websocket#Conn.NextWriter\">Yes</a></td><td>No, see note 3</td></tr>\n+</table>\n+\n+Notes:\n+\n+1. Large messages are fragmented in [Chrome's new WebSocket implementation](http://www.ietf.org/mail-archive/web/hybi/current/msg10503.html).\n+2. The application can get the type of a received data message by implementing\n+   a [Codec marshal](http://godoc.org/golang.org/x/net/websocket#Codec.Marshal)\n+   function.\n+3. The go.net io.Reader and io.Writer operate across WebSocket frame boundaries.\n+  Read returns when the input buffer is full or a frame boundary is\n+  encountered. Each call to Write sends a single frame message. The Gorilla\n+  io.Reader and io.WriteCloser operate on a single WebSocket message.\n+"
    },
    {
      "sha": "962c06a391c237b6a7cdc6766e7cf5541b96bd8b",
      "filename": "backend/vendor/github.com/gorilla/websocket/client.go",
      "status": "modified",
      "additions": 25,
      "deletions": 52,
      "changes": 77,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fclient.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fclient.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fclient.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -48,23 +48,15 @@ func NewClient(netConn net.Conn, u *url.URL, requestHeader http.Header, readBufS\n }\n \n // A Dialer contains options for connecting to WebSocket server.\n-//\n-// It is safe to call Dialer's methods concurrently.\n type Dialer struct {\n \t// NetDial specifies the dial function for creating TCP connections. If\n \t// NetDial is nil, net.Dial is used.\n \tNetDial func(network, addr string) (net.Conn, error)\n \n \t// NetDialContext specifies the dial function for creating TCP connections. If\n-\t// NetDialContext is nil, NetDial is used.\n+\t// NetDialContext is nil, net.DialContext is used.\n \tNetDialContext func(ctx context.Context, network, addr string) (net.Conn, error)\n \n-\t// NetDialTLSContext specifies the dial function for creating TLS/TCP connections. If\n-\t// NetDialTLSContext is nil, NetDialContext is used.\n-\t// If NetDialTLSContext is set, Dial assumes the TLS handshake is done there and\n-\t// TLSClientConfig is ignored.\n-\tNetDialTLSContext func(ctx context.Context, network, addr string) (net.Conn, error)\n-\n \t// Proxy specifies a function to return a proxy for a given\n \t// Request. If the function returns a non-nil error, the\n \t// request is aborted with the provided error.\n@@ -73,8 +65,6 @@ type Dialer struct {\n \n \t// TLSClientConfig specifies the TLS configuration to use with tls.Client.\n \t// If nil, the default configuration is used.\n-\t// If either NetDialTLS or NetDialTLSContext are set, Dial assumes the TLS handshake\n-\t// is done there and TLSClientConfig is ignored.\n \tTLSClientConfig *tls.Config\n \n \t// HandshakeTimeout specifies the duration for the handshake to complete.\n@@ -186,7 +176,7 @@ func (d *Dialer) DialContext(ctx context.Context, urlStr string, requestHeader h\n \t}\n \n \treq := &http.Request{\n-\t\tMethod:     http.MethodGet,\n+\t\tMethod:     \"GET\",\n \t\tURL:        u,\n \t\tProto:      \"HTTP/1.1\",\n \t\tProtoMajor: 1,\n@@ -247,32 +237,13 @@ func (d *Dialer) DialContext(ctx context.Context, urlStr string, requestHeader h\n \t// Get network dial function.\n \tvar netDial func(network, add string) (net.Conn, error)\n \n-\tswitch u.Scheme {\n-\tcase \"http\":\n-\t\tif d.NetDialContext != nil {\n-\t\t\tnetDial = func(network, addr string) (net.Conn, error) {\n-\t\t\t\treturn d.NetDialContext(ctx, network, addr)\n-\t\t\t}\n-\t\t} else if d.NetDial != nil {\n-\t\t\tnetDial = d.NetDial\n-\t\t}\n-\tcase \"https\":\n-\t\tif d.NetDialTLSContext != nil {\n-\t\t\tnetDial = func(network, addr string) (net.Conn, error) {\n-\t\t\t\treturn d.NetDialTLSContext(ctx, network, addr)\n-\t\t\t}\n-\t\t} else if d.NetDialContext != nil {\n-\t\t\tnetDial = func(network, addr string) (net.Conn, error) {\n-\t\t\t\treturn d.NetDialContext(ctx, network, addr)\n-\t\t\t}\n-\t\t} else if d.NetDial != nil {\n-\t\t\tnetDial = d.NetDial\n+\tif d.NetDialContext != nil {\n+\t\tnetDial = func(network, addr string) (net.Conn, error) {\n+\t\t\treturn d.NetDialContext(ctx, network, addr)\n \t\t}\n-\tdefault:\n-\t\treturn nil, nil, errMalformedURL\n-\t}\n-\n-\tif netDial == nil {\n+\t} else if d.NetDial != nil {\n+\t\tnetDial = d.NetDial\n+\t} else {\n \t\tnetDialer := &net.Dialer{}\n \t\tnetDial = func(network, addr string) (net.Conn, error) {\n \t\t\treturn netDialer.DialContext(ctx, network, addr)\n@@ -333,22 +304,19 @@ func (d *Dialer) DialContext(ctx context.Context, urlStr string, requestHeader h\n \t\t}\n \t}()\n \n-\tif u.Scheme == \"https\" && d.NetDialTLSContext == nil {\n-\t\t// If NetDialTLSContext is set, assume that the TLS handshake has already been done\n-\n+\tif u.Scheme == \"https\" {\n \t\tcfg := cloneTLSConfig(d.TLSClientConfig)\n \t\tif cfg.ServerName == \"\" {\n \t\t\tcfg.ServerName = hostNoPort\n \t\t}\n \t\ttlsConn := tls.Client(netConn, cfg)\n \t\tnetConn = tlsConn\n \n-\t\tif trace != nil && trace.TLSHandshakeStart != nil {\n-\t\t\ttrace.TLSHandshakeStart()\n-\t\t}\n-\t\terr := doHandshake(ctx, tlsConn, cfg)\n-\t\tif trace != nil && trace.TLSHandshakeDone != nil {\n-\t\t\ttrace.TLSHandshakeDone(tlsConn.ConnectionState(), err)\n+\t\tvar err error\n+\t\tif trace != nil {\n+\t\t\terr = doHandshakeWithTrace(trace, tlsConn, cfg)\n+\t\t} else {\n+\t\t\terr = doHandshake(tlsConn, cfg)\n \t\t}\n \n \t\tif err != nil {\n@@ -380,8 +348,8 @@ func (d *Dialer) DialContext(ctx context.Context, urlStr string, requestHeader h\n \t}\n \n \tif resp.StatusCode != 101 ||\n-\t\t!tokenListContainsValue(resp.Header, \"Upgrade\", \"websocket\") ||\n-\t\t!tokenListContainsValue(resp.Header, \"Connection\", \"upgrade\") ||\n+\t\t!strings.EqualFold(resp.Header.Get(\"Upgrade\"), \"websocket\") ||\n+\t\t!strings.EqualFold(resp.Header.Get(\"Connection\"), \"upgrade\") ||\n \t\tresp.Header.Get(\"Sec-Websocket-Accept\") != computeAcceptKey(challengeKey) {\n \t\t// Before closing the network connection on return from this\n \t\t// function, slurp up some of the response to aid application\n@@ -414,9 +382,14 @@ func (d *Dialer) DialContext(ctx context.Context, urlStr string, requestHeader h\n \treturn conn, resp, nil\n }\n \n-func cloneTLSConfig(cfg *tls.Config) *tls.Config {\n-\tif cfg == nil {\n-\t\treturn &tls.Config{}\n+func doHandshake(tlsConn *tls.Conn, cfg *tls.Config) error {\n+\tif err := tlsConn.Handshake(); err != nil {\n+\t\treturn err\n+\t}\n+\tif !cfg.InsecureSkipVerify {\n+\t\tif err := tlsConn.VerifyHostname(cfg.ServerName); err != nil {\n+\t\t\treturn err\n+\t\t}\n \t}\n-\treturn cfg.Clone()\n+\treturn nil\n }"
    },
    {
      "sha": "4f0d943723a9d094c1693892812377a51f6791bb",
      "filename": "backend/vendor/github.com/gorilla/websocket/client_clone.go",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fclient_clone.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fclient_clone.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fclient_clone.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2013 The Gorilla WebSocket Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build go1.8\n+\n+package websocket\n+\n+import \"crypto/tls\"\n+\n+func cloneTLSConfig(cfg *tls.Config) *tls.Config {\n+\tif cfg == nil {\n+\t\treturn &tls.Config{}\n+\t}\n+\treturn cfg.Clone()\n+}"
    },
    {
      "sha": "babb007fb4144ac456faeb685e24b62186c7c517",
      "filename": "backend/vendor/github.com/gorilla/websocket/client_clone_legacy.go",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fclient_clone_legacy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fclient_clone_legacy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fclient_clone_legacy.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2013 The Gorilla WebSocket Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build !go1.8\n+\n+package websocket\n+\n+import \"crypto/tls\"\n+\n+// cloneTLSConfig clones all public fields except the fields\n+// SessionTicketsDisabled and SessionTicketKey. This avoids copying the\n+// sync.Mutex in the sync.Once and makes it safe to call cloneTLSConfig on a\n+// config in active use.\n+func cloneTLSConfig(cfg *tls.Config) *tls.Config {\n+\tif cfg == nil {\n+\t\treturn &tls.Config{}\n+\t}\n+\treturn &tls.Config{\n+\t\tRand:                     cfg.Rand,\n+\t\tTime:                     cfg.Time,\n+\t\tCertificates:             cfg.Certificates,\n+\t\tNameToCertificate:        cfg.NameToCertificate,\n+\t\tGetCertificate:           cfg.GetCertificate,\n+\t\tRootCAs:                  cfg.RootCAs,\n+\t\tNextProtos:               cfg.NextProtos,\n+\t\tServerName:               cfg.ServerName,\n+\t\tClientAuth:               cfg.ClientAuth,\n+\t\tClientCAs:                cfg.ClientCAs,\n+\t\tInsecureSkipVerify:       cfg.InsecureSkipVerify,\n+\t\tCipherSuites:             cfg.CipherSuites,\n+\t\tPreferServerCipherSuites: cfg.PreferServerCipherSuites,\n+\t\tClientSessionCache:       cfg.ClientSessionCache,\n+\t\tMinVersion:               cfg.MinVersion,\n+\t\tMaxVersion:               cfg.MaxVersion,\n+\t\tCurvePreferences:         cfg.CurvePreferences,\n+\t}\n+}"
    },
    {
      "sha": "ca46d2f793c24eb7593d6ee6ba834d4f437c53da",
      "filename": "backend/vendor/github.com/gorilla/websocket/conn.go",
      "status": "modified",
      "additions": 17,
      "deletions": 46,
      "changes": 63,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fconn.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fconn.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fconn.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -13,7 +13,6 @@ import (\n \t\"math/rand\"\n \t\"net\"\n \t\"strconv\"\n-\t\"strings\"\n \t\"sync\"\n \t\"time\"\n \t\"unicode/utf8\"\n@@ -402,12 +401,6 @@ func (c *Conn) write(frameType int, deadline time.Time, buf0, buf1 []byte) error\n \treturn nil\n }\n \n-func (c *Conn) writeBufs(bufs ...[]byte) error {\n-\tb := net.Buffers(bufs)\n-\t_, err := b.WriteTo(c.conn)\n-\treturn err\n-}\n-\n // WriteControl writes a control message with the given deadline. The allowed\n // message types are CloseMessage, PingMessage and PongMessage.\n func (c *Conn) WriteControl(messageType int, data []byte, deadline time.Time) error {\n@@ -801,69 +794,47 @@ func (c *Conn) advanceFrame() (int, error) {\n \t}\n \n \t// 2. Read and parse first two bytes of frame header.\n-\t// To aid debugging, collect and report all errors in the first two bytes\n-\t// of the header.\n-\n-\tvar errors []string\n \n \tp, err := c.read(2)\n \tif err != nil {\n \t\treturn noFrame, err\n \t}\n \n-\tframeType := int(p[0] & 0xf)\n \tfinal := p[0]&finalBit != 0\n-\trsv1 := p[0]&rsv1Bit != 0\n-\trsv2 := p[0]&rsv2Bit != 0\n-\trsv3 := p[0]&rsv3Bit != 0\n+\tframeType := int(p[0] & 0xf)\n \tmask := p[1]&maskBit != 0\n \tc.setReadRemaining(int64(p[1] & 0x7f))\n \n \tc.readDecompress = false\n-\tif rsv1 {\n-\t\tif c.newDecompressionReader != nil {\n-\t\t\tc.readDecompress = true\n-\t\t} else {\n-\t\t\terrors = append(errors, \"RSV1 set\")\n-\t\t}\n-\t}\n-\n-\tif rsv2 {\n-\t\terrors = append(errors, \"RSV2 set\")\n+\tif c.newDecompressionReader != nil && (p[0]&rsv1Bit) != 0 {\n+\t\tc.readDecompress = true\n+\t\tp[0] &^= rsv1Bit\n \t}\n \n-\tif rsv3 {\n-\t\terrors = append(errors, \"RSV3 set\")\n+\tif rsv := p[0] & (rsv1Bit | rsv2Bit | rsv3Bit); rsv != 0 {\n+\t\treturn noFrame, c.handleProtocolError(\"unexpected reserved bits 0x\" + strconv.FormatInt(int64(rsv), 16))\n \t}\n \n \tswitch frameType {\n \tcase CloseMessage, PingMessage, PongMessage:\n \t\tif c.readRemaining > maxControlFramePayloadSize {\n-\t\t\terrors = append(errors, \"len > 125 for control\")\n+\t\t\treturn noFrame, c.handleProtocolError(\"control frame length > 125\")\n \t\t}\n \t\tif !final {\n-\t\t\terrors = append(errors, \"FIN not set on control\")\n+\t\t\treturn noFrame, c.handleProtocolError(\"control frame not final\")\n \t\t}\n \tcase TextMessage, BinaryMessage:\n \t\tif !c.readFinal {\n-\t\t\terrors = append(errors, \"data before FIN\")\n+\t\t\treturn noFrame, c.handleProtocolError(\"message start before final message frame\")\n \t\t}\n \t\tc.readFinal = final\n \tcase continuationFrame:\n \t\tif c.readFinal {\n-\t\t\terrors = append(errors, \"continuation after FIN\")\n+\t\t\treturn noFrame, c.handleProtocolError(\"continuation after final message frame\")\n \t\t}\n \t\tc.readFinal = final\n \tdefault:\n-\t\terrors = append(errors, \"bad opcode \"+strconv.Itoa(frameType))\n-\t}\n-\n-\tif mask != c.isServer {\n-\t\terrors = append(errors, \"bad MASK\")\n-\t}\n-\n-\tif len(errors) > 0 {\n-\t\treturn noFrame, c.handleProtocolError(strings.Join(errors, \", \"))\n+\t\treturn noFrame, c.handleProtocolError(\"unknown opcode \" + strconv.Itoa(frameType))\n \t}\n \n \t// 3. Read and parse frame length as per\n@@ -901,6 +872,10 @@ func (c *Conn) advanceFrame() (int, error) {\n \n \t// 4. Handle frame masking.\n \n+\tif mask != c.isServer {\n+\t\treturn noFrame, c.handleProtocolError(\"incorrect mask flag\")\n+\t}\n+\n \tif mask {\n \t\tc.readMaskPos = 0\n \t\tp, err := c.read(len(c.readMaskKey))\n@@ -960,7 +935,7 @@ func (c *Conn) advanceFrame() (int, error) {\n \t\tif len(payload) >= 2 {\n \t\t\tcloseCode = int(binary.BigEndian.Uint16(payload))\n \t\t\tif !isValidReceivedCloseCode(closeCode) {\n-\t\t\t\treturn noFrame, c.handleProtocolError(\"bad close code \" + strconv.Itoa(closeCode))\n+\t\t\t\treturn noFrame, c.handleProtocolError(\"invalid close code\")\n \t\t\t}\n \t\t\tcloseText = string(payload[2:])\n \t\t\tif !utf8.ValidString(closeText) {\n@@ -977,11 +952,7 @@ func (c *Conn) advanceFrame() (int, error) {\n }\n \n func (c *Conn) handleProtocolError(message string) error {\n-\tdata := FormatCloseMessage(CloseProtocolError, message)\n-\tif len(data) > maxControlFramePayloadSize {\n-\t\tdata = data[:maxControlFramePayloadSize]\n-\t}\n-\tc.WriteControl(CloseMessage, data, time.Now().Add(writeWait))\n+\tc.WriteControl(CloseMessage, FormatCloseMessage(CloseProtocolError, message), time.Now().Add(writeWait))\n \treturn errors.New(\"websocket: \" + message)\n }\n "
    },
    {
      "sha": "a509a21f87af3e30ef0b18520d47e6cf21e9174d",
      "filename": "backend/vendor/github.com/gorilla/websocket/conn_write.go",
      "status": "added",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fconn_write.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fconn_write.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fconn_write.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2016 The Gorilla WebSocket Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build go1.8\n+\n+package websocket\n+\n+import \"net\"\n+\n+func (c *Conn) writeBufs(bufs ...[]byte) error {\n+\tb := net.Buffers(bufs)\n+\t_, err := b.WriteTo(c.conn)\n+\treturn err\n+}"
    },
    {
      "sha": "37edaff5a578a0cd7c5f2fc09c459a50044cde23",
      "filename": "backend/vendor/github.com/gorilla/websocket/conn_write_legacy.go",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fconn_write_legacy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fconn_write_legacy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fconn_write_legacy.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Gorilla WebSocket Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build !go1.8\n+\n+package websocket\n+\n+func (c *Conn) writeBufs(bufs ...[]byte) error {\n+\tfor _, buf := range bufs {\n+\t\tif len(buf) > 0 {\n+\t\t\tif _, err := c.conn.Write(buf); err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn nil\n+}"
    },
    {
      "sha": "577fce9efd7204a820b403f0db3a709cc934b1f7",
      "filename": "backend/vendor/github.com/gorilla/websocket/mask.go",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fmask.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fmask.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fmask.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -2,7 +2,6 @@\n // this source code is governed by a BSD-style license that can be found in the\n // LICENSE file.\n \n-//go:build !appengine\n // +build !appengine\n \n package websocket"
    },
    {
      "sha": "2aac060e52e7093d2dce5051d639a31560f6c4e8",
      "filename": "backend/vendor/github.com/gorilla/websocket/mask_safe.go",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fmask_safe.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fmask_safe.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fmask_safe.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -2,7 +2,6 @@\n // this source code is governed by a BSD-style license that can be found in the\n // LICENSE file.\n \n-//go:build appengine\n // +build appengine\n \n package websocket"
    },
    {
      "sha": "e87a8c9f0c96ea3dda2f14f1f371a884471c7d61",
      "filename": "backend/vendor/github.com/gorilla/websocket/proxy.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fproxy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fproxy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fproxy.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -48,7 +48,7 @@ func (hpd *httpProxyDialer) Dial(network string, addr string) (net.Conn, error)\n \t}\n \n \tconnectReq := &http.Request{\n-\t\tMethod: http.MethodConnect,\n+\t\tMethod: \"CONNECT\",\n \t\tURL:    &url.URL{Opaque: addr},\n \t\tHost:   addr,\n \t\tHeader: connectHeader,"
    },
    {
      "sha": "887d558918c721b38257b9dc908e7f73736dd8b0",
      "filename": "backend/vendor/github.com/gorilla/websocket/server.go",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fserver.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fserver.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fserver.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -23,8 +23,6 @@ func (e HandshakeError) Error() string { return e.message }\n \n // Upgrader specifies parameters for upgrading an HTTP connection to a\n // WebSocket connection.\n-//\n-// It is safe to call Upgrader's methods concurrently.\n type Upgrader struct {\n \t// HandshakeTimeout specifies the duration for the handshake to complete.\n \tHandshakeTimeout time.Duration\n@@ -117,8 +115,8 @@ func (u *Upgrader) selectSubprotocol(r *http.Request, responseHeader http.Header\n // Upgrade upgrades the HTTP server connection to the WebSocket protocol.\n //\n // The responseHeader is included in the response to the client's upgrade\n-// request. Use the responseHeader to specify cookies (Set-Cookie). To specify\n-// subprotocols supported by the server, set Upgrader.Subprotocols directly.\n+// request. Use the responseHeader to specify cookies (Set-Cookie) and the\n+// application negotiated subprotocol (Sec-WebSocket-Protocol).\n //\n // If the upgrade fails, then Upgrade replies to the client with an HTTP error\n // response.\n@@ -133,7 +131,7 @@ func (u *Upgrader) Upgrade(w http.ResponseWriter, r *http.Request, responseHeade\n \t\treturn u.returnError(w, r, http.StatusBadRequest, badHandshake+\"'websocket' token not found in 'Upgrade' header\")\n \t}\n \n-\tif r.Method != http.MethodGet {\n+\tif r.Method != \"GET\" {\n \t\treturn u.returnError(w, r, http.StatusMethodNotAllowed, badHandshake+\"request method is not GET\")\n \t}\n "
    },
    {
      "sha": "a62b68ccb11e34561b04c7919d7f9badd47c0353",
      "filename": "backend/vendor/github.com/gorilla/websocket/tls_handshake.go",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftls_handshake.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftls_handshake.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftls_handshake.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,21 +0,0 @@\n-//go:build go1.17\n-// +build go1.17\n-\n-package websocket\n-\n-import (\n-\t\"context\"\n-\t\"crypto/tls\"\n-)\n-\n-func doHandshake(ctx context.Context, tlsConn *tls.Conn, cfg *tls.Config) error {\n-\tif err := tlsConn.HandshakeContext(ctx); err != nil {\n-\t\treturn err\n-\t}\n-\tif !cfg.InsecureSkipVerify {\n-\t\tif err := tlsConn.VerifyHostname(cfg.ServerName); err != nil {\n-\t\t\treturn err\n-\t\t}\n-\t}\n-\treturn nil\n-}"
    },
    {
      "sha": "e1b2b44f6e6c8cb3a188dfa8f9db6fe3253b262f",
      "filename": "backend/vendor/github.com/gorilla/websocket/tls_handshake_116.go",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftls_handshake_116.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftls_handshake_116.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftls_handshake_116.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,21 +0,0 @@\n-//go:build !go1.17\n-// +build !go1.17\n-\n-package websocket\n-\n-import (\n-\t\"context\"\n-\t\"crypto/tls\"\n-)\n-\n-func doHandshake(ctx context.Context, tlsConn *tls.Conn, cfg *tls.Config) error {\n-\tif err := tlsConn.Handshake(); err != nil {\n-\t\treturn err\n-\t}\n-\tif !cfg.InsecureSkipVerify {\n-\t\tif err := tlsConn.VerifyHostname(cfg.ServerName); err != nil {\n-\t\t\treturn err\n-\t\t}\n-\t}\n-\treturn nil\n-}"
    },
    {
      "sha": "834f122a00dbeb04e4edde617ea3a3896e51bc69",
      "filename": "backend/vendor/github.com/gorilla/websocket/trace.go",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftrace.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftrace.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftrace.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,19 @@\n+// +build go1.8\n+\n+package websocket\n+\n+import (\n+\t\"crypto/tls\"\n+\t\"net/http/httptrace\"\n+)\n+\n+func doHandshakeWithTrace(trace *httptrace.ClientTrace, tlsConn *tls.Conn, cfg *tls.Config) error {\n+\tif trace.TLSHandshakeStart != nil {\n+\t\ttrace.TLSHandshakeStart()\n+\t}\n+\terr := doHandshake(tlsConn, cfg)\n+\tif trace.TLSHandshakeDone != nil {\n+\t\ttrace.TLSHandshakeDone(tlsConn.ConnectionState(), err)\n+\t}\n+\treturn err\n+}"
    },
    {
      "sha": "77d05a0b5748c8d1bc220acfdb375ebad151bf6d",
      "filename": "backend/vendor/github.com/gorilla/websocket/trace_17.go",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftrace_17.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftrace_17.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftrace_17.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,12 @@\n+// +build !go1.8\n+\n+package websocket\n+\n+import (\n+\t\"crypto/tls\"\n+\t\"net/http/httptrace\"\n+)\n+\n+func doHandshakeWithTrace(trace *httptrace.ClientTrace, tlsConn *tls.Conn, cfg *tls.Config) error {\n+\treturn doHandshake(tlsConn, cfg)\n+}"
    },
    {
      "sha": "a733bef18c0590ec04a0e0aff46acf6f6610cf76",
      "filename": "backend/vendor/github.com/hashicorp/errwrap/errwrap.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Ferrwrap%2Ferrwrap.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Ferrwrap%2Ferrwrap.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Ferrwrap%2Ferrwrap.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -44,8 +44,6 @@ func Wrap(outer, inner error) error {\n //\n // format is the format of the error message. The string '{{err}}' will\n // be replaced with the original error message.\n-//\n-// Deprecated: Use fmt.Errorf()\n func Wrapf(format string, err error) error {\n \touterMsg := \"<nil>\"\n \tif err != nil {\n@@ -150,9 +148,6 @@ func Walk(err error, cb WalkFunc) {\n \t\tfor _, err := range e.WrappedErrors() {\n \t\t\tWalk(err, cb)\n \t\t}\n-\tcase interface{ Unwrap() error }:\n-\t\tcb(err)\n-\t\tWalk(e.Unwrap(), cb)\n \tdefault:\n \t\tcb(err)\n \t}\n@@ -172,7 +167,3 @@ func (w *wrappedError) Error() string {\n func (w *wrappedError) WrappedErrors() []error {\n \treturn []error{w.Outer, w.Inner}\n }\n-\n-func (w *wrappedError) Unwrap() error {\n-\treturn w.Inner\n-}"
    },
    {
      "sha": "49202fc41e645679a0f8d1088237b5b4aa22f49d",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/.golangci.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2F.golangci.yml?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,30 +0,0 @@\n-linters:\n-  enable:\n-    - megacheck\n-    - revive\n-    - govet\n-    - unconvert\n-    - megacheck\n-    - gas\n-    - gocyclo\n-    - dupl\n-    - misspell\n-    - unparam\n-    - unused\n-    - typecheck\n-    - ineffassign\n-    - stylecheck\n-    - exportloopref\n-    - gocritic\n-    - nakedret\n-    - gosimple\n-    - prealloc\n-  fast: false\n-  disable-all: true\n-\n-issues:\n-  exclude-rules:\n-    - path: _test\\.go\n-      linters:\n-        - dupl\n-  exclude-use-default: false"
    },
    {
      "sha": "e474cd07581ac908575132b99cf3b118bc9d1059",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/2q.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2F2q.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2F2q.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2F2q.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -44,7 +44,7 @@ func New2Q(size int) (*TwoQueueCache, error) {\n \n // New2QParams creates a new TwoQueueCache using the provided\n // parameter values.\n-func New2QParams(size int, recentRatio, ghostRatio float64) (*TwoQueueCache, error) {\n+func New2QParams(size int, recentRatio float64, ghostRatio float64) (*TwoQueueCache, error) {\n \tif size <= 0 {\n \t\treturn nil, fmt.Errorf(\"invalid size\")\n \t}\n@@ -138,6 +138,7 @@ func (c *TwoQueueCache) Add(key, value interface{}) {\n \t// Add to the recently seen list\n \tc.ensureSpace(false)\n \tc.recent.Add(key, value)\n+\treturn\n }\n \n // ensureSpace is used to ensure we have space in the cache"
    },
    {
      "sha": "be2cc4dfb609fb6c38f6365ec345bded3350dd63",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/LICENSE",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2FLICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2FLICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2FLICENSE?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,5 +1,3 @@\n-Copyright (c) 2014 HashiCorp, Inc.\n-\n Mozilla Public License, version 2.0\n \n 1. Definitions"
    },
    {
      "sha": "33e58cfaf97ea1b48948e4da2cf326b74f74a773",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2FREADME.md?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -7,7 +7,7 @@ thread safe LRU cache. It is based on the cache in Groupcache.\n Documentation\n =============\n \n-Full docs are available on [Godoc](https://pkg.go.dev/github.com/hashicorp/golang-lru)\n+Full docs are available on [Godoc](http://godoc.org/github.com/hashicorp/golang-lru)\n \n Example\n ======="
    },
    {
      "sha": "555225a218c968e756812976829e3d548e7bffda",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/arc.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Farc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Farc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Farc.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -173,6 +173,7 @@ func (c *ARCCache) Add(key, value interface{}) {\n \n \t// Add to the recently seen list\n \tc.t1.Add(key, value)\n+\treturn\n }\n \n // replace is used to adaptively evict from either T1 or T2"
    },
    {
      "sha": "4e5e9d8fd080c6126c3d6fe494d01ca9750b6015",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/lru.go",
      "status": "modified",
      "additions": 19,
      "deletions": 100,
      "changes": 119,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Flru.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Flru.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Flru.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -6,17 +6,10 @@ import (\n \t\"github.com/hashicorp/golang-lru/simplelru\"\n )\n \n-const (\n-\t// DefaultEvictedBufferSize defines the default buffer size to store evicted key/val\n-\tDefaultEvictedBufferSize = 16\n-)\n-\n // Cache is a thread-safe fixed size LRU cache.\n type Cache struct {\n-\tlru                      *simplelru.LRU\n-\tevictedKeys, evictedVals []interface{}\n-\tonEvictedCB              func(k, v interface{})\n-\tlock                     sync.RWMutex\n+\tlru  simplelru.LRUCache\n+\tlock sync.RWMutex\n }\n \n // New creates an LRU of the given size.\n@@ -26,63 +19,30 @@ func New(size int) (*Cache, error) {\n \n // NewWithEvict constructs a fixed size cache with the given eviction\n // callback.\n-func NewWithEvict(size int, onEvicted func(key, value interface{})) (c *Cache, err error) {\n-\t// create a cache with default settings\n-\tc = &Cache{\n-\t\tonEvictedCB: onEvicted,\n+func NewWithEvict(size int, onEvicted func(key interface{}, value interface{})) (*Cache, error) {\n+\tlru, err := simplelru.NewLRU(size, simplelru.EvictCallback(onEvicted))\n+\tif err != nil {\n+\t\treturn nil, err\n \t}\n-\tif onEvicted != nil {\n-\t\tc.initEvictBuffers()\n-\t\tonEvicted = c.onEvicted\n+\tc := &Cache{\n+\t\tlru: lru,\n \t}\n-\tc.lru, err = simplelru.NewLRU(size, onEvicted)\n-\treturn\n-}\n-\n-func (c *Cache) initEvictBuffers() {\n-\tc.evictedKeys = make([]interface{}, 0, DefaultEvictedBufferSize)\n-\tc.evictedVals = make([]interface{}, 0, DefaultEvictedBufferSize)\n-}\n-\n-// onEvicted save evicted key/val and sent in externally registered callback\n-// outside of critical section\n-func (c *Cache) onEvicted(k, v interface{}) {\n-\tc.evictedKeys = append(c.evictedKeys, k)\n-\tc.evictedVals = append(c.evictedVals, v)\n+\treturn c, nil\n }\n \n // Purge is used to completely clear the cache.\n func (c *Cache) Purge() {\n-\tvar ks, vs []interface{}\n \tc.lock.Lock()\n \tc.lru.Purge()\n-\tif c.onEvictedCB != nil && len(c.evictedKeys) > 0 {\n-\t\tks, vs = c.evictedKeys, c.evictedVals\n-\t\tc.initEvictBuffers()\n-\t}\n \tc.lock.Unlock()\n-\t// invoke callback outside of critical section\n-\tif c.onEvictedCB != nil {\n-\t\tfor i := 0; i < len(ks); i++ {\n-\t\t\tc.onEvictedCB(ks[i], vs[i])\n-\t\t}\n-\t}\n }\n \n // Add adds a value to the cache. Returns true if an eviction occurred.\n func (c *Cache) Add(key, value interface{}) (evicted bool) {\n-\tvar k, v interface{}\n \tc.lock.Lock()\n \tevicted = c.lru.Add(key, value)\n-\tif c.onEvictedCB != nil && evicted {\n-\t\tk, v = c.evictedKeys[0], c.evictedVals[0]\n-\t\tc.evictedKeys, c.evictedVals = c.evictedKeys[:0], c.evictedVals[:0]\n-\t}\n \tc.lock.Unlock()\n-\tif c.onEvictedCB != nil && evicted {\n-\t\tc.onEvictedCB(k, v)\n-\t}\n-\treturn\n+\treturn evicted\n }\n \n // Get looks up a key's value from the cache.\n@@ -115,102 +75,61 @@ func (c *Cache) Peek(key interface{}) (value interface{}, ok bool) {\n // recent-ness or deleting it for being stale, and if not, adds the value.\n // Returns whether found and whether an eviction occurred.\n func (c *Cache) ContainsOrAdd(key, value interface{}) (ok, evicted bool) {\n-\tvar k, v interface{}\n \tc.lock.Lock()\n+\tdefer c.lock.Unlock()\n+\n \tif c.lru.Contains(key) {\n-\t\tc.lock.Unlock()\n \t\treturn true, false\n \t}\n \tevicted = c.lru.Add(key, value)\n-\tif c.onEvictedCB != nil && evicted {\n-\t\tk, v = c.evictedKeys[0], c.evictedVals[0]\n-\t\tc.evictedKeys, c.evictedVals = c.evictedKeys[:0], c.evictedVals[:0]\n-\t}\n-\tc.lock.Unlock()\n-\tif c.onEvictedCB != nil && evicted {\n-\t\tc.onEvictedCB(k, v)\n-\t}\n \treturn false, evicted\n }\n \n // PeekOrAdd checks if a key is in the cache without updating the\n // recent-ness or deleting it for being stale, and if not, adds the value.\n // Returns whether found and whether an eviction occurred.\n func (c *Cache) PeekOrAdd(key, value interface{}) (previous interface{}, ok, evicted bool) {\n-\tvar k, v interface{}\n \tc.lock.Lock()\n+\tdefer c.lock.Unlock()\n+\n \tprevious, ok = c.lru.Peek(key)\n \tif ok {\n-\t\tc.lock.Unlock()\n \t\treturn previous, true, false\n \t}\n+\n \tevicted = c.lru.Add(key, value)\n-\tif c.onEvictedCB != nil && evicted {\n-\t\tk, v = c.evictedKeys[0], c.evictedVals[0]\n-\t\tc.evictedKeys, c.evictedVals = c.evictedKeys[:0], c.evictedVals[:0]\n-\t}\n-\tc.lock.Unlock()\n-\tif c.onEvictedCB != nil && evicted {\n-\t\tc.onEvictedCB(k, v)\n-\t}\n \treturn nil, false, evicted\n }\n \n // Remove removes the provided key from the cache.\n func (c *Cache) Remove(key interface{}) (present bool) {\n-\tvar k, v interface{}\n \tc.lock.Lock()\n \tpresent = c.lru.Remove(key)\n-\tif c.onEvictedCB != nil && present {\n-\t\tk, v = c.evictedKeys[0], c.evictedVals[0]\n-\t\tc.evictedKeys, c.evictedVals = c.evictedKeys[:0], c.evictedVals[:0]\n-\t}\n \tc.lock.Unlock()\n-\tif c.onEvictedCB != nil && present {\n-\t\tc.onEvictedCB(k, v)\n-\t}\n \treturn\n }\n \n // Resize changes the cache size.\n func (c *Cache) Resize(size int) (evicted int) {\n-\tvar ks, vs []interface{}\n \tc.lock.Lock()\n \tevicted = c.lru.Resize(size)\n-\tif c.onEvictedCB != nil && evicted > 0 {\n-\t\tks, vs = c.evictedKeys, c.evictedVals\n-\t\tc.initEvictBuffers()\n-\t}\n \tc.lock.Unlock()\n-\tif c.onEvictedCB != nil && evicted > 0 {\n-\t\tfor i := 0; i < len(ks); i++ {\n-\t\t\tc.onEvictedCB(ks[i], vs[i])\n-\t\t}\n-\t}\n \treturn evicted\n }\n \n // RemoveOldest removes the oldest item from the cache.\n-func (c *Cache) RemoveOldest() (key, value interface{}, ok bool) {\n-\tvar k, v interface{}\n+func (c *Cache) RemoveOldest() (key interface{}, value interface{}, ok bool) {\n \tc.lock.Lock()\n \tkey, value, ok = c.lru.RemoveOldest()\n-\tif c.onEvictedCB != nil && ok {\n-\t\tk, v = c.evictedKeys[0], c.evictedVals[0]\n-\t\tc.evictedKeys, c.evictedVals = c.evictedKeys[:0], c.evictedVals[:0]\n-\t}\n \tc.lock.Unlock()\n-\tif c.onEvictedCB != nil && ok {\n-\t\tc.onEvictedCB(k, v)\n-\t}\n \treturn\n }\n \n // GetOldest returns the oldest entry\n-func (c *Cache) GetOldest() (key, value interface{}, ok bool) {\n-\tc.lock.RLock()\n+func (c *Cache) GetOldest() (key interface{}, value interface{}, ok bool) {\n+\tc.lock.Lock()\n \tkey, value, ok = c.lru.GetOldest()\n-\tc.lock.RUnlock()\n+\tc.lock.Unlock()\n \treturn\n }\n "
    },
    {
      "sha": "a86c8539e0663155bd55997953f2d9dba2425e2f",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/simplelru/lru.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Fsimplelru%2Flru.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Fsimplelru%2Flru.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Fsimplelru%2Flru.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -25,7 +25,7 @@ type entry struct {\n // NewLRU constructs an LRU of the given size\n func NewLRU(size int, onEvict EvictCallback) (*LRU, error) {\n \tif size <= 0 {\n-\t\treturn nil, errors.New(\"must provide a positive size\")\n+\t\treturn nil, errors.New(\"Must provide a positive size\")\n \t}\n \tc := &LRU{\n \t\tsize:      size,\n@@ -109,7 +109,7 @@ func (c *LRU) Remove(key interface{}) (present bool) {\n }\n \n // RemoveOldest removes the oldest item from the cache.\n-func (c *LRU) RemoveOldest() (key, value interface{}, ok bool) {\n+func (c *LRU) RemoveOldest() (key interface{}, value interface{}, ok bool) {\n \tent := c.evictList.Back()\n \tif ent != nil {\n \t\tc.removeElement(ent)\n@@ -120,7 +120,7 @@ func (c *LRU) RemoveOldest() (key, value interface{}, ok bool) {\n }\n \n // GetOldest returns the oldest entry\n-func (c *LRU) GetOldest() (key, value interface{}, ok bool) {\n+func (c *LRU) GetOldest() (key interface{}, value interface{}, ok bool) {\n \tent := c.evictList.Back()\n \tif ent != nil {\n \t\tkv := ent.Value.(*entry)"
    },
    {
      "sha": "92d70934d632fc039f2f4b5365097f41f117a583",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/simplelru/lru_interface.go",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Fsimplelru%2Flru_interface.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Fsimplelru%2Flru_interface.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Fsimplelru%2Flru_interface.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,4 +1,3 @@\n-// Package simplelru provides simple LRU implementation based on build-in container/list.\n package simplelru\n \n // LRUCache is the interface for simple LRU cache.\n@@ -35,6 +34,6 @@ type LRUCache interface {\n \t// Clears all cache entries.\n \tPurge()\n \n-\t// Resizes cache, returning number evicted\n-\tResize(int) int\n+  // Resizes cache, returning number evicted\n+  Resize(int) int\n }"
    },
    {
      "sha": "492760782c5eafdbec94dbd31ae7a9580346feb6",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/testing.go",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Ftesting.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Ftesting.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Ftesting.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,16 +0,0 @@\n-package lru\n-\n-import (\n-\t\"crypto/rand\"\n-\t\"math\"\n-\t\"math/big\"\n-\t\"testing\"\n-)\n-\n-func getRand(tb testing.TB) int64 {\n-\tout, err := rand.Int(rand.Reader, big.NewInt(math.MaxInt64))\n-\tif err != nil {\n-\t\ttb.Fatal(err)\n-\t}\n-\treturn out.Int64()\n-}"
    },
    {
      "sha": "b35f8449bf280c131afd066ae3e34b7f01bdba43",
      "filename": "backend/vendor/github.com/klauspost/compress/.gitignore",
      "status": "modified",
      "additions": 0,
      "deletions": 7,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2F.gitignore",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2F.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2F.gitignore?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -23,10 +23,3 @@ _testmain.go\n *.test\n *.prof\n /s2/cmd/_s2sx/sfx-exe\n-\n-# Linux perf files\n-perf.data\n-perf.data.old\n-\n-# gdb history\n-.gdb_history"
    },
    {
      "sha": "9ddf39f6f37ee45e2056088298b00d88ba20184b",
      "filename": "backend/vendor/github.com/klauspost/compress/README.md",
      "status": "modified",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2FREADME.md?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -17,30 +17,6 @@ This package provides various compression algorithms.\n \r\n # changelog\r\n \r\n-* Mar 11, 2022 (v1.15.1)\r\n-\t* huff0: Add x86 assembly of Decode4X by @WojciechMula in [#512](https://github.com/klauspost/compress/pull/512)\r\n-\t* zstd: Reuse zip decoders in [#514](https://github.com/klauspost/compress/pull/514)\r\n-\t* zstd: Detect extra block data and report as corrupted in [#520](https://github.com/klauspost/compress/pull/520)\r\n-\t* zstd: Handle zero sized frame content size stricter in [#521](https://github.com/klauspost/compress/pull/521)\r\n-\t* zstd: Add stricter block size checks in [#523](https://github.com/klauspost/compress/pull/523)\r\n-\r\n-* Mar 3, 2022 (v1.15.0)\r\n-\t* zstd: Refactor decoder by @klauspost in [#498](https://github.com/klauspost/compress/pull/498)\r\n-\t* zstd: Add stream encoding without goroutines by @klauspost in [#505](https://github.com/klauspost/compress/pull/505)\r\n-\t* huff0: Prevent single blocks exceeding 16 bits by @klauspost in[#507](https://github.com/klauspost/compress/pull/507)\r\n-\t* flate: Inline literal emission by @klauspost in [#509](https://github.com/klauspost/compress/pull/509)\r\n-\t* gzhttp: Add zstd to transport by @klauspost in [#400](https://github.com/klauspost/compress/pull/400)\r\n-\t* gzhttp: Make content-type optional by @klauspost in [#510](https://github.com/klauspost/compress/pull/510)\r\n-\r\n-<details>\r\n-\t<summary>See  Details</summary>\r\n-Both compression and decompression now supports \"synchronous\" stream operations. This means that whenever \"concurrency\" is set to 1, they will operate without spawning goroutines.\r\n-\r\n-Stream decompression is now faster on asynchronous, since the goroutine allocation much more effectively splits the workload. On typical streams this will typically use 2 cores fully for decompression. When a stream has finished decoding no goroutines will be left over, so decoders can now safely be pooled and still be garbage collected.\r\n-\r\n-While the release has been extensively tested, it is recommended to testing when upgrading.\r\n-</details>\r\n-\r\n * Feb 22, 2022 (v1.14.4)\r\n \t* flate: Fix rare huffman only (-2) corruption. [#503](https://github.com/klauspost/compress/pull/503)\r\n \t* zip: Update deprecated CreateHeaderRaw to correctly call CreateRaw by @saracen in [#502](https://github.com/klauspost/compress/pull/502)\r"
    },
    {
      "sha": "ff2c69d60cf0067fbd4a9a9009dc4be64d77b8cc",
      "filename": "backend/vendor/github.com/klauspost/compress/huff0/autogen.go",
      "status": "removed",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fautogen.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fautogen.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fautogen.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,5 +0,0 @@\n-package huff0\n-\n-//go:generate go run generate.go\n-//go:generate asmfmt -w decompress_amd64.s\n-//go:generate asmfmt -w decompress_8b_amd64.s"
    },
    {
      "sha": "03562db16fb8c888ca6fb2df7251edd577907466",
      "filename": "backend/vendor/github.com/klauspost/compress/huff0/bitreader.go",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fbitreader.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fbitreader.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fbitreader.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -165,11 +165,6 @@ func (b *bitReaderShifted) peekBitsFast(n uint8) uint16 {\n \treturn uint16(b.value >> ((64 - n) & 63))\n }\n \n-// peekTopBits(n) is equvialent to peekBitFast(64 - n)\n-func (b *bitReaderShifted) peekTopBits(n uint8) uint16 {\n-\treturn uint16(b.value >> n)\n-}\n-\n func (b *bitReaderShifted) advance(n uint8) {\n \tb.bitsRead += n\n \tb.value <<= n & 63"
    },
    {
      "sha": "3ae7d46771fbd31e0162a0ffacad9179c5221e9b",
      "filename": "backend/vendor/github.com/klauspost/compress/huff0/decompress.go",
      "status": "modified",
      "additions": 183,
      "deletions": 0,
      "changes": 183,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -725,6 +725,189 @@ func (d *Decoder) decompress1X8BitExactly(dst, src []byte) ([]byte, error) {\n \treturn dst, br.close()\n }\n \n+// Decompress4X will decompress a 4X encoded stream.\n+// The length of the supplied input must match the end of a block exactly.\n+// The *capacity* of the dst slice must match the destination size of\n+// the uncompressed data exactly.\n+func (d *Decoder) Decompress4X(dst, src []byte) ([]byte, error) {\n+\tif len(d.dt.single) == 0 {\n+\t\treturn nil, errors.New(\"no table loaded\")\n+\t}\n+\tif len(src) < 6+(4*1) {\n+\t\treturn nil, errors.New(\"input too small\")\n+\t}\n+\tif use8BitTables && d.actualTableLog <= 8 {\n+\t\treturn d.decompress4X8bit(dst, src)\n+\t}\n+\n+\tvar br [4]bitReaderShifted\n+\t// Decode \"jump table\"\n+\tstart := 6\n+\tfor i := 0; i < 3; i++ {\n+\t\tlength := int(src[i*2]) | (int(src[i*2+1]) << 8)\n+\t\tif start+length >= len(src) {\n+\t\t\treturn nil, errors.New(\"truncated input (or invalid offset)\")\n+\t\t}\n+\t\terr := br[i].init(src[start : start+length])\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\t\tstart += length\n+\t}\n+\terr := br[3].init(src[start:])\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\t// destination, offset to match first output\n+\tdstSize := cap(dst)\n+\tdst = dst[:dstSize]\n+\tout := dst\n+\tdstEvery := (dstSize + 3) / 4\n+\n+\tconst tlSize = 1 << tableLogMax\n+\tconst tlMask = tlSize - 1\n+\tsingle := d.dt.single[:tlSize]\n+\n+\t// Use temp table to avoid bound checks/append penalty.\n+\tbuf := d.buffer()\n+\tvar off uint8\n+\tvar decoded int\n+\n+\t// Decode 2 values from each decoder/loop.\n+\tconst bufoff = 256\n+\tfor {\n+\t\tif br[0].off < 4 || br[1].off < 4 || br[2].off < 4 || br[3].off < 4 {\n+\t\t\tbreak\n+\t\t}\n+\n+\t\t{\n+\t\t\tconst stream = 0\n+\t\t\tconst stream2 = 1\n+\t\t\tbr[stream].fillFast()\n+\t\t\tbr[stream2].fillFast()\n+\n+\t\t\tval := br[stream].peekBitsFast(d.actualTableLog)\n+\t\t\tval2 := br[stream2].peekBitsFast(d.actualTableLog)\n+\t\t\tv := single[val&tlMask]\n+\t\t\tv2 := single[val2&tlMask]\n+\t\t\tbr[stream].advance(uint8(v.entry))\n+\t\t\tbr[stream2].advance(uint8(v2.entry))\n+\t\t\tbuf[stream][off] = uint8(v.entry >> 8)\n+\t\t\tbuf[stream2][off] = uint8(v2.entry >> 8)\n+\n+\t\t\tval = br[stream].peekBitsFast(d.actualTableLog)\n+\t\t\tval2 = br[stream2].peekBitsFast(d.actualTableLog)\n+\t\t\tv = single[val&tlMask]\n+\t\t\tv2 = single[val2&tlMask]\n+\t\t\tbr[stream].advance(uint8(v.entry))\n+\t\t\tbr[stream2].advance(uint8(v2.entry))\n+\t\t\tbuf[stream][off+1] = uint8(v.entry >> 8)\n+\t\t\tbuf[stream2][off+1] = uint8(v2.entry >> 8)\n+\t\t}\n+\n+\t\t{\n+\t\t\tconst stream = 2\n+\t\t\tconst stream2 = 3\n+\t\t\tbr[stream].fillFast()\n+\t\t\tbr[stream2].fillFast()\n+\n+\t\t\tval := br[stream].peekBitsFast(d.actualTableLog)\n+\t\t\tval2 := br[stream2].peekBitsFast(d.actualTableLog)\n+\t\t\tv := single[val&tlMask]\n+\t\t\tv2 := single[val2&tlMask]\n+\t\t\tbr[stream].advance(uint8(v.entry))\n+\t\t\tbr[stream2].advance(uint8(v2.entry))\n+\t\t\tbuf[stream][off] = uint8(v.entry >> 8)\n+\t\t\tbuf[stream2][off] = uint8(v2.entry >> 8)\n+\n+\t\t\tval = br[stream].peekBitsFast(d.actualTableLog)\n+\t\t\tval2 = br[stream2].peekBitsFast(d.actualTableLog)\n+\t\t\tv = single[val&tlMask]\n+\t\t\tv2 = single[val2&tlMask]\n+\t\t\tbr[stream].advance(uint8(v.entry))\n+\t\t\tbr[stream2].advance(uint8(v2.entry))\n+\t\t\tbuf[stream][off+1] = uint8(v.entry >> 8)\n+\t\t\tbuf[stream2][off+1] = uint8(v2.entry >> 8)\n+\t\t}\n+\n+\t\toff += 2\n+\n+\t\tif off == 0 {\n+\t\t\tif bufoff > dstEvery {\n+\t\t\t\td.bufs.Put(buf)\n+\t\t\t\treturn nil, errors.New(\"corruption detected: stream overrun 1\")\n+\t\t\t}\n+\t\t\tcopy(out, buf[0][:])\n+\t\t\tcopy(out[dstEvery:], buf[1][:])\n+\t\t\tcopy(out[dstEvery*2:], buf[2][:])\n+\t\t\tcopy(out[dstEvery*3:], buf[3][:])\n+\t\t\tout = out[bufoff:]\n+\t\t\tdecoded += bufoff * 4\n+\t\t\t// There must at least be 3 buffers left.\n+\t\t\tif len(out) < dstEvery*3 {\n+\t\t\t\td.bufs.Put(buf)\n+\t\t\t\treturn nil, errors.New(\"corruption detected: stream overrun 2\")\n+\t\t\t}\n+\t\t}\n+\t}\n+\tif off > 0 {\n+\t\tioff := int(off)\n+\t\tif len(out) < dstEvery*3+ioff {\n+\t\t\td.bufs.Put(buf)\n+\t\t\treturn nil, errors.New(\"corruption detected: stream overrun 3\")\n+\t\t}\n+\t\tcopy(out, buf[0][:off])\n+\t\tcopy(out[dstEvery:], buf[1][:off])\n+\t\tcopy(out[dstEvery*2:], buf[2][:off])\n+\t\tcopy(out[dstEvery*3:], buf[3][:off])\n+\t\tdecoded += int(off) * 4\n+\t\tout = out[off:]\n+\t}\n+\n+\t// Decode remaining.\n+\tremainBytes := dstEvery - (decoded / 4)\n+\tfor i := range br {\n+\t\toffset := dstEvery * i\n+\t\tendsAt := offset + remainBytes\n+\t\tif endsAt > len(out) {\n+\t\t\tendsAt = len(out)\n+\t\t}\n+\t\tbr := &br[i]\n+\t\tbitsLeft := br.remaining()\n+\t\tfor bitsLeft > 0 {\n+\t\t\tbr.fill()\n+\t\t\tif offset >= endsAt {\n+\t\t\t\td.bufs.Put(buf)\n+\t\t\t\treturn nil, errors.New(\"corruption detected: stream overrun 4\")\n+\t\t\t}\n+\n+\t\t\t// Read value and increment offset.\n+\t\t\tval := br.peekBitsFast(d.actualTableLog)\n+\t\t\tv := single[val&tlMask].entry\n+\t\t\tnBits := uint8(v)\n+\t\t\tbr.advance(nBits)\n+\t\t\tbitsLeft -= uint(nBits)\n+\t\t\tout[offset] = uint8(v >> 8)\n+\t\t\toffset++\n+\t\t}\n+\t\tif offset != endsAt {\n+\t\t\td.bufs.Put(buf)\n+\t\t\treturn nil, fmt.Errorf(\"corruption detected: short output block %d, end %d != %d\", i, offset, endsAt)\n+\t\t}\n+\t\tdecoded += offset - dstEvery*i\n+\t\terr = br.close()\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\t}\n+\td.bufs.Put(buf)\n+\tif dstSize != decoded {\n+\t\treturn nil, errors.New(\"corruption detected: short output block\")\n+\t}\n+\treturn dst, nil\n+}\n+\n // Decompress4X will decompress a 4X encoded stream.\n // The length of the supplied input must match the end of a block exactly.\n // The *capacity* of the dst slice must match the destination size of"
    },
    {
      "sha": "0d6cb1a962b3fc95360ccbb1e0ef6ec68918c16f",
      "filename": "backend/vendor/github.com/klauspost/compress/huff0/decompress_8b_amd64.s",
      "status": "removed",
      "additions": 0,
      "deletions": 488,
      "changes": 488,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_8b_amd64.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_8b_amd64.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_8b_amd64.s?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,488 +0,0 @@\n-// +build !appengine\n-// +build gc\n-// +build !noasm\n-\n-#include \"textflag.h\"\n-#include \"funcdata.h\"\n-#include \"go_asm.h\"\n-\n-#define bufoff      256 // see decompress.go, we're using [4][256]byte table\n-\n-// func decompress4x_main_loop_x86(pbr0, pbr1, pbr2, pbr3 *bitReaderShifted,\n-//\tpeekBits uint8, buf *byte, tbl *dEntrySingle) (int, bool)\n-TEXT ·decompress4x_8b_loop_x86(SB), NOSPLIT, $8\n-#define off             R8\n-#define buffer          DI\n-#define table           SI\n-\n-#define br_bits_read    R9\n-#define br_value        R10\n-#define br_offset       R11\n-#define peek_bits       R12\n-#define exhausted       DX\n-\n-#define br0             R13\n-#define br1             R14\n-#define br2             R15\n-#define br3             BP\n-\n-\tMOVQ BP, 0(SP)\n-\n-\tXORQ exhausted, exhausted // exhausted = false\n-\tXORQ off, off             // off = 0\n-\n-\tMOVBQZX peekBits+32(FP), peek_bits\n-\tMOVQ    buf+40(FP), buffer\n-\tMOVQ    tbl+48(FP), table\n-\n-\tMOVQ pbr0+0(FP), br0\n-\tMOVQ pbr1+8(FP), br1\n-\tMOVQ pbr2+16(FP), br2\n-\tMOVQ pbr3+24(FP), br3\n-\n-main_loop:\n-\n-\t// const stream = 0\n-\t// br0.fillFast()\n-\tMOVBQZX bitReaderShifted_bitsRead(br0), br_bits_read\n-\tMOVQ    bitReaderShifted_value(br0), br_value\n-\tMOVQ    bitReaderShifted_off(br0), br_offset\n-\n-\t// if b.bitsRead >= 32 {\n-\tCMPQ br_bits_read, $32\n-\tJB   skip_fill0\n-\n-\tSUBQ $32, br_bits_read // b.bitsRead -= 32\n-\tSUBQ $4, br_offset     // b.off -= 4\n-\n-\t// v := b.in[b.off-4 : b.off]\n-\t// v = v[:4]\n-\t// low := (uint32(v[0])) | (uint32(v[1]) << 8) | (uint32(v[2]) << 16) | (uint32(v[3]) << 24)\n-\tMOVQ bitReaderShifted_in(br0), AX\n-\tMOVL 0(br_offset)(AX*1), AX       // AX = uint32(b.in[b.off:b.off+4])\n-\n-\t// b.value |= uint64(low) << (b.bitsRead & 63)\n-\tMOVQ br_bits_read, CX\n-\tSHLQ CL, AX\n-\tORQ  AX, br_value\n-\n-\t// exhausted = exhausted || (br0.off < 4)\n-\tCMPQ  br_offset, $4\n-\tSETLT DL\n-\tORB   DL, DH\n-\n-\t// }\n-skip_fill0:\n-\n-\t// val0 := br0.peekTopBits(peekBits)\n-\tMOVQ br_value, AX\n-\tMOVQ peek_bits, CX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v0 := table[val0&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v0\n-\n-\t// br0.advance(uint8(v0.entry))\n-\tMOVB    AH, BL           // BL = uint8(v0.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// val1 := br0.peekTopBits(peekBits)\n-\tMOVQ peek_bits, CX\n-\tMOVQ br_value, AX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v1 := table[val1&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v1\n-\n-\t// br0.advance(uint8(v1.entry))\n-\tMOVB    AH, BH           // BH = uint8(v1.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CX, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// these two writes get coalesced\n-\t// buf[stream][off] = uint8(v0.entry >> 8)\n-\t// buf[stream][off+1] = uint8(v1.entry >> 8)\n-\tMOVW BX, 0(buffer)(off*1)\n-\n-\t// SECOND PART:\n-\t// val2 := br0.peekTopBits(peekBits)\n-\tMOVQ br_value, AX\n-\tMOVQ peek_bits, CX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v2 := table[val0&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v0\n-\n-\t// br0.advance(uint8(v0.entry))\n-\tMOVB    AH, BL           // BL = uint8(v0.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// val3 := br0.peekTopBits(peekBits)\n-\tMOVQ peek_bits, CX\n-\tMOVQ br_value, AX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v3 := table[val1&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v1\n-\n-\t// br0.advance(uint8(v1.entry))\n-\tMOVB    AH, BH           // BH = uint8(v1.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CX, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// these two writes get coalesced\n-\t// buf[stream][off+2] = uint8(v2.entry >> 8)\n-\t// buf[stream][off+3] = uint8(v3.entry >> 8)\n-\tMOVW BX, 0+2(buffer)(off*1)\n-\n-\t// update the bitrader reader structure\n-\tMOVB br_bits_read, bitReaderShifted_bitsRead(br0)\n-\tMOVQ br_value, bitReaderShifted_value(br0)\n-\tMOVQ br_offset, bitReaderShifted_off(br0)\n-\n-\t// const stream = 1\n-\t// br1.fillFast()\n-\tMOVBQZX bitReaderShifted_bitsRead(br1), br_bits_read\n-\tMOVQ    bitReaderShifted_value(br1), br_value\n-\tMOVQ    bitReaderShifted_off(br1), br_offset\n-\n-\t// if b.bitsRead >= 32 {\n-\tCMPQ br_bits_read, $32\n-\tJB   skip_fill1\n-\n-\tSUBQ $32, br_bits_read // b.bitsRead -= 32\n-\tSUBQ $4, br_offset     // b.off -= 4\n-\n-\t// v := b.in[b.off-4 : b.off]\n-\t// v = v[:4]\n-\t// low := (uint32(v[0])) | (uint32(v[1]) << 8) | (uint32(v[2]) << 16) | (uint32(v[3]) << 24)\n-\tMOVQ bitReaderShifted_in(br1), AX\n-\tMOVL 0(br_offset)(AX*1), AX       // AX = uint32(b.in[b.off:b.off+4])\n-\n-\t// b.value |= uint64(low) << (b.bitsRead & 63)\n-\tMOVQ br_bits_read, CX\n-\tSHLQ CL, AX\n-\tORQ  AX, br_value\n-\n-\t// exhausted = exhausted || (br1.off < 4)\n-\tCMPQ  br_offset, $4\n-\tSETLT DL\n-\tORB   DL, DH\n-\n-\t// }\n-skip_fill1:\n-\n-\t// val0 := br1.peekTopBits(peekBits)\n-\tMOVQ br_value, AX\n-\tMOVQ peek_bits, CX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v0 := table[val0&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v0\n-\n-\t// br1.advance(uint8(v0.entry))\n-\tMOVB    AH, BL           // BL = uint8(v0.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// val1 := br1.peekTopBits(peekBits)\n-\tMOVQ peek_bits, CX\n-\tMOVQ br_value, AX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v1 := table[val1&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v1\n-\n-\t// br1.advance(uint8(v1.entry))\n-\tMOVB    AH, BH           // BH = uint8(v1.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CX, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// these two writes get coalesced\n-\t// buf[stream][off] = uint8(v0.entry >> 8)\n-\t// buf[stream][off+1] = uint8(v1.entry >> 8)\n-\tMOVW BX, 256(buffer)(off*1)\n-\n-\t// SECOND PART:\n-\t// val2 := br1.peekTopBits(peekBits)\n-\tMOVQ br_value, AX\n-\tMOVQ peek_bits, CX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v2 := table[val0&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v0\n-\n-\t// br1.advance(uint8(v0.entry))\n-\tMOVB    AH, BL           // BL = uint8(v0.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// val3 := br1.peekTopBits(peekBits)\n-\tMOVQ peek_bits, CX\n-\tMOVQ br_value, AX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v3 := table[val1&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v1\n-\n-\t// br1.advance(uint8(v1.entry))\n-\tMOVB    AH, BH           // BH = uint8(v1.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CX, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// these two writes get coalesced\n-\t// buf[stream][off+2] = uint8(v2.entry >> 8)\n-\t// buf[stream][off+3] = uint8(v3.entry >> 8)\n-\tMOVW BX, 256+2(buffer)(off*1)\n-\n-\t// update the bitrader reader structure\n-\tMOVB br_bits_read, bitReaderShifted_bitsRead(br1)\n-\tMOVQ br_value, bitReaderShifted_value(br1)\n-\tMOVQ br_offset, bitReaderShifted_off(br1)\n-\n-\t// const stream = 2\n-\t// br2.fillFast()\n-\tMOVBQZX bitReaderShifted_bitsRead(br2), br_bits_read\n-\tMOVQ    bitReaderShifted_value(br2), br_value\n-\tMOVQ    bitReaderShifted_off(br2), br_offset\n-\n-\t// if b.bitsRead >= 32 {\n-\tCMPQ br_bits_read, $32\n-\tJB   skip_fill2\n-\n-\tSUBQ $32, br_bits_read // b.bitsRead -= 32\n-\tSUBQ $4, br_offset     // b.off -= 4\n-\n-\t// v := b.in[b.off-4 : b.off]\n-\t// v = v[:4]\n-\t// low := (uint32(v[0])) | (uint32(v[1]) << 8) | (uint32(v[2]) << 16) | (uint32(v[3]) << 24)\n-\tMOVQ bitReaderShifted_in(br2), AX\n-\tMOVL 0(br_offset)(AX*1), AX       // AX = uint32(b.in[b.off:b.off+4])\n-\n-\t// b.value |= uint64(low) << (b.bitsRead & 63)\n-\tMOVQ br_bits_read, CX\n-\tSHLQ CL, AX\n-\tORQ  AX, br_value\n-\n-\t// exhausted = exhausted || (br2.off < 4)\n-\tCMPQ  br_offset, $4\n-\tSETLT DL\n-\tORB   DL, DH\n-\n-\t// }\n-skip_fill2:\n-\n-\t// val0 := br2.peekTopBits(peekBits)\n-\tMOVQ br_value, AX\n-\tMOVQ peek_bits, CX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v0 := table[val0&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v0\n-\n-\t// br2.advance(uint8(v0.entry))\n-\tMOVB    AH, BL           // BL = uint8(v0.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// val1 := br2.peekTopBits(peekBits)\n-\tMOVQ peek_bits, CX\n-\tMOVQ br_value, AX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v1 := table[val1&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v1\n-\n-\t// br2.advance(uint8(v1.entry))\n-\tMOVB    AH, BH           // BH = uint8(v1.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CX, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// these two writes get coalesced\n-\t// buf[stream][off] = uint8(v0.entry >> 8)\n-\t// buf[stream][off+1] = uint8(v1.entry >> 8)\n-\tMOVW BX, 512(buffer)(off*1)\n-\n-\t// SECOND PART:\n-\t// val2 := br2.peekTopBits(peekBits)\n-\tMOVQ br_value, AX\n-\tMOVQ peek_bits, CX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v2 := table[val0&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v0\n-\n-\t// br2.advance(uint8(v0.entry))\n-\tMOVB    AH, BL           // BL = uint8(v0.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// val3 := br2.peekTopBits(peekBits)\n-\tMOVQ peek_bits, CX\n-\tMOVQ br_value, AX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v3 := table[val1&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v1\n-\n-\t// br2.advance(uint8(v1.entry))\n-\tMOVB    AH, BH           // BH = uint8(v1.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CX, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// these two writes get coalesced\n-\t// buf[stream][off+2] = uint8(v2.entry >> 8)\n-\t// buf[stream][off+3] = uint8(v3.entry >> 8)\n-\tMOVW BX, 512+2(buffer)(off*1)\n-\n-\t// update the bitrader reader structure\n-\tMOVB br_bits_read, bitReaderShifted_bitsRead(br2)\n-\tMOVQ br_value, bitReaderShifted_value(br2)\n-\tMOVQ br_offset, bitReaderShifted_off(br2)\n-\n-\t// const stream = 3\n-\t// br3.fillFast()\n-\tMOVBQZX bitReaderShifted_bitsRead(br3), br_bits_read\n-\tMOVQ    bitReaderShifted_value(br3), br_value\n-\tMOVQ    bitReaderShifted_off(br3), br_offset\n-\n-\t// if b.bitsRead >= 32 {\n-\tCMPQ br_bits_read, $32\n-\tJB   skip_fill3\n-\n-\tSUBQ $32, br_bits_read // b.bitsRead -= 32\n-\tSUBQ $4, br_offset     // b.off -= 4\n-\n-\t// v := b.in[b.off-4 : b.off]\n-\t// v = v[:4]\n-\t// low := (uint32(v[0])) | (uint32(v[1]) << 8) | (uint32(v[2]) << 16) | (uint32(v[3]) << 24)\n-\tMOVQ bitReaderShifted_in(br3), AX\n-\tMOVL 0(br_offset)(AX*1), AX       // AX = uint32(b.in[b.off:b.off+4])\n-\n-\t// b.value |= uint64(low) << (b.bitsRead & 63)\n-\tMOVQ br_bits_read, CX\n-\tSHLQ CL, AX\n-\tORQ  AX, br_value\n-\n-\t// exhausted = exhausted || (br3.off < 4)\n-\tCMPQ  br_offset, $4\n-\tSETLT DL\n-\tORB   DL, DH\n-\n-\t// }\n-skip_fill3:\n-\n-\t// val0 := br3.peekTopBits(peekBits)\n-\tMOVQ br_value, AX\n-\tMOVQ peek_bits, CX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v0 := table[val0&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v0\n-\n-\t// br3.advance(uint8(v0.entry))\n-\tMOVB    AH, BL           // BL = uint8(v0.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// val1 := br3.peekTopBits(peekBits)\n-\tMOVQ peek_bits, CX\n-\tMOVQ br_value, AX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v1 := table[val1&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v1\n-\n-\t// br3.advance(uint8(v1.entry))\n-\tMOVB    AH, BH           // BH = uint8(v1.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CX, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// these two writes get coalesced\n-\t// buf[stream][off] = uint8(v0.entry >> 8)\n-\t// buf[stream][off+1] = uint8(v1.entry >> 8)\n-\tMOVW BX, 768(buffer)(off*1)\n-\n-\t// SECOND PART:\n-\t// val2 := br3.peekTopBits(peekBits)\n-\tMOVQ br_value, AX\n-\tMOVQ peek_bits, CX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v2 := table[val0&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v0\n-\n-\t// br3.advance(uint8(v0.entry))\n-\tMOVB    AH, BL           // BL = uint8(v0.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// val3 := br3.peekTopBits(peekBits)\n-\tMOVQ peek_bits, CX\n-\tMOVQ br_value, AX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-\t// v3 := table[val1&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v1\n-\n-\t// br3.advance(uint8(v1.entry))\n-\tMOVB    AH, BH           // BH = uint8(v1.entry >> 8)\n-\tMOVBQZX AL, CX\n-\tSHLQ    CX, br_value     // value <<= n\n-\tADDQ    CX, br_bits_read // bits_read += n\n-\n-\t// these two writes get coalesced\n-\t// buf[stream][off+2] = uint8(v2.entry >> 8)\n-\t// buf[stream][off+3] = uint8(v3.entry >> 8)\n-\tMOVW BX, 768+2(buffer)(off*1)\n-\n-\t// update the bitrader reader structure\n-\tMOVB br_bits_read, bitReaderShifted_bitsRead(br3)\n-\tMOVQ br_value, bitReaderShifted_value(br3)\n-\tMOVQ br_offset, bitReaderShifted_off(br3)\n-\n-\tADDQ $4, off // off += 2\n-\n-\tTESTB DH, DH // any br[i].ofs < 4?\n-\tJNZ   end\n-\n-\tCMPQ off, $bufoff\n-\tJL   main_loop\n-\n-end:\n-\tMOVQ 0(SP), BP\n-\n-\tMOVB off, ret+56(FP)\n-\tRET\n-\n-#undef off\n-#undef buffer\n-#undef table\n-\n-#undef br_bits_read\n-#undef br_value\n-#undef br_offset\n-#undef peek_bits\n-#undef exhausted\n-\n-#undef br0\n-#undef br1\n-#undef br2\n-#undef br3"
    },
    {
      "sha": "6d477a2c11e48b0ebfcebde9f118c74e3d6bd893",
      "filename": "backend/vendor/github.com/klauspost/compress/huff0/decompress_8b_amd64.s.in",
      "status": "removed",
      "additions": 0,
      "deletions": 197,
      "changes": 197,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_8b_amd64.s.in",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_8b_amd64.s.in",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_8b_amd64.s.in?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,197 +0,0 @@\n-// +build !appengine\n-// +build gc\n-// +build !noasm\n-\n-#include \"textflag.h\"\n-#include \"funcdata.h\"\n-#include \"go_asm.h\"\n-\n-\n-#define bufoff      256     // see decompress.go, we're using [4][256]byte table\n-\n-//func decompress4x_main_loop_x86(pbr0, pbr1, pbr2, pbr3 *bitReaderShifted,\n-//\tpeekBits uint8, buf *byte, tbl *dEntrySingle) (int, bool)\n-TEXT ·decompress4x_8b_loop_x86(SB), NOSPLIT, $8\n-#define off             R8\n-#define buffer          DI\n-#define table           SI\n-\n-#define br_bits_read    R9\n-#define br_value        R10\n-#define br_offset       R11\n-#define peek_bits       R12\n-#define exhausted       DX\n-\n-#define br0             R13\n-#define br1             R14\n-#define br2             R15\n-#define br3             BP\n-\n-    MOVQ    BP, 0(SP)\n-\n-    XORQ    exhausted, exhausted    // exhausted = false\n-    XORQ    off, off                // off = 0\n-\n-    MOVBQZX peekBits+32(FP), peek_bits\n-    MOVQ    buf+40(FP), buffer\n-    MOVQ    tbl+48(FP), table\n-\n-    MOVQ    pbr0+0(FP), br0\n-    MOVQ    pbr1+8(FP), br1\n-    MOVQ    pbr2+16(FP), br2\n-    MOVQ    pbr3+24(FP), br3\n-\n-main_loop:\n-{{ define \"decode_2_values_x86\" }}\n-    // const stream = {{ var \"id\" }}\n-    // br{{ var \"id\"}}.fillFast()\n-    MOVBQZX bitReaderShifted_bitsRead(br{{ var \"id\" }}), br_bits_read\n-    MOVQ    bitReaderShifted_value(br{{ var \"id\" }}), br_value\n-    MOVQ    bitReaderShifted_off(br{{ var \"id\" }}), br_offset\n-\n-\t// if b.bitsRead >= 32 {\n-    CMPQ    br_bits_read, $32\n-    JB      skip_fill{{ var \"id\" }}\n-\n-    SUBQ    $32, br_bits_read       // b.bitsRead -= 32\n-    SUBQ    $4, br_offset           // b.off -= 4\n-\n-\t// v := b.in[b.off-4 : b.off]\n-\t// v = v[:4]\n-\t// low := (uint32(v[0])) | (uint32(v[1]) << 8) | (uint32(v[2]) << 16) | (uint32(v[3]) << 24)\n-    MOVQ    bitReaderShifted_in(br{{ var \"id\" }}), AX\n-    MOVL    0(br_offset)(AX*1), AX  // AX = uint32(b.in[b.off:b.off+4])\n-\n-\t// b.value |= uint64(low) << (b.bitsRead & 63)\n-    MOVQ    br_bits_read, CX\n-    SHLQ    CL, AX\n-    ORQ     AX, br_value\n-\n-    // exhausted = exhausted || (br{{ var \"id\"}}.off < 4)\n-    CMPQ    br_offset, $4\n-    SETLT   DL\n-    ORB     DL, DH\n-    // }\n-skip_fill{{ var \"id\" }}:\n-\n-    // val0 := br{{ var \"id\"}}.peekTopBits(peekBits)\n-    MOVQ    br_value, AX\n-    MOVQ    peek_bits, CX\n-    SHRQ    CL, AX                  // AX = (value >> peek_bits) & mask\n-\n-    // v0 := table[val0&mask]\n-    MOVW    0(table)(AX*2), AX      // AX - v0\n-\n-    // br{{ var \"id\"}}.advance(uint8(v0.entry))\n-    MOVB    AH, BL                  // BL = uint8(v0.entry >> 8)\n-    MOVBQZX AL, CX\n-    SHLQ    CL, br_value            // value <<= n\n-    ADDQ    CX, br_bits_read        // bits_read += n\n-\n-    // val1 := br{{ var \"id\"}}.peekTopBits(peekBits)\n-    MOVQ    peek_bits, CX\n-    MOVQ    br_value, AX\n-    SHRQ    CL, AX                  // AX = (value >> peek_bits) & mask\n-\n-    // v1 := table[val1&mask]\n-    MOVW    0(table)(AX*2), AX      // AX - v1\n-\n-    // br{{ var \"id\"}}.advance(uint8(v1.entry))\n-    MOVB    AH, BH                  // BH = uint8(v1.entry >> 8)\n-    MOVBQZX AL, CX\n-    SHLQ    CX, br_value            // value <<= n\n-    ADDQ    CX, br_bits_read        // bits_read += n\n-\n-\n-    // these two writes get coalesced\n-    // buf[stream][off] = uint8(v0.entry >> 8)\n-    // buf[stream][off+1] = uint8(v1.entry >> 8)\n-    MOVW    BX, {{ var \"bufofs\" }}(buffer)(off*1)\n-\n-    // SECOND PART:\n-    // val2 := br{{ var \"id\"}}.peekTopBits(peekBits)\n-    MOVQ    br_value, AX\n-    MOVQ    peek_bits, CX\n-    SHRQ    CL, AX                  // AX = (value >> peek_bits) & mask\n-\n-    // v2 := table[val0&mask]\n-    MOVW    0(table)(AX*2), AX      // AX - v0\n-\n-    // br{{ var \"id\"}}.advance(uint8(v0.entry))\n-    MOVB    AH, BL                  // BL = uint8(v0.entry >> 8)\n-    MOVBQZX AL, CX\n-    SHLQ    CL, br_value            // value <<= n\n-    ADDQ    CX, br_bits_read        // bits_read += n\n-\n-    // val3 := br{{ var \"id\"}}.peekTopBits(peekBits)\n-    MOVQ    peek_bits, CX\n-    MOVQ    br_value, AX\n-    SHRQ    CL, AX                  // AX = (value >> peek_bits) & mask\n-\n-    // v3 := table[val1&mask]\n-    MOVW    0(table)(AX*2), AX      // AX - v1\n-\n-    // br{{ var \"id\"}}.advance(uint8(v1.entry))\n-    MOVB    AH, BH                  // BH = uint8(v1.entry >> 8)\n-    MOVBQZX AL, CX\n-    SHLQ    CX, br_value            // value <<= n\n-    ADDQ    CX, br_bits_read        // bits_read += n\n-\n-\n-    // these two writes get coalesced\n-    // buf[stream][off+2] = uint8(v2.entry >> 8)\n-    // buf[stream][off+3] = uint8(v3.entry >> 8)\n-    MOVW    BX, {{ var \"bufofs\" }}+2(buffer)(off*1)\n-\n-    // update the bitrader reader structure\n-    MOVB    br_bits_read, bitReaderShifted_bitsRead(br{{ var \"id\" }})\n-    MOVQ    br_value, bitReaderShifted_value(br{{ var \"id\" }})\n-    MOVQ    br_offset, bitReaderShifted_off(br{{ var \"id\" }})\n-{{ end }}\n-\n-    {{ set \"id\" \"0\" }}\n-    {{ set \"ofs\" \"0\" }}\n-    {{ set \"bufofs\" \"0\" }} {{/* id * bufoff */}}\n-    {{ template \"decode_2_values_x86\" . }}\n-\n-    {{ set \"id\" \"1\" }}\n-    {{ set \"ofs\" \"8\" }}\n-    {{ set \"bufofs\" \"256\" }}\n-    {{ template \"decode_2_values_x86\" . }}\n-\n-    {{ set \"id\" \"2\" }}\n-    {{ set \"ofs\" \"16\" }}\n-    {{ set \"bufofs\" \"512\" }}\n-    {{ template \"decode_2_values_x86\" . }}\n-\n-    {{ set \"id\" \"3\" }}\n-    {{ set \"ofs\" \"24\" }}\n-    {{ set \"bufofs\" \"768\" }}\n-    {{ template \"decode_2_values_x86\" . }}\n-\n-    ADDQ    $4, off     // off += 2\n-\n-    TESTB   DH, DH      // any br[i].ofs < 4?\n-    JNZ     end\n-\n-    CMPQ    off, $bufoff\n-    JL      main_loop\n-end:\n-    MOVQ    0(SP), BP\n-\n-    MOVB    off, ret+56(FP)\n-    RET\n-#undef  off\n-#undef  buffer\n-#undef  table\n-\n-#undef  br_bits_read\n-#undef  br_value\n-#undef  br_offset\n-#undef  peek_bits\n-#undef  exhausted\n-\n-#undef  br0\n-#undef  br1\n-#undef  br2\n-#undef  br3"
    },
    {
      "sha": "ce8e93bcd06f6266df9b46b15cde0ccdfe7c2501",
      "filename": "backend/vendor/github.com/klauspost/compress/huff0/decompress_amd64.go",
      "status": "removed",
      "additions": 0,
      "deletions": 181,
      "changes": 181,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_amd64.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,181 +0,0 @@\n-//go:build amd64 && !appengine && !noasm && gc\n-// +build amd64,!appengine,!noasm,gc\n-\n-// This file contains the specialisation of Decoder.Decompress4X\n-// that uses an asm implementation of its main loop.\n-package huff0\n-\n-import (\n-\t\"errors\"\n-\t\"fmt\"\n-)\n-\n-// decompress4x_main_loop_x86 is an x86 assembler implementation\n-// of Decompress4X when tablelog > 8.\n-//go:noescape\n-func decompress4x_main_loop_x86(pbr0, pbr1, pbr2, pbr3 *bitReaderShifted,\n-\tpeekBits uint8, buf *byte, tbl *dEntrySingle) uint8\n-\n-// decompress4x_8b_loop_x86 is an x86 assembler implementation\n-// of Decompress4X when tablelog <= 8 which decodes 4 entries\n-// per loop.\n-//go:noescape\n-func decompress4x_8b_loop_x86(pbr0, pbr1, pbr2, pbr3 *bitReaderShifted,\n-\tpeekBits uint8, buf *byte, tbl *dEntrySingle) uint8\n-\n-// fallback8BitSize is the size where using Go version is faster.\n-const fallback8BitSize = 800\n-\n-// Decompress4X will decompress a 4X encoded stream.\n-// The length of the supplied input must match the end of a block exactly.\n-// The *capacity* of the dst slice must match the destination size of\n-// the uncompressed data exactly.\n-func (d *Decoder) Decompress4X(dst, src []byte) ([]byte, error) {\n-\tif len(d.dt.single) == 0 {\n-\t\treturn nil, errors.New(\"no table loaded\")\n-\t}\n-\tif len(src) < 6+(4*1) {\n-\t\treturn nil, errors.New(\"input too small\")\n-\t}\n-\n-\tuse8BitTables := d.actualTableLog <= 8\n-\tif cap(dst) < fallback8BitSize && use8BitTables {\n-\t\treturn d.decompress4X8bit(dst, src)\n-\t}\n-\tvar br [4]bitReaderShifted\n-\t// Decode \"jump table\"\n-\tstart := 6\n-\tfor i := 0; i < 3; i++ {\n-\t\tlength := int(src[i*2]) | (int(src[i*2+1]) << 8)\n-\t\tif start+length >= len(src) {\n-\t\t\treturn nil, errors.New(\"truncated input (or invalid offset)\")\n-\t\t}\n-\t\terr := br[i].init(src[start : start+length])\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n-\t\tstart += length\n-\t}\n-\terr := br[3].init(src[start:])\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\n-\t// destination, offset to match first output\n-\tdstSize := cap(dst)\n-\tdst = dst[:dstSize]\n-\tout := dst\n-\tdstEvery := (dstSize + 3) / 4\n-\n-\tconst tlSize = 1 << tableLogMax\n-\tconst tlMask = tlSize - 1\n-\tsingle := d.dt.single[:tlSize]\n-\n-\t// Use temp table to avoid bound checks/append penalty.\n-\tbuf := d.buffer()\n-\tvar off uint8\n-\tvar decoded int\n-\n-\tconst debug = false\n-\n-\t// see: bitReaderShifted.peekBitsFast()\n-\tpeekBits := uint8((64 - d.actualTableLog) & 63)\n-\n-\t// Decode 2 values from each decoder/loop.\n-\tconst bufoff = 256\n-\tfor {\n-\t\tif br[0].off < 4 || br[1].off < 4 || br[2].off < 4 || br[3].off < 4 {\n-\t\t\tbreak\n-\t\t}\n-\n-\t\tif use8BitTables {\n-\t\t\toff = decompress4x_8b_loop_x86(&br[0], &br[1], &br[2], &br[3], peekBits, &buf[0][0], &single[0])\n-\t\t} else {\n-\t\t\toff = decompress4x_main_loop_x86(&br[0], &br[1], &br[2], &br[3], peekBits, &buf[0][0], &single[0])\n-\t\t}\n-\t\tif debug {\n-\t\t\tfmt.Print(\"DEBUG: \")\n-\t\t\tfmt.Printf(\"off=%d,\", off)\n-\t\t\tfor i := 0; i < 4; i++ {\n-\t\t\t\tfmt.Printf(\" br[%d]={bitsRead=%d, value=%x, off=%d}\",\n-\t\t\t\t\ti, br[i].bitsRead, br[i].value, br[i].off)\n-\t\t\t}\n-\t\t\tfmt.Println(\"\")\n-\t\t}\n-\n-\t\tif off != 0 {\n-\t\t\tbreak\n-\t\t}\n-\n-\t\tif bufoff > dstEvery {\n-\t\t\td.bufs.Put(buf)\n-\t\t\treturn nil, errors.New(\"corruption detected: stream overrun 1\")\n-\t\t}\n-\t\tcopy(out, buf[0][:])\n-\t\tcopy(out[dstEvery:], buf[1][:])\n-\t\tcopy(out[dstEvery*2:], buf[2][:])\n-\t\tcopy(out[dstEvery*3:], buf[3][:])\n-\t\tout = out[bufoff:]\n-\t\tdecoded += bufoff * 4\n-\t\t// There must at least be 3 buffers left.\n-\t\tif len(out) < dstEvery*3 {\n-\t\t\td.bufs.Put(buf)\n-\t\t\treturn nil, errors.New(\"corruption detected: stream overrun 2\")\n-\t\t}\n-\t}\n-\tif off > 0 {\n-\t\tioff := int(off)\n-\t\tif len(out) < dstEvery*3+ioff {\n-\t\t\td.bufs.Put(buf)\n-\t\t\treturn nil, errors.New(\"corruption detected: stream overrun 3\")\n-\t\t}\n-\t\tcopy(out, buf[0][:off])\n-\t\tcopy(out[dstEvery:], buf[1][:off])\n-\t\tcopy(out[dstEvery*2:], buf[2][:off])\n-\t\tcopy(out[dstEvery*3:], buf[3][:off])\n-\t\tdecoded += int(off) * 4\n-\t\tout = out[off:]\n-\t}\n-\n-\t// Decode remaining.\n-\tremainBytes := dstEvery - (decoded / 4)\n-\tfor i := range br {\n-\t\toffset := dstEvery * i\n-\t\tendsAt := offset + remainBytes\n-\t\tif endsAt > len(out) {\n-\t\t\tendsAt = len(out)\n-\t\t}\n-\t\tbr := &br[i]\n-\t\tbitsLeft := br.remaining()\n-\t\tfor bitsLeft > 0 {\n-\t\t\tbr.fill()\n-\t\t\tif offset >= endsAt {\n-\t\t\t\td.bufs.Put(buf)\n-\t\t\t\treturn nil, errors.New(\"corruption detected: stream overrun 4\")\n-\t\t\t}\n-\n-\t\t\t// Read value and increment offset.\n-\t\t\tval := br.peekBitsFast(d.actualTableLog)\n-\t\t\tv := single[val&tlMask].entry\n-\t\t\tnBits := uint8(v)\n-\t\t\tbr.advance(nBits)\n-\t\t\tbitsLeft -= uint(nBits)\n-\t\t\tout[offset] = uint8(v >> 8)\n-\t\t\toffset++\n-\t\t}\n-\t\tif offset != endsAt {\n-\t\t\td.bufs.Put(buf)\n-\t\t\treturn nil, fmt.Errorf(\"corruption detected: short output block %d, end %d != %d\", i, offset, endsAt)\n-\t\t}\n-\t\tdecoded += offset - dstEvery*i\n-\t\terr = br.close()\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n-\t}\n-\td.bufs.Put(buf)\n-\tif dstSize != decoded {\n-\t\treturn nil, errors.New(\"corruption detected: short output block\")\n-\t}\n-\treturn dst, nil\n-}"
    },
    {
      "sha": "2edad3ea5a4b30be4b802b1b2a959f0757cd6162",
      "filename": "backend/vendor/github.com/klauspost/compress/huff0/decompress_amd64.s",
      "status": "removed",
      "additions": 0,
      "deletions": 506,
      "changes": 506,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_amd64.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_amd64.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_amd64.s?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,506 +0,0 @@\n-// +build !appengine\n-// +build gc\n-// +build !noasm\n-\n-#include \"textflag.h\"\n-#include \"funcdata.h\"\n-#include \"go_asm.h\"\n-\n-#ifdef GOAMD64_v4\n-#ifndef GOAMD64_v3\n-#define GOAMD64_v3\n-#endif\n-#endif\n-\n-#define bufoff      256 // see decompress.go, we're using [4][256]byte table\n-\n-// func decompress4x_main_loop_x86(pbr0, pbr1, pbr2, pbr3 *bitReaderShifted,\n-//\tpeekBits uint8, buf *byte, tbl *dEntrySingle) (int, bool)\n-TEXT ·decompress4x_main_loop_x86(SB), NOSPLIT, $8\n-#define off             R8\n-#define buffer          DI\n-#define table           SI\n-\n-#define br_bits_read    R9\n-#define br_value        R10\n-#define br_offset       R11\n-#define peek_bits       R12\n-#define exhausted       DX\n-\n-#define br0             R13\n-#define br1             R14\n-#define br2             R15\n-#define br3             BP\n-\n-\tMOVQ BP, 0(SP)\n-\n-\tXORQ exhausted, exhausted // exhausted = false\n-\tXORQ off, off             // off = 0\n-\n-\tMOVBQZX peekBits+32(FP), peek_bits\n-\tMOVQ    buf+40(FP), buffer\n-\tMOVQ    tbl+48(FP), table\n-\n-\tMOVQ pbr0+0(FP), br0\n-\tMOVQ pbr1+8(FP), br1\n-\tMOVQ pbr2+16(FP), br2\n-\tMOVQ pbr3+24(FP), br3\n-\n-main_loop:\n-\n-\t// const stream = 0\n-\t// br0.fillFast()\n-\tMOVBQZX bitReaderShifted_bitsRead(br0), br_bits_read\n-\tMOVQ    bitReaderShifted_value(br0), br_value\n-\tMOVQ    bitReaderShifted_off(br0), br_offset\n-\n-\t// We must have at least 2 * max tablelog left\n-\tCMPQ br_bits_read, $64-22\n-\tJBE  skip_fill0\n-\n-\tSUBQ $32, br_bits_read // b.bitsRead -= 32\n-\tSUBQ $4, br_offset     // b.off -= 4\n-\n-\t// v := b.in[b.off-4 : b.off]\n-\t// v = v[:4]\n-\t// low := (uint32(v[0])) | (uint32(v[1]) << 8) | (uint32(v[2]) << 16) | (uint32(v[3]) << 24)\n-\tMOVQ bitReaderShifted_in(br0), AX\n-\n-\t// b.value |= uint64(low) << (b.bitsRead & 63)\n-#ifdef GOAMD64_v3\n-\tSHLXQ br_bits_read, 0(br_offset)(AX*1), AX // AX = uint32(b.in[b.off:b.off+4]) << (b.bitsRead & 63)\n-\n-#else\n-\tMOVL 0(br_offset)(AX*1), AX // AX = uint32(b.in[b.off:b.off+4])\n-\tMOVQ br_bits_read, CX\n-\tSHLQ CL, AX\n-\n-#endif\n-\n-\tORQ AX, br_value\n-\n-\t// exhausted = exhausted || (br0.off < 4)\n-\tCMPQ  br_offset, $4\n-\tSETLT DL\n-\tORB   DL, DH\n-\n-\t// }\n-skip_fill0:\n-\n-\t// val0 := br0.peekTopBits(peekBits)\n-#ifdef GOAMD64_v3\n-\tSHRXQ peek_bits, br_value, AX // AX = (value >> peek_bits) & mask\n-\n-#else\n-\tMOVQ br_value, AX\n-\tMOVQ peek_bits, CX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-#endif\n-\n-\t// v0 := table[val0&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v0\n-\n-\t// br0.advance(uint8(v0.entry))\n-\tMOVB AH, BL // BL = uint8(v0.entry >> 8)\n-\n-#ifdef GOAMD64_v3\n-\tMOVBQZX AL, CX\n-\tSHLXQ   AX, br_value, br_value // value <<= n\n-\n-#else\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value // value <<= n\n-\n-#endif\n-\n-\tADDQ CX, br_bits_read // bits_read += n\n-\n-#ifdef GOAMD64_v3\n-\tSHRXQ peek_bits, br_value, AX // AX = (value >> peek_bits) & mask\n-\n-#else\n-\t// val1 := br0.peekTopBits(peekBits)\n-\tMOVQ peek_bits, CX\n-\tMOVQ br_value, AX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-#endif\n-\n-\t// v1 := table[val1&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v1\n-\n-\t// br0.advance(uint8(v1.entry))\n-\tMOVB AH, BH // BH = uint8(v1.entry >> 8)\n-\n-#ifdef GOAMD64_v3\n-\tMOVBQZX AL, CX\n-\tSHLXQ   AX, br_value, br_value // value <<= n\n-\n-#else\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value // value <<= n\n-\n-#endif\n-\n-\tADDQ CX, br_bits_read // bits_read += n\n-\n-\t// these two writes get coalesced\n-\t// buf[stream][off] = uint8(v0.entry >> 8)\n-\t// buf[stream][off+1] = uint8(v1.entry >> 8)\n-\tMOVW BX, 0(buffer)(off*1)\n-\n-\t// update the bitrader reader structure\n-\tMOVB br_bits_read, bitReaderShifted_bitsRead(br0)\n-\tMOVQ br_value, bitReaderShifted_value(br0)\n-\tMOVQ br_offset, bitReaderShifted_off(br0)\n-\n-\t// const stream = 1\n-\t// br1.fillFast()\n-\tMOVBQZX bitReaderShifted_bitsRead(br1), br_bits_read\n-\tMOVQ    bitReaderShifted_value(br1), br_value\n-\tMOVQ    bitReaderShifted_off(br1), br_offset\n-\n-\t// We must have at least 2 * max tablelog left\n-\tCMPQ br_bits_read, $64-22\n-\tJBE  skip_fill1\n-\n-\tSUBQ $32, br_bits_read // b.bitsRead -= 32\n-\tSUBQ $4, br_offset     // b.off -= 4\n-\n-\t// v := b.in[b.off-4 : b.off]\n-\t// v = v[:4]\n-\t// low := (uint32(v[0])) | (uint32(v[1]) << 8) | (uint32(v[2]) << 16) | (uint32(v[3]) << 24)\n-\tMOVQ bitReaderShifted_in(br1), AX\n-\n-\t// b.value |= uint64(low) << (b.bitsRead & 63)\n-#ifdef GOAMD64_v3\n-\tSHLXQ br_bits_read, 0(br_offset)(AX*1), AX // AX = uint32(b.in[b.off:b.off+4]) << (b.bitsRead & 63)\n-\n-#else\n-\tMOVL 0(br_offset)(AX*1), AX // AX = uint32(b.in[b.off:b.off+4])\n-\tMOVQ br_bits_read, CX\n-\tSHLQ CL, AX\n-\n-#endif\n-\n-\tORQ AX, br_value\n-\n-\t// exhausted = exhausted || (br1.off < 4)\n-\tCMPQ  br_offset, $4\n-\tSETLT DL\n-\tORB   DL, DH\n-\n-\t// }\n-skip_fill1:\n-\n-\t// val0 := br1.peekTopBits(peekBits)\n-#ifdef GOAMD64_v3\n-\tSHRXQ peek_bits, br_value, AX // AX = (value >> peek_bits) & mask\n-\n-#else\n-\tMOVQ br_value, AX\n-\tMOVQ peek_bits, CX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-#endif\n-\n-\t// v0 := table[val0&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v0\n-\n-\t// br1.advance(uint8(v0.entry))\n-\tMOVB AH, BL // BL = uint8(v0.entry >> 8)\n-\n-#ifdef GOAMD64_v3\n-\tMOVBQZX AL, CX\n-\tSHLXQ   AX, br_value, br_value // value <<= n\n-\n-#else\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value // value <<= n\n-\n-#endif\n-\n-\tADDQ CX, br_bits_read // bits_read += n\n-\n-#ifdef GOAMD64_v3\n-\tSHRXQ peek_bits, br_value, AX // AX = (value >> peek_bits) & mask\n-\n-#else\n-\t// val1 := br1.peekTopBits(peekBits)\n-\tMOVQ peek_bits, CX\n-\tMOVQ br_value, AX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-#endif\n-\n-\t// v1 := table[val1&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v1\n-\n-\t// br1.advance(uint8(v1.entry))\n-\tMOVB AH, BH // BH = uint8(v1.entry >> 8)\n-\n-#ifdef GOAMD64_v3\n-\tMOVBQZX AL, CX\n-\tSHLXQ   AX, br_value, br_value // value <<= n\n-\n-#else\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value // value <<= n\n-\n-#endif\n-\n-\tADDQ CX, br_bits_read // bits_read += n\n-\n-\t// these two writes get coalesced\n-\t// buf[stream][off] = uint8(v0.entry >> 8)\n-\t// buf[stream][off+1] = uint8(v1.entry >> 8)\n-\tMOVW BX, 256(buffer)(off*1)\n-\n-\t// update the bitrader reader structure\n-\tMOVB br_bits_read, bitReaderShifted_bitsRead(br1)\n-\tMOVQ br_value, bitReaderShifted_value(br1)\n-\tMOVQ br_offset, bitReaderShifted_off(br1)\n-\n-\t// const stream = 2\n-\t// br2.fillFast()\n-\tMOVBQZX bitReaderShifted_bitsRead(br2), br_bits_read\n-\tMOVQ    bitReaderShifted_value(br2), br_value\n-\tMOVQ    bitReaderShifted_off(br2), br_offset\n-\n-\t// We must have at least 2 * max tablelog left\n-\tCMPQ br_bits_read, $64-22\n-\tJBE  skip_fill2\n-\n-\tSUBQ $32, br_bits_read // b.bitsRead -= 32\n-\tSUBQ $4, br_offset     // b.off -= 4\n-\n-\t// v := b.in[b.off-4 : b.off]\n-\t// v = v[:4]\n-\t// low := (uint32(v[0])) | (uint32(v[1]) << 8) | (uint32(v[2]) << 16) | (uint32(v[3]) << 24)\n-\tMOVQ bitReaderShifted_in(br2), AX\n-\n-\t// b.value |= uint64(low) << (b.bitsRead & 63)\n-#ifdef GOAMD64_v3\n-\tSHLXQ br_bits_read, 0(br_offset)(AX*1), AX // AX = uint32(b.in[b.off:b.off+4]) << (b.bitsRead & 63)\n-\n-#else\n-\tMOVL 0(br_offset)(AX*1), AX // AX = uint32(b.in[b.off:b.off+4])\n-\tMOVQ br_bits_read, CX\n-\tSHLQ CL, AX\n-\n-#endif\n-\n-\tORQ AX, br_value\n-\n-\t// exhausted = exhausted || (br2.off < 4)\n-\tCMPQ  br_offset, $4\n-\tSETLT DL\n-\tORB   DL, DH\n-\n-\t// }\n-skip_fill2:\n-\n-\t// val0 := br2.peekTopBits(peekBits)\n-#ifdef GOAMD64_v3\n-\tSHRXQ peek_bits, br_value, AX // AX = (value >> peek_bits) & mask\n-\n-#else\n-\tMOVQ br_value, AX\n-\tMOVQ peek_bits, CX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-#endif\n-\n-\t// v0 := table[val0&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v0\n-\n-\t// br2.advance(uint8(v0.entry))\n-\tMOVB AH, BL // BL = uint8(v0.entry >> 8)\n-\n-#ifdef GOAMD64_v3\n-\tMOVBQZX AL, CX\n-\tSHLXQ   AX, br_value, br_value // value <<= n\n-\n-#else\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value // value <<= n\n-\n-#endif\n-\n-\tADDQ CX, br_bits_read // bits_read += n\n-\n-#ifdef GOAMD64_v3\n-\tSHRXQ peek_bits, br_value, AX // AX = (value >> peek_bits) & mask\n-\n-#else\n-\t// val1 := br2.peekTopBits(peekBits)\n-\tMOVQ peek_bits, CX\n-\tMOVQ br_value, AX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-#endif\n-\n-\t// v1 := table[val1&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v1\n-\n-\t// br2.advance(uint8(v1.entry))\n-\tMOVB AH, BH // BH = uint8(v1.entry >> 8)\n-\n-#ifdef GOAMD64_v3\n-\tMOVBQZX AL, CX\n-\tSHLXQ   AX, br_value, br_value // value <<= n\n-\n-#else\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value // value <<= n\n-\n-#endif\n-\n-\tADDQ CX, br_bits_read // bits_read += n\n-\n-\t// these two writes get coalesced\n-\t// buf[stream][off] = uint8(v0.entry >> 8)\n-\t// buf[stream][off+1] = uint8(v1.entry >> 8)\n-\tMOVW BX, 512(buffer)(off*1)\n-\n-\t// update the bitrader reader structure\n-\tMOVB br_bits_read, bitReaderShifted_bitsRead(br2)\n-\tMOVQ br_value, bitReaderShifted_value(br2)\n-\tMOVQ br_offset, bitReaderShifted_off(br2)\n-\n-\t// const stream = 3\n-\t// br3.fillFast()\n-\tMOVBQZX bitReaderShifted_bitsRead(br3), br_bits_read\n-\tMOVQ    bitReaderShifted_value(br3), br_value\n-\tMOVQ    bitReaderShifted_off(br3), br_offset\n-\n-\t// We must have at least 2 * max tablelog left\n-\tCMPQ br_bits_read, $64-22\n-\tJBE  skip_fill3\n-\n-\tSUBQ $32, br_bits_read // b.bitsRead -= 32\n-\tSUBQ $4, br_offset     // b.off -= 4\n-\n-\t// v := b.in[b.off-4 : b.off]\n-\t// v = v[:4]\n-\t// low := (uint32(v[0])) | (uint32(v[1]) << 8) | (uint32(v[2]) << 16) | (uint32(v[3]) << 24)\n-\tMOVQ bitReaderShifted_in(br3), AX\n-\n-\t// b.value |= uint64(low) << (b.bitsRead & 63)\n-#ifdef GOAMD64_v3\n-\tSHLXQ br_bits_read, 0(br_offset)(AX*1), AX // AX = uint32(b.in[b.off:b.off+4]) << (b.bitsRead & 63)\n-\n-#else\n-\tMOVL 0(br_offset)(AX*1), AX // AX = uint32(b.in[b.off:b.off+4])\n-\tMOVQ br_bits_read, CX\n-\tSHLQ CL, AX\n-\n-#endif\n-\n-\tORQ AX, br_value\n-\n-\t// exhausted = exhausted || (br3.off < 4)\n-\tCMPQ  br_offset, $4\n-\tSETLT DL\n-\tORB   DL, DH\n-\n-\t// }\n-skip_fill3:\n-\n-\t// val0 := br3.peekTopBits(peekBits)\n-#ifdef GOAMD64_v3\n-\tSHRXQ peek_bits, br_value, AX // AX = (value >> peek_bits) & mask\n-\n-#else\n-\tMOVQ br_value, AX\n-\tMOVQ peek_bits, CX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-#endif\n-\n-\t// v0 := table[val0&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v0\n-\n-\t// br3.advance(uint8(v0.entry))\n-\tMOVB AH, BL // BL = uint8(v0.entry >> 8)\n-\n-#ifdef GOAMD64_v3\n-\tMOVBQZX AL, CX\n-\tSHLXQ   AX, br_value, br_value // value <<= n\n-\n-#else\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value // value <<= n\n-\n-#endif\n-\n-\tADDQ CX, br_bits_read // bits_read += n\n-\n-#ifdef GOAMD64_v3\n-\tSHRXQ peek_bits, br_value, AX // AX = (value >> peek_bits) & mask\n-\n-#else\n-\t// val1 := br3.peekTopBits(peekBits)\n-\tMOVQ peek_bits, CX\n-\tMOVQ br_value, AX\n-\tSHRQ CL, AX        // AX = (value >> peek_bits) & mask\n-\n-#endif\n-\n-\t// v1 := table[val1&mask]\n-\tMOVW 0(table)(AX*2), AX // AX - v1\n-\n-\t// br3.advance(uint8(v1.entry))\n-\tMOVB AH, BH // BH = uint8(v1.entry >> 8)\n-\n-#ifdef GOAMD64_v3\n-\tMOVBQZX AL, CX\n-\tSHLXQ   AX, br_value, br_value // value <<= n\n-\n-#else\n-\tMOVBQZX AL, CX\n-\tSHLQ    CL, br_value // value <<= n\n-\n-#endif\n-\n-\tADDQ CX, br_bits_read // bits_read += n\n-\n-\t// these two writes get coalesced\n-\t// buf[stream][off] = uint8(v0.entry >> 8)\n-\t// buf[stream][off+1] = uint8(v1.entry >> 8)\n-\tMOVW BX, 768(buffer)(off*1)\n-\n-\t// update the bitrader reader structure\n-\tMOVB br_bits_read, bitReaderShifted_bitsRead(br3)\n-\tMOVQ br_value, bitReaderShifted_value(br3)\n-\tMOVQ br_offset, bitReaderShifted_off(br3)\n-\n-\tADDQ $2, off // off += 2\n-\n-\tTESTB DH, DH // any br[i].ofs < 4?\n-\tJNZ   end\n-\n-\tCMPQ off, $bufoff\n-\tJL   main_loop\n-\n-end:\n-\tMOVQ 0(SP), BP\n-\n-\tMOVB off, ret+56(FP)\n-\tRET\n-\n-#undef off\n-#undef buffer\n-#undef table\n-\n-#undef br_bits_read\n-#undef br_value\n-#undef br_offset\n-#undef peek_bits\n-#undef exhausted\n-\n-#undef br0\n-#undef br1\n-#undef br2\n-#undef br3"
    },
    {
      "sha": "330d86ae155ad9ec9f602d0523818ec6b6942782",
      "filename": "backend/vendor/github.com/klauspost/compress/huff0/decompress_amd64.s.in",
      "status": "removed",
      "additions": 0,
      "deletions": 195,
      "changes": 195,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_amd64.s.in",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_amd64.s.in",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_amd64.s.in?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,195 +0,0 @@\n-// +build !appengine\n-// +build gc\n-// +build !noasm\n-\n-#include \"textflag.h\"\n-#include \"funcdata.h\"\n-#include \"go_asm.h\"\n-\n-#ifdef GOAMD64_v4\n-#ifndef GOAMD64_v3\n-#define GOAMD64_v3\n-#endif\n-#endif\n-\n-#define bufoff      256     // see decompress.go, we're using [4][256]byte table\n-\n-//func decompress4x_main_loop_x86(pbr0, pbr1, pbr2, pbr3 *bitReaderShifted,\n-//\tpeekBits uint8, buf *byte, tbl *dEntrySingle) (int, bool)\n-TEXT ·decompress4x_main_loop_x86(SB), NOSPLIT, $8\n-#define off             R8\n-#define buffer          DI\n-#define table           SI\n-\n-#define br_bits_read    R9\n-#define br_value        R10\n-#define br_offset       R11\n-#define peek_bits       R12\n-#define exhausted       DX\n-\n-#define br0             R13\n-#define br1             R14\n-#define br2             R15\n-#define br3             BP\n-\n-    MOVQ    BP, 0(SP)\n-\n-    XORQ    exhausted, exhausted    // exhausted = false\n-    XORQ    off, off                // off = 0\n-\n-    MOVBQZX peekBits+32(FP), peek_bits\n-    MOVQ    buf+40(FP), buffer\n-    MOVQ    tbl+48(FP), table\n-\n-    MOVQ    pbr0+0(FP), br0\n-    MOVQ    pbr1+8(FP), br1\n-    MOVQ    pbr2+16(FP), br2\n-    MOVQ    pbr3+24(FP), br3\n-\n-main_loop:\n-{{ define \"decode_2_values_x86\" }}\n-    // const stream = {{ var \"id\" }}\n-    // br{{ var \"id\"}}.fillFast()\n-    MOVBQZX bitReaderShifted_bitsRead(br{{ var \"id\" }}), br_bits_read\n-    MOVQ    bitReaderShifted_value(br{{ var \"id\" }}), br_value\n-    MOVQ    bitReaderShifted_off(br{{ var \"id\" }}), br_offset\n-\n-    // We must have at least 2 * max tablelog left\n-    CMPQ    br_bits_read, $64-22\n-    JBE     skip_fill{{ var \"id\" }}\n-\n-    SUBQ    $32, br_bits_read       // b.bitsRead -= 32\n-    SUBQ    $4, br_offset           // b.off -= 4\n-\n-\t// v := b.in[b.off-4 : b.off]\n-\t// v = v[:4]\n-\t// low := (uint32(v[0])) | (uint32(v[1]) << 8) | (uint32(v[2]) << 16) | (uint32(v[3]) << 24)\n-    MOVQ    bitReaderShifted_in(br{{ var \"id\" }}), AX\n-\n-\t// b.value |= uint64(low) << (b.bitsRead & 63)\n-#ifdef GOAMD64_v3\n-    SHLXQ   br_bits_read, 0(br_offset)(AX*1), AX // AX = uint32(b.in[b.off:b.off+4]) << (b.bitsRead & 63)\n-#else\n-    MOVL    0(br_offset)(AX*1), AX  // AX = uint32(b.in[b.off:b.off+4])\n-    MOVQ    br_bits_read, CX\n-    SHLQ    CL, AX\n-#endif\n-\n-    ORQ     AX, br_value\n-\n-    // exhausted = exhausted || (br{{ var \"id\"}}.off < 4)\n-    CMPQ    br_offset, $4\n-    SETLT   DL\n-    ORB     DL, DH\n-    // }\n-skip_fill{{ var \"id\" }}:\n-\n-    // val0 := br{{ var \"id\"}}.peekTopBits(peekBits)\n-#ifdef GOAMD64_v3\n-    SHRXQ   peek_bits, br_value, AX // AX = (value >> peek_bits) & mask\n-#else\n-    MOVQ    br_value, AX\n-    MOVQ    peek_bits, CX\n-    SHRQ    CL, AX                  // AX = (value >> peek_bits) & mask\n-#endif\n-\n-    // v0 := table[val0&mask]\n-    MOVW    0(table)(AX*2), AX      // AX - v0\n-\n-    // br{{ var \"id\"}}.advance(uint8(v0.entry))\n-    MOVB    AH, BL                  // BL = uint8(v0.entry >> 8)\n-\n-#ifdef GOAMD64_v3\n-    MOVBQZX AL, CX\n-    SHLXQ   AX, br_value, br_value // value <<= n\n-#else\n-    MOVBQZX AL, CX\n-    SHLQ    CL, br_value            // value <<= n\n-#endif\n-\n-    ADDQ    CX, br_bits_read        // bits_read += n\n-\n-\n-#ifdef GOAMD64_v3\n-    SHRXQ    peek_bits, br_value, AX  // AX = (value >> peek_bits) & mask\n-#else\n-    // val1 := br{{ var \"id\"}}.peekTopBits(peekBits)\n-    MOVQ    peek_bits, CX\n-    MOVQ    br_value, AX\n-    SHRQ    CL, AX                  // AX = (value >> peek_bits) & mask\n-#endif\n-\n-    // v1 := table[val1&mask]\n-    MOVW    0(table)(AX*2), AX      // AX - v1\n-\n-    // br{{ var \"id\"}}.advance(uint8(v1.entry))\n-    MOVB    AH, BH                  // BH = uint8(v1.entry >> 8)\n-\n-#ifdef GOAMD64_v3\n-    MOVBQZX AL, CX\n-    SHLXQ   AX, br_value, br_value // value <<= n\n-#else\n-    MOVBQZX AL, CX\n-    SHLQ    CL, br_value            // value <<= n\n-#endif\n-\n-    ADDQ    CX, br_bits_read        // bits_read += n\n-\n-\n-    // these two writes get coalesced\n-    // buf[stream][off] = uint8(v0.entry >> 8)\n-    // buf[stream][off+1] = uint8(v1.entry >> 8)\n-    MOVW    BX, {{ var \"bufofs\" }}(buffer)(off*1)\n-\n-    // update the bitrader reader structure\n-    MOVB    br_bits_read, bitReaderShifted_bitsRead(br{{ var \"id\" }})\n-    MOVQ    br_value, bitReaderShifted_value(br{{ var \"id\" }})\n-    MOVQ    br_offset, bitReaderShifted_off(br{{ var \"id\" }})\n-{{ end }}\n-\n-    {{ set \"id\" \"0\" }}\n-    {{ set \"ofs\" \"0\" }}\n-    {{ set \"bufofs\" \"0\" }} {{/* id * bufoff */}}\n-    {{ template \"decode_2_values_x86\" . }}\n-\n-    {{ set \"id\" \"1\" }}\n-    {{ set \"ofs\" \"8\" }}\n-    {{ set \"bufofs\" \"256\" }}\n-    {{ template \"decode_2_values_x86\" . }}\n-\n-    {{ set \"id\" \"2\" }}\n-    {{ set \"ofs\" \"16\" }}\n-    {{ set \"bufofs\" \"512\" }}\n-    {{ template \"decode_2_values_x86\" . }}\n-\n-    {{ set \"id\" \"3\" }}\n-    {{ set \"ofs\" \"24\" }}\n-    {{ set \"bufofs\" \"768\" }}\n-    {{ template \"decode_2_values_x86\" . }}\n-\n-    ADDQ    $2, off     // off += 2\n-\n-    TESTB   DH, DH      // any br[i].ofs < 4?\n-    JNZ     end\n-\n-    CMPQ    off, $bufoff\n-    JL      main_loop\n-end:\n-    MOVQ    0(SP), BP\n-\n-    MOVB    off, ret+56(FP)\n-    RET\n-#undef  off\n-#undef  buffer\n-#undef  table\n-\n-#undef  br_bits_read\n-#undef  br_value\n-#undef  br_offset\n-#undef  peek_bits\n-#undef  exhausted\n-\n-#undef  br0\n-#undef  br1\n-#undef  br2\n-#undef  br3"
    },
    {
      "sha": "126b4d68a94f199edafa5f8221cf8f1b3710ec0a",
      "filename": "backend/vendor/github.com/klauspost/compress/huff0/decompress_generic.go",
      "status": "removed",
      "additions": 0,
      "deletions": 193,
      "changes": 193,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_generic.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_generic.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fhuff0%2Fdecompress_generic.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,193 +0,0 @@\n-//go:build !amd64 || appengine || !gc || noasm\n-// +build !amd64 appengine !gc noasm\n-\n-// This file contains a generic implementation of Decoder.Decompress4X.\n-package huff0\n-\n-import (\n-\t\"errors\"\n-\t\"fmt\"\n-)\n-\n-// Decompress4X will decompress a 4X encoded stream.\n-// The length of the supplied input must match the end of a block exactly.\n-// The *capacity* of the dst slice must match the destination size of\n-// the uncompressed data exactly.\n-func (d *Decoder) Decompress4X(dst, src []byte) ([]byte, error) {\n-\tif len(d.dt.single) == 0 {\n-\t\treturn nil, errors.New(\"no table loaded\")\n-\t}\n-\tif len(src) < 6+(4*1) {\n-\t\treturn nil, errors.New(\"input too small\")\n-\t}\n-\tif use8BitTables && d.actualTableLog <= 8 {\n-\t\treturn d.decompress4X8bit(dst, src)\n-\t}\n-\n-\tvar br [4]bitReaderShifted\n-\t// Decode \"jump table\"\n-\tstart := 6\n-\tfor i := 0; i < 3; i++ {\n-\t\tlength := int(src[i*2]) | (int(src[i*2+1]) << 8)\n-\t\tif start+length >= len(src) {\n-\t\t\treturn nil, errors.New(\"truncated input (or invalid offset)\")\n-\t\t}\n-\t\terr := br[i].init(src[start : start+length])\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n-\t\tstart += length\n-\t}\n-\terr := br[3].init(src[start:])\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\n-\t// destination, offset to match first output\n-\tdstSize := cap(dst)\n-\tdst = dst[:dstSize]\n-\tout := dst\n-\tdstEvery := (dstSize + 3) / 4\n-\n-\tconst tlSize = 1 << tableLogMax\n-\tconst tlMask = tlSize - 1\n-\tsingle := d.dt.single[:tlSize]\n-\n-\t// Use temp table to avoid bound checks/append penalty.\n-\tbuf := d.buffer()\n-\tvar off uint8\n-\tvar decoded int\n-\n-\t// Decode 2 values from each decoder/loop.\n-\tconst bufoff = 256\n-\tfor {\n-\t\tif br[0].off < 4 || br[1].off < 4 || br[2].off < 4 || br[3].off < 4 {\n-\t\t\tbreak\n-\t\t}\n-\n-\t\t{\n-\t\t\tconst stream = 0\n-\t\t\tconst stream2 = 1\n-\t\t\tbr[stream].fillFast()\n-\t\t\tbr[stream2].fillFast()\n-\n-\t\t\tval := br[stream].peekBitsFast(d.actualTableLog)\n-\t\t\tval2 := br[stream2].peekBitsFast(d.actualTableLog)\n-\t\t\tv := single[val&tlMask]\n-\t\t\tv2 := single[val2&tlMask]\n-\t\t\tbr[stream].advance(uint8(v.entry))\n-\t\t\tbr[stream2].advance(uint8(v2.entry))\n-\t\t\tbuf[stream][off] = uint8(v.entry >> 8)\n-\t\t\tbuf[stream2][off] = uint8(v2.entry >> 8)\n-\n-\t\t\tval = br[stream].peekBitsFast(d.actualTableLog)\n-\t\t\tval2 = br[stream2].peekBitsFast(d.actualTableLog)\n-\t\t\tv = single[val&tlMask]\n-\t\t\tv2 = single[val2&tlMask]\n-\t\t\tbr[stream].advance(uint8(v.entry))\n-\t\t\tbr[stream2].advance(uint8(v2.entry))\n-\t\t\tbuf[stream][off+1] = uint8(v.entry >> 8)\n-\t\t\tbuf[stream2][off+1] = uint8(v2.entry >> 8)\n-\t\t}\n-\n-\t\t{\n-\t\t\tconst stream = 2\n-\t\t\tconst stream2 = 3\n-\t\t\tbr[stream].fillFast()\n-\t\t\tbr[stream2].fillFast()\n-\n-\t\t\tval := br[stream].peekBitsFast(d.actualTableLog)\n-\t\t\tval2 := br[stream2].peekBitsFast(d.actualTableLog)\n-\t\t\tv := single[val&tlMask]\n-\t\t\tv2 := single[val2&tlMask]\n-\t\t\tbr[stream].advance(uint8(v.entry))\n-\t\t\tbr[stream2].advance(uint8(v2.entry))\n-\t\t\tbuf[stream][off] = uint8(v.entry >> 8)\n-\t\t\tbuf[stream2][off] = uint8(v2.entry >> 8)\n-\n-\t\t\tval = br[stream].peekBitsFast(d.actualTableLog)\n-\t\t\tval2 = br[stream2].peekBitsFast(d.actualTableLog)\n-\t\t\tv = single[val&tlMask]\n-\t\t\tv2 = single[val2&tlMask]\n-\t\t\tbr[stream].advance(uint8(v.entry))\n-\t\t\tbr[stream2].advance(uint8(v2.entry))\n-\t\t\tbuf[stream][off+1] = uint8(v.entry >> 8)\n-\t\t\tbuf[stream2][off+1] = uint8(v2.entry >> 8)\n-\t\t}\n-\n-\t\toff += 2\n-\n-\t\tif off == 0 {\n-\t\t\tif bufoff > dstEvery {\n-\t\t\t\td.bufs.Put(buf)\n-\t\t\t\treturn nil, errors.New(\"corruption detected: stream overrun 1\")\n-\t\t\t}\n-\t\t\tcopy(out, buf[0][:])\n-\t\t\tcopy(out[dstEvery:], buf[1][:])\n-\t\t\tcopy(out[dstEvery*2:], buf[2][:])\n-\t\t\tcopy(out[dstEvery*3:], buf[3][:])\n-\t\t\tout = out[bufoff:]\n-\t\t\tdecoded += bufoff * 4\n-\t\t\t// There must at least be 3 buffers left.\n-\t\t\tif len(out) < dstEvery*3 {\n-\t\t\t\td.bufs.Put(buf)\n-\t\t\t\treturn nil, errors.New(\"corruption detected: stream overrun 2\")\n-\t\t\t}\n-\t\t}\n-\t}\n-\tif off > 0 {\n-\t\tioff := int(off)\n-\t\tif len(out) < dstEvery*3+ioff {\n-\t\t\td.bufs.Put(buf)\n-\t\t\treturn nil, errors.New(\"corruption detected: stream overrun 3\")\n-\t\t}\n-\t\tcopy(out, buf[0][:off])\n-\t\tcopy(out[dstEvery:], buf[1][:off])\n-\t\tcopy(out[dstEvery*2:], buf[2][:off])\n-\t\tcopy(out[dstEvery*3:], buf[3][:off])\n-\t\tdecoded += int(off) * 4\n-\t\tout = out[off:]\n-\t}\n-\n-\t// Decode remaining.\n-\tremainBytes := dstEvery - (decoded / 4)\n-\tfor i := range br {\n-\t\toffset := dstEvery * i\n-\t\tendsAt := offset + remainBytes\n-\t\tif endsAt > len(out) {\n-\t\t\tendsAt = len(out)\n-\t\t}\n-\t\tbr := &br[i]\n-\t\tbitsLeft := br.remaining()\n-\t\tfor bitsLeft > 0 {\n-\t\t\tbr.fill()\n-\t\t\tif offset >= endsAt {\n-\t\t\t\td.bufs.Put(buf)\n-\t\t\t\treturn nil, errors.New(\"corruption detected: stream overrun 4\")\n-\t\t\t}\n-\n-\t\t\t// Read value and increment offset.\n-\t\t\tval := br.peekBitsFast(d.actualTableLog)\n-\t\t\tv := single[val&tlMask].entry\n-\t\t\tnBits := uint8(v)\n-\t\t\tbr.advance(nBits)\n-\t\t\tbitsLeft -= uint(nBits)\n-\t\t\tout[offset] = uint8(v >> 8)\n-\t\t\toffset++\n-\t\t}\n-\t\tif offset != endsAt {\n-\t\t\td.bufs.Put(buf)\n-\t\t\treturn nil, fmt.Errorf(\"corruption detected: short output block %d, end %d != %d\", i, offset, endsAt)\n-\t\t}\n-\t\tdecoded += offset - dstEvery*i\n-\t\terr = br.close()\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n-\t}\n-\td.bufs.Put(buf)\n-\tif dstSize != decoded {\n-\t\treturn nil, errors.New(\"corruption detected: short output block\")\n-\t}\n-\treturn dst, nil\n-}"
    },
    {
      "sha": "3954c51219b2b63cc8d94ce516d2fbd6cf638bc6",
      "filename": "backend/vendor/github.com/klauspost/compress/internal/cpuinfo/cpuinfo.go",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Finternal%2Fcpuinfo%2Fcpuinfo.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Finternal%2Fcpuinfo%2Fcpuinfo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Finternal%2Fcpuinfo%2Fcpuinfo.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,34 +0,0 @@\n-// Package cpuinfo gives runtime info about the current CPU.\n-//\n-// This is a very limited module meant for use internally\n-// in this project. For more versatile solution check\n-// https://github.com/klauspost/cpuid.\n-package cpuinfo\n-\n-// HasBMI1 checks whether an x86 CPU supports the BMI1 extension.\n-func HasBMI1() bool {\n-\treturn hasBMI1\n-}\n-\n-// HasBMI2 checks whether an x86 CPU supports the BMI2 extension.\n-func HasBMI2() bool {\n-\treturn hasBMI2\n-}\n-\n-// DisableBMI2 will disable BMI2, for testing purposes.\n-// Call returned function to restore previous state.\n-func DisableBMI2() func() {\n-\told := hasBMI2\n-\thasBMI2 = false\n-\treturn func() {\n-\t\thasBMI2 = old\n-\t}\n-}\n-\n-// HasBMI checks whether an x86 CPU supports both BMI1 and BMI2 extensions.\n-func HasBMI() bool {\n-\treturn HasBMI1() && HasBMI2()\n-}\n-\n-var hasBMI1 bool\n-var hasBMI2 bool"
    },
    {
      "sha": "e802579c4f967feb5a0072f19f2835dbfac6fc0f",
      "filename": "backend/vendor/github.com/klauspost/compress/internal/cpuinfo/cpuinfo_amd64.go",
      "status": "removed",
      "additions": 0,
      "deletions": 11,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Finternal%2Fcpuinfo%2Fcpuinfo_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Finternal%2Fcpuinfo%2Fcpuinfo_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Finternal%2Fcpuinfo%2Fcpuinfo_amd64.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,11 +0,0 @@\n-//go:build amd64 && !appengine && !noasm && gc\n-// +build amd64,!appengine,!noasm,gc\n-\n-package cpuinfo\n-\n-// go:noescape\n-func x86extensions() (bmi1, bmi2 bool)\n-\n-func init() {\n-\thasBMI1, hasBMI2 = x86extensions()\n-}"
    },
    {
      "sha": "4465fbe9e905b9d623acab011a2a52285083ec56",
      "filename": "backend/vendor/github.com/klauspost/compress/internal/cpuinfo/cpuinfo_amd64.s",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Finternal%2Fcpuinfo%2Fcpuinfo_amd64.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Finternal%2Fcpuinfo%2Fcpuinfo_amd64.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Finternal%2Fcpuinfo%2Fcpuinfo_amd64.s?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,36 +0,0 @@\n-// +build !appengine\n-// +build gc\n-// +build !noasm\n-\n-#include \"textflag.h\"\n-#include \"funcdata.h\"\n-#include \"go_asm.h\"\n-\n-TEXT ·x86extensions(SB), NOSPLIT, $0\n-\t// 1. determine max EAX value\n-\tXORQ AX, AX\n-\tCPUID\n-\n-\tCMPQ AX, $7\n-\tJB   unsupported\n-\n-\t// 2. EAX = 7, ECX = 0 --- see Table 3-8 \"Information Returned by CPUID Instruction\"\n-\tMOVQ $7, AX\n-\tMOVQ $0, CX\n-\tCPUID\n-\n-\tBTQ   $3, BX // bit 3 = BMI1\n-\tSETCS AL\n-\n-\tBTQ   $8, BX // bit 8 = BMI2\n-\tSETCS AH\n-\n-\tMOVB AL, bmi1+0(FP)\n-\tMOVB AH, bmi2+1(FP)\n-\tRET\n-\n-unsupported:\n-\tXORQ AX, AX\n-\tMOVB AL, bmi1+0(FP)\n-\tMOVB AL, bmi2+1(FP)\n-\tRET"
    },
    {
      "sha": "c876c591acce0e40079f8b7641ab6ec0fbfed56c",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/README.md",
      "status": "modified",
      "additions": 73,
      "deletions": 57,
      "changes": 130,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2FREADME.md?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -153,10 +153,10 @@ http://sun.aei.polsl.pl/~sdeor/corpus/silesia.zip\n \n This package:\n file    out     level   insize      outsize     millis  mb/s\n-silesia.tar zskp    1   211947520   73821326    634     318.47\n-silesia.tar zskp    2   211947520   67655404    1508    133.96\n-silesia.tar zskp    3   211947520   64746933    3000    67.37\n-silesia.tar zskp    4   211947520   60073508    16926   11.94\n+silesia.tar zskp    1   211947520   73101992    643     313.87\n+silesia.tar zskp    2   211947520   67504318    969     208.38\n+silesia.tar zskp    3   211947520   64595893    2007    100.68\n+silesia.tar zskp    4   211947520   60995370    8825    22.90\n \n cgo zstd:\n silesia.tar zstd    1   211947520   73605392    543     371.56\n@@ -165,94 +165,94 @@ silesia.tar zstd    6   211947520   62916450    1913    105.66\n silesia.tar zstd    9   211947520   60212393    5063    39.92\n \n gzip, stdlib/this package:\n-silesia.tar gzstd   1   211947520   80007735    1498    134.87\n-silesia.tar gzkp    1   211947520   80088272    1009    200.31\n+silesia.tar gzstd   1   211947520   80007735    1654    122.21\n+silesia.tar gzkp    1   211947520   80136201    1152    175.45\n \n GOB stream of binary data. Highly compressible.\n https://files.klauspost.com/compress/gob-stream.7z\n \n file        out     level   insize  outsize     millis  mb/s\n-gob-stream  zskp    1   1911399616  233948096   3230    564.34\n-gob-stream  zskp    2   1911399616  203997694   4997    364.73\n-gob-stream  zskp    3   1911399616  173526523   13435   135.68\n-gob-stream  zskp    4   1911399616  162195235   47559   38.33\n+gob-stream  zskp    1   1911399616  235022249   3088    590.30\n+gob-stream  zskp    2   1911399616  205669791   3786    481.34\n+gob-stream  zskp    3   1911399616  175034659   9636    189.17\n+gob-stream  zskp    4   1911399616  165609838   50369   36.19\n \n gob-stream  zstd    1   1911399616  249810424   2637    691.26\n gob-stream  zstd    3   1911399616  208192146   3490    522.31\n gob-stream  zstd    6   1911399616  193632038   6687    272.56\n gob-stream  zstd    9   1911399616  177620386   16175   112.70\n \n-gob-stream  gzstd   1   1911399616  357382013   9046    201.49\n-gob-stream  gzkp    1   1911399616  359136669   4885    373.08\n+gob-stream  gzstd   1   1911399616  357382641   10251   177.82\n+gob-stream  gzkp    1   1911399616  359753026   5438    335.20\n \n The test data for the Large Text Compression Benchmark is the first\n 10^9 bytes of the English Wikipedia dump on Mar. 3, 2006.\n http://mattmahoney.net/dc/textdata.html\n \n file    out level   insize      outsize     millis  mb/s\n-enwik9  zskp    1   1000000000  343833605   3687    258.64\n-enwik9  zskp    2   1000000000  317001237   7672    124.29\n-enwik9  zskp    3   1000000000  291915823   15923   59.89\n-enwik9  zskp    4   1000000000  261710291   77697   12.27\n+enwik9  zskp    1   1000000000  343848582   3609    264.18\n+enwik9  zskp    2   1000000000  317276632   5746    165.97\n+enwik9  zskp    3   1000000000  292243069   12162   78.41\n+enwik9  zskp    4   1000000000  262183768   82837   11.51\n \n enwik9  zstd    1   1000000000  358072021   3110    306.65\n enwik9  zstd    3   1000000000  313734672   4784    199.35\n enwik9  zstd    6   1000000000  295138875   10290   92.68\n enwik9  zstd    9   1000000000  278348700   28549   33.40\n \n-enwik9  gzstd   1   1000000000  382578136   8608    110.78\n-enwik9  gzkp    1   1000000000  382781160   5628    169.45\n+enwik9  gzstd   1   1000000000  382578136   9604    99.30\n+enwik9  gzkp    1   1000000000  383825945   6544    145.73\n \n Highly compressible JSON file.\n https://files.klauspost.com/compress/github-june-2days-2019.json.zst\n \n file                        out level   insize      outsize     millis  mb/s\n-github-june-2days-2019.json zskp    1   6273951764  697439532   9789    611.17\n-github-june-2days-2019.json zskp    2   6273951764  610876538   18553   322.49\n-github-june-2days-2019.json zskp    3   6273951764  517662858   44186   135.41\n-github-june-2days-2019.json zskp    4   6273951764  464617114   165373  36.18\n+github-june-2days-2019.json zskp    1   6273951764  699045015   10620   563.40\n+github-june-2days-2019.json zskp    2   6273951764  617881763   11687   511.96\n+github-june-2days-2019.json zskp    3   6273951764  524340691   34043   175.75\n+github-june-2days-2019.json zskp    4   6273951764  470320075   170190  35.16\n \n github-june-2days-2019.json zstd    1   6273951764  766284037   8450    708.00\n github-june-2days-2019.json zstd    3   6273951764  661889476   10927   547.57\n github-june-2days-2019.json zstd    6   6273951764  642756859   22996   260.18\n github-june-2days-2019.json zstd    9   6273951764  601974523   52413   114.16\n \n-github-june-2days-2019.json gzstd   1   6273951764  1164397768  26793   223.32\n-github-june-2days-2019.json gzkp    1   6273951764  1120631856  17693   338.16\n+github-june-2days-2019.json gzstd   1   6273951764  1164400847  29948   199.79\n+github-june-2days-2019.json gzkp    1   6273951764  1125417694  21788   274.61\n \n VM Image, Linux mint with a few installed applications:\n https://files.klauspost.com/compress/rawstudio-mint14.7z\n \n file                    out level   insize      outsize     millis  mb/s\n-rawstudio-mint14.tar    zskp    1   8558382592  3718400221  18206   448.29\n-rawstudio-mint14.tar    zskp    2   8558382592  3326118337  37074   220.15\n-rawstudio-mint14.tar    zskp    3   8558382592  3163842361  87306   93.49\n-rawstudio-mint14.tar    zskp    4   8558382592  2970480650  783862  10.41\n+rawstudio-mint14.tar    zskp    1   8558382592  3667489370  20210   403.84\n+rawstudio-mint14.tar    zskp    2   8558382592  3364592300  31873   256.07\n+rawstudio-mint14.tar    zskp    3   8558382592  3158085214  77675   105.08\n+rawstudio-mint14.tar    zskp    4   8558382592  2965110639  857750  9.52\n \n rawstudio-mint14.tar    zstd    1   8558382592  3609250104  17136   476.27\n rawstudio-mint14.tar    zstd    3   8558382592  3341679997  29262   278.92\n rawstudio-mint14.tar    zstd    6   8558382592  3235846406  77904   104.77\n rawstudio-mint14.tar    zstd    9   8558382592  3160778861  140946  57.91\n \n-rawstudio-mint14.tar    gzstd   1   8558382592  3926234992  51345   158.96\n-rawstudio-mint14.tar    gzkp    1   8558382592  3960117298  36722   222.26\n+rawstudio-mint14.tar    gzstd   1   8558382592  3926257486  57722   141.40\n+rawstudio-mint14.tar    gzkp    1   8558382592  3962605659  45113   180.92\n \n CSV data:\n https://files.klauspost.com/compress/nyc-taxi-data-10M.csv.zst\n \n file                    out level   insize      outsize     millis  mb/s\n-nyc-taxi-data-10M.csv   zskp    1   3325605752  641319332   9462    335.17\n-nyc-taxi-data-10M.csv   zskp    2   3325605752  588976126   17570   180.50\n-nyc-taxi-data-10M.csv   zskp    3   3325605752  529329260   32432   97.79\n-nyc-taxi-data-10M.csv   zskp    4   3325605752  474949772   138025  22.98\n+nyc-taxi-data-10M.csv   zskp    1   3325605752  641339945   8925    355.35\n+nyc-taxi-data-10M.csv   zskp    2   3325605752  591748091   11268   281.44\n+nyc-taxi-data-10M.csv   zskp    3   3325605752  530289687   25239   125.66\n+nyc-taxi-data-10M.csv   zskp    4   3325605752  476268884   135958  23.33\n \n nyc-taxi-data-10M.csv   zstd    1   3325605752  687399637   8233    385.18\n nyc-taxi-data-10M.csv   zstd    3   3325605752  598514411   10065   315.07\n nyc-taxi-data-10M.csv   zstd    6   3325605752  570522953   20038   158.27\n nyc-taxi-data-10M.csv   zstd    9   3325605752  517554797   64565   49.12\n \n-nyc-taxi-data-10M.csv   gzstd   1   3325605752  928654908   21270   149.11\n-nyc-taxi-data-10M.csv   gzkp    1   3325605752  922273214   13929   227.68\n+nyc-taxi-data-10M.csv   gzstd   1   3325605752  928656485   23876   132.83\n+nyc-taxi-data-10M.csv   gzkp    1   3325605752  922257165   16780   189.00\n ```\n \n ## Decompressor\n@@ -386,31 +386,47 @@ In practice this means that concurrency is often limited to utilizing about 3 co\n   \n ### Benchmarks\n \n-The first two are streaming decodes and the last are smaller inputs. \n-\n-Running on AMD Ryzen 9 3950X 16-Core Processor. AMD64 assembly used.\n+These are some examples of performance compared to [datadog cgo library](https://github.com/DataDog/zstd).\n \n+The first two are streaming decodes and the last are smaller inputs. \n+ \n ```\n-BenchmarkDecoderSilesia-32    \t                   5\t 206878840 ns/op\t1024.50 MB/s\t   49808 B/op\t      43 allocs/op\n-BenchmarkDecoderEnwik9-32                          1\t1271809000 ns/op\t 786.28 MB/s\t   72048 B/op\t      52 allocs/op\n-\n-Concurrent blocks, performance:\n-\n-BenchmarkDecoder_DecodeAllParallel/kppkn.gtb.zst-32         \t   67356\t     17857 ns/op\t10321.96 MB/s\t        22.48 pct\t     102 B/op\t       0 allocs/op\n-BenchmarkDecoder_DecodeAllParallel/geo.protodata.zst-32     \t  266656\t      4421 ns/op\t26823.21 MB/s\t        11.89 pct\t      19 B/op\t       0 allocs/op\n-BenchmarkDecoder_DecodeAllParallel/plrabn12.txt.zst-32      \t   20992\t     56842 ns/op\t8477.17 MB/s\t        39.90 pct\t     754 B/op\t       0 allocs/op\n-BenchmarkDecoder_DecodeAllParallel/lcet10.txt.zst-32        \t   27456\t     43932 ns/op\t9714.01 MB/s\t        33.27 pct\t     524 B/op\t       0 allocs/op\n-BenchmarkDecoder_DecodeAllParallel/asyoulik.txt.zst-32      \t   78432\t     15047 ns/op\t8319.15 MB/s\t        40.34 pct\t      66 B/op\t       0 allocs/op\n-BenchmarkDecoder_DecodeAllParallel/alice29.txt.zst-32       \t   65800\t     18436 ns/op\t8249.63 MB/s\t        37.75 pct\t      88 B/op\t       0 allocs/op\n-BenchmarkDecoder_DecodeAllParallel/html_x_4.zst-32          \t  102993\t     11523 ns/op\t35546.09 MB/s\t         3.637 pct\t     143 B/op\t       0 allocs/op\n-BenchmarkDecoder_DecodeAllParallel/paper-100k.pdf.zst-32    \t 1000000\t      1070 ns/op\t95720.98 MB/s\t        80.53 pct\t       3 B/op\t       0 allocs/op\n-BenchmarkDecoder_DecodeAllParallel/fireworks.jpeg.zst-32    \t  749802\t      1752 ns/op\t70272.35 MB/s\t       100.0 pct\t       5 B/op\t       0 allocs/op\n-BenchmarkDecoder_DecodeAllParallel/urls.10K.zst-32          \t   22640\t     52934 ns/op\t13263.37 MB/s\t        26.25 pct\t    1014 B/op\t       0 allocs/op\n-BenchmarkDecoder_DecodeAllParallel/html.zst-32              \t  226412\t      5232 ns/op\t19572.27 MB/s\t        14.49 pct\t      20 B/op\t       0 allocs/op\n-BenchmarkDecoder_DecodeAllParallel/comp-data.bin.zst-32     \t  923041\t      1276 ns/op\t3194.71 MB/s\t        31.26 pct\t       0 B/op\t       0 allocs/op\n+BenchmarkDecoderSilesia-8                          3     385000067 ns/op     550.51 MB/s        5498 B/op          8 allocs/op\n+BenchmarkDecoderSilesiaCgo-8                       6     197666567 ns/op    1072.25 MB/s      270672 B/op          8 allocs/op\n+\n+BenchmarkDecoderEnwik9-8                           1    2027001600 ns/op     493.34 MB/s       10496 B/op         18 allocs/op\n+BenchmarkDecoderEnwik9Cgo-8                        2     979499200 ns/op    1020.93 MB/s      270672 B/op          8 allocs/op\n+\n+Concurrent performance:\n+\n+BenchmarkDecoder_DecodeAllParallel/kppkn.gtb.zst-16                28915         42469 ns/op    4340.07 MB/s         114 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallel/geo.protodata.zst-16           116505          9965 ns/op    11900.16 MB/s         16 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallel/plrabn12.txt.zst-16              8952        134272 ns/op    3588.70 MB/s         915 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallel/lcet10.txt.zst-16               11820        102538 ns/op    4161.90 MB/s         594 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallel/asyoulik.txt.zst-16             34782         34184 ns/op    3661.88 MB/s          60 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallel/alice29.txt.zst-16              27712         43447 ns/op    3500.58 MB/s          99 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallel/html_x_4.zst-16                 62826         18750 ns/op    21845.10 MB/s        104 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallel/paper-100k.pdf.zst-16          631545          1794 ns/op    57078.74 MB/s          2 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallel/fireworks.jpeg.zst-16         1690140           712 ns/op    172938.13 MB/s         1 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallel/urls.10K.zst-16                 10432        113593 ns/op    6180.73 MB/s        1143 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallel/html.zst-16                    113206         10671 ns/op    9596.27 MB/s          15 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallel/comp-data.bin.zst-16          1530615           779 ns/op    5229.49 MB/s           0 B/op          0 allocs/op\n+\n+BenchmarkDecoder_DecodeAllParallelCgo/kppkn.gtb.zst-16             65217         16192 ns/op    11383.34 MB/s         46 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallelCgo/geo.protodata.zst-16        292671          4039 ns/op    29363.19 MB/s          6 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallelCgo/plrabn12.txt.zst-16          26314         46021 ns/op    10470.43 MB/s        293 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallelCgo/lcet10.txt.zst-16            33897         34900 ns/op    12227.96 MB/s        205 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallelCgo/asyoulik.txt.zst-16         104348         11433 ns/op    10949.01 MB/s         20 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallelCgo/alice29.txt.zst-16           75949         15510 ns/op    9805.60 MB/s          32 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallelCgo/html_x_4.zst-16             173910          6756 ns/op    60624.29 MB/s         37 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallelCgo/paper-100k.pdf.zst-16       923076          1339 ns/op    76474.87 MB/s          1 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallelCgo/fireworks.jpeg.zst-16       922920          1351 ns/op    91102.57 MB/s          2 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallelCgo/urls.10K.zst-16              27649         43618 ns/op    16096.19 MB/s        407 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallelCgo/html.zst-16                 279073          4160 ns/op    24614.18 MB/s          6 B/op          0 allocs/op\n+BenchmarkDecoder_DecodeAllParallelCgo/comp-data.bin.zst-16        749938          1579 ns/op    2581.71 MB/s           0 B/op          0 allocs/op\n ```\n \n-This reflects the performance around May 2022, but this may be out of date.\n+This reflects the performance around May 2020, but this may be out of date.\n \n ## Zstd inside ZIP files\n "
    },
    {
      "sha": "607b62ee37a922411e0569ca6d172c175d6b9a68",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/blockdec.go",
      "status": "modified",
      "additions": 8,
      "deletions": 52,
      "changes": 60,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fblockdec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fblockdec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fblockdec.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -5,14 +5,9 @@\n package zstd\n \n import (\n-\t\"bytes\"\n-\t\"encoding/binary\"\n \t\"errors\"\n \t\"fmt\"\n \t\"io\"\n-\t\"io/ioutil\"\n-\t\"os\"\n-\t\"path/filepath\"\n \t\"sync\"\n \n \t\"github.com/klauspost/compress/huff0\"\n@@ -43,9 +38,6 @@ const (\n \t// maxCompressedBlockSize is the biggest allowed compressed block size (128KB)\n \tmaxCompressedBlockSize = 128 << 10\n \n-\tcompressedBlockOverAlloc    = 16\n-\tmaxCompressedBlockSizeAlloc = 128<<10 + compressedBlockOverAlloc\n-\n \t// Maximum possible block size (all Raw+Uncompressed).\n \tmaxBlockSize = (1 << 21) - 1\n \n@@ -144,7 +136,7 @@ func (b *blockDec) reset(br byteBuffer, windowSize uint64) error {\n \tb.Type = blockType((bh >> 1) & 3)\n \t// find size.\n \tcSize := int(bh >> 3)\n-\tmaxSize := maxCompressedBlockSizeAlloc\n+\tmaxSize := maxBlockSize\n \tswitch b.Type {\n \tcase blockTypeReserved:\n \t\treturn ErrReservedBlockType\n@@ -165,21 +157,16 @@ func (b *blockDec) reset(br byteBuffer, windowSize uint64) error {\n \t\t\tprintln(\"Data size on stream:\", cSize)\n \t\t}\n \t\tb.RLESize = 0\n-\t\tmaxSize = maxCompressedBlockSizeAlloc\n+\t\tmaxSize = maxCompressedBlockSize\n \t\tif windowSize < maxCompressedBlockSize && b.lowMem {\n-\t\t\tmaxSize = int(windowSize) + compressedBlockOverAlloc\n+\t\t\tmaxSize = int(windowSize)\n \t\t}\n \t\tif cSize > maxCompressedBlockSize || uint64(cSize) > b.WindowSize {\n \t\t\tif debugDecoder {\n \t\t\t\tprintf(\"compressed block too big: csize:%d block: %+v\\n\", uint64(cSize), b)\n \t\t\t}\n \t\t\treturn ErrCompressedSizeTooBig\n \t\t}\n-\t\t// Empty compressed blocks must at least be 2 bytes\n-\t\t// for Literals_Block_Type and one for Sequences_Section_Header.\n-\t\tif cSize < 2 {\n-\t\t\treturn ErrBlockTooSmall\n-\t\t}\n \tcase blockTypeRaw:\n \t\tif cSize > maxCompressedBlockSize || cSize > int(b.WindowSize) {\n \t\t\tif debugDecoder {\n@@ -198,9 +185,9 @@ func (b *blockDec) reset(br byteBuffer, windowSize uint64) error {\n \t// Read block data.\n \tif cap(b.dataStorage) < cSize {\n \t\tif b.lowMem || cSize > maxCompressedBlockSize {\n-\t\t\tb.dataStorage = make([]byte, 0, cSize+compressedBlockOverAlloc)\n+\t\t\tb.dataStorage = make([]byte, 0, cSize)\n \t\t} else {\n-\t\t\tb.dataStorage = make([]byte, 0, maxCompressedBlockSizeAlloc)\n+\t\t\tb.dataStorage = make([]byte, 0, maxCompressedBlockSize)\n \t\t}\n \t}\n \tif cap(b.dst) <= maxSize {\n@@ -494,24 +481,16 @@ func (b *blockDec) decodeCompressed(hist *history) error {\n \t\tb.dst = append(b.dst, hist.decoders.literals...)\n \t\treturn nil\n \t}\n-\tbefore := len(hist.decoders.out)\n-\terr = hist.decoders.decodeSync(hist.b[hist.ignoreBuffer:])\n+\terr = hist.decoders.decodeSync(hist)\n \tif err != nil {\n \t\treturn err\n \t}\n-\tif hist.decoders.maxSyncLen > 0 {\n-\t\thist.decoders.maxSyncLen += uint64(before)\n-\t\thist.decoders.maxSyncLen -= uint64(len(hist.decoders.out))\n-\t}\n \tb.dst = hist.decoders.out\n \thist.recentOffsets = hist.decoders.prevOffset\n \treturn nil\n }\n \n func (b *blockDec) prepareSequences(in []byte, hist *history) (err error) {\n-\tif debugDecoder {\n-\t\tprintf(\"prepareSequences: %d byte(s) input\\n\", len(in))\n-\t}\n \t// Decode Sequences\n \t// https://github.com/facebook/zstd/blob/dev/doc/zstd_compression_format.md#sequences-section\n \tif len(in) < 1 {\n@@ -520,6 +499,8 @@ func (b *blockDec) prepareSequences(in []byte, hist *history) (err error) {\n \tvar nSeqs int\n \tseqHeader := in[0]\n \tswitch {\n+\tcase seqHeader == 0:\n+\t\tin = in[1:]\n \tcase seqHeader < 128:\n \t\tnSeqs = int(seqHeader)\n \t\tin = in[1:]\n@@ -536,13 +517,6 @@ func (b *blockDec) prepareSequences(in []byte, hist *history) (err error) {\n \t\tnSeqs = 0x7f00 + int(in[1]) + (int(in[2]) << 8)\n \t\tin = in[3:]\n \t}\n-\tif nSeqs == 0 && len(in) != 0 {\n-\t\t// When no sequences, there should not be any more data...\n-\t\tif debugDecoder {\n-\t\t\tprintf(\"prepareSequences: 0 sequences, but %d byte(s) left on stream\\n\", len(in))\n-\t\t}\n-\t\treturn ErrUnexpectedBlockSize\n-\t}\n \n \tvar seqs = &hist.decoders\n \tseqs.nSeqs = nSeqs\n@@ -645,22 +619,6 @@ func (b *blockDec) prepareSequences(in []byte, hist *history) (err error) {\n \t\tprintln(\"initializing sequences:\", err)\n \t\treturn err\n \t}\n-\t// Extract blocks...\n-\tif false && hist.dict == nil {\n-\t\tfatalErr := func(err error) {\n-\t\t\tif err != nil {\n-\t\t\t\tpanic(err)\n-\t\t\t}\n-\t\t}\n-\t\tfn := fmt.Sprintf(\"n-%d-lits-%d-prev-%d-%d-%d-win-%d.blk\", hist.decoders.nSeqs, len(hist.decoders.literals), hist.recentOffsets[0], hist.recentOffsets[1], hist.recentOffsets[2], hist.windowSize)\n-\t\tvar buf bytes.Buffer\n-\t\tfatalErr(binary.Write(&buf, binary.LittleEndian, hist.decoders.litLengths.fse))\n-\t\tfatalErr(binary.Write(&buf, binary.LittleEndian, hist.decoders.matchLengths.fse))\n-\t\tfatalErr(binary.Write(&buf, binary.LittleEndian, hist.decoders.offsets.fse))\n-\t\tbuf.Write(in)\n-\t\tioutil.WriteFile(filepath.Join(\"testdata\", \"seqs\", fn), buf.Bytes(), os.ModePerm)\n-\t}\n-\n \treturn nil\n }\n \n@@ -677,9 +635,7 @@ func (b *blockDec) decodeSequences(hist *history) error {\n \t\thist.decoders.seqSize = len(hist.decoders.literals)\n \t\treturn nil\n \t}\n-\thist.decoders.windowSize = hist.windowSize\n \thist.decoders.prevOffset = hist.recentOffsets\n-\n \terr := hist.decoders.decode(b.sequence)\n \thist.recentOffsets = hist.decoders.prevOffset\n \treturn err"
    },
    {
      "sha": "a93dfaf100e4013a26ed3cd217b7e1f5e607cabf",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/decoder.go",
      "status": "modified",
      "additions": 10,
      "deletions": 13,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdecoder.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdecoder.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdecoder.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -347,20 +347,18 @@ func (d *Decoder) DecodeAll(input, dst []byte) ([]byte, error) {\n \t\t\t}\n \t\t\tframe.history.setDict(&dict)\n \t\t}\n-\t\tif frame.WindowSize > d.o.maxWindowSize {\n-\t\t\treturn dst, ErrWindowSizeExceeded\n+\n+\t\tif frame.FrameContentSize > d.o.maxDecodedSize-uint64(len(dst)) {\n+\t\t\treturn dst, ErrDecoderSizeExceeded\n \t\t}\n-\t\tif frame.FrameContentSize != fcsUnknown {\n-\t\t\tif frame.FrameContentSize > d.o.maxDecodedSize-uint64(len(dst)) {\n-\t\t\t\treturn dst, ErrDecoderSizeExceeded\n-\t\t\t}\n+\t\tif frame.FrameContentSize > 0 && frame.FrameContentSize < 1<<30 {\n+\t\t\t// Never preallocate more than 1 GB up front.\n \t\t\tif cap(dst)-len(dst) < int(frame.FrameContentSize) {\n-\t\t\t\tdst2 := make([]byte, len(dst), len(dst)+int(frame.FrameContentSize)+compressedBlockOverAlloc)\n+\t\t\t\tdst2 := make([]byte, len(dst), len(dst)+int(frame.FrameContentSize))\n \t\t\t\tcopy(dst2, dst)\n \t\t\t\tdst = dst2\n \t\t\t}\n \t\t}\n-\n \t\tif cap(dst) == 0 {\n \t\t\t// Allocate len(input) * 2 by default if nothing is provided\n \t\t\t// and we didn't get frame content size.\n@@ -516,7 +514,7 @@ func (d *Decoder) nextBlockSync() (ok bool) {\n \n \t\t// Check frame size (before CRC)\n \t\td.syncStream.decodedFrame += uint64(len(d.current.b))\n-\t\tif d.syncStream.decodedFrame > d.frame.FrameContentSize {\n+\t\tif d.frame.FrameContentSize > 0 && d.syncStream.decodedFrame > d.frame.FrameContentSize {\n \t\t\tif debugDecoder {\n \t\t\t\tprintf(\"DecodedFrame (%d) > FrameContentSize (%d)\\n\", d.syncStream.decodedFrame, d.frame.FrameContentSize)\n \t\t\t}\n@@ -525,7 +523,7 @@ func (d *Decoder) nextBlockSync() (ok bool) {\n \t\t}\n \n \t\t// Check FCS\n-\t\tif d.current.d.Last && d.frame.FrameContentSize != fcsUnknown && d.syncStream.decodedFrame != d.frame.FrameContentSize {\n+\t\tif d.current.d.Last && d.frame.FrameContentSize > 0 && d.syncStream.decodedFrame != d.frame.FrameContentSize {\n \t\t\tif debugDecoder {\n \t\t\t\tprintf(\"DecodedFrame (%d) != FrameContentSize (%d)\\n\", d.syncStream.decodedFrame, d.frame.FrameContentSize)\n \t\t\t}\n@@ -702,7 +700,6 @@ func (d *Decoder) startStreamDecoder(ctx context.Context, r io.Reader, output ch\n \t\t\t\t}\n \t\t\t\thist.decoders = block.async.newHist.decoders\n \t\t\t\thist.recentOffsets = block.async.newHist.recentOffsets\n-\t\t\t\thist.windowSize = block.async.newHist.windowSize\n \t\t\t\tif block.async.newHist.dict != nil {\n \t\t\t\t\thist.setDict(block.async.newHist.dict)\n \t\t\t\t}\n@@ -814,11 +811,11 @@ func (d *Decoder) startStreamDecoder(ctx context.Context, r io.Reader, output ch\n \t\t\t}\n \t\t\tif !hasErr {\n \t\t\t\tdecodedFrame += uint64(len(do.b))\n-\t\t\t\tif decodedFrame > fcs {\n+\t\t\t\tif fcs > 0 && decodedFrame > fcs {\n \t\t\t\t\tprintln(\"fcs exceeded\", block.Last, fcs, decodedFrame)\n \t\t\t\t\tdo.err = ErrFrameSizeExceeded\n \t\t\t\t\thasErr = true\n-\t\t\t\t} else if block.Last && fcs != fcsUnknown && decodedFrame != fcs {\n+\t\t\t\t} else if block.Last && fcs > 0 && decodedFrame != fcs {\n \t\t\t\t\tdo.err = ErrFrameSizeMismatch\n \t\t\t\t\thasErr = true\n \t\t\t\t} else {"
    },
    {
      "sha": "fd05c9bb01236f40567a21180eb9c3e85c4c9306",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/decoder_options.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdecoder_options.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdecoder_options.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdecoder_options.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -31,7 +31,7 @@ func (o *decoderOptions) setDefault() {\n \tif o.concurrent > 4 {\n \t\to.concurrent = 4\n \t}\n-\to.maxDecodedSize = 64 << 30\n+\to.maxDecodedSize = 1 << 63\n }\n \n // WithDecoderLowmem will set whether to use a lower amount of memory,\n@@ -66,7 +66,7 @@ func WithDecoderConcurrency(n int) DOption {\n // WithDecoderMaxMemory allows to set a maximum decoded size for in-memory\n // non-streaming operations or maximum window size for streaming operations.\n // This can be used to control memory usage of potentially hostile content.\n-// Maximum is 1 << 63 bytes. Default is 64GiB.\n+// Maximum and default is 1 << 63 bytes.\n func WithDecoderMaxMemory(n uint64) DOption {\n \treturn func(o *decoderOptions) error {\n \t\tif n == 0 {"
    },
    {
      "sha": "29c3176b054321ed8bfba9fd8132400e35499407",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/framedec.go",
      "status": "modified",
      "additions": 9,
      "deletions": 17,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fframedec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fframedec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fframedec.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -197,7 +197,7 @@ func (d *frameDec) reset(br byteBuffer) error {\n \tdefault:\n \t\tfcsSize = 1 << v\n \t}\n-\td.FrameContentSize = fcsUnknown\n+\td.FrameContentSize = 0\n \tif fcsSize > 0 {\n \t\tb, err := br.readSmall(fcsSize)\n \t\tif err != nil {\n@@ -326,19 +326,6 @@ func (d *frameDec) runDecoder(dst []byte, dec *blockDec) ([]byte, error) {\n \td.history.ignoreBuffer = len(dst)\n \t// Store input length, so we only check new data.\n \tcrcStart := len(dst)\n-\td.history.decoders.maxSyncLen = 0\n-\tif d.FrameContentSize != fcsUnknown {\n-\t\td.history.decoders.maxSyncLen = d.FrameContentSize + uint64(len(dst))\n-\t\tif d.history.decoders.maxSyncLen > d.o.maxDecodedSize {\n-\t\t\treturn dst, ErrDecoderSizeExceeded\n-\t\t}\n-\t\tif uint64(cap(dst)) < d.history.decoders.maxSyncLen {\n-\t\t\t// Alloc for output\n-\t\t\tdst2 := make([]byte, len(dst), d.history.decoders.maxSyncLen+compressedBlockOverAlloc)\n-\t\t\tcopy(dst2, dst)\n-\t\t\tdst = dst2\n-\t\t}\n-\t}\n \tvar err error\n \tfor {\n \t\terr = dec.reset(d.rawInput, d.WindowSize)\n@@ -356,21 +343,26 @@ func (d *frameDec) runDecoder(dst []byte, dec *blockDec) ([]byte, error) {\n \t\t\terr = ErrDecoderSizeExceeded\n \t\t\tbreak\n \t\t}\n-\t\tif uint64(len(d.history.b)-crcStart) > d.FrameContentSize {\n+\t\tif d.SingleSegment && uint64(len(d.history.b)) > d.o.maxDecodedSize {\n+\t\t\tprintln(\"runDecoder: single segment and\", uint64(len(d.history.b)), \">\", d.o.maxDecodedSize)\n+\t\t\terr = ErrFrameSizeExceeded\n+\t\t\tbreak\n+\t\t}\n+\t\tif d.FrameContentSize > 0 && uint64(len(d.history.b)-crcStart) > d.FrameContentSize {\n \t\t\tprintln(\"runDecoder: FrameContentSize exceeded\", uint64(len(d.history.b)-crcStart), \">\", d.FrameContentSize)\n \t\t\terr = ErrFrameSizeExceeded\n \t\t\tbreak\n \t\t}\n \t\tif dec.Last {\n \t\t\tbreak\n \t\t}\n-\t\tif debugDecoder {\n+\t\tif debugDecoder && d.FrameContentSize > 0 {\n \t\t\tprintln(\"runDecoder: FrameContentSize\", uint64(len(d.history.b)-crcStart), \"<=\", d.FrameContentSize)\n \t\t}\n \t}\n \tdst = d.history.b\n \tif err == nil {\n-\t\tif d.FrameContentSize != fcsUnknown && uint64(len(d.history.b)-crcStart) != d.FrameContentSize {\n+\t\tif d.FrameContentSize > 0 && uint64(len(d.history.b)-crcStart) != d.FrameContentSize {\n \t\t\terr = ErrFrameSizeMismatch\n \t\t} else if d.HasCheckSum {\n \t\t\tvar n int"
    },
    {
      "sha": "bb3d4fd6c312969ebd4d1a16cb2f392ba3310610",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/fse_decoder.go",
      "status": "modified",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Ffse_decoder.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Ffse_decoder.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Ffse_decoder.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -5,10 +5,8 @@\n package zstd\n \n import (\n-\t\"encoding/binary\"\n \t\"errors\"\n \t\"fmt\"\n-\t\"io\"\n )\n \n const (\n@@ -184,29 +182,6 @@ func (s *fseDecoder) readNCount(b *byteReader, maxSymbol uint16) error {\n \treturn s.buildDtable()\n }\n \n-func (s *fseDecoder) mustReadFrom(r io.Reader) {\n-\tfatalErr := func(err error) {\n-\t\tif err != nil {\n-\t\t\tpanic(err)\n-\t\t}\n-\t}\n-\t// \tdt             [maxTablesize]decSymbol // Decompression table.\n-\t//\tsymbolLen      uint16                  // Length of active part of the symbol table.\n-\t//\tactualTableLog uint8                   // Selected tablelog.\n-\t//\tmaxBits        uint8                   // Maximum number of additional bits\n-\t//\t// used for table creation to avoid allocations.\n-\t//\tstateTable [256]uint16\n-\t//\tnorm       [maxSymbolValue + 1]int16\n-\t//\tpreDefined bool\n-\tfatalErr(binary.Read(r, binary.LittleEndian, &s.dt))\n-\tfatalErr(binary.Read(r, binary.LittleEndian, &s.symbolLen))\n-\tfatalErr(binary.Read(r, binary.LittleEndian, &s.actualTableLog))\n-\tfatalErr(binary.Read(r, binary.LittleEndian, &s.maxBits))\n-\tfatalErr(binary.Read(r, binary.LittleEndian, &s.stateTable))\n-\tfatalErr(binary.Read(r, binary.LittleEndian, &s.norm))\n-\tfatalErr(binary.Read(r, binary.LittleEndian, &s.preDefined))\n-}\n-\n // decSymbol contains information about a state entry,\n // Including the state offset base, the output symbol and\n // the number of bits to read for the low part of the destination state."
    },
    {
      "sha": "fda8a74228240b363d8cdeef767f1593e423812e",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/fuzz.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Ffuzz.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Ffuzz.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Ffuzz.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,5 +1,5 @@\n-//go:build ignorecrc\n-// +build ignorecrc\n+//go:build gofuzz\n+// +build gofuzz\n \n // Copyright 2019+ Klaus Post. All rights reserved.\n // License information can be found in the LICENSE file."
    },
    {
      "sha": "0515b201ccbfe760c04291f9adb97f7dee53822e",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/fuzz_none.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Ffuzz_none.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Ffuzz_none.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Ffuzz_none.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,5 +1,5 @@\n-//go:build !ignorecrc\n-// +build !ignorecrc\n+//go:build !gofuzz\n+// +build !gofuzz\n \n // Copyright 2019+ Klaus Post. All rights reserved.\n // License information can be found in the LICENSE file."
    },
    {
      "sha": "213736ad77e3cbefa2777ad533f933873595e329",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/seqdec.go",
      "status": "modified",
      "additions": 146,
      "deletions": 24,
      "changes": 170,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -73,7 +73,6 @@ type sequenceDecs struct {\n \tseqSize      int\n \twindowSize   int\n \tmaxBits      uint8\n-\tmaxSyncLen   uint64\n }\n \n // initialize all 3 decoders from the stream input.\n@@ -99,13 +98,150 @@ func (s *sequenceDecs) initialize(br *bitReader, hist *history, out []byte) erro\n \treturn nil\n }\n \n+// decode sequences from the stream with the provided history.\n+func (s *sequenceDecs) decode(seqs []seqVals) error {\n+\tbr := s.br\n+\n+\t// Grab full sizes tables, to avoid bounds checks.\n+\tllTable, mlTable, ofTable := s.litLengths.fse.dt[:maxTablesize], s.matchLengths.fse.dt[:maxTablesize], s.offsets.fse.dt[:maxTablesize]\n+\tllState, mlState, ofState := s.litLengths.state.state, s.matchLengths.state.state, s.offsets.state.state\n+\ts.seqSize = 0\n+\tlitRemain := len(s.literals)\n+\n+\tfor i := range seqs {\n+\t\tvar ll, mo, ml int\n+\t\tif br.off > 4+((maxOffsetBits+16+16)>>3) {\n+\t\t\t// inlined function:\n+\t\t\t// ll, mo, ml = s.nextFast(br, llState, mlState, ofState)\n+\n+\t\t\t// Final will not read from stream.\n+\t\t\tvar llB, mlB, moB uint8\n+\t\t\tll, llB = llState.final()\n+\t\t\tml, mlB = mlState.final()\n+\t\t\tmo, moB = ofState.final()\n+\n+\t\t\t// extra bits are stored in reverse order.\n+\t\t\tbr.fillFast()\n+\t\t\tmo += br.getBits(moB)\n+\t\t\tif s.maxBits > 32 {\n+\t\t\t\tbr.fillFast()\n+\t\t\t}\n+\t\t\tml += br.getBits(mlB)\n+\t\t\tll += br.getBits(llB)\n+\n+\t\t\tif moB > 1 {\n+\t\t\t\ts.prevOffset[2] = s.prevOffset[1]\n+\t\t\t\ts.prevOffset[1] = s.prevOffset[0]\n+\t\t\t\ts.prevOffset[0] = mo\n+\t\t\t} else {\n+\t\t\t\t// mo = s.adjustOffset(mo, ll, moB)\n+\t\t\t\t// Inlined for rather big speedup\n+\t\t\t\tif ll == 0 {\n+\t\t\t\t\t// There is an exception though, when current sequence's literals_length = 0.\n+\t\t\t\t\t// In this case, repeated offsets are shifted by one, so an offset_value of 1 means Repeated_Offset2,\n+\t\t\t\t\t// an offset_value of 2 means Repeated_Offset3, and an offset_value of 3 means Repeated_Offset1 - 1_byte.\n+\t\t\t\t\tmo++\n+\t\t\t\t}\n+\n+\t\t\t\tif mo == 0 {\n+\t\t\t\t\tmo = s.prevOffset[0]\n+\t\t\t\t} else {\n+\t\t\t\t\tvar temp int\n+\t\t\t\t\tif mo == 3 {\n+\t\t\t\t\t\ttemp = s.prevOffset[0] - 1\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\ttemp = s.prevOffset[mo]\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif temp == 0 {\n+\t\t\t\t\t\t// 0 is not valid; input is corrupted; force offset to 1\n+\t\t\t\t\t\tprintln(\"WARNING: temp was 0\")\n+\t\t\t\t\t\ttemp = 1\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif mo != 1 {\n+\t\t\t\t\t\ts.prevOffset[2] = s.prevOffset[1]\n+\t\t\t\t\t}\n+\t\t\t\t\ts.prevOffset[1] = s.prevOffset[0]\n+\t\t\t\t\ts.prevOffset[0] = temp\n+\t\t\t\t\tmo = temp\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tbr.fillFast()\n+\t\t} else {\n+\t\t\tif br.overread() {\n+\t\t\t\tif debugDecoder {\n+\t\t\t\t\tprintf(\"reading sequence %d, exceeded available data\\n\", i)\n+\t\t\t\t}\n+\t\t\t\treturn io.ErrUnexpectedEOF\n+\t\t\t}\n+\t\t\tll, mo, ml = s.next(br, llState, mlState, ofState)\n+\t\t\tbr.fill()\n+\t\t}\n+\n+\t\tif debugSequences {\n+\t\t\tprintln(\"Seq\", i, \"Litlen:\", ll, \"mo:\", mo, \"(abs) ml:\", ml)\n+\t\t}\n+\t\t// Evaluate.\n+\t\t// We might be doing this async, so do it early.\n+\t\tif mo == 0 && ml > 0 {\n+\t\t\treturn fmt.Errorf(\"zero matchoff and matchlen (%d) > 0\", ml)\n+\t\t}\n+\t\tif ml > maxMatchLen {\n+\t\t\treturn fmt.Errorf(\"match len (%d) bigger than max allowed length\", ml)\n+\t\t}\n+\t\ts.seqSize += ll + ml\n+\t\tif s.seqSize > maxBlockSize {\n+\t\t\treturn fmt.Errorf(\"output (%d) bigger than max block size\", s.seqSize)\n+\t\t}\n+\t\tlitRemain -= ll\n+\t\tif litRemain < 0 {\n+\t\t\treturn fmt.Errorf(\"unexpected literal count, want %d bytes, but only %d is available\", ll, litRemain+ll)\n+\t\t}\n+\t\tseqs[i] = seqVals{\n+\t\t\tll: ll,\n+\t\t\tml: ml,\n+\t\t\tmo: mo,\n+\t\t}\n+\t\tif i == len(seqs)-1 {\n+\t\t\t// This is the last sequence, so we shouldn't update state.\n+\t\t\tbreak\n+\t\t}\n+\n+\t\t// Manually inlined, ~ 5-20% faster\n+\t\t// Update all 3 states at once. Approx 20% faster.\n+\t\tnBits := llState.nbBits() + mlState.nbBits() + ofState.nbBits()\n+\t\tif nBits == 0 {\n+\t\t\tllState = llTable[llState.newState()&maxTableMask]\n+\t\t\tmlState = mlTable[mlState.newState()&maxTableMask]\n+\t\t\tofState = ofTable[ofState.newState()&maxTableMask]\n+\t\t} else {\n+\t\t\tbits := br.get32BitsFast(nBits)\n+\t\t\tlowBits := uint16(bits >> ((ofState.nbBits() + mlState.nbBits()) & 31))\n+\t\t\tllState = llTable[(llState.newState()+lowBits)&maxTableMask]\n+\n+\t\t\tlowBits = uint16(bits >> (ofState.nbBits() & 31))\n+\t\t\tlowBits &= bitMask[mlState.nbBits()&15]\n+\t\t\tmlState = mlTable[(mlState.newState()+lowBits)&maxTableMask]\n+\n+\t\t\tlowBits = uint16(bits) & bitMask[ofState.nbBits()&15]\n+\t\t\tofState = ofTable[(ofState.newState()+lowBits)&maxTableMask]\n+\t\t}\n+\t}\n+\ts.seqSize += litRemain\n+\tif s.seqSize > maxBlockSize {\n+\t\treturn fmt.Errorf(\"output (%d) bigger than max block size\", s.seqSize)\n+\t}\n+\terr := br.close()\n+\tif err != nil {\n+\t\tprintf(\"Closing sequences: %v, %+v\\n\", err, *br)\n+\t}\n+\treturn err\n+}\n+\n // execute will execute the decoded sequence with the provided history.\n // The sequence must be evaluated before being sent.\n func (s *sequenceDecs) execute(seqs []seqVals, hist []byte) error {\n-\tif len(s.dict) == 0 {\n-\t\treturn s.executeSimple(seqs, hist)\n-\t}\n-\n \t// Ensure we have enough output size...\n \tif len(s.out)+s.seqSize > cap(s.out) {\n \t\taddBytes := s.seqSize + len(s.out)\n@@ -202,24 +338,15 @@ func (s *sequenceDecs) execute(seqs []seqVals, hist []byte) error {\n }\n \n // decode sequences from the stream with the provided history.\n-func (s *sequenceDecs) decodeSync(hist []byte) error {\n-\tif true {\n-\t\tsupported, err := s.decodeSyncSimple(hist)\n-\t\tif supported {\n-\t\t\treturn err\n-\t\t}\n-\t}\n+func (s *sequenceDecs) decodeSync(history *history) error {\n \tbr := s.br\n \tseqs := s.nSeqs\n \tstartSize := len(s.out)\n \t// Grab full sizes tables, to avoid bounds checks.\n \tllTable, mlTable, ofTable := s.litLengths.fse.dt[:maxTablesize], s.matchLengths.fse.dt[:maxTablesize], s.offsets.fse.dt[:maxTablesize]\n \tllState, mlState, ofState := s.litLengths.state.state, s.matchLengths.state.state, s.offsets.state.state\n+\thist := history.b[history.ignoreBuffer:]\n \tout := s.out\n-\tmaxBlockSize := maxCompressedBlockSize\n-\tif s.windowSize < maxBlockSize {\n-\t\tmaxBlockSize = s.windowSize\n-\t}\n \n \tfor i := seqs - 1; i >= 0; i-- {\n \t\tif br.overread() {\n@@ -299,7 +426,7 @@ func (s *sequenceDecs) decodeSync(hist []byte) error {\n \t\t}\n \t\tsize := ll + ml + len(out)\n \t\tif size-startSize > maxBlockSize {\n-\t\t\treturn fmt.Errorf(\"output (%d) bigger than max block size (%d)\", size-startSize, maxBlockSize)\n+\t\t\treturn fmt.Errorf(\"output (%d) bigger than max block size\", size)\n \t\t}\n \t\tif size > cap(out) {\n \t\t\t// Not enough size, which can happen under high volume block streaming conditions\n@@ -329,13 +456,13 @@ func (s *sequenceDecs) decodeSync(hist []byte) error {\n \n \t\tif mo > len(out)+len(hist) || mo > s.windowSize {\n \t\t\tif len(s.dict) == 0 {\n-\t\t\t\treturn fmt.Errorf(\"match offset (%d) bigger than current history (%d)\", mo, len(out)+len(hist)-startSize)\n+\t\t\t\treturn fmt.Errorf(\"match offset (%d) bigger than current history (%d)\", mo, len(out)+len(hist))\n \t\t\t}\n \n \t\t\t// we may be in dictionary.\n \t\t\tdictO := len(s.dict) - (mo - (len(out) + len(hist)))\n \t\t\tif dictO < 0 || dictO >= len(s.dict) {\n-\t\t\t\treturn fmt.Errorf(\"match offset (%d) bigger than current history (%d)\", mo, len(out)+len(hist)-startSize)\n+\t\t\t\treturn fmt.Errorf(\"match offset (%d) bigger than current history (%d)\", mo, len(out)+len(hist))\n \t\t\t}\n \t\t\tend := dictO + ml\n \t\t\tif end > len(s.dict) {\n@@ -408,11 +535,6 @@ func (s *sequenceDecs) decodeSync(hist []byte) error {\n \t\t}\n \t}\n \n-\t// Check if space for literals\n-\tif size := len(s.literals) + len(s.out) - startSize; size > maxBlockSize {\n-\t\treturn fmt.Errorf(\"output (%d) bigger than max block size (%d)\", size, maxBlockSize)\n-\t}\n-\n \t// Add final literals\n \ts.out = append(out, s.literals...)\n \treturn br.close()"
    },
    {
      "sha": "4676b09cc18e5a0d8e6b05b16401ecbbab50d722",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/seqdec_amd64.go",
      "status": "removed",
      "additions": 0,
      "deletions": 350,
      "changes": 350,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec_amd64.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,350 +0,0 @@\n-//go:build amd64 && !appengine && !noasm && gc\n-// +build amd64,!appengine,!noasm,gc\n-\n-package zstd\n-\n-import (\n-\t\"fmt\"\n-\n-\t\"github.com/klauspost/compress/internal/cpuinfo\"\n-)\n-\n-type decodeSyncAsmContext struct {\n-\tllTable     []decSymbol\n-\tmlTable     []decSymbol\n-\tofTable     []decSymbol\n-\tllState     uint64\n-\tmlState     uint64\n-\tofState     uint64\n-\titeration   int\n-\tlitRemain   int\n-\tout         []byte\n-\toutPosition int\n-\tliterals    []byte\n-\tlitPosition int\n-\thistory     []byte\n-\twindowSize  int\n-\tll          int // set on error (not for all errors, please refer to _generate/gen.go)\n-\tml          int // set on error (not for all errors, please refer to _generate/gen.go)\n-\tmo          int // set on error (not for all errors, please refer to _generate/gen.go)\n-}\n-\n-// sequenceDecs_decodeSync_amd64 implements the main loop of sequenceDecs.decodeSync in x86 asm.\n-//\n-// Please refer to seqdec_generic.go for the reference implementation.\n-//go:noescape\n-func sequenceDecs_decodeSync_amd64(s *sequenceDecs, br *bitReader, ctx *decodeSyncAsmContext) int\n-\n-// sequenceDecs_decodeSync_bmi2 implements the main loop of sequenceDecs.decodeSync in x86 asm with BMI2 extensions.\n-//go:noescape\n-func sequenceDecs_decodeSync_bmi2(s *sequenceDecs, br *bitReader, ctx *decodeSyncAsmContext) int\n-\n-// sequenceDecs_decodeSync_safe_amd64 does the same as above, but does not write more than output buffer.\n-//go:noescape\n-func sequenceDecs_decodeSync_safe_amd64(s *sequenceDecs, br *bitReader, ctx *decodeSyncAsmContext) int\n-\n-// sequenceDecs_decodeSync_safe_bmi2 does the same as above, but does not write more than output buffer.\n-//go:noescape\n-func sequenceDecs_decodeSync_safe_bmi2(s *sequenceDecs, br *bitReader, ctx *decodeSyncAsmContext) int\n-\n-// decode sequences from the stream with the provided history but without a dictionary.\n-func (s *sequenceDecs) decodeSyncSimple(hist []byte) (bool, error) {\n-\tif len(s.dict) > 0 {\n-\t\treturn false, nil\n-\t}\n-\tif s.maxSyncLen == 0 && cap(s.out)-len(s.out) < maxCompressedBlockSize {\n-\t\treturn false, nil\n-\t}\n-\tuseSafe := false\n-\tif s.maxSyncLen == 0 && cap(s.out)-len(s.out) < maxCompressedBlockSizeAlloc {\n-\t\tuseSafe = true\n-\t}\n-\tif s.maxSyncLen > 0 && cap(s.out)-len(s.out)-compressedBlockOverAlloc < int(s.maxSyncLen) {\n-\t\tuseSafe = true\n-\t}\n-\tbr := s.br\n-\n-\tmaxBlockSize := maxCompressedBlockSize\n-\tif s.windowSize < maxBlockSize {\n-\t\tmaxBlockSize = s.windowSize\n-\t}\n-\n-\tctx := decodeSyncAsmContext{\n-\t\tllTable:     s.litLengths.fse.dt[:maxTablesize],\n-\t\tmlTable:     s.matchLengths.fse.dt[:maxTablesize],\n-\t\tofTable:     s.offsets.fse.dt[:maxTablesize],\n-\t\tllState:     uint64(s.litLengths.state.state),\n-\t\tmlState:     uint64(s.matchLengths.state.state),\n-\t\tofState:     uint64(s.offsets.state.state),\n-\t\titeration:   s.nSeqs - 1,\n-\t\tlitRemain:   len(s.literals),\n-\t\tout:         s.out,\n-\t\toutPosition: len(s.out),\n-\t\tliterals:    s.literals,\n-\t\twindowSize:  s.windowSize,\n-\t\thistory:     hist,\n-\t}\n-\n-\ts.seqSize = 0\n-\tstartSize := len(s.out)\n-\n-\tvar errCode int\n-\tif cpuinfo.HasBMI2() {\n-\t\tif useSafe {\n-\t\t\terrCode = sequenceDecs_decodeSync_safe_bmi2(s, br, &ctx)\n-\t\t} else {\n-\t\t\terrCode = sequenceDecs_decodeSync_bmi2(s, br, &ctx)\n-\t\t}\n-\t} else {\n-\t\tif useSafe {\n-\t\t\terrCode = sequenceDecs_decodeSync_safe_amd64(s, br, &ctx)\n-\t\t} else {\n-\t\t\terrCode = sequenceDecs_decodeSync_amd64(s, br, &ctx)\n-\t\t}\n-\t}\n-\tswitch errCode {\n-\tcase noError:\n-\t\tbreak\n-\n-\tcase errorMatchLenOfsMismatch:\n-\t\treturn true, fmt.Errorf(\"zero matchoff and matchlen (%d) > 0\", ctx.ml)\n-\n-\tcase errorMatchLenTooBig:\n-\t\treturn true, fmt.Errorf(\"match len (%d) bigger than max allowed length\", ctx.ml)\n-\n-\tcase errorMatchOffTooBig:\n-\t\treturn true, fmt.Errorf(\"match offset (%d) bigger than current history (%d)\",\n-\t\t\tctx.mo, ctx.outPosition+len(hist)-startSize)\n-\n-\tcase errorNotEnoughLiterals:\n-\t\treturn true, fmt.Errorf(\"unexpected literal count, want %d bytes, but only %d is available\",\n-\t\t\tctx.ll, ctx.litRemain+ctx.ll)\n-\n-\tcase errorNotEnoughSpace:\n-\t\tsize := ctx.outPosition + ctx.ll + ctx.ml\n-\t\tif debugDecoder {\n-\t\t\tprintln(\"msl:\", s.maxSyncLen, \"cap\", cap(s.out), \"bef:\", startSize, \"sz:\", size-startSize, \"mbs:\", maxBlockSize, \"outsz:\", cap(s.out)-startSize)\n-\t\t}\n-\t\treturn true, fmt.Errorf(\"output (%d) bigger than max block size (%d)\", size-startSize, maxBlockSize)\n-\n-\tdefault:\n-\t\treturn true, fmt.Errorf(\"sequenceDecs_decode returned erronous code %d\", errCode)\n-\t}\n-\n-\ts.seqSize += ctx.litRemain\n-\tif s.seqSize > maxBlockSize {\n-\t\treturn true, fmt.Errorf(\"output (%d) bigger than max block size (%d)\", s.seqSize, maxBlockSize)\n-\t}\n-\terr := br.close()\n-\tif err != nil {\n-\t\tprintf(\"Closing sequences: %v, %+v\\n\", err, *br)\n-\t\treturn true, err\n-\t}\n-\n-\ts.literals = s.literals[ctx.litPosition:]\n-\tt := ctx.outPosition\n-\ts.out = s.out[:t]\n-\n-\t// Add final literals\n-\ts.out = append(s.out, s.literals...)\n-\tif debugDecoder {\n-\t\tt += len(s.literals)\n-\t\tif t != len(s.out) {\n-\t\t\tpanic(fmt.Errorf(\"length mismatch, want %d, got %d\", len(s.out), t))\n-\t\t}\n-\t}\n-\n-\treturn true, nil\n-}\n-\n-// --------------------------------------------------------------------------------\n-\n-type decodeAsmContext struct {\n-\tllTable   []decSymbol\n-\tmlTable   []decSymbol\n-\tofTable   []decSymbol\n-\tllState   uint64\n-\tmlState   uint64\n-\tofState   uint64\n-\titeration int\n-\tseqs      []seqVals\n-\tlitRemain int\n-}\n-\n-const noError = 0\n-\n-// error reported when mo == 0 && ml > 0\n-const errorMatchLenOfsMismatch = 1\n-\n-// error reported when ml > maxMatchLen\n-const errorMatchLenTooBig = 2\n-\n-// error reported when mo > available history or mo > s.windowSize\n-const errorMatchOffTooBig = 3\n-\n-// error reported when the sum of literal lengths exeeceds the literal buffer size\n-const errorNotEnoughLiterals = 4\n-\n-// error reported when capacity of `out` is too small\n-const errorNotEnoughSpace = 5\n-\n-// sequenceDecs_decode implements the main loop of sequenceDecs in x86 asm.\n-//\n-// Please refer to seqdec_generic.go for the reference implementation.\n-//go:noescape\n-func sequenceDecs_decode_amd64(s *sequenceDecs, br *bitReader, ctx *decodeAsmContext) int\n-\n-// sequenceDecs_decode implements the main loop of sequenceDecs in x86 asm.\n-//\n-// Please refer to seqdec_generic.go for the reference implementation.\n-//go:noescape\n-func sequenceDecs_decode_56_amd64(s *sequenceDecs, br *bitReader, ctx *decodeAsmContext) int\n-\n-// sequenceDecs_decode implements the main loop of sequenceDecs in x86 asm with BMI2 extensions.\n-//go:noescape\n-func sequenceDecs_decode_bmi2(s *sequenceDecs, br *bitReader, ctx *decodeAsmContext) int\n-\n-// sequenceDecs_decode implements the main loop of sequenceDecs in x86 asm with BMI2 extensions.\n-//go:noescape\n-func sequenceDecs_decode_56_bmi2(s *sequenceDecs, br *bitReader, ctx *decodeAsmContext) int\n-\n-// decode sequences from the stream without the provided history.\n-func (s *sequenceDecs) decode(seqs []seqVals) error {\n-\tbr := s.br\n-\n-\tmaxBlockSize := maxCompressedBlockSize\n-\tif s.windowSize < maxBlockSize {\n-\t\tmaxBlockSize = s.windowSize\n-\t}\n-\n-\tctx := decodeAsmContext{\n-\t\tllTable:   s.litLengths.fse.dt[:maxTablesize],\n-\t\tmlTable:   s.matchLengths.fse.dt[:maxTablesize],\n-\t\tofTable:   s.offsets.fse.dt[:maxTablesize],\n-\t\tllState:   uint64(s.litLengths.state.state),\n-\t\tmlState:   uint64(s.matchLengths.state.state),\n-\t\tofState:   uint64(s.offsets.state.state),\n-\t\tseqs:      seqs,\n-\t\titeration: len(seqs) - 1,\n-\t\tlitRemain: len(s.literals),\n-\t}\n-\n-\ts.seqSize = 0\n-\tlte56bits := s.maxBits+s.offsets.fse.actualTableLog+s.matchLengths.fse.actualTableLog+s.litLengths.fse.actualTableLog <= 56\n-\tvar errCode int\n-\tif cpuinfo.HasBMI2() {\n-\t\tif lte56bits {\n-\t\t\terrCode = sequenceDecs_decode_56_bmi2(s, br, &ctx)\n-\t\t} else {\n-\t\t\terrCode = sequenceDecs_decode_bmi2(s, br, &ctx)\n-\t\t}\n-\t} else {\n-\t\tif lte56bits {\n-\t\t\terrCode = sequenceDecs_decode_56_amd64(s, br, &ctx)\n-\t\t} else {\n-\t\t\terrCode = sequenceDecs_decode_amd64(s, br, &ctx)\n-\t\t}\n-\t}\n-\tif errCode != 0 {\n-\t\ti := len(seqs) - ctx.iteration - 1\n-\t\tswitch errCode {\n-\t\tcase errorMatchLenOfsMismatch:\n-\t\t\tml := ctx.seqs[i].ml\n-\t\t\treturn fmt.Errorf(\"zero matchoff and matchlen (%d) > 0\", ml)\n-\n-\t\tcase errorMatchLenTooBig:\n-\t\t\tml := ctx.seqs[i].ml\n-\t\t\treturn fmt.Errorf(\"match len (%d) bigger than max allowed length\", ml)\n-\n-\t\tcase errorNotEnoughLiterals:\n-\t\t\tll := ctx.seqs[i].ll\n-\t\t\treturn fmt.Errorf(\"unexpected literal count, want %d bytes, but only %d is available\", ll, ctx.litRemain+ll)\n-\t\t}\n-\n-\t\treturn fmt.Errorf(\"sequenceDecs_decode_amd64 returned erronous code %d\", errCode)\n-\t}\n-\n-\tif ctx.litRemain < 0 {\n-\t\treturn fmt.Errorf(\"literal count is too big: total available %d, total requested %d\",\n-\t\t\tlen(s.literals), len(s.literals)-ctx.litRemain)\n-\t}\n-\n-\ts.seqSize += ctx.litRemain\n-\tif s.seqSize > maxBlockSize {\n-\t\treturn fmt.Errorf(\"output (%d) bigger than max block size (%d)\", s.seqSize, maxBlockSize)\n-\t}\n-\terr := br.close()\n-\tif err != nil {\n-\t\tprintf(\"Closing sequences: %v, %+v\\n\", err, *br)\n-\t}\n-\treturn err\n-}\n-\n-// --------------------------------------------------------------------------------\n-\n-type executeAsmContext struct {\n-\tseqs        []seqVals\n-\tseqIndex    int\n-\tout         []byte\n-\thistory     []byte\n-\tliterals    []byte\n-\toutPosition int\n-\tlitPosition int\n-\twindowSize  int\n-}\n-\n-// sequenceDecs_executeSimple_amd64 implements the main loop of sequenceDecs.executeSimple in x86 asm.\n-//\n-// Returns false if a match offset is too big.\n-//\n-// Please refer to seqdec_generic.go for the reference implementation.\n-//go:noescape\n-func sequenceDecs_executeSimple_amd64(ctx *executeAsmContext) bool\n-\n-// executeSimple handles cases when dictionary is not used.\n-func (s *sequenceDecs) executeSimple(seqs []seqVals, hist []byte) error {\n-\t// Ensure we have enough output size...\n-\tif len(s.out)+s.seqSize+compressedBlockOverAlloc > cap(s.out) {\n-\t\taddBytes := s.seqSize + len(s.out) + compressedBlockOverAlloc\n-\t\ts.out = append(s.out, make([]byte, addBytes)...)\n-\t\ts.out = s.out[:len(s.out)-addBytes]\n-\t}\n-\n-\tif debugDecoder {\n-\t\tprintf(\"Execute %d seqs with literals: %d into %d bytes\\n\", len(seqs), len(s.literals), s.seqSize)\n-\t}\n-\n-\tvar t = len(s.out)\n-\tout := s.out[:t+s.seqSize]\n-\n-\tctx := executeAsmContext{\n-\t\tseqs:        seqs,\n-\t\tseqIndex:    0,\n-\t\tout:         out,\n-\t\thistory:     hist,\n-\t\toutPosition: t,\n-\t\tlitPosition: 0,\n-\t\tliterals:    s.literals,\n-\t\twindowSize:  s.windowSize,\n-\t}\n-\n-\tok := sequenceDecs_executeSimple_amd64(&ctx)\n-\tif !ok {\n-\t\treturn fmt.Errorf(\"match offset (%d) bigger than current history (%d)\",\n-\t\t\tseqs[ctx.seqIndex].mo, ctx.outPosition+len(hist))\n-\t}\n-\ts.literals = s.literals[ctx.litPosition:]\n-\tt = ctx.outPosition\n-\n-\t// Add final literals\n-\tcopy(out[t:], s.literals)\n-\tif debugDecoder {\n-\t\tt += len(s.literals)\n-\t\tif t != len(out) {\n-\t\t\tpanic(fmt.Errorf(\"length mismatch, want %d, got %d, ss: %d\", len(out), t, s.seqSize))\n-\t\t}\n-\t}\n-\ts.out = out\n-\n-\treturn nil\n-}"
    },
    {
      "sha": "01cc23fa8a5faeeec4a0b394e66c86b2921b5674",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/seqdec_amd64.s",
      "status": "removed",
      "additions": 0,
      "deletions": 3519,
      "changes": 3519,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec_amd64.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec_amd64.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec_amd64.s?ref=a03c002df452fc7a5e199be89d03c770d5707fee"
    },
    {
      "sha": "c3452bc3a9e2028cc507fd8c12b525a134bf501b",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/seqdec_generic.go",
      "status": "removed",
      "additions": 0,
      "deletions": 237,
      "changes": 237,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec_generic.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec_generic.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec_generic.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,237 +0,0 @@\n-//go:build !amd64 || appengine || !gc || noasm\n-// +build !amd64 appengine !gc noasm\n-\n-package zstd\n-\n-import (\n-\t\"fmt\"\n-\t\"io\"\n-)\n-\n-// decode sequences from the stream with the provided history but without dictionary.\n-func (s *sequenceDecs) decodeSyncSimple(hist []byte) (bool, error) {\n-\treturn false, nil\n-}\n-\n-// decode sequences from the stream without the provided history.\n-func (s *sequenceDecs) decode(seqs []seqVals) error {\n-\tbr := s.br\n-\n-\t// Grab full sizes tables, to avoid bounds checks.\n-\tllTable, mlTable, ofTable := s.litLengths.fse.dt[:maxTablesize], s.matchLengths.fse.dt[:maxTablesize], s.offsets.fse.dt[:maxTablesize]\n-\tllState, mlState, ofState := s.litLengths.state.state, s.matchLengths.state.state, s.offsets.state.state\n-\ts.seqSize = 0\n-\tlitRemain := len(s.literals)\n-\n-\tmaxBlockSize := maxCompressedBlockSize\n-\tif s.windowSize < maxBlockSize {\n-\t\tmaxBlockSize = s.windowSize\n-\t}\n-\tfor i := range seqs {\n-\t\tvar ll, mo, ml int\n-\t\tif br.off > 4+((maxOffsetBits+16+16)>>3) {\n-\t\t\t// inlined function:\n-\t\t\t// ll, mo, ml = s.nextFast(br, llState, mlState, ofState)\n-\n-\t\t\t// Final will not read from stream.\n-\t\t\tvar llB, mlB, moB uint8\n-\t\t\tll, llB = llState.final()\n-\t\t\tml, mlB = mlState.final()\n-\t\t\tmo, moB = ofState.final()\n-\n-\t\t\t// extra bits are stored in reverse order.\n-\t\t\tbr.fillFast()\n-\t\t\tmo += br.getBits(moB)\n-\t\t\tif s.maxBits > 32 {\n-\t\t\t\tbr.fillFast()\n-\t\t\t}\n-\t\t\tml += br.getBits(mlB)\n-\t\t\tll += br.getBits(llB)\n-\n-\t\t\tif moB > 1 {\n-\t\t\t\ts.prevOffset[2] = s.prevOffset[1]\n-\t\t\t\ts.prevOffset[1] = s.prevOffset[0]\n-\t\t\t\ts.prevOffset[0] = mo\n-\t\t\t} else {\n-\t\t\t\t// mo = s.adjustOffset(mo, ll, moB)\n-\t\t\t\t// Inlined for rather big speedup\n-\t\t\t\tif ll == 0 {\n-\t\t\t\t\t// There is an exception though, when current sequence's literals_length = 0.\n-\t\t\t\t\t// In this case, repeated offsets are shifted by one, so an offset_value of 1 means Repeated_Offset2,\n-\t\t\t\t\t// an offset_value of 2 means Repeated_Offset3, and an offset_value of 3 means Repeated_Offset1 - 1_byte.\n-\t\t\t\t\tmo++\n-\t\t\t\t}\n-\n-\t\t\t\tif mo == 0 {\n-\t\t\t\t\tmo = s.prevOffset[0]\n-\t\t\t\t} else {\n-\t\t\t\t\tvar temp int\n-\t\t\t\t\tif mo == 3 {\n-\t\t\t\t\t\ttemp = s.prevOffset[0] - 1\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\ttemp = s.prevOffset[mo]\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tif temp == 0 {\n-\t\t\t\t\t\t// 0 is not valid; input is corrupted; force offset to 1\n-\t\t\t\t\t\tprintln(\"WARNING: temp was 0\")\n-\t\t\t\t\t\ttemp = 1\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tif mo != 1 {\n-\t\t\t\t\t\ts.prevOffset[2] = s.prevOffset[1]\n-\t\t\t\t\t}\n-\t\t\t\t\ts.prevOffset[1] = s.prevOffset[0]\n-\t\t\t\t\ts.prevOffset[0] = temp\n-\t\t\t\t\tmo = temp\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tbr.fillFast()\n-\t\t} else {\n-\t\t\tif br.overread() {\n-\t\t\t\tif debugDecoder {\n-\t\t\t\t\tprintf(\"reading sequence %d, exceeded available data\\n\", i)\n-\t\t\t\t}\n-\t\t\t\treturn io.ErrUnexpectedEOF\n-\t\t\t}\n-\t\t\tll, mo, ml = s.next(br, llState, mlState, ofState)\n-\t\t\tbr.fill()\n-\t\t}\n-\n-\t\tif debugSequences {\n-\t\t\tprintln(\"Seq\", i, \"Litlen:\", ll, \"mo:\", mo, \"(abs) ml:\", ml)\n-\t\t}\n-\t\t// Evaluate.\n-\t\t// We might be doing this async, so do it early.\n-\t\tif mo == 0 && ml > 0 {\n-\t\t\treturn fmt.Errorf(\"zero matchoff and matchlen (%d) > 0\", ml)\n-\t\t}\n-\t\tif ml > maxMatchLen {\n-\t\t\treturn fmt.Errorf(\"match len (%d) bigger than max allowed length\", ml)\n-\t\t}\n-\t\ts.seqSize += ll + ml\n-\t\tif s.seqSize > maxBlockSize {\n-\t\t\treturn fmt.Errorf(\"output (%d) bigger than max block size (%d)\", s.seqSize, maxBlockSize)\n-\t\t}\n-\t\tlitRemain -= ll\n-\t\tif litRemain < 0 {\n-\t\t\treturn fmt.Errorf(\"unexpected literal count, want %d bytes, but only %d is available\", ll, litRemain+ll)\n-\t\t}\n-\t\tseqs[i] = seqVals{\n-\t\t\tll: ll,\n-\t\t\tml: ml,\n-\t\t\tmo: mo,\n-\t\t}\n-\t\tif i == len(seqs)-1 {\n-\t\t\t// This is the last sequence, so we shouldn't update state.\n-\t\t\tbreak\n-\t\t}\n-\n-\t\t// Manually inlined, ~ 5-20% faster\n-\t\t// Update all 3 states at once. Approx 20% faster.\n-\t\tnBits := llState.nbBits() + mlState.nbBits() + ofState.nbBits()\n-\t\tif nBits == 0 {\n-\t\t\tllState = llTable[llState.newState()&maxTableMask]\n-\t\t\tmlState = mlTable[mlState.newState()&maxTableMask]\n-\t\t\tofState = ofTable[ofState.newState()&maxTableMask]\n-\t\t} else {\n-\t\t\tbits := br.get32BitsFast(nBits)\n-\t\t\tlowBits := uint16(bits >> ((ofState.nbBits() + mlState.nbBits()) & 31))\n-\t\t\tllState = llTable[(llState.newState()+lowBits)&maxTableMask]\n-\n-\t\t\tlowBits = uint16(bits >> (ofState.nbBits() & 31))\n-\t\t\tlowBits &= bitMask[mlState.nbBits()&15]\n-\t\t\tmlState = mlTable[(mlState.newState()+lowBits)&maxTableMask]\n-\n-\t\t\tlowBits = uint16(bits) & bitMask[ofState.nbBits()&15]\n-\t\t\tofState = ofTable[(ofState.newState()+lowBits)&maxTableMask]\n-\t\t}\n-\t}\n-\ts.seqSize += litRemain\n-\tif s.seqSize > maxBlockSize {\n-\t\treturn fmt.Errorf(\"output (%d) bigger than max block size (%d)\", s.seqSize, maxBlockSize)\n-\t}\n-\terr := br.close()\n-\tif err != nil {\n-\t\tprintf(\"Closing sequences: %v, %+v\\n\", err, *br)\n-\t}\n-\treturn err\n-}\n-\n-// executeSimple handles cases when a dictionary is not used.\n-func (s *sequenceDecs) executeSimple(seqs []seqVals, hist []byte) error {\n-\t// Ensure we have enough output size...\n-\tif len(s.out)+s.seqSize > cap(s.out) {\n-\t\taddBytes := s.seqSize + len(s.out)\n-\t\ts.out = append(s.out, make([]byte, addBytes)...)\n-\t\ts.out = s.out[:len(s.out)-addBytes]\n-\t}\n-\n-\tif debugDecoder {\n-\t\tprintf(\"Execute %d seqs with literals: %d into %d bytes\\n\", len(seqs), len(s.literals), s.seqSize)\n-\t}\n-\n-\tvar t = len(s.out)\n-\tout := s.out[:t+s.seqSize]\n-\n-\tfor _, seq := range seqs {\n-\t\t// Add literals\n-\t\tcopy(out[t:], s.literals[:seq.ll])\n-\t\tt += seq.ll\n-\t\ts.literals = s.literals[seq.ll:]\n-\n-\t\t// Malformed input\n-\t\tif seq.mo > t+len(hist) || seq.mo > s.windowSize {\n-\t\t\treturn fmt.Errorf(\"match offset (%d) bigger than current history (%d)\", seq.mo, t+len(hist))\n-\t\t}\n-\n-\t\t// Copy from history.\n-\t\tif v := seq.mo - t; v > 0 {\n-\t\t\t// v is the start position in history from end.\n-\t\t\tstart := len(hist) - v\n-\t\t\tif seq.ml > v {\n-\t\t\t\t// Some goes into the current block.\n-\t\t\t\t// Copy remainder of history\n-\t\t\t\tcopy(out[t:], hist[start:])\n-\t\t\t\tt += v\n-\t\t\t\tseq.ml -= v\n-\t\t\t} else {\n-\t\t\t\tcopy(out[t:], hist[start:start+seq.ml])\n-\t\t\t\tt += seq.ml\n-\t\t\t\tcontinue\n-\t\t\t}\n-\t\t}\n-\n-\t\t// We must be in the current buffer now\n-\t\tif seq.ml > 0 {\n-\t\t\tstart := t - seq.mo\n-\t\t\tif seq.ml <= t-start {\n-\t\t\t\t// No overlap\n-\t\t\t\tcopy(out[t:], out[start:start+seq.ml])\n-\t\t\t\tt += seq.ml\n-\t\t\t} else {\n-\t\t\t\t// Overlapping copy\n-\t\t\t\t// Extend destination slice and copy one byte at the time.\n-\t\t\t\tsrc := out[start : start+seq.ml]\n-\t\t\t\tdst := out[t:]\n-\t\t\t\tdst = dst[:len(src)]\n-\t\t\t\tt += len(src)\n-\t\t\t\t// Destination is the space we just added.\n-\t\t\t\tfor i := range src {\n-\t\t\t\t\tdst[i] = src[i]\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n-\t// Add final literals\n-\tcopy(out[t:], s.literals)\n-\tif debugDecoder {\n-\t\tt += len(s.literals)\n-\t\tif t != len(out) {\n-\t\t\tpanic(fmt.Errorf(\"length mismatch, want %d, got %d, ss: %d\", len(out), t, s.seqSize))\n-\t\t}\n-\t}\n-\ts.out = out\n-\n-\treturn nil\n-}"
    },
    {
      "sha": "967f29b3120e923620715900249ee31281ad0856",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/zip.go",
      "status": "modified",
      "additions": 24,
      "deletions": 36,
      "changes": 60,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fzip.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fzip.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fzip.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -20,49 +20,34 @@ const ZipMethodPKWare = 20\n \n var zipReaderPool sync.Pool\n \n-// newZipReader creates a pooled zip decompressor.\n-func newZipReader(opts ...DOption) func(r io.Reader) io.ReadCloser {\n-\tpool := &zipReaderPool\n-\tif len(opts) > 0 {\n-\t\topts = append([]DOption{WithDecoderLowmem(true), WithDecoderMaxWindow(128 << 20)}, opts...)\n-\t\t// Force concurrency 1\n-\t\topts = append(opts, WithDecoderConcurrency(1))\n-\t\t// Create our own pool\n-\t\tpool = &sync.Pool{}\n-\t}\n-\treturn func(r io.Reader) io.ReadCloser {\n-\t\tdec, ok := pool.Get().(*Decoder)\n-\t\tif ok {\n-\t\t\tdec.Reset(r)\n-\t\t} else {\n-\t\t\td, err := NewReader(r, opts...)\n-\t\t\tif err != nil {\n-\t\t\t\tpanic(err)\n-\t\t\t}\n-\t\t\tdec = d\n+// newZipReader cannot be used since we would leak goroutines...\n+func newZipReader(r io.Reader) io.ReadCloser {\n+\tdec, ok := zipReaderPool.Get().(*Decoder)\n+\tif ok {\n+\t\tdec.Reset(r)\n+\t} else {\n+\t\td, err := NewReader(r, WithDecoderConcurrency(1), WithDecoderLowmem(true))\n+\t\tif err != nil {\n+\t\t\tpanic(err)\n \t\t}\n-\t\treturn &pooledZipReader{dec: dec, pool: pool}\n+\t\tdec = d\n \t}\n+\treturn &pooledZipReader{dec: dec}\n }\n \n type pooledZipReader struct {\n-\tmu   sync.Mutex // guards Close and Read\n-\tpool *sync.Pool\n-\tdec  *Decoder\n+\tmu  sync.Mutex // guards Close and Read\n+\tdec *Decoder\n }\n \n func (r *pooledZipReader) Read(p []byte) (n int, err error) {\n \tr.mu.Lock()\n \tdefer r.mu.Unlock()\n \tif r.dec == nil {\n-\t\treturn 0, errors.New(\"read after close or EOF\")\n+\t\treturn 0, errors.New(\"Read after Close\")\n \t}\n \tdec, err := r.dec.Read(p)\n-\tif err == io.EOF {\n-\t\tr.dec.Reset(nil)\n-\t\tr.pool.Put(r.dec)\n-\t\tr.dec = nil\n-\t}\n+\n \treturn dec, err\n }\n \n@@ -72,7 +57,7 @@ func (r *pooledZipReader) Close() error {\n \tvar err error\n \tif r.dec != nil {\n \t\terr = r.dec.Reset(nil)\n-\t\tr.pool.Put(r.dec)\n+\t\tzipReaderPool.Put(r.dec)\n \t\tr.dec = nil\n \t}\n \treturn err\n@@ -126,9 +111,12 @@ func ZipCompressor(opts ...EOption) func(w io.Writer) (io.WriteCloser, error) {\n \n // ZipDecompressor returns a decompressor that can be registered with zip libraries.\n // See ZipCompressor for example.\n-// Options can be specified. WithDecoderConcurrency(1) is forced,\n-// and by default a 128MB maximum decompression window is specified.\n-// The window size can be overridden if required.\n-func ZipDecompressor(opts ...DOption) func(r io.Reader) io.ReadCloser {\n-\treturn newZipReader(opts...)\n+func ZipDecompressor() func(r io.Reader) io.ReadCloser {\n+\treturn func(r io.Reader) io.ReadCloser {\n+\t\td, err := NewReader(r, WithDecoderConcurrency(1), WithDecoderLowmem(true))\n+\t\tif err != nil {\n+\t\t\tpanic(err)\n+\t\t}\n+\t\treturn d.IOReadCloser()\n+\t}\n }"
    },
    {
      "sha": "0b0c2571ddc5e685186c7790da8ae3b95c332d73",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/zstd.go",
      "status": "modified",
      "additions": 0,
      "deletions": 7,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fzstd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fzstd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fzstd.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -39,9 +39,6 @@ const zstdMinMatch = 3\n // Reset the buffer offset when reaching this.\n const bufferReset = math.MaxInt32 - MaxWindowSize\n \n-// fcsUnknown is used for unknown frame content size.\n-const fcsUnknown = math.MaxUint64\n-\n var (\n \t// ErrReservedBlockType is returned when a reserved block type is found.\n \t// Typically this indicates wrong or corrupted input.\n@@ -55,10 +52,6 @@ var (\n \t// Typically returned on invalid input.\n \tErrBlockTooSmall = errors.New(\"block too small\")\n \n-\t// ErrUnexpectedBlockSize is returned when a block has unexpected size.\n-\t// Typically returned on invalid input.\n-\tErrUnexpectedBlockSize = errors.New(\"unexpected block size\")\n-\n \t// ErrMagicMismatch is returned when a \"magic\" number isn't what is expected.\n \t// Typically this indicates wrong or corrupted input.\n \tErrMagicMismatch = errors.New(\"invalid input: magic number mismatch\")"
    },
    {
      "sha": "245e2f0e0b423464cfd47d5fc0691d542830f737",
      "filename": "backend/vendor/github.com/kyokomi/emoji/v2/emoji.go",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Femoji.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Femoji.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Femoji.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -49,7 +49,8 @@ func NormalizeShortCode(shortCode string) string {\n // regular expression that matches :flag-[countrycode]:\n var flagRegexp = regexp.MustCompile(\":flag-([a-z]{2}):\")\n \n-func emojize(x string) string {\n+// Emojize Converts the string passed as an argument to a emoji. For unsupported emoji, the string passed as an argument is returned as is.\n+func Emojize(x string) string {\n \tstr, ok := emojiCode()[x]\n \tif ok {\n \t\treturn str + ReplacePadding\n@@ -83,7 +84,7 @@ func replaseEmoji(input *bytes.Buffer) string {\n \t\tcase unicode.IsSpace(i):\n \t\t\treturn emoji.String()\n \t\tcase i == ':':\n-\t\t\treturn emojize(emoji.String())\n+\t\t\treturn Emojize(emoji.String())\n \t\t}\n \t}\n }"
    },
    {
      "sha": "c446fad0f136c59caca75bd6f85402d913ef26a4",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/policy.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fpolicy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fpolicy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fpolicy.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -879,6 +879,7 @@ func (p *Policy) addDefaultElementsWithoutAttrs() {\n \tp.setOfElementsAllowedWithoutAttrs[\"optgroup\"] = struct{}{}\n \tp.setOfElementsAllowedWithoutAttrs[\"option\"] = struct{}{}\n \tp.setOfElementsAllowedWithoutAttrs[\"p\"] = struct{}{}\n+\tp.setOfElementsAllowedWithoutAttrs[\"picture\"] = struct{}{}\n \tp.setOfElementsAllowedWithoutAttrs[\"pre\"] = struct{}{}\n \tp.setOfElementsAllowedWithoutAttrs[\"q\"] = struct{}{}\n \tp.setOfElementsAllowedWithoutAttrs[\"rp\"] = struct{}{}"
    },
    {
      "sha": "2924cf3a149234bdc0255ea3340457a56de7c76f",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/assertions.go",
      "status": "modified",
      "additions": 33,
      "deletions": 45,
      "changes": 78,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertions.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -8,7 +8,6 @@ import (\n \t\"fmt\"\n \t\"math\"\n \t\"os\"\n-\t\"path/filepath\"\n \t\"reflect\"\n \t\"regexp\"\n \t\"runtime\"\n@@ -141,12 +140,11 @@ func CallerInfo() []string {\n \t\t}\n \n \t\tparts := strings.Split(file, \"/\")\n-\t\tfile = parts[len(parts)-1]\n \t\tif len(parts) > 1 {\n+\t\t\tfilename := parts[len(parts)-1]\n \t\t\tdir := parts[len(parts)-2]\n-\t\t\tif (dir != \"assert\" && dir != \"mock\" && dir != \"require\") || file == \"mock_test.go\" {\n-\t\t\t\tpath, _ := filepath.Abs(file)\n-\t\t\t\tcallers = append(callers, fmt.Sprintf(\"%s:%d\", path, line))\n+\t\t\tif (dir != \"assert\" && dir != \"mock\" && dir != \"require\") || filename == \"mock_test.go\" {\n+\t\t\t\tcallers = append(callers, fmt.Sprintf(\"%s:%d\", file, line))\n \t\t\t}\n \t\t}\n \n@@ -530,7 +528,7 @@ func isNil(object interface{}) bool {\n \t\t[]reflect.Kind{\n \t\t\treflect.Chan, reflect.Func,\n \t\t\treflect.Interface, reflect.Map,\n-\t\t\treflect.Ptr, reflect.Slice},\n+\t\t\treflect.Ptr, reflect.Slice, reflect.UnsafePointer},\n \t\tkind)\n \n \tif isNilableKind && value.IsNil() {\n@@ -818,49 +816,44 @@ func Subset(t TestingT, list, subset interface{}, msgAndArgs ...interface{}) (ok\n \t\treturn true // we consider nil to be equal to the nil set\n \t}\n \n-\tdefer func() {\n-\t\tif e := recover(); e != nil {\n-\t\t\tok = false\n-\t\t}\n-\t}()\n-\n \tlistKind := reflect.TypeOf(list).Kind()\n-\tsubsetKind := reflect.TypeOf(subset).Kind()\n-\n \tif listKind != reflect.Array && listKind != reflect.Slice && listKind != reflect.Map {\n \t\treturn Fail(t, fmt.Sprintf(\"%q has an unsupported type %s\", list, listKind), msgAndArgs...)\n \t}\n \n+\tsubsetKind := reflect.TypeOf(subset).Kind()\n \tif subsetKind != reflect.Array && subsetKind != reflect.Slice && listKind != reflect.Map {\n \t\treturn Fail(t, fmt.Sprintf(\"%q has an unsupported type %s\", subset, subsetKind), msgAndArgs...)\n \t}\n \n-\tsubsetValue := reflect.ValueOf(subset)\n \tif subsetKind == reflect.Map && listKind == reflect.Map {\n-\t\tlistValue := reflect.ValueOf(list)\n-\t\tsubsetKeys := subsetValue.MapKeys()\n+\t\tsubsetMap := reflect.ValueOf(subset)\n+\t\tactualMap := reflect.ValueOf(list)\n \n-\t\tfor i := 0; i < len(subsetKeys); i++ {\n-\t\t\tsubsetKey := subsetKeys[i]\n-\t\t\tsubsetElement := subsetValue.MapIndex(subsetKey).Interface()\n-\t\t\tlistElement := listValue.MapIndex(subsetKey).Interface()\n+\t\tfor _, k := range subsetMap.MapKeys() {\n+\t\t\tev := subsetMap.MapIndex(k)\n+\t\t\tav := actualMap.MapIndex(k)\n \n-\t\t\tif !ObjectsAreEqual(subsetElement, listElement) {\n-\t\t\t\treturn Fail(t, fmt.Sprintf(\"\\\"%s\\\" does not contain \\\"%s\\\"\", list, subsetElement), msgAndArgs...)\n+\t\t\tif !av.IsValid() {\n+\t\t\t\treturn Fail(t, fmt.Sprintf(\"%#v does not contain %#v\", list, subset), msgAndArgs...)\n+\t\t\t}\n+\t\t\tif !ObjectsAreEqual(ev.Interface(), av.Interface()) {\n+\t\t\t\treturn Fail(t, fmt.Sprintf(\"%#v does not contain %#v\", list, subset), msgAndArgs...)\n \t\t\t}\n \t\t}\n \n \t\treturn true\n \t}\n \n-\tfor i := 0; i < subsetValue.Len(); i++ {\n-\t\telement := subsetValue.Index(i).Interface()\n+\tsubsetList := reflect.ValueOf(subset)\n+\tfor i := 0; i < subsetList.Len(); i++ {\n+\t\telement := subsetList.Index(i).Interface()\n \t\tok, found := containsElement(list, element)\n \t\tif !ok {\n-\t\t\treturn Fail(t, fmt.Sprintf(\"\\\"%s\\\" could not be applied builtin len()\", list), msgAndArgs...)\n+\t\t\treturn Fail(t, fmt.Sprintf(\"%#v could not be applied builtin len()\", list), msgAndArgs...)\n \t\t}\n \t\tif !found {\n-\t\t\treturn Fail(t, fmt.Sprintf(\"\\\"%s\\\" does not contain \\\"%s\\\"\", list, element), msgAndArgs...)\n+\t\t\treturn Fail(t, fmt.Sprintf(\"%#v does not contain %#v\", list, element), msgAndArgs...)\n \t\t}\n \t}\n \n@@ -879,43 +872,38 @@ func NotSubset(t TestingT, list, subset interface{}, msgAndArgs ...interface{})\n \t\treturn Fail(t, \"nil is the empty set which is a subset of every set\", msgAndArgs...)\n \t}\n \n-\tdefer func() {\n-\t\tif e := recover(); e != nil {\n-\t\t\tok = false\n-\t\t}\n-\t}()\n-\n \tlistKind := reflect.TypeOf(list).Kind()\n-\tsubsetKind := reflect.TypeOf(subset).Kind()\n-\n \tif listKind != reflect.Array && listKind != reflect.Slice && listKind != reflect.Map {\n \t\treturn Fail(t, fmt.Sprintf(\"%q has an unsupported type %s\", list, listKind), msgAndArgs...)\n \t}\n \n+\tsubsetKind := reflect.TypeOf(subset).Kind()\n \tif subsetKind != reflect.Array && subsetKind != reflect.Slice && listKind != reflect.Map {\n \t\treturn Fail(t, fmt.Sprintf(\"%q has an unsupported type %s\", subset, subsetKind), msgAndArgs...)\n \t}\n \n-\tsubsetValue := reflect.ValueOf(subset)\n \tif subsetKind == reflect.Map && listKind == reflect.Map {\n-\t\tlistValue := reflect.ValueOf(list)\n-\t\tsubsetKeys := subsetValue.MapKeys()\n+\t\tsubsetMap := reflect.ValueOf(subset)\n+\t\tactualMap := reflect.ValueOf(list)\n \n-\t\tfor i := 0; i < len(subsetKeys); i++ {\n-\t\t\tsubsetKey := subsetKeys[i]\n-\t\t\tsubsetElement := subsetValue.MapIndex(subsetKey).Interface()\n-\t\t\tlistElement := listValue.MapIndex(subsetKey).Interface()\n+\t\tfor _, k := range subsetMap.MapKeys() {\n+\t\t\tev := subsetMap.MapIndex(k)\n+\t\t\tav := actualMap.MapIndex(k)\n \n-\t\t\tif !ObjectsAreEqual(subsetElement, listElement) {\n+\t\t\tif !av.IsValid() {\n+\t\t\t\treturn true\n+\t\t\t}\n+\t\t\tif !ObjectsAreEqual(ev.Interface(), av.Interface()) {\n \t\t\t\treturn true\n \t\t\t}\n \t\t}\n \n \t\treturn Fail(t, fmt.Sprintf(\"%q is a subset of %q\", subset, list), msgAndArgs...)\n \t}\n \n-\tfor i := 0; i < subsetValue.Len(); i++ {\n-\t\telement := subsetValue.Index(i).Interface()\n+\tsubsetList := reflect.ValueOf(subset)\n+\tfor i := 0; i < subsetList.Len(); i++ {\n+\t\telement := subsetList.Index(i).Interface()\n \t\tok, found := containsElement(list, element)\n \t\tif !ok {\n \t\t\treturn Fail(t, fmt.Sprintf(\"\\\"%s\\\" could not be applied builtin len()\", list), msgAndArgs...)"
    },
    {
      "sha": "0bceef6fa4c7d7ae163985ad6d78d023b502dae5",
      "filename": "backend/vendor/github.com/youmark/pkcs8/.travis.yml",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2F.travis.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2F.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2F.travis.yml?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,13 +1,8 @@\n-arch:\n-    - amd64\n-    - ppc64le\n language: go\n \n go:\n+  - \"1.9.x\"\n   - \"1.10.x\"\n-  - \"1.11.x\"\n-  - \"1.12.x\"\n-  - \"1.13.x\"\n   - master\n \n script:"
    },
    {
      "sha": "f2167dbfe7865d6ee241a47f9eb505d57064a504",
      "filename": "backend/vendor/github.com/youmark/pkcs8/README.md",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2FREADME.md?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -8,15 +8,14 @@ pkcs8 package fills the gap here. It implements functions to process private key\n [**Godoc**](http://godoc.org/github.com/youmark/pkcs8)\n \n ## Installation\n-Supports Go 1.10+. Release v1.1 is the last release supporting Go 1.9 \n+Supports Go 1.9+\n \n ```text\n go get github.com/youmark/pkcs8\n ```\n ## dependency\n-This package depends on golang.org/x/crypto/pbkdf2 and golang.org/x/crypto/scrypt packages. Use the following command to retrieve them\n+This package depends on golang.org/x/crypto/pbkdf2 package. Use the following command to retrive pbkdf2 package\n ```text\n go get golang.org/x/crypto/pbkdf2\n-go get golang.org/x/crypto/scrypt\n ```\n "
    },
    {
      "sha": "2946c93e89c6861931d4fedbdea9f65153c5d2fc",
      "filename": "backend/vendor/github.com/youmark/pkcs8/cipher.go",
      "status": "removed",
      "additions": 0,
      "deletions": 60,
      "changes": 60,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fcipher.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fcipher.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fcipher.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,60 +0,0 @@\n-package pkcs8\n-\n-import (\n-\t\"bytes\"\n-\t\"crypto/cipher\"\n-\t\"encoding/asn1\"\n-)\n-\n-type cipherWithBlock struct {\n-\toid      asn1.ObjectIdentifier\n-\tivSize   int\n-\tkeySize  int\n-\tnewBlock func(key []byte) (cipher.Block, error)\n-}\n-\n-func (c cipherWithBlock) IVSize() int {\n-\treturn c.ivSize\n-}\n-\n-func (c cipherWithBlock) KeySize() int {\n-\treturn c.keySize\n-}\n-\n-func (c cipherWithBlock) OID() asn1.ObjectIdentifier {\n-\treturn c.oid\n-}\n-\n-func (c cipherWithBlock) Encrypt(key, iv, plaintext []byte) ([]byte, error) {\n-\tblock, err := c.newBlock(key)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\treturn cbcEncrypt(block, key, iv, plaintext)\n-}\n-\n-func (c cipherWithBlock) Decrypt(key, iv, ciphertext []byte) ([]byte, error) {\n-\tblock, err := c.newBlock(key)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\treturn cbcDecrypt(block, key, iv, ciphertext)\n-}\n-\n-func cbcEncrypt(block cipher.Block, key, iv, plaintext []byte) ([]byte, error) {\n-\tmode := cipher.NewCBCEncrypter(block, iv)\n-\tpaddingLen := block.BlockSize() - (len(plaintext) % block.BlockSize())\n-\tciphertext := make([]byte, len(plaintext)+paddingLen)\n-\tcopy(ciphertext, plaintext)\n-\tcopy(ciphertext[len(plaintext):], bytes.Repeat([]byte{byte(paddingLen)}, paddingLen))\n-\tmode.CryptBlocks(ciphertext, ciphertext)\n-\treturn ciphertext, nil\n-}\n-\n-func cbcDecrypt(block cipher.Block, key, iv, ciphertext []byte) ([]byte, error) {\n-\tmode := cipher.NewCBCDecrypter(block, iv)\n-\tplaintext := make([]byte, len(ciphertext))\n-\tmode.CryptBlocks(plaintext, ciphertext)\n-\t// TODO: remove padding\n-\treturn plaintext, nil\n-}"
    },
    {
      "sha": "5629664409dd8f67f72201df6fabca997b9da542",
      "filename": "backend/vendor/github.com/youmark/pkcs8/cipher_3des.go",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fcipher_3des.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fcipher_3des.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fcipher_3des.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,24 +0,0 @@\n-package pkcs8\n-\n-import (\n-\t\"crypto/des\"\n-\t\"encoding/asn1\"\n-)\n-\n-var (\n-\toidDESEDE3CBC = asn1.ObjectIdentifier{1, 2, 840, 113549, 3, 7}\n-)\n-\n-func init() {\n-\tRegisterCipher(oidDESEDE3CBC, func() Cipher {\n-\t\treturn TripleDESCBC\n-\t})\n-}\n-\n-// TripleDESCBC is the 168-bit key 3DES cipher in CBC mode.\n-var TripleDESCBC = cipherWithBlock{\n-\tivSize:   des.BlockSize,\n-\tkeySize:  24,\n-\tnewBlock: des.NewTripleDESCipher,\n-\toid:      oidDESEDE3CBC,\n-}"
    },
    {
      "sha": "c0372d1eeba49c4e1f96c468bd5b58ec1f8f2d95",
      "filename": "backend/vendor/github.com/youmark/pkcs8/cipher_aes.go",
      "status": "removed",
      "additions": 0,
      "deletions": 84,
      "changes": 84,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fcipher_aes.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fcipher_aes.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fcipher_aes.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,84 +0,0 @@\n-package pkcs8\n-\n-import (\n-\t\"crypto/aes\"\n-\t\"encoding/asn1\"\n-)\n-\n-var (\n-\toidAES128CBC = asn1.ObjectIdentifier{2, 16, 840, 1, 101, 3, 4, 1, 2}\n-\toidAES128GCM = asn1.ObjectIdentifier{2, 16, 840, 1, 101, 3, 4, 1, 6}\n-\toidAES192CBC = asn1.ObjectIdentifier{2, 16, 840, 1, 101, 3, 4, 1, 22}\n-\toidAES192GCM = asn1.ObjectIdentifier{2, 16, 840, 1, 101, 3, 4, 1, 26}\n-\toidAES256CBC = asn1.ObjectIdentifier{2, 16, 840, 1, 101, 3, 4, 1, 42}\n-\toidAES256GCM = asn1.ObjectIdentifier{2, 16, 840, 1, 101, 3, 4, 1, 46}\n-)\n-\n-func init() {\n-\tRegisterCipher(oidAES128CBC, func() Cipher {\n-\t\treturn AES128CBC\n-\t})\n-\tRegisterCipher(oidAES128GCM, func() Cipher {\n-\t\treturn AES128GCM\n-\t})\n-\tRegisterCipher(oidAES192CBC, func() Cipher {\n-\t\treturn AES192CBC\n-\t})\n-\tRegisterCipher(oidAES192GCM, func() Cipher {\n-\t\treturn AES192GCM\n-\t})\n-\tRegisterCipher(oidAES256CBC, func() Cipher {\n-\t\treturn AES256CBC\n-\t})\n-\tRegisterCipher(oidAES256GCM, func() Cipher {\n-\t\treturn AES256GCM\n-\t})\n-}\n-\n-// AES128CBC is the 128-bit key AES cipher in CBC mode.\n-var AES128CBC = cipherWithBlock{\n-\tivSize:   aes.BlockSize,\n-\tkeySize:  16,\n-\tnewBlock: aes.NewCipher,\n-\toid:      oidAES128CBC,\n-}\n-\n-// AES128GCM is the 128-bit key AES cipher in GCM mode.\n-var AES128GCM = cipherWithBlock{\n-\tivSize:   aes.BlockSize,\n-\tkeySize:  16,\n-\tnewBlock: aes.NewCipher,\n-\toid:      oidAES128GCM,\n-}\n-\n-// AES192CBC is the 192-bit key AES cipher in CBC mode.\n-var AES192CBC = cipherWithBlock{\n-\tivSize:   aes.BlockSize,\n-\tkeySize:  24,\n-\tnewBlock: aes.NewCipher,\n-\toid:      oidAES192CBC,\n-}\n-\n-// AES192GCM is the 912-bit key AES cipher in GCM mode.\n-var AES192GCM = cipherWithBlock{\n-\tivSize:   aes.BlockSize,\n-\tkeySize:  24,\n-\tnewBlock: aes.NewCipher,\n-\toid:      oidAES192GCM,\n-}\n-\n-// AES256CBC is the 256-bit key AES cipher in CBC mode.\n-var AES256CBC = cipherWithBlock{\n-\tivSize:   aes.BlockSize,\n-\tkeySize:  32,\n-\tnewBlock: aes.NewCipher,\n-\toid:      oidAES256CBC,\n-}\n-\n-// AES256GCM is the 256-bit key AES cipher in GCM mode.\n-var AES256GCM = cipherWithBlock{\n-\tivSize:   aes.BlockSize,\n-\tkeySize:  32,\n-\tnewBlock: aes.NewCipher,\n-\toid:      oidAES256GCM,\n-}"
    },
    {
      "sha": "79697dd82bb997423f987d52f40863a8ea1ba01d",
      "filename": "backend/vendor/github.com/youmark/pkcs8/kdf_pbkdf2.go",
      "status": "removed",
      "additions": 0,
      "deletions": 91,
      "changes": 91,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fkdf_pbkdf2.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fkdf_pbkdf2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fkdf_pbkdf2.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,91 +0,0 @@\n-package pkcs8\n-\n-import (\n-\t\"crypto\"\n-\t\"crypto/sha1\"\n-\t\"crypto/sha256\"\n-\t\"crypto/x509/pkix\"\n-\t\"encoding/asn1\"\n-\t\"errors\"\n-\t\"hash\"\n-\n-\t\"golang.org/x/crypto/pbkdf2\"\n-)\n-\n-var (\n-\toidPKCS5PBKDF2        = asn1.ObjectIdentifier{1, 2, 840, 113549, 1, 5, 12}\n-\toidHMACWithSHA1       = asn1.ObjectIdentifier{1, 2, 840, 113549, 2, 7}\n-\toidHMACWithSHA256     = asn1.ObjectIdentifier{1, 2, 840, 113549, 2, 9}\n-)\n-\n-func init() {\n-\tRegisterKDF(oidPKCS5PBKDF2, func() KDFParameters {\n-\t\treturn new(pbkdf2Params)\n-\t})\n-}\n-\n-func newHashFromPRF(ai pkix.AlgorithmIdentifier) (func() hash.Hash, error) {\n-\tswitch {\n-\tcase len(ai.Algorithm) == 0 || ai.Algorithm.Equal(oidHMACWithSHA1):\n-\t\treturn sha1.New, nil\n-\tcase ai.Algorithm.Equal(oidHMACWithSHA256):\n-\t\treturn sha256.New, nil\n-\tdefault:\n-\t\treturn nil, errors.New(\"pkcs8: unsupported hash function\")\n-\t}\n-}\n-\n-func newPRFParamFromHash(h crypto.Hash) (pkix.AlgorithmIdentifier, error) {\n-\tswitch h {\n-\tcase crypto.SHA1:\n-\t\treturn pkix.AlgorithmIdentifier{\n-\t\t\tAlgorithm:  oidHMACWithSHA1,\n-\t\t\tParameters: asn1.RawValue{Tag: asn1.TagNull}}, nil\n-\tcase crypto.SHA256:\n-\t\treturn pkix.AlgorithmIdentifier{\n-\t\t\tAlgorithm:  oidHMACWithSHA256,\n-\t\t\tParameters: asn1.RawValue{Tag: asn1.TagNull}}, nil\n-\t}\n-\treturn pkix.AlgorithmIdentifier{}, errors.New(\"pkcs8: unsupported hash function\")\n-}\n-\n-type pbkdf2Params struct {\n-\tSalt           []byte\n-\tIterationCount int\n-\tPRF            pkix.AlgorithmIdentifier `asn1:\"optional\"`\n-}\n-\n-func (p pbkdf2Params) DeriveKey(password []byte, size int) (key []byte, err error) {\n-\th, err := newHashFromPRF(p.PRF)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\treturn pbkdf2.Key(password, p.Salt, p.IterationCount, size, h), nil\n-}\n-\n-// PBKDF2Opts contains options for the PBKDF2 key derivation function.\n-type PBKDF2Opts struct {\n-\tSaltSize       int\n-\tIterationCount int\n-\tHMACHash       crypto.Hash\n-}\n-\n-func (p PBKDF2Opts) DeriveKey(password, salt []byte, size int) (\n-\tkey []byte, params KDFParameters, err error) {\n-\n-\tkey = pbkdf2.Key(password, salt, p.IterationCount, size, p.HMACHash.New)\n-\tprfParam, err := newPRFParamFromHash(p.HMACHash)\n-\tif err != nil {\n-\t\treturn nil, nil, err\n-\t}\n-\tparams = pbkdf2Params{salt, p.IterationCount, prfParam}\n-\treturn key, params, nil\n-}\n-\n-func (p PBKDF2Opts) GetSaltSize() int {\n-\treturn p.SaltSize\n-}\n-\n-func (p PBKDF2Opts) OID() asn1.ObjectIdentifier {\n-\treturn oidPKCS5PBKDF2\n-}"
    },
    {
      "sha": "36c4f4f59513727e557a3f0fe4f8926bcb728992",
      "filename": "backend/vendor/github.com/youmark/pkcs8/kdf_scrypt.go",
      "status": "removed",
      "additions": 0,
      "deletions": 62,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fkdf_scrypt.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fkdf_scrypt.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fkdf_scrypt.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,62 +0,0 @@\n-package pkcs8\n-\n-import (\n-\t\"encoding/asn1\"\n-\n-\t\"golang.org/x/crypto/scrypt\"\n-)\n-\n-var (\n-\toidScrypt = asn1.ObjectIdentifier{1, 3, 6, 1, 4, 1, 11591, 4, 11}\n-)\n-\n-func init() {\n-\tRegisterKDF(oidScrypt, func() KDFParameters {\n-\t\treturn new(scryptParams)\n-\t})\n-}\n-\n-type scryptParams struct {\n-\tSalt                     []byte\n-\tCostParameter            int\n-\tBlockSize                int\n-\tParallelizationParameter int\n-}\n-\n-func (p scryptParams) DeriveKey(password []byte, size int) (key []byte, err error) {\n-\treturn scrypt.Key(password, p.Salt, p.CostParameter, p.BlockSize,\n-\t\tp.ParallelizationParameter, size)\n-}\n-\n-// ScryptOpts contains options for the scrypt key derivation function.\n-type ScryptOpts struct {\n-\tSaltSize                 int\n-\tCostParameter            int\n-\tBlockSize                int\n-\tParallelizationParameter int\n-}\n-\n-func (p ScryptOpts) DeriveKey(password, salt []byte, size int) (\n-\tkey []byte, params KDFParameters, err error) {\n-\n-\tkey, err = scrypt.Key(password, salt, p.CostParameter, p.BlockSize,\n-\t\tp.ParallelizationParameter, size)\n-\tif err != nil {\n-\t\treturn nil, nil, err\n-\t}\n-\tparams = scryptParams{\n-\t\tBlockSize:                p.BlockSize,\n-\t\tCostParameter:            p.CostParameter,\n-\t\tParallelizationParameter: p.ParallelizationParameter,\n-\t\tSalt:                     salt,\n-\t}\n-\treturn key, params, nil\n-}\n-\n-func (p ScryptOpts) GetSaltSize() int {\n-\treturn p.SaltSize\n-}\n-\n-func (p ScryptOpts) OID() asn1.ObjectIdentifier {\n-\treturn oidScrypt\n-}"
    },
    {
      "sha": "9270a7970f713d18b72e2cc45a7b04e0092a78be",
      "filename": "backend/vendor/github.com/youmark/pkcs8/pkcs8.go",
      "status": "modified",
      "additions": 208,
      "deletions": 212,
      "changes": 420,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fpkcs8.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fpkcs8.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2Fpkcs8.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -2,308 +2,304 @@\n package pkcs8\n \n import (\n-\t\"crypto\"\n+\t\"crypto/aes\"\n+\t\"crypto/cipher\"\n+\t\"crypto/des\"\n \t\"crypto/ecdsa\"\n+\t\"crypto/elliptic\"\n \t\"crypto/rand\"\n \t\"crypto/rsa\"\n+\t\"crypto/sha1\"\n+\t\"crypto/sha256\"\n \t\"crypto/x509\"\n-\t\"crypto/x509/pkix\"\n \t\"encoding/asn1\"\n \t\"errors\"\n-\t\"fmt\"\n+\n+\t\"golang.org/x/crypto/pbkdf2\"\n )\n \n-// DefaultOpts are the default options for encrypting a key if none are given.\n-// The defaults can be changed by the library user.\n-var DefaultOpts = &Opts{\n-\tCipher: AES256CBC,\n-\tKDFOpts: PBKDF2Opts{\n-\t\tSaltSize:       8,\n-\t\tIterationCount: 10000,\n-\t\tHMACHash:       crypto.SHA256,\n-\t},\n-}\n+// Copy from crypto/x509\n+var (\n+\toidPublicKeyRSA   = asn1.ObjectIdentifier{1, 2, 840, 113549, 1, 1, 1}\n+\toidPublicKeyDSA   = asn1.ObjectIdentifier{1, 2, 840, 10040, 4, 1}\n+\toidPublicKeyECDSA = asn1.ObjectIdentifier{1, 2, 840, 10045, 2, 1}\n+)\n \n-// KDFOpts contains options for a key derivation function.\n-// An implementation of this interface must be specified when encrypting a PKCS#8 key.\n-type KDFOpts interface {\n-\t// DeriveKey derives a key of size bytes from the given password and salt.\n-\t// It returns the key and the ASN.1-encodable parameters used.\n-\tDeriveKey(password, salt []byte, size int) (key []byte, params KDFParameters, err error)\n-\t// GetSaltSize returns the salt size specified.\n-\tGetSaltSize() int\n-\t// OID returns the OID of the KDF specified.\n-\tOID() asn1.ObjectIdentifier\n-}\n+// Copy from crypto/x509\n+var (\n+\toidNamedCurveP224 = asn1.ObjectIdentifier{1, 3, 132, 0, 33}\n+\toidNamedCurveP256 = asn1.ObjectIdentifier{1, 2, 840, 10045, 3, 1, 7}\n+\toidNamedCurveP384 = asn1.ObjectIdentifier{1, 3, 132, 0, 34}\n+\toidNamedCurveP521 = asn1.ObjectIdentifier{1, 3, 132, 0, 35}\n+)\n \n-// KDFParameters contains parameters (salt, etc.) for a key deriviation function.\n-// It must be a ASN.1-decodable structure.\n-// An implementation of this interface is created when decoding an encrypted PKCS#8 key.\n-type KDFParameters interface {\n-\t// DeriveKey derives a key of size bytes from the given password.\n-\t// It uses the salt from the decoded parameters.\n-\tDeriveKey(password []byte, size int) (key []byte, err error)\n+// Copy from crypto/x509\n+func oidFromNamedCurve(curve elliptic.Curve) (asn1.ObjectIdentifier, bool) {\n+\tswitch curve {\n+\tcase elliptic.P224():\n+\t\treturn oidNamedCurveP224, true\n+\tcase elliptic.P256():\n+\t\treturn oidNamedCurveP256, true\n+\tcase elliptic.P384():\n+\t\treturn oidNamedCurveP384, true\n+\tcase elliptic.P521():\n+\t\treturn oidNamedCurveP521, true\n+\t}\n+\n+\treturn nil, false\n }\n \n-var kdfs = make(map[string]func() KDFParameters)\n+// Unecrypted PKCS8\n+var (\n+\toidPKCS5PBKDF2    = asn1.ObjectIdentifier{1, 2, 840, 113549, 1, 5, 12}\n+\toidPBES2          = asn1.ObjectIdentifier{1, 2, 840, 113549, 1, 5, 13}\n+\toidAES256CBC      = asn1.ObjectIdentifier{2, 16, 840, 1, 101, 3, 4, 1, 42}\n+\toidAES128CBC      = asn1.ObjectIdentifier{2, 16, 840, 1, 101, 3, 4, 1, 2}\n+\toidHMACWithSHA256 = asn1.ObjectIdentifier{1, 2, 840, 113549, 2, 9}\n+\toidDESEDE3CBC     = asn1.ObjectIdentifier{1, 2, 840, 113549, 3, 7}\n+)\n \n-// RegisterKDF registers a function that returns a new instance of the given KDF\n-// parameters. This allows the library to support client-provided KDFs.\n-func RegisterKDF(oid asn1.ObjectIdentifier, params func() KDFParameters) {\n-\tkdfs[oid.String()] = params\n+type ecPrivateKey struct {\n+\tVersion       int\n+\tPrivateKey    []byte\n+\tNamedCurveOID asn1.ObjectIdentifier `asn1:\"optional,explicit,tag:0\"`\n+\tPublicKey     asn1.BitString        `asn1:\"optional,explicit,tag:1\"`\n }\n \n-// Cipher represents a cipher for encrypting the key material.\n-type Cipher interface {\n-\t// IVSize returns the IV size of the cipher, in bytes.\n-\tIVSize() int\n-\t// KeySize returns the key size of the cipher, in bytes.\n-\tKeySize() int\n-\t// Encrypt encrypts the key material.\n-\tEncrypt(key, iv, plaintext []byte) ([]byte, error)\n-\t// Decrypt decrypts the key material.\n-\tDecrypt(key, iv, ciphertext []byte) ([]byte, error)\n-\t// OID returns the OID of the cipher specified.\n-\tOID() asn1.ObjectIdentifier\n+type privateKeyInfo struct {\n+\tVersion             int\n+\tPrivateKeyAlgorithm []asn1.ObjectIdentifier\n+\tPrivateKey          []byte\n }\n \n-var ciphers = make(map[string]func() Cipher)\n-\n-// RegisterCipher registers a function that returns a new instance of the given\n-// cipher. This allows the library to support client-provided ciphers.\n-func RegisterCipher(oid asn1.ObjectIdentifier, cipher func() Cipher) {\n-\tciphers[oid.String()] = cipher\n+// Encrypted PKCS8\n+type prfParam struct {\n+\tIdPRF     asn1.ObjectIdentifier\n+\tNullParam asn1.RawValue\n }\n \n-// Opts contains options for encrypting a PKCS#8 key.\n-type Opts struct {\n-\tCipher  Cipher\n-\tKDFOpts KDFOpts\n+type pbkdf2Params struct {\n+\tSalt           []byte\n+\tIterationCount int\n+\tPrfParam       prfParam `asn1:\"optional\"`\n }\n \n-// Unecrypted PKCS8\n-var (\n-\toidPBES2 = asn1.ObjectIdentifier{1, 2, 840, 113549, 1, 5, 13}\n-)\n+type pbkdf2Algorithms struct {\n+\tIdPBKDF2     asn1.ObjectIdentifier\n+\tPBKDF2Params pbkdf2Params\n+}\n \n-type encryptedPrivateKeyInfo struct {\n-\tEncryptionAlgorithm pkix.AlgorithmIdentifier\n-\tEncryptedData       []byte\n+type pbkdf2Encs struct {\n+\tEncryAlgo asn1.ObjectIdentifier\n+\tIV        []byte\n }\n \n type pbes2Params struct {\n-\tKeyDerivationFunc pkix.AlgorithmIdentifier\n-\tEncryptionScheme  pkix.AlgorithmIdentifier\n+\tKeyDerivationFunc pbkdf2Algorithms\n+\tEncryptionScheme  pbkdf2Encs\n }\n \n-type privateKeyInfo struct {\n-\tVersion             int\n-\tPrivateKeyAlgorithm pkix.AlgorithmIdentifier\n-\tPrivateKey          []byte\n+type pbes2Algorithms struct {\n+\tIdPBES2     asn1.ObjectIdentifier\n+\tPBES2Params pbes2Params\n }\n \n-func parseKeyDerivationFunc(keyDerivationFunc pkix.AlgorithmIdentifier) (KDFParameters, error) {\n-\toid := keyDerivationFunc.Algorithm.String()\n-\tnewParams, ok := kdfs[oid]\n-\tif !ok {\n-\t\treturn nil, fmt.Errorf(\"pkcs8: unsupported KDF (OID: %s)\", oid)\n-\t}\n-\tparams := newParams()\n-\t_, err := asn1.Unmarshal(keyDerivationFunc.Parameters.FullBytes, params)\n+type encryptedPrivateKeyInfo struct {\n+\tEncryptionAlgorithm pbes2Algorithms\n+\tEncryptedData       []byte\n+}\n+\n+// ParsePKCS8PrivateKeyRSA parses encrypted/unencrypted private keys in PKCS#8 format. To parse encrypted private keys, a password of []byte type should be provided to the function as the second parameter.\n+//\n+// The function can decrypt the private key encrypted with AES-256-CBC mode, and stored in PKCS #5 v2.0 format.\n+func ParsePKCS8PrivateKeyRSA(der []byte, v ...[]byte) (*rsa.PrivateKey, error) {\n+\tkey, err := ParsePKCS8PrivateKey(der, v...)\n \tif err != nil {\n-\t\treturn nil, errors.New(\"pkcs8: invalid KDF parameters\")\n+\t\treturn nil, err\n \t}\n-\treturn params, nil\n+\ttypedKey, ok := key.(*rsa.PrivateKey)\n+\tif !ok {\n+\t\treturn nil, errors.New(\"key block is not of type RSA\")\n+\t}\n+\treturn typedKey, nil\n }\n \n-func parseEncryptionScheme(encryptionScheme pkix.AlgorithmIdentifier) (Cipher, []byte, error) {\n-\toid := encryptionScheme.Algorithm.String()\n-\tnewCipher, ok := ciphers[oid]\n-\tif !ok {\n-\t\treturn nil, nil, fmt.Errorf(\"pkcs8: unsupported cipher (OID: %s)\", oid)\n+// ParsePKCS8PrivateKeyECDSA parses encrypted/unencrypted private keys in PKCS#8 format. To parse encrypted private keys, a password of []byte type should be provided to the function as the second parameter.\n+//\n+// The function can decrypt the private key encrypted with AES-256-CBC mode, and stored in PKCS #5 v2.0 format.\n+func ParsePKCS8PrivateKeyECDSA(der []byte, v ...[]byte) (*ecdsa.PrivateKey, error) {\n+\tkey, err := ParsePKCS8PrivateKey(der, v...)\n+\tif err != nil {\n+\t\treturn nil, err\n \t}\n-\tcipher := newCipher()\n-\tvar iv []byte\n-\tif _, err := asn1.Unmarshal(encryptionScheme.Parameters.FullBytes, &iv); err != nil {\n-\t\treturn nil, nil, errors.New(\"pkcs8: invalid cipher parameters\")\n+\ttypedKey, ok := key.(*ecdsa.PrivateKey)\n+\tif !ok {\n+\t\treturn nil, errors.New(\"key block is not of type ECDSA\")\n \t}\n-\treturn cipher, iv, nil\n+\treturn typedKey, nil\n }\n \n-// ParsePrivateKey parses a DER-encoded PKCS#8 private key.\n-// Password can be nil.\n-// This is equivalent to ParsePKCS8PrivateKey.\n-func ParsePrivateKey(der []byte, password []byte) (interface{}, KDFParameters, error) {\n+// ParsePKCS8PrivateKey parses encrypted/unencrypted private keys in PKCS#8 format. To parse encrypted private keys, a password of []byte type should be provided to the function as the second parameter.\n+//\n+// The function can decrypt the private key encrypted with AES-256-CBC mode, and stored in PKCS #5 v2.0 format.\n+func ParsePKCS8PrivateKey(der []byte, v ...[]byte) (interface{}, error) {\n \t// No password provided, assume the private key is unencrypted\n-\tif len(password) == 0 {\n-\t\tprivateKey, err := x509.ParsePKCS8PrivateKey(der)\n-\t\treturn privateKey, nil, err\n+\tif v == nil {\n+\t\treturn x509.ParsePKCS8PrivateKey(der)\n \t}\n \n \t// Use the password provided to decrypt the private key\n+\tpassword := v[0]\n \tvar privKey encryptedPrivateKeyInfo\n \tif _, err := asn1.Unmarshal(der, &privKey); err != nil {\n-\t\treturn nil, nil, errors.New(\"pkcs8: only PKCS #5 v2.0 supported\")\n+\t\treturn nil, errors.New(\"pkcs8: only PKCS #5 v2.0 supported\")\n \t}\n \n-\tif !privKey.EncryptionAlgorithm.Algorithm.Equal(oidPBES2) {\n-\t\treturn nil, nil, errors.New(\"pkcs8: only PBES2 supported\")\n+\tif !privKey.EncryptionAlgorithm.IdPBES2.Equal(oidPBES2) {\n+\t\treturn nil, errors.New(\"pkcs8: only PBES2 supported\")\n \t}\n \n-\tvar params pbes2Params\n-\tif _, err := asn1.Unmarshal(privKey.EncryptionAlgorithm.Parameters.FullBytes, &params); err != nil {\n-\t\treturn nil, nil, errors.New(\"pkcs8: invalid PBES2 parameters\")\n+\tif !privKey.EncryptionAlgorithm.PBES2Params.KeyDerivationFunc.IdPBKDF2.Equal(oidPKCS5PBKDF2) {\n+\t\treturn nil, errors.New(\"pkcs8: only PBKDF2 supported\")\n \t}\n \n-\tcipher, iv, err := parseEncryptionScheme(params.EncryptionScheme)\n-\tif err != nil {\n-\t\treturn nil, nil, err\n-\t}\n+\tencParam := privKey.EncryptionAlgorithm.PBES2Params.EncryptionScheme\n+\tkdfParam := privKey.EncryptionAlgorithm.PBES2Params.KeyDerivationFunc.PBKDF2Params\n \n-\tkdfParams, err := parseKeyDerivationFunc(params.KeyDerivationFunc)\n-\tif err != nil {\n-\t\treturn nil, nil, err\n-\t}\n-\n-\tkeySize := cipher.KeySize()\n-\tsymkey, err := kdfParams.DeriveKey(password, keySize)\n-\tif err != nil {\n-\t\treturn nil, nil, err\n+\tiv := encParam.IV\n+\tsalt := kdfParam.Salt\n+\titer := kdfParam.IterationCount\n+\tkeyHash := sha1.New\n+\tif kdfParam.PrfParam.IdPRF.Equal(oidHMACWithSHA256) {\n+\t\tkeyHash = sha256.New\n \t}\n \n \tencryptedKey := privKey.EncryptedData\n-\tdecryptedKey, err := cipher.Decrypt(symkey, iv, encryptedKey)\n+\tvar symkey []byte\n+\tvar block cipher.Block\n+\tvar err error\n+\tswitch {\n+\tcase encParam.EncryAlgo.Equal(oidAES128CBC):\n+\t\tsymkey = pbkdf2.Key(password, salt, iter, 16, keyHash)\n+\t\tblock, err = aes.NewCipher(symkey)\n+\tcase encParam.EncryAlgo.Equal(oidAES256CBC):\n+\t\tsymkey = pbkdf2.Key(password, salt, iter, 32, keyHash)\n+\t\tblock, err = aes.NewCipher(symkey)\n+\tcase encParam.EncryAlgo.Equal(oidDESEDE3CBC):\n+\t\tsymkey = pbkdf2.Key(password, salt, iter, 24, keyHash)\n+\t\tblock, err = des.NewTripleDESCipher(symkey)\n+\tdefault:\n+\t\treturn nil, errors.New(\"pkcs8: only AES-256-CBC, AES-128-CBC and DES-EDE3-CBC are supported\")\n+\t}\n \tif err != nil {\n-\t\treturn nil, nil, err\n+\t\treturn nil, err\n \t}\n+\tmode := cipher.NewCBCDecrypter(block, iv)\n+\tmode.CryptBlocks(encryptedKey, encryptedKey)\n \n-\tkey, err := x509.ParsePKCS8PrivateKey(decryptedKey)\n+\tkey, err := x509.ParsePKCS8PrivateKey(encryptedKey)\n \tif err != nil {\n-\t\treturn nil, nil, errors.New(\"pkcs8: incorrect password\")\n+\t\treturn nil, errors.New(\"pkcs8: incorrect password\")\n \t}\n-\treturn key, kdfParams, nil\n+\treturn key, nil\n }\n \n-// MarshalPrivateKey encodes a private key into DER-encoded PKCS#8 with the given options.\n-// Password can be nil.\n-func MarshalPrivateKey(priv interface{}, password []byte, opts *Opts) ([]byte, error) {\n-\tif len(password) == 0 {\n-\t\treturn x509.MarshalPKCS8PrivateKey(priv)\n-\t}\n-\n-\tif opts == nil {\n-\t\topts = DefaultOpts\n-\t}\n+func convertPrivateKeyToPKCS8(priv interface{}) ([]byte, error) {\n+\tvar pkey privateKeyInfo\n+\n+\tswitch priv := priv.(type) {\n+\tcase *ecdsa.PrivateKey:\n+\t\teckey, err := x509.MarshalECPrivateKey(priv)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\n+\t\toidNamedCurve, ok := oidFromNamedCurve(priv.Curve)\n+\t\tif !ok {\n+\t\t\treturn nil, errors.New(\"pkcs8: unknown elliptic curve\")\n+\t\t}\n+\n+\t\t// Per RFC5958, if publicKey is present, then version is set to v2(1) else version is set to v1(0).\n+\t\t// But openssl set to v1 even publicKey is present\n+\t\tpkey.Version = 1\n+\t\tpkey.PrivateKeyAlgorithm = make([]asn1.ObjectIdentifier, 2)\n+\t\tpkey.PrivateKeyAlgorithm[0] = oidPublicKeyECDSA\n+\t\tpkey.PrivateKeyAlgorithm[1] = oidNamedCurve\n+\t\tpkey.PrivateKey = eckey\n+\tcase *rsa.PrivateKey:\n+\n+\t\t// Per RFC5958, if publicKey is present, then version is set to v2(1) else version is set to v1(0).\n+\t\t// But openssl set to v1 even publicKey is present\n+\t\tpkey.Version = 0\n+\t\tpkey.PrivateKeyAlgorithm = make([]asn1.ObjectIdentifier, 1)\n+\t\tpkey.PrivateKeyAlgorithm[0] = oidPublicKeyRSA\n+\t\tpkey.PrivateKey = x509.MarshalPKCS1PrivateKey(priv)\n+\t}\n+\n+\treturn asn1.Marshal(pkey)\n+}\n \n+func convertPrivateKeyToPKCS8Encrypted(priv interface{}, password []byte) ([]byte, error) {\n \t// Convert private key into PKCS8 format\n-\tpkey, err := x509.MarshalPKCS8PrivateKey(priv)\n+\tpkey, err := convertPrivateKeyToPKCS8(priv)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \n-\tencAlg := opts.Cipher\n-\tsalt := make([]byte, opts.KDFOpts.GetSaltSize())\n+\t// Calculate key from password based on PKCS5 algorithm\n+\t// Use 8 byte salt, 16 byte IV, and 2048 iteration\n+\titer := 2048\n+\tsalt := make([]byte, 8)\n+\tiv := make([]byte, 16)\n \t_, err = rand.Read(salt)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\tiv := make([]byte, encAlg.IVSize())\n \t_, err = rand.Read(iv)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\tkey, kdfParams, err := opts.KDFOpts.DeriveKey(password, salt, encAlg.KeySize())\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n \n-\tencryptedKey, err := encAlg.Encrypt(key, iv, pkey)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n+\tkey := pbkdf2.Key(password, salt, iter, 32, sha256.New)\n \n-\tmarshalledParams, err := asn1.Marshal(kdfParams)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\tkeyDerivationFunc := pkix.AlgorithmIdentifier{\n-\t\tAlgorithm:  opts.KDFOpts.OID(),\n-\t\tParameters: asn1.RawValue{FullBytes: marshalledParams},\n-\t}\n-\tmarshalledIV, err := asn1.Marshal(iv)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\tencryptionScheme := pkix.AlgorithmIdentifier{\n-\t\tAlgorithm:  encAlg.OID(),\n-\t\tParameters: asn1.RawValue{FullBytes: marshalledIV},\n+\t// Use AES256-CBC mode, pad plaintext with PKCS5 padding scheme\n+\tpadding := aes.BlockSize - len(pkey)%aes.BlockSize\n+\tif padding > 0 {\n+\t\tn := len(pkey)\n+\t\tpkey = append(pkey, make([]byte, padding)...)\n+\t\tfor i := 0; i < padding; i++ {\n+\t\t\tpkey[n+i] = byte(padding)\n+\t\t}\n \t}\n \n-\tencryptionAlgorithmParams := pbes2Params{\n-\t\tEncryptionScheme:  encryptionScheme,\n-\t\tKeyDerivationFunc: keyDerivationFunc,\n-\t}\n-\tmarshalledEncryptionAlgorithmParams, err := asn1.Marshal(encryptionAlgorithmParams)\n+\tencryptedKey := make([]byte, len(pkey))\n+\tblock, err := aes.NewCipher(key)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\tencryptionAlgorithm := pkix.AlgorithmIdentifier{\n-\t\tAlgorithm:  oidPBES2,\n-\t\tParameters: asn1.RawValue{FullBytes: marshalledEncryptionAlgorithmParams},\n-\t}\n+\tmode := cipher.NewCBCEncrypter(block, iv)\n+\tmode.CryptBlocks(encryptedKey, pkey)\n \n-\tencryptedPkey := encryptedPrivateKeyInfo{\n-\t\tEncryptionAlgorithm: encryptionAlgorithm,\n-\t\tEncryptedData:       encryptedKey,\n-\t}\n+\t//\tpbkdf2algo := pbkdf2Algorithms{oidPKCS5PBKDF2, pbkdf2Params{salt, iter, prfParam{oidHMACWithSHA256}}}\n \n-\treturn asn1.Marshal(encryptedPkey)\n-}\n+\tpbkdf2algo := pbkdf2Algorithms{oidPKCS5PBKDF2, pbkdf2Params{salt, iter, prfParam{oidHMACWithSHA256, asn1.RawValue{Tag: asn1.TagNull}}}}\n+\tpbkdf2encs := pbkdf2Encs{oidAES256CBC, iv}\n+\tpbes2algo := pbes2Algorithms{oidPBES2, pbes2Params{pbkdf2algo, pbkdf2encs}}\n \n-// ParsePKCS8PrivateKey parses encrypted/unencrypted private keys in PKCS#8 format. To parse encrypted private keys, a password of []byte type should be provided to the function as the second parameter.\n-func ParsePKCS8PrivateKey(der []byte, v ...[]byte) (interface{}, error) {\n-\tvar password []byte\n-\tif len(v) > 0 {\n-\t\tpassword = v[0]\n-\t}\n-\tprivateKey, _, err := ParsePrivateKey(der, password)\n-\treturn privateKey, err\n-}\n-\n-// ParsePKCS8PrivateKeyRSA parses encrypted/unencrypted private keys in PKCS#8 format. To parse encrypted private keys, a password of []byte type should be provided to the function as the second parameter.\n-func ParsePKCS8PrivateKeyRSA(der []byte, v ...[]byte) (*rsa.PrivateKey, error) {\n-\tkey, err := ParsePKCS8PrivateKey(der, v...)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\ttypedKey, ok := key.(*rsa.PrivateKey)\n-\tif !ok {\n-\t\treturn nil, errors.New(\"key block is not of type RSA\")\n-\t}\n-\treturn typedKey, nil\n-}\n+\tencryptedPkey := encryptedPrivateKeyInfo{pbes2algo, encryptedKey}\n \n-// ParsePKCS8PrivateKeyECDSA parses encrypted/unencrypted private keys in PKCS#8 format. To parse encrypted private keys, a password of []byte type should be provided to the function as the second parameter.\n-func ParsePKCS8PrivateKeyECDSA(der []byte, v ...[]byte) (*ecdsa.PrivateKey, error) {\n-\tkey, err := ParsePKCS8PrivateKey(der, v...)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\ttypedKey, ok := key.(*ecdsa.PrivateKey)\n-\tif !ok {\n-\t\treturn nil, errors.New(\"key block is not of type ECDSA\")\n-\t}\n-\treturn typedKey, nil\n+\treturn asn1.Marshal(encryptedPkey)\n }\n \n // ConvertPrivateKeyToPKCS8 converts the private key into PKCS#8 format.\n // To encrypt the private key, the password of []byte type should be provided as the second parameter.\n //\n-// The only supported key types are RSA and ECDSA (*rsa.PrivateKey or *ecdsa.PrivateKey for priv)\n+// The only supported key types are RSA and ECDSA (*rsa.PublicKey or *ecdsa.PublicKey for priv)\n func ConvertPrivateKeyToPKCS8(priv interface{}, v ...[]byte) ([]byte, error) {\n-\tvar password []byte\n-\tif len(v) > 0 {\n-\t\tpassword = v[0]\n+\tif v == nil {\n+\t\treturn convertPrivateKeyToPKCS8(priv)\n \t}\n-\treturn MarshalPrivateKey(priv, password, nil)\n+\n+\tpassword := string(v[0])\n+\treturn convertPrivateKeyToPKCS8Encrypted(priv, []byte(password))\n }"
    },
    {
      "sha": "9fa948ebf9d5f939e73e67cfe01f298e7d6f41a8",
      "filename": "backend/vendor/go.etcd.io/bbolt/.gitignore",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2F.gitignore",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2F.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2F.gitignore?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -3,5 +3,8 @@\n *.swp\n /bin/\n cover.out\n+cover-*.out\n /.idea\n *.iml\n+/cmd/bbolt/bbolt\n+"
    },
    {
      "sha": "452601e49d6283d972c0aa518afd5b4e752cc2b1",
      "filename": "backend/vendor/go.etcd.io/bbolt/.travis.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 18,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2F.travis.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2F.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2F.travis.yml?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,18 +0,0 @@\n-language: go\n-go_import_path: go.etcd.io/bbolt\n-\n-sudo: false\n-\n-go:\n-- 1.15\n-\n-before_install:\n-- go get -v golang.org/x/sys/unix\n-- go get -v honnef.co/go/tools/...\n-- go get -v github.com/kisielk/errcheck\n-\n-script:\n-- make fmt\n-- make test\n-- make race\n-# - make errcheck"
    },
    {
      "sha": "18154c6388233e84f2718d8e1684b7766ed25575",
      "filename": "backend/vendor/go.etcd.io/bbolt/Makefile",
      "status": "modified",
      "additions": 49,
      "deletions": 22,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2FMakefile",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2FMakefile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2FMakefile?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -2,35 +2,62 @@ BRANCH=`git rev-parse --abbrev-ref HEAD`\n COMMIT=`git rev-parse --short HEAD`\n GOLDFLAGS=\"-X main.branch $(BRANCH) -X main.commit $(COMMIT)\"\n \n-race:\n-\t@TEST_FREELIST_TYPE=hashmap go test -v -race -test.run=\"TestSimulate_(100op|1000op)\"\n-\t@echo \"array freelist test\"\n-\t@TEST_FREELIST_TYPE=array go test -v -race -test.run=\"TestSimulate_(100op|1000op)\"\n-\n+TESTFLAGS_RACE=-race=false\n+ifdef ENABLE_RACE\n+\tTESTFLAGS_RACE=-race=true\n+endif\n+\n+TESTFLAGS_CPU=\n+ifdef CPU\n+\tTESTFLAGS_CPU=-cpu=$(CPU)\n+endif\n+TESTFLAGS = $(TESTFLAGS_RACE) $(TESTFLAGS_CPU) $(EXTRA_TESTFLAGS)\n+\n+.PHONY: fmt\n fmt:\n \t!(gofmt -l -s -d $(shell find . -name \\*.go) | grep '[a-z]')\n \n-# go get honnef.co/go/tools/simple\n-gosimple:\n-\tgosimple ./...\n+.PHONY: lint\n+lint:\n+\tgolangci-lint run ./...\n \n-# go get honnef.co/go/tools/unused\n-unused:\n-\tunused ./...\n+.PHONY: test\n+test:\n+\t@echo \"hashmap freelist test\"\n+\tTEST_FREELIST_TYPE=hashmap go test -v ${TESTFLAGS} -timeout 30m\n+\tTEST_FREELIST_TYPE=hashmap go test -v ${TESTFLAGS} ./cmd/bbolt\n \n-# go get github.com/kisielk/errcheck\n-errcheck:\n-\t@errcheck -ignorepkg=bytes -ignore=os:Remove go.etcd.io/bbolt\n+\t@echo \"array freelist test\"\n+\tTEST_FREELIST_TYPE=array go test -v ${TESTFLAGS} -timeout 30m\n+\tTEST_FREELIST_TYPE=array go test -v ${TESTFLAGS} ./cmd/bbolt\n \n-test:\n-\tTEST_FREELIST_TYPE=hashmap go test -timeout 20m -v -coverprofile cover.out -covermode atomic\n-\t# Note: gets \"program not an importable package\" in out of path builds\n-\tTEST_FREELIST_TYPE=hashmap go test -v ./cmd/bbolt\n+.PHONY: coverage\n+coverage:\n+\t@echo \"hashmap freelist test\"\n+\tTEST_FREELIST_TYPE=hashmap go test -v -timeout 30m \\\n+\t\t-coverprofile cover-freelist-hashmap.out -covermode atomic\n \n \t@echo \"array freelist test\"\n+\tTEST_FREELIST_TYPE=array go test -v -timeout 30m \\\n+\t\t-coverprofile cover-freelist-array.out -covermode atomic\n+\n+.PHONY: gofail-enable\n+gofail-enable: install-gofail\n+\tgofail enable .\n+\n+.PHONY: gofail-disable\n+gofail-disable:\n+\tgofail disable .\n+\n+.PHONY: install-gofail\n+install-gofail:\n+\tgo install go.etcd.io/gofail\n+\n+.PHONY: test-failpoint\n+test-failpoint:\n+\t@echo \"[failpoint] hashmap freelist test\"\n+\tTEST_FREELIST_TYPE=hashmap go test -v ${TESTFLAGS} -timeout 30m ./tests/failpoint\n \n-\t@TEST_FREELIST_TYPE=array go test -timeout 20m -v -coverprofile cover.out -covermode atomic\n-\t# Note: gets \"program not an importable package\" in out of path builds\n-\t@TEST_FREELIST_TYPE=array go test -v ./cmd/bbolt\n+\t@echo \"[failpoint] array freelist test\"\n+\tTEST_FREELIST_TYPE=array go test -v ${TESTFLAGS} -timeout 30m ./tests/failpoint\n \n-.PHONY: race fmt errcheck test gosimple unused"
    },
    {
      "sha": "2be669a60a185a5ac00e6b036ffe120d7acdaa54",
      "filename": "backend/vendor/go.etcd.io/bbolt/README.md",
      "status": "modified",
      "additions": 15,
      "deletions": 6,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2FREADME.md?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -26,7 +26,7 @@ and setting values. That's it.\n [gh_ben]: https://github.com/benbjohnson\n [bolt]: https://github.com/boltdb/bolt\n [hyc_symas]: https://twitter.com/hyc_symas\n-[lmdb]: http://symas.com/mdb/\n+[lmdb]: https://www.symas.com/symas-embedded-database-lmdb\n \n ## Project Status\n \n@@ -78,14 +78,23 @@ New minor versions may add additional features to the API.\n ### Installing\n \n To start using Bolt, install Go and run `go get`:\n-\n ```sh\n-$ go get go.etcd.io/bbolt/...\n+$ go get go.etcd.io/bbolt@latest\n ```\n \n-This will retrieve the library and install the `bolt` command line utility into\n-your `$GOBIN` path.\n+This will retrieve the library and update your `go.mod` and `go.sum` files.\n+\n+To run the command line utility, execute:\n+```sh\n+$ go run go.etcd.io/bbolt/cmd/bbolt@latest\n+```\n \n+Run `go install` to install the `bbolt` command line utility into\n+your `$GOBIN` path, which defaults to `$GOPATH/bin` or `$HOME/go/bin` if the\n+`GOPATH` environment variable is not set.\n+```sh\n+$ go install go.etcd.io/bbolt/cmd/bbolt@latest\n+```\n \n ### Importing bbolt\n \n@@ -933,7 +942,7 @@ Below is a list of public, open source projects that use Bolt:\n * [ipxed](https://github.com/kelseyhightower/ipxed) - Web interface and api for ipxed.\n * [Ironsmith](https://github.com/timshannon/ironsmith) - A simple, script-driven continuous integration (build - > test -> release) tool, with no external dependencies\n * [Kala](https://github.com/ajvb/kala) - Kala is a modern job scheduler optimized to run on a single node. It is persistent, JSON over HTTP API, ISO 8601 duration notation, and dependent jobs.\n-* [Key Value Access Langusge (KVAL)](https://github.com/kval-access-language) - A proposed grammar for key-value datastores offering a bbolt binding.\n+* [Key Value Access Language (KVAL)](https://github.com/kval-access-language) - A proposed grammar for key-value datastores offering a bbolt binding.\n * [LedisDB](https://github.com/siddontang/ledisdb) - A high performance NoSQL, using Bolt as optional storage.\n * [lru](https://github.com/crowdriff/lru) - Easy to use Bolt-backed Least-Recently-Used (LRU) read-through cache with chainable remote stores.\n * [mbuckets](https://github.com/abhigupta912/mbuckets) - A Bolt wrapper that allows easy operations on multi level (nested) buckets."
    },
    {
      "sha": "447bc19733274f56ef629f15a525614edf3656b0",
      "filename": "backend/vendor/go.etcd.io/bbolt/bolt_arm64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_arm64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build arm64\n // +build arm64\n \n package bbolt"
    },
    {
      "sha": "31c17c1d07042e0ccc84d7d185534276f2c00672",
      "filename": "backend/vendor/go.etcd.io/bbolt/bolt_loong64.go",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_loong64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_loong64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_loong64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,10 @@\n+//go:build loong64\n+// +build loong64\n+\n+package bbolt\n+\n+// maxMapSize represents the largest mmap size supported by Bolt.\n+const maxMapSize = 0xFFFFFFFFFFFF // 256TB\n+\n+// maxAllocSize is the size used when creating array pointers.\n+const maxAllocSize = 0x7FFFFFFF"
    },
    {
      "sha": "a9385beb6824b57ceae72603f071ce993635e305",
      "filename": "backend/vendor/go.etcd.io/bbolt/bolt_mips64x.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_mips64x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_mips64x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_mips64x.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build mips64 || mips64le\n // +build mips64 mips64le\n \n package bbolt"
    },
    {
      "sha": "ed734ff7f3099770d7e2a0b7d9d5eae09e6cee84",
      "filename": "backend/vendor/go.etcd.io/bbolt/bolt_mipsx.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_mipsx.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_mipsx.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_mipsx.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build mips || mipsle\n // +build mips mipsle\n \n package bbolt"
    },
    {
      "sha": "e403f57d8a87db0600369ffa5311c8ac6b034b3b",
      "filename": "backend/vendor/go.etcd.io/bbolt/bolt_ppc.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_ppc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_ppc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_ppc.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build ppc\n // +build ppc\n \n package bbolt"
    },
    {
      "sha": "fcd86529f931deeb8305881825c23126fb3765a1",
      "filename": "backend/vendor/go.etcd.io/bbolt/bolt_ppc64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_ppc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_ppc64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build ppc64\n // +build ppc64\n \n package bbolt"
    },
    {
      "sha": "20234aca466a3a3aa8b77db990e97dd08b60614f",
      "filename": "backend/vendor/go.etcd.io/bbolt/bolt_ppc64le.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_ppc64le.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_ppc64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_ppc64le.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build ppc64le\n // +build ppc64le\n \n package bbolt"
    },
    {
      "sha": "060f30c73cb953e56c6825a3ff363ae1a15e6d38",
      "filename": "backend/vendor/go.etcd.io/bbolt/bolt_riscv64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_riscv64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_riscv64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build riscv64\n // +build riscv64\n \n package bbolt"
    },
    {
      "sha": "92d2755adb4c3202ab892ab712363cfa0e7f1fd9",
      "filename": "backend/vendor/go.etcd.io/bbolt/bolt_s390x.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_s390x.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build s390x\n // +build s390x\n \n package bbolt"
    },
    {
      "sha": "757ae4d1a484f0795c331e79384a5b283d8f5647",
      "filename": "backend/vendor/go.etcd.io/bbolt/bolt_unix.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_unix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_unix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_unix.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build !windows && !plan9 && !solaris && !aix\n // +build !windows,!plan9,!solaris,!aix\n \n package bbolt"
    },
    {
      "sha": "6dea4294dc7db501338e230d1c357b40f7544440",
      "filename": "backend/vendor/go.etcd.io/bbolt/bolt_unix_aix.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_unix_aix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_unix_aix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_unix_aix.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build aix\n // +build aix\n \n package bbolt"
    },
    {
      "sha": "e5dde27454f29c2c655cadc7e082ce3680d46b76",
      "filename": "backend/vendor/go.etcd.io/bbolt/bolt_windows.go",
      "status": "modified",
      "additions": 19,
      "deletions": 43,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbolt_windows.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -6,40 +6,10 @@ import (\n \t\"syscall\"\n \t\"time\"\n \t\"unsafe\"\n-)\n-\n-// LockFileEx code derived from golang build filemutex_windows.go @ v1.5.1\n-var (\n-\tmodkernel32      = syscall.NewLazyDLL(\"kernel32.dll\")\n-\tprocLockFileEx   = modkernel32.NewProc(\"LockFileEx\")\n-\tprocUnlockFileEx = modkernel32.NewProc(\"UnlockFileEx\")\n-)\n-\n-const (\n-\t// see https://msdn.microsoft.com/en-us/library/windows/desktop/aa365203(v=vs.85).aspx\n-\tflagLockExclusive       = 2\n-\tflagLockFailImmediately = 1\n \n-\t// see https://msdn.microsoft.com/en-us/library/windows/desktop/ms681382(v=vs.85).aspx\n-\terrLockViolation syscall.Errno = 0x21\n+\t\"golang.org/x/sys/windows\"\n )\n \n-func lockFileEx(h syscall.Handle, flags, reserved, locklow, lockhigh uint32, ol *syscall.Overlapped) (err error) {\n-\tr, _, err := procLockFileEx.Call(uintptr(h), uintptr(flags), uintptr(reserved), uintptr(locklow), uintptr(lockhigh), uintptr(unsafe.Pointer(ol)))\n-\tif r == 0 {\n-\t\treturn err\n-\t}\n-\treturn nil\n-}\n-\n-func unlockFileEx(h syscall.Handle, reserved, locklow, lockhigh uint32, ol *syscall.Overlapped) (err error) {\n-\tr, _, err := procUnlockFileEx.Call(uintptr(h), uintptr(reserved), uintptr(locklow), uintptr(lockhigh), uintptr(unsafe.Pointer(ol)), 0)\n-\tif r == 0 {\n-\t\treturn err\n-\t}\n-\treturn nil\n-}\n-\n // fdatasync flushes written data to a file descriptor.\n func fdatasync(db *DB) error {\n \treturn db.file.Sync()\n@@ -51,22 +21,22 @@ func flock(db *DB, exclusive bool, timeout time.Duration) error {\n \tif timeout != 0 {\n \t\tt = time.Now()\n \t}\n-\tvar flag uint32 = flagLockFailImmediately\n+\tvar flags uint32 = windows.LOCKFILE_FAIL_IMMEDIATELY\n \tif exclusive {\n-\t\tflag |= flagLockExclusive\n+\t\tflags |= windows.LOCKFILE_EXCLUSIVE_LOCK\n \t}\n \tfor {\n \t\t// Fix for https://github.com/etcd-io/bbolt/issues/121. Use byte-range\n \t\t// -1..0 as the lock on the database file.\n \t\tvar m1 uint32 = (1 << 32) - 1 // -1 in a uint32\n-\t\terr := lockFileEx(syscall.Handle(db.file.Fd()), flag, 0, 1, 0, &syscall.Overlapped{\n+\t\terr := windows.LockFileEx(windows.Handle(db.file.Fd()), flags, 0, 1, 0, &windows.Overlapped{\n \t\t\tOffset:     m1,\n \t\t\tOffsetHigh: m1,\n \t\t})\n \n \t\tif err == nil {\n \t\t\treturn nil\n-\t\t} else if err != errLockViolation {\n+\t\t} else if err != windows.ERROR_LOCK_VIOLATION {\n \t\t\treturn err\n \t\t}\n \n@@ -83,34 +53,37 @@ func flock(db *DB, exclusive bool, timeout time.Duration) error {\n // funlock releases an advisory lock on a file descriptor.\n func funlock(db *DB) error {\n \tvar m1 uint32 = (1 << 32) - 1 // -1 in a uint32\n-\terr := unlockFileEx(syscall.Handle(db.file.Fd()), 0, 1, 0, &syscall.Overlapped{\n+\treturn windows.UnlockFileEx(windows.Handle(db.file.Fd()), 0, 1, 0, &windows.Overlapped{\n \t\tOffset:     m1,\n \t\tOffsetHigh: m1,\n \t})\n-\treturn err\n }\n \n // mmap memory maps a DB's data file.\n // Based on: https://github.com/edsrzf/mmap-go\n func mmap(db *DB, sz int) error {\n+\tvar sizelo, sizehi uint32\n+\n \tif !db.readOnly {\n \t\t// Truncate the database to the size of the mmap.\n \t\tif err := db.file.Truncate(int64(sz)); err != nil {\n \t\t\treturn fmt.Errorf(\"truncate: %s\", err)\n \t\t}\n+\t\tsizehi = uint32(sz >> 32)\n+\t\tsizelo = uint32(sz) & 0xffffffff\n \t}\n \n \t// Open a file mapping handle.\n-\tsizelo := uint32(sz >> 32)\n-\tsizehi := uint32(sz) & 0xffffffff\n-\th, errno := syscall.CreateFileMapping(syscall.Handle(db.file.Fd()), nil, syscall.PAGE_READONLY, sizelo, sizehi, nil)\n+\th, errno := syscall.CreateFileMapping(syscall.Handle(db.file.Fd()), nil, syscall.PAGE_READONLY, sizehi, sizelo, nil)\n \tif h == 0 {\n \t\treturn os.NewSyscallError(\"CreateFileMapping\", errno)\n \t}\n \n \t// Create the memory map.\n-\taddr, errno := syscall.MapViewOfFile(h, syscall.FILE_MAP_READ, 0, 0, uintptr(sz))\n+\taddr, errno := syscall.MapViewOfFile(h, syscall.FILE_MAP_READ, 0, 0, 0)\n \tif addr == 0 {\n+\t\t// Do our best and report error returned from MapViewOfFile.\n+\t\t_ = syscall.CloseHandle(h)\n \t\treturn os.NewSyscallError(\"MapViewOfFile\", errno)\n \t}\n \n@@ -134,8 +107,11 @@ func munmap(db *DB) error {\n \t}\n \n \taddr := (uintptr)(unsafe.Pointer(&db.data[0]))\n+\tvar err1 error\n \tif err := syscall.UnmapViewOfFile(addr); err != nil {\n-\t\treturn os.NewSyscallError(\"UnmapViewOfFile\", err)\n+\t\terr1 = os.NewSyscallError(\"UnmapViewOfFile\", err)\n \t}\n-\treturn nil\n+\tdb.data = nil\n+\tdb.datasz = 0\n+\treturn err1\n }"
    },
    {
      "sha": "81e09a5310f8521602d44f8007c15981600ac1f6",
      "filename": "backend/vendor/go.etcd.io/bbolt/boltsync_unix.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fboltsync_unix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fboltsync_unix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fboltsync_unix.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build !windows && !plan9 && !linux && !openbsd\n // +build !windows,!plan9,!linux,!openbsd\n \n package bbolt"
    },
    {
      "sha": "054467af30389f1c66fc5cf4d4fd3eec1521e435",
      "filename": "backend/vendor/go.etcd.io/bbolt/bucket.go",
      "status": "modified",
      "additions": 34,
      "deletions": 20,
      "changes": 54,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbucket.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbucket.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbucket.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -81,7 +81,7 @@ func (b *Bucket) Writable() bool {\n // Do not use a cursor after the transaction is closed.\n func (b *Bucket) Cursor() *Cursor {\n \t// Update transaction statistics.\n-\tb.tx.stats.CursorCount++\n+\tb.tx.stats.IncCursorCount(1)\n \n \t// Allocate and return a cursor.\n \treturn &Cursor{\n@@ -229,11 +229,9 @@ func (b *Bucket) DeleteBucket(key []byte) error {\n \n \t// Recursively delete all child buckets.\n \tchild := b.Bucket(key)\n-\terr := child.ForEach(func(k, v []byte) error {\n-\t\tif _, _, childFlags := child.Cursor().seek(k); (childFlags & bucketLeafFlag) != 0 {\n-\t\t\tif err := child.DeleteBucket(k); err != nil {\n-\t\t\t\treturn fmt.Errorf(\"delete bucket: %s\", err)\n-\t\t\t}\n+\terr := child.ForEachBucket(func(k []byte) error {\n+\t\tif err := child.DeleteBucket(k); err != nil {\n+\t\t\treturn fmt.Errorf(\"delete bucket: %s\", err)\n \t\t}\n \t\treturn nil\n \t})\n@@ -353,7 +351,7 @@ func (b *Bucket) SetSequence(v uint64) error {\n \t\t_ = b.node(b.root, nil)\n \t}\n \n-\t// Increment and return the sequence.\n+\t// Set the sequence.\n \tb.bucket.sequence = v\n \treturn nil\n }\n@@ -378,6 +376,7 @@ func (b *Bucket) NextSequence() (uint64, error) {\n }\n \n // ForEach executes a function for each key/value pair in a bucket.\n+// Because ForEach uses a Cursor, the iteration over keys is in lexicographical order.\n // If the provided function returns an error then the iteration is stopped and\n // the error is returned to the caller. The provided function must not modify\n // the bucket; this will result in undefined behavior.\n@@ -394,15 +393,30 @@ func (b *Bucket) ForEach(fn func(k, v []byte) error) error {\n \treturn nil\n }\n \n-// Stat returns stats on a bucket.\n+func (b *Bucket) ForEachBucket(fn func(k []byte) error) error {\n+\tif b.tx.db == nil {\n+\t\treturn ErrTxClosed\n+\t}\n+\tc := b.Cursor()\n+\tfor k, _, flags := c.first(); k != nil; k, _, flags = c.next() {\n+\t\tif flags&bucketLeafFlag != 0 {\n+\t\t\tif err := fn(k); err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+// Stats returns stats on a bucket.\n func (b *Bucket) Stats() BucketStats {\n \tvar s, subStats BucketStats\n \tpageSize := b.tx.db.pageSize\n \ts.BucketN += 1\n \tif b.root == 0 {\n \t\ts.InlineBucketN += 1\n \t}\n-\tb.forEachPage(func(p *page, depth int) {\n+\tb.forEachPage(func(p *page, depth int, pgstack []pgid) {\n \t\tif (p.flags & leafPageFlag) != 0 {\n \t\t\ts.KeyN += int(p.count)\n \n@@ -461,7 +475,7 @@ func (b *Bucket) Stats() BucketStats {\n \n \t\t// Keep track of maximum page depth.\n \t\tif depth+1 > s.Depth {\n-\t\t\ts.Depth = (depth + 1)\n+\t\t\ts.Depth = depth + 1\n \t\t}\n \t})\n \n@@ -477,15 +491,15 @@ func (b *Bucket) Stats() BucketStats {\n }\n \n // forEachPage iterates over every page in a bucket, including inline pages.\n-func (b *Bucket) forEachPage(fn func(*page, int)) {\n+func (b *Bucket) forEachPage(fn func(*page, int, []pgid)) {\n \t// If we have an inline page then just use that.\n \tif b.page != nil {\n-\t\tfn(b.page, 0)\n+\t\tfn(b.page, 0, []pgid{b.root})\n \t\treturn\n \t}\n \n \t// Otherwise traverse the page hierarchy.\n-\tb.tx.forEachPage(b.root, 0, fn)\n+\tb.tx.forEachPage(b.root, fn)\n }\n \n // forEachPageNode iterates over every page (or node) in a bucket.\n@@ -499,8 +513,8 @@ func (b *Bucket) forEachPageNode(fn func(*page, *node, int)) {\n \tb._forEachPageNode(b.root, 0, fn)\n }\n \n-func (b *Bucket) _forEachPageNode(pgid pgid, depth int, fn func(*page, *node, int)) {\n-\tvar p, n = b.pageNode(pgid)\n+func (b *Bucket) _forEachPageNode(pgId pgid, depth int, fn func(*page, *node, int)) {\n+\tvar p, n = b.pageNode(pgId)\n \n \t// Execute function.\n \tfn(p, n, depth)\n@@ -640,11 +654,11 @@ func (b *Bucket) rebalance() {\n }\n \n // node creates a node from a page and associates it with a given parent.\n-func (b *Bucket) node(pgid pgid, parent *node) *node {\n+func (b *Bucket) node(pgId pgid, parent *node) *node {\n \t_assert(b.nodes != nil, \"nodes map expected\")\n \n \t// Retrieve node if it's already been created.\n-\tif n := b.nodes[pgid]; n != nil {\n+\tif n := b.nodes[pgId]; n != nil {\n \t\treturn n\n \t}\n \n@@ -659,15 +673,15 @@ func (b *Bucket) node(pgid pgid, parent *node) *node {\n \t// Use the inline page if this is an inline bucket.\n \tvar p = b.page\n \tif p == nil {\n-\t\tp = b.tx.page(pgid)\n+\t\tp = b.tx.page(pgId)\n \t}\n \n \t// Read the page into the node and cache it.\n \tn.read(p)\n-\tb.nodes[pgid] = n\n+\tb.nodes[pgId] = n\n \n \t// Update statistics.\n-\tb.tx.stats.NodeCount++\n+\tb.tx.stats.IncNodeCount(1)\n \n \treturn n\n }"
    },
    {
      "sha": "5f1d4c3b50a697c6eef2ae1e5c97c4b117d097b6",
      "filename": "backend/vendor/go.etcd.io/bbolt/compact.go",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fcompact.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fcompact.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fcompact.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -12,7 +12,11 @@ func Compact(dst, src *DB, txMaxSize int64) error {\n \tif err != nil {\n \t\treturn err\n \t}\n-\tdefer tx.Rollback()\n+\tdefer func() {\n+\t\tif tempErr := tx.Rollback(); tempErr != nil {\n+\t\t\terr = tempErr\n+\t\t}\n+\t}()\n \n \tif err := walk(src, func(keys [][]byte, k, v []byte, seq uint64) error {\n \t\t// On each key/value, check if we have exceeded tx size.\n@@ -73,8 +77,9 @@ func Compact(dst, src *DB, txMaxSize int64) error {\n \t}); err != nil {\n \t\treturn err\n \t}\n+\terr = tx.Commit()\n \n-\treturn tx.Commit()\n+\treturn err\n }\n \n // walkFunc is the type of the function called for keys (buckets and \"normal\""
    },
    {
      "sha": "5dafb0cac3a925c862936624be84ac00f2b59dd6",
      "filename": "backend/vendor/go.etcd.io/bbolt/cursor.go",
      "status": "modified",
      "additions": 64,
      "deletions": 40,
      "changes": 104,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fcursor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fcursor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fcursor.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -6,7 +6,8 @@ import (\n \t\"sort\"\n )\n \n-// Cursor represents an iterator that can traverse over all key/value pairs in a bucket in sorted order.\n+// Cursor represents an iterator that can traverse over all key/value pairs in a bucket\n+// in lexicographical order.\n // Cursors see nested buckets with value == nil.\n // Cursors can be obtained from a transaction and are valid as long as the transaction is open.\n //\n@@ -30,10 +31,18 @@ func (c *Cursor) Bucket() *Bucket {\n // The returned key and value are only valid for the life of the transaction.\n func (c *Cursor) First() (key []byte, value []byte) {\n \t_assert(c.bucket.tx.db != nil, \"tx closed\")\n+\tk, v, flags := c.first()\n+\tif (flags & uint32(bucketLeafFlag)) != 0 {\n+\t\treturn k, nil\n+\t}\n+\treturn k, v\n+}\n+\n+func (c *Cursor) first() (key []byte, value []byte, flags uint32) {\n \tc.stack = c.stack[:0]\n \tp, n := c.bucket.pageNode(c.bucket.root)\n \tc.stack = append(c.stack, elemRef{page: p, node: n, index: 0})\n-\tc.first()\n+\tc.goToFirstElementOnTheStack()\n \n \t// If we land on an empty page then move to the next value.\n \t// https://github.com/boltdb/bolt/issues/450\n@@ -43,10 +52,9 @@ func (c *Cursor) First() (key []byte, value []byte) {\n \n \tk, v, flags := c.keyValue()\n \tif (flags & uint32(bucketLeafFlag)) != 0 {\n-\t\treturn k, nil\n+\t\treturn k, nil, flags\n \t}\n-\treturn k, v\n-\n+\treturn k, v, flags\n }\n \n // Last moves the cursor to the last item in the bucket and returns its key and value.\n@@ -60,6 +68,17 @@ func (c *Cursor) Last() (key []byte, value []byte) {\n \tref.index = ref.count() - 1\n \tc.stack = append(c.stack, ref)\n \tc.last()\n+\n+\t// If this is an empty page (calling Delete may result in empty pages)\n+\t// we call prev to find the last page that is not empty\n+\tfor len(c.stack) > 0 && c.stack[len(c.stack)-1].count() == 0 {\n+\t\tc.prev()\n+\t}\n+\n+\tif len(c.stack) == 0 {\n+\t\treturn nil, nil\n+\t}\n+\n \tk, v, flags := c.keyValue()\n \tif (flags & uint32(bucketLeafFlag)) != 0 {\n \t\treturn k, nil\n@@ -84,37 +103,20 @@ func (c *Cursor) Next() (key []byte, value []byte) {\n // The returned key and value are only valid for the life of the transaction.\n func (c *Cursor) Prev() (key []byte, value []byte) {\n \t_assert(c.bucket.tx.db != nil, \"tx closed\")\n-\n-\t// Attempt to move back one element until we're successful.\n-\t// Move up the stack as we hit the beginning of each page in our stack.\n-\tfor i := len(c.stack) - 1; i >= 0; i-- {\n-\t\telem := &c.stack[i]\n-\t\tif elem.index > 0 {\n-\t\t\telem.index--\n-\t\t\tbreak\n-\t\t}\n-\t\tc.stack = c.stack[:i]\n-\t}\n-\n-\t// If we've hit the end then return nil.\n-\tif len(c.stack) == 0 {\n-\t\treturn nil, nil\n-\t}\n-\n-\t// Move down the stack to find the last element of the last leaf under this branch.\n-\tc.last()\n-\tk, v, flags := c.keyValue()\n+\tk, v, flags := c.prev()\n \tif (flags & uint32(bucketLeafFlag)) != 0 {\n \t\treturn k, nil\n \t}\n \treturn k, v\n }\n \n-// Seek moves the cursor to a given key and returns it.\n+// Seek moves the cursor to a given key using a b-tree search and returns it.\n // If the key does not exist then the next key is used. If no keys\n // follow, a nil key is returned.\n // The returned key and value are only valid for the life of the transaction.\n func (c *Cursor) Seek(seek []byte) (key []byte, value []byte) {\n+\t_assert(c.bucket.tx.db != nil, \"tx closed\")\n+\n \tk, v, flags := c.seek(seek)\n \n \t// If we ended up after the last element of a page then move to the next one.\n@@ -152,8 +154,6 @@ func (c *Cursor) Delete() error {\n // seek moves the cursor to a given key and returns it.\n // If the key does not exist then the next key is used.\n func (c *Cursor) seek(seek []byte) (key []byte, value []byte, flags uint32) {\n-\t_assert(c.bucket.tx.db != nil, \"tx closed\")\n-\n \t// Start from root page/node and traverse to correct page.\n \tc.stack = c.stack[:0]\n \tc.search(seek, c.bucket.root)\n@@ -163,7 +163,7 @@ func (c *Cursor) seek(seek []byte) (key []byte, value []byte, flags uint32) {\n }\n \n // first moves the cursor to the first leaf element under the last page in the stack.\n-func (c *Cursor) first() {\n+func (c *Cursor) goToFirstElementOnTheStack() {\n \tfor {\n \t\t// Exit when we hit a leaf page.\n \t\tvar ref = &c.stack[len(c.stack)-1]\n@@ -172,13 +172,13 @@ func (c *Cursor) first() {\n \t\t}\n \n \t\t// Keep adding pages pointing to the first element to the stack.\n-\t\tvar pgid pgid\n+\t\tvar pgId pgid\n \t\tif ref.node != nil {\n-\t\t\tpgid = ref.node.inodes[ref.index].pgid\n+\t\t\tpgId = ref.node.inodes[ref.index].pgid\n \t\t} else {\n-\t\t\tpgid = ref.page.branchPageElement(uint16(ref.index)).pgid\n+\t\t\tpgId = ref.page.branchPageElement(uint16(ref.index)).pgid\n \t\t}\n-\t\tp, n := c.bucket.pageNode(pgid)\n+\t\tp, n := c.bucket.pageNode(pgId)\n \t\tc.stack = append(c.stack, elemRef{page: p, node: n, index: 0})\n \t}\n }\n@@ -193,13 +193,13 @@ func (c *Cursor) last() {\n \t\t}\n \n \t\t// Keep adding pages pointing to the last element in the stack.\n-\t\tvar pgid pgid\n+\t\tvar pgId pgid\n \t\tif ref.node != nil {\n-\t\t\tpgid = ref.node.inodes[ref.index].pgid\n+\t\t\tpgId = ref.node.inodes[ref.index].pgid\n \t\t} else {\n-\t\t\tpgid = ref.page.branchPageElement(uint16(ref.index)).pgid\n+\t\t\tpgId = ref.page.branchPageElement(uint16(ref.index)).pgid\n \t\t}\n-\t\tp, n := c.bucket.pageNode(pgid)\n+\t\tp, n := c.bucket.pageNode(pgId)\n \n \t\tvar nextRef = elemRef{page: p, node: n}\n \t\tnextRef.index = nextRef.count() - 1\n@@ -231,7 +231,7 @@ func (c *Cursor) next() (key []byte, value []byte, flags uint32) {\n \t\t// Otherwise start from where we left off in the stack and find the\n \t\t// first element of the first leaf page.\n \t\tc.stack = c.stack[:i+1]\n-\t\tc.first()\n+\t\tc.goToFirstElementOnTheStack()\n \n \t\t// If this is an empty page then restart and move back up the stack.\n \t\t// https://github.com/boltdb/bolt/issues/450\n@@ -243,9 +243,33 @@ func (c *Cursor) next() (key []byte, value []byte, flags uint32) {\n \t}\n }\n \n+// prev moves the cursor to the previous item in the bucket and returns its key and value.\n+// If the cursor is at the beginning of the bucket then a nil key and value are returned.\n+func (c *Cursor) prev() (key []byte, value []byte, flags uint32) {\n+\t// Attempt to move back one element until we're successful.\n+\t// Move up the stack as we hit the beginning of each page in our stack.\n+\tfor i := len(c.stack) - 1; i >= 0; i-- {\n+\t\telem := &c.stack[i]\n+\t\tif elem.index > 0 {\n+\t\t\telem.index--\n+\t\t\tbreak\n+\t\t}\n+\t\tc.stack = c.stack[:i]\n+\t}\n+\n+\t// If we've hit the end then return nil.\n+\tif len(c.stack) == 0 {\n+\t\treturn nil, nil, 0\n+\t}\n+\n+\t// Move down the stack to find the last element of the last leaf under this branch.\n+\tc.last()\n+\treturn c.keyValue()\n+}\n+\n // search recursively performs a binary search against a given page/node until it finds a given key.\n-func (c *Cursor) search(key []byte, pgid pgid) {\n-\tp, n := c.bucket.pageNode(pgid)\n+func (c *Cursor) search(key []byte, pgId pgid) {\n+\tp, n := c.bucket.pageNode(pgId)\n \tif p != nil && (p.flags&(branchPageFlag|leafPageFlag)) == 0 {\n \t\tpanic(fmt.Sprintf(\"invalid page type: %d: %x\", p.id, p.flags))\n \t}"
    },
    {
      "sha": "c9422127e1ccc88e6c0dcc7609d457fdc9ee097a",
      "filename": "backend/vendor/go.etcd.io/bbolt/db.go",
      "status": "modified",
      "additions": 154,
      "deletions": 25,
      "changes": 179,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fdb.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fdb.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fdb.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -4,7 +4,7 @@ import (\n \t\"errors\"\n \t\"fmt\"\n \t\"hash/fnv\"\n-\t\"log\"\n+\t\"io\"\n \t\"os\"\n \t\"runtime\"\n \t\"sort\"\n@@ -81,7 +81,7 @@ type DB struct {\n \tNoFreelistSync bool\n \n \t// FreelistType sets the backend freelist type. There are two options. Array which is simple but endures\n-\t// dramatic performance degradation if database is large and framentation in freelist is common.\n+\t// dramatic performance degradation if database is large and fragmentation in freelist is common.\n \t// The alternative one is using hashmap, it is faster in almost all circumstances\n \t// but it doesn't guarantee that it offers the smallest page id available. In normal case it is safe.\n \t// The default type is array\n@@ -95,6 +95,11 @@ type DB struct {\n \t// https://github.com/boltdb/bolt/issues/284\n \tNoGrowSync bool\n \n+\t// When `true`, bbolt will always load the free pages when opening the DB.\n+\t// When opening db in write mode, this flag will always automatically\n+\t// set to `true`.\n+\tPreLoadFreelist bool\n+\n \t// If you want to read the entire database fast, you can set MmapFlag to\n \t// syscall.MAP_POPULATE on Linux 2.6.23+ for sequential read-ahead.\n \tMmapFlags int\n@@ -129,6 +134,9 @@ type DB struct {\n \tpath     string\n \topenFile func(string, int, os.FileMode) (*os.File, error)\n \tfile     *os.File\n+\t// `dataref` isn't used at all on Windows, and the golangci-lint\n+\t// always fails on Windows platform.\n+\t//nolint\n \tdataref  []byte // mmap'ed readonly, write throws SEGV\n \tdata     *[maxMapSize]byte\n \tdatasz   int\n@@ -193,6 +201,7 @@ func Open(path string, mode os.FileMode, options *Options) (*DB, error) {\n \tdb.NoGrowSync = options.NoGrowSync\n \tdb.MmapFlags = options.MmapFlags\n \tdb.NoFreelistSync = options.NoFreelistSync\n+\tdb.PreLoadFreelist = options.PreLoadFreelist\n \tdb.FreelistType = options.FreelistType\n \tdb.Mlock = options.Mlock\n \n@@ -205,6 +214,9 @@ func Open(path string, mode os.FileMode, options *Options) (*DB, error) {\n \tif options.ReadOnly {\n \t\tflag = os.O_RDONLY\n \t\tdb.readOnly = true\n+\t} else {\n+\t\t// always load free pages in write mode\n+\t\tdb.PreLoadFreelist = true\n \t}\n \n \tdb.openFile = options.OpenFile\n@@ -252,21 +264,9 @@ func Open(path string, mode os.FileMode, options *Options) (*DB, error) {\n \t\t\treturn nil, err\n \t\t}\n \t} else {\n-\t\t// Read the first meta page to determine the page size.\n-\t\tvar buf [0x1000]byte\n-\t\t// If we can't read the page size, but can read a page, assume\n-\t\t// it's the same as the OS or one given -- since that's how the\n-\t\t// page size was chosen in the first place.\n-\t\t//\n-\t\t// If the first page is invalid and this OS uses a different\n-\t\t// page size than what the database was created with then we\n-\t\t// are out of luck and cannot access the database.\n-\t\t//\n-\t\t// TODO: scan for next page\n-\t\tif bw, err := db.file.ReadAt(buf[:], 0); err == nil && bw == len(buf) {\n-\t\t\tif m := db.pageInBuffer(buf[:], 0).meta(); m.validate() == nil {\n-\t\t\t\tdb.pageSize = int(m.pageSize)\n-\t\t\t}\n+\t\t// try to get the page size from the metadata pages\n+\t\tif pgSize, err := db.getPageSize(); err == nil {\n+\t\t\tdb.pageSize = pgSize\n \t\t} else {\n \t\t\t_ = db.close()\n \t\t\treturn nil, ErrInvalid\n@@ -286,12 +286,14 @@ func Open(path string, mode os.FileMode, options *Options) (*DB, error) {\n \t\treturn nil, err\n \t}\n \n+\tif db.PreLoadFreelist {\n+\t\tdb.loadFreelist()\n+\t}\n+\n \tif db.readOnly {\n \t\treturn db, nil\n \t}\n \n-\tdb.loadFreelist()\n-\n \t// Flush freelist when transitioning from no sync to sync so\n \t// NoFreelistSync unaware boltdb can open the db later.\n \tif !db.NoFreelistSync && !db.hasSyncedFreelist() {\n@@ -309,6 +311,96 @@ func Open(path string, mode os.FileMode, options *Options) (*DB, error) {\n \treturn db, nil\n }\n \n+// getPageSize reads the pageSize from the meta pages. It tries\n+// to read the first meta page firstly. If the first page is invalid,\n+// then it tries to read the second page using the default page size.\n+func (db *DB) getPageSize() (int, error) {\n+\tvar (\n+\t\tmeta0CanRead, meta1CanRead bool\n+\t)\n+\n+\t// Read the first meta page to determine the page size.\n+\tif pgSize, canRead, err := db.getPageSizeFromFirstMeta(); err != nil {\n+\t\t// We cannot read the page size from page 0, but can read page 0.\n+\t\tmeta0CanRead = canRead\n+\t} else {\n+\t\treturn pgSize, nil\n+\t}\n+\n+\t// Read the second meta page to determine the page size.\n+\tif pgSize, canRead, err := db.getPageSizeFromSecondMeta(); err != nil {\n+\t\t// We cannot read the page size from page 1, but can read page 1.\n+\t\tmeta1CanRead = canRead\n+\t} else {\n+\t\treturn pgSize, nil\n+\t}\n+\n+\t// If we can't read the page size from both pages, but can read\n+\t// either page, then we assume it's the same as the OS or the one\n+\t// given, since that's how the page size was chosen in the first place.\n+\t//\n+\t// If both pages are invalid, and (this OS uses a different page size\n+\t// from what the database was created with or the given page size is\n+\t// different from what the database was created with), then we are out\n+\t// of luck and cannot access the database.\n+\tif meta0CanRead || meta1CanRead {\n+\t\treturn db.pageSize, nil\n+\t}\n+\n+\treturn 0, ErrInvalid\n+}\n+\n+// getPageSizeFromFirstMeta reads the pageSize from the first meta page\n+func (db *DB) getPageSizeFromFirstMeta() (int, bool, error) {\n+\tvar buf [0x1000]byte\n+\tvar metaCanRead bool\n+\tif bw, err := db.file.ReadAt(buf[:], 0); err == nil && bw == len(buf) {\n+\t\tmetaCanRead = true\n+\t\tif m := db.pageInBuffer(buf[:], 0).meta(); m.validate() == nil {\n+\t\t\treturn int(m.pageSize), metaCanRead, nil\n+\t\t}\n+\t}\n+\treturn 0, metaCanRead, ErrInvalid\n+}\n+\n+// getPageSizeFromSecondMeta reads the pageSize from the second meta page\n+func (db *DB) getPageSizeFromSecondMeta() (int, bool, error) {\n+\tvar (\n+\t\tfileSize    int64\n+\t\tmetaCanRead bool\n+\t)\n+\n+\t// get the db file size\n+\tif info, err := db.file.Stat(); err != nil {\n+\t\treturn 0, metaCanRead, err\n+\t} else {\n+\t\tfileSize = info.Size()\n+\t}\n+\n+\t// We need to read the second meta page, so we should skip the first page;\n+\t// but we don't know the exact page size yet, it's chicken & egg problem.\n+\t// The solution is to try all the possible page sizes, which starts from 1KB\n+\t// and until 16MB (1024<<14) or the end of the db file\n+\t//\n+\t// TODO: should we support larger page size?\n+\tfor i := 0; i <= 14; i++ {\n+\t\tvar buf [0x1000]byte\n+\t\tvar pos int64 = 1024 << uint(i)\n+\t\tif pos >= fileSize-1024 {\n+\t\t\tbreak\n+\t\t}\n+\t\tbw, err := db.file.ReadAt(buf[:], pos)\n+\t\tif (err == nil && bw == len(buf)) || (err == io.EOF && int64(bw) == (fileSize-pos)) {\n+\t\t\tmetaCanRead = true\n+\t\t\tif m := db.pageInBuffer(buf[:], 0).meta(); m.validate() == nil {\n+\t\t\t\treturn int(m.pageSize), metaCanRead, nil\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\treturn 0, metaCanRead, ErrInvalid\n+}\n+\n // loadFreelist reads the freelist if it is synced, or reconstructs it\n // by scanning the DB if it is not synced. It assumes there are no\n // concurrent accesses being made to the freelist.\n@@ -372,6 +464,8 @@ func (db *DB) mmap(minsz int) error {\n \t}\n \n \t// Memory-map the data file as a byte slice.\n+\t// gofail: var mapError string\n+\t// return errors.New(mapError)\n \tif err := mmap(db, size); err != nil {\n \t\treturn err\n \t}\n@@ -399,11 +493,25 @@ func (db *DB) mmap(minsz int) error {\n \treturn nil\n }\n \n+func (db *DB) invalidate() {\n+\tdb.dataref = nil\n+\tdb.data = nil\n+\tdb.datasz = 0\n+\n+\tdb.meta0 = nil\n+\tdb.meta1 = nil\n+}\n+\n // munmap unmaps the data file from memory.\n func (db *DB) munmap() error {\n+\tdefer db.invalidate()\n+\n+\t// gofail: var unmapError string\n+\t// return errors.New(unmapError)\n \tif err := munmap(db); err != nil {\n \t\treturn fmt.Errorf(\"unmap error: \" + err.Error())\n \t}\n+\n \treturn nil\n }\n \n@@ -552,7 +660,7 @@ func (db *DB) close() error {\n \t\tif !db.readOnly {\n \t\t\t// Unlock the file.\n \t\t\tif err := funlock(db); err != nil {\n-\t\t\t\tlog.Printf(\"bolt.Close(): funlock error: %s\", err)\n+\t\t\t\treturn fmt.Errorf(\"bolt.Close(): funlock error: %w\", err)\n \t\t\t}\n \t\t}\n \n@@ -609,6 +717,13 @@ func (db *DB) beginTx() (*Tx, error) {\n \t\treturn nil, ErrDatabaseNotOpen\n \t}\n \n+\t// Exit if the database is not correctly mapped.\n+\tif db.data == nil {\n+\t\tdb.mmaplock.RUnlock()\n+\t\tdb.metalock.Unlock()\n+\t\treturn nil, ErrInvalidMapping\n+\t}\n+\n \t// Create a transaction associated with the database.\n \tt := &Tx{}\n \tt.init(db)\n@@ -650,6 +765,12 @@ func (db *DB) beginRWTx() (*Tx, error) {\n \t\treturn nil, ErrDatabaseNotOpen\n \t}\n \n+\t// Exit if the database is not correctly mapped.\n+\tif db.data == nil {\n+\t\tdb.rwlock.Unlock()\n+\t\treturn nil, ErrInvalidMapping\n+\t}\n+\n \t// Create a transaction associated with the database.\n \tt := &Tx{writable: true}\n \tt.init(db)\n@@ -924,6 +1045,7 @@ func (db *DB) Stats() Stats {\n // This is for internal access to the raw data bytes from the C cursor, use\n // carefully, or not at all.\n func (db *DB) Info() *Info {\n+\t_assert(db.data != nil, \"database file isn't correctly mapped\")\n \treturn &Info{uintptr(unsafe.Pointer(&db.data[0])), db.pageSize}\n }\n \n@@ -950,7 +1072,7 @@ func (db *DB) meta() *meta {\n \t\tmetaB = db.meta0\n \t}\n \n-\t// Use higher meta page if valid. Otherwise fallback to previous, if valid.\n+\t// Use higher meta page if valid. Otherwise, fallback to previous, if valid.\n \tif err := metaA.validate(); err == nil {\n \t\treturn metaA\n \t} else if err := metaB.validate(); err == nil {\n@@ -1003,7 +1125,7 @@ func (db *DB) grow(sz int) error {\n \n \t// If the data is smaller than the alloc size then only allocate what's needed.\n \t// Once it goes over the allocation size then allocate in chunks.\n-\tif db.datasz < db.AllocSize {\n+\tif db.datasz <= db.AllocSize {\n \t\tsz = db.datasz\n \t} else {\n \t\tsz += db.AllocSize\n@@ -1056,9 +1178,11 @@ func (db *DB) freepages() []pgid {\n \t\t\tpanic(fmt.Sprintf(\"freepages: failed to get all reachable pages (%v)\", e))\n \t\t}\n \t}()\n-\ttx.checkBucket(&tx.root, reachable, nofreed, ech)\n+\ttx.checkBucket(&tx.root, reachable, nofreed, HexKVStringer(), ech)\n \tclose(ech)\n \n+\t// TODO: If check bucket reported any corruptions (ech) we shouldn't proceed to freeing the pages.\n+\n \tvar fids []pgid\n \tfor i := pgid(2); i < db.meta().pgid; i++ {\n \t\tif _, ok := reachable[i]; !ok {\n@@ -1082,8 +1206,13 @@ type Options struct {\n \t// under normal operation, but requires a full database re-sync during recovery.\n \tNoFreelistSync bool\n \n+\t// PreLoadFreelist sets whether to load the free pages when opening\n+\t// the db file. Note when opening db in write mode, bbolt will always\n+\t// load the free pages.\n+\tPreLoadFreelist bool\n+\n \t// FreelistType sets the backend freelist type. There are two options. Array which is simple but endures\n-\t// dramatic performance degradation if database is large and framentation in freelist is common.\n+\t// dramatic performance degradation if database is large and fragmentation in freelist is common.\n \t// The alternative one is using hashmap, it is faster in almost all circumstances\n \t// but it doesn't guarantee that it offers the smallest page id available. In normal case it is safe.\n \t// The default type is array\n@@ -1187,7 +1316,7 @@ func (m *meta) validate() error {\n \t\treturn ErrInvalid\n \t} else if m.version != version {\n \t\treturn ErrVersionMismatch\n-\t} else if m.checksum != 0 && m.checksum != m.sum64() {\n+\t} else if m.checksum != m.sum64() {\n \t\treturn ErrChecksum\n \t}\n \treturn nil"
    },
    {
      "sha": "d1007e4b040b53d8b12148a7aded0c3f15c17262",
      "filename": "backend/vendor/go.etcd.io/bbolt/doc.go",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fdoc.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -14,8 +14,7 @@ The design of Bolt is based on Howard Chu's LMDB database project.\n \n Bolt currently works on Windows, Mac OS X, and Linux.\n \n-\n-Basics\n+# Basics\n \n There are only a few types in Bolt: DB, Bucket, Tx, and Cursor. The DB is\n a collection of buckets and is represented by a single file on disk. A bucket is\n@@ -27,8 +26,7 @@ iterate over the dataset sequentially. Read-write transactions can create and\n delete buckets and can insert and remove keys. Only one read-write transaction\n is allowed at a time.\n \n-\n-Caveats\n+# Caveats\n \n The database uses a read-only, memory-mapped data file to ensure that\n applications cannot corrupt the database, however, this means that keys and\n@@ -38,7 +36,5 @@ will cause Go to panic.\n Keys and values retrieved from the database are only valid for the life of\n the transaction. When used outside the transaction, these byte slices can\n point to different data or can point to invalid memory which will cause a panic.\n-\n-\n */\n package bbolt"
    },
    {
      "sha": "f2c3b20ed8b7e7fdecdc618d76ad6ab73e99c728",
      "filename": "backend/vendor/go.etcd.io/bbolt/errors.go",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ferrors.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ferrors.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ferrors.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -16,6 +16,9 @@ var (\n \t// This typically occurs when a file is not a bolt database.\n \tErrInvalid = errors.New(\"invalid database\")\n \n+\t// ErrInvalidMapping is returned when the database file fails to get mapped.\n+\tErrInvalidMapping = errors.New(\"database isn't correctly mapped\")\n+\n \t// ErrVersionMismatch is returned when the data file was created with a\n \t// different version of Bolt.\n \tErrVersionMismatch = errors.New(\"version mismatch\")\n@@ -41,6 +44,10 @@ var (\n \t// ErrDatabaseReadOnly is returned when a mutating transaction is started on a\n \t// read-only database.\n \tErrDatabaseReadOnly = errors.New(\"database is in read-only mode\")\n+\n+\t// ErrFreePagesNotLoaded is returned when a readonly transaction without\n+\t// preloading the free pages is trying to access the free pages.\n+\tErrFreePagesNotLoaded = errors.New(\"free pages are not pre-loaded\")\n )\n \n // These errors can occur when putting or deleting a value or a bucket."
    },
    {
      "sha": "50f2d0e174dc3cffadcac12fc61004b741894310",
      "filename": "backend/vendor/go.etcd.io/bbolt/freelist.go",
      "status": "modified",
      "additions": 10,
      "deletions": 9,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ffreelist.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ffreelist.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ffreelist.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -24,7 +24,7 @@ type freelist struct {\n \tids            []pgid                      // all free and available free page ids.\n \tallocs         map[pgid]txid               // mapping of txid that allocated a pgid.\n \tpending        map[txid]*txPending         // mapping of soon-to-be free page ids by tx.\n-\tcache          map[pgid]bool               // fast lookup of all free and pending page ids.\n+\tcache          map[pgid]struct{}           // fast lookup of all free and pending page ids.\n \tfreemaps       map[uint64]pidSet           // key is the size of continuous pages(span), value is a set which contains the starting pgids of same size\n \tforwardMap     map[pgid]uint64             // key is start pgid, value is its span size\n \tbackwardMap    map[pgid]uint64             // key is end pgid, value is its span size\n@@ -41,7 +41,7 @@ func newFreelist(freelistType FreelistType) *freelist {\n \t\tfreelistType: freelistType,\n \t\tallocs:       make(map[pgid]txid),\n \t\tpending:      make(map[txid]*txPending),\n-\t\tcache:        make(map[pgid]bool),\n+\t\tcache:        make(map[pgid]struct{}),\n \t\tfreemaps:     make(map[uint64]pidSet),\n \t\tforwardMap:   make(map[pgid]uint64),\n \t\tbackwardMap:  make(map[pgid]uint64),\n@@ -171,13 +171,13 @@ func (f *freelist) free(txid txid, p *page) {\n \n \tfor id := p.id; id <= p.id+pgid(p.overflow); id++ {\n \t\t// Verify that page is not already free.\n-\t\tif f.cache[id] {\n+\t\tif _, ok := f.cache[id]; ok {\n \t\t\tpanic(fmt.Sprintf(\"page %d already freed\", id))\n \t\t}\n \t\t// Add to the freelist and cache.\n \t\ttxp.ids = append(txp.ids, id)\n \t\ttxp.alloctx = append(txp.alloctx, allocTxid)\n-\t\tf.cache[id] = true\n+\t\tf.cache[id] = struct{}{}\n \t}\n }\n \n@@ -256,8 +256,9 @@ func (f *freelist) rollback(txid txid) {\n }\n \n // freed returns whether a given page is in the free list.\n-func (f *freelist) freed(pgid pgid) bool {\n-\treturn f.cache[pgid]\n+func (f *freelist) freed(pgId pgid) bool {\n+\t_, ok := f.cache[pgId]\n+\treturn ok\n }\n \n // read initializes the freelist from a freelist page.\n@@ -386,13 +387,13 @@ func (f *freelist) noSyncReload(pgids []pgid) {\n // reindex rebuilds the free cache based on available and pending free lists.\n func (f *freelist) reindex() {\n \tids := f.getFreePageIDs()\n-\tf.cache = make(map[pgid]bool, len(ids))\n+\tf.cache = make(map[pgid]struct{}, len(ids))\n \tfor _, id := range ids {\n-\t\tf.cache[id] = true\n+\t\tf.cache[id] = struct{}{}\n \t}\n \tfor _, txp := range f.pending {\n \t\tfor _, pendingID := range txp.ids {\n-\t\t\tf.cache[pendingID] = true\n+\t\t\tf.cache[pendingID] = struct{}{}\n \t\t}\n \t}\n }"
    },
    {
      "sha": "744a972f51a1e8693b6fe1ed2f279b08c0fe9c53",
      "filename": "backend/vendor/go.etcd.io/bbolt/mlock_unix.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fmlock_unix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fmlock_unix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fmlock_unix.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build !windows\n // +build !windows\n \n package bbolt\n@@ -17,7 +18,7 @@ func mlock(db *DB, fileSize int) error {\n \treturn nil\n }\n \n-//munlock unlocks memory of db file\n+// munlock unlocks memory of db file\n func munlock(db *DB, fileSize int) error {\n \tif db.dataref == nil {\n \t\treturn nil"
    },
    {
      "sha": "00b0fb431f589eb993a46ec3b371eee25f2a023a",
      "filename": "backend/vendor/go.etcd.io/bbolt/mlock_windows.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fmlock_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fmlock_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fmlock_windows.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -5,7 +5,7 @@ func mlock(_ *DB, _ int) error {\n \tpanic(\"mlock is supported only on UNIX systems\")\n }\n \n-//munlock unlocks memory of db file\n+// munlock unlocks memory of db file\n func munlock(_ *DB, _ int) error {\n \tpanic(\"munlock is supported only on UNIX systems\")\n }"
    },
    {
      "sha": "9c56150d88315829774d757966c159b258119cf6",
      "filename": "backend/vendor/go.etcd.io/bbolt/node.go",
      "status": "modified",
      "additions": 18,
      "deletions": 10,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fnode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fnode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fnode.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -113,9 +113,9 @@ func (n *node) prevSibling() *node {\n }\n \n // put inserts a key/value.\n-func (n *node) put(oldKey, newKey, value []byte, pgid pgid, flags uint32) {\n-\tif pgid >= n.bucket.tx.meta.pgid {\n-\t\tpanic(fmt.Sprintf(\"pgid (%d) above high water mark (%d)\", pgid, n.bucket.tx.meta.pgid))\n+func (n *node) put(oldKey, newKey, value []byte, pgId pgid, flags uint32) {\n+\tif pgId >= n.bucket.tx.meta.pgid {\n+\t\tpanic(fmt.Sprintf(\"pgId (%d) above high water mark (%d)\", pgId, n.bucket.tx.meta.pgid))\n \t} else if len(oldKey) <= 0 {\n \t\tpanic(\"put: zero-length old key\")\n \t} else if len(newKey) <= 0 {\n@@ -136,7 +136,7 @@ func (n *node) put(oldKey, newKey, value []byte, pgid pgid, flags uint32) {\n \tinode.flags = flags\n \tinode.key = newKey\n \tinode.value = value\n-\tinode.pgid = pgid\n+\tinode.pgid = pgId\n \t_assert(len(inode.key) > 0, \"put: zero-length inode key\")\n }\n \n@@ -188,12 +188,16 @@ func (n *node) read(p *page) {\n }\n \n // write writes the items onto one or more pages.\n+// The page should have p.id (might be 0 for meta or bucket-inline page) and p.overflow set\n+// and the rest should be zeroed.\n func (n *node) write(p *page) {\n+\t_assert(p.count == 0 && p.flags == 0, \"node cannot be written into a not empty page\")\n+\n \t// Initialize page.\n \tif n.isLeaf {\n-\t\tp.flags |= leafPageFlag\n+\t\tp.flags = leafPageFlag\n \t} else {\n-\t\tp.flags |= branchPageFlag\n+\t\tp.flags = branchPageFlag\n \t}\n \n \tif len(n.inodes) >= 0xFFFF {\n@@ -300,7 +304,7 @@ func (n *node) splitTwo(pageSize uintptr) (*node, *node) {\n \tn.inodes = n.inodes[:splitIndex]\n \n \t// Update the statistics.\n-\tn.bucket.tx.stats.Split++\n+\tn.bucket.tx.stats.IncSplit(1)\n \n \treturn n, next\n }\n@@ -387,7 +391,7 @@ func (n *node) spill() error {\n \t\t}\n \n \t\t// Update the statistics.\n-\t\ttx.stats.Spill++\n+\t\ttx.stats.IncSpill(1)\n \t}\n \n \t// If the root node split and created a new root then we need to spill that\n@@ -409,7 +413,7 @@ func (n *node) rebalance() {\n \tn.unbalanced = false\n \n \t// Update statistics.\n-\tn.bucket.tx.stats.Rebalance++\n+\tn.bucket.tx.stats.IncRebalance(1)\n \n \t// Ignore if node is above threshold (25%) and has enough keys.\n \tvar threshold = n.bucket.tx.db.pageSize / 4\n@@ -543,7 +547,7 @@ func (n *node) dereference() {\n \t}\n \n \t// Update statistics.\n-\tn.bucket.tx.stats.NodeDeref++\n+\tn.bucket.tx.stats.IncNodeDeref(1)\n }\n \n // free adds the node's underlying page to the freelist.\n@@ -581,6 +585,10 @@ func (n *node) dump() {\n }\n */\n \n+func compareKeys(left, right []byte) int {\n+\treturn bytes.Compare(left, right)\n+}\n+\n type nodes []*node\n \n func (s nodes) Len() int      { return len(s) }"
    },
    {
      "sha": "379645c97fd50ac2ecf5eda302647e991968f1b4",
      "filename": "backend/vendor/go.etcd.io/bbolt/page.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fpage.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fpage.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fpage.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -53,6 +53,16 @@ func (p *page) meta() *meta {\n \treturn (*meta)(unsafeAdd(unsafe.Pointer(p), unsafe.Sizeof(*p)))\n }\n \n+func (p *page) fastCheck(id pgid) {\n+\t_assert(p.id == id, \"Page expected to be: %v, but self identifies as %v\", id, p.id)\n+\t// Only one flag of page-type can be set.\n+\t_assert(p.flags == branchPageFlag ||\n+\t\tp.flags == leafPageFlag ||\n+\t\tp.flags == metaPageFlag ||\n+\t\tp.flags == freelistPageFlag,\n+\t\t\"page %v: has unexpected type/flags: %x\", p.id, p.flags)\n+}\n+\n // leafPageElement retrieves the leaf node by index\n func (p *page) leafPageElement(index uint16) *leafPageElement {\n \treturn (*leafPageElement)(unsafeIndex(unsafe.Pointer(p), unsafe.Sizeof(*p),"
    },
    {
      "sha": "2fac8c0a7820579cc598afd12ea41072ba01d714",
      "filename": "backend/vendor/go.etcd.io/bbolt/tx.go",
      "status": "modified",
      "additions": 228,
      "deletions": 154,
      "changes": 382,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ftx.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ftx.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ftx.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -6,6 +6,7 @@ import (\n \t\"os\"\n \t\"sort\"\n \t\"strings\"\n+\t\"sync/atomic\"\n \t\"time\"\n \t\"unsafe\"\n )\n@@ -151,17 +152,19 @@ func (tx *Tx) Commit() error {\n \t// Rebalance nodes which have had deletions.\n \tvar startTime = time.Now()\n \ttx.root.rebalance()\n-\tif tx.stats.Rebalance > 0 {\n-\t\ttx.stats.RebalanceTime += time.Since(startTime)\n+\tif tx.stats.GetRebalance() > 0 {\n+\t\ttx.stats.IncRebalanceTime(time.Since(startTime))\n \t}\n \n+\topgid := tx.meta.pgid\n+\n \t// spill data onto dirty pages.\n \tstartTime = time.Now()\n \tif err := tx.root.spill(); err != nil {\n \t\ttx.rollback()\n \t\treturn err\n \t}\n-\ttx.stats.SpillTime += time.Since(startTime)\n+\ttx.stats.IncSpillTime(time.Since(startTime))\n \n \t// Free the old root bucket.\n \ttx.meta.root.root = tx.root.root\n@@ -180,6 +183,14 @@ func (tx *Tx) Commit() error {\n \t\ttx.meta.freelist = pgidNoFreelist\n \t}\n \n+\t// If the high water mark has moved up then attempt to grow the database.\n+\tif tx.meta.pgid > opgid {\n+\t\tif err := tx.db.grow(int(tx.meta.pgid+1) * tx.db.pageSize); err != nil {\n+\t\t\ttx.rollback()\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\n \t// Write dirty pages to disk.\n \tstartTime = time.Now()\n \tif err := tx.write(); err != nil {\n@@ -208,7 +219,7 @@ func (tx *Tx) Commit() error {\n \t\ttx.rollback()\n \t\treturn err\n \t}\n-\ttx.stats.WriteTime += time.Since(startTime)\n+\ttx.stats.IncWriteTime(time.Since(startTime))\n \n \t// Finalize the transaction.\n \ttx.close()\n@@ -224,7 +235,6 @@ func (tx *Tx) Commit() error {\n func (tx *Tx) commitFreelist() error {\n \t// Allocate new pages for the new free list. This will overestimate\n \t// the size of the freelist but not underestimate the size (which would be bad).\n-\topgid := tx.meta.pgid\n \tp, err := tx.allocate((tx.db.freelist.size() / tx.db.pageSize) + 1)\n \tif err != nil {\n \t\ttx.rollback()\n@@ -235,13 +245,6 @@ func (tx *Tx) commitFreelist() error {\n \t\treturn err\n \t}\n \ttx.meta.freelist = p.id\n-\t// If the high water mark has moved up then attempt to grow the database.\n-\tif tx.meta.pgid > opgid {\n-\t\tif err := tx.db.grow(int(tx.meta.pgid+1) * tx.db.pageSize); err != nil {\n-\t\t\ttx.rollback()\n-\t\t\treturn err\n-\t\t}\n-\t}\n \n \treturn nil\n }\n@@ -275,13 +278,17 @@ func (tx *Tx) rollback() {\n \t}\n \tif tx.writable {\n \t\ttx.db.freelist.rollback(tx.meta.txid)\n-\t\tif !tx.db.hasSyncedFreelist() {\n-\t\t\t// Reconstruct free page list by scanning the DB to get the whole free page list.\n-\t\t\t// Note: scaning the whole db is heavy if your db size is large in NoSyncFreeList mode.\n-\t\t\ttx.db.freelist.noSyncReload(tx.db.freepages())\n-\t\t} else {\n-\t\t\t// Read free page list from freelist page.\n-\t\t\ttx.db.freelist.reload(tx.db.page(tx.db.meta().freelist))\n+\t\t// When mmap fails, the `data`, `dataref` and `datasz` may be reset to\n+\t\t// zero values, and there is no way to reload free page IDs in this case.\n+\t\tif tx.db.data != nil {\n+\t\t\tif !tx.db.hasSyncedFreelist() {\n+\t\t\t\t// Reconstruct free page list by scanning the DB to get the whole free page list.\n+\t\t\t\t// Note: scaning the whole db is heavy if your db size is large in NoSyncFreeList mode.\n+\t\t\t\ttx.db.freelist.noSyncReload(tx.db.freepages())\n+\t\t\t} else {\n+\t\t\t\t// Read free page list from freelist page.\n+\t\t\t\ttx.db.freelist.reload(tx.db.page(tx.db.meta().freelist))\n+\t\t\t}\n \t\t}\n \t}\n \ttx.close()\n@@ -400,98 +407,6 @@ func (tx *Tx) CopyFile(path string, mode os.FileMode) error {\n \treturn f.Close()\n }\n \n-// Check performs several consistency checks on the database for this transaction.\n-// An error is returned if any inconsistency is found.\n-//\n-// It can be safely run concurrently on a writable transaction. However, this\n-// incurs a high cost for large databases and databases with a lot of subbuckets\n-// because of caching. This overhead can be removed if running on a read-only\n-// transaction, however, it is not safe to execute other writer transactions at\n-// the same time.\n-func (tx *Tx) Check() <-chan error {\n-\tch := make(chan error)\n-\tgo tx.check(ch)\n-\treturn ch\n-}\n-\n-func (tx *Tx) check(ch chan error) {\n-\t// Force loading free list if opened in ReadOnly mode.\n-\ttx.db.loadFreelist()\n-\n-\t// Check if any pages are double freed.\n-\tfreed := make(map[pgid]bool)\n-\tall := make([]pgid, tx.db.freelist.count())\n-\ttx.db.freelist.copyall(all)\n-\tfor _, id := range all {\n-\t\tif freed[id] {\n-\t\t\tch <- fmt.Errorf(\"page %d: already freed\", id)\n-\t\t}\n-\t\tfreed[id] = true\n-\t}\n-\n-\t// Track every reachable page.\n-\treachable := make(map[pgid]*page)\n-\treachable[0] = tx.page(0) // meta0\n-\treachable[1] = tx.page(1) // meta1\n-\tif tx.meta.freelist != pgidNoFreelist {\n-\t\tfor i := uint32(0); i <= tx.page(tx.meta.freelist).overflow; i++ {\n-\t\t\treachable[tx.meta.freelist+pgid(i)] = tx.page(tx.meta.freelist)\n-\t\t}\n-\t}\n-\n-\t// Recursively check buckets.\n-\ttx.checkBucket(&tx.root, reachable, freed, ch)\n-\n-\t// Ensure all pages below high water mark are either reachable or freed.\n-\tfor i := pgid(0); i < tx.meta.pgid; i++ {\n-\t\t_, isReachable := reachable[i]\n-\t\tif !isReachable && !freed[i] {\n-\t\t\tch <- fmt.Errorf(\"page %d: unreachable unfreed\", int(i))\n-\t\t}\n-\t}\n-\n-\t// Close the channel to signal completion.\n-\tclose(ch)\n-}\n-\n-func (tx *Tx) checkBucket(b *Bucket, reachable map[pgid]*page, freed map[pgid]bool, ch chan error) {\n-\t// Ignore inline buckets.\n-\tif b.root == 0 {\n-\t\treturn\n-\t}\n-\n-\t// Check every page used by this bucket.\n-\tb.tx.forEachPage(b.root, 0, func(p *page, _ int) {\n-\t\tif p.id > tx.meta.pgid {\n-\t\t\tch <- fmt.Errorf(\"page %d: out of bounds: %d\", int(p.id), int(b.tx.meta.pgid))\n-\t\t}\n-\n-\t\t// Ensure each page is only referenced once.\n-\t\tfor i := pgid(0); i <= pgid(p.overflow); i++ {\n-\t\t\tvar id = p.id + i\n-\t\t\tif _, ok := reachable[id]; ok {\n-\t\t\t\tch <- fmt.Errorf(\"page %d: multiple references\", int(id))\n-\t\t\t}\n-\t\t\treachable[id] = p\n-\t\t}\n-\n-\t\t// We should only encounter un-freed leaf and branch pages.\n-\t\tif freed[p.id] {\n-\t\t\tch <- fmt.Errorf(\"page %d: reachable freed\", int(p.id))\n-\t\t} else if (p.flags&branchPageFlag) == 0 && (p.flags&leafPageFlag) == 0 {\n-\t\t\tch <- fmt.Errorf(\"page %d: invalid type: %s\", int(p.id), p.typ())\n-\t\t}\n-\t})\n-\n-\t// Check each bucket within this bucket.\n-\t_ = b.ForEach(func(k, v []byte) error {\n-\t\tif child := b.Bucket(k); child != nil {\n-\t\t\ttx.checkBucket(child, reachable, freed, ch)\n-\t\t}\n-\t\treturn nil\n-\t})\n-}\n-\n // allocate returns a contiguous block of memory starting at a given page.\n func (tx *Tx) allocate(count int) (*page, error) {\n \tp, err := tx.db.allocate(tx.meta.txid, count)\n@@ -503,8 +418,8 @@ func (tx *Tx) allocate(count int) (*page, error) {\n \ttx.pages[p.id] = p\n \n \t// Update statistics.\n-\ttx.stats.PageCount += count\n-\ttx.stats.PageAlloc += count * tx.db.pageSize\n+\ttx.stats.IncPageCount(int64(count))\n+\ttx.stats.IncPageAlloc(int64(count * tx.db.pageSize))\n \n \treturn p, nil\n }\n@@ -539,7 +454,7 @@ func (tx *Tx) write() error {\n \t\t\t}\n \n \t\t\t// Update statistics.\n-\t\t\ttx.stats.Write++\n+\t\t\ttx.stats.IncWrite(1)\n \n \t\t\t// Exit inner for loop if we've written all the chunks.\n \t\t\trem -= sz\n@@ -574,7 +489,7 @@ func (tx *Tx) write() error {\n \t\tfor i := range buf {\n \t\t\tbuf[i] = 0\n \t\t}\n-\t\ttx.db.pagePool.Put(buf)\n+\t\ttx.db.pagePool.Put(buf) //nolint:staticcheck\n \t}\n \n \treturn nil\n@@ -598,7 +513,7 @@ func (tx *Tx) writeMeta() error {\n \t}\n \n \t// Update statistics.\n-\ttx.stats.Write++\n+\ttx.stats.IncWrite(1)\n \n \treturn nil\n }\n@@ -609,26 +524,35 @@ func (tx *Tx) page(id pgid) *page {\n \t// Check the dirty pages first.\n \tif tx.pages != nil {\n \t\tif p, ok := tx.pages[id]; ok {\n+\t\t\tp.fastCheck(id)\n \t\t\treturn p\n \t\t}\n \t}\n \n \t// Otherwise return directly from the mmap.\n-\treturn tx.db.page(id)\n+\tp := tx.db.page(id)\n+\tp.fastCheck(id)\n+\treturn p\n }\n \n // forEachPage iterates over every page within a given page and executes a function.\n-func (tx *Tx) forEachPage(pgid pgid, depth int, fn func(*page, int)) {\n-\tp := tx.page(pgid)\n+func (tx *Tx) forEachPage(pgidnum pgid, fn func(*page, int, []pgid)) {\n+\tstack := make([]pgid, 10)\n+\tstack[0] = pgidnum\n+\ttx.forEachPageInternal(stack[:1], fn)\n+}\n+\n+func (tx *Tx) forEachPageInternal(pgidstack []pgid, fn func(*page, int, []pgid)) {\n+\tp := tx.page(pgidstack[len(pgidstack)-1])\n \n \t// Execute function.\n-\tfn(p, depth)\n+\tfn(p, len(pgidstack)-1, pgidstack)\n \n \t// Recursively loop over children.\n \tif (p.flags & branchPageFlag) != 0 {\n \t\tfor i := 0; i < int(p.count); i++ {\n \t\t\telem := p.branchPageElement(uint16(i))\n-\t\t\ttx.forEachPage(elem.pgid, depth+1, fn)\n+\t\t\ttx.forEachPageInternal(append(pgidstack, elem.pgid), fn)\n \t\t}\n \t}\n }\n@@ -642,6 +566,10 @@ func (tx *Tx) Page(id int) (*PageInfo, error) {\n \t\treturn nil, nil\n \t}\n \n+\tif tx.db.freelist == nil {\n+\t\treturn nil, ErrFreePagesNotLoaded\n+\t}\n+\n \t// Build the page info.\n \tp := tx.db.page(pgid(id))\n \tinfo := &PageInfo{\n@@ -663,61 +591,207 @@ func (tx *Tx) Page(id int) (*PageInfo, error) {\n // TxStats represents statistics about the actions performed by the transaction.\n type TxStats struct {\n \t// Page statistics.\n-\tPageCount int // number of page allocations\n-\tPageAlloc int // total bytes allocated\n+\t//\n+\t// DEPRECATED: Use GetPageCount() or IncPageCount()\n+\tPageCount int64 // number of page allocations\n+\t// DEPRECATED: Use GetPageAlloc() or IncPageAlloc()\n+\tPageAlloc int64 // total bytes allocated\n \n \t// Cursor statistics.\n-\tCursorCount int // number of cursors created\n+\t//\n+\t// DEPRECATED: Use GetCursorCount() or IncCursorCount()\n+\tCursorCount int64 // number of cursors created\n \n \t// Node statistics\n-\tNodeCount int // number of node allocations\n-\tNodeDeref int // number of node dereferences\n+\t//\n+\t// DEPRECATED: Use GetNodeCount() or IncNodeCount()\n+\tNodeCount int64 // number of node allocations\n+\t// DEPRECATED: Use GetNodeDeref() or IncNodeDeref()\n+\tNodeDeref int64 // number of node dereferences\n \n \t// Rebalance statistics.\n-\tRebalance     int           // number of node rebalances\n+\t//\n+\t// DEPRECATED: Use GetRebalance() or IncRebalance()\n+\tRebalance int64 // number of node rebalances\n+\t// DEPRECATED: Use GetRebalanceTime() or IncRebalanceTime()\n \tRebalanceTime time.Duration // total time spent rebalancing\n \n \t// Split/Spill statistics.\n-\tSplit     int           // number of nodes split\n-\tSpill     int           // number of nodes spilled\n+\t//\n+\t// DEPRECATED: Use GetSplit() or IncSplit()\n+\tSplit int64 // number of nodes split\n+\t// DEPRECATED: Use GetSpill() or IncSpill()\n+\tSpill int64 // number of nodes spilled\n+\t// DEPRECATED: Use GetSpillTime() or IncSpillTime()\n \tSpillTime time.Duration // total time spent spilling\n \n \t// Write statistics.\n-\tWrite     int           // number of writes performed\n+\t//\n+\t// DEPRECATED: Use GetWrite() or IncWrite()\n+\tWrite int64 // number of writes performed\n+\t// DEPRECATED: Use GetWriteTime() or IncWriteTime()\n \tWriteTime time.Duration // total time spent writing to disk\n }\n \n func (s *TxStats) add(other *TxStats) {\n-\ts.PageCount += other.PageCount\n-\ts.PageAlloc += other.PageAlloc\n-\ts.CursorCount += other.CursorCount\n-\ts.NodeCount += other.NodeCount\n-\ts.NodeDeref += other.NodeDeref\n-\ts.Rebalance += other.Rebalance\n-\ts.RebalanceTime += other.RebalanceTime\n-\ts.Split += other.Split\n-\ts.Spill += other.Spill\n-\ts.SpillTime += other.SpillTime\n-\ts.Write += other.Write\n-\ts.WriteTime += other.WriteTime\n+\ts.IncPageCount(other.GetPageCount())\n+\ts.IncPageAlloc(other.GetPageAlloc())\n+\ts.IncCursorCount(other.GetCursorCount())\n+\ts.IncNodeCount(other.GetNodeCount())\n+\ts.IncNodeDeref(other.GetNodeDeref())\n+\ts.IncRebalance(other.GetRebalance())\n+\ts.IncRebalanceTime(other.GetRebalanceTime())\n+\ts.IncSplit(other.GetSplit())\n+\ts.IncSpill(other.GetSpill())\n+\ts.IncSpillTime(other.GetSpillTime())\n+\ts.IncWrite(other.GetWrite())\n+\ts.IncWriteTime(other.GetWriteTime())\n }\n \n // Sub calculates and returns the difference between two sets of transaction stats.\n // This is useful when obtaining stats at two different points and time and\n // you need the performance counters that occurred within that time span.\n func (s *TxStats) Sub(other *TxStats) TxStats {\n \tvar diff TxStats\n-\tdiff.PageCount = s.PageCount - other.PageCount\n-\tdiff.PageAlloc = s.PageAlloc - other.PageAlloc\n-\tdiff.CursorCount = s.CursorCount - other.CursorCount\n-\tdiff.NodeCount = s.NodeCount - other.NodeCount\n-\tdiff.NodeDeref = s.NodeDeref - other.NodeDeref\n-\tdiff.Rebalance = s.Rebalance - other.Rebalance\n-\tdiff.RebalanceTime = s.RebalanceTime - other.RebalanceTime\n-\tdiff.Split = s.Split - other.Split\n-\tdiff.Spill = s.Spill - other.Spill\n-\tdiff.SpillTime = s.SpillTime - other.SpillTime\n-\tdiff.Write = s.Write - other.Write\n-\tdiff.WriteTime = s.WriteTime - other.WriteTime\n+\tdiff.PageCount = s.GetPageCount() - other.GetPageCount()\n+\tdiff.PageAlloc = s.GetPageAlloc() - other.GetPageAlloc()\n+\tdiff.CursorCount = s.GetCursorCount() - other.GetCursorCount()\n+\tdiff.NodeCount = s.GetNodeCount() - other.GetNodeCount()\n+\tdiff.NodeDeref = s.GetNodeDeref() - other.GetNodeDeref()\n+\tdiff.Rebalance = s.GetRebalance() - other.GetRebalance()\n+\tdiff.RebalanceTime = s.GetRebalanceTime() - other.GetRebalanceTime()\n+\tdiff.Split = s.GetSplit() - other.GetSplit()\n+\tdiff.Spill = s.GetSpill() - other.GetSpill()\n+\tdiff.SpillTime = s.GetSpillTime() - other.GetSpillTime()\n+\tdiff.Write = s.GetWrite() - other.GetWrite()\n+\tdiff.WriteTime = s.GetWriteTime() - other.GetWriteTime()\n \treturn diff\n }\n+\n+// GetPageCount returns PageCount atomically.\n+func (s *TxStats) GetPageCount() int64 {\n+\treturn atomic.LoadInt64(&s.PageCount)\n+}\n+\n+// IncPageCount increases PageCount atomically and returns the new value.\n+func (s *TxStats) IncPageCount(delta int64) int64 {\n+\treturn atomic.AddInt64(&s.PageCount, delta)\n+}\n+\n+// GetPageAlloc returns PageAlloc atomically.\n+func (s *TxStats) GetPageAlloc() int64 {\n+\treturn atomic.LoadInt64(&s.PageAlloc)\n+}\n+\n+// IncPageAlloc increases PageAlloc atomically and returns the new value.\n+func (s *TxStats) IncPageAlloc(delta int64) int64 {\n+\treturn atomic.AddInt64(&s.PageAlloc, delta)\n+}\n+\n+// GetCursorCount returns CursorCount atomically.\n+func (s *TxStats) GetCursorCount() int64 {\n+\treturn atomic.LoadInt64(&s.CursorCount)\n+}\n+\n+// IncCursorCount increases CursorCount atomically and return the new value.\n+func (s *TxStats) IncCursorCount(delta int64) int64 {\n+\treturn atomic.AddInt64(&s.CursorCount, delta)\n+}\n+\n+// GetNodeCount returns NodeCount atomically.\n+func (s *TxStats) GetNodeCount() int64 {\n+\treturn atomic.LoadInt64(&s.NodeCount)\n+}\n+\n+// IncNodeCount increases NodeCount atomically and returns the new value.\n+func (s *TxStats) IncNodeCount(delta int64) int64 {\n+\treturn atomic.AddInt64(&s.NodeCount, delta)\n+}\n+\n+// GetNodeDeref returns NodeDeref atomically.\n+func (s *TxStats) GetNodeDeref() int64 {\n+\treturn atomic.LoadInt64(&s.NodeDeref)\n+}\n+\n+// IncNodeDeref increases NodeDeref atomically and returns the new value.\n+func (s *TxStats) IncNodeDeref(delta int64) int64 {\n+\treturn atomic.AddInt64(&s.NodeDeref, delta)\n+}\n+\n+// GetRebalance returns Rebalance atomically.\n+func (s *TxStats) GetRebalance() int64 {\n+\treturn atomic.LoadInt64(&s.Rebalance)\n+}\n+\n+// IncRebalance increases Rebalance atomically and returns the new value.\n+func (s *TxStats) IncRebalance(delta int64) int64 {\n+\treturn atomic.AddInt64(&s.Rebalance, delta)\n+}\n+\n+// GetRebalanceTime returns RebalanceTime atomically.\n+func (s *TxStats) GetRebalanceTime() time.Duration {\n+\treturn atomicLoadDuration(&s.RebalanceTime)\n+}\n+\n+// IncRebalanceTime increases RebalanceTime atomically and returns the new value.\n+func (s *TxStats) IncRebalanceTime(delta time.Duration) time.Duration {\n+\treturn atomicAddDuration(&s.RebalanceTime, delta)\n+}\n+\n+// GetSplit returns Split atomically.\n+func (s *TxStats) GetSplit() int64 {\n+\treturn atomic.LoadInt64(&s.Split)\n+}\n+\n+// IncSplit increases Split atomically and returns the new value.\n+func (s *TxStats) IncSplit(delta int64) int64 {\n+\treturn atomic.AddInt64(&s.Split, delta)\n+}\n+\n+// GetSpill returns Spill atomically.\n+func (s *TxStats) GetSpill() int64 {\n+\treturn atomic.LoadInt64(&s.Spill)\n+}\n+\n+// IncSpill increases Spill atomically and returns the new value.\n+func (s *TxStats) IncSpill(delta int64) int64 {\n+\treturn atomic.AddInt64(&s.Spill, delta)\n+}\n+\n+// GetSpillTime returns SpillTime atomically.\n+func (s *TxStats) GetSpillTime() time.Duration {\n+\treturn atomicLoadDuration(&s.SpillTime)\n+}\n+\n+// IncSpillTime increases SpillTime atomically and returns the new value.\n+func (s *TxStats) IncSpillTime(delta time.Duration) time.Duration {\n+\treturn atomicAddDuration(&s.SpillTime, delta)\n+}\n+\n+// GetWrite returns Write atomically.\n+func (s *TxStats) GetWrite() int64 {\n+\treturn atomic.LoadInt64(&s.Write)\n+}\n+\n+// IncWrite increases Write atomically and returns the new value.\n+func (s *TxStats) IncWrite(delta int64) int64 {\n+\treturn atomic.AddInt64(&s.Write, delta)\n+}\n+\n+// GetWriteTime returns WriteTime atomically.\n+func (s *TxStats) GetWriteTime() time.Duration {\n+\treturn atomicLoadDuration(&s.WriteTime)\n+}\n+\n+// IncWriteTime increases WriteTime atomically and returns the new value.\n+func (s *TxStats) IncWriteTime(delta time.Duration) time.Duration {\n+\treturn atomicAddDuration(&s.WriteTime, delta)\n+}\n+\n+func atomicAddDuration(ptr *time.Duration, du time.Duration) time.Duration {\n+\treturn time.Duration(atomic.AddInt64((*int64)(unsafe.Pointer(ptr)), int64(du)))\n+}\n+\n+func atomicLoadDuration(ptr *time.Duration) time.Duration {\n+\treturn time.Duration(atomic.LoadInt64((*int64)(unsafe.Pointer(ptr))))\n+}"
    },
    {
      "sha": "75c7c08436dc26b4c58dcd6aebf8ebefad507193",
      "filename": "backend/vendor/go.etcd.io/bbolt/tx_check.go",
      "status": "added",
      "additions": 226,
      "deletions": 0,
      "changes": 226,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ftx_check.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ftx_check.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ftx_check.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,226 @@\n+package bbolt\n+\n+import (\n+\t\"encoding/hex\"\n+\t\"fmt\"\n+)\n+\n+// Check performs several consistency checks on the database for this transaction.\n+// An error is returned if any inconsistency is found.\n+//\n+// It can be safely run concurrently on a writable transaction. However, this\n+// incurs a high cost for large databases and databases with a lot of subbuckets\n+// because of caching. This overhead can be removed if running on a read-only\n+// transaction, however, it is not safe to execute other writer transactions at\n+// the same time.\n+func (tx *Tx) Check() <-chan error {\n+\treturn tx.CheckWithOptions()\n+}\n+\n+// CheckWithOptions allows users to provide a customized `KVStringer` implementation,\n+// so that bolt can generate human-readable diagnostic messages.\n+func (tx *Tx) CheckWithOptions(options ...CheckOption) <-chan error {\n+\tchkConfig := checkConfig{\n+\t\tkvStringer: HexKVStringer(),\n+\t}\n+\tfor _, op := range options {\n+\t\top(&chkConfig)\n+\t}\n+\n+\tch := make(chan error)\n+\tgo tx.check(chkConfig.kvStringer, ch)\n+\treturn ch\n+}\n+\n+func (tx *Tx) check(kvStringer KVStringer, ch chan error) {\n+\t// Force loading free list if opened in ReadOnly mode.\n+\ttx.db.loadFreelist()\n+\n+\t// Check if any pages are double freed.\n+\tfreed := make(map[pgid]bool)\n+\tall := make([]pgid, tx.db.freelist.count())\n+\ttx.db.freelist.copyall(all)\n+\tfor _, id := range all {\n+\t\tif freed[id] {\n+\t\t\tch <- fmt.Errorf(\"page %d: already freed\", id)\n+\t\t}\n+\t\tfreed[id] = true\n+\t}\n+\n+\t// Track every reachable page.\n+\treachable := make(map[pgid]*page)\n+\treachable[0] = tx.page(0) // meta0\n+\treachable[1] = tx.page(1) // meta1\n+\tif tx.meta.freelist != pgidNoFreelist {\n+\t\tfor i := uint32(0); i <= tx.page(tx.meta.freelist).overflow; i++ {\n+\t\t\treachable[tx.meta.freelist+pgid(i)] = tx.page(tx.meta.freelist)\n+\t\t}\n+\t}\n+\n+\t// Recursively check buckets.\n+\ttx.checkBucket(&tx.root, reachable, freed, kvStringer, ch)\n+\n+\t// Ensure all pages below high water mark are either reachable or freed.\n+\tfor i := pgid(0); i < tx.meta.pgid; i++ {\n+\t\t_, isReachable := reachable[i]\n+\t\tif !isReachable && !freed[i] {\n+\t\t\tch <- fmt.Errorf(\"page %d: unreachable unfreed\", int(i))\n+\t\t}\n+\t}\n+\n+\t// Close the channel to signal completion.\n+\tclose(ch)\n+}\n+\n+func (tx *Tx) checkBucket(b *Bucket, reachable map[pgid]*page, freed map[pgid]bool,\n+\tkvStringer KVStringer, ch chan error) {\n+\t// Ignore inline buckets.\n+\tif b.root == 0 {\n+\t\treturn\n+\t}\n+\n+\t// Check every page used by this bucket.\n+\tb.tx.forEachPage(b.root, func(p *page, _ int, stack []pgid) {\n+\t\tif p.id > tx.meta.pgid {\n+\t\t\tch <- fmt.Errorf(\"page %d: out of bounds: %d (stack: %v)\", int(p.id), int(b.tx.meta.pgid), stack)\n+\t\t}\n+\n+\t\t// Ensure each page is only referenced once.\n+\t\tfor i := pgid(0); i <= pgid(p.overflow); i++ {\n+\t\t\tvar id = p.id + i\n+\t\t\tif _, ok := reachable[id]; ok {\n+\t\t\t\tch <- fmt.Errorf(\"page %d: multiple references (stack: %v)\", int(id), stack)\n+\t\t\t}\n+\t\t\treachable[id] = p\n+\t\t}\n+\n+\t\t// We should only encounter un-freed leaf and branch pages.\n+\t\tif freed[p.id] {\n+\t\t\tch <- fmt.Errorf(\"page %d: reachable freed\", int(p.id))\n+\t\t} else if (p.flags&branchPageFlag) == 0 && (p.flags&leafPageFlag) == 0 {\n+\t\t\tch <- fmt.Errorf(\"page %d: invalid type: %s (stack: %v)\", int(p.id), p.typ(), stack)\n+\t\t}\n+\t})\n+\n+\ttx.recursivelyCheckPages(b.root, kvStringer.KeyToString, ch)\n+\n+\t// Check each bucket within this bucket.\n+\t_ = b.ForEachBucket(func(k []byte) error {\n+\t\tif child := b.Bucket(k); child != nil {\n+\t\t\ttx.checkBucket(child, reachable, freed, kvStringer, ch)\n+\t\t}\n+\t\treturn nil\n+\t})\n+}\n+\n+// recursivelyCheckPages confirms database consistency with respect to b-tree\n+// key order constraints:\n+//   - keys on pages must be sorted\n+//   - keys on children pages are between 2 consecutive keys on the parent's branch page).\n+func (tx *Tx) recursivelyCheckPages(pgId pgid, keyToString func([]byte) string, ch chan error) {\n+\ttx.recursivelyCheckPagesInternal(pgId, nil, nil, nil, keyToString, ch)\n+}\n+\n+// recursivelyCheckPagesInternal verifies that all keys in the subtree rooted at `pgid` are:\n+//   - >=`minKeyClosed` (can be nil)\n+//   - <`maxKeyOpen` (can be nil)\n+//   - Are in right ordering relationship to their parents.\n+//     `pagesStack` is expected to contain IDs of pages from the tree root to `pgid` for the clean debugging message.\n+func (tx *Tx) recursivelyCheckPagesInternal(\n+\tpgId pgid, minKeyClosed, maxKeyOpen []byte, pagesStack []pgid,\n+\tkeyToString func([]byte) string, ch chan error) (maxKeyInSubtree []byte) {\n+\n+\tp := tx.page(pgId)\n+\tpagesStack = append(pagesStack, pgId)\n+\tswitch {\n+\tcase p.flags&branchPageFlag != 0:\n+\t\t// For branch page we navigate ranges of all subpages.\n+\t\trunningMin := minKeyClosed\n+\t\tfor i := range p.branchPageElements() {\n+\t\t\telem := p.branchPageElement(uint16(i))\n+\t\t\tverifyKeyOrder(elem.pgid, \"branch\", i, elem.key(), runningMin, maxKeyOpen, ch, keyToString, pagesStack)\n+\n+\t\t\tmaxKey := maxKeyOpen\n+\t\t\tif i < len(p.branchPageElements())-1 {\n+\t\t\t\tmaxKey = p.branchPageElement(uint16(i + 1)).key()\n+\t\t\t}\n+\t\t\tmaxKeyInSubtree = tx.recursivelyCheckPagesInternal(elem.pgid, elem.key(), maxKey, pagesStack, keyToString, ch)\n+\t\t\trunningMin = maxKeyInSubtree\n+\t\t}\n+\t\treturn maxKeyInSubtree\n+\tcase p.flags&leafPageFlag != 0:\n+\t\trunningMin := minKeyClosed\n+\t\tfor i := range p.leafPageElements() {\n+\t\t\telem := p.leafPageElement(uint16(i))\n+\t\t\tverifyKeyOrder(pgId, \"leaf\", i, elem.key(), runningMin, maxKeyOpen, ch, keyToString, pagesStack)\n+\t\t\trunningMin = elem.key()\n+\t\t}\n+\t\tif p.count > 0 {\n+\t\t\treturn p.leafPageElement(p.count - 1).key()\n+\t\t}\n+\tdefault:\n+\t\tch <- fmt.Errorf(\"unexpected page type for pgId:%d\", pgId)\n+\t}\n+\treturn maxKeyInSubtree\n+}\n+\n+/***\n+ * verifyKeyOrder checks whether an entry with given #index on pgId (pageType: \"branch|leaf\") that has given \"key\",\n+ * is within range determined by (previousKey..maxKeyOpen) and reports found violations to the channel (ch).\n+ */\n+func verifyKeyOrder(pgId pgid, pageType string, index int, key []byte, previousKey []byte, maxKeyOpen []byte, ch chan error, keyToString func([]byte) string, pagesStack []pgid) {\n+\tif index == 0 && previousKey != nil && compareKeys(previousKey, key) > 0 {\n+\t\tch <- fmt.Errorf(\"the first key[%d]=(hex)%s on %s page(%d) needs to be >= the key in the ancestor (%s). Stack: %v\",\n+\t\t\tindex, keyToString(key), pageType, pgId, keyToString(previousKey), pagesStack)\n+\t}\n+\tif index > 0 {\n+\t\tcmpRet := compareKeys(previousKey, key)\n+\t\tif cmpRet > 0 {\n+\t\t\tch <- fmt.Errorf(\"key[%d]=(hex)%s on %s page(%d) needs to be > (found <) than previous element (hex)%s. Stack: %v\",\n+\t\t\t\tindex, keyToString(key), pageType, pgId, keyToString(previousKey), pagesStack)\n+\t\t}\n+\t\tif cmpRet == 0 {\n+\t\t\tch <- fmt.Errorf(\"key[%d]=(hex)%s on %s page(%d) needs to be > (found =) than previous element (hex)%s. Stack: %v\",\n+\t\t\t\tindex, keyToString(key), pageType, pgId, keyToString(previousKey), pagesStack)\n+\t\t}\n+\t}\n+\tif maxKeyOpen != nil && compareKeys(key, maxKeyOpen) >= 0 {\n+\t\tch <- fmt.Errorf(\"key[%d]=(hex)%s on %s page(%d) needs to be < than key of the next element in ancestor (hex)%s. Pages stack: %v\",\n+\t\t\tindex, keyToString(key), pageType, pgId, keyToString(previousKey), pagesStack)\n+\t}\n+}\n+\n+// ===========================================================================================\n+\n+type checkConfig struct {\n+\tkvStringer KVStringer\n+}\n+\n+type CheckOption func(options *checkConfig)\n+\n+func WithKVStringer(kvStringer KVStringer) CheckOption {\n+\treturn func(c *checkConfig) {\n+\t\tc.kvStringer = kvStringer\n+\t}\n+}\n+\n+// KVStringer allows to prepare human-readable diagnostic messages.\n+type KVStringer interface {\n+\tKeyToString([]byte) string\n+\tValueToString([]byte) string\n+}\n+\n+// HexKVStringer serializes both key & value to hex representation.\n+func HexKVStringer() KVStringer {\n+\treturn hexKvStringer{}\n+}\n+\n+type hexKvStringer struct{}\n+\n+func (_ hexKvStringer) KeyToString(key []byte) string {\n+\treturn hex.EncodeToString(key)\n+}\n+\n+func (_ hexKvStringer) ValueToString(value []byte) string {\n+\treturn hex.EncodeToString(value)\n+}"
    },
    {
      "sha": "bbdc61745817921cf25aea059d3aefde8d00b754",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/change_stream.go",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -119,10 +119,7 @@ func newChangeStream(ctx context.Context, config changeStreamConfig, pipeline in\n \n \tcs.sess = sessionFromContext(ctx)\n \tif cs.sess == nil && cs.client.sessionPool != nil {\n-\t\tcs.sess, cs.err = session.NewClientSession(cs.client.sessionPool, cs.client.id, session.Implicit)\n-\t\tif cs.err != nil {\n-\t\t\treturn nil, cs.Err()\n-\t\t}\n+\t\tcs.sess = session.NewImplicitClientSession(cs.client.sessionPool, cs.client.id)\n \t}\n \tif cs.err = cs.client.validSession(cs.sess); cs.err != nil {\n \t\tcloseImplicitSession(cs.sess)"
    },
    {
      "sha": "b38663747cb4ce352503c46c2c1ccbc6d1449961",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/client.go",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -387,7 +387,7 @@ func (c *Client) StartSession(opts ...*options.SessionOptions) (Session, error)\n \t\tcoreOpts.Snapshot = sopts.Snapshot\n \t}\n \n-\tsess, err := session.NewClientSession(c.sessionPool, c.id, session.Explicit, coreOpts)\n+\tsess, err := session.NewClientSession(c.sessionPool, c.id, coreOpts)\n \tif err != nil {\n \t\treturn nil, replaceErrors(err)\n \t}\n@@ -648,10 +648,7 @@ func (c *Client) ListDatabases(ctx context.Context, filter interface{}, opts ...\n \t\treturn ListDatabasesResult{}, err\n \t}\n \tif sess == nil && c.sessionPool != nil {\n-\t\tsess, err = session.NewClientSession(c.sessionPool, c.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn ListDatabasesResult{}, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(c.sessionPool, c.id)\n \t\tdefer sess.EndSession()\n \t}\n "
    },
    {
      "sha": "547110ea2d9c69e53e100f8f984bf374ed3e3508",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/collection.go",
      "status": "modified",
      "additions": 12,
      "deletions": 50,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcollection.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcollection.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcollection.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -59,7 +59,7 @@ type aggregateParams struct {\n }\n \n func closeImplicitSession(sess *session.Client) {\n-\tif sess != nil && sess.SessionType == session.Implicit {\n+\tif sess != nil && sess.IsImplicit {\n \t\tsess.EndSession()\n \t}\n }\n@@ -187,11 +187,7 @@ func (coll *Collection) BulkWrite(ctx context.Context, models []WriteModel,\n \n \tsess := sessionFromContext(ctx)\n \tif sess == nil && coll.client.sessionPool != nil {\n-\t\tvar err error\n-\t\tsess, err = session.NewClientSession(coll.client.sessionPool, coll.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(coll.client.sessionPool, coll.client.id)\n \t\tdefer sess.EndSession()\n \t}\n \n@@ -255,11 +251,7 @@ func (coll *Collection) insert(ctx context.Context, documents []interface{},\n \n \tsess := sessionFromContext(ctx)\n \tif sess == nil && coll.client.sessionPool != nil {\n-\t\tvar err error\n-\t\tsess, err = session.NewClientSession(coll.client.sessionPool, coll.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(coll.client.sessionPool, coll.client.id)\n \t\tdefer sess.EndSession()\n \t}\n \n@@ -415,10 +407,7 @@ func (coll *Collection) delete(ctx context.Context, filter interface{}, deleteOn\n \n \tsess := sessionFromContext(ctx)\n \tif sess == nil && coll.client.sessionPool != nil {\n-\t\tsess, err = session.NewClientSession(coll.client.sessionPool, coll.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(coll.client.sessionPool, coll.client.id)\n \t\tdefer sess.EndSession()\n \t}\n \n@@ -546,11 +535,7 @@ func (coll *Collection) updateOrReplace(ctx context.Context, filter bsoncore.Doc\n \n \tsess := sessionFromContext(ctx)\n \tif sess == nil && coll.client.sessionPool != nil {\n-\t\tvar err error\n-\t\tsess, err = session.NewClientSession(coll.client.sessionPool, coll.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(coll.client.sessionPool, coll.client.id)\n \t\tdefer sess.EndSession()\n \t}\n \n@@ -801,10 +786,7 @@ func aggregate(a aggregateParams) (cur *Cursor, err error) {\n \t\t}\n \t}()\n \tif sess == nil && a.client.sessionPool != nil {\n-\t\tsess, err = session.NewClientSession(a.client.sessionPool, a.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(a.client.sessionPool, a.client.id)\n \t}\n \tif err = a.client.validSession(sess); err != nil {\n \t\treturn nil, err\n@@ -950,10 +932,7 @@ func (coll *Collection) CountDocuments(ctx context.Context, filter interface{},\n \n \tsess := sessionFromContext(ctx)\n \tif sess == nil && coll.client.sessionPool != nil {\n-\t\tsess, err = session.NewClientSession(coll.client.sessionPool, coll.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn 0, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(coll.client.sessionPool, coll.client.id)\n \t\tdefer sess.EndSession()\n \t}\n \tif err = coll.client.validSession(sess); err != nil {\n@@ -1030,10 +1009,7 @@ func (coll *Collection) EstimatedDocumentCount(ctx context.Context,\n \n \tvar err error\n \tif sess == nil && coll.client.sessionPool != nil {\n-\t\tsess, err = session.NewClientSession(coll.client.sessionPool, coll.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn 0, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(coll.client.sessionPool, coll.client.id)\n \t\tdefer sess.EndSession()\n \t}\n \n@@ -1099,10 +1075,7 @@ func (coll *Collection) Distinct(ctx context.Context, fieldName string, filter i\n \tsess := sessionFromContext(ctx)\n \n \tif sess == nil && coll.client.sessionPool != nil {\n-\t\tsess, err = session.NewClientSession(coll.client.sessionPool, coll.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(coll.client.sessionPool, coll.client.id)\n \t\tdefer sess.EndSession()\n \t}\n \n@@ -1198,11 +1171,7 @@ func (coll *Collection) Find(ctx context.Context, filter interface{},\n \t\t}\n \t}()\n \tif sess == nil && coll.client.sessionPool != nil {\n-\t\tvar err error\n-\t\tsess, err = session.NewClientSession(coll.client.sessionPool, coll.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(coll.client.sessionPool, coll.client.id)\n \t}\n \n \terr = coll.client.validSession(sess)\n@@ -1404,10 +1373,7 @@ func (coll *Collection) findAndModify(ctx context.Context, op *operation.FindAnd\n \tsess := sessionFromContext(ctx)\n \tvar err error\n \tif sess == nil && coll.client.sessionPool != nil {\n-\t\tsess, err = session.NewClientSession(coll.client.sessionPool, coll.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn &SingleResult{err: err}\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(coll.client.sessionPool, coll.client.id)\n \t\tdefer sess.EndSession()\n \t}\n \n@@ -1797,11 +1763,7 @@ func (coll *Collection) drop(ctx context.Context) error {\n \n \tsess := sessionFromContext(ctx)\n \tif sess == nil && coll.client.sessionPool != nil {\n-\t\tvar err error\n-\t\tsess, err = session.NewClientSession(coll.client.sessionPool, coll.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(coll.client.sessionPool, coll.client.id)\n \t\tdefer sess.EndSession()\n \t}\n "
    },
    {
      "sha": "9b0b70344c422dbd6a541fdf2a2c5a236f8f3525",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/cursor.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcursor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcursor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcursor.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -309,7 +309,7 @@ func (c *Cursor) addFromBatch(sliceVal reflect.Value, elemType reflect.Type, bat\n }\n \n func (c *Cursor) closeImplicitSession() {\n-\tif c.clientSession != nil && c.clientSession.SessionType == session.Implicit {\n+\tif c.clientSession != nil && c.clientSession.IsImplicit {\n \t\tc.clientSession.EndSession()\n \t}\n }"
    },
    {
      "sha": "415537d514c68684989ba7a312da3c728037691d",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/database.go",
      "status": "modified",
      "additions": 4,
      "deletions": 19,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdatabase.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdatabase.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdatabase.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -136,11 +136,7 @@ func (db *Database) processRunCommand(ctx context.Context, cmd interface{},\n \tcursorCommand bool, opts ...*options.RunCmdOptions) (*operation.Command, *session.Client, error) {\n \tsess := sessionFromContext(ctx)\n \tif sess == nil && db.client.sessionPool != nil {\n-\t\tvar err error\n-\t\tsess, err = session.NewClientSession(db.client.sessionPool, db.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn nil, sess, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(db.client.sessionPool, db.client.id)\n \t}\n \n \terr := db.client.validSession(sess)\n@@ -261,11 +257,7 @@ func (db *Database) Drop(ctx context.Context) error {\n \n \tsess := sessionFromContext(ctx)\n \tif sess == nil && db.client.sessionPool != nil {\n-\t\tvar err error\n-\t\tsess, err = session.NewClientSession(db.client.sessionPool, db.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(db.client.sessionPool, db.client.id)\n \t\tdefer sess.EndSession()\n \t}\n \n@@ -362,10 +354,7 @@ func (db *Database) ListCollections(ctx context.Context, filter interface{}, opt\n \n \tsess := sessionFromContext(ctx)\n \tif sess == nil && db.client.sessionPool != nil {\n-\t\tsess, err = session.NewClientSession(db.client.sessionPool, db.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(db.client.sessionPool, db.client.id)\n \t}\n \n \terr = db.client.validSession(sess)\n@@ -775,11 +764,7 @@ func (db *Database) CreateView(ctx context.Context, viewName, viewOn string, pip\n func (db *Database) executeCreateOperation(ctx context.Context, op *operation.Create) error {\n \tsess := sessionFromContext(ctx)\n \tif sess == nil && db.client.sessionPool != nil {\n-\t\tvar err error\n-\t\tsess, err = session.NewClientSession(db.client.sessionPool, db.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(db.client.sessionPool, db.client.id)\n \t\tdefer sess.EndSession()\n \t}\n "
    },
    {
      "sha": "3500b775fb98070038421486d83d7c20bd1a8c7c",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/index_view.go",
      "status": "modified",
      "additions": 3,
      "deletions": 14,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Findex_view.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Findex_view.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Findex_view.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -72,11 +72,7 @@ func (iv IndexView) List(ctx context.Context, opts ...*options.ListIndexesOption\n \n \tsess := sessionFromContext(ctx)\n \tif sess == nil && iv.coll.client.sessionPool != nil {\n-\t\tvar err error\n-\t\tsess, err = session.NewClientSession(iv.coll.client.sessionPool, iv.coll.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(iv.coll.client.sessionPool, iv.coll.client.id)\n \t}\n \n \terr := iv.coll.client.validSession(sess)\n@@ -227,10 +223,7 @@ func (iv IndexView) CreateMany(ctx context.Context, models []IndexModel, opts ..\n \tsess := sessionFromContext(ctx)\n \n \tif sess == nil && iv.coll.client.sessionPool != nil {\n-\t\tsess, err = session.NewClientSession(iv.coll.client.sessionPool, iv.coll.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(iv.coll.client.sessionPool, iv.coll.client.id)\n \t\tdefer sess.EndSession()\n \t}\n \n@@ -367,11 +360,7 @@ func (iv IndexView) drop(ctx context.Context, name string, opts ...*options.Drop\n \n \tsess := sessionFromContext(ctx)\n \tif sess == nil && iv.coll.client.sessionPool != nil {\n-\t\tvar err error\n-\t\tsess, err = session.NewClientSession(iv.coll.client.sessionPool, iv.coll.client.id, session.Implicit)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n+\t\tsess = session.NewImplicitClientSession(iv.coll.client.sessionPool, iv.coll.client.id)\n \t\tdefer sess.EndSession()\n \t}\n "
    },
    {
      "sha": "dd8763126ecf1683725f53af644936751a2fa74a",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/version/version.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fversion%2Fversion.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fversion%2Fversion.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fversion%2Fversion.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -8,4 +8,4 @@\n package version // import \"go.mongodb.org/mongo-driver/version\"\n \n // Driver is the current version of the driver.\n-var Driver = \"v1.11.1\"\n+var Driver = \"v1.11.3\""
    },
    {
      "sha": "789d2b982873be9a1ce295637426319fa73a6936",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/bsonx/bsoncore/value.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fbsonx%2Fbsoncore%2Fvalue.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fbsonx%2Fbsoncore%2Fvalue.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fbsonx%2Fbsoncore%2Fvalue.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -323,7 +323,7 @@ func (v Value) String() string {\n \t\tif !ok {\n \t\t\treturn \"\"\n \t\t}\n-\t\treturn fmt.Sprintf(`{\"$timestamp\":{\"t\":\"%s\",\"i\":\"%s\"}}`, strconv.FormatUint(uint64(t), 10), strconv.FormatUint(uint64(i), 10))\n+\t\treturn fmt.Sprintf(`{\"$timestamp\":{\"t\":%v,\"i\":%v}}`, t, i)\n \tcase bsontype.Int64:\n \t\ti64, ok := v.Int64OK()\n \t\tif !ok {"
    },
    {
      "sha": "b0a03f1d306c501a0ce11287b05a965de9c173cd",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/compression.go",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fcompression.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fcompression.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fcompression.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -94,17 +94,17 @@ func DecompressPayload(in []byte, opts CompressionOpts) ([]byte, error) {\n \t\t}\n \t\treturn uncompressed, nil\n \tcase wiremessage.CompressorZstd:\n-\t\tw, err := zstd.NewReader(bytes.NewBuffer(in))\n+\t\tr, err := zstd.NewReader(bytes.NewBuffer(in))\n \t\tif err != nil {\n \t\t\treturn nil, err\n \t\t}\n-\t\tdefer w.Close()\n-\t\tvar b bytes.Buffer\n-\t\t_, err = io.Copy(&b, w)\n+\t\tdefer r.Close()\n+\t\tuncompressed := make([]byte, opts.UncompressedSize)\n+\t\t_, err = io.ReadFull(r, uncompressed)\n \t\tif err != nil {\n \t\t\treturn nil, err\n \t\t}\n-\t\treturn b.Bytes(), nil\n+\t\treturn uncompressed, nil\n \tdefault:\n \t\treturn nil, fmt.Errorf(\"unknown compressor ID %v\", opts.Compressor)\n \t}"
    },
    {
      "sha": "385b1c245efa383f3f7aa83407b37446529ba533",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation.go",
      "status": "modified",
      "additions": 22,
      "deletions": 37,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -433,10 +433,11 @@ func (op Operation) Execute(ctx context.Context) error {\n \t\t// size to 16MiB because that's the maximum wire message size supported by MongoDB.\n \t\t//\n \t\t// Comment copied from https://cs.opensource.google/go/go/+/refs/tags/go1.19:src/fmt/print.go;l=147\n-\t\tif cap(*wm) > 16*1024*1024 {\n-\t\t\treturn\n+\t\t//\n+\t\t// Recycle byte slices that are smaller than 16MiB and at least half occupied.\n+\t\tif c := cap(*wm); c < 16*1024*1024 && c/2 < len(*wm) {\n+\t\t\tmemoryPool.Put(wm)\n \t\t}\n-\t\tmemoryPool.Put(wm)\n \t}()\n \tfor {\n \t\t// If the server or connection are nil, try to select a new server and get a new connection.\n@@ -463,7 +464,7 @@ func (op Operation) Execute(ctx context.Context) error {\n \t\t\t// Set the server if it has not already been set and the session type is implicit. This will\n \t\t\t// limit the number of implicit sessions to no greater than an application's maxPoolSize\n \t\t\t// (ignoring operations that hold on to the session like cursors).\n-\t\t\tif op.Client != nil && op.Client.Server == nil && op.Client.SessionType == session.Implicit {\n+\t\t\tif op.Client != nil && op.Client.Server == nil && op.Client.IsImplicit {\n \t\t\t\tif op.Client.Terminated {\n \t\t\t\t\treturn fmt.Errorf(\"unexpected nil session for a terminated implicit session\")\n \t\t\t\t}\n@@ -595,7 +596,7 @@ func (op Operation) Execute(ctx context.Context) error {\n \t\t\tif moreToCome {\n \t\t\t\troundTrip = op.moreToComeRoundTrip\n \t\t\t}\n-\t\t\tres, *wm, err = roundTrip(ctx, conn, *wm)\n+\t\t\tres, err = roundTrip(ctx, conn, *wm)\n \n \t\t\tif ep, ok := srvr.(ErrorProcessor); ok {\n \t\t\t\t_ = ep.ProcessError(err, conn)\n@@ -855,18 +856,18 @@ func (op Operation) retryable(desc description.Server) bool {\n \n // roundTrip writes a wiremessage to the connection and then reads a wiremessage. The wm parameter\n // is reused when reading the wiremessage.\n-func (op Operation) roundTrip(ctx context.Context, conn Connection, wm []byte) (result, pooledSlice []byte, err error) {\n-\terr = conn.WriteWireMessage(ctx, wm)\n+func (op Operation) roundTrip(ctx context.Context, conn Connection, wm []byte) ([]byte, error) {\n+\terr := conn.WriteWireMessage(ctx, wm)\n \tif err != nil {\n-\t\treturn nil, wm, op.networkError(err)\n+\t\treturn nil, op.networkError(err)\n \t}\n-\treturn op.readWireMessage(ctx, conn, wm)\n+\treturn op.readWireMessage(ctx, conn)\n }\n \n-func (op Operation) readWireMessage(ctx context.Context, conn Connection, wm []byte) (result, pooledSlice []byte, err error) {\n-\twm, err = conn.ReadWireMessage(ctx, wm[:0])\n+func (op Operation) readWireMessage(ctx context.Context, conn Connection) (result []byte, err error) {\n+\twm, err := conn.ReadWireMessage(ctx, nil)\n \tif err != nil {\n-\t\treturn nil, wm, op.networkError(err)\n+\t\treturn nil, op.networkError(err)\n \t}\n \n \t// If we're using a streamable connection, we set its streaming state based on the moreToCome flag in the server\n@@ -878,14 +879,11 @@ func (op Operation) readWireMessage(ctx context.Context, conn Connection, wm []b\n \t// decompress wiremessage\n \twm, err = op.decompressWireMessage(wm)\n \tif err != nil {\n-\t\treturn nil, wm, err\n+\t\treturn nil, err\n \t}\n \n \t// decode\n-\tb, err := op.decodeResult(wm)\n-\t// Copy b to extend the lifetime. b may be a subslice of wm. wm will be added back to the memory pool and reused.\n-\tres := make([]byte, len(b))\n-\tcopy(res, b)\n+\tres, err := op.decodeResult(wm)\n \t// Update cluster/operation time and recovery tokens before handling the error to ensure we're properly updating\n \t// everything.\n \top.updateClusterTimes(res)\n@@ -898,14 +896,14 @@ func (op Operation) readWireMessage(ctx context.Context, conn Connection, wm []b\n \t}\n \n \tif err != nil {\n-\t\treturn res, wm, err\n+\t\treturn res, err\n \t}\n \n \t// If there is no error, automatically attempt to decrypt all results if client side encryption is enabled.\n \tif op.Crypt != nil {\n \t\tres, err = op.Crypt.Decrypt(ctx, res)\n \t}\n-\treturn res, wm, err\n+\treturn res, err\n }\n \n // networkError wraps the provided error in an Error with label \"NetworkError\" and, if a transaction\n@@ -931,15 +929,15 @@ func (op Operation) networkError(err error) error {\n \n // moreToComeRoundTrip writes a wiremessage to the provided connection. This is used when an OP_MSG is\n // being sent with  the moreToCome bit set.\n-func (op *Operation) moreToComeRoundTrip(ctx context.Context, conn Connection, wm []byte) (result, pooledSlice []byte, err error) {\n+func (op *Operation) moreToComeRoundTrip(ctx context.Context, conn Connection, wm []byte) (result []byte, err error) {\n \terr = conn.WriteWireMessage(ctx, wm)\n \tif err != nil {\n \t\tif op.Client != nil {\n \t\t\top.Client.MarkDirty()\n \t\t}\n \t\terr = Error{Message: err.Error(), Labels: []string{TransientTransactionError, NetworkError}, Wrapped: err}\n \t}\n-\treturn bsoncore.BuildDocument(nil, bsoncore.AppendInt32Element(nil, \"ok\", 1)), wm, err\n+\treturn bsoncore.BuildDocument(nil, bsoncore.AppendInt32Element(nil, \"ok\", 1)), err\n }\n \n // decompressWireMessage handles decompressing a wiremessage. If the wiremessage\n@@ -974,26 +972,13 @@ func (Operation) decompressWireMessage(wm []byte) ([]byte, error) {\n \t\treturn nil, errors.New(\"malformed OP_COMPRESSED: insufficient bytes for compressed wiremessage\")\n \t}\n \n-\t// Copy msg, which is a subslice of wm. wm will be used to store the return value of the decompressed message.\n-\tb := memoryPool.Get().(*[]byte)\n-\tmsglen := len(msg)\n-\tif len(*b) < msglen {\n-\t\t*b = make([]byte, msglen)\n-\t}\n-\tcopy(*b, msg)\n-\tdefer func() {\n-\t\tmemoryPool.Put(b)\n-\t}()\n-\n-\tif l := int(uncompressedSize) + 16; cap(wm) < l {\n-\t\twm = make([]byte, 0, l)\n-\t}\n-\twm = wiremessage.AppendHeader(wm[:0], uncompressedSize+16, reqid, respto, opcode)\n+\twm = make([]byte, 0, int(uncompressedSize)+16)\n+\twm = wiremessage.AppendHeader(wm, uncompressedSize+16, reqid, respto, opcode)\n \topts := CompressionOpts{\n \t\tCompressor:       compressorID,\n \t\tUncompressedSize: uncompressedSize,\n \t}\n-\tuncompressed, err := DecompressPayload((*b)[0:msglen], opts)\n+\tuncompressed, err := DecompressPayload(msg, opts)\n \tif err != nil {\n \t\treturn nil, err\n \t}"
    },
    {
      "sha": "e0879de3162356490c3c28daf4ec0db71d81e6e0",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation_exhaust.go",
      "status": "modified",
      "additions": 1,
      "deletions": 7,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation_exhaust.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation_exhaust.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation_exhaust.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -18,13 +18,7 @@ func (op Operation) ExecuteExhaust(ctx context.Context, conn StreamerConnection)\n \t\treturn errors.New(\"exhaust read must be done with a connection that is currently streaming\")\n \t}\n \n-\twm := memoryPool.Get().(*[]byte)\n-\tdefer func() {\n-\t\tmemoryPool.Put(wm)\n-\t}()\n-\tvar res []byte\n-\tvar err error\n-\tres, *wm, err = op.readWireMessage(ctx, conn, (*wm)[:0])\n+\tres, err := op.readWireMessage(ctx, conn)\n \tif err != nil {\n \t\treturn err\n \t}"
    },
    {
      "sha": "ab73e6843b1edb04b572c50c272c8111057dc5e7",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/session/client_session.go",
      "status": "modified",
      "additions": 24,
      "deletions": 24,
      "changes": 48,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fsession%2Fclient_session.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fsession%2Fclient_session.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fsession%2Fclient_session.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -46,15 +46,6 @@ var ErrUnackWCUnsupported = errors.New(\"transactions do not support unacknowledg\n // ErrSnapshotTransaction is returned if an transaction is started on a snapshot session.\n var ErrSnapshotTransaction = errors.New(\"transactions are not supported in snapshot sessions\")\n \n-// Type describes the type of the session\n-type Type uint8\n-\n-// These constants are the valid types for a client session.\n-const (\n-\tExplicit Type = iota\n-\tImplicit\n-)\n-\n // TransactionState indicates the state of the transactions FSM.\n type TransactionState uint8\n \n@@ -113,7 +104,7 @@ type Client struct {\n \tClusterTime    bson.Raw\n \tConsistent     bool // causal consistency\n \tOperationTime  *primitive.Timestamp\n-\tSessionType    Type\n+\tIsImplicit     bool\n \tTerminated     bool\n \tRetryingCommit bool\n \tCommitting     bool\n@@ -179,15 +170,27 @@ func MaxClusterTime(ct1, ct2 bson.Raw) bson.Raw {\n \treturn ct1\n }\n \n-// NewClientSession creates a Client.\n-func NewClientSession(pool *Pool, clientID uuid.UUID, sessionType Type, opts ...*ClientOptions) (*Client, error) {\n-\tmergedOpts := mergeClientOptions(opts...)\n+// NewImplicitClientSession creates a new implicit client-side session.\n+func NewImplicitClientSession(pool *Pool, clientID uuid.UUID) *Client {\n+\t// Server-side session checkout for implicit sessions is deferred until after checking out a\n+\t// connection, so don't check out a server-side session right now. This will limit the number of\n+\t// implicit sessions to no greater than an application's maxPoolSize.\n \n+\treturn &Client{\n+\t\tpool:       pool,\n+\t\tClientID:   clientID,\n+\t\tIsImplicit: true,\n+\t}\n+}\n+\n+// NewClientSession creates a new explicit client-side session.\n+func NewClientSession(pool *Pool, clientID uuid.UUID, opts ...*ClientOptions) (*Client, error) {\n \tc := &Client{\n-\t\tClientID:    clientID,\n-\t\tSessionType: sessionType,\n-\t\tpool:        pool,\n+\t\tpool:     pool,\n+\t\tClientID: clientID,\n \t}\n+\n+\tmergedOpts := mergeClientOptions(opts...)\n \tif mergedOpts.DefaultReadPreference != nil {\n \t\tc.transactionRp = mergedOpts.DefaultReadPreference\n \t}\n@@ -204,8 +207,9 @@ func NewClientSession(pool *Pool, clientID uuid.UUID, sessionType Type, opts ...\n \t\tc.Snapshot = *mergedOpts.Snapshot\n \t}\n \n-\t// The default for causalConsistency is true, unless Snapshot is enabled, then it's false. Set\n-\t// the default and then allow any explicit causalConsistency setting to override it.\n+\t// For explicit sessions, the default for causalConsistency is true, unless Snapshot is\n+\t// enabled, then it's false. Set the default and then allow any explicit causalConsistency\n+\t// setting to override it.\n \tc.Consistent = !c.Snapshot\n \tif mergedOpts.CausalConsistency != nil {\n \t\tc.Consistent = *mergedOpts.CausalConsistency\n@@ -215,12 +219,8 @@ func NewClientSession(pool *Pool, clientID uuid.UUID, sessionType Type, opts ...\n \t\treturn nil, errors.New(\"causal consistency and snapshot cannot both be set for a session\")\n \t}\n \n-\t// Server checkout for implicit sessions are deferred until after checking out a connection. This will limit the\n-\t// number of implicit sessions to no greater than an applications maxPoolSize.\n-\tif sessionType == Explicit {\n-\t\tif err := c.SetServer(); err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n+\tif err := c.SetServer(); err != nil {\n+\t\treturn nil, err\n \t}\n \n \treturn c, nil"
    },
    {
      "sha": "1a8bde43c625caace6cf769f4b3aa0e12bd67499",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/connection.go",
      "status": "modified",
      "additions": 23,
      "deletions": 14,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -578,9 +578,10 @@ func (c initConnection) SupportsStreaming() bool {\n }\n \n // Connection implements the driver.Connection interface to allow reading and writing wire\n-// messages and the driver.Expirable interface to allow expiring.\n+// messages and the driver.Expirable interface to allow expiring. It wraps an underlying\n+// topology.connection to make it more goroutine-safe and nil-safe.\n type Connection struct {\n-\t*connection\n+\tconnection    *connection\n \trefCount      int\n \tcleanupPoolFn func()\n \n@@ -602,7 +603,7 @@ func (c *Connection) WriteWireMessage(ctx context.Context, wm []byte) error {\n \tif c.connection == nil {\n \t\treturn ErrConnectionClosed\n \t}\n-\treturn c.writeWireMessage(ctx, wm)\n+\treturn c.connection.writeWireMessage(ctx, wm)\n }\n \n // ReadWireMessage handles reading a wire message from the underlying connection. The dst parameter\n@@ -613,7 +614,7 @@ func (c *Connection) ReadWireMessage(ctx context.Context, dst []byte) ([]byte, e\n \tif c.connection == nil {\n \t\treturn dst, ErrConnectionClosed\n \t}\n-\treturn c.readWireMessage(ctx, dst)\n+\treturn c.connection.readWireMessage(ctx, dst)\n }\n \n // CompressWireMessage handles compressing the provided wire message using the underlying\n@@ -656,7 +657,7 @@ func (c *Connection) Description() description.Server {\n \tif c.connection == nil {\n \t\treturn description.Server{}\n \t}\n-\treturn c.desc\n+\treturn c.connection.desc\n }\n \n // Close returns this connection to the connection pool. This method may not closeConnection the underlying\n@@ -679,12 +680,12 @@ func (c *Connection) Expire() error {\n \t\treturn nil\n \t}\n \n-\t_ = c.close()\n+\t_ = c.connection.close()\n \treturn c.cleanupReferences()\n }\n \n func (c *Connection) cleanupReferences() error {\n-\terr := c.pool.checkIn(c.connection)\n+\terr := c.connection.pool.checkIn(c.connection)\n \tif c.cleanupPoolFn != nil {\n \t\tc.cleanupPoolFn()\n \t\tc.cleanupPoolFn = nil\n@@ -709,14 +710,22 @@ func (c *Connection) ID() string {\n \tif c.connection == nil {\n \t\treturn \"<closed>\"\n \t}\n-\treturn c.id\n+\treturn c.connection.id\n+}\n+\n+// ServerConnectionID returns the server connection ID of this connection.\n+func (c *Connection) ServerConnectionID() *int32 {\n+\tif c.connection == nil {\n+\t\treturn nil\n+\t}\n+\treturn c.connection.serverConnectionID\n }\n \n // Stale returns if the connection is stale.\n func (c *Connection) Stale() bool {\n \tc.mu.RLock()\n \tdefer c.mu.RUnlock()\n-\treturn c.pool.stale(c.connection)\n+\treturn c.connection.pool.stale(c.connection)\n }\n \n // Address returns the address of this connection.\n@@ -726,27 +735,27 @@ func (c *Connection) Address() address.Address {\n \tif c.connection == nil {\n \t\treturn address.Address(\"0.0.0.0\")\n \t}\n-\treturn c.addr\n+\treturn c.connection.addr\n }\n \n // LocalAddress returns the local address of the connection\n func (c *Connection) LocalAddress() address.Address {\n \tc.mu.RLock()\n \tdefer c.mu.RUnlock()\n-\tif c.connection == nil || c.nc == nil {\n+\tif c.connection == nil || c.connection.nc == nil {\n \t\treturn address.Address(\"0.0.0.0\")\n \t}\n-\treturn address.Address(c.nc.LocalAddr().String())\n+\treturn address.Address(c.connection.nc.LocalAddr().String())\n }\n \n // PinToCursor updates this connection to reflect that it is pinned to a cursor.\n func (c *Connection) PinToCursor() error {\n-\treturn c.pin(\"cursor\", c.pool.pinConnectionToCursor, c.pool.unpinConnectionFromCursor)\n+\treturn c.pin(\"cursor\", c.connection.pool.pinConnectionToCursor, c.connection.pool.unpinConnectionFromCursor)\n }\n \n // PinToTransaction updates this connection to reflect that it is pinned to a transaction.\n func (c *Connection) PinToTransaction() error {\n-\treturn c.pin(\"transaction\", c.pool.pinConnectionToTransaction, c.pool.unpinConnectionFromTransaction)\n+\treturn c.pin(\"transaction\", c.connection.pool.pinConnectionToTransaction, c.connection.pool.unpinConnectionFromTransaction)\n }\n \n func (c *Connection) pin(reason string, updatePoolFn, cleanupPoolFn func()) error {"
    },
    {
      "sha": "03dea1bcdd58952c25798460d77ae8782fb2781e",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/server.go",
      "status": "modified",
      "additions": 1,
      "deletions": 9,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -473,19 +473,11 @@ func (s *Server) update() {\n \tcheckNow := s.checkNow\n \tdone := s.done\n \n-\tvar doneOnce bool\n \tdefer func() {\n-\t\tif r := recover(); r != nil {\n-\t\t\tif doneOnce {\n-\t\t\t\treturn\n-\t\t\t}\n-\t\t\t// We keep this goroutine alive attempting to read from the done channel.\n-\t\t\t<-done\n-\t\t}\n+\t\t_ = recover()\n \t}()\n \n \tcloseServer := func() {\n-\t\tdoneOnce = true\n \t\ts.subLock.Lock()\n \t\tfor id, c := range s.subscribers {\n \t\t\tclose(c)"
    },
    {
      "sha": "530f0a573f65acf637c324f6e3f204b4147ecfd7",
      "filename": "backend/vendor/go.uber.org/goleak/CHANGELOG.md",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FCHANGELOG.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FCHANGELOG.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FCHANGELOG.md?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -4,6 +4,12 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\n and this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n \n+## [1.2.1]\n+### Changed\n+- Drop golang/x/lint dependency.\n+\n+[1.2.1]: https://github.com/uber-go/goleak/compare/v1.2.0...v1.2.1\n+\n ## [1.2.0]\n ### Added\n - Add Cleanup option that can be used for registering cleanup callbacks. (#78)\n@@ -47,5 +53,7 @@ Thanks to @denis-tingajkin for their contributions to this release.\n \n [1.0.0]: https://github.com/uber-go/goleak/compare/v0.10.0...v1.0.0\n \n-## 0.10.0\n+## [0.10.0]\n - Initial release.\n+\n+[0.10.0]: https://github.com/uber-go/goleak/compare/v0.10.0...HEAD\n\\ No newline at end of file"
    },
    {
      "sha": "8dbf7226568da15739891b8907699a2aa9d0c745",
      "filename": "backend/vendor/go.uber.org/goleak/Makefile",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FMakefile",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FMakefile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FMakefile?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1,6 +1,6 @@\n export GOBIN ?= $(shell pwd)/bin\n \n-GOLINT = $(GOBIN)/golint\n+REVIVE = $(GOBIN)/revive\n \n GO_FILES := $(shell \\\n \tfind . '(' -path '*/.*' -o -path './vendor' ')' -prune \\\n@@ -24,18 +24,18 @@ cover:\n \tgo test -race -coverprofile=cover.out -coverpkg=./... ./...\n \tgo tool cover -html=cover.out -o cover.html\n \n-$(GOLINT):\n-\tgo install golang.org/x/lint/golint\n+$(REVIVE):\n+\tcd tools && go install github.com/mgechev/revive\n \n .PHONY: lint\n-lint: $(GOLINT)\n+lint: $(REVIVE)\n \t@rm -rf lint.log\n \t@echo \"Checking formatting...\"\n \t@gofmt -d -s $(GO_FILES) 2>&1 | tee lint.log\n \t@echo \"Checking vet...\"\n \t@go vet ./... 2>&1 | tee -a lint.log\n \t@echo \"Checking lint...\"\n-\t@$(GOLINT) ./... 2>&1 | tee -a lint.log\n+\t@$(REVIVE) -set_exit_status ./... 2>&1 | tee -a lint.log\n \t@echo \"Checking for unresolved FIXMEs...\"\n \t@git grep -i fixme | grep -v -e '^vendor/' -e '^Makefile' | tee -a lint.log\n \t@[ ! -s lint.log ]"
    },
    {
      "sha": "a545b5e77925f9f002705aa10ed077bf9ee89dd4",
      "filename": "backend/vendor/go.uber.org/goleak/README.md",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FREADME.md?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -8,7 +8,9 @@ You can use `go get` to get the latest version:\n \n `go get -u go.uber.org/goleak`\n \n-`goleak` also supports semver releases. It is compatible with Go 1.5+.\n+`goleak` also supports semver releases.\n+\n+Note that go-leak only [supports][release] the two most recent minor versions of Go.\n \n ## Quick Start\n \n@@ -69,3 +71,4 @@ No breaking changes will be made to exported APIs before 2.0.\n [ci]: https://github.com/uber-go/goleak/actions/workflows/go.yml\n [cov-img]: https://codecov.io/gh/uber-go/goleak/branch/master/graph/badge.svg\n [cov]: https://codecov.io/gh/uber-go/goleak\n+[release]: https://go.dev/doc/devel/release#policy"
    },
    {
      "sha": "9179a56549ddb6629c5a9992319ba973a611015b",
      "filename": "backend/vendor/go.uber.org/goleak/internal/stack/doc.go",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Finternal%2Fstack%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Finternal%2Fstack%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Finternal%2Fstack%2Fdoc.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,22 @@\n+// Copyright (c) 2017-2023 Uber Technologies, Inc.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files (the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions:\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+\n+// Package stack is used for parsing stacks from `runtime.Stack`.\n+package stack"
    },
    {
      "sha": "3152e531b65cf41116c4303dc5674d0c30819916",
      "filename": "backend/vendor/golang.org/x/crypto/acme/rfc8555.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Frfc8555.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Frfc8555.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Frfc8555.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -117,7 +117,7 @@ func (c *Client) updateRegRFC(ctx context.Context, a *Account) (*Account, error)\n \treturn responseAccount(res)\n }\n \n-// getGegRFC is equivalent to c.GetReg but for CAs implementing RFC 8555.\n+// getRegRFC is equivalent to c.GetReg but for CAs implementing RFC 8555.\n // It expects c.Discover to have already been called.\n func (c *Client) getRegRFC(ctx context.Context) (*Account, error) {\n \treq := json.RawMessage(`{\"onlyReturnExisting\": true}`)"
    },
    {
      "sha": "c971a99fa679828858a5aa937cc8fa941bfad40d",
      "filename": "backend/vendor/golang.org/x/crypto/scrypt/scrypt.go",
      "status": "removed",
      "additions": 0,
      "deletions": 212,
      "changes": 212,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Fscrypt%2Fscrypt.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Fscrypt%2Fscrypt.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Fscrypt%2Fscrypt.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,212 +0,0 @@\n-// Copyright 2012 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-// Package scrypt implements the scrypt key derivation function as defined in\n-// Colin Percival's paper \"Stronger Key Derivation via Sequential Memory-Hard\n-// Functions\" (https://www.tarsnap.com/scrypt/scrypt.pdf).\n-package scrypt // import \"golang.org/x/crypto/scrypt\"\n-\n-import (\n-\t\"crypto/sha256\"\n-\t\"encoding/binary\"\n-\t\"errors\"\n-\t\"math/bits\"\n-\n-\t\"golang.org/x/crypto/pbkdf2\"\n-)\n-\n-const maxInt = int(^uint(0) >> 1)\n-\n-// blockCopy copies n numbers from src into dst.\n-func blockCopy(dst, src []uint32, n int) {\n-\tcopy(dst, src[:n])\n-}\n-\n-// blockXOR XORs numbers from dst with n numbers from src.\n-func blockXOR(dst, src []uint32, n int) {\n-\tfor i, v := range src[:n] {\n-\t\tdst[i] ^= v\n-\t}\n-}\n-\n-// salsaXOR applies Salsa20/8 to the XOR of 16 numbers from tmp and in,\n-// and puts the result into both tmp and out.\n-func salsaXOR(tmp *[16]uint32, in, out []uint32) {\n-\tw0 := tmp[0] ^ in[0]\n-\tw1 := tmp[1] ^ in[1]\n-\tw2 := tmp[2] ^ in[2]\n-\tw3 := tmp[3] ^ in[3]\n-\tw4 := tmp[4] ^ in[4]\n-\tw5 := tmp[5] ^ in[5]\n-\tw6 := tmp[6] ^ in[6]\n-\tw7 := tmp[7] ^ in[7]\n-\tw8 := tmp[8] ^ in[8]\n-\tw9 := tmp[9] ^ in[9]\n-\tw10 := tmp[10] ^ in[10]\n-\tw11 := tmp[11] ^ in[11]\n-\tw12 := tmp[12] ^ in[12]\n-\tw13 := tmp[13] ^ in[13]\n-\tw14 := tmp[14] ^ in[14]\n-\tw15 := tmp[15] ^ in[15]\n-\n-\tx0, x1, x2, x3, x4, x5, x6, x7, x8 := w0, w1, w2, w3, w4, w5, w6, w7, w8\n-\tx9, x10, x11, x12, x13, x14, x15 := w9, w10, w11, w12, w13, w14, w15\n-\n-\tfor i := 0; i < 8; i += 2 {\n-\t\tx4 ^= bits.RotateLeft32(x0+x12, 7)\n-\t\tx8 ^= bits.RotateLeft32(x4+x0, 9)\n-\t\tx12 ^= bits.RotateLeft32(x8+x4, 13)\n-\t\tx0 ^= bits.RotateLeft32(x12+x8, 18)\n-\n-\t\tx9 ^= bits.RotateLeft32(x5+x1, 7)\n-\t\tx13 ^= bits.RotateLeft32(x9+x5, 9)\n-\t\tx1 ^= bits.RotateLeft32(x13+x9, 13)\n-\t\tx5 ^= bits.RotateLeft32(x1+x13, 18)\n-\n-\t\tx14 ^= bits.RotateLeft32(x10+x6, 7)\n-\t\tx2 ^= bits.RotateLeft32(x14+x10, 9)\n-\t\tx6 ^= bits.RotateLeft32(x2+x14, 13)\n-\t\tx10 ^= bits.RotateLeft32(x6+x2, 18)\n-\n-\t\tx3 ^= bits.RotateLeft32(x15+x11, 7)\n-\t\tx7 ^= bits.RotateLeft32(x3+x15, 9)\n-\t\tx11 ^= bits.RotateLeft32(x7+x3, 13)\n-\t\tx15 ^= bits.RotateLeft32(x11+x7, 18)\n-\n-\t\tx1 ^= bits.RotateLeft32(x0+x3, 7)\n-\t\tx2 ^= bits.RotateLeft32(x1+x0, 9)\n-\t\tx3 ^= bits.RotateLeft32(x2+x1, 13)\n-\t\tx0 ^= bits.RotateLeft32(x3+x2, 18)\n-\n-\t\tx6 ^= bits.RotateLeft32(x5+x4, 7)\n-\t\tx7 ^= bits.RotateLeft32(x6+x5, 9)\n-\t\tx4 ^= bits.RotateLeft32(x7+x6, 13)\n-\t\tx5 ^= bits.RotateLeft32(x4+x7, 18)\n-\n-\t\tx11 ^= bits.RotateLeft32(x10+x9, 7)\n-\t\tx8 ^= bits.RotateLeft32(x11+x10, 9)\n-\t\tx9 ^= bits.RotateLeft32(x8+x11, 13)\n-\t\tx10 ^= bits.RotateLeft32(x9+x8, 18)\n-\n-\t\tx12 ^= bits.RotateLeft32(x15+x14, 7)\n-\t\tx13 ^= bits.RotateLeft32(x12+x15, 9)\n-\t\tx14 ^= bits.RotateLeft32(x13+x12, 13)\n-\t\tx15 ^= bits.RotateLeft32(x14+x13, 18)\n-\t}\n-\tx0 += w0\n-\tx1 += w1\n-\tx2 += w2\n-\tx3 += w3\n-\tx4 += w4\n-\tx5 += w5\n-\tx6 += w6\n-\tx7 += w7\n-\tx8 += w8\n-\tx9 += w9\n-\tx10 += w10\n-\tx11 += w11\n-\tx12 += w12\n-\tx13 += w13\n-\tx14 += w14\n-\tx15 += w15\n-\n-\tout[0], tmp[0] = x0, x0\n-\tout[1], tmp[1] = x1, x1\n-\tout[2], tmp[2] = x2, x2\n-\tout[3], tmp[3] = x3, x3\n-\tout[4], tmp[4] = x4, x4\n-\tout[5], tmp[5] = x5, x5\n-\tout[6], tmp[6] = x6, x6\n-\tout[7], tmp[7] = x7, x7\n-\tout[8], tmp[8] = x8, x8\n-\tout[9], tmp[9] = x9, x9\n-\tout[10], tmp[10] = x10, x10\n-\tout[11], tmp[11] = x11, x11\n-\tout[12], tmp[12] = x12, x12\n-\tout[13], tmp[13] = x13, x13\n-\tout[14], tmp[14] = x14, x14\n-\tout[15], tmp[15] = x15, x15\n-}\n-\n-func blockMix(tmp *[16]uint32, in, out []uint32, r int) {\n-\tblockCopy(tmp[:], in[(2*r-1)*16:], 16)\n-\tfor i := 0; i < 2*r; i += 2 {\n-\t\tsalsaXOR(tmp, in[i*16:], out[i*8:])\n-\t\tsalsaXOR(tmp, in[i*16+16:], out[i*8+r*16:])\n-\t}\n-}\n-\n-func integer(b []uint32, r int) uint64 {\n-\tj := (2*r - 1) * 16\n-\treturn uint64(b[j]) | uint64(b[j+1])<<32\n-}\n-\n-func smix(b []byte, r, N int, v, xy []uint32) {\n-\tvar tmp [16]uint32\n-\tR := 32 * r\n-\tx := xy\n-\ty := xy[R:]\n-\n-\tj := 0\n-\tfor i := 0; i < R; i++ {\n-\t\tx[i] = binary.LittleEndian.Uint32(b[j:])\n-\t\tj += 4\n-\t}\n-\tfor i := 0; i < N; i += 2 {\n-\t\tblockCopy(v[i*R:], x, R)\n-\t\tblockMix(&tmp, x, y, r)\n-\n-\t\tblockCopy(v[(i+1)*R:], y, R)\n-\t\tblockMix(&tmp, y, x, r)\n-\t}\n-\tfor i := 0; i < N; i += 2 {\n-\t\tj := int(integer(x, r) & uint64(N-1))\n-\t\tblockXOR(x, v[j*R:], R)\n-\t\tblockMix(&tmp, x, y, r)\n-\n-\t\tj = int(integer(y, r) & uint64(N-1))\n-\t\tblockXOR(y, v[j*R:], R)\n-\t\tblockMix(&tmp, y, x, r)\n-\t}\n-\tj = 0\n-\tfor _, v := range x[:R] {\n-\t\tbinary.LittleEndian.PutUint32(b[j:], v)\n-\t\tj += 4\n-\t}\n-}\n-\n-// Key derives a key from the password, salt, and cost parameters, returning\n-// a byte slice of length keyLen that can be used as cryptographic key.\n-//\n-// N is a CPU/memory cost parameter, which must be a power of two greater than 1.\n-// r and p must satisfy r * p < 2³⁰. If the parameters do not satisfy the\n-// limits, the function returns a nil byte slice and an error.\n-//\n-// For example, you can get a derived key for e.g. AES-256 (which needs a\n-// 32-byte key) by doing:\n-//\n-//\tdk, err := scrypt.Key([]byte(\"some password\"), salt, 32768, 8, 1, 32)\n-//\n-// The recommended parameters for interactive logins as of 2017 are N=32768, r=8\n-// and p=1. The parameters N, r, and p should be increased as memory latency and\n-// CPU parallelism increases; consider setting N to the highest power of 2 you\n-// can derive within 100 milliseconds. Remember to get a good random salt.\n-func Key(password, salt []byte, N, r, p, keyLen int) ([]byte, error) {\n-\tif N <= 1 || N&(N-1) != 0 {\n-\t\treturn nil, errors.New(\"scrypt: N must be > 1 and a power of 2\")\n-\t}\n-\tif uint64(r)*uint64(p) >= 1<<30 || r > maxInt/128/p || r > maxInt/256 || N > maxInt/128/r {\n-\t\treturn nil, errors.New(\"scrypt: parameters are too large\")\n-\t}\n-\n-\txy := make([]uint32, 64*r)\n-\tv := make([]uint32, 32*N*r)\n-\tb := pbkdf2.Key(password, salt, 1, p*128*r, sha256.New)\n-\n-\tfor i := 0; i < p; i++ {\n-\t\tsmix(b[i*128*r:], r, N, v, xy)\n-\t}\n-\n-\treturn pbkdf2.Key(password, b, 1, keyLen, sha256.New), nil\n-}"
    },
    {
      "sha": "37dc0cfdb5b0dbb48f26c922050421bf5c757d05",
      "filename": "backend/vendor/golang.org/x/net/context/ctxhttp/ctxhttp.go",
      "status": "removed",
      "additions": 0,
      "deletions": 71,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fcontext%2Fctxhttp%2Fctxhttp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a03c002df452fc7a5e199be89d03c770d5707fee/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fcontext%2Fctxhttp%2Fctxhttp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fcontext%2Fctxhttp%2Fctxhttp.go?ref=a03c002df452fc7a5e199be89d03c770d5707fee",
      "patch": "@@ -1,71 +0,0 @@\n-// Copyright 2016 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-// Package ctxhttp provides helper functions for performing context-aware HTTP requests.\n-package ctxhttp // import \"golang.org/x/net/context/ctxhttp\"\n-\n-import (\n-\t\"context\"\n-\t\"io\"\n-\t\"net/http\"\n-\t\"net/url\"\n-\t\"strings\"\n-)\n-\n-// Do sends an HTTP request with the provided http.Client and returns\n-// an HTTP response.\n-//\n-// If the client is nil, http.DefaultClient is used.\n-//\n-// The provided ctx must be non-nil. If it is canceled or times out,\n-// ctx.Err() will be returned.\n-func Do(ctx context.Context, client *http.Client, req *http.Request) (*http.Response, error) {\n-\tif client == nil {\n-\t\tclient = http.DefaultClient\n-\t}\n-\tresp, err := client.Do(req.WithContext(ctx))\n-\t// If we got an error, and the context has been canceled,\n-\t// the context's error is probably more useful.\n-\tif err != nil {\n-\t\tselect {\n-\t\tcase <-ctx.Done():\n-\t\t\terr = ctx.Err()\n-\t\tdefault:\n-\t\t}\n-\t}\n-\treturn resp, err\n-}\n-\n-// Get issues a GET request via the Do function.\n-func Get(ctx context.Context, client *http.Client, url string) (*http.Response, error) {\n-\treq, err := http.NewRequest(\"GET\", url, nil)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\treturn Do(ctx, client, req)\n-}\n-\n-// Head issues a HEAD request via the Do function.\n-func Head(ctx context.Context, client *http.Client, url string) (*http.Response, error) {\n-\treq, err := http.NewRequest(\"HEAD\", url, nil)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\treturn Do(ctx, client, req)\n-}\n-\n-// Post issues a POST request via the Do function.\n-func Post(ctx context.Context, client *http.Client, url string, bodyType string, body io.Reader) (*http.Response, error) {\n-\treq, err := http.NewRequest(\"POST\", url, body)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\treq.Header.Set(\"Content-Type\", bodyType)\n-\treturn Do(ctx, client, req)\n-}\n-\n-// PostForm issues a POST request via the Do function.\n-func PostForm(ctx context.Context, client *http.Client, url string, data url.Values) (*http.Response, error) {\n-\treturn Post(ctx, client, url, \"application/x-www-form-urlencoded\", strings.NewReader(data.Encode()))\n-}"
    },
    {
      "sha": "7a96eae3310e755f122d345ae951830e40731062",
      "filename": "backend/vendor/golang.org/x/net/html/doc.go",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fdoc.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -92,6 +92,21 @@ example, to process each anchor node in depth-first order:\n The relevant specifications include:\n https://html.spec.whatwg.org/multipage/syntax.html and\n https://html.spec.whatwg.org/multipage/syntax.html#tokenization\n+\n+# Security Considerations\n+\n+Care should be taken when parsing and interpreting HTML, whether full documents\n+or fragments, within the framework of the HTML specification, especially with\n+regard to untrusted inputs.\n+\n+This package provides both a tokenizer and a parser. Only the parser constructs\n+a DOM according to the HTML specification, resolving malformed and misplaced\n+tags where appropriate. The tokenizer simply tokenizes the HTML presented to it,\n+and as such does not resolve issues that may exist in the processed HTML,\n+producing a literal interpretation of the input.\n+\n+If your use case requires semantically well-formed HTML, as defined by the\n+WHATWG specifiction, the parser should be used rather than the tokenizer.\n */\n package html // import \"golang.org/x/net/html\"\n "
    },
    {
      "sha": "04c6bec21073773d3e975f35d62b2c6599b709d0",
      "filename": "backend/vendor/golang.org/x/net/html/escape.go",
      "status": "modified",
      "additions": 81,
      "deletions": 0,
      "changes": 81,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fescape.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fescape.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fescape.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -193,6 +193,87 @@ func lower(b []byte) []byte {\n \treturn b\n }\n \n+// escapeComment is like func escape but escapes its input bytes less often.\n+// Per https://github.com/golang/go/issues/58246 some HTML comments are (1)\n+// meaningful and (2) contain angle brackets that we'd like to avoid escaping\n+// unless we have to.\n+//\n+// \"We have to\" includes the '&' byte, since that introduces other escapes.\n+//\n+// It also includes those bytes (not including EOF) that would otherwise end\n+// the comment. Per the summary table at the bottom of comment_test.go, this is\n+// the '>' byte that, per above, we'd like to avoid escaping unless we have to.\n+//\n+// Studying the summary table (and T actions in its '>' column) closely, we\n+// only need to escape in states 43, 44, 49, 51 and 52. State 43 is at the\n+// start of the comment data. State 52 is after a '!'. The other three states\n+// are after a '-'.\n+//\n+// Our algorithm is thus to escape every '&' and to escape '>' if and only if:\n+//   - The '>' is after a '!' or '-' (in the unescaped data) or\n+//   - The '>' is at the start of the comment data (after the opening \"<!--\").\n+func escapeComment(w writer, s string) error {\n+\t// When modifying this function, consider manually increasing the\n+\t// maxSuffixLen constant in func TestComments, from 6 to e.g. 9 or more.\n+\t// That increase should only be temporary, not committed, as it\n+\t// exponentially affects the test running time.\n+\n+\tif len(s) == 0 {\n+\t\treturn nil\n+\t}\n+\n+\t// Loop:\n+\t//   - Grow j such that s[i:j] does not need escaping.\n+\t//   - If s[j] does need escaping, output s[i:j] and an escaped s[j],\n+\t//     resetting i and j to point past that s[j] byte.\n+\ti := 0\n+\tfor j := 0; j < len(s); j++ {\n+\t\tescaped := \"\"\n+\t\tswitch s[j] {\n+\t\tcase '&':\n+\t\t\tescaped = \"&amp;\"\n+\n+\t\tcase '>':\n+\t\t\tif j > 0 {\n+\t\t\t\tif prev := s[j-1]; (prev != '!') && (prev != '-') {\n+\t\t\t\t\tcontinue\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tescaped = \"&gt;\"\n+\n+\t\tdefault:\n+\t\t\tcontinue\n+\t\t}\n+\n+\t\tif i < j {\n+\t\t\tif _, err := w.WriteString(s[i:j]); err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\t\tif _, err := w.WriteString(escaped); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\ti = j + 1\n+\t}\n+\n+\tif i < len(s) {\n+\t\tif _, err := w.WriteString(s[i:]); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+// escapeCommentString is to EscapeString as escapeComment is to escape.\n+func escapeCommentString(s string) string {\n+\tif strings.IndexAny(s, \"&>\") == -1 {\n+\t\treturn s\n+\t}\n+\tvar buf bytes.Buffer\n+\tescapeComment(&buf, s)\n+\treturn buf.String()\n+}\n+\n const escapedChars = \"&'<>\\\"\\r\"\n \n func escape(w writer, s string) error {"
    },
    {
      "sha": "46a89eda6c19954b7fccde101a6c87bd225ded83",
      "filename": "backend/vendor/golang.org/x/net/html/parse.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fparse.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fparse.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fparse.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -184,7 +184,7 @@ func (p *parser) clearStackToContext(s scope) {\n \t}\n }\n \n-// parseGenericRawTextElements implements the generic raw text element parsing\n+// parseGenericRawTextElement implements the generic raw text element parsing\n // algorithm defined in 12.2.6.2.\n // https://html.spec.whatwg.org/multipage/parsing.html#parsing-elements-that-contain-only-text\n // TODO: Since both RAWTEXT and RCDATA states are treated as tokenizer's part"
    },
    {
      "sha": "8b28031905a4ecada583fbcf917c7ccc41532b69",
      "filename": "backend/vendor/golang.org/x/net/html/render.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Frender.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Frender.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Frender.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -85,7 +85,7 @@ func render1(w writer, n *Node) error {\n \t\tif _, err := w.WriteString(\"<!--\"); err != nil {\n \t\t\treturn err\n \t\t}\n-\t\tif err := escape(w, n.Data); err != nil {\n+\t\tif err := escapeComment(w, n.Data); err != nil {\n \t\t\treturn err\n \t\t}\n \t\tif _, err := w.WriteString(\"-->\"); err != nil {"
    },
    {
      "sha": "5c2a1f4efa5572ca66a40553071a99c7ac927a79",
      "filename": "backend/vendor/golang.org/x/net/html/token.go",
      "status": "modified",
      "additions": 42,
      "deletions": 9,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Ftoken.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Ftoken.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Ftoken.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -110,7 +110,7 @@ func (t Token) String() string {\n \tcase SelfClosingTagToken:\n \t\treturn \"<\" + t.tagString() + \"/>\"\n \tcase CommentToken:\n-\t\treturn \"<!--\" + EscapeString(t.Data) + \"-->\"\n+\t\treturn \"<!--\" + escapeCommentString(t.Data) + \"-->\"\n \tcase DoctypeToken:\n \t\treturn \"<!DOCTYPE \" + EscapeString(t.Data) + \">\"\n \t}\n@@ -598,6 +598,11 @@ scriptDataDoubleEscapeEnd:\n // readComment reads the next comment token starting with \"<!--\". The opening\n // \"<!--\" has already been consumed.\n func (z *Tokenizer) readComment() {\n+\t// When modifying this function, consider manually increasing the\n+\t// maxSuffixLen constant in func TestComments, from 6 to e.g. 9 or more.\n+\t// That increase should only be temporary, not committed, as it\n+\t// exponentially affects the test running time.\n+\n \tz.data.start = z.raw.end\n \tdefer func() {\n \t\tif z.data.end < z.data.start {\n@@ -611,11 +616,7 @@ func (z *Tokenizer) readComment() {\n \tfor {\n \t\tc := z.readByte()\n \t\tif z.err != nil {\n-\t\t\t// Ignore up to two dashes at EOF.\n-\t\t\tif dashCount > 2 {\n-\t\t\t\tdashCount = 2\n-\t\t\t}\n-\t\t\tz.data.end = z.raw.end - dashCount\n+\t\t\tz.data.end = z.calculateAbruptCommentDataEnd()\n \t\t\treturn\n \t\t}\n \t\tswitch c {\n@@ -631,12 +632,15 @@ func (z *Tokenizer) readComment() {\n \t\t\tif dashCount >= 2 {\n \t\t\t\tc = z.readByte()\n \t\t\t\tif z.err != nil {\n-\t\t\t\t\tz.data.end = z.raw.end\n+\t\t\t\t\tz.data.end = z.calculateAbruptCommentDataEnd()\n \t\t\t\t\treturn\n-\t\t\t\t}\n-\t\t\t\tif c == '>' {\n+\t\t\t\t} else if c == '>' {\n \t\t\t\t\tz.data.end = z.raw.end - len(\"--!>\")\n \t\t\t\t\treturn\n+\t\t\t\t} else if c == '-' {\n+\t\t\t\t\tdashCount = 1\n+\t\t\t\t\tbeginning = false\n+\t\t\t\t\tcontinue\n \t\t\t\t}\n \t\t\t}\n \t\t}\n@@ -645,6 +649,35 @@ func (z *Tokenizer) readComment() {\n \t}\n }\n \n+func (z *Tokenizer) calculateAbruptCommentDataEnd() int {\n+\traw := z.Raw()\n+\tconst prefixLen = len(\"<!--\")\n+\tif len(raw) >= prefixLen {\n+\t\traw = raw[prefixLen:]\n+\t\tif hasSuffix(raw, \"--!\") {\n+\t\t\treturn z.raw.end - 3\n+\t\t} else if hasSuffix(raw, \"--\") {\n+\t\t\treturn z.raw.end - 2\n+\t\t} else if hasSuffix(raw, \"-\") {\n+\t\t\treturn z.raw.end - 1\n+\t\t}\n+\t}\n+\treturn z.raw.end\n+}\n+\n+func hasSuffix(b []byte, suffix string) bool {\n+\tif len(b) < len(suffix) {\n+\t\treturn false\n+\t}\n+\tb = b[len(b)-len(suffix):]\n+\tfor i := range b {\n+\t\tif b[i] != suffix[i] {\n+\t\t\treturn false\n+\t\t}\n+\t}\n+\treturn true\n+}\n+\n // readUntilCloseAngle reads until the next \">\".\n func (z *Tokenizer) readUntilCloseAngle() {\n \tz.data.start = z.raw.end"
    },
    {
      "sha": "db6b19e93dc843b1711fbebdb95b030075bb93e9",
      "filename": "backend/vendor/golang.org/x/oauth2/google/default.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -62,6 +62,10 @@ type CredentialsParams struct {\n \n \t// PKCE is used to support PKCE flow. Optional for 3LO flow.\n \tPKCE *authhandler.PKCEParams\n+\n+\t// The OAuth2 TokenURL default override. This value overrides the default TokenURL,\n+\t// unless explicitly specified by the credentials config file. Optional.\n+\tTokenURL string\n }\n \n func (params CredentialsParams) deepCopy() CredentialsParams {\n@@ -137,7 +141,7 @@ func FindDefaultCredentialsWithParams(ctx context.Context, params CredentialsPar\n \t// use those credentials. App Engine standard second generation runtimes (>= Go 1.11)\n \t// and App Engine flexible use ComputeTokenSource and the metadata server.\n \tif appengineTokenFunc != nil {\n-\t\treturn &DefaultCredentials{\n+\t\treturn &Credentials{\n \t\t\tProjectID:   appengineAppIDFunc(ctx),\n \t\t\tTokenSource: AppEngineTokenSource(ctx, params.Scopes...),\n \t\t}, nil\n@@ -147,7 +151,7 @@ func FindDefaultCredentialsWithParams(ctx context.Context, params CredentialsPar\n \t// or App Engine flexible, use the metadata server.\n \tif metadata.OnGCE() {\n \t\tid, _ := metadata.ProjectID()\n-\t\treturn &DefaultCredentials{\n+\t\treturn &Credentials{\n \t\t\tProjectID:   id,\n \t\t\tTokenSource: ComputeTokenSource(\"\", params.Scopes...),\n \t\t}, nil\n@@ -194,7 +198,7 @@ func CredentialsFromJSONWithParams(ctx context.Context, jsonData []byte, params\n \t\treturn nil, err\n \t}\n \tts = newErrWrappingTokenSource(ts)\n-\treturn &DefaultCredentials{\n+\treturn &Credentials{\n \t\tProjectID:   f.ProjectID,\n \t\tTokenSource: ts,\n \t\tJSON:        jsonData,\n@@ -216,7 +220,7 @@ func wellKnownFile() string {\n \treturn filepath.Join(guessUnixHomeDir(), \".config\", \"gcloud\", f)\n }\n \n-func readCredentialsFile(ctx context.Context, filename string, params CredentialsParams) (*DefaultCredentials, error) {\n+func readCredentialsFile(ctx context.Context, filename string, params CredentialsParams) (*Credentials, error) {\n \tb, err := ioutil.ReadFile(filename)\n \tif err != nil {\n \t\treturn nil, err"
    },
    {
      "sha": "8a3349fc2cebcab8addb20ef45b69a3c47c69380",
      "filename": "backend/vendor/golang.org/x/oauth2/google/doc.go",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdoc.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -57,6 +57,11 @@\n // executable-sourced credentials), please check out:\n // https://cloud.google.com/iam/docs/using-workload-identity-federation#oidc\n //\n+// Note that this library does not perform any validation on the token_url, token_info_url,\n+// or service_account_impersonation_url fields of the credential configuration.\n+// It is not recommended to use a credential configuration that you did not generate with\n+// the gcloud CLI unless you verify that the URL fields point to a googleapis.com domain.\n+//\n // # Credentials\n //\n // The Credentials type represents Google credentials, including Application Default\n@@ -81,4 +86,5 @@\n // same as the one obtained from the oauth2.Config returned from ConfigFromJSON or\n // JWTConfigFromJSON, but the Credentials may contain additional information\n // that is useful is some circumstances.\n+//\n package google // import \"golang.org/x/oauth2/google\""
    },
    {
      "sha": "a1b629a2eb6b2a10399a69b7495cacb59369bb91",
      "filename": "backend/vendor/golang.org/x/oauth2/google/google.go",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fgoogle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fgoogle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fgoogle.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -26,6 +26,9 @@ var Endpoint = oauth2.Endpoint{\n \tAuthStyle: oauth2.AuthStyleInParams,\n }\n \n+// MTLSTokenURL is Google's OAuth 2.0 default mTLS endpoint.\n+const MTLSTokenURL = \"https://oauth2.mtls.googleapis.com/token\"\n+\n // JWTTokenURL is Google's OAuth 2.0 token URL to use with the JWT flow.\n const JWTTokenURL = \"https://oauth2.googleapis.com/token\"\n \n@@ -172,7 +175,11 @@ func (f *credentialsFile) tokenSource(ctx context.Context, params CredentialsPar\n \t\t\tcfg.Endpoint.AuthURL = Endpoint.AuthURL\n \t\t}\n \t\tif cfg.Endpoint.TokenURL == \"\" {\n-\t\t\tcfg.Endpoint.TokenURL = Endpoint.TokenURL\n+\t\t\tif params.TokenURL != \"\" {\n+\t\t\t\tcfg.Endpoint.TokenURL = params.TokenURL\n+\t\t\t} else {\n+\t\t\t\tcfg.Endpoint.TokenURL = Endpoint.TokenURL\n+\t\t\t}\n \t\t}\n \t\ttok := &oauth2.Token{RefreshToken: f.RefreshToken}\n \t\treturn cfg.TokenSource(ctx, tok), nil"
    },
    {
      "sha": "dcd252a61ccfe80ef2b899d3bec8245be3ad43d5",
      "filename": "backend/vendor/golang.org/x/oauth2/google/internal/externalaccount/basecredentials.go",
      "status": "modified",
      "additions": 2,
      "deletions": 30,
      "changes": 32,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fbasecredentials.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fbasecredentials.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fbasecredentials.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -67,22 +67,6 @@ type Config struct {\n // that include all elements in a given list, in that order.\n \n var (\n-\tvalidTokenURLPatterns = []*regexp.Regexp{\n-\t\t// The complicated part in the middle matches any number of characters that\n-\t\t// aren't period, spaces, or slashes.\n-\t\tregexp.MustCompile(`(?i)^[^\\.\\s\\/\\\\]+\\.sts\\.googleapis\\.com$`),\n-\t\tregexp.MustCompile(`(?i)^sts\\.googleapis\\.com$`),\n-\t\tregexp.MustCompile(`(?i)^sts\\.[^\\.\\s\\/\\\\]+\\.googleapis\\.com$`),\n-\t\tregexp.MustCompile(`(?i)^[^\\.\\s\\/\\\\]+-sts\\.googleapis\\.com$`),\n-\t\tregexp.MustCompile(`(?i)^sts-[^\\.\\s\\/\\\\]+\\.p\\.googleapis\\.com$`),\n-\t}\n-\tvalidImpersonateURLPatterns = []*regexp.Regexp{\n-\t\tregexp.MustCompile(`^[^\\.\\s\\/\\\\]+\\.iamcredentials\\.googleapis\\.com$`),\n-\t\tregexp.MustCompile(`^iamcredentials\\.googleapis\\.com$`),\n-\t\tregexp.MustCompile(`^iamcredentials\\.[^\\.\\s\\/\\\\]+\\.googleapis\\.com$`),\n-\t\tregexp.MustCompile(`^[^\\.\\s\\/\\\\]+-iamcredentials\\.googleapis\\.com$`),\n-\t\tregexp.MustCompile(`^iamcredentials-[^\\.\\s\\/\\\\]+\\.p\\.googleapis\\.com$`),\n-\t}\n \tvalidWorkforceAudiencePattern *regexp.Regexp = regexp.MustCompile(`//iam\\.googleapis\\.com/locations/[^/]+/workforcePools/`)\n )\n \n@@ -110,25 +94,13 @@ func validateWorkforceAudience(input string) bool {\n \n // TokenSource Returns an external account TokenSource struct. This is to be called by package google to construct a google.Credentials.\n func (c *Config) TokenSource(ctx context.Context) (oauth2.TokenSource, error) {\n-\treturn c.tokenSource(ctx, validTokenURLPatterns, validImpersonateURLPatterns, \"https\")\n+\treturn c.tokenSource(ctx, \"https\")\n }\n \n // tokenSource is a private function that's directly called by some of the tests,\n // because the unit test URLs are mocked, and would otherwise fail the\n // validity check.\n-func (c *Config) tokenSource(ctx context.Context, tokenURLValidPats []*regexp.Regexp, impersonateURLValidPats []*regexp.Regexp, scheme string) (oauth2.TokenSource, error) {\n-\tvalid := validateURL(c.TokenURL, tokenURLValidPats, scheme)\n-\tif !valid {\n-\t\treturn nil, fmt.Errorf(\"oauth2/google: invalid TokenURL provided while constructing tokenSource\")\n-\t}\n-\n-\tif c.ServiceAccountImpersonationURL != \"\" {\n-\t\tvalid := validateURL(c.ServiceAccountImpersonationURL, impersonateURLValidPats, scheme)\n-\t\tif !valid {\n-\t\t\treturn nil, fmt.Errorf(\"oauth2/google: invalid ServiceAccountImpersonationURL provided while constructing tokenSource\")\n-\t\t}\n-\t}\n-\n+func (c *Config) tokenSource(ctx context.Context, scheme string) (oauth2.TokenSource, error) {\n \tif c.WorkforcePoolUserProject != \"\" {\n \t\tvalid := validateWorkforceAudience(c.Audience)\n \t\tif !valid {"
    },
    {
      "sha": "b4723fcacea76822398fb526d329f99e9d57f163",
      "filename": "backend/vendor/golang.org/x/oauth2/internal/token.go",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Finternal%2Ftoken.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Finternal%2Ftoken.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Finternal%2Ftoken.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -19,8 +19,6 @@ import (\n \t\"strings\"\n \t\"sync\"\n \t\"time\"\n-\n-\t\"golang.org/x/net/context/ctxhttp\"\n )\n \n // Token represents the credentials used to authorize\n@@ -229,7 +227,7 @@ func RetrieveToken(ctx context.Context, clientID, clientSecret, tokenURL string,\n }\n \n func doTokenRoundTrip(ctx context.Context, req *http.Request) (*Token, error) {\n-\tr, err := ctxhttp.Do(ctx, ContextClient(ctx), req)\n+\tr, err := ContextClient(ctx).Do(req.WithContext(ctx))\n \tif err != nil {\n \t\treturn nil, err\n \t}"
    },
    {
      "sha": "cbee7a4e230d7d5174a71b86f8ddbe4a7a4105ef",
      "filename": "backend/vendor/golang.org/x/sync/errgroup/errgroup.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2Ferrgroup%2Ferrgroup.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2Ferrgroup%2Ferrgroup.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2Ferrgroup%2Ferrgroup.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -61,8 +61,8 @@ func (g *Group) Wait() error {\n // It blocks until the new goroutine can be added without the number of\n // active goroutines in the group exceeding the configured limit.\n //\n-// The first call to return a non-nil error cancels the group; its error will be\n-// returned by Wait.\n+// The first call to return a non-nil error cancels the group's context, if the\n+// group was created by calling WithContext. The error will be returned by Wait.\n func (g *Group) Go(f func() error) {\n \tif g.sem != nil {\n \t\tg.sem <- token{}"
    },
    {
      "sha": "e07899b909bb0321d4378af4a9feda064ddd10d0",
      "filename": "backend/vendor/golang.org/x/sys/internal/unsafeheader/unsafeheader.go",
      "status": "added",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Finternal%2Funsafeheader%2Funsafeheader.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Finternal%2Funsafeheader%2Funsafeheader.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Finternal%2Funsafeheader%2Funsafeheader.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Package unsafeheader contains header declarations for the Go runtime's\n+// slice and string implementations.\n+//\n+// This package allows x/sys to use types equivalent to\n+// reflect.SliceHeader and reflect.StringHeader without introducing\n+// a dependency on the (relatively heavy) \"reflect\" package.\n+package unsafeheader\n+\n+import (\n+\t\"unsafe\"\n+)\n+\n+// Slice is the runtime representation of a slice.\n+// It cannot be used safely or portably and its representation may change in a later release.\n+type Slice struct {\n+\tData unsafe.Pointer\n+\tLen  int\n+\tCap  int\n+}\n+\n+// String is the runtime representation of a string.\n+// It cannot be used safely or portably and its representation may change in a later release.\n+type String struct {\n+\tData unsafe.Pointer\n+\tLen  int\n+}"
    },
    {
      "sha": "f98a1c542f05c6353b888fd3074e43d0fa04a602",
      "filename": "backend/vendor/golang.org/x/sys/unix/gccgo_c.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fgccgo_c.c",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fgccgo_c.c",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fgccgo_c.c?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -2,8 +2,8 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build gccgo,!hurd\n-// +build !aix,!hurd\n+//go:build gccgo && !aix && !hurd\n+// +build gccgo,!aix,!hurd\n \n #include <errno.h>\n #include <stdint.h>"
    },
    {
      "sha": "7ce8dd406fff58fce0c709203887fd99d9b695c8",
      "filename": "backend/vendor/golang.org/x/sys/unix/ioctl.go",
      "status": "modified",
      "additions": 6,
      "deletions": 11,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -8,7 +8,6 @@\n package unix\n \n import (\n-\t\"runtime\"\n \t\"unsafe\"\n )\n \n@@ -27,7 +26,7 @@ func IoctlSetInt(fd int, req uint, value int) error {\n // passing the integer value directly.\n func IoctlSetPointerInt(fd int, req uint, value int) error {\n \tv := int32(value)\n-\treturn ioctl(fd, req, uintptr(unsafe.Pointer(&v)))\n+\treturn ioctlPtr(fd, req, unsafe.Pointer(&v))\n }\n \n // IoctlSetWinsize performs an ioctl on fd with a *Winsize argument.\n@@ -36,19 +35,15 @@ func IoctlSetPointerInt(fd int, req uint, value int) error {\n func IoctlSetWinsize(fd int, req uint, value *Winsize) error {\n \t// TODO: if we get the chance, remove the req parameter and\n \t// hardcode TIOCSWINSZ.\n-\terr := ioctl(fd, req, uintptr(unsafe.Pointer(value)))\n-\truntime.KeepAlive(value)\n-\treturn err\n+\treturn ioctlPtr(fd, req, unsafe.Pointer(value))\n }\n \n // IoctlSetTermios performs an ioctl on fd with a *Termios.\n //\n // The req value will usually be TCSETA or TIOCSETA.\n func IoctlSetTermios(fd int, req uint, value *Termios) error {\n \t// TODO: if we get the chance, remove the req parameter.\n-\terr := ioctl(fd, req, uintptr(unsafe.Pointer(value)))\n-\truntime.KeepAlive(value)\n-\treturn err\n+\treturn ioctlPtr(fd, req, unsafe.Pointer(value))\n }\n \n // IoctlGetInt performs an ioctl operation which gets an integer value\n@@ -58,18 +53,18 @@ func IoctlSetTermios(fd int, req uint, value *Termios) error {\n // for those, IoctlRetInt should be used instead of this function.\n func IoctlGetInt(fd int, req uint) (int, error) {\n \tvar value int\n-\terr := ioctl(fd, req, uintptr(unsafe.Pointer(&value)))\n+\terr := ioctlPtr(fd, req, unsafe.Pointer(&value))\n \treturn value, err\n }\n \n func IoctlGetWinsize(fd int, req uint) (*Winsize, error) {\n \tvar value Winsize\n-\terr := ioctl(fd, req, uintptr(unsafe.Pointer(&value)))\n+\terr := ioctlPtr(fd, req, unsafe.Pointer(&value))\n \treturn &value, err\n }\n \n func IoctlGetTermios(fd int, req uint) (*Termios, error) {\n \tvar value Termios\n-\terr := ioctl(fd, req, uintptr(unsafe.Pointer(&value)))\n+\terr := ioctlPtr(fd, req, unsafe.Pointer(&value))\n \treturn &value, err\n }"
    },
    {
      "sha": "6532f09af2e338f5ce6e890501640c5bc9bd57e9",
      "filename": "backend/vendor/golang.org/x/sys/unix/ioctl_zos.go",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl_zos.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl_zos.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl_zos.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -27,9 +27,7 @@ func IoctlSetInt(fd int, req uint, value int) error {\n func IoctlSetWinsize(fd int, req uint, value *Winsize) error {\n \t// TODO: if we get the chance, remove the req parameter and\n \t// hardcode TIOCSWINSZ.\n-\terr := ioctl(fd, req, uintptr(unsafe.Pointer(value)))\n-\truntime.KeepAlive(value)\n-\treturn err\n+\treturn ioctlPtr(fd, req, unsafe.Pointer(value))\n }\n \n // IoctlSetTermios performs an ioctl on fd with a *Termios.\n@@ -51,13 +49,13 @@ func IoctlSetTermios(fd int, req uint, value *Termios) error {\n // for those, IoctlRetInt should be used instead of this function.\n func IoctlGetInt(fd int, req uint) (int, error) {\n \tvar value int\n-\terr := ioctl(fd, req, uintptr(unsafe.Pointer(&value)))\n+\terr := ioctlPtr(fd, req, unsafe.Pointer(&value))\n \treturn value, err\n }\n \n func IoctlGetWinsize(fd int, req uint) (*Winsize, error) {\n \tvar value Winsize\n-\terr := ioctl(fd, req, uintptr(unsafe.Pointer(&value)))\n+\terr := ioctlPtr(fd, req, unsafe.Pointer(&value))\n \treturn &value, err\n }\n "
    },
    {
      "sha": "39dba6ca6a34bf67ffe4e7205c18b86dd3696442",
      "filename": "backend/vendor/golang.org/x/sys/unix/ptrace_darwin.go",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fptrace_darwin.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fptrace_darwin.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fptrace_darwin.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -7,6 +7,12 @@\n \n package unix\n \n+import \"unsafe\"\n+\n func ptrace(request int, pid int, addr uintptr, data uintptr) error {\n \treturn ptrace1(request, pid, addr, data)\n }\n+\n+func ptracePtr(request int, pid int, addr uintptr, data unsafe.Pointer) error {\n+\treturn ptrace1Ptr(request, pid, addr, data)\n+}"
    },
    {
      "sha": "9ea66330a96889a6dfcd3040b13af719b2b8e28a",
      "filename": "backend/vendor/golang.org/x/sys/unix/ptrace_ios.go",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fptrace_ios.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fptrace_ios.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fptrace_ios.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -7,6 +7,12 @@\n \n package unix\n \n+import \"unsafe\"\n+\n func ptrace(request int, pid int, addr uintptr, data uintptr) (err error) {\n \treturn ENOTSUP\n }\n+\n+func ptracePtr(request int, pid int, addr uintptr, data unsafe.Pointer) (err error) {\n+\treturn ENOTSUP\n+}"
    },
    {
      "sha": "d9f5544ccf454db84e9845a7e0cc9ba76c9bde77",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_aix.go",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_aix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_aix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_aix.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -292,9 +292,7 @@ func anyToSockaddr(fd int, rsa *RawSockaddrAny) (Sockaddr, error) {\n \t\t\t\tbreak\n \t\t\t}\n \t\t}\n-\n-\t\tbytes := (*[len(pp.Path)]byte)(unsafe.Pointer(&pp.Path[0]))[0:n]\n-\t\tsa.Name = string(bytes)\n+\t\tsa.Name = string(unsafe.Slice((*byte)(unsafe.Pointer(&pp.Path[0])), n))\n \t\treturn sa, nil\n \n \tcase AF_INET:\n@@ -411,6 +409,7 @@ func (w WaitStatus) CoreDump() bool { return w&0x80 == 0x80 }\n func (w WaitStatus) TrapCause() int { return -1 }\n \n //sys\tioctl(fd int, req uint, arg uintptr) (err error)\n+//sys\tioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) = ioctl\n \n // fcntl must never be called with cmd=F_DUP2FD because it doesn't work on AIX\n // There is no way to create a custom fcntl and to keep //sys fcntl easily,"
    },
    {
      "sha": "7705c3270b5ece799f530628a73877ce9a868350",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_bsd.go",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_bsd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_bsd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_bsd.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -245,8 +245,7 @@ func anyToSockaddr(fd int, rsa *RawSockaddrAny) (Sockaddr, error) {\n \t\t\t\tbreak\n \t\t\t}\n \t\t}\n-\t\tbytes := (*[len(pp.Path)]byte)(unsafe.Pointer(&pp.Path[0]))[0:n]\n-\t\tsa.Name = string(bytes)\n+\t\tsa.Name = string(unsafe.Slice((*byte)(unsafe.Pointer(&pp.Path[0])), n))\n \t\treturn sa, nil\n \n \tcase AF_INET:"
    },
    {
      "sha": "7064d6ebab6a8479e1996685af6f980dd8b89142",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_darwin.go",
      "status": "modified",
      "additions": 5,
      "deletions": 8,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -14,7 +14,6 @@ package unix\n \n import (\n \t\"fmt\"\n-\t\"runtime\"\n \t\"syscall\"\n \t\"unsafe\"\n )\n@@ -230,6 +229,7 @@ func direntNamlen(buf []byte) (uint64, bool) {\n \n func PtraceAttach(pid int) (err error) { return ptrace(PT_ATTACH, pid, 0, 0) }\n func PtraceDetach(pid int) (err error) { return ptrace(PT_DETACH, pid, 0, 0) }\n+func PtraceDenyAttach() (err error)    { return ptrace(PT_DENY_ATTACH, 0, 0, 0) }\n \n //sysnb\tpipe(p *[2]int32) (err error)\n \n@@ -375,11 +375,10 @@ func Flistxattr(fd int, dest []byte) (sz int, err error) {\n func Kill(pid int, signum syscall.Signal) (err error) { return kill(pid, int(signum), 1) }\n \n //sys\tioctl(fd int, req uint, arg uintptr) (err error)\n+//sys\tioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) = SYS_IOCTL\n \n func IoctlCtlInfo(fd int, ctlInfo *CtlInfo) error {\n-\terr := ioctl(fd, CTLIOCGINFO, uintptr(unsafe.Pointer(ctlInfo)))\n-\truntime.KeepAlive(ctlInfo)\n-\treturn err\n+\treturn ioctlPtr(fd, CTLIOCGINFO, unsafe.Pointer(ctlInfo))\n }\n \n // IfreqMTU is struct ifreq used to get or set a network device's MTU.\n@@ -393,16 +392,14 @@ type IfreqMTU struct {\n func IoctlGetIfreqMTU(fd int, ifname string) (*IfreqMTU, error) {\n \tvar ifreq IfreqMTU\n \tcopy(ifreq.Name[:], ifname)\n-\terr := ioctl(fd, SIOCGIFMTU, uintptr(unsafe.Pointer(&ifreq)))\n+\terr := ioctlPtr(fd, SIOCGIFMTU, unsafe.Pointer(&ifreq))\n \treturn &ifreq, err\n }\n \n // IoctlSetIfreqMTU performs the SIOCSIFMTU ioctl operation on fd to set the MTU\n // of the network device specified by ifreq.Name.\n func IoctlSetIfreqMTU(fd int, ifreq *IfreqMTU) error {\n-\terr := ioctl(fd, SIOCSIFMTU, uintptr(unsafe.Pointer(ifreq)))\n-\truntime.KeepAlive(ifreq)\n-\treturn err\n+\treturn ioctlPtr(fd, SIOCSIFMTU, unsafe.Pointer(ifreq))\n }\n \n //sys\tsysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) = SYS_SYSCTL"
    },
    {
      "sha": "9fa879806bcbfdb5a8b041c1eef960e808fd4f9b",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_darwin_amd64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin_amd64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -47,5 +47,6 @@ func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr,\n //sys\tgetfsstat(buf unsafe.Pointer, size uintptr, flags int) (n int, err error) = SYS_GETFSSTAT64\n //sys\tLstat(path string, stat *Stat_t) (err error) = SYS_LSTAT64\n //sys\tptrace1(request int, pid int, addr uintptr, data uintptr) (err error) = SYS_ptrace\n+//sys\tptrace1Ptr(request int, pid int, addr unsafe.Pointer, data uintptr) (err error) = SYS_ptrace\n //sys\tStat(path string, stat *Stat_t) (err error) = SYS_STAT64\n //sys\tStatfs(path string, stat *Statfs_t) (err error) = SYS_STATFS64"
    },
    {
      "sha": "f17b8c526a535e9360b65459e3b50ce3d0b14b1c",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_darwin_arm64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin_arm64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -47,5 +47,6 @@ func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr,\n //sys\tgetfsstat(buf unsafe.Pointer, size uintptr, flags int) (n int, err error) = SYS_GETFSSTAT\n //sys\tLstat(path string, stat *Stat_t) (err error)\n //sys\tptrace1(request int, pid int, addr uintptr, data uintptr) (err error) = SYS_ptrace\n+//sys\tptrace1Ptr(request int, pid int, addr unsafe.Pointer, data uintptr) (err error) = SYS_ptrace\n //sys\tStat(path string, stat *Stat_t) (err error)\n //sys\tStatfs(path string, stat *Statfs_t) (err error)"
    },
    {
      "sha": "221efc26bcdc63c030e91efd67c7bb440bc6f5ea",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_dragonfly.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_dragonfly.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_dragonfly.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_dragonfly.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -172,6 +172,7 @@ func Getfsstat(buf []Statfs_t, flags int) (n int, err error) {\n }\n \n //sys\tioctl(fd int, req uint, arg uintptr) (err error)\n+//sys\tioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) = SYS_IOCTL\n \n //sys\tsysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) = SYS___SYSCTL\n "
    },
    {
      "sha": "5bdde03e4a8472a694e394aa455e6525eda447d9",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_freebsd.go",
      "status": "modified",
      "additions": 37,
      "deletions": 6,
      "changes": 43,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -161,7 +161,8 @@ func Getfsstat(buf []Statfs_t, flags int) (n int, err error) {\n \treturn\n }\n \n-//sys\tioctl(fd int, req uint, arg uintptr) (err error)\n+//sys\tioctl(fd int, req uint, arg uintptr) (err error) = SYS_IOCTL\n+//sys\tioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) = SYS_IOCTL\n \n //sys\tsysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) = SYS___SYSCTL\n \n@@ -253,6 +254,7 @@ func Sendfile(outfd int, infd int, offset *int64, count int) (written int, err e\n }\n \n //sys\tptrace(request int, pid int, addr uintptr, data int) (err error)\n+//sys\tptracePtr(request int, pid int, addr unsafe.Pointer, data int) (err error) = SYS_PTRACE\n \n func PtraceAttach(pid int) (err error) {\n \treturn ptrace(PT_ATTACH, pid, 0, 0)\n@@ -267,19 +269,36 @@ func PtraceDetach(pid int) (err error) {\n }\n \n func PtraceGetFpRegs(pid int, fpregsout *FpReg) (err error) {\n-\treturn ptrace(PT_GETFPREGS, pid, uintptr(unsafe.Pointer(fpregsout)), 0)\n+\treturn ptracePtr(PT_GETFPREGS, pid, unsafe.Pointer(fpregsout), 0)\n }\n \n func PtraceGetRegs(pid int, regsout *Reg) (err error) {\n-\treturn ptrace(PT_GETREGS, pid, uintptr(unsafe.Pointer(regsout)), 0)\n+\treturn ptracePtr(PT_GETREGS, pid, unsafe.Pointer(regsout), 0)\n+}\n+\n+func PtraceIO(req int, pid int, offs uintptr, out []byte, countin int) (count int, err error) {\n+\tioDesc := PtraceIoDesc{\n+\t\tOp:   int32(req),\n+\t\tOffs: offs,\n+\t}\n+\tif countin > 0 {\n+\t\t_ = out[:countin] // check bounds\n+\t\tioDesc.Addr = &out[0]\n+\t} else if out != nil {\n+\t\tioDesc.Addr = (*byte)(unsafe.Pointer(&_zero))\n+\t}\n+\tioDesc.SetLen(countin)\n+\n+\terr = ptracePtr(PT_IO, pid, unsafe.Pointer(&ioDesc), 0)\n+\treturn int(ioDesc.Len), err\n }\n \n func PtraceLwpEvents(pid int, enable int) (err error) {\n \treturn ptrace(PT_LWP_EVENTS, pid, 0, enable)\n }\n \n-func PtraceLwpInfo(pid int, info uintptr) (err error) {\n-\treturn ptrace(PT_LWPINFO, pid, info, int(unsafe.Sizeof(PtraceLwpInfoStruct{})))\n+func PtraceLwpInfo(pid int, info *PtraceLwpInfoStruct) (err error) {\n+\treturn ptracePtr(PT_LWPINFO, pid, unsafe.Pointer(info), int(unsafe.Sizeof(*info)))\n }\n \n func PtracePeekData(pid int, addr uintptr, out []byte) (count int, err error) {\n@@ -299,13 +318,25 @@ func PtracePokeText(pid int, addr uintptr, data []byte) (count int, err error) {\n }\n \n func PtraceSetRegs(pid int, regs *Reg) (err error) {\n-\treturn ptrace(PT_SETREGS, pid, uintptr(unsafe.Pointer(regs)), 0)\n+\treturn ptracePtr(PT_SETREGS, pid, unsafe.Pointer(regs), 0)\n }\n \n func PtraceSingleStep(pid int) (err error) {\n \treturn ptrace(PT_STEP, pid, 1, 0)\n }\n \n+func Dup3(oldfd, newfd, flags int) error {\n+\tif oldfd == newfd || flags&^O_CLOEXEC != 0 {\n+\t\treturn EINVAL\n+\t}\n+\thow := F_DUP2FD\n+\tif flags&O_CLOEXEC != 0 {\n+\t\thow = F_DUP2FD_CLOEXEC\n+\t}\n+\t_, err := fcntl(oldfd, how, newfd)\n+\treturn err\n+}\n+\n /*\n  * Exposed directly\n  */"
    },
    {
      "sha": "b8da510043cb78dc2b8baf6d12338d95d047df6c",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_freebsd_386.go",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_386.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_386.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -42,6 +42,10 @@ func (cmsg *Cmsghdr) SetLen(length int) {\n \tcmsg.Len = uint32(length)\n }\n \n+func (d *PtraceIoDesc) SetLen(length int) {\n+\td.Len = uint32(length)\n+}\n+\n func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {\n \tvar writtenOut uint64 = 0\n \t_, _, e1 := Syscall9(SYS_SENDFILE, uintptr(infd), uintptr(outfd), uintptr(*offset), uintptr((*offset)>>32), uintptr(count), 0, uintptr(unsafe.Pointer(&writtenOut)), 0, 0)\n@@ -57,11 +61,5 @@ func sendfile(outfd int, infd int, offset *int64, count int) (written int, err e\n func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err syscall.Errno)\n \n func PtraceGetFsBase(pid int, fsbase *int64) (err error) {\n-\treturn ptrace(PT_GETFSBASE, pid, uintptr(unsafe.Pointer(fsbase)), 0)\n-}\n-\n-func PtraceIO(req int, pid int, addr uintptr, out []byte, countin int) (count int, err error) {\n-\tioDesc := PtraceIoDesc{Op: int32(req), Offs: uintptr(unsafe.Pointer(addr)), Addr: uintptr(unsafe.Pointer(&out[0])), Len: uint32(countin)}\n-\terr = ptrace(PT_IO, pid, uintptr(unsafe.Pointer(&ioDesc)), 0)\n-\treturn int(ioDesc.Len), err\n+\treturn ptracePtr(PT_GETFSBASE, pid, unsafe.Pointer(fsbase), 0)\n }"
    },
    {
      "sha": "47155c48390b5dcedfc30e89a10fbdd773218f2b",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_freebsd_amd64.go",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_amd64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -42,6 +42,10 @@ func (cmsg *Cmsghdr) SetLen(length int) {\n \tcmsg.Len = uint32(length)\n }\n \n+func (d *PtraceIoDesc) SetLen(length int) {\n+\td.Len = uint64(length)\n+}\n+\n func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {\n \tvar writtenOut uint64 = 0\n \t_, _, e1 := Syscall9(SYS_SENDFILE, uintptr(infd), uintptr(outfd), uintptr(*offset), uintptr(count), 0, uintptr(unsafe.Pointer(&writtenOut)), 0, 0, 0)\n@@ -57,11 +61,5 @@ func sendfile(outfd int, infd int, offset *int64, count int) (written int, err e\n func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err syscall.Errno)\n \n func PtraceGetFsBase(pid int, fsbase *int64) (err error) {\n-\treturn ptrace(PT_GETFSBASE, pid, uintptr(unsafe.Pointer(fsbase)), 0)\n-}\n-\n-func PtraceIO(req int, pid int, addr uintptr, out []byte, countin int) (count int, err error) {\n-\tioDesc := PtraceIoDesc{Op: int32(req), Offs: uintptr(unsafe.Pointer(addr)), Addr: uintptr(unsafe.Pointer(&out[0])), Len: uint64(countin)}\n-\terr = ptrace(PT_IO, pid, uintptr(unsafe.Pointer(&ioDesc)), 0)\n-\treturn int(ioDesc.Len), err\n+\treturn ptracePtr(PT_GETFSBASE, pid, unsafe.Pointer(fsbase), 0)\n }"
    },
    {
      "sha": "08932093fa245ab54c23b99278c4ae35bdbe330e",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_freebsd_arm.go",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_arm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_arm.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -42,6 +42,10 @@ func (cmsg *Cmsghdr) SetLen(length int) {\n \tcmsg.Len = uint32(length)\n }\n \n+func (d *PtraceIoDesc) SetLen(length int) {\n+\td.Len = uint32(length)\n+}\n+\n func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {\n \tvar writtenOut uint64 = 0\n \t_, _, e1 := Syscall9(SYS_SENDFILE, uintptr(infd), uintptr(outfd), uintptr(*offset), uintptr((*offset)>>32), uintptr(count), 0, uintptr(unsafe.Pointer(&writtenOut)), 0, 0)\n@@ -55,9 +59,3 @@ func sendfile(outfd int, infd int, offset *int64, count int) (written int, err e\n }\n \n func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err syscall.Errno)\n-\n-func PtraceIO(req int, pid int, addr uintptr, out []byte, countin int) (count int, err error) {\n-\tioDesc := PtraceIoDesc{Op: int32(req), Offs: uintptr(unsafe.Pointer(addr)), Addr: uintptr(unsafe.Pointer(&out[0])), Len: uint32(countin)}\n-\terr = ptrace(PT_IO, pid, uintptr(unsafe.Pointer(&ioDesc)), 0)\n-\treturn int(ioDesc.Len), err\n-}"
    },
    {
      "sha": "d151a0d0e53ace461afa7cec63bbb484ee457611",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_freebsd_arm64.go",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_arm64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -42,6 +42,10 @@ func (cmsg *Cmsghdr) SetLen(length int) {\n \tcmsg.Len = uint32(length)\n }\n \n+func (d *PtraceIoDesc) SetLen(length int) {\n+\td.Len = uint64(length)\n+}\n+\n func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {\n \tvar writtenOut uint64 = 0\n \t_, _, e1 := Syscall9(SYS_SENDFILE, uintptr(infd), uintptr(outfd), uintptr(*offset), uintptr(count), 0, uintptr(unsafe.Pointer(&writtenOut)), 0, 0, 0)\n@@ -55,9 +59,3 @@ func sendfile(outfd int, infd int, offset *int64, count int) (written int, err e\n }\n \n func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err syscall.Errno)\n-\n-func PtraceIO(req int, pid int, addr uintptr, out []byte, countin int) (count int, err error) {\n-\tioDesc := PtraceIoDesc{Op: int32(req), Offs: uintptr(unsafe.Pointer(addr)), Addr: uintptr(unsafe.Pointer(&out[0])), Len: uint64(countin)}\n-\terr = ptrace(PT_IO, pid, uintptr(unsafe.Pointer(&ioDesc)), 0)\n-\treturn int(ioDesc.Len), err\n-}"
    },
    {
      "sha": "d5cd64b378742133b7b19a3378628029dc36ade0",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_freebsd_riscv64.go",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_riscv64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd_riscv64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -42,6 +42,10 @@ func (cmsg *Cmsghdr) SetLen(length int) {\n \tcmsg.Len = uint32(length)\n }\n \n+func (d *PtraceIoDesc) SetLen(length int) {\n+\td.Len = uint64(length)\n+}\n+\n func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {\n \tvar writtenOut uint64 = 0\n \t_, _, e1 := Syscall9(SYS_SENDFILE, uintptr(infd), uintptr(outfd), uintptr(*offset), uintptr(count), 0, uintptr(unsafe.Pointer(&writtenOut)), 0, 0, 0)\n@@ -55,9 +59,3 @@ func sendfile(outfd int, infd int, offset *int64, count int) (written int, err e\n }\n \n func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err syscall.Errno)\n-\n-func PtraceIO(req int, pid int, addr uintptr, out []byte, countin int) (count int, err error) {\n-\tioDesc := PtraceIoDesc{Op: int32(req), Offs: uintptr(unsafe.Pointer(addr)), Addr: uintptr(unsafe.Pointer(&out[0])), Len: uint64(countin)}\n-\terr = ptrace(PT_IO, pid, uintptr(unsafe.Pointer(&ioDesc)), 0)\n-\treturn int(ioDesc.Len), err\n-}"
    },
    {
      "sha": "381fd4673bececd92f2739a50a623a4317cca20a",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_hurd.go",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_hurd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_hurd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_hurd.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -20,3 +20,11 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \t}\n \treturn\n }\n+\n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\tr0, er := C.ioctl(C.int(fd), C.ulong(req), C.uintptr_t(uintptr(arg)))\n+\tif r0 == -1 && er != nil {\n+\t\terr = er\n+\t}\n+\treturn\n+}"
    },
    {
      "sha": "9735331530ac3098cd41a6eb5587ea0bf81b5616",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_linux.go",
      "status": "modified",
      "additions": 29,
      "deletions": 10,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -1015,8 +1015,7 @@ func anyToSockaddr(fd int, rsa *RawSockaddrAny) (Sockaddr, error) {\n \t\tfor n < len(pp.Path) && pp.Path[n] != 0 {\n \t\t\tn++\n \t\t}\n-\t\tbytes := (*[len(pp.Path)]byte)(unsafe.Pointer(&pp.Path[0]))[0:n]\n-\t\tsa.Name = string(bytes)\n+\t\tsa.Name = string(unsafe.Slice((*byte)(unsafe.Pointer(&pp.Path[0])), n))\n \t\treturn sa, nil\n \n \tcase AF_INET:\n@@ -1365,6 +1364,10 @@ func SetsockoptTCPRepairOpt(fd, level, opt int, o []TCPRepairOpt) (err error) {\n \treturn setsockopt(fd, level, opt, unsafe.Pointer(&o[0]), uintptr(SizeofTCPRepairOpt*len(o)))\n }\n \n+func SetsockoptTCPMD5Sig(fd, level, opt int, s *TCPMD5Sig) error {\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(s), unsafe.Sizeof(*s))\n+}\n+\n // Keyctl Commands (http://man7.org/linux/man-pages/man2/keyctl.2.html)\n \n // KeyctlInt calls keyctl commands in which each argument is an int.\n@@ -1579,6 +1582,7 @@ func BindToDevice(fd int, device string) (err error) {\n }\n \n //sys\tptrace(request int, pid int, addr uintptr, data uintptr) (err error)\n+//sys\tptracePtr(request int, pid int, addr uintptr, data unsafe.Pointer) (err error) = SYS_PTRACE\n \n func ptracePeek(req int, pid int, addr uintptr, out []byte) (count int, err error) {\n \t// The peek requests are machine-size oriented, so we wrap it\n@@ -1596,7 +1600,7 @@ func ptracePeek(req int, pid int, addr uintptr, out []byte) (count int, err erro\n \t// boundary.\n \tn := 0\n \tif addr%SizeofPtr != 0 {\n-\t\terr = ptrace(req, pid, addr-addr%SizeofPtr, uintptr(unsafe.Pointer(&buf[0])))\n+\t\terr = ptracePtr(req, pid, addr-addr%SizeofPtr, unsafe.Pointer(&buf[0]))\n \t\tif err != nil {\n \t\t\treturn 0, err\n \t\t}\n@@ -1608,7 +1612,7 @@ func ptracePeek(req int, pid int, addr uintptr, out []byte) (count int, err erro\n \tfor len(out) > 0 {\n \t\t// We use an internal buffer to guarantee alignment.\n \t\t// It's not documented if this is necessary, but we're paranoid.\n-\t\terr = ptrace(req, pid, addr+uintptr(n), uintptr(unsafe.Pointer(&buf[0])))\n+\t\terr = ptracePtr(req, pid, addr+uintptr(n), unsafe.Pointer(&buf[0]))\n \t\tif err != nil {\n \t\t\treturn n, err\n \t\t}\n@@ -1640,7 +1644,7 @@ func ptracePoke(pokeReq int, peekReq int, pid int, addr uintptr, data []byte) (c\n \tn := 0\n \tif addr%SizeofPtr != 0 {\n \t\tvar buf [SizeofPtr]byte\n-\t\terr = ptrace(peekReq, pid, addr-addr%SizeofPtr, uintptr(unsafe.Pointer(&buf[0])))\n+\t\terr = ptracePtr(peekReq, pid, addr-addr%SizeofPtr, unsafe.Pointer(&buf[0]))\n \t\tif err != nil {\n \t\t\treturn 0, err\n \t\t}\n@@ -1667,7 +1671,7 @@ func ptracePoke(pokeReq int, peekReq int, pid int, addr uintptr, data []byte) (c\n \t// Trailing edge.\n \tif len(data) > 0 {\n \t\tvar buf [SizeofPtr]byte\n-\t\terr = ptrace(peekReq, pid, addr+uintptr(n), uintptr(unsafe.Pointer(&buf[0])))\n+\t\terr = ptracePtr(peekReq, pid, addr+uintptr(n), unsafe.Pointer(&buf[0]))\n \t\tif err != nil {\n \t\t\treturn n, err\n \t\t}\n@@ -1696,11 +1700,11 @@ func PtracePokeUser(pid int, addr uintptr, data []byte) (count int, err error) {\n }\n \n func PtraceGetRegs(pid int, regsout *PtraceRegs) (err error) {\n-\treturn ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))\n+\treturn ptracePtr(PTRACE_GETREGS, pid, 0, unsafe.Pointer(regsout))\n }\n \n func PtraceSetRegs(pid int, regs *PtraceRegs) (err error) {\n-\treturn ptrace(PTRACE_SETREGS, pid, 0, uintptr(unsafe.Pointer(regs)))\n+\treturn ptracePtr(PTRACE_SETREGS, pid, 0, unsafe.Pointer(regs))\n }\n \n func PtraceSetOptions(pid int, options int) (err error) {\n@@ -1709,7 +1713,7 @@ func PtraceSetOptions(pid int, options int) (err error) {\n \n func PtraceGetEventMsg(pid int) (msg uint, err error) {\n \tvar data _C_long\n-\terr = ptrace(PTRACE_GETEVENTMSG, pid, 0, uintptr(unsafe.Pointer(&data)))\n+\terr = ptracePtr(PTRACE_GETEVENTMSG, pid, 0, unsafe.Pointer(&data))\n \tmsg = uint(data)\n \treturn\n }\n@@ -1800,6 +1804,7 @@ func Sendfile(outfd int, infd int, offset *int64, count int) (written int, err e\n //sysnb\tCapset(hdr *CapUserHeader, data *CapUserData) (err error)\n //sys\tChdir(path string) (err error)\n //sys\tChroot(path string) (err error)\n+//sys\tClockAdjtime(clockid int32, buf *Timex) (state int, err error)\n //sys\tClockGetres(clockid int32, res *Timespec) (err error)\n //sys\tClockGettime(clockid int32, time *Timespec) (err error)\n //sys\tClockNanosleep(clockid int32, flags int, request *Timespec, remain *Timespec) (err error)\n@@ -1999,7 +2004,7 @@ func appendBytes(vecs []Iovec, bs [][]byte) []Iovec {\n // offs2lohi splits offs into its low and high order bits.\n func offs2lohi(offs int64) (lo, hi uintptr) {\n \tconst longBits = SizeofLong * 8\n-\treturn uintptr(offs), uintptr(uint64(offs) >> longBits)\n+\treturn uintptr(offs), uintptr(uint64(offs) >> (longBits - 1) >> 1) // two shifts to avoid false positive in vet\n }\n \n func Readv(fd int, iovs [][]byte) (n int, err error) {\n@@ -2153,6 +2158,14 @@ func isGroupMember(gid int) bool {\n \treturn false\n }\n \n+func isCapDacOverrideSet() bool {\n+\thdr := CapUserHeader{Version: LINUX_CAPABILITY_VERSION_3}\n+\tdata := [2]CapUserData{}\n+\terr := Capget(&hdr, &data[0])\n+\n+\treturn err == nil && data[0].Effective&(1<<CAP_DAC_OVERRIDE) != 0\n+}\n+\n //sys\tfaccessat(dirfd int, path string, mode uint32) (err error)\n //sys\tFaccessat2(dirfd int, path string, mode uint32, flags int) (err error)\n \n@@ -2188,6 +2201,12 @@ func Faccessat(dirfd int, path string, mode uint32, flags int) (err error) {\n \tvar uid int\n \tif flags&AT_EACCESS != 0 {\n \t\tuid = Geteuid()\n+\t\tif uid != 0 && isCapDacOverrideSet() {\n+\t\t\t// If CAP_DAC_OVERRIDE is set, file access check is\n+\t\t\t// done by the kernel in the same way as for root\n+\t\t\t// (see generic_permission() in the Linux sources).\n+\t\t\tuid = 0\n+\t\t}\n \t} else {\n \t\tuid = Getuid()\n \t}"
    },
    {
      "sha": "e66865dccbe6cb0921487029333b1fb0ab13aa6e",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_netbsd.go",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_netbsd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_netbsd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_netbsd.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -13,7 +13,6 @@\n package unix\n \n import (\n-\t\"runtime\"\n \t\"syscall\"\n \t\"unsafe\"\n )\n@@ -178,13 +177,13 @@ func sendfile(outfd int, infd int, offset *int64, count int) (written int, err e\n }\n \n //sys\tioctl(fd int, req uint, arg uintptr) (err error)\n+//sys\tioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) = SYS_IOCTL\n \n //sys\tsysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) = SYS___SYSCTL\n \n func IoctlGetPtmget(fd int, req uint) (*Ptmget, error) {\n \tvar value Ptmget\n-\terr := ioctl(fd, req, uintptr(unsafe.Pointer(&value)))\n-\truntime.KeepAlive(value)\n+\terr := ioctlPtr(fd, req, unsafe.Pointer(&value))\n \treturn &value, err\n }\n "
    },
    {
      "sha": "5e9de23ae372bc78fb119595eef557aa7d7bc848",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_openbsd.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_openbsd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_openbsd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_openbsd.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -152,6 +152,7 @@ func Getfsstat(buf []Statfs_t, flags int) (n int, err error) {\n }\n \n //sys\tioctl(fd int, req uint, arg uintptr) (err error)\n+//sys\tioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) = SYS_IOCTL\n \n //sys\tsysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) = SYS___SYSCTL\n "
    },
    {
      "sha": "d3444b64d6d1ec86581d2dc6f352d9a9a0f295e8",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_solaris.go",
      "status": "modified",
      "additions": 12,
      "deletions": 9,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_solaris.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_solaris.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_solaris.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -408,8 +408,7 @@ func anyToSockaddr(fd int, rsa *RawSockaddrAny) (Sockaddr, error) {\n \t\tfor n < len(pp.Path) && pp.Path[n] != 0 {\n \t\t\tn++\n \t\t}\n-\t\tbytes := (*[len(pp.Path)]byte)(unsafe.Pointer(&pp.Path[0]))[0:n]\n-\t\tsa.Name = string(bytes)\n+\t\tsa.Name = string(unsafe.Slice((*byte)(unsafe.Pointer(&pp.Path[0])), n))\n \t\treturn sa, nil\n \n \tcase AF_INET:\n@@ -547,21 +546,25 @@ func Minor(dev uint64) uint32 {\n  */\n \n //sys\tioctlRet(fd int, req uint, arg uintptr) (ret int, err error) = libc.ioctl\n+//sys\tioctlPtrRet(fd int, req uint, arg unsafe.Pointer) (ret int, err error) = libc.ioctl\n \n func ioctl(fd int, req uint, arg uintptr) (err error) {\n \t_, err = ioctlRet(fd, req, arg)\n \treturn err\n }\n \n-func IoctlSetTermio(fd int, req uint, value *Termio) error {\n-\terr := ioctl(fd, req, uintptr(unsafe.Pointer(value)))\n-\truntime.KeepAlive(value)\n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, err = ioctlPtrRet(fd, req, arg)\n \treturn err\n }\n \n+func IoctlSetTermio(fd int, req uint, value *Termio) error {\n+\treturn ioctlPtr(fd, req, unsafe.Pointer(value))\n+}\n+\n func IoctlGetTermio(fd int, req uint) (*Termio, error) {\n \tvar value Termio\n-\terr := ioctl(fd, req, uintptr(unsafe.Pointer(&value)))\n+\terr := ioctlPtr(fd, req, unsafe.Pointer(&value))\n \treturn &value, err\n }\n \n@@ -1084,7 +1087,7 @@ func IoctlSetIntRetInt(fd int, req uint, arg int) (int, error) {\n func IoctlSetString(fd int, req uint, val string) error {\n \tbs := make([]byte, len(val)+1)\n \tcopy(bs[:len(bs)-1], val)\n-\terr := ioctl(fd, req, uintptr(unsafe.Pointer(&bs[0])))\n+\terr := ioctlPtr(fd, req, unsafe.Pointer(&bs[0]))\n \truntime.KeepAlive(&bs[0])\n \treturn err\n }\n@@ -1118,7 +1121,7 @@ func (l *Lifreq) GetLifruUint() uint {\n }\n \n func IoctlLifreq(fd int, req uint, l *Lifreq) error {\n-\treturn ioctl(fd, req, uintptr(unsafe.Pointer(l)))\n+\treturn ioctlPtr(fd, req, unsafe.Pointer(l))\n }\n \n // Strioctl Helpers\n@@ -1129,5 +1132,5 @@ func (s *Strioctl) SetInt(i int) {\n }\n \n func IoctlSetStrioctlRetInt(fd int, req uint, s *Strioctl) (int, error) {\n-\treturn ioctlRet(fd, req, uintptr(unsafe.Pointer(s)))\n+\treturn ioctlPtrRet(fd, req, unsafe.Pointer(s))\n }"
    },
    {
      "sha": "00f0aa3758892dfc1912c7996387bc7d19eb2e84",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_unix.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_unix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_unix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_unix.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -578,7 +578,7 @@ func Lutimes(path string, tv []Timeval) error {\n \treturn UtimesNanoAt(AT_FDCWD, path, ts, AT_SYMLINK_NOFOLLOW)\n }\n \n-// emptyIovec reports whether there are no bytes in the slice of Iovec.\n+// emptyIovecs reports whether there are no bytes in the slice of Iovec.\n func emptyIovecs(iov []Iovec) bool {\n \tfor i := range iov {\n \t\tif iov[i].Len > 0 {"
    },
    {
      "sha": "b295497ae476a27714f62f11d32b2a52594cdc2d",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_zos_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_zos_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_zos_s390x.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -139,8 +139,7 @@ func anyToSockaddr(_ int, rsa *RawSockaddrAny) (Sockaddr, error) {\n \t\tfor n < int(pp.Len) && pp.Path[n] != 0 {\n \t\t\tn++\n \t\t}\n-\t\tbytes := (*[len(pp.Path)]byte)(unsafe.Pointer(&pp.Path[0]))[0:n]\n-\t\tsa.Name = string(bytes)\n+\t\tsa.Name = string(unsafe.Slice((*byte)(unsafe.Pointer(&pp.Path[0])), n))\n \t\treturn sa, nil\n \n \tcase AF_INET:\n@@ -214,6 +213,7 @@ func (cmsg *Cmsghdr) SetLen(length int) {\n //sys   mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) = SYS_MMAP\n //sys   munmap(addr uintptr, length uintptr) (err error) = SYS_MUNMAP\n //sys   ioctl(fd int, req uint, arg uintptr) (err error) = SYS_IOCTL\n+//sys   ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) = SYS_IOCTL\n \n //sys   Access(path string, mode uint32) (err error) = SYS___ACCESS_A\n //sys   Chdir(path string) (err error) = SYS___CHDIR_A"
    },
    {
      "sha": "616b1b28485812861364414dab61a7c71a1b7865",
      "filename": "backend/vendor/golang.org/x/sys/unix/timestruct.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Ftimestruct.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Ftimestruct.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Ftimestruct.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -9,7 +9,7 @@ package unix\n \n import \"time\"\n \n-// TimespecToNSec returns the time stored in ts as nanoseconds.\n+// TimespecToNsec returns the time stored in ts as nanoseconds.\n func TimespecToNsec(ts Timespec) int64 { return ts.Nano() }\n \n // NsecToTimespec converts a number of nanoseconds into a Timespec."
    },
    {
      "sha": "f5f8e9f3665e98f24e8cd837d5a8d798002d5cb7",
      "filename": "backend/vendor/golang.org/x/sys/unix/xattr_bsd.go",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fxattr_bsd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fxattr_bsd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fxattr_bsd.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -36,9 +36,14 @@ func xattrnamespace(fullattr string) (ns int, attr string, err error) {\n func initxattrdest(dest []byte, idx int) (d unsafe.Pointer) {\n \tif len(dest) > idx {\n \t\treturn unsafe.Pointer(&dest[idx])\n-\t} else {\n-\t\treturn unsafe.Pointer(_zero)\n \t}\n+\tif dest != nil {\n+\t\t// extattr_get_file and extattr_list_file treat NULL differently from\n+\t\t// a non-NULL pointer of length zero. Preserve the property of nilness,\n+\t\t// even if we can't use dest directly.\n+\t\treturn unsafe.Pointer(&_zero)\n+\t}\n+\treturn nil\n }\n \n // FreeBSD and NetBSD implement their own syscalls to handle extended attributes"
    },
    {
      "sha": "398c37e52d6b6fc4d31f4dc3c108ba2cc25938bd",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux.go",
      "status": "modified",
      "additions": 31,
      "deletions": 9,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -70,6 +70,7 @@ const (\n \tALG_SET_DRBG_ENTROPY                        = 0x6\n \tALG_SET_IV                                  = 0x2\n \tALG_SET_KEY                                 = 0x1\n+\tALG_SET_KEY_BY_KEY_SERIAL                   = 0x7\n \tALG_SET_OP                                  = 0x3\n \tANON_INODE_FS_MAGIC                         = 0x9041934\n \tARPHRD_6LOWPAN                              = 0x339\n@@ -457,7 +458,6 @@ const (\n \tB600                                        = 0x8\n \tB75                                         = 0x2\n \tB9600                                       = 0xd\n-\tBALLOON_KVM_MAGIC                           = 0x13661366\n \tBDEVFS_MAGIC                                = 0x62646576\n \tBINDERFS_SUPER_MAGIC                        = 0x6c6f6f70\n \tBINFMTFS_MAGIC                              = 0x42494e4d\n@@ -563,6 +563,7 @@ const (\n \tBUS_USB                                     = 0x3\n \tBUS_VIRTUAL                                 = 0x6\n \tCAN_BCM                                     = 0x2\n+\tCAN_BUS_OFF_THRESHOLD                       = 0x100\n \tCAN_CTRLMODE_3_SAMPLES                      = 0x4\n \tCAN_CTRLMODE_BERR_REPORTING                 = 0x10\n \tCAN_CTRLMODE_CC_LEN8_DLC                    = 0x100\n@@ -577,9 +578,12 @@ const (\n \tCAN_EFF_FLAG                                = 0x80000000\n \tCAN_EFF_ID_BITS                             = 0x1d\n \tCAN_EFF_MASK                                = 0x1fffffff\n+\tCAN_ERROR_PASSIVE_THRESHOLD                 = 0x80\n+\tCAN_ERROR_WARNING_THRESHOLD                 = 0x60\n \tCAN_ERR_ACK                                 = 0x20\n \tCAN_ERR_BUSERROR                            = 0x80\n \tCAN_ERR_BUSOFF                              = 0x40\n+\tCAN_ERR_CNT                                 = 0x200\n \tCAN_ERR_CRTL                                = 0x4\n \tCAN_ERR_CRTL_ACTIVE                         = 0x40\n \tCAN_ERR_CRTL_RX_OVERFLOW                    = 0x1\n@@ -771,6 +775,8 @@ const (\n \tDEVLINK_GENL_MCGRP_CONFIG_NAME              = \"config\"\n \tDEVLINK_GENL_NAME                           = \"devlink\"\n \tDEVLINK_GENL_VERSION                        = 0x1\n+\tDEVLINK_PORT_FN_CAP_MIGRATABLE              = 0x2\n+\tDEVLINK_PORT_FN_CAP_ROCE                    = 0x1\n \tDEVLINK_SB_THRESHOLD_TO_ALPHA_MAX           = 0x14\n \tDEVLINK_SUPPORTED_FLASH_OVERWRITE_SECTIONS  = 0x3\n \tDEVMEM_MAGIC                                = 0x454d444d\n@@ -820,9 +826,9 @@ const (\n \tDM_UUID_FLAG                                = 0x4000\n \tDM_UUID_LEN                                 = 0x81\n \tDM_VERSION                                  = 0xc138fd00\n-\tDM_VERSION_EXTRA                            = \"-ioctl (2022-02-22)\"\n+\tDM_VERSION_EXTRA                            = \"-ioctl (2022-07-28)\"\n \tDM_VERSION_MAJOR                            = 0x4\n-\tDM_VERSION_MINOR                            = 0x2e\n+\tDM_VERSION_MINOR                            = 0x2f\n \tDM_VERSION_PATCHLEVEL                       = 0x0\n \tDT_BLK                                      = 0x6\n \tDT_CHR                                      = 0x2\n@@ -1049,6 +1055,7 @@ const (\n \tETH_P_CAIF                                  = 0xf7\n \tETH_P_CAN                                   = 0xc\n \tETH_P_CANFD                                 = 0xd\n+\tETH_P_CANXL                                 = 0xe\n \tETH_P_CFM                                   = 0x8902\n \tETH_P_CONTROL                               = 0x16\n \tETH_P_CUST                                  = 0x6006\n@@ -1060,6 +1067,7 @@ const (\n \tETH_P_DNA_RT                                = 0x6003\n \tETH_P_DSA                                   = 0x1b\n \tETH_P_DSA_8021Q                             = 0xdadb\n+\tETH_P_DSA_A5PSW                             = 0xe001\n \tETH_P_ECONET                                = 0x18\n \tETH_P_EDSA                                  = 0xdada\n \tETH_P_ERSPAN                                = 0x88be\n@@ -1194,8 +1202,10 @@ const (\n \tFAN_MARK_EVICTABLE                          = 0x200\n \tFAN_MARK_FILESYSTEM                         = 0x100\n \tFAN_MARK_FLUSH                              = 0x80\n+\tFAN_MARK_IGNORE                             = 0x400\n \tFAN_MARK_IGNORED_MASK                       = 0x20\n \tFAN_MARK_IGNORED_SURV_MODIFY                = 0x40\n+\tFAN_MARK_IGNORE_SURV                        = 0x440\n \tFAN_MARK_INODE                              = 0x0\n \tFAN_MARK_MOUNT                              = 0x10\n \tFAN_MARK_ONLYDIR                            = 0x8\n@@ -1253,7 +1263,10 @@ const (\n \tFSCRYPT_MODE_AES_128_CBC                    = 0x5\n \tFSCRYPT_MODE_AES_128_CTS                    = 0x6\n \tFSCRYPT_MODE_AES_256_CTS                    = 0x4\n+\tFSCRYPT_MODE_AES_256_HCTR2                  = 0xa\n \tFSCRYPT_MODE_AES_256_XTS                    = 0x1\n+\tFSCRYPT_MODE_SM4_CTS                        = 0x8\n+\tFSCRYPT_MODE_SM4_XTS                        = 0x7\n \tFSCRYPT_POLICY_FLAGS_PAD_16                 = 0x2\n \tFSCRYPT_POLICY_FLAGS_PAD_32                 = 0x3\n \tFSCRYPT_POLICY_FLAGS_PAD_4                  = 0x0\n@@ -1272,8 +1285,6 @@ const (\n \tFS_ENCRYPTION_MODE_AES_256_GCM              = 0x2\n \tFS_ENCRYPTION_MODE_AES_256_XTS              = 0x1\n \tFS_ENCRYPTION_MODE_INVALID                  = 0x0\n-\tFS_ENCRYPTION_MODE_SPECK128_256_CTS         = 0x8\n-\tFS_ENCRYPTION_MODE_SPECK128_256_XTS         = 0x7\n \tFS_IOC_ADD_ENCRYPTION_KEY                   = 0xc0506617\n \tFS_IOC_GET_ENCRYPTION_KEY_STATUS            = 0xc080661a\n \tFS_IOC_GET_ENCRYPTION_POLICY_EX             = 0xc0096616\n@@ -1430,6 +1441,7 @@ const (\n \tIFF_NOARP                                   = 0x80\n \tIFF_NOFILTER                                = 0x1000\n \tIFF_NOTRAILERS                              = 0x20\n+\tIFF_NO_CARRIER                              = 0x40\n \tIFF_NO_PI                                   = 0x1000\n \tIFF_ONE_QUEUE                               = 0x2000\n \tIFF_PERSIST                                 = 0x800\n@@ -1761,6 +1773,7 @@ const (\n \tLANDLOCK_ACCESS_FS_REFER                    = 0x2000\n \tLANDLOCK_ACCESS_FS_REMOVE_DIR               = 0x10\n \tLANDLOCK_ACCESS_FS_REMOVE_FILE              = 0x20\n+\tLANDLOCK_ACCESS_FS_TRUNCATE                 = 0x4000\n \tLANDLOCK_ACCESS_FS_WRITE_FILE               = 0x2\n \tLANDLOCK_CREATE_RULESET_VERSION             = 0x1\n \tLINUX_REBOOT_CMD_CAD_OFF                    = 0x0\n@@ -1800,11 +1813,13 @@ const (\n \tLWTUNNEL_IP_OPT_GENEVE_MAX                  = 0x3\n \tLWTUNNEL_IP_OPT_VXLAN_MAX                   = 0x1\n \tMADV_COLD                                   = 0x14\n+\tMADV_COLLAPSE                               = 0x19\n \tMADV_DODUMP                                 = 0x11\n \tMADV_DOFORK                                 = 0xb\n \tMADV_DONTDUMP                               = 0x10\n \tMADV_DONTFORK                               = 0xa\n \tMADV_DONTNEED                               = 0x4\n+\tMADV_DONTNEED_LOCKED                        = 0x18\n \tMADV_FREE                                   = 0x8\n \tMADV_HUGEPAGE                               = 0xe\n \tMADV_HWPOISON                               = 0x64\n@@ -1846,7 +1861,7 @@ const (\n \tMFD_ALLOW_SEALING                           = 0x2\n \tMFD_CLOEXEC                                 = 0x1\n \tMFD_HUGETLB                                 = 0x4\n-\tMFD_HUGE_16GB                               = -0x78000000\n+\tMFD_HUGE_16GB                               = 0x88000000\n \tMFD_HUGE_16MB                               = 0x60000000\n \tMFD_HUGE_1GB                                = 0x78000000\n \tMFD_HUGE_1MB                                = 0x50000000\n@@ -2153,6 +2168,7 @@ const (\n \tPACKET_FANOUT_DATA                          = 0x16\n \tPACKET_FANOUT_EBPF                          = 0x7\n \tPACKET_FANOUT_FLAG_DEFRAG                   = 0x8000\n+\tPACKET_FANOUT_FLAG_IGNORE_OUTGOING          = 0x4000\n \tPACKET_FANOUT_FLAG_ROLLOVER                 = 0x1000\n \tPACKET_FANOUT_FLAG_UNIQUEID                 = 0x2000\n \tPACKET_FANOUT_HASH                          = 0x0\n@@ -2212,6 +2228,11 @@ const (\n \tPERF_AUX_FLAG_PARTIAL                       = 0x4\n \tPERF_AUX_FLAG_PMU_FORMAT_TYPE_MASK          = 0xff00\n \tPERF_AUX_FLAG_TRUNCATED                     = 0x1\n+\tPERF_BR_ARM64_DEBUG_DATA                    = 0x7\n+\tPERF_BR_ARM64_DEBUG_EXIT                    = 0x5\n+\tPERF_BR_ARM64_DEBUG_HALT                    = 0x4\n+\tPERF_BR_ARM64_DEBUG_INST                    = 0x6\n+\tPERF_BR_ARM64_FIQ                           = 0x3\n \tPERF_FLAG_FD_CLOEXEC                        = 0x8\n \tPERF_FLAG_FD_NO_GROUP                       = 0x1\n \tPERF_FLAG_FD_OUTPUT                         = 0x2\n@@ -2232,6 +2253,8 @@ const (\n \tPERF_MEM_LOCK_NA                            = 0x1\n \tPERF_MEM_LOCK_SHIFT                         = 0x18\n \tPERF_MEM_LVLNUM_ANY_CACHE                   = 0xb\n+\tPERF_MEM_LVLNUM_CXL                         = 0x9\n+\tPERF_MEM_LVLNUM_IO                          = 0xa\n \tPERF_MEM_LVLNUM_L1                          = 0x1\n \tPERF_MEM_LVLNUM_L2                          = 0x2\n \tPERF_MEM_LVLNUM_L3                          = 0x3\n@@ -2265,6 +2288,7 @@ const (\n \tPERF_MEM_REMOTE_REMOTE                      = 0x1\n \tPERF_MEM_REMOTE_SHIFT                       = 0x25\n \tPERF_MEM_SNOOPX_FWD                         = 0x1\n+\tPERF_MEM_SNOOPX_PEER                        = 0x2\n \tPERF_MEM_SNOOPX_SHIFT                       = 0x26\n \tPERF_MEM_SNOOP_HIT                          = 0x4\n \tPERF_MEM_SNOOP_HITM                         = 0x10\n@@ -2301,7 +2325,6 @@ const (\n \tPERF_SAMPLE_BRANCH_PLM_ALL                  = 0x7\n \tPERF_SAMPLE_WEIGHT_TYPE                     = 0x1004000\n \tPIPEFS_MAGIC                                = 0x50495045\n-\tPPC_CMM_MAGIC                               = 0xc7571590\n \tPPPIOCGNPMODE                               = 0xc008744c\n \tPPPIOCNEWUNIT                               = 0xc004743e\n \tPRIO_PGRP                                   = 0x1\n@@ -2999,6 +3022,7 @@ const (\n \tSTATX_BLOCKS                                = 0x400\n \tSTATX_BTIME                                 = 0x800\n \tSTATX_CTIME                                 = 0x80\n+\tSTATX_DIOALIGN                              = 0x2000\n \tSTATX_GID                                   = 0x10\n \tSTATX_INO                                   = 0x100\n \tSTATX_MNT_ID                                = 0x1000\n@@ -3392,9 +3416,7 @@ const (\n \tXDP_ZEROCOPY                                = 0x4\n \tXENFS_SUPER_MAGIC                           = 0xabba1974\n \tXFS_SUPER_MAGIC                             = 0x58465342\n-\tZ3FOLD_MAGIC                                = 0x33\n \tZONEFS_MAGIC                                = 0x5a4f4653\n-\tZSMALLOC_MAGIC                              = 0x58295829\n \t_HIDIOCGRAWNAME_LEN                         = 0x80\n \t_HIDIOCGRAWPHYS_LEN                         = 0x40\n \t_HIDIOCGRAWUNIQ_LEN                         = 0x40"
    },
    {
      "sha": "a46df0f1e57abb145870af9f84c441ed8f612a35",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_386.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_386.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_386.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -133,6 +133,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x80044d07\n \tMEMISLOCKED                      = 0x80084d17\n \tMEMLOCK                          = 0x40084d05\n+\tMEMREAD                          = 0xc03c4d1a\n \tMEMREADOOB                       = 0xc00c4d04\n \tMEMSETBADBLOCK                   = 0x40084d0c\n \tMEMUNLOCK                        = 0x40084d06"
    },
    {
      "sha": "6cd4a3ea9d331851b7e990977124d7b599e51cba",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_amd64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_amd64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -133,6 +133,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x80044d07\n \tMEMISLOCKED                      = 0x80084d17\n \tMEMLOCK                          = 0x40084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc0104d04\n \tMEMSETBADBLOCK                   = 0x40084d0c\n \tMEMUNLOCK                        = 0x40084d06"
    },
    {
      "sha": "c7ebee24df3f008e4fcf3b5d582f6ec98b319ea6",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_arm.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -131,6 +131,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x80044d07\n \tMEMISLOCKED                      = 0x80084d17\n \tMEMLOCK                          = 0x40084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc00c4d04\n \tMEMSETBADBLOCK                   = 0x40084d0c\n \tMEMUNLOCK                        = 0x40084d06"
    },
    {
      "sha": "9d5352c3e45e892c8ea52cfc8899df2002d81982",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_arm64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -134,6 +134,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x80044d07\n \tMEMISLOCKED                      = 0x80084d17\n \tMEMLOCK                          = 0x40084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc0104d04\n \tMEMSETBADBLOCK                   = 0x40084d0c\n \tMEMUNLOCK                        = 0x40084d06"
    },
    {
      "sha": "f26a164f4aab97ad99fedbeeecc7b272766d0999",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_loong64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_loong64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_loong64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_loong64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -132,6 +132,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x80044d07\n \tMEMISLOCKED                      = 0x80084d17\n \tMEMLOCK                          = 0x40084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc0104d04\n \tMEMSETBADBLOCK                   = 0x40084d0c\n \tMEMUNLOCK                        = 0x40084d06"
    },
    {
      "sha": "890bc3c9b70647d21693fc38049c0414bfd94d6a",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -131,6 +131,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x40044d07\n \tMEMISLOCKED                      = 0x40084d17\n \tMEMLOCK                          = 0x80084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc00c4d04\n \tMEMSETBADBLOCK                   = 0x80084d0c\n \tMEMUNLOCK                        = 0x80084d06"
    },
    {
      "sha": "549f26ac646676fddaec824b96559dfcef69d909",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -131,6 +131,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x40044d07\n \tMEMISLOCKED                      = 0x40084d17\n \tMEMLOCK                          = 0x80084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc0104d04\n \tMEMSETBADBLOCK                   = 0x80084d0c\n \tMEMUNLOCK                        = 0x80084d06"
    },
    {
      "sha": "e0365e32c1746bb35395d8b7431caf3156543558",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips64le.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips64le.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips64le.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -131,6 +131,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x40044d07\n \tMEMISLOCKED                      = 0x40084d17\n \tMEMLOCK                          = 0x80084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc0104d04\n \tMEMSETBADBLOCK                   = 0x80084d0c\n \tMEMUNLOCK                        = 0x80084d06"
    },
    {
      "sha": "fdccce15ca209b6406d17ef09711195ec9dd4e3d",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_mipsle.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mipsle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mipsle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mipsle.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -131,6 +131,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x40044d07\n \tMEMISLOCKED                      = 0x40084d17\n \tMEMLOCK                          = 0x80084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc00c4d04\n \tMEMSETBADBLOCK                   = 0x80084d0c\n \tMEMUNLOCK                        = 0x80084d06"
    },
    {
      "sha": "b2205c83faa162ed54e2d4c860af5c9afa9832b0",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -131,6 +131,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x40044d07\n \tMEMISLOCKED                      = 0x40084d17\n \tMEMLOCK                          = 0x80084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc00c4d04\n \tMEMSETBADBLOCK                   = 0x80084d0c\n \tMEMUNLOCK                        = 0x80084d06"
    },
    {
      "sha": "81aa5ad0f695ab9e492b80561a2a0fd1fb9ea307",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -131,6 +131,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x40044d07\n \tMEMISLOCKED                      = 0x40084d17\n \tMEMLOCK                          = 0x80084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc0104d04\n \tMEMSETBADBLOCK                   = 0x80084d0c\n \tMEMUNLOCK                        = 0x80084d06"
    },
    {
      "sha": "76807a1fd4f7d517d05f167b018ff45eb7457855",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64le.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc64le.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc64le.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -131,6 +131,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x40044d07\n \tMEMISLOCKED                      = 0x40084d17\n \tMEMLOCK                          = 0x80084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc0104d04\n \tMEMSETBADBLOCK                   = 0x80084d0c\n \tMEMUNLOCK                        = 0x80084d06"
    },
    {
      "sha": "d4a5ab9e4e06a2f7acdb4f40934577c01fe85e86",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_riscv64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_riscv64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_riscv64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -131,6 +131,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x80044d07\n \tMEMISLOCKED                      = 0x80084d17\n \tMEMLOCK                          = 0x40084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc0104d04\n \tMEMSETBADBLOCK                   = 0x40084d0c\n \tMEMUNLOCK                        = 0x40084d06"
    },
    {
      "sha": "66e65db951927a783531d80f7c85d6699f54d874",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_s390x.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_s390x.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -131,6 +131,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x80044d07\n \tMEMISLOCKED                      = 0x80084d17\n \tMEMLOCK                          = 0x40084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc0104d04\n \tMEMSETBADBLOCK                   = 0x40084d0c\n \tMEMUNLOCK                        = 0x40084d06"
    },
    {
      "sha": "f619252691e2ac47c638c9c36a788f38d447741e",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_sparc64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_sparc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_sparc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_sparc64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -136,6 +136,7 @@ const (\n \tMEMGETREGIONCOUNT                = 0x40044d07\n \tMEMISLOCKED                      = 0x40084d17\n \tMEMLOCK                          = 0x80084d05\n+\tMEMREAD                          = 0xc0404d1a\n \tMEMREADOOB                       = 0xc0104d04\n \tMEMSETBADBLOCK                   = 0x80084d0c\n \tMEMUNLOCK                        = 0x80084d06"
    },
    {
      "sha": "97f20ca282f5b962a6e511819fa78c1fb9f13fc6",
      "filename": "backend/vendor/golang.org/x/sys/unix/zptrace_armnn_linux.go",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_armnn_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_armnn_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_armnn_linux.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -15,12 +15,12 @@ type PtraceRegsArm struct {\n \n // PtraceGetRegsArm fetches the registers used by arm binaries.\n func PtraceGetRegsArm(pid int, regsout *PtraceRegsArm) error {\n-\treturn ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))\n+\treturn ptracePtr(PTRACE_GETREGS, pid, 0, unsafe.Pointer(regsout))\n }\n \n // PtraceSetRegsArm sets the registers used by arm binaries.\n func PtraceSetRegsArm(pid int, regs *PtraceRegsArm) error {\n-\treturn ptrace(PTRACE_SETREGS, pid, 0, uintptr(unsafe.Pointer(regs)))\n+\treturn ptracePtr(PTRACE_SETREGS, pid, 0, unsafe.Pointer(regs))\n }\n \n // PtraceRegsArm64 is the registers used by arm64 binaries.\n@@ -33,10 +33,10 @@ type PtraceRegsArm64 struct {\n \n // PtraceGetRegsArm64 fetches the registers used by arm64 binaries.\n func PtraceGetRegsArm64(pid int, regsout *PtraceRegsArm64) error {\n-\treturn ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))\n+\treturn ptracePtr(PTRACE_GETREGS, pid, 0, unsafe.Pointer(regsout))\n }\n \n // PtraceSetRegsArm64 sets the registers used by arm64 binaries.\n func PtraceSetRegsArm64(pid int, regs *PtraceRegsArm64) error {\n-\treturn ptrace(PTRACE_SETREGS, pid, 0, uintptr(unsafe.Pointer(regs)))\n+\treturn ptracePtr(PTRACE_SETREGS, pid, 0, unsafe.Pointer(regs))\n }"
    },
    {
      "sha": "834d2856dd415375cada1e855892b586a85f6c8b",
      "filename": "backend/vendor/golang.org/x/sys/unix/zptrace_linux_arm64.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_linux_arm64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -7,11 +7,11 @@ import \"unsafe\"\n // PtraceGetRegSetArm64 fetches the registers used by arm64 binaries.\n func PtraceGetRegSetArm64(pid, addr int, regsout *PtraceRegsArm64) error {\n \tiovec := Iovec{(*byte)(unsafe.Pointer(regsout)), uint64(unsafe.Sizeof(*regsout))}\n-\treturn ptrace(PTRACE_GETREGSET, pid, uintptr(addr), uintptr(unsafe.Pointer(&iovec)))\n+\treturn ptracePtr(PTRACE_GETREGSET, pid, uintptr(addr), unsafe.Pointer(&iovec))\n }\n \n // PtraceSetRegSetArm64 sets the registers used by arm64 binaries.\n func PtraceSetRegSetArm64(pid, addr int, regs *PtraceRegsArm64) error {\n \tiovec := Iovec{(*byte)(unsafe.Pointer(regs)), uint64(unsafe.Sizeof(*regs))}\n-\treturn ptrace(PTRACE_SETREGSET, pid, uintptr(addr), uintptr(unsafe.Pointer(&iovec)))\n+\treturn ptracePtr(PTRACE_SETREGSET, pid, uintptr(addr), unsafe.Pointer(&iovec))\n }"
    },
    {
      "sha": "0b5f7943054b2538352dac6b7fdf105c4f4ed899",
      "filename": "backend/vendor/golang.org/x/sys/unix/zptrace_mipsnn_linux.go",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_mipsnn_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_mipsnn_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_mipsnn_linux.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -21,12 +21,12 @@ type PtraceRegsMips struct {\n \n // PtraceGetRegsMips fetches the registers used by mips binaries.\n func PtraceGetRegsMips(pid int, regsout *PtraceRegsMips) error {\n-\treturn ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))\n+\treturn ptracePtr(PTRACE_GETREGS, pid, 0, unsafe.Pointer(regsout))\n }\n \n // PtraceSetRegsMips sets the registers used by mips binaries.\n func PtraceSetRegsMips(pid int, regs *PtraceRegsMips) error {\n-\treturn ptrace(PTRACE_SETREGS, pid, 0, uintptr(unsafe.Pointer(regs)))\n+\treturn ptracePtr(PTRACE_SETREGS, pid, 0, unsafe.Pointer(regs))\n }\n \n // PtraceRegsMips64 is the registers used by mips64 binaries.\n@@ -42,10 +42,10 @@ type PtraceRegsMips64 struct {\n \n // PtraceGetRegsMips64 fetches the registers used by mips64 binaries.\n func PtraceGetRegsMips64(pid int, regsout *PtraceRegsMips64) error {\n-\treturn ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))\n+\treturn ptracePtr(PTRACE_GETREGS, pid, 0, unsafe.Pointer(regsout))\n }\n \n // PtraceSetRegsMips64 sets the registers used by mips64 binaries.\n func PtraceSetRegsMips64(pid int, regs *PtraceRegsMips64) error {\n-\treturn ptrace(PTRACE_SETREGS, pid, 0, uintptr(unsafe.Pointer(regs)))\n+\treturn ptracePtr(PTRACE_SETREGS, pid, 0, unsafe.Pointer(regs))\n }"
    },
    {
      "sha": "2807f7e64602d2a5d2e63802eab1d54c5f92c0f3",
      "filename": "backend/vendor/golang.org/x/sys/unix/zptrace_mipsnnle_linux.go",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_mipsnnle_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_mipsnnle_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_mipsnnle_linux.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -21,12 +21,12 @@ type PtraceRegsMipsle struct {\n \n // PtraceGetRegsMipsle fetches the registers used by mipsle binaries.\n func PtraceGetRegsMipsle(pid int, regsout *PtraceRegsMipsle) error {\n-\treturn ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))\n+\treturn ptracePtr(PTRACE_GETREGS, pid, 0, unsafe.Pointer(regsout))\n }\n \n // PtraceSetRegsMipsle sets the registers used by mipsle binaries.\n func PtraceSetRegsMipsle(pid int, regs *PtraceRegsMipsle) error {\n-\treturn ptrace(PTRACE_SETREGS, pid, 0, uintptr(unsafe.Pointer(regs)))\n+\treturn ptracePtr(PTRACE_SETREGS, pid, 0, unsafe.Pointer(regs))\n }\n \n // PtraceRegsMips64le is the registers used by mips64le binaries.\n@@ -42,10 +42,10 @@ type PtraceRegsMips64le struct {\n \n // PtraceGetRegsMips64le fetches the registers used by mips64le binaries.\n func PtraceGetRegsMips64le(pid int, regsout *PtraceRegsMips64le) error {\n-\treturn ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))\n+\treturn ptracePtr(PTRACE_GETREGS, pid, 0, unsafe.Pointer(regsout))\n }\n \n // PtraceSetRegsMips64le sets the registers used by mips64le binaries.\n func PtraceSetRegsMips64le(pid int, regs *PtraceRegsMips64le) error {\n-\treturn ptrace(PTRACE_SETREGS, pid, 0, uintptr(unsafe.Pointer(regs)))\n+\treturn ptracePtr(PTRACE_SETREGS, pid, 0, unsafe.Pointer(regs))\n }"
    },
    {
      "sha": "281ea64e34acfb0f574788413a1d2d2083484ead",
      "filename": "backend/vendor/golang.org/x/sys/unix/zptrace_x86_linux.go",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_x86_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_x86_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzptrace_x86_linux.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -31,12 +31,12 @@ type PtraceRegs386 struct {\n \n // PtraceGetRegs386 fetches the registers used by 386 binaries.\n func PtraceGetRegs386(pid int, regsout *PtraceRegs386) error {\n-\treturn ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))\n+\treturn ptracePtr(PTRACE_GETREGS, pid, 0, unsafe.Pointer(regsout))\n }\n \n // PtraceSetRegs386 sets the registers used by 386 binaries.\n func PtraceSetRegs386(pid int, regs *PtraceRegs386) error {\n-\treturn ptrace(PTRACE_SETREGS, pid, 0, uintptr(unsafe.Pointer(regs)))\n+\treturn ptracePtr(PTRACE_SETREGS, pid, 0, unsafe.Pointer(regs))\n }\n \n // PtraceRegsAmd64 is the registers used by amd64 binaries.\n@@ -72,10 +72,10 @@ type PtraceRegsAmd64 struct {\n \n // PtraceGetRegsAmd64 fetches the registers used by amd64 binaries.\n func PtraceGetRegsAmd64(pid int, regsout *PtraceRegsAmd64) error {\n-\treturn ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))\n+\treturn ptracePtr(PTRACE_GETREGS, pid, 0, unsafe.Pointer(regsout))\n }\n \n // PtraceSetRegsAmd64 sets the registers used by amd64 binaries.\n func PtraceSetRegsAmd64(pid int, regs *PtraceRegsAmd64) error {\n-\treturn ptrace(PTRACE_SETREGS, pid, 0, uintptr(unsafe.Pointer(regs)))\n+\treturn ptracePtr(PTRACE_SETREGS, pid, 0, unsafe.Pointer(regs))\n }"
    },
    {
      "sha": "ef9dcd1bef8c9600b70893029fb1d5ef2f421f0c",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_aix_ppc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_aix_ppc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_aix_ppc.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -223,6 +223,16 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\tr0, er := C.ioctl(C.int(fd), C.int(req), C.uintptr_t(uintptr(arg)))\n+\tif r0 == -1 && er != nil {\n+\t\terr = er\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func FcntlInt(fd uintptr, cmd int, arg int) (r int, err error) {\n \tr0, er := C.fcntl(C.uintptr_t(fd), C.int(cmd), C.uintptr_t(arg))\n \tr = int(r0)"
    },
    {
      "sha": "f86a94592348ba65e2ace90fa583a5ae47fc09df",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_aix_ppc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_aix_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_aix_ppc64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -103,6 +103,16 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, e1 := callioctl_ptr(fd, int(req), arg)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func FcntlInt(fd uintptr, cmd int, arg int) (r int, err error) {\n \tr0, e1 := callfcntl(fd, cmd, uintptr(arg))\n \tr = int(r0)"
    },
    {
      "sha": "d32a84cae27c1c6629a7084f7a0d35850fe9bd40",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gc.go",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_aix_ppc64_gc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_aix_ppc64_gc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_aix_ppc64_gc.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -423,6 +423,13 @@ func callioctl(fd int, req int, arg uintptr) (r1 uintptr, e1 Errno) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func callioctl_ptr(fd int, req int, arg unsafe.Pointer) (r1 uintptr, e1 Errno) {\n+\tr1, _, e1 = syscall6(uintptr(unsafe.Pointer(&libc_ioctl)), 3, uintptr(fd), uintptr(req), uintptr(arg), 0, 0, 0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func callfcntl(fd uintptr, cmd int, arg uintptr) (r1 uintptr, e1 Errno) {\n \tr1, _, e1 = syscall6(uintptr(unsafe.Pointer(&libc_fcntl)), 3, fd, uintptr(cmd), arg, 0, 0, 0)\n \treturn"
    },
    {
      "sha": "d7d8baf819c0702fefb7f4038ac570e493e9cfbd",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gccgo.go",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_aix_ppc64_gccgo.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_aix_ppc64_gccgo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_aix_ppc64_gccgo.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -191,6 +191,14 @@ func callioctl(fd int, req int, arg uintptr) (r1 uintptr, e1 Errno) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func callioctl_ptr(fd int, req int, arg unsafe.Pointer) (r1 uintptr, e1 Errno) {\n+\tr1 = uintptr(C.ioctl(C.int(fd), C.int(req), C.uintptr_t(uintptr(arg))))\n+\te1 = syscall.GetErrno()\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func callfcntl(fd uintptr, cmd int, arg uintptr) (r1 uintptr, e1 Errno) {\n \tr1 = uintptr(C.fcntl(C.uintptr_t(fd), C.int(cmd), C.uintptr_t(arg)))\n \te1 = syscall.GetErrno()"
    },
    {
      "sha": "a29ffdd566db12a0b09add3087d90fa3c5afc4fb",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_darwin_amd64.go",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_amd64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -725,6 +725,14 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \treturn\n }\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := syscall_syscall(libc_ioctl_trampoline_addr, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n var libc_ioctl_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_ioctl ioctl \"/usr/lib/libSystem.B.dylib\"\n@@ -2502,6 +2510,14 @@ func ptrace1(request int, pid int, addr uintptr, data uintptr) (err error) {\n \treturn\n }\n \n+func ptrace1Ptr(request int, pid int, addr uintptr, data unsafe.Pointer) (err error) {\n+\t_, _, e1 := syscall_syscall6(libc_ptrace_trampoline_addr, uintptr(request), uintptr(pid), addr, uintptr(data), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n var libc_ptrace_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_ptrace ptrace \"/usr/lib/libSystem.B.dylib\""
    },
    {
      "sha": "2fd4590bb78665f8266e12470aca23131311e536",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_darwin_arm64.go",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_arm64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -725,6 +725,14 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \treturn\n }\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := syscall_syscall(libc_ioctl_trampoline_addr, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n var libc_ioctl_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_ioctl ioctl \"/usr/lib/libSystem.B.dylib\"\n@@ -2502,6 +2510,14 @@ func ptrace1(request int, pid int, addr uintptr, data uintptr) (err error) {\n \treturn\n }\n \n+func ptrace1Ptr(request int, pid int, addr uintptr, data unsafe.Pointer) (err error) {\n+\t_, _, e1 := syscall_syscall6(libc_ptrace_trampoline_addr, uintptr(request), uintptr(pid), addr, uintptr(data), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n var libc_ptrace_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_ptrace ptrace \"/usr/lib/libSystem.B.dylib\""
    },
    {
      "sha": "3b85134707efdc555ec23c9ac13690385ec49c20",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_dragonfly_amd64.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_dragonfly_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_dragonfly_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_dragonfly_amd64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -436,6 +436,16 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := Syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(mib) > 0 {"
    },
    {
      "sha": "1129065624e58823a6ce7309538870f6b65cc019",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_freebsd_386.go",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_386.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_386.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -388,6 +388,16 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := Syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(mib) > 0 {\n@@ -414,6 +424,16 @@ func ptrace(request int, pid int, addr uintptr, data int) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ptracePtr(request int, pid int, addr unsafe.Pointer, data int) (err error) {\n+\t_, _, e1 := Syscall6(SYS_PTRACE, uintptr(request), uintptr(pid), uintptr(addr), uintptr(data), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Access(path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)"
    },
    {
      "sha": "55f5abfe599c3acbb671d6cd471db36d5f9fb087",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_freebsd_amd64.go",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_amd64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -388,6 +388,16 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := Syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(mib) > 0 {\n@@ -414,6 +424,16 @@ func ptrace(request int, pid int, addr uintptr, data int) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ptracePtr(request int, pid int, addr unsafe.Pointer, data int) (err error) {\n+\t_, _, e1 := Syscall6(SYS_PTRACE, uintptr(request), uintptr(pid), uintptr(addr), uintptr(data), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Access(path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)"
    },
    {
      "sha": "d39651c2b586bc327059ece5b24b5c6a987d277b",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_freebsd_arm.go",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_arm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_arm.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -388,6 +388,16 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := Syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(mib) > 0 {\n@@ -414,6 +424,16 @@ func ptrace(request int, pid int, addr uintptr, data int) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ptracePtr(request int, pid int, addr unsafe.Pointer, data int) (err error) {\n+\t_, _, e1 := Syscall6(SYS_PTRACE, uintptr(request), uintptr(pid), uintptr(addr), uintptr(data), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Access(path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)"
    },
    {
      "sha": "ddb7408680118353d315f5e436bd3d90698255cb",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_freebsd_arm64.go",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_arm64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -388,6 +388,16 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := Syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(mib) > 0 {\n@@ -414,6 +424,16 @@ func ptrace(request int, pid int, addr uintptr, data int) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ptracePtr(request int, pid int, addr unsafe.Pointer, data int) (err error) {\n+\t_, _, e1 := Syscall6(SYS_PTRACE, uintptr(request), uintptr(pid), uintptr(addr), uintptr(data), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Access(path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)"
    },
    {
      "sha": "09a53a616c0501da549290f2c577c74d7e8b35a7",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_freebsd_riscv64.go",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_riscv64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_freebsd_riscv64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -388,6 +388,16 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := Syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(mib) > 0 {\n@@ -414,6 +424,16 @@ func ptrace(request int, pid int, addr uintptr, data int) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ptracePtr(request int, pid int, addr unsafe.Pointer, data int) (err error) {\n+\t_, _, e1 := Syscall6(SYS_PTRACE, uintptr(request), uintptr(pid), uintptr(addr), uintptr(data), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Access(path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)"
    },
    {
      "sha": "430cb24de7e0eef30c0b9c70addddde88c8214ee",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux.go",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_linux.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -379,6 +379,16 @@ func ptrace(request int, pid int, addr uintptr, data uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ptracePtr(request int, pid int, addr uintptr, data unsafe.Pointer) (err error) {\n+\t_, _, e1 := Syscall6(SYS_PTRACE, uintptr(request), uintptr(pid), uintptr(addr), uintptr(data), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func reboot(magic1 uint, magic2 uint, cmd int, arg string) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(arg)\n@@ -537,6 +547,17 @@ func Chroot(path string) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ClockAdjtime(clockid int32, buf *Timex) (state int, err error) {\n+\tr0, _, e1 := Syscall(SYS_CLOCK_ADJTIME, uintptr(clockid), uintptr(unsafe.Pointer(buf)), 0)\n+\tstate = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func ClockGetres(clockid int32, res *Timespec) (err error) {\n \t_, _, e1 := Syscall(SYS_CLOCK_GETRES, uintptr(clockid), uintptr(unsafe.Pointer(res)), 0)\n \tif e1 != 0 {"
    },
    {
      "sha": "8e1d9c8f66639364f105bc649c608d02e55ba3bb",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_netbsd_386.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_netbsd_386.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_netbsd_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_netbsd_386.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -405,6 +405,16 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := Syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(mib) > 0 {"
    },
    {
      "sha": "21c6950400e30818ac002fe8ca5f75e4794b87af",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_netbsd_amd64.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_netbsd_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_netbsd_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_netbsd_amd64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -405,6 +405,16 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := Syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(mib) > 0 {"
    },
    {
      "sha": "298168f90a17b2bd63074dc9245d625be2771b1b",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_netbsd_arm.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_netbsd_arm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_netbsd_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_netbsd_arm.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -405,6 +405,16 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := Syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(mib) > 0 {"
    },
    {
      "sha": "68b8bd492fec513d7169706c0852bc37f72f0d3f",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_netbsd_arm64.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_netbsd_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_netbsd_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_netbsd_arm64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -405,6 +405,16 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := Syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(mib) > 0 {"
    },
    {
      "sha": "0b0f910e1ab9cf57f7d83a3b1f9dfa0b500c1ff4",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_386.go",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_386.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_386.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -527,6 +527,14 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \treturn\n }\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := syscall_syscall(libc_ioctl_trampoline_addr, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n var libc_ioctl_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_ioctl ioctl \"libc.so\""
    },
    {
      "sha": "48ff5de75b55f5ce67eac21dbc199d6b82058e26",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_amd64.go",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_amd64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -527,6 +527,14 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \treturn\n }\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := syscall_syscall(libc_ioctl_trampoline_addr, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n var libc_ioctl_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_ioctl ioctl \"libc.so\""
    },
    {
      "sha": "2452a641dae7b98d1b8ac19e87bd661bdf01af01",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm.go",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_arm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_arm.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -527,6 +527,14 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \treturn\n }\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := syscall_syscall(libc_ioctl_trampoline_addr, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n var libc_ioctl_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_ioctl ioctl \"libc.so\""
    },
    {
      "sha": "5e35600a60c3cd6bbbca033890c8f4303e1aacc3",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm64.go",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_arm64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -527,6 +527,14 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \treturn\n }\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := syscall_syscall(libc_ioctl_trampoline_addr, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n var libc_ioctl_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_ioctl ioctl \"libc.so\""
    },
    {
      "sha": "b04cef1a198853b0325ef4aaca350d5ff05cdf0f",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_mips64.go",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_mips64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_mips64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_mips64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -527,6 +527,14 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \treturn\n }\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := syscall_syscall(libc_ioctl_trampoline_addr, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n var libc_ioctl_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_ioctl ioctl \"libc.so\""
    },
    {
      "sha": "47a07ee0c27489af54940fefe210a458c26539a0",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_ppc64.go",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_ppc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_ppc64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -527,6 +527,14 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \treturn\n }\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := syscall_syscall(libc_ioctl_trampoline_addr, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n var libc_ioctl_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_ioctl ioctl \"libc.so\""
    },
    {
      "sha": "573378fdb96f0773b74eb52078b54d344d90877e",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_riscv64.go",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_riscv64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_riscv64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -527,6 +527,14 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \treturn\n }\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := syscall_syscall(libc_ioctl_trampoline_addr, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n var libc_ioctl_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_ioctl ioctl \"libc.so\""
    },
    {
      "sha": "4873a1e5d3e9cd9acb51e633e14f55aec9338e12",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_solaris_amd64.go",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_solaris_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_solaris_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_solaris_amd64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -657,6 +657,17 @@ func ioctlRet(fd int, req uint, arg uintptr) (ret int, err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtrRet(fd int, req uint, arg unsafe.Pointer) (ret int, err error) {\n+\tr0, _, e1 := sysvicall6(uintptr(unsafe.Pointer(&procioctl)), 3, uintptr(fd), uintptr(req), uintptr(arg), 0, 0, 0)\n+\tret = int(r0)\n+\tif e1 != 0 {\n+\t\terr = e1\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func poll(fds *PollFd, nfds int, timeout int) (n int, err error) {\n \tr0, _, e1 := sysvicall6(uintptr(unsafe.Pointer(&procpoll)), 3, uintptr(unsafe.Pointer(fds)), uintptr(nfds), uintptr(timeout), 0, 0, 0)\n \tn = int(r0)"
    },
    {
      "sha": "07bfe2ef9ad074e835d0ec69e461769b2c418cbd",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_zos_s390x.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_zos_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_zos_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_zos_s390x.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -267,6 +267,16 @@ func ioctl(fd int, req uint, arg uintptr) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ioctlPtr(fd int, req uint, arg unsafe.Pointer) (err error) {\n+\t_, _, e1 := syscall_syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Access(path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)"
    },
    {
      "sha": "29dc483378aeb1d0b70a5343c0aa013ee81b69d7",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_freebsd_386.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_386.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_386.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -362,7 +362,7 @@ type FpExtendedPrecision struct{}\n type PtraceIoDesc struct {\n \tOp   int32\n \tOffs uintptr\n-\tAddr uintptr\n+\tAddr *byte\n \tLen  uint32\n }\n "
    },
    {
      "sha": "0a89b28906a676a72a9c88f6550c903cb9214ad6",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_freebsd_amd64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_amd64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -367,7 +367,7 @@ type FpExtendedPrecision struct{}\n type PtraceIoDesc struct {\n \tOp   int32\n \tOffs uintptr\n-\tAddr uintptr\n+\tAddr *byte\n \tLen  uint64\n }\n "
    },
    {
      "sha": "c8666bb15288b3a615de4af596a3cbb96aa1d189",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_freebsd_arm.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_arm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_arm.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -350,7 +350,7 @@ type FpExtendedPrecision struct {\n type PtraceIoDesc struct {\n \tOp   int32\n \tOffs uintptr\n-\tAddr uintptr\n+\tAddr *byte\n \tLen  uint32\n }\n "
    },
    {
      "sha": "88fb48a887b105f262ccbb3dd870d00d065617c7",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_freebsd_arm64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_arm64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -347,7 +347,7 @@ type FpExtendedPrecision struct{}\n type PtraceIoDesc struct {\n \tOp   int32\n \tOffs uintptr\n-\tAddr uintptr\n+\tAddr *byte\n \tLen  uint64\n }\n "
    },
    {
      "sha": "698dc975e92be2c1f49cbe1d1175d55410d2dd62",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_freebsd_riscv64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_riscv64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_freebsd_riscv64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -348,7 +348,7 @@ type FpExtendedPrecision struct{}\n type PtraceIoDesc struct {\n \tOp   int32\n \tOffs uintptr\n-\tAddr uintptr\n+\tAddr *byte\n \tLen  uint64\n }\n "
    },
    {
      "sha": "ca84727cfe804a92888b02d55de324b271525253",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux.go",
      "status": "modified",
      "additions": 276,
      "deletions": 73,
      "changes": 349,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -29,6 +29,41 @@ type Itimerval struct {\n \tValue    Timeval\n }\n \n+const (\n+\tADJ_OFFSET            = 0x1\n+\tADJ_FREQUENCY         = 0x2\n+\tADJ_MAXERROR          = 0x4\n+\tADJ_ESTERROR          = 0x8\n+\tADJ_STATUS            = 0x10\n+\tADJ_TIMECONST         = 0x20\n+\tADJ_TAI               = 0x80\n+\tADJ_SETOFFSET         = 0x100\n+\tADJ_MICRO             = 0x1000\n+\tADJ_NANO              = 0x2000\n+\tADJ_TICK              = 0x4000\n+\tADJ_OFFSET_SINGLESHOT = 0x8001\n+\tADJ_OFFSET_SS_READ    = 0xa001\n+)\n+\n+const (\n+\tSTA_PLL       = 0x1\n+\tSTA_PPSFREQ   = 0x2\n+\tSTA_PPSTIME   = 0x4\n+\tSTA_FLL       = 0x8\n+\tSTA_INS       = 0x10\n+\tSTA_DEL       = 0x20\n+\tSTA_UNSYNC    = 0x40\n+\tSTA_FREQHOLD  = 0x80\n+\tSTA_PPSSIGNAL = 0x100\n+\tSTA_PPSJITTER = 0x200\n+\tSTA_PPSWANDER = 0x400\n+\tSTA_PPSERROR  = 0x800\n+\tSTA_CLOCKERR  = 0x1000\n+\tSTA_NANO      = 0x2000\n+\tSTA_MODE      = 0x4000\n+\tSTA_CLK       = 0x8000\n+)\n+\n const (\n \tTIME_OK    = 0x0\n \tTIME_INS   = 0x1\n@@ -53,29 +88,30 @@ type StatxTimestamp struct {\n }\n \n type Statx_t struct {\n-\tMask            uint32\n-\tBlksize         uint32\n-\tAttributes      uint64\n-\tNlink           uint32\n-\tUid             uint32\n-\tGid             uint32\n-\tMode            uint16\n-\t_               [1]uint16\n-\tIno             uint64\n-\tSize            uint64\n-\tBlocks          uint64\n-\tAttributes_mask uint64\n-\tAtime           StatxTimestamp\n-\tBtime           StatxTimestamp\n-\tCtime           StatxTimestamp\n-\tMtime           StatxTimestamp\n-\tRdev_major      uint32\n-\tRdev_minor      uint32\n-\tDev_major       uint32\n-\tDev_minor       uint32\n-\tMnt_id          uint64\n-\t_               uint64\n-\t_               [12]uint64\n+\tMask             uint32\n+\tBlksize          uint32\n+\tAttributes       uint64\n+\tNlink            uint32\n+\tUid              uint32\n+\tGid              uint32\n+\tMode             uint16\n+\t_                [1]uint16\n+\tIno              uint64\n+\tSize             uint64\n+\tBlocks           uint64\n+\tAttributes_mask  uint64\n+\tAtime            StatxTimestamp\n+\tBtime            StatxTimestamp\n+\tCtime            StatxTimestamp\n+\tMtime            StatxTimestamp\n+\tRdev_major       uint32\n+\tRdev_minor       uint32\n+\tDev_major        uint32\n+\tDev_minor        uint32\n+\tMnt_id           uint64\n+\tDio_mem_align    uint32\n+\tDio_offset_align uint32\n+\t_                [12]uint64\n }\n \n type Fsid struct {\n@@ -420,36 +456,60 @@ type Ucred struct {\n }\n \n type TCPInfo struct {\n-\tState          uint8\n-\tCa_state       uint8\n-\tRetransmits    uint8\n-\tProbes         uint8\n-\tBackoff        uint8\n-\tOptions        uint8\n-\tRto            uint32\n-\tAto            uint32\n-\tSnd_mss        uint32\n-\tRcv_mss        uint32\n-\tUnacked        uint32\n-\tSacked         uint32\n-\tLost           uint32\n-\tRetrans        uint32\n-\tFackets        uint32\n-\tLast_data_sent uint32\n-\tLast_ack_sent  uint32\n-\tLast_data_recv uint32\n-\tLast_ack_recv  uint32\n-\tPmtu           uint32\n-\tRcv_ssthresh   uint32\n-\tRtt            uint32\n-\tRttvar         uint32\n-\tSnd_ssthresh   uint32\n-\tSnd_cwnd       uint32\n-\tAdvmss         uint32\n-\tReordering     uint32\n-\tRcv_rtt        uint32\n-\tRcv_space      uint32\n-\tTotal_retrans  uint32\n+\tState           uint8\n+\tCa_state        uint8\n+\tRetransmits     uint8\n+\tProbes          uint8\n+\tBackoff         uint8\n+\tOptions         uint8\n+\tRto             uint32\n+\tAto             uint32\n+\tSnd_mss         uint32\n+\tRcv_mss         uint32\n+\tUnacked         uint32\n+\tSacked          uint32\n+\tLost            uint32\n+\tRetrans         uint32\n+\tFackets         uint32\n+\tLast_data_sent  uint32\n+\tLast_ack_sent   uint32\n+\tLast_data_recv  uint32\n+\tLast_ack_recv   uint32\n+\tPmtu            uint32\n+\tRcv_ssthresh    uint32\n+\tRtt             uint32\n+\tRttvar          uint32\n+\tSnd_ssthresh    uint32\n+\tSnd_cwnd        uint32\n+\tAdvmss          uint32\n+\tReordering      uint32\n+\tRcv_rtt         uint32\n+\tRcv_space       uint32\n+\tTotal_retrans   uint32\n+\tPacing_rate     uint64\n+\tMax_pacing_rate uint64\n+\tBytes_acked     uint64\n+\tBytes_received  uint64\n+\tSegs_out        uint32\n+\tSegs_in         uint32\n+\tNotsent_bytes   uint32\n+\tMin_rtt         uint32\n+\tData_segs_in    uint32\n+\tData_segs_out   uint32\n+\tDelivery_rate   uint64\n+\tBusy_time       uint64\n+\tRwnd_limited    uint64\n+\tSndbuf_limited  uint64\n+\tDelivered       uint32\n+\tDelivered_ce    uint32\n+\tBytes_sent      uint64\n+\tBytes_retrans   uint64\n+\tDsack_dups      uint32\n+\tReord_seen      uint32\n+\tRcv_ooopack     uint32\n+\tSnd_wnd         uint32\n+\tRcv_wnd         uint32\n+\tRehash          uint32\n }\n \n type CanFilter struct {\n@@ -492,7 +552,7 @@ const (\n \tSizeofIPv6MTUInfo       = 0x20\n \tSizeofICMPv6Filter      = 0x20\n \tSizeofUcred             = 0xc\n-\tSizeofTCPInfo           = 0x68\n+\tSizeofTCPInfo           = 0xf0\n \tSizeofCanFilter         = 0x8\n \tSizeofTCPRepairOpt      = 0x8\n )\n@@ -1007,6 +1067,7 @@ const (\n \tPerfBitCommExec                      = CBitFieldMaskBit24\n \tPerfBitUseClockID                    = CBitFieldMaskBit25\n \tPerfBitContextSwitch                 = CBitFieldMaskBit26\n+\tPerfBitWriteBackward                 = CBitFieldMaskBit27\n )\n \n const (\n@@ -1099,7 +1160,8 @@ const (\n \tPERF_SAMPLE_BRANCH_NO_CYCLES_SHIFT    = 0xf\n \tPERF_SAMPLE_BRANCH_TYPE_SAVE_SHIFT    = 0x10\n \tPERF_SAMPLE_BRANCH_HW_INDEX_SHIFT     = 0x11\n-\tPERF_SAMPLE_BRANCH_MAX_SHIFT          = 0x12\n+\tPERF_SAMPLE_BRANCH_PRIV_SAVE_SHIFT    = 0x12\n+\tPERF_SAMPLE_BRANCH_MAX_SHIFT          = 0x13\n \tPERF_SAMPLE_BRANCH_USER               = 0x1\n \tPERF_SAMPLE_BRANCH_KERNEL             = 0x2\n \tPERF_SAMPLE_BRANCH_HV                 = 0x4\n@@ -1118,7 +1180,8 @@ const (\n \tPERF_SAMPLE_BRANCH_NO_CYCLES          = 0x8000\n \tPERF_SAMPLE_BRANCH_TYPE_SAVE          = 0x10000\n \tPERF_SAMPLE_BRANCH_HW_INDEX           = 0x20000\n-\tPERF_SAMPLE_BRANCH_MAX                = 0x40000\n+\tPERF_SAMPLE_BRANCH_PRIV_SAVE          = 0x40000\n+\tPERF_SAMPLE_BRANCH_MAX                = 0x80000\n \tPERF_BR_UNKNOWN                       = 0x0\n \tPERF_BR_COND                          = 0x1\n \tPERF_BR_UNCOND                        = 0x2\n@@ -1132,7 +1195,10 @@ const (\n \tPERF_BR_COND_RET                      = 0xa\n \tPERF_BR_ERET                          = 0xb\n \tPERF_BR_IRQ                           = 0xc\n-\tPERF_BR_MAX                           = 0xd\n+\tPERF_BR_SERROR                        = 0xd\n+\tPERF_BR_NO_TX                         = 0xe\n+\tPERF_BR_EXTEND_ABI                    = 0xf\n+\tPERF_BR_MAX                           = 0x10\n \tPERF_SAMPLE_REGS_ABI_NONE             = 0x0\n \tPERF_SAMPLE_REGS_ABI_32               = 0x1\n \tPERF_SAMPLE_REGS_ABI_64               = 0x2\n@@ -1151,7 +1217,8 @@ const (\n \tPERF_FORMAT_TOTAL_TIME_RUNNING        = 0x2\n \tPERF_FORMAT_ID                        = 0x4\n \tPERF_FORMAT_GROUP                     = 0x8\n-\tPERF_FORMAT_MAX                       = 0x10\n+\tPERF_FORMAT_LOST                      = 0x10\n+\tPERF_FORMAT_MAX                       = 0x20\n \tPERF_IOC_FLAG_GROUP                   = 0x1\n \tPERF_RECORD_MMAP                      = 0x1\n \tPERF_RECORD_LOST                      = 0x2\n@@ -1197,7 +1264,7 @@ type TCPMD5Sig struct {\n \tFlags     uint8\n \tPrefixlen uint8\n \tKeylen    uint16\n-\t_         uint32\n+\tIfindex   int32\n \tKey       [80]uint8\n }\n \n@@ -1897,7 +1964,11 @@ const (\n \tNFT_MSG_GETOBJ                    = 0x13\n \tNFT_MSG_DELOBJ                    = 0x14\n \tNFT_MSG_GETOBJ_RESET              = 0x15\n-\tNFT_MSG_MAX                       = 0x19\n+\tNFT_MSG_NEWFLOWTABLE              = 0x16\n+\tNFT_MSG_GETFLOWTABLE              = 0x17\n+\tNFT_MSG_DELFLOWTABLE              = 0x18\n+\tNFT_MSG_GETRULE_RESET             = 0x19\n+\tNFT_MSG_MAX                       = 0x1a\n \tNFTA_LIST_UNSPEC                  = 0x0\n \tNFTA_LIST_ELEM                    = 0x1\n \tNFTA_HOOK_UNSPEC                  = 0x0\n@@ -2401,9 +2472,11 @@ const (\n \tSOF_TIMESTAMPING_OPT_STATS    = 0x1000\n \tSOF_TIMESTAMPING_OPT_PKTINFO  = 0x2000\n \tSOF_TIMESTAMPING_OPT_TX_SWHW  = 0x4000\n+\tSOF_TIMESTAMPING_BIND_PHC     = 0x8000\n+\tSOF_TIMESTAMPING_OPT_ID_TCP   = 0x10000\n \n-\tSOF_TIMESTAMPING_LAST = 0x8000\n-\tSOF_TIMESTAMPING_MASK = 0xffff\n+\tSOF_TIMESTAMPING_LAST = 0x10000\n+\tSOF_TIMESTAMPING_MASK = 0x1ffff\n \n \tSCM_TSTAMP_SND   = 0x0\n \tSCM_TSTAMP_SCHED = 0x1\n@@ -2979,7 +3052,16 @@ const (\n \tDEVLINK_CMD_TRAP_POLICER_NEW                       = 0x47\n \tDEVLINK_CMD_TRAP_POLICER_DEL                       = 0x48\n \tDEVLINK_CMD_HEALTH_REPORTER_TEST                   = 0x49\n-\tDEVLINK_CMD_MAX                                    = 0x51\n+\tDEVLINK_CMD_RATE_GET                               = 0x4a\n+\tDEVLINK_CMD_RATE_SET                               = 0x4b\n+\tDEVLINK_CMD_RATE_NEW                               = 0x4c\n+\tDEVLINK_CMD_RATE_DEL                               = 0x4d\n+\tDEVLINK_CMD_LINECARD_GET                           = 0x4e\n+\tDEVLINK_CMD_LINECARD_SET                           = 0x4f\n+\tDEVLINK_CMD_LINECARD_NEW                           = 0x50\n+\tDEVLINK_CMD_LINECARD_DEL                           = 0x51\n+\tDEVLINK_CMD_SELFTESTS_GET                          = 0x52\n+\tDEVLINK_CMD_MAX                                    = 0x53\n \tDEVLINK_PORT_TYPE_NOTSET                           = 0x0\n \tDEVLINK_PORT_TYPE_AUTO                             = 0x1\n \tDEVLINK_PORT_TYPE_ETH                              = 0x2\n@@ -3208,7 +3290,13 @@ const (\n \tDEVLINK_ATTR_RATE_NODE_NAME                        = 0xa8\n \tDEVLINK_ATTR_RATE_PARENT_NODE_NAME                 = 0xa9\n \tDEVLINK_ATTR_REGION_MAX_SNAPSHOTS                  = 0xaa\n-\tDEVLINK_ATTR_MAX                                   = 0xae\n+\tDEVLINK_ATTR_LINECARD_INDEX                        = 0xab\n+\tDEVLINK_ATTR_LINECARD_STATE                        = 0xac\n+\tDEVLINK_ATTR_LINECARD_TYPE                         = 0xad\n+\tDEVLINK_ATTR_LINECARD_SUPPORTED_TYPES              = 0xae\n+\tDEVLINK_ATTR_NESTED_DEVLINK                        = 0xaf\n+\tDEVLINK_ATTR_SELFTESTS                             = 0xb0\n+\tDEVLINK_ATTR_MAX                                   = 0xb3\n \tDEVLINK_DPIPE_FIELD_MAPPING_TYPE_NONE              = 0x0\n \tDEVLINK_DPIPE_FIELD_MAPPING_TYPE_IFINDEX           = 0x1\n \tDEVLINK_DPIPE_MATCH_TYPE_FIELD_EXACT               = 0x0\n@@ -3224,7 +3312,8 @@ const (\n \tDEVLINK_PORT_FUNCTION_ATTR_HW_ADDR                 = 0x1\n \tDEVLINK_PORT_FN_ATTR_STATE                         = 0x2\n \tDEVLINK_PORT_FN_ATTR_OPSTATE                       = 0x3\n-\tDEVLINK_PORT_FUNCTION_ATTR_MAX                     = 0x3\n+\tDEVLINK_PORT_FN_ATTR_CAPS                          = 0x4\n+\tDEVLINK_PORT_FUNCTION_ATTR_MAX                     = 0x4\n )\n \n type FsverityDigest struct {\n@@ -3317,7 +3406,8 @@ const (\n \tLWTUNNEL_ENCAP_SEG6_LOCAL = 0x7\n \tLWTUNNEL_ENCAP_RPL        = 0x8\n \tLWTUNNEL_ENCAP_IOAM6      = 0x9\n-\tLWTUNNEL_ENCAP_MAX        = 0x9\n+\tLWTUNNEL_ENCAP_XFRM       = 0xa\n+\tLWTUNNEL_ENCAP_MAX        = 0xa\n \n \tMPLS_IPTUNNEL_UNSPEC = 0x0\n \tMPLS_IPTUNNEL_DST    = 0x1\n@@ -3512,7 +3602,10 @@ const (\n \tETHTOOL_MSG_PHC_VCLOCKS_GET               = 0x21\n \tETHTOOL_MSG_MODULE_GET                    = 0x22\n \tETHTOOL_MSG_MODULE_SET                    = 0x23\n-\tETHTOOL_MSG_USER_MAX                      = 0x23\n+\tETHTOOL_MSG_PSE_GET                       = 0x24\n+\tETHTOOL_MSG_PSE_SET                       = 0x25\n+\tETHTOOL_MSG_RSS_GET                       = 0x26\n+\tETHTOOL_MSG_USER_MAX                      = 0x26\n \tETHTOOL_MSG_KERNEL_NONE                   = 0x0\n \tETHTOOL_MSG_STRSET_GET_REPLY              = 0x1\n \tETHTOOL_MSG_LINKINFO_GET_REPLY            = 0x2\n@@ -3550,7 +3643,9 @@ const (\n \tETHTOOL_MSG_PHC_VCLOCKS_GET_REPLY         = 0x22\n \tETHTOOL_MSG_MODULE_GET_REPLY              = 0x23\n \tETHTOOL_MSG_MODULE_NTF                    = 0x24\n-\tETHTOOL_MSG_KERNEL_MAX                    = 0x24\n+\tETHTOOL_MSG_PSE_GET_REPLY                 = 0x25\n+\tETHTOOL_MSG_RSS_GET_REPLY                 = 0x26\n+\tETHTOOL_MSG_KERNEL_MAX                    = 0x26\n \tETHTOOL_A_HEADER_UNSPEC                   = 0x0\n \tETHTOOL_A_HEADER_DEV_INDEX                = 0x1\n \tETHTOOL_A_HEADER_DEV_NAME                 = 0x2\n@@ -3609,15 +3704,17 @@ const (\n \tETHTOOL_A_LINKMODES_MASTER_SLAVE_CFG      = 0x7\n \tETHTOOL_A_LINKMODES_MASTER_SLAVE_STATE    = 0x8\n \tETHTOOL_A_LINKMODES_LANES                 = 0x9\n-\tETHTOOL_A_LINKMODES_MAX                   = 0x9\n+\tETHTOOL_A_LINKMODES_RATE_MATCHING         = 0xa\n+\tETHTOOL_A_LINKMODES_MAX                   = 0xa\n \tETHTOOL_A_LINKSTATE_UNSPEC                = 0x0\n \tETHTOOL_A_LINKSTATE_HEADER                = 0x1\n \tETHTOOL_A_LINKSTATE_LINK                  = 0x2\n \tETHTOOL_A_LINKSTATE_SQI                   = 0x3\n \tETHTOOL_A_LINKSTATE_SQI_MAX               = 0x4\n \tETHTOOL_A_LINKSTATE_EXT_STATE             = 0x5\n \tETHTOOL_A_LINKSTATE_EXT_SUBSTATE          = 0x6\n-\tETHTOOL_A_LINKSTATE_MAX                   = 0x6\n+\tETHTOOL_A_LINKSTATE_EXT_DOWN_CNT          = 0x7\n+\tETHTOOL_A_LINKSTATE_MAX                   = 0x7\n \tETHTOOL_A_DEBUG_UNSPEC                    = 0x0\n \tETHTOOL_A_DEBUG_HEADER                    = 0x1\n \tETHTOOL_A_DEBUG_MSGMASK                   = 0x2\n@@ -4201,6 +4298,9 @@ const (\n \tNL80211_ACL_POLICY_DENY_UNLESS_LISTED                   = 0x1\n \tNL80211_AC_VI                                           = 0x1\n \tNL80211_AC_VO                                           = 0x0\n+\tNL80211_AP_SETTINGS_EXTERNAL_AUTH_SUPPORT               = 0x1\n+\tNL80211_AP_SETTINGS_SA_QUERY_OFFLOAD_SUPPORT            = 0x2\n+\tNL80211_AP_SME_SA_QUERY_OFFLOAD                         = 0x1\n \tNL80211_ATTR_4ADDR                                      = 0x53\n \tNL80211_ATTR_ACK                                        = 0x5c\n \tNL80211_ATTR_ACK_SIGNAL                                 = 0x107\n@@ -4209,6 +4309,7 @@ const (\n \tNL80211_ATTR_AIRTIME_WEIGHT                             = 0x112\n \tNL80211_ATTR_AKM_SUITES                                 = 0x4c\n \tNL80211_ATTR_AP_ISOLATE                                 = 0x60\n+\tNL80211_ATTR_AP_SETTINGS_FLAGS                          = 0x135\n \tNL80211_ATTR_AUTH_DATA                                  = 0x9c\n \tNL80211_ATTR_AUTH_TYPE                                  = 0x35\n \tNL80211_ATTR_BANDS                                      = 0xef\n@@ -4240,6 +4341,9 @@ const (\n \tNL80211_ATTR_COALESCE_RULE_DELAY                        = 0x1\n \tNL80211_ATTR_COALESCE_RULE_MAX                          = 0x3\n \tNL80211_ATTR_COALESCE_RULE_PKT_PATTERN                  = 0x3\n+\tNL80211_ATTR_COLOR_CHANGE_COLOR                         = 0x130\n+\tNL80211_ATTR_COLOR_CHANGE_COUNT                         = 0x12f\n+\tNL80211_ATTR_COLOR_CHANGE_ELEMS                         = 0x131\n \tNL80211_ATTR_CONN_FAILED_REASON                         = 0x9b\n \tNL80211_ATTR_CONTROL_PORT                               = 0x44\n \tNL80211_ATTR_CONTROL_PORT_ETHERTYPE                     = 0x66\n@@ -4266,13 +4370,16 @@ const (\n \tNL80211_ATTR_DEVICE_AP_SME                              = 0x8d\n \tNL80211_ATTR_DFS_CAC_TIME                               = 0x7\n \tNL80211_ATTR_DFS_REGION                                 = 0x92\n+\tNL80211_ATTR_DISABLE_EHT                                = 0x137\n \tNL80211_ATTR_DISABLE_HE                                 = 0x12d\n \tNL80211_ATTR_DISABLE_HT                                 = 0x93\n \tNL80211_ATTR_DISABLE_VHT                                = 0xaf\n \tNL80211_ATTR_DISCONNECTED_BY_AP                         = 0x47\n \tNL80211_ATTR_DONT_WAIT_FOR_ACK                          = 0x8e\n \tNL80211_ATTR_DTIM_PERIOD                                = 0xd\n \tNL80211_ATTR_DURATION                                   = 0x57\n+\tNL80211_ATTR_EHT_CAPABILITY                             = 0x136\n+\tNL80211_ATTR_EML_CAPABILITY                             = 0x13d\n \tNL80211_ATTR_EXT_CAPA                                   = 0xa9\n \tNL80211_ATTR_EXT_CAPA_MASK                              = 0xaa\n \tNL80211_ATTR_EXTERNAL_AUTH_ACTION                       = 0x104\n@@ -4337,10 +4444,11 @@ const (\n \tNL80211_ATTR_MAC_HINT                                   = 0xc8\n \tNL80211_ATTR_MAC_MASK                                   = 0xd7\n \tNL80211_ATTR_MAX_AP_ASSOC_STA                           = 0xca\n-\tNL80211_ATTR_MAX                                        = 0x137\n+\tNL80211_ATTR_MAX                                        = 0x141\n \tNL80211_ATTR_MAX_CRIT_PROT_DURATION                     = 0xb4\n \tNL80211_ATTR_MAX_CSA_COUNTERS                           = 0xce\n \tNL80211_ATTR_MAX_MATCH_SETS                             = 0x85\n+\tNL80211_ATTR_MAX_NUM_AKM_SUITES                         = 0x13c\n \tNL80211_ATTR_MAX_NUM_PMKIDS                             = 0x56\n \tNL80211_ATTR_MAX_NUM_SCAN_SSIDS                         = 0x2b\n \tNL80211_ATTR_MAX_NUM_SCHED_SCAN_PLANS                   = 0xde\n@@ -4350,6 +4458,8 @@ const (\n \tNL80211_ATTR_MAX_SCAN_PLAN_INTERVAL                     = 0xdf\n \tNL80211_ATTR_MAX_SCAN_PLAN_ITERATIONS                   = 0xe0\n \tNL80211_ATTR_MAX_SCHED_SCAN_IE_LEN                      = 0x7c\n+\tNL80211_ATTR_MBSSID_CONFIG                              = 0x132\n+\tNL80211_ATTR_MBSSID_ELEMS                               = 0x133\n \tNL80211_ATTR_MCAST_RATE                                 = 0x6b\n \tNL80211_ATTR_MDID                                       = 0xb1\n \tNL80211_ATTR_MEASUREMENT_DURATION                       = 0xeb\n@@ -4359,6 +4469,11 @@ const (\n \tNL80211_ATTR_MESH_PEER_AID                              = 0xed\n \tNL80211_ATTR_MESH_SETUP                                 = 0x70\n \tNL80211_ATTR_MGMT_SUBTYPE                               = 0x29\n+\tNL80211_ATTR_MLD_ADDR                                   = 0x13a\n+\tNL80211_ATTR_MLD_CAPA_AND_OPS                           = 0x13e\n+\tNL80211_ATTR_MLO_LINK_ID                                = 0x139\n+\tNL80211_ATTR_MLO_LINKS                                  = 0x138\n+\tNL80211_ATTR_MLO_SUPPORT                                = 0x13b\n \tNL80211_ATTR_MNTR_FLAGS                                 = 0x17\n \tNL80211_ATTR_MPATH_INFO                                 = 0x1b\n \tNL80211_ATTR_MPATH_NEXT_HOP                             = 0x1a\n@@ -4371,6 +4486,7 @@ const (\n \tNL80211_ATTR_NETNS_FD                                   = 0xdb\n \tNL80211_ATTR_NOACK_MAP                                  = 0x95\n \tNL80211_ATTR_NSS                                        = 0x106\n+\tNL80211_ATTR_OBSS_COLOR_BITMAP                          = 0x12e\n \tNL80211_ATTR_OFFCHANNEL_TX_OK                           = 0x6c\n \tNL80211_ATTR_OPER_CLASS                                 = 0xd6\n \tNL80211_ATTR_OPMODE_NOTIF                               = 0xc2\n@@ -4397,6 +4513,7 @@ const (\n \tNL80211_ATTR_PROTOCOL_FEATURES                          = 0xad\n \tNL80211_ATTR_PS_STATE                                   = 0x5d\n \tNL80211_ATTR_QOS_MAP                                    = 0xc7\n+\tNL80211_ATTR_RADAR_BACKGROUND                           = 0x134\n \tNL80211_ATTR_RADAR_EVENT                                = 0xa8\n \tNL80211_ATTR_REASON_CODE                                = 0x36\n \tNL80211_ATTR_RECEIVE_MULTICAST                          = 0x121\n@@ -4412,6 +4529,7 @@ const (\n \tNL80211_ATTR_RESP_IE                                    = 0x4e\n \tNL80211_ATTR_ROAM_SUPPORT                               = 0x83\n \tNL80211_ATTR_RX_FRAME_TYPES                             = 0x64\n+\tNL80211_ATTR_RX_HW_TIMESTAMP                            = 0x140\n \tNL80211_ATTR_RXMGMT_FLAGS                               = 0xbc\n \tNL80211_ATTR_RX_SIGNAL_DBM                              = 0x97\n \tNL80211_ATTR_S1G_CAPABILITY                             = 0x128\n@@ -4469,6 +4587,7 @@ const (\n \tNL80211_ATTR_SUPPORT_MESH_AUTH                          = 0x73\n \tNL80211_ATTR_SURVEY_INFO                                = 0x54\n \tNL80211_ATTR_SURVEY_RADIO_STATS                         = 0xda\n+\tNL80211_ATTR_TD_BITMAP                                  = 0x141\n \tNL80211_ATTR_TDLS_ACTION                                = 0x88\n \tNL80211_ATTR_TDLS_DIALOG_TOKEN                          = 0x89\n \tNL80211_ATTR_TDLS_EXTERNAL_SETUP                        = 0x8c\n@@ -4484,6 +4603,7 @@ const (\n \tNL80211_ATTR_TSID                                       = 0xd2\n \tNL80211_ATTR_TWT_RESPONDER                              = 0x116\n \tNL80211_ATTR_TX_FRAME_TYPES                             = 0x63\n+\tNL80211_ATTR_TX_HW_TIMESTAMP                            = 0x13f\n \tNL80211_ATTR_TX_NO_CCK_RATE                             = 0x87\n \tNL80211_ATTR_TXQ_LIMIT                                  = 0x10a\n \tNL80211_ATTR_TXQ_MEMORY_LIMIT                           = 0x10b\n@@ -4557,13 +4677,19 @@ const (\n \tNL80211_BAND_ATTR_RATES                                 = 0x2\n \tNL80211_BAND_ATTR_VHT_CAPA                              = 0x8\n \tNL80211_BAND_ATTR_VHT_MCS_SET                           = 0x7\n+\tNL80211_BAND_IFTYPE_ATTR_EHT_CAP_MAC                    = 0x8\n+\tNL80211_BAND_IFTYPE_ATTR_EHT_CAP_MCS_SET                = 0xa\n+\tNL80211_BAND_IFTYPE_ATTR_EHT_CAP_PHY                    = 0x9\n+\tNL80211_BAND_IFTYPE_ATTR_EHT_CAP_PPE                    = 0xb\n \tNL80211_BAND_IFTYPE_ATTR_HE_6GHZ_CAPA                   = 0x6\n \tNL80211_BAND_IFTYPE_ATTR_HE_CAP_MAC                     = 0x2\n \tNL80211_BAND_IFTYPE_ATTR_HE_CAP_MCS_SET                 = 0x4\n \tNL80211_BAND_IFTYPE_ATTR_HE_CAP_PHY                     = 0x3\n \tNL80211_BAND_IFTYPE_ATTR_HE_CAP_PPE                     = 0x5\n \tNL80211_BAND_IFTYPE_ATTR_IFTYPES                        = 0x1\n \tNL80211_BAND_IFTYPE_ATTR_MAX                            = 0xb\n+\tNL80211_BAND_IFTYPE_ATTR_VENDOR_ELEMS                   = 0x7\n+\tNL80211_BAND_LC                                         = 0x5\n \tNL80211_BAND_S1GHZ                                      = 0x4\n \tNL80211_BITRATE_ATTR_2GHZ_SHORTPREAMBLE                 = 0x2\n \tNL80211_BITRATE_ATTR_MAX                                = 0x2\n@@ -4584,7 +4710,9 @@ const (\n \tNL80211_BSS_FREQUENCY_OFFSET                            = 0x14\n \tNL80211_BSS_INFORMATION_ELEMENTS                        = 0x6\n \tNL80211_BSS_LAST_SEEN_BOOTTIME                          = 0xf\n-\tNL80211_BSS_MAX                                         = 0x14\n+\tNL80211_BSS_MAX                                         = 0x16\n+\tNL80211_BSS_MLD_ADDR                                    = 0x16\n+\tNL80211_BSS_MLO_LINK_ID                                 = 0x15\n \tNL80211_BSS_PAD                                         = 0x10\n \tNL80211_BSS_PARENT_BSSID                                = 0x12\n \tNL80211_BSS_PARENT_TSF                                  = 0x11\n@@ -4612,6 +4740,7 @@ const (\n \tNL80211_CHAN_WIDTH_20                                   = 0x1\n \tNL80211_CHAN_WIDTH_20_NOHT                              = 0x0\n \tNL80211_CHAN_WIDTH_2                                    = 0x9\n+\tNL80211_CHAN_WIDTH_320                                  = 0xd\n \tNL80211_CHAN_WIDTH_40                                   = 0x2\n \tNL80211_CHAN_WIDTH_4                                    = 0xa\n \tNL80211_CHAN_WIDTH_5                                    = 0x6\n@@ -4621,15 +4750,22 @@ const (\n \tNL80211_CMD_ABORT_SCAN                                  = 0x72\n \tNL80211_CMD_ACTION                                      = 0x3b\n \tNL80211_CMD_ACTION_TX_STATUS                            = 0x3c\n+\tNL80211_CMD_ADD_LINK                                    = 0x94\n+\tNL80211_CMD_ADD_LINK_STA                                = 0x96\n \tNL80211_CMD_ADD_NAN_FUNCTION                            = 0x75\n \tNL80211_CMD_ADD_TX_TS                                   = 0x69\n+\tNL80211_CMD_ASSOC_COMEBACK                              = 0x93\n \tNL80211_CMD_ASSOCIATE                                   = 0x26\n \tNL80211_CMD_AUTHENTICATE                                = 0x25\n \tNL80211_CMD_CANCEL_REMAIN_ON_CHANNEL                    = 0x38\n \tNL80211_CMD_CHANGE_NAN_CONFIG                           = 0x77\n \tNL80211_CMD_CHANNEL_SWITCH                              = 0x66\n \tNL80211_CMD_CH_SWITCH_NOTIFY                            = 0x58\n \tNL80211_CMD_CH_SWITCH_STARTED_NOTIFY                    = 0x6e\n+\tNL80211_CMD_COLOR_CHANGE_ABORTED                        = 0x90\n+\tNL80211_CMD_COLOR_CHANGE_COMPLETED                      = 0x91\n+\tNL80211_CMD_COLOR_CHANGE_REQUEST                        = 0x8e\n+\tNL80211_CMD_COLOR_CHANGE_STARTED                        = 0x8f\n \tNL80211_CMD_CONNECT                                     = 0x2e\n \tNL80211_CMD_CONN_FAILED                                 = 0x5b\n \tNL80211_CMD_CONTROL_PORT_FRAME                          = 0x81\n@@ -4678,8 +4814,9 @@ const (\n \tNL80211_CMD_LEAVE_IBSS                                  = 0x2c\n \tNL80211_CMD_LEAVE_MESH                                  = 0x45\n \tNL80211_CMD_LEAVE_OCB                                   = 0x6d\n-\tNL80211_CMD_MAX                                         = 0x93\n+\tNL80211_CMD_MAX                                         = 0x98\n \tNL80211_CMD_MICHAEL_MIC_FAILURE                         = 0x29\n+\tNL80211_CMD_MODIFY_LINK_STA                             = 0x97\n \tNL80211_CMD_NAN_MATCH                                   = 0x78\n \tNL80211_CMD_NEW_BEACON                                  = 0xf\n \tNL80211_CMD_NEW_INTERFACE                               = 0x7\n@@ -4692,6 +4829,7 @@ const (\n \tNL80211_CMD_NEW_WIPHY                                   = 0x3\n \tNL80211_CMD_NOTIFY_CQM                                  = 0x40\n \tNL80211_CMD_NOTIFY_RADAR                                = 0x86\n+\tNL80211_CMD_OBSS_COLOR_COLLISION                        = 0x8d\n \tNL80211_CMD_PEER_MEASUREMENT_COMPLETE                   = 0x85\n \tNL80211_CMD_PEER_MEASUREMENT_RESULT                     = 0x84\n \tNL80211_CMD_PEER_MEASUREMENT_START                      = 0x83\n@@ -4707,6 +4845,8 @@ const (\n \tNL80211_CMD_REGISTER_FRAME                              = 0x3a\n \tNL80211_CMD_RELOAD_REGDB                                = 0x7e\n \tNL80211_CMD_REMAIN_ON_CHANNEL                           = 0x37\n+\tNL80211_CMD_REMOVE_LINK                                 = 0x95\n+\tNL80211_CMD_REMOVE_LINK_STA                             = 0x98\n \tNL80211_CMD_REQ_SET_REG                                 = 0x1b\n \tNL80211_CMD_ROAM                                        = 0x2f\n \tNL80211_CMD_SCAN_ABORTED                                = 0x23\n@@ -4717,6 +4857,7 @@ const (\n \tNL80211_CMD_SET_CHANNEL                                 = 0x41\n \tNL80211_CMD_SET_COALESCE                                = 0x65\n \tNL80211_CMD_SET_CQM                                     = 0x3f\n+\tNL80211_CMD_SET_FILS_AAD                                = 0x92\n \tNL80211_CMD_SET_INTERFACE                               = 0x6\n \tNL80211_CMD_SET_KEY                                     = 0xa\n \tNL80211_CMD_SET_MAC_ACL                                 = 0x5d\n@@ -4791,6 +4932,8 @@ const (\n \tNL80211_EDMG_BW_CONFIG_MIN                              = 0x4\n \tNL80211_EDMG_CHANNELS_MAX                               = 0x3c\n \tNL80211_EDMG_CHANNELS_MIN                               = 0x1\n+\tNL80211_EHT_MAX_CAPABILITY_LEN                          = 0x33\n+\tNL80211_EHT_MIN_CAPABILITY_LEN                          = 0xd\n \tNL80211_EXTERNAL_AUTH_ABORT                             = 0x1\n \tNL80211_EXTERNAL_AUTH_START                             = 0x0\n \tNL80211_EXT_FEATURE_4WAY_HANDSHAKE_AP_PSK               = 0x32\n@@ -4807,6 +4950,7 @@ const (\n \tNL80211_EXT_FEATURE_BEACON_RATE_HT                      = 0x7\n \tNL80211_EXT_FEATURE_BEACON_RATE_LEGACY                  = 0x6\n \tNL80211_EXT_FEATURE_BEACON_RATE_VHT                     = 0x8\n+\tNL80211_EXT_FEATURE_BSS_COLOR                           = 0x3a\n \tNL80211_EXT_FEATURE_BSS_PARENT_TSF                      = 0x4\n \tNL80211_EXT_FEATURE_CAN_REPLACE_PTK0                    = 0x1f\n \tNL80211_EXT_FEATURE_CONTROL_PORT_NO_PREAUTH             = 0x2a\n@@ -4818,6 +4962,7 @@ const (\n \tNL80211_EXT_FEATURE_DFS_OFFLOAD                         = 0x19\n \tNL80211_EXT_FEATURE_ENABLE_FTM_RESPONDER                = 0x20\n \tNL80211_EXT_FEATURE_EXT_KEY_ID                          = 0x24\n+\tNL80211_EXT_FEATURE_FILS_CRYPTO_OFFLOAD                 = 0x3b\n \tNL80211_EXT_FEATURE_FILS_DISCOVERY                      = 0x34\n \tNL80211_EXT_FEATURE_FILS_MAX_CHANNEL_TIME               = 0x11\n \tNL80211_EXT_FEATURE_FILS_SK_OFFLOAD                     = 0xe\n@@ -4833,8 +4978,10 @@ const (\n \tNL80211_EXT_FEATURE_OCE_PROBE_REQ_DEFERRAL_SUPPRESSION  = 0x14\n \tNL80211_EXT_FEATURE_OCE_PROBE_REQ_HIGH_TX_RATE          = 0x13\n \tNL80211_EXT_FEATURE_OPERATING_CHANNEL_VALIDATION        = 0x31\n+\tNL80211_EXT_FEATURE_POWERED_ADDR_CHANGE                 = 0x3d\n \tNL80211_EXT_FEATURE_PROTECTED_TWT                       = 0x2b\n \tNL80211_EXT_FEATURE_PROT_RANGE_NEGO_AND_MEASURE         = 0x39\n+\tNL80211_EXT_FEATURE_RADAR_BACKGROUND                    = 0x3c\n \tNL80211_EXT_FEATURE_RRM                                 = 0x1\n \tNL80211_EXT_FEATURE_SAE_OFFLOAD_AP                      = 0x33\n \tNL80211_EXT_FEATURE_SAE_OFFLOAD                         = 0x26\n@@ -4906,7 +5053,9 @@ const (\n \tNL80211_FREQUENCY_ATTR_NO_10MHZ                         = 0x11\n \tNL80211_FREQUENCY_ATTR_NO_160MHZ                        = 0xc\n \tNL80211_FREQUENCY_ATTR_NO_20MHZ                         = 0x10\n+\tNL80211_FREQUENCY_ATTR_NO_320MHZ                        = 0x1a\n \tNL80211_FREQUENCY_ATTR_NO_80MHZ                         = 0xb\n+\tNL80211_FREQUENCY_ATTR_NO_EHT                           = 0x1b\n \tNL80211_FREQUENCY_ATTR_NO_HE                            = 0x13\n \tNL80211_FREQUENCY_ATTR_NO_HT40_MINUS                    = 0x9\n \tNL80211_FREQUENCY_ATTR_NO_HT40_PLUS                     = 0xa\n@@ -5006,6 +5155,12 @@ const (\n \tNL80211_MAX_SUPP_HT_RATES                               = 0x4d\n \tNL80211_MAX_SUPP_RATES                                  = 0x20\n \tNL80211_MAX_SUPP_REG_RULES                              = 0x80\n+\tNL80211_MBSSID_CONFIG_ATTR_EMA                          = 0x5\n+\tNL80211_MBSSID_CONFIG_ATTR_INDEX                        = 0x3\n+\tNL80211_MBSSID_CONFIG_ATTR_MAX                          = 0x5\n+\tNL80211_MBSSID_CONFIG_ATTR_MAX_EMA_PROFILE_PERIODICITY  = 0x2\n+\tNL80211_MBSSID_CONFIG_ATTR_MAX_INTERFACES               = 0x1\n+\tNL80211_MBSSID_CONFIG_ATTR_TX_IFINDEX                   = 0x4\n \tNL80211_MESHCONF_ATTR_MAX                               = 0x1f\n \tNL80211_MESHCONF_AUTO_OPEN_PLINKS                       = 0x7\n \tNL80211_MESHCONF_AWAKE_WINDOW                           = 0x1b\n@@ -5168,6 +5323,7 @@ const (\n \tNL80211_PMSR_FTM_FAILURE_UNSPECIFIED                    = 0x0\n \tNL80211_PMSR_FTM_FAILURE_WRONG_CHANNEL                  = 0x3\n \tNL80211_PMSR_FTM_REQ_ATTR_ASAP                          = 0x1\n+\tNL80211_PMSR_FTM_REQ_ATTR_BSS_COLOR                     = 0xd\n \tNL80211_PMSR_FTM_REQ_ATTR_BURST_DURATION                = 0x5\n \tNL80211_PMSR_FTM_REQ_ATTR_BURST_PERIOD                  = 0x4\n \tNL80211_PMSR_FTM_REQ_ATTR_FTMS_PER_BURST                = 0x6\n@@ -5244,12 +5400,36 @@ const (\n \tNL80211_RADAR_PRE_CAC_EXPIRED                           = 0x4\n \tNL80211_RATE_INFO_10_MHZ_WIDTH                          = 0xb\n \tNL80211_RATE_INFO_160_MHZ_WIDTH                         = 0xa\n+\tNL80211_RATE_INFO_320_MHZ_WIDTH                         = 0x12\n \tNL80211_RATE_INFO_40_MHZ_WIDTH                          = 0x3\n \tNL80211_RATE_INFO_5_MHZ_WIDTH                           = 0xc\n \tNL80211_RATE_INFO_80_MHZ_WIDTH                          = 0x8\n \tNL80211_RATE_INFO_80P80_MHZ_WIDTH                       = 0x9\n \tNL80211_RATE_INFO_BITRATE32                             = 0x5\n \tNL80211_RATE_INFO_BITRATE                               = 0x1\n+\tNL80211_RATE_INFO_EHT_GI_0_8                            = 0x0\n+\tNL80211_RATE_INFO_EHT_GI_1_6                            = 0x1\n+\tNL80211_RATE_INFO_EHT_GI_3_2                            = 0x2\n+\tNL80211_RATE_INFO_EHT_GI                                = 0x15\n+\tNL80211_RATE_INFO_EHT_MCS                               = 0x13\n+\tNL80211_RATE_INFO_EHT_NSS                               = 0x14\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_106                      = 0x3\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_106P26                   = 0x4\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_242                      = 0x5\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_26                       = 0x0\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_2x996                    = 0xb\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_2x996P484                = 0xc\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_3x996                    = 0xd\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_3x996P484                = 0xe\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_484                      = 0x6\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_484P242                  = 0x7\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_4x996                    = 0xf\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_52                       = 0x1\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_52P26                    = 0x2\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_996                      = 0x8\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_996P484                  = 0x9\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC_996P484P242              = 0xa\n+\tNL80211_RATE_INFO_EHT_RU_ALLOC                          = 0x16\n \tNL80211_RATE_INFO_HE_1XLTF                              = 0x0\n \tNL80211_RATE_INFO_HE_2XLTF                              = 0x1\n \tNL80211_RATE_INFO_HE_4XLTF                              = 0x2\n@@ -5292,6 +5472,7 @@ const (\n \tNL80211_RRF_GO_CONCURRENT                               = 0x1000\n \tNL80211_RRF_IR_CONCURRENT                               = 0x1000\n \tNL80211_RRF_NO_160MHZ                                   = 0x10000\n+\tNL80211_RRF_NO_320MHZ                                   = 0x40000\n \tNL80211_RRF_NO_80MHZ                                    = 0x8000\n \tNL80211_RRF_NO_CCK                                      = 0x2\n \tNL80211_RRF_NO_HE                                       = 0x20000\n@@ -5607,3 +5788,25 @@ const (\n \tAUDIT_NLGRP_NONE    = 0x0\n \tAUDIT_NLGRP_READLOG = 0x1\n )\n+\n+const (\n+\tTUN_F_CSUM    = 0x1\n+\tTUN_F_TSO4    = 0x2\n+\tTUN_F_TSO6    = 0x4\n+\tTUN_F_TSO_ECN = 0x8\n+\tTUN_F_UFO     = 0x10\n+)\n+\n+const (\n+\tVIRTIO_NET_HDR_F_NEEDS_CSUM = 0x1\n+\tVIRTIO_NET_HDR_F_DATA_VALID = 0x2\n+\tVIRTIO_NET_HDR_F_RSC_INFO   = 0x4\n+)\n+\n+const (\n+\tVIRTIO_NET_HDR_GSO_NONE  = 0x0\n+\tVIRTIO_NET_HDR_GSO_TCPV4 = 0x1\n+\tVIRTIO_NET_HDR_GSO_UDP   = 0x3\n+\tVIRTIO_NET_HDR_GSO_TCPV6 = 0x4\n+\tVIRTIO_NET_HDR_GSO_ECN   = 0x80\n+)"
    },
    {
      "sha": "4ecc1495cd0afe7ca1a1d942e2234b95861ac649",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_386.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_386.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_386.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -414,7 +414,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [122]int8\n+\tData   [122]byte\n \t_      uint32\n }\n "
    },
    {
      "sha": "34fddff964e9b2ad7f409e679b12aa27e51c09c1",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_amd64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_amd64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -427,7 +427,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [118]int8\n+\tData   [118]byte\n \t_      uint64\n }\n "
    },
    {
      "sha": "3b14a6031f3f5a4d01e2810f442a2ece16dd3249",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_arm.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_arm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_arm.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -405,7 +405,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [122]uint8\n+\tData   [122]byte\n \t_      uint32\n }\n "
    },
    {
      "sha": "0517651ab3f9da1f6686d9ca639cacc1f91eec50",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_arm64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_arm64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -406,7 +406,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [118]int8\n+\tData   [118]byte\n \t_      uint64\n }\n "
    },
    {
      "sha": "3b0c5181345250ab11e2d911e4d2cf98a8480624",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_loong64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_loong64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_loong64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_loong64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -407,7 +407,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [118]int8\n+\tData   [118]byte\n \t_      uint64\n }\n "
    },
    {
      "sha": "fccdf4dd0f46073c8bc7c0a3e6107e7603fded84",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -410,7 +410,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [122]int8\n+\tData   [122]byte\n \t_      uint32\n }\n "
    },
    {
      "sha": "500de8fc07db43c28e2d8c823109c2ced3732231",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -409,7 +409,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [118]int8\n+\tData   [118]byte\n \t_      uint64\n }\n "
    },
    {
      "sha": "d0434cd2c6dbaa7eefea2103a399d7872a4465bb",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips64le.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips64le.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips64le.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -409,7 +409,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [118]int8\n+\tData   [118]byte\n \t_      uint64\n }\n "
    },
    {
      "sha": "84206ba5347af837cfd48de491ac78d43b911dfd",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_mipsle.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mipsle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mipsle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mipsle.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -410,7 +410,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [122]int8\n+\tData   [122]byte\n \t_      uint32\n }\n "
    },
    {
      "sha": "ab078cf1f51dec597470df9842c02200ff4bf496",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -417,7 +417,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [122]uint8\n+\tData   [122]byte\n \t_      uint32\n }\n "
    },
    {
      "sha": "42eb2c4cefd6148549ec8b00bee4d6b8bfe6adfd",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -416,7 +416,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [118]uint8\n+\tData   [118]byte\n \t_      uint64\n }\n "
    },
    {
      "sha": "31304a4e8bb51ba53b1d9bc9af0d2269ccefb226",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64le.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc64le.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc64le.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -416,7 +416,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [118]uint8\n+\tData   [118]byte\n \t_      uint64\n }\n "
    },
    {
      "sha": "c311f9612d8859c24700ad99902c92ee9fcc70cf",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_riscv64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_riscv64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_riscv64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -434,7 +434,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [118]uint8\n+\tData   [118]byte\n \t_      uint64\n }\n "
    },
    {
      "sha": "bba3cefac1dd89bf44dd33ff61cd9a9af4014b0e",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_s390x.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_s390x.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -429,7 +429,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [118]int8\n+\tData   [118]byte\n \t_      uint64\n }\n "
    },
    {
      "sha": "ad8a01380461c031b8d24b8b786bc1c3efc7e1f9",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_sparc64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_sparc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_sparc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_sparc64.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -411,7 +411,7 @@ const (\n \n type SockaddrStorage struct {\n \tFamily uint16\n-\t_      [118]int8\n+\tData   [118]byte\n \t_      uint64\n }\n "
    },
    {
      "sha": "a20ebea63312cb6cffdfc55c9f762946d1b1dae5",
      "filename": "backend/vendor/golang.org/x/sys/windows/aliases.go",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Faliases.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Faliases.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Faliases.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build windows && go1.9\n+// +build windows,go1.9\n+\n+package windows\n+\n+import \"syscall\"\n+\n+type Errno = syscall.Errno\n+type SysProcAttr = syscall.SysProcAttr"
    },
    {
      "sha": "115341fba66dab28536543805dbbdfd3a88500a1",
      "filename": "backend/vendor/golang.org/x/sys/windows/dll_windows.go",
      "status": "added",
      "additions": 416,
      "deletions": 0,
      "changes": 416,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fdll_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fdll_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fdll_windows.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,416 @@\n+// Copyright 2011 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package windows\n+\n+import (\n+\t\"sync\"\n+\t\"sync/atomic\"\n+\t\"syscall\"\n+\t\"unsafe\"\n+)\n+\n+// We need to use LoadLibrary and GetProcAddress from the Go runtime, because\n+// the these symbols are loaded by the system linker and are required to\n+// dynamically load additional symbols. Note that in the Go runtime, these\n+// return syscall.Handle and syscall.Errno, but these are the same, in fact,\n+// as windows.Handle and windows.Errno, and we intend to keep these the same.\n+\n+//go:linkname syscall_loadlibrary syscall.loadlibrary\n+func syscall_loadlibrary(filename *uint16) (handle Handle, err Errno)\n+\n+//go:linkname syscall_getprocaddress syscall.getprocaddress\n+func syscall_getprocaddress(handle Handle, procname *uint8) (proc uintptr, err Errno)\n+\n+// DLLError describes reasons for DLL load failures.\n+type DLLError struct {\n+\tErr     error\n+\tObjName string\n+\tMsg     string\n+}\n+\n+func (e *DLLError) Error() string { return e.Msg }\n+\n+func (e *DLLError) Unwrap() error { return e.Err }\n+\n+// A DLL implements access to a single DLL.\n+type DLL struct {\n+\tName   string\n+\tHandle Handle\n+}\n+\n+// LoadDLL loads DLL file into memory.\n+//\n+// Warning: using LoadDLL without an absolute path name is subject to\n+// DLL preloading attacks. To safely load a system DLL, use LazyDLL\n+// with System set to true, or use LoadLibraryEx directly.\n+func LoadDLL(name string) (dll *DLL, err error) {\n+\tnamep, err := UTF16PtrFromString(name)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\th, e := syscall_loadlibrary(namep)\n+\tif e != 0 {\n+\t\treturn nil, &DLLError{\n+\t\t\tErr:     e,\n+\t\t\tObjName: name,\n+\t\t\tMsg:     \"Failed to load \" + name + \": \" + e.Error(),\n+\t\t}\n+\t}\n+\td := &DLL{\n+\t\tName:   name,\n+\t\tHandle: h,\n+\t}\n+\treturn d, nil\n+}\n+\n+// MustLoadDLL is like LoadDLL but panics if load operation failes.\n+func MustLoadDLL(name string) *DLL {\n+\td, e := LoadDLL(name)\n+\tif e != nil {\n+\t\tpanic(e)\n+\t}\n+\treturn d\n+}\n+\n+// FindProc searches DLL d for procedure named name and returns *Proc\n+// if found. It returns an error if search fails.\n+func (d *DLL) FindProc(name string) (proc *Proc, err error) {\n+\tnamep, err := BytePtrFromString(name)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\ta, e := syscall_getprocaddress(d.Handle, namep)\n+\tif e != 0 {\n+\t\treturn nil, &DLLError{\n+\t\t\tErr:     e,\n+\t\t\tObjName: name,\n+\t\t\tMsg:     \"Failed to find \" + name + \" procedure in \" + d.Name + \": \" + e.Error(),\n+\t\t}\n+\t}\n+\tp := &Proc{\n+\t\tDll:  d,\n+\t\tName: name,\n+\t\taddr: a,\n+\t}\n+\treturn p, nil\n+}\n+\n+// MustFindProc is like FindProc but panics if search fails.\n+func (d *DLL) MustFindProc(name string) *Proc {\n+\tp, e := d.FindProc(name)\n+\tif e != nil {\n+\t\tpanic(e)\n+\t}\n+\treturn p\n+}\n+\n+// FindProcByOrdinal searches DLL d for procedure by ordinal and returns *Proc\n+// if found. It returns an error if search fails.\n+func (d *DLL) FindProcByOrdinal(ordinal uintptr) (proc *Proc, err error) {\n+\ta, e := GetProcAddressByOrdinal(d.Handle, ordinal)\n+\tname := \"#\" + itoa(int(ordinal))\n+\tif e != nil {\n+\t\treturn nil, &DLLError{\n+\t\t\tErr:     e,\n+\t\t\tObjName: name,\n+\t\t\tMsg:     \"Failed to find \" + name + \" procedure in \" + d.Name + \": \" + e.Error(),\n+\t\t}\n+\t}\n+\tp := &Proc{\n+\t\tDll:  d,\n+\t\tName: name,\n+\t\taddr: a,\n+\t}\n+\treturn p, nil\n+}\n+\n+// MustFindProcByOrdinal is like FindProcByOrdinal but panics if search fails.\n+func (d *DLL) MustFindProcByOrdinal(ordinal uintptr) *Proc {\n+\tp, e := d.FindProcByOrdinal(ordinal)\n+\tif e != nil {\n+\t\tpanic(e)\n+\t}\n+\treturn p\n+}\n+\n+// Release unloads DLL d from memory.\n+func (d *DLL) Release() (err error) {\n+\treturn FreeLibrary(d.Handle)\n+}\n+\n+// A Proc implements access to a procedure inside a DLL.\n+type Proc struct {\n+\tDll  *DLL\n+\tName string\n+\taddr uintptr\n+}\n+\n+// Addr returns the address of the procedure represented by p.\n+// The return value can be passed to Syscall to run the procedure.\n+func (p *Proc) Addr() uintptr {\n+\treturn p.addr\n+}\n+\n+//go:uintptrescapes\n+\n+// Call executes procedure p with arguments a. It will panic, if more than 15 arguments\n+// are supplied.\n+//\n+// The returned error is always non-nil, constructed from the result of GetLastError.\n+// Callers must inspect the primary return value to decide whether an error occurred\n+// (according to the semantics of the specific function being called) before consulting\n+// the error. The error will be guaranteed to contain windows.Errno.\n+func (p *Proc) Call(a ...uintptr) (r1, r2 uintptr, lastErr error) {\n+\tswitch len(a) {\n+\tcase 0:\n+\t\treturn syscall.Syscall(p.Addr(), uintptr(len(a)), 0, 0, 0)\n+\tcase 1:\n+\t\treturn syscall.Syscall(p.Addr(), uintptr(len(a)), a[0], 0, 0)\n+\tcase 2:\n+\t\treturn syscall.Syscall(p.Addr(), uintptr(len(a)), a[0], a[1], 0)\n+\tcase 3:\n+\t\treturn syscall.Syscall(p.Addr(), uintptr(len(a)), a[0], a[1], a[2])\n+\tcase 4:\n+\t\treturn syscall.Syscall6(p.Addr(), uintptr(len(a)), a[0], a[1], a[2], a[3], 0, 0)\n+\tcase 5:\n+\t\treturn syscall.Syscall6(p.Addr(), uintptr(len(a)), a[0], a[1], a[2], a[3], a[4], 0)\n+\tcase 6:\n+\t\treturn syscall.Syscall6(p.Addr(), uintptr(len(a)), a[0], a[1], a[2], a[3], a[4], a[5])\n+\tcase 7:\n+\t\treturn syscall.Syscall9(p.Addr(), uintptr(len(a)), a[0], a[1], a[2], a[3], a[4], a[5], a[6], 0, 0)\n+\tcase 8:\n+\t\treturn syscall.Syscall9(p.Addr(), uintptr(len(a)), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], 0)\n+\tcase 9:\n+\t\treturn syscall.Syscall9(p.Addr(), uintptr(len(a)), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8])\n+\tcase 10:\n+\t\treturn syscall.Syscall12(p.Addr(), uintptr(len(a)), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], 0, 0)\n+\tcase 11:\n+\t\treturn syscall.Syscall12(p.Addr(), uintptr(len(a)), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], 0)\n+\tcase 12:\n+\t\treturn syscall.Syscall12(p.Addr(), uintptr(len(a)), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11])\n+\tcase 13:\n+\t\treturn syscall.Syscall15(p.Addr(), uintptr(len(a)), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], 0, 0)\n+\tcase 14:\n+\t\treturn syscall.Syscall15(p.Addr(), uintptr(len(a)), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], 0)\n+\tcase 15:\n+\t\treturn syscall.Syscall15(p.Addr(), uintptr(len(a)), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14])\n+\tdefault:\n+\t\tpanic(\"Call \" + p.Name + \" with too many arguments \" + itoa(len(a)) + \".\")\n+\t}\n+}\n+\n+// A LazyDLL implements access to a single DLL.\n+// It will delay the load of the DLL until the first\n+// call to its Handle method or to one of its\n+// LazyProc's Addr method.\n+type LazyDLL struct {\n+\tName string\n+\n+\t// System determines whether the DLL must be loaded from the\n+\t// Windows System directory, bypassing the normal DLL search\n+\t// path.\n+\tSystem bool\n+\n+\tmu  sync.Mutex\n+\tdll *DLL // non nil once DLL is loaded\n+}\n+\n+// Load loads DLL file d.Name into memory. It returns an error if fails.\n+// Load will not try to load DLL, if it is already loaded into memory.\n+func (d *LazyDLL) Load() error {\n+\t// Non-racy version of:\n+\t// if d.dll != nil {\n+\tif atomic.LoadPointer((*unsafe.Pointer)(unsafe.Pointer(&d.dll))) != nil {\n+\t\treturn nil\n+\t}\n+\td.mu.Lock()\n+\tdefer d.mu.Unlock()\n+\tif d.dll != nil {\n+\t\treturn nil\n+\t}\n+\n+\t// kernel32.dll is special, since it's where LoadLibraryEx comes from.\n+\t// The kernel already special-cases its name, so it's always\n+\t// loaded from system32.\n+\tvar dll *DLL\n+\tvar err error\n+\tif d.Name == \"kernel32.dll\" {\n+\t\tdll, err = LoadDLL(d.Name)\n+\t} else {\n+\t\tdll, err = loadLibraryEx(d.Name, d.System)\n+\t}\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\n+\t// Non-racy version of:\n+\t// d.dll = dll\n+\tatomic.StorePointer((*unsafe.Pointer)(unsafe.Pointer(&d.dll)), unsafe.Pointer(dll))\n+\treturn nil\n+}\n+\n+// mustLoad is like Load but panics if search fails.\n+func (d *LazyDLL) mustLoad() {\n+\te := d.Load()\n+\tif e != nil {\n+\t\tpanic(e)\n+\t}\n+}\n+\n+// Handle returns d's module handle.\n+func (d *LazyDLL) Handle() uintptr {\n+\td.mustLoad()\n+\treturn uintptr(d.dll.Handle)\n+}\n+\n+// NewProc returns a LazyProc for accessing the named procedure in the DLL d.\n+func (d *LazyDLL) NewProc(name string) *LazyProc {\n+\treturn &LazyProc{l: d, Name: name}\n+}\n+\n+// NewLazyDLL creates new LazyDLL associated with DLL file.\n+func NewLazyDLL(name string) *LazyDLL {\n+\treturn &LazyDLL{Name: name}\n+}\n+\n+// NewLazySystemDLL is like NewLazyDLL, but will only\n+// search Windows System directory for the DLL if name is\n+// a base name (like \"advapi32.dll\").\n+func NewLazySystemDLL(name string) *LazyDLL {\n+\treturn &LazyDLL{Name: name, System: true}\n+}\n+\n+// A LazyProc implements access to a procedure inside a LazyDLL.\n+// It delays the lookup until the Addr method is called.\n+type LazyProc struct {\n+\tName string\n+\n+\tmu   sync.Mutex\n+\tl    *LazyDLL\n+\tproc *Proc\n+}\n+\n+// Find searches DLL for procedure named p.Name. It returns\n+// an error if search fails. Find will not search procedure,\n+// if it is already found and loaded into memory.\n+func (p *LazyProc) Find() error {\n+\t// Non-racy version of:\n+\t// if p.proc == nil {\n+\tif atomic.LoadPointer((*unsafe.Pointer)(unsafe.Pointer(&p.proc))) == nil {\n+\t\tp.mu.Lock()\n+\t\tdefer p.mu.Unlock()\n+\t\tif p.proc == nil {\n+\t\t\te := p.l.Load()\n+\t\t\tif e != nil {\n+\t\t\t\treturn e\n+\t\t\t}\n+\t\t\tproc, e := p.l.dll.FindProc(p.Name)\n+\t\t\tif e != nil {\n+\t\t\t\treturn e\n+\t\t\t}\n+\t\t\t// Non-racy version of:\n+\t\t\t// p.proc = proc\n+\t\t\tatomic.StorePointer((*unsafe.Pointer)(unsafe.Pointer(&p.proc)), unsafe.Pointer(proc))\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+// mustFind is like Find but panics if search fails.\n+func (p *LazyProc) mustFind() {\n+\te := p.Find()\n+\tif e != nil {\n+\t\tpanic(e)\n+\t}\n+}\n+\n+// Addr returns the address of the procedure represented by p.\n+// The return value can be passed to Syscall to run the procedure.\n+// It will panic if the procedure cannot be found.\n+func (p *LazyProc) Addr() uintptr {\n+\tp.mustFind()\n+\treturn p.proc.Addr()\n+}\n+\n+//go:uintptrescapes\n+\n+// Call executes procedure p with arguments a. It will panic, if more than 15 arguments\n+// are supplied. It will also panic if the procedure cannot be found.\n+//\n+// The returned error is always non-nil, constructed from the result of GetLastError.\n+// Callers must inspect the primary return value to decide whether an error occurred\n+// (according to the semantics of the specific function being called) before consulting\n+// the error. The error will be guaranteed to contain windows.Errno.\n+func (p *LazyProc) Call(a ...uintptr) (r1, r2 uintptr, lastErr error) {\n+\tp.mustFind()\n+\treturn p.proc.Call(a...)\n+}\n+\n+var canDoSearchSystem32Once struct {\n+\tsync.Once\n+\tv bool\n+}\n+\n+func initCanDoSearchSystem32() {\n+\t// https://msdn.microsoft.com/en-us/library/ms684179(v=vs.85).aspx says:\n+\t// \"Windows 7, Windows Server 2008 R2, Windows Vista, and Windows\n+\t// Server 2008: The LOAD_LIBRARY_SEARCH_* flags are available on\n+\t// systems that have KB2533623 installed. To determine whether the\n+\t// flags are available, use GetProcAddress to get the address of the\n+\t// AddDllDirectory, RemoveDllDirectory, or SetDefaultDllDirectories\n+\t// function. If GetProcAddress succeeds, the LOAD_LIBRARY_SEARCH_*\n+\t// flags can be used with LoadLibraryEx.\"\n+\tcanDoSearchSystem32Once.v = (modkernel32.NewProc(\"AddDllDirectory\").Find() == nil)\n+}\n+\n+func canDoSearchSystem32() bool {\n+\tcanDoSearchSystem32Once.Do(initCanDoSearchSystem32)\n+\treturn canDoSearchSystem32Once.v\n+}\n+\n+func isBaseName(name string) bool {\n+\tfor _, c := range name {\n+\t\tif c == ':' || c == '/' || c == '\\\\' {\n+\t\t\treturn false\n+\t\t}\n+\t}\n+\treturn true\n+}\n+\n+// loadLibraryEx wraps the Windows LoadLibraryEx function.\n+//\n+// See https://msdn.microsoft.com/en-us/library/windows/desktop/ms684179(v=vs.85).aspx\n+//\n+// If name is not an absolute path, LoadLibraryEx searches for the DLL\n+// in a variety of automatic locations unless constrained by flags.\n+// See: https://msdn.microsoft.com/en-us/library/ff919712%28VS.85%29.aspx\n+func loadLibraryEx(name string, system bool) (*DLL, error) {\n+\tloadDLL := name\n+\tvar flags uintptr\n+\tif system {\n+\t\tif canDoSearchSystem32() {\n+\t\t\tflags = LOAD_LIBRARY_SEARCH_SYSTEM32\n+\t\t} else if isBaseName(name) {\n+\t\t\t// WindowsXP or unpatched Windows machine\n+\t\t\t// trying to load \"foo.dll\" out of the system\n+\t\t\t// folder, but LoadLibraryEx doesn't support\n+\t\t\t// that yet on their system, so emulate it.\n+\t\t\tsystemdir, err := GetSystemDirectory()\n+\t\t\tif err != nil {\n+\t\t\t\treturn nil, err\n+\t\t\t}\n+\t\t\tloadDLL = systemdir + \"\\\\\" + name\n+\t\t}\n+\t}\n+\th, err := LoadLibraryEx(loadDLL, 0, flags)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\treturn &DLL{Name: name, Handle: h}, nil\n+}\n+\n+type errString string\n+\n+func (s errString) Error() string { return string(s) }"
    },
    {
      "sha": "fdbbbcd31717edfa1cedaa694a6dea2f353f354a",
      "filename": "backend/vendor/golang.org/x/sys/windows/empty.s",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fempty.s",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fempty.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fempty.s?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build !go1.12\n+// +build !go1.12\n+\n+// This file is here to allow bodyless functions with go:linkname for Go 1.11\n+// and earlier (see https://golang.org/issue/23311)."
    },
    {
      "sha": "92ac05ff4ea606ee76025c4004a2556599a6f02c",
      "filename": "backend/vendor/golang.org/x/sys/windows/env_windows.go",
      "status": "added",
      "additions": 54,
      "deletions": 0,
      "changes": 54,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fenv_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fenv_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fenv_windows.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,54 @@\n+// Copyright 2010 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Windows environment variables.\n+\n+package windows\n+\n+import (\n+\t\"syscall\"\n+\t\"unsafe\"\n+)\n+\n+func Getenv(key string) (value string, found bool) {\n+\treturn syscall.Getenv(key)\n+}\n+\n+func Setenv(key, value string) error {\n+\treturn syscall.Setenv(key, value)\n+}\n+\n+func Clearenv() {\n+\tsyscall.Clearenv()\n+}\n+\n+func Environ() []string {\n+\treturn syscall.Environ()\n+}\n+\n+// Returns a default environment associated with the token, rather than the current\n+// process. If inheritExisting is true, then this environment also inherits the\n+// environment of the current process.\n+func (token Token) Environ(inheritExisting bool) (env []string, err error) {\n+\tvar block *uint16\n+\terr = CreateEnvironmentBlock(&block, token, inheritExisting)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer DestroyEnvironmentBlock(block)\n+\tblockp := uintptr(unsafe.Pointer(block))\n+\tfor {\n+\t\tentry := UTF16PtrToString((*uint16)(unsafe.Pointer(blockp)))\n+\t\tif len(entry) == 0 {\n+\t\t\tbreak\n+\t\t}\n+\t\tenv = append(env, entry)\n+\t\tblockp += 2 * (uintptr(len(entry)) + 1)\n+\t}\n+\treturn env, nil\n+}\n+\n+func Unsetenv(key string) error {\n+\treturn syscall.Unsetenv(key)\n+}"
    },
    {
      "sha": "2cd60645ee7d32bb9e428a4e0a0cd2d90214ca64",
      "filename": "backend/vendor/golang.org/x/sys/windows/eventlog.go",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Feventlog.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Feventlog.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Feventlog.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build windows\n+// +build windows\n+\n+package windows\n+\n+const (\n+\tEVENTLOG_SUCCESS          = 0\n+\tEVENTLOG_ERROR_TYPE       = 1\n+\tEVENTLOG_WARNING_TYPE     = 2\n+\tEVENTLOG_INFORMATION_TYPE = 4\n+\tEVENTLOG_AUDIT_SUCCESS    = 8\n+\tEVENTLOG_AUDIT_FAILURE    = 16\n+)\n+\n+//sys\tRegisterEventSource(uncServerName *uint16, sourceName *uint16) (handle Handle, err error) [failretval==0] = advapi32.RegisterEventSourceW\n+//sys\tDeregisterEventSource(handle Handle) (err error) = advapi32.DeregisterEventSource\n+//sys\tReportEvent(log Handle, etype uint16, category uint16, eventId uint32, usrSId uintptr, numStrings uint16, dataSize uint32, strings **uint16, rawData *byte) (err error) = advapi32.ReportEventW"
    },
    {
      "sha": "75980fd44ad798ec8e9ab77f1de843575edd86bf",
      "filename": "backend/vendor/golang.org/x/sys/windows/exec_windows.go",
      "status": "added",
      "additions": 178,
      "deletions": 0,
      "changes": 178,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fexec_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fexec_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fexec_windows.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,178 @@\n+// Copyright 2009 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Fork, exec, wait, etc.\n+\n+package windows\n+\n+import (\n+\terrorspkg \"errors\"\n+\t\"unsafe\"\n+)\n+\n+// EscapeArg rewrites command line argument s as prescribed\n+// in http://msdn.microsoft.com/en-us/library/ms880421.\n+// This function returns \"\" (2 double quotes) if s is empty.\n+// Alternatively, these transformations are done:\n+//   - every back slash (\\) is doubled, but only if immediately\n+//     followed by double quote (\");\n+//   - every double quote (\") is escaped by back slash (\\);\n+//   - finally, s is wrapped with double quotes (arg -> \"arg\"),\n+//     but only if there is space or tab inside s.\n+func EscapeArg(s string) string {\n+\tif len(s) == 0 {\n+\t\treturn \"\\\"\\\"\"\n+\t}\n+\tn := len(s)\n+\thasSpace := false\n+\tfor i := 0; i < len(s); i++ {\n+\t\tswitch s[i] {\n+\t\tcase '\"', '\\\\':\n+\t\t\tn++\n+\t\tcase ' ', '\\t':\n+\t\t\thasSpace = true\n+\t\t}\n+\t}\n+\tif hasSpace {\n+\t\tn += 2\n+\t}\n+\tif n == len(s) {\n+\t\treturn s\n+\t}\n+\n+\tqs := make([]byte, n)\n+\tj := 0\n+\tif hasSpace {\n+\t\tqs[j] = '\"'\n+\t\tj++\n+\t}\n+\tslashes := 0\n+\tfor i := 0; i < len(s); i++ {\n+\t\tswitch s[i] {\n+\t\tdefault:\n+\t\t\tslashes = 0\n+\t\t\tqs[j] = s[i]\n+\t\tcase '\\\\':\n+\t\t\tslashes++\n+\t\t\tqs[j] = s[i]\n+\t\tcase '\"':\n+\t\t\tfor ; slashes > 0; slashes-- {\n+\t\t\t\tqs[j] = '\\\\'\n+\t\t\t\tj++\n+\t\t\t}\n+\t\t\tqs[j] = '\\\\'\n+\t\t\tj++\n+\t\t\tqs[j] = s[i]\n+\t\t}\n+\t\tj++\n+\t}\n+\tif hasSpace {\n+\t\tfor ; slashes > 0; slashes-- {\n+\t\t\tqs[j] = '\\\\'\n+\t\t\tj++\n+\t\t}\n+\t\tqs[j] = '\"'\n+\t\tj++\n+\t}\n+\treturn string(qs[:j])\n+}\n+\n+// ComposeCommandLine escapes and joins the given arguments suitable for use as a Windows command line,\n+// in CreateProcess's CommandLine argument, CreateService/ChangeServiceConfig's BinaryPathName argument,\n+// or any program that uses CommandLineToArgv.\n+func ComposeCommandLine(args []string) string {\n+\tvar commandLine string\n+\tfor i := range args {\n+\t\tif i > 0 {\n+\t\t\tcommandLine += \" \"\n+\t\t}\n+\t\tcommandLine += EscapeArg(args[i])\n+\t}\n+\treturn commandLine\n+}\n+\n+// DecomposeCommandLine breaks apart its argument command line into unescaped parts using CommandLineToArgv,\n+// as gathered from GetCommandLine, QUERY_SERVICE_CONFIG's BinaryPathName argument, or elsewhere that\n+// command lines are passed around.\n+func DecomposeCommandLine(commandLine string) ([]string, error) {\n+\tif len(commandLine) == 0 {\n+\t\treturn []string{}, nil\n+\t}\n+\tvar argc int32\n+\targv, err := CommandLineToArgv(StringToUTF16Ptr(commandLine), &argc)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer LocalFree(Handle(unsafe.Pointer(argv)))\n+\tvar args []string\n+\tfor _, v := range (*argv)[:argc] {\n+\t\targs = append(args, UTF16ToString((*v)[:]))\n+\t}\n+\treturn args, nil\n+}\n+\n+func CloseOnExec(fd Handle) {\n+\tSetHandleInformation(Handle(fd), HANDLE_FLAG_INHERIT, 0)\n+}\n+\n+// FullPath retrieves the full path of the specified file.\n+func FullPath(name string) (path string, err error) {\n+\tp, err := UTF16PtrFromString(name)\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\tn := uint32(100)\n+\tfor {\n+\t\tbuf := make([]uint16, n)\n+\t\tn, err = GetFullPathName(p, uint32(len(buf)), &buf[0], nil)\n+\t\tif err != nil {\n+\t\t\treturn \"\", err\n+\t\t}\n+\t\tif n <= uint32(len(buf)) {\n+\t\t\treturn UTF16ToString(buf[:n]), nil\n+\t\t}\n+\t}\n+}\n+\n+// NewProcThreadAttributeList allocates a new ProcThreadAttributeListContainer, with the requested maximum number of attributes.\n+func NewProcThreadAttributeList(maxAttrCount uint32) (*ProcThreadAttributeListContainer, error) {\n+\tvar size uintptr\n+\terr := initializeProcThreadAttributeList(nil, maxAttrCount, 0, &size)\n+\tif err != ERROR_INSUFFICIENT_BUFFER {\n+\t\tif err == nil {\n+\t\t\treturn nil, errorspkg.New(\"unable to query buffer size from InitializeProcThreadAttributeList\")\n+\t\t}\n+\t\treturn nil, err\n+\t}\n+\talloc, err := LocalAlloc(LMEM_FIXED, uint32(size))\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\t// size is guaranteed to be ≥1 by InitializeProcThreadAttributeList.\n+\tal := &ProcThreadAttributeListContainer{data: (*ProcThreadAttributeList)(unsafe.Pointer(alloc))}\n+\terr = initializeProcThreadAttributeList(al.data, maxAttrCount, 0, &size)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\treturn al, err\n+}\n+\n+// Update modifies the ProcThreadAttributeList using UpdateProcThreadAttribute.\n+func (al *ProcThreadAttributeListContainer) Update(attribute uintptr, value unsafe.Pointer, size uintptr) error {\n+\tal.pointers = append(al.pointers, value)\n+\treturn updateProcThreadAttribute(al.data, 0, attribute, value, size, nil, nil)\n+}\n+\n+// Delete frees ProcThreadAttributeList's resources.\n+func (al *ProcThreadAttributeListContainer) Delete() {\n+\tdeleteProcThreadAttributeList(al.data)\n+\tLocalFree(Handle(unsafe.Pointer(al.data)))\n+\tal.data = nil\n+\tal.pointers = nil\n+}\n+\n+// List returns the actual ProcThreadAttributeList to be passed to StartupInfoEx.\n+func (al *ProcThreadAttributeListContainer) List() *ProcThreadAttributeList {\n+\treturn al.data\n+}"
    },
    {
      "sha": "6dc0920a84da2ab53810713043af3254cac6dc55",
      "filename": "backend/vendor/golang.org/x/sys/windows/memory_windows.go",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fmemory_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fmemory_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fmemory_windows.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,48 @@\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package windows\n+\n+const (\n+\tMEM_COMMIT      = 0x00001000\n+\tMEM_RESERVE     = 0x00002000\n+\tMEM_DECOMMIT    = 0x00004000\n+\tMEM_RELEASE     = 0x00008000\n+\tMEM_RESET       = 0x00080000\n+\tMEM_TOP_DOWN    = 0x00100000\n+\tMEM_WRITE_WATCH = 0x00200000\n+\tMEM_PHYSICAL    = 0x00400000\n+\tMEM_RESET_UNDO  = 0x01000000\n+\tMEM_LARGE_PAGES = 0x20000000\n+\n+\tPAGE_NOACCESS          = 0x00000001\n+\tPAGE_READONLY          = 0x00000002\n+\tPAGE_READWRITE         = 0x00000004\n+\tPAGE_WRITECOPY         = 0x00000008\n+\tPAGE_EXECUTE           = 0x00000010\n+\tPAGE_EXECUTE_READ      = 0x00000020\n+\tPAGE_EXECUTE_READWRITE = 0x00000040\n+\tPAGE_EXECUTE_WRITECOPY = 0x00000080\n+\tPAGE_GUARD             = 0x00000100\n+\tPAGE_NOCACHE           = 0x00000200\n+\tPAGE_WRITECOMBINE      = 0x00000400\n+\tPAGE_TARGETS_INVALID   = 0x40000000\n+\tPAGE_TARGETS_NO_UPDATE = 0x40000000\n+\n+\tQUOTA_LIMITS_HARDWS_MIN_DISABLE = 0x00000002\n+\tQUOTA_LIMITS_HARDWS_MIN_ENABLE  = 0x00000001\n+\tQUOTA_LIMITS_HARDWS_MAX_DISABLE = 0x00000008\n+\tQUOTA_LIMITS_HARDWS_MAX_ENABLE  = 0x00000004\n+)\n+\n+type MemoryBasicInformation struct {\n+\tBaseAddress       uintptr\n+\tAllocationBase    uintptr\n+\tAllocationProtect uint32\n+\tPartitionId       uint16\n+\tRegionSize        uintptr\n+\tState             uint32\n+\tProtect           uint32\n+\tType              uint32\n+}"
    },
    {
      "sha": "58e0188fb71f802180ea330dd13828884e4d3001",
      "filename": "backend/vendor/golang.org/x/sys/windows/mkerrors.bash",
      "status": "added",
      "additions": 70,
      "deletions": 0,
      "changes": 70,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fmkerrors.bash",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fmkerrors.bash",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fmkerrors.bash?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,70 @@\n+#!/bin/bash\n+\n+# Copyright 2019 The Go Authors. All rights reserved.\n+# Use of this source code is governed by a BSD-style\n+# license that can be found in the LICENSE file.\n+\n+set -e\n+shopt -s nullglob\n+\n+winerror=\"$(printf '%s\\n' \"/mnt/c/Program Files (x86)/Windows Kits/\"/*/Include/*/shared/winerror.h | sort -Vr | head -n 1)\"\n+[[ -n $winerror ]] || { echo \"Unable to find winerror.h\" >&2; exit 1; }\n+ntstatus=\"$(printf '%s\\n' \"/mnt/c/Program Files (x86)/Windows Kits/\"/*/Include/*/shared/ntstatus.h | sort -Vr | head -n 1)\"\n+[[ -n $ntstatus ]] || { echo \"Unable to find ntstatus.h\" >&2; exit 1; }\n+\n+declare -A errors\n+\n+{\n+\techo \"// Code generated by 'mkerrors.bash'; DO NOT EDIT.\"\n+\techo\n+\techo \"package windows\"\n+\techo \"import \\\"syscall\\\"\"\n+\techo \"const (\"\n+\n+\twhile read -r line; do\n+\t\tunset vtype\n+\t\tif [[ $line =~ ^#define\\ +([A-Z0-9_]+k?)\\ +([A-Z0-9_]+\\()?([A-Z][A-Z0-9_]+k?)\\)? ]]; then\n+\t\t\tkey=\"${BASH_REMATCH[1]}\"\n+\t\t\tvalue=\"${BASH_REMATCH[3]}\"\n+\t\telif [[ $line =~ ^#define\\ +([A-Z0-9_]+k?)\\ +([A-Z0-9_]+\\()?((0x)?[0-9A-Fa-f]+)L?\\)? ]]; then\n+\t\t\tkey=\"${BASH_REMATCH[1]}\"\n+\t\t\tvalue=\"${BASH_REMATCH[3]}\"\n+\t\t\tvtype=\"${BASH_REMATCH[2]}\"\n+\t\telif [[ $line =~ ^#define\\ +([A-Z0-9_]+k?)\\ +\\(\\(([A-Z]+)\\)((0x)?[0-9A-Fa-f]+)L?\\) ]]; then\n+\t\t\tkey=\"${BASH_REMATCH[1]}\"\n+\t\t\tvalue=\"${BASH_REMATCH[3]}\"\n+\t\t\tvtype=\"${BASH_REMATCH[2]}\"\n+\t\telse\n+\t\t\tcontinue\n+\t\tfi\n+\t\t[[ -n $key && -n $value ]] || continue\n+\t\t[[ -z ${errors[\"$key\"]} ]] || continue\n+\t\terrors[\"$key\"]=\"$value\"\n+\t\tif [[ -v vtype ]]; then\n+\t\t\tif [[ $key == FACILITY_* || $key == NO_ERROR ]]; then\n+\t\t\t\tvtype=\"\"\n+\t\t\telif [[ $vtype == *HANDLE* || $vtype == *HRESULT* ]]; then\n+\t\t\t\tvtype=\"Handle\"\n+\t\t\telse\n+\t\t\t\tvtype=\"syscall.Errno\"\n+\t\t\tfi\n+\t\t\tlast_vtype=\"$vtype\"\n+\t\telse\n+\t\t\tvtype=\"\"\n+\t\t\tif [[ $last_vtype == Handle && $value == NO_ERROR ]]; then\n+\t\t\t\tvalue=\"S_OK\"\n+\t\t\telif [[ $last_vtype == syscall.Errno && $value == NO_ERROR ]]; then\n+\t\t\t\tvalue=\"ERROR_SUCCESS\"\n+\t\t\tfi\n+\t\tfi\n+\n+\t\techo \"$key $vtype = $value\"\n+\tdone < \"$winerror\"\n+\n+\twhile read -r line; do\n+\t\t[[ $line =~ ^#define\\ (STATUS_[^\\s]+)\\ +\\(\\(NTSTATUS\\)((0x)?[0-9a-fA-F]+)L?\\) ]] || continue\n+\t\techo \"${BASH_REMATCH[1]} NTStatus = ${BASH_REMATCH[2]}\"\n+\tdone < \"$ntstatus\"\n+\n+\techo \")\"\n+} | gofmt > \"zerrors_windows.go\""
    },
    {
      "sha": "ab8924e936f5c79b1b15c27150bf3239672dc115",
      "filename": "backend/vendor/golang.org/x/sys/windows/mkknownfolderids.bash",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fmkknownfolderids.bash",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fmkknownfolderids.bash",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fmkknownfolderids.bash?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,27 @@\n+#!/bin/bash\n+\n+# Copyright 2019 The Go Authors. All rights reserved.\n+# Use of this source code is governed by a BSD-style\n+# license that can be found in the LICENSE file.\n+\n+set -e\n+shopt -s nullglob\n+\n+knownfolders=\"$(printf '%s\\n' \"/mnt/c/Program Files (x86)/Windows Kits/\"/*/Include/*/um/KnownFolders.h | sort -Vr | head -n 1)\"\n+[[ -n $knownfolders ]] || { echo \"Unable to find KnownFolders.h\" >&2; exit 1; }\n+\n+{\n+\techo \"// Code generated by 'mkknownfolderids.bash'; DO NOT EDIT.\"\n+\techo\n+\techo \"package windows\"\n+\techo \"type KNOWNFOLDERID GUID\"\n+\techo \"var (\"\n+\twhile read -r line; do\n+\t\t[[ $line =~ DEFINE_KNOWN_FOLDER\\((FOLDERID_[^,]+),[\\t\\ ]*(0x[^,]+),[\\t\\ ]*(0x[^,]+),[\\t\\ ]*(0x[^,]+),[\\t\\ ]*(0x[^,]+),[\\t\\ ]*(0x[^,]+),[\\t\\ ]*(0x[^,]+),[\\t\\ ]*(0x[^,]+),[\\t\\ ]*(0x[^,]+),[\\t\\ ]*(0x[^,]+),[\\t\\ ]*(0x[^,]+),[\\t\\ ]*(0x[^,]+)\\) ]] || continue\n+\t\tprintf \"%s = &KNOWNFOLDERID{0x%08x, 0x%04x, 0x%04x, [8]byte{0x%02x, 0x%02x, 0x%02x, 0x%02x, 0x%02x, 0x%02x, 0x%02x, 0x%02x}}\\n\" \\\n+\t\t\t\"${BASH_REMATCH[1]}\" $(( \"${BASH_REMATCH[2]}\" )) $(( \"${BASH_REMATCH[3]}\" )) $(( \"${BASH_REMATCH[4]}\" )) \\\n+\t\t\t$(( \"${BASH_REMATCH[5]}\" )) $(( \"${BASH_REMATCH[6]}\" )) $(( \"${BASH_REMATCH[7]}\" )) $(( \"${BASH_REMATCH[8]}\" )) \\\n+\t\t\t$(( \"${BASH_REMATCH[9]}\" )) $(( \"${BASH_REMATCH[10]}\" )) $(( \"${BASH_REMATCH[11]}\" )) $(( \"${BASH_REMATCH[12]}\" ))\n+\tdone < \"$knownfolders\"\n+\techo \")\"\n+} | gofmt > \"zknownfolderids_windows.go\""
    },
    {
      "sha": "8563f79c57f89551a6f66fe1c18339cf6b31423a",
      "filename": "backend/vendor/golang.org/x/sys/windows/mksyscall.go",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fmksyscall.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fmksyscall.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fmksyscall.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,10 @@\n+// Copyright 2009 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build generate\n+// +build generate\n+\n+package windows\n+\n+//go:generate go run golang.org/x/sys/windows/mkwinsyscall -output zsyscall_windows.go eventlog.go service.go syscall_windows.go security_windows.go setupapi_windows.go"
    },
    {
      "sha": "9196b089ca14c16da722f22a12b47c9d5aa768b2",
      "filename": "backend/vendor/golang.org/x/sys/windows/race.go",
      "status": "added",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Frace.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Frace.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Frace.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build windows && race\n+// +build windows,race\n+\n+package windows\n+\n+import (\n+\t\"runtime\"\n+\t\"unsafe\"\n+)\n+\n+const raceenabled = true\n+\n+func raceAcquire(addr unsafe.Pointer) {\n+\truntime.RaceAcquire(addr)\n+}\n+\n+func raceReleaseMerge(addr unsafe.Pointer) {\n+\truntime.RaceReleaseMerge(addr)\n+}\n+\n+func raceReadRange(addr unsafe.Pointer, len int) {\n+\truntime.RaceReadRange(addr, len)\n+}\n+\n+func raceWriteRange(addr unsafe.Pointer, len int) {\n+\truntime.RaceWriteRange(addr, len)\n+}"
    },
    {
      "sha": "7bae4817a06c6b75368cf82b79385f4259e2c5d5",
      "filename": "backend/vendor/golang.org/x/sys/windows/race0.go",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Frace0.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Frace0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Frace0.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build windows && !race\n+// +build windows,!race\n+\n+package windows\n+\n+import (\n+\t\"unsafe\"\n+)\n+\n+const raceenabled = false\n+\n+func raceAcquire(addr unsafe.Pointer) {\n+}\n+\n+func raceReleaseMerge(addr unsafe.Pointer) {\n+}\n+\n+func raceReadRange(addr unsafe.Pointer, len int) {\n+}\n+\n+func raceWriteRange(addr unsafe.Pointer, len int) {\n+}"
    },
    {
      "sha": "d414ef13bef04e1ae1a992502076851f0515a0d2",
      "filename": "backend/vendor/golang.org/x/sys/windows/security_windows.go",
      "status": "added",
      "additions": 1444,
      "deletions": 0,
      "changes": 1444,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsecurity_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsecurity_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsecurity_windows.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,1444 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package windows\n+\n+import (\n+\t\"syscall\"\n+\t\"unsafe\"\n+\n+\t\"golang.org/x/sys/internal/unsafeheader\"\n+)\n+\n+const (\n+\tNameUnknown          = 0\n+\tNameFullyQualifiedDN = 1\n+\tNameSamCompatible    = 2\n+\tNameDisplay          = 3\n+\tNameUniqueId         = 6\n+\tNameCanonical        = 7\n+\tNameUserPrincipal    = 8\n+\tNameCanonicalEx      = 9\n+\tNameServicePrincipal = 10\n+\tNameDnsDomain        = 12\n+)\n+\n+// This function returns 1 byte BOOLEAN rather than the 4 byte BOOL.\n+// http://blogs.msdn.com/b/drnick/archive/2007/12/19/windows-and-upn-format-credentials.aspx\n+//sys\tTranslateName(accName *uint16, accNameFormat uint32, desiredNameFormat uint32, translatedName *uint16, nSize *uint32) (err error) [failretval&0xff==0] = secur32.TranslateNameW\n+//sys\tGetUserNameEx(nameFormat uint32, nameBuffre *uint16, nSize *uint32) (err error) [failretval&0xff==0] = secur32.GetUserNameExW\n+\n+// TranslateAccountName converts a directory service\n+// object name from one format to another.\n+func TranslateAccountName(username string, from, to uint32, initSize int) (string, error) {\n+\tu, e := UTF16PtrFromString(username)\n+\tif e != nil {\n+\t\treturn \"\", e\n+\t}\n+\tn := uint32(50)\n+\tfor {\n+\t\tb := make([]uint16, n)\n+\t\te = TranslateName(u, from, to, &b[0], &n)\n+\t\tif e == nil {\n+\t\t\treturn UTF16ToString(b[:n]), nil\n+\t\t}\n+\t\tif e != ERROR_INSUFFICIENT_BUFFER {\n+\t\t\treturn \"\", e\n+\t\t}\n+\t\tif n <= uint32(len(b)) {\n+\t\t\treturn \"\", e\n+\t\t}\n+\t}\n+}\n+\n+const (\n+\t// do not reorder\n+\tNetSetupUnknownStatus = iota\n+\tNetSetupUnjoined\n+\tNetSetupWorkgroupName\n+\tNetSetupDomainName\n+)\n+\n+type UserInfo10 struct {\n+\tName       *uint16\n+\tComment    *uint16\n+\tUsrComment *uint16\n+\tFullName   *uint16\n+}\n+\n+//sys\tNetUserGetInfo(serverName *uint16, userName *uint16, level uint32, buf **byte) (neterr error) = netapi32.NetUserGetInfo\n+//sys\tNetGetJoinInformation(server *uint16, name **uint16, bufType *uint32) (neterr error) = netapi32.NetGetJoinInformation\n+//sys\tNetApiBufferFree(buf *byte) (neterr error) = netapi32.NetApiBufferFree\n+\n+const (\n+\t// do not reorder\n+\tSidTypeUser = 1 + iota\n+\tSidTypeGroup\n+\tSidTypeDomain\n+\tSidTypeAlias\n+\tSidTypeWellKnownGroup\n+\tSidTypeDeletedAccount\n+\tSidTypeInvalid\n+\tSidTypeUnknown\n+\tSidTypeComputer\n+\tSidTypeLabel\n+)\n+\n+type SidIdentifierAuthority struct {\n+\tValue [6]byte\n+}\n+\n+var (\n+\tSECURITY_NULL_SID_AUTHORITY        = SidIdentifierAuthority{[6]byte{0, 0, 0, 0, 0, 0}}\n+\tSECURITY_WORLD_SID_AUTHORITY       = SidIdentifierAuthority{[6]byte{0, 0, 0, 0, 0, 1}}\n+\tSECURITY_LOCAL_SID_AUTHORITY       = SidIdentifierAuthority{[6]byte{0, 0, 0, 0, 0, 2}}\n+\tSECURITY_CREATOR_SID_AUTHORITY     = SidIdentifierAuthority{[6]byte{0, 0, 0, 0, 0, 3}}\n+\tSECURITY_NON_UNIQUE_AUTHORITY      = SidIdentifierAuthority{[6]byte{0, 0, 0, 0, 0, 4}}\n+\tSECURITY_NT_AUTHORITY              = SidIdentifierAuthority{[6]byte{0, 0, 0, 0, 0, 5}}\n+\tSECURITY_MANDATORY_LABEL_AUTHORITY = SidIdentifierAuthority{[6]byte{0, 0, 0, 0, 0, 16}}\n+)\n+\n+const (\n+\tSECURITY_NULL_RID                   = 0\n+\tSECURITY_WORLD_RID                  = 0\n+\tSECURITY_LOCAL_RID                  = 0\n+\tSECURITY_CREATOR_OWNER_RID          = 0\n+\tSECURITY_CREATOR_GROUP_RID          = 1\n+\tSECURITY_DIALUP_RID                 = 1\n+\tSECURITY_NETWORK_RID                = 2\n+\tSECURITY_BATCH_RID                  = 3\n+\tSECURITY_INTERACTIVE_RID            = 4\n+\tSECURITY_LOGON_IDS_RID              = 5\n+\tSECURITY_SERVICE_RID                = 6\n+\tSECURITY_LOCAL_SYSTEM_RID           = 18\n+\tSECURITY_BUILTIN_DOMAIN_RID         = 32\n+\tSECURITY_PRINCIPAL_SELF_RID         = 10\n+\tSECURITY_CREATOR_OWNER_SERVER_RID   = 0x2\n+\tSECURITY_CREATOR_GROUP_SERVER_RID   = 0x3\n+\tSECURITY_LOGON_IDS_RID_COUNT        = 0x3\n+\tSECURITY_ANONYMOUS_LOGON_RID        = 0x7\n+\tSECURITY_PROXY_RID                  = 0x8\n+\tSECURITY_ENTERPRISE_CONTROLLERS_RID = 0x9\n+\tSECURITY_SERVER_LOGON_RID           = SECURITY_ENTERPRISE_CONTROLLERS_RID\n+\tSECURITY_AUTHENTICATED_USER_RID     = 0xb\n+\tSECURITY_RESTRICTED_CODE_RID        = 0xc\n+\tSECURITY_NT_NON_UNIQUE_RID          = 0x15\n+)\n+\n+// Predefined domain-relative RIDs for local groups.\n+// See https://msdn.microsoft.com/en-us/library/windows/desktop/aa379649(v=vs.85).aspx\n+const (\n+\tDOMAIN_ALIAS_RID_ADMINS                         = 0x220\n+\tDOMAIN_ALIAS_RID_USERS                          = 0x221\n+\tDOMAIN_ALIAS_RID_GUESTS                         = 0x222\n+\tDOMAIN_ALIAS_RID_POWER_USERS                    = 0x223\n+\tDOMAIN_ALIAS_RID_ACCOUNT_OPS                    = 0x224\n+\tDOMAIN_ALIAS_RID_SYSTEM_OPS                     = 0x225\n+\tDOMAIN_ALIAS_RID_PRINT_OPS                      = 0x226\n+\tDOMAIN_ALIAS_RID_BACKUP_OPS                     = 0x227\n+\tDOMAIN_ALIAS_RID_REPLICATOR                     = 0x228\n+\tDOMAIN_ALIAS_RID_RAS_SERVERS                    = 0x229\n+\tDOMAIN_ALIAS_RID_PREW2KCOMPACCESS               = 0x22a\n+\tDOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS           = 0x22b\n+\tDOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS      = 0x22c\n+\tDOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS = 0x22d\n+\tDOMAIN_ALIAS_RID_MONITORING_USERS               = 0x22e\n+\tDOMAIN_ALIAS_RID_LOGGING_USERS                  = 0x22f\n+\tDOMAIN_ALIAS_RID_AUTHORIZATIONACCESS            = 0x230\n+\tDOMAIN_ALIAS_RID_TS_LICENSE_SERVERS             = 0x231\n+\tDOMAIN_ALIAS_RID_DCOM_USERS                     = 0x232\n+\tDOMAIN_ALIAS_RID_IUSERS                         = 0x238\n+\tDOMAIN_ALIAS_RID_CRYPTO_OPERATORS               = 0x239\n+\tDOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP     = 0x23b\n+\tDOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP = 0x23c\n+\tDOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP        = 0x23d\n+\tDOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP      = 0x23e\n+)\n+\n+//sys\tLookupAccountSid(systemName *uint16, sid *SID, name *uint16, nameLen *uint32, refdDomainName *uint16, refdDomainNameLen *uint32, use *uint32) (err error) = advapi32.LookupAccountSidW\n+//sys\tLookupAccountName(systemName *uint16, accountName *uint16, sid *SID, sidLen *uint32, refdDomainName *uint16, refdDomainNameLen *uint32, use *uint32) (err error) = advapi32.LookupAccountNameW\n+//sys\tConvertSidToStringSid(sid *SID, stringSid **uint16) (err error) = advapi32.ConvertSidToStringSidW\n+//sys\tConvertStringSidToSid(stringSid *uint16, sid **SID) (err error) = advapi32.ConvertStringSidToSidW\n+//sys\tGetLengthSid(sid *SID) (len uint32) = advapi32.GetLengthSid\n+//sys\tCopySid(destSidLen uint32, destSid *SID, srcSid *SID) (err error) = advapi32.CopySid\n+//sys\tAllocateAndInitializeSid(identAuth *SidIdentifierAuthority, subAuth byte, subAuth0 uint32, subAuth1 uint32, subAuth2 uint32, subAuth3 uint32, subAuth4 uint32, subAuth5 uint32, subAuth6 uint32, subAuth7 uint32, sid **SID) (err error) = advapi32.AllocateAndInitializeSid\n+//sys\tcreateWellKnownSid(sidType WELL_KNOWN_SID_TYPE, domainSid *SID, sid *SID, sizeSid *uint32) (err error) = advapi32.CreateWellKnownSid\n+//sys\tisWellKnownSid(sid *SID, sidType WELL_KNOWN_SID_TYPE) (isWellKnown bool) = advapi32.IsWellKnownSid\n+//sys\tFreeSid(sid *SID) (err error) [failretval!=0] = advapi32.FreeSid\n+//sys\tEqualSid(sid1 *SID, sid2 *SID) (isEqual bool) = advapi32.EqualSid\n+//sys\tgetSidIdentifierAuthority(sid *SID) (authority *SidIdentifierAuthority) = advapi32.GetSidIdentifierAuthority\n+//sys\tgetSidSubAuthorityCount(sid *SID) (count *uint8) = advapi32.GetSidSubAuthorityCount\n+//sys\tgetSidSubAuthority(sid *SID, index uint32) (subAuthority *uint32) = advapi32.GetSidSubAuthority\n+//sys\tisValidSid(sid *SID) (isValid bool) = advapi32.IsValidSid\n+\n+// The security identifier (SID) structure is a variable-length\n+// structure used to uniquely identify users or groups.\n+type SID struct{}\n+\n+// StringToSid converts a string-format security identifier\n+// SID into a valid, functional SID.\n+func StringToSid(s string) (*SID, error) {\n+\tvar sid *SID\n+\tp, e := UTF16PtrFromString(s)\n+\tif e != nil {\n+\t\treturn nil, e\n+\t}\n+\te = ConvertStringSidToSid(p, &sid)\n+\tif e != nil {\n+\t\treturn nil, e\n+\t}\n+\tdefer LocalFree((Handle)(unsafe.Pointer(sid)))\n+\treturn sid.Copy()\n+}\n+\n+// LookupSID retrieves a security identifier SID for the account\n+// and the name of the domain on which the account was found.\n+// System specify target computer to search.\n+func LookupSID(system, account string) (sid *SID, domain string, accType uint32, err error) {\n+\tif len(account) == 0 {\n+\t\treturn nil, \"\", 0, syscall.EINVAL\n+\t}\n+\tacc, e := UTF16PtrFromString(account)\n+\tif e != nil {\n+\t\treturn nil, \"\", 0, e\n+\t}\n+\tvar sys *uint16\n+\tif len(system) > 0 {\n+\t\tsys, e = UTF16PtrFromString(system)\n+\t\tif e != nil {\n+\t\t\treturn nil, \"\", 0, e\n+\t\t}\n+\t}\n+\tn := uint32(50)\n+\tdn := uint32(50)\n+\tfor {\n+\t\tb := make([]byte, n)\n+\t\tdb := make([]uint16, dn)\n+\t\tsid = (*SID)(unsafe.Pointer(&b[0]))\n+\t\te = LookupAccountName(sys, acc, sid, &n, &db[0], &dn, &accType)\n+\t\tif e == nil {\n+\t\t\treturn sid, UTF16ToString(db), accType, nil\n+\t\t}\n+\t\tif e != ERROR_INSUFFICIENT_BUFFER {\n+\t\t\treturn nil, \"\", 0, e\n+\t\t}\n+\t\tif n <= uint32(len(b)) {\n+\t\t\treturn nil, \"\", 0, e\n+\t\t}\n+\t}\n+}\n+\n+// String converts SID to a string format suitable for display, storage, or transmission.\n+func (sid *SID) String() string {\n+\tvar s *uint16\n+\te := ConvertSidToStringSid(sid, &s)\n+\tif e != nil {\n+\t\treturn \"\"\n+\t}\n+\tdefer LocalFree((Handle)(unsafe.Pointer(s)))\n+\treturn UTF16ToString((*[256]uint16)(unsafe.Pointer(s))[:])\n+}\n+\n+// Len returns the length, in bytes, of a valid security identifier SID.\n+func (sid *SID) Len() int {\n+\treturn int(GetLengthSid(sid))\n+}\n+\n+// Copy creates a duplicate of security identifier SID.\n+func (sid *SID) Copy() (*SID, error) {\n+\tb := make([]byte, sid.Len())\n+\tsid2 := (*SID)(unsafe.Pointer(&b[0]))\n+\te := CopySid(uint32(len(b)), sid2, sid)\n+\tif e != nil {\n+\t\treturn nil, e\n+\t}\n+\treturn sid2, nil\n+}\n+\n+// IdentifierAuthority returns the identifier authority of the SID.\n+func (sid *SID) IdentifierAuthority() SidIdentifierAuthority {\n+\treturn *getSidIdentifierAuthority(sid)\n+}\n+\n+// SubAuthorityCount returns the number of sub-authorities in the SID.\n+func (sid *SID) SubAuthorityCount() uint8 {\n+\treturn *getSidSubAuthorityCount(sid)\n+}\n+\n+// SubAuthority returns the sub-authority of the SID as specified by\n+// the index, which must be less than sid.SubAuthorityCount().\n+func (sid *SID) SubAuthority(idx uint32) uint32 {\n+\tif idx >= uint32(sid.SubAuthorityCount()) {\n+\t\tpanic(\"sub-authority index out of range\")\n+\t}\n+\treturn *getSidSubAuthority(sid, idx)\n+}\n+\n+// IsValid returns whether the SID has a valid revision and length.\n+func (sid *SID) IsValid() bool {\n+\treturn isValidSid(sid)\n+}\n+\n+// Equals compares two SIDs for equality.\n+func (sid *SID) Equals(sid2 *SID) bool {\n+\treturn EqualSid(sid, sid2)\n+}\n+\n+// IsWellKnown determines whether the SID matches the well-known sidType.\n+func (sid *SID) IsWellKnown(sidType WELL_KNOWN_SID_TYPE) bool {\n+\treturn isWellKnownSid(sid, sidType)\n+}\n+\n+// LookupAccount retrieves the name of the account for this SID\n+// and the name of the first domain on which this SID is found.\n+// System specify target computer to search for.\n+func (sid *SID) LookupAccount(system string) (account, domain string, accType uint32, err error) {\n+\tvar sys *uint16\n+\tif len(system) > 0 {\n+\t\tsys, err = UTF16PtrFromString(system)\n+\t\tif err != nil {\n+\t\t\treturn \"\", \"\", 0, err\n+\t\t}\n+\t}\n+\tn := uint32(50)\n+\tdn := uint32(50)\n+\tfor {\n+\t\tb := make([]uint16, n)\n+\t\tdb := make([]uint16, dn)\n+\t\te := LookupAccountSid(sys, sid, &b[0], &n, &db[0], &dn, &accType)\n+\t\tif e == nil {\n+\t\t\treturn UTF16ToString(b), UTF16ToString(db), accType, nil\n+\t\t}\n+\t\tif e != ERROR_INSUFFICIENT_BUFFER {\n+\t\t\treturn \"\", \"\", 0, e\n+\t\t}\n+\t\tif n <= uint32(len(b)) {\n+\t\t\treturn \"\", \"\", 0, e\n+\t\t}\n+\t}\n+}\n+\n+// Various types of pre-specified SIDs that can be synthesized and compared at runtime.\n+type WELL_KNOWN_SID_TYPE uint32\n+\n+const (\n+\tWinNullSid                                    = 0\n+\tWinWorldSid                                   = 1\n+\tWinLocalSid                                   = 2\n+\tWinCreatorOwnerSid                            = 3\n+\tWinCreatorGroupSid                            = 4\n+\tWinCreatorOwnerServerSid                      = 5\n+\tWinCreatorGroupServerSid                      = 6\n+\tWinNtAuthoritySid                             = 7\n+\tWinDialupSid                                  = 8\n+\tWinNetworkSid                                 = 9\n+\tWinBatchSid                                   = 10\n+\tWinInteractiveSid                             = 11\n+\tWinServiceSid                                 = 12\n+\tWinAnonymousSid                               = 13\n+\tWinProxySid                                   = 14\n+\tWinEnterpriseControllersSid                   = 15\n+\tWinSelfSid                                    = 16\n+\tWinAuthenticatedUserSid                       = 17\n+\tWinRestrictedCodeSid                          = 18\n+\tWinTerminalServerSid                          = 19\n+\tWinRemoteLogonIdSid                           = 20\n+\tWinLogonIdsSid                                = 21\n+\tWinLocalSystemSid                             = 22\n+\tWinLocalServiceSid                            = 23\n+\tWinNetworkServiceSid                          = 24\n+\tWinBuiltinDomainSid                           = 25\n+\tWinBuiltinAdministratorsSid                   = 26\n+\tWinBuiltinUsersSid                            = 27\n+\tWinBuiltinGuestsSid                           = 28\n+\tWinBuiltinPowerUsersSid                       = 29\n+\tWinBuiltinAccountOperatorsSid                 = 30\n+\tWinBuiltinSystemOperatorsSid                  = 31\n+\tWinBuiltinPrintOperatorsSid                   = 32\n+\tWinBuiltinBackupOperatorsSid                  = 33\n+\tWinBuiltinReplicatorSid                       = 34\n+\tWinBuiltinPreWindows2000CompatibleAccessSid   = 35\n+\tWinBuiltinRemoteDesktopUsersSid               = 36\n+\tWinBuiltinNetworkConfigurationOperatorsSid    = 37\n+\tWinAccountAdministratorSid                    = 38\n+\tWinAccountGuestSid                            = 39\n+\tWinAccountKrbtgtSid                           = 40\n+\tWinAccountDomainAdminsSid                     = 41\n+\tWinAccountDomainUsersSid                      = 42\n+\tWinAccountDomainGuestsSid                     = 43\n+\tWinAccountComputersSid                        = 44\n+\tWinAccountControllersSid                      = 45\n+\tWinAccountCertAdminsSid                       = 46\n+\tWinAccountSchemaAdminsSid                     = 47\n+\tWinAccountEnterpriseAdminsSid                 = 48\n+\tWinAccountPolicyAdminsSid                     = 49\n+\tWinAccountRasAndIasServersSid                 = 50\n+\tWinNTLMAuthenticationSid                      = 51\n+\tWinDigestAuthenticationSid                    = 52\n+\tWinSChannelAuthenticationSid                  = 53\n+\tWinThisOrganizationSid                        = 54\n+\tWinOtherOrganizationSid                       = 55\n+\tWinBuiltinIncomingForestTrustBuildersSid      = 56\n+\tWinBuiltinPerfMonitoringUsersSid              = 57\n+\tWinBuiltinPerfLoggingUsersSid                 = 58\n+\tWinBuiltinAuthorizationAccessSid              = 59\n+\tWinBuiltinTerminalServerLicenseServersSid     = 60\n+\tWinBuiltinDCOMUsersSid                        = 61\n+\tWinBuiltinIUsersSid                           = 62\n+\tWinIUserSid                                   = 63\n+\tWinBuiltinCryptoOperatorsSid                  = 64\n+\tWinUntrustedLabelSid                          = 65\n+\tWinLowLabelSid                                = 66\n+\tWinMediumLabelSid                             = 67\n+\tWinHighLabelSid                               = 68\n+\tWinSystemLabelSid                             = 69\n+\tWinWriteRestrictedCodeSid                     = 70\n+\tWinCreatorOwnerRightsSid                      = 71\n+\tWinCacheablePrincipalsGroupSid                = 72\n+\tWinNonCacheablePrincipalsGroupSid             = 73\n+\tWinEnterpriseReadonlyControllersSid           = 74\n+\tWinAccountReadonlyControllersSid              = 75\n+\tWinBuiltinEventLogReadersGroup                = 76\n+\tWinNewEnterpriseReadonlyControllersSid        = 77\n+\tWinBuiltinCertSvcDComAccessGroup              = 78\n+\tWinMediumPlusLabelSid                         = 79\n+\tWinLocalLogonSid                              = 80\n+\tWinConsoleLogonSid                            = 81\n+\tWinThisOrganizationCertificateSid             = 82\n+\tWinApplicationPackageAuthoritySid             = 83\n+\tWinBuiltinAnyPackageSid                       = 84\n+\tWinCapabilityInternetClientSid                = 85\n+\tWinCapabilityInternetClientServerSid          = 86\n+\tWinCapabilityPrivateNetworkClientServerSid    = 87\n+\tWinCapabilityPicturesLibrarySid               = 88\n+\tWinCapabilityVideosLibrarySid                 = 89\n+\tWinCapabilityMusicLibrarySid                  = 90\n+\tWinCapabilityDocumentsLibrarySid              = 91\n+\tWinCapabilitySharedUserCertificatesSid        = 92\n+\tWinCapabilityEnterpriseAuthenticationSid      = 93\n+\tWinCapabilityRemovableStorageSid              = 94\n+\tWinBuiltinRDSRemoteAccessServersSid           = 95\n+\tWinBuiltinRDSEndpointServersSid               = 96\n+\tWinBuiltinRDSManagementServersSid             = 97\n+\tWinUserModeDriversSid                         = 98\n+\tWinBuiltinHyperVAdminsSid                     = 99\n+\tWinAccountCloneableControllersSid             = 100\n+\tWinBuiltinAccessControlAssistanceOperatorsSid = 101\n+\tWinBuiltinRemoteManagementUsersSid            = 102\n+\tWinAuthenticationAuthorityAssertedSid         = 103\n+\tWinAuthenticationServiceAssertedSid           = 104\n+\tWinLocalAccountSid                            = 105\n+\tWinLocalAccountAndAdministratorSid            = 106\n+\tWinAccountProtectedUsersSid                   = 107\n+\tWinCapabilityAppointmentsSid                  = 108\n+\tWinCapabilityContactsSid                      = 109\n+\tWinAccountDefaultSystemManagedSid             = 110\n+\tWinBuiltinDefaultSystemManagedGroupSid        = 111\n+\tWinBuiltinStorageReplicaAdminsSid             = 112\n+\tWinAccountKeyAdminsSid                        = 113\n+\tWinAccountEnterpriseKeyAdminsSid              = 114\n+\tWinAuthenticationKeyTrustSid                  = 115\n+\tWinAuthenticationKeyPropertyMFASid            = 116\n+\tWinAuthenticationKeyPropertyAttestationSid    = 117\n+\tWinAuthenticationFreshKeyAuthSid              = 118\n+\tWinBuiltinDeviceOwnersSid                     = 119\n+)\n+\n+// Creates a SID for a well-known predefined alias, generally using the constants of the form\n+// Win*Sid, for the local machine.\n+func CreateWellKnownSid(sidType WELL_KNOWN_SID_TYPE) (*SID, error) {\n+\treturn CreateWellKnownDomainSid(sidType, nil)\n+}\n+\n+// Creates a SID for a well-known predefined alias, generally using the constants of the form\n+// Win*Sid, for the domain specified by the domainSid parameter.\n+func CreateWellKnownDomainSid(sidType WELL_KNOWN_SID_TYPE, domainSid *SID) (*SID, error) {\n+\tn := uint32(50)\n+\tfor {\n+\t\tb := make([]byte, n)\n+\t\tsid := (*SID)(unsafe.Pointer(&b[0]))\n+\t\terr := createWellKnownSid(sidType, domainSid, sid, &n)\n+\t\tif err == nil {\n+\t\t\treturn sid, nil\n+\t\t}\n+\t\tif err != ERROR_INSUFFICIENT_BUFFER {\n+\t\t\treturn nil, err\n+\t\t}\n+\t\tif n <= uint32(len(b)) {\n+\t\t\treturn nil, err\n+\t\t}\n+\t}\n+}\n+\n+const (\n+\t// do not reorder\n+\tTOKEN_ASSIGN_PRIMARY = 1 << iota\n+\tTOKEN_DUPLICATE\n+\tTOKEN_IMPERSONATE\n+\tTOKEN_QUERY\n+\tTOKEN_QUERY_SOURCE\n+\tTOKEN_ADJUST_PRIVILEGES\n+\tTOKEN_ADJUST_GROUPS\n+\tTOKEN_ADJUST_DEFAULT\n+\tTOKEN_ADJUST_SESSIONID\n+\n+\tTOKEN_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED |\n+\t\tTOKEN_ASSIGN_PRIMARY |\n+\t\tTOKEN_DUPLICATE |\n+\t\tTOKEN_IMPERSONATE |\n+\t\tTOKEN_QUERY |\n+\t\tTOKEN_QUERY_SOURCE |\n+\t\tTOKEN_ADJUST_PRIVILEGES |\n+\t\tTOKEN_ADJUST_GROUPS |\n+\t\tTOKEN_ADJUST_DEFAULT |\n+\t\tTOKEN_ADJUST_SESSIONID\n+\tTOKEN_READ  = STANDARD_RIGHTS_READ | TOKEN_QUERY\n+\tTOKEN_WRITE = STANDARD_RIGHTS_WRITE |\n+\t\tTOKEN_ADJUST_PRIVILEGES |\n+\t\tTOKEN_ADJUST_GROUPS |\n+\t\tTOKEN_ADJUST_DEFAULT\n+\tTOKEN_EXECUTE = STANDARD_RIGHTS_EXECUTE\n+)\n+\n+const (\n+\t// do not reorder\n+\tTokenUser = 1 + iota\n+\tTokenGroups\n+\tTokenPrivileges\n+\tTokenOwner\n+\tTokenPrimaryGroup\n+\tTokenDefaultDacl\n+\tTokenSource\n+\tTokenType\n+\tTokenImpersonationLevel\n+\tTokenStatistics\n+\tTokenRestrictedSids\n+\tTokenSessionId\n+\tTokenGroupsAndPrivileges\n+\tTokenSessionReference\n+\tTokenSandBoxInert\n+\tTokenAuditPolicy\n+\tTokenOrigin\n+\tTokenElevationType\n+\tTokenLinkedToken\n+\tTokenElevation\n+\tTokenHasRestrictions\n+\tTokenAccessInformation\n+\tTokenVirtualizationAllowed\n+\tTokenVirtualizationEnabled\n+\tTokenIntegrityLevel\n+\tTokenUIAccess\n+\tTokenMandatoryPolicy\n+\tTokenLogonSid\n+\tMaxTokenInfoClass\n+)\n+\n+// Group attributes inside of Tokengroups.Groups[i].Attributes\n+const (\n+\tSE_GROUP_MANDATORY          = 0x00000001\n+\tSE_GROUP_ENABLED_BY_DEFAULT = 0x00000002\n+\tSE_GROUP_ENABLED            = 0x00000004\n+\tSE_GROUP_OWNER              = 0x00000008\n+\tSE_GROUP_USE_FOR_DENY_ONLY  = 0x00000010\n+\tSE_GROUP_INTEGRITY          = 0x00000020\n+\tSE_GROUP_INTEGRITY_ENABLED  = 0x00000040\n+\tSE_GROUP_LOGON_ID           = 0xC0000000\n+\tSE_GROUP_RESOURCE           = 0x20000000\n+\tSE_GROUP_VALID_ATTRIBUTES   = SE_GROUP_MANDATORY | SE_GROUP_ENABLED_BY_DEFAULT | SE_GROUP_ENABLED | SE_GROUP_OWNER | SE_GROUP_USE_FOR_DENY_ONLY | SE_GROUP_LOGON_ID | SE_GROUP_RESOURCE | SE_GROUP_INTEGRITY | SE_GROUP_INTEGRITY_ENABLED\n+)\n+\n+// Privilege attributes\n+const (\n+\tSE_PRIVILEGE_ENABLED_BY_DEFAULT = 0x00000001\n+\tSE_PRIVILEGE_ENABLED            = 0x00000002\n+\tSE_PRIVILEGE_REMOVED            = 0x00000004\n+\tSE_PRIVILEGE_USED_FOR_ACCESS    = 0x80000000\n+\tSE_PRIVILEGE_VALID_ATTRIBUTES   = SE_PRIVILEGE_ENABLED_BY_DEFAULT | SE_PRIVILEGE_ENABLED | SE_PRIVILEGE_REMOVED | SE_PRIVILEGE_USED_FOR_ACCESS\n+)\n+\n+// Token types\n+const (\n+\tTokenPrimary       = 1\n+\tTokenImpersonation = 2\n+)\n+\n+// Impersonation levels\n+const (\n+\tSecurityAnonymous      = 0\n+\tSecurityIdentification = 1\n+\tSecurityImpersonation  = 2\n+\tSecurityDelegation     = 3\n+)\n+\n+type LUID struct {\n+\tLowPart  uint32\n+\tHighPart int32\n+}\n+\n+type LUIDAndAttributes struct {\n+\tLuid       LUID\n+\tAttributes uint32\n+}\n+\n+type SIDAndAttributes struct {\n+\tSid        *SID\n+\tAttributes uint32\n+}\n+\n+type Tokenuser struct {\n+\tUser SIDAndAttributes\n+}\n+\n+type Tokenprimarygroup struct {\n+\tPrimaryGroup *SID\n+}\n+\n+type Tokengroups struct {\n+\tGroupCount uint32\n+\tGroups     [1]SIDAndAttributes // Use AllGroups() for iterating.\n+}\n+\n+// AllGroups returns a slice that can be used to iterate over the groups in g.\n+func (g *Tokengroups) AllGroups() []SIDAndAttributes {\n+\treturn (*[(1 << 28) - 1]SIDAndAttributes)(unsafe.Pointer(&g.Groups[0]))[:g.GroupCount:g.GroupCount]\n+}\n+\n+type Tokenprivileges struct {\n+\tPrivilegeCount uint32\n+\tPrivileges     [1]LUIDAndAttributes // Use AllPrivileges() for iterating.\n+}\n+\n+// AllPrivileges returns a slice that can be used to iterate over the privileges in p.\n+func (p *Tokenprivileges) AllPrivileges() []LUIDAndAttributes {\n+\treturn (*[(1 << 27) - 1]LUIDAndAttributes)(unsafe.Pointer(&p.Privileges[0]))[:p.PrivilegeCount:p.PrivilegeCount]\n+}\n+\n+type Tokenmandatorylabel struct {\n+\tLabel SIDAndAttributes\n+}\n+\n+func (tml *Tokenmandatorylabel) Size() uint32 {\n+\treturn uint32(unsafe.Sizeof(Tokenmandatorylabel{})) + GetLengthSid(tml.Label.Sid)\n+}\n+\n+// Authorization Functions\n+//sys\tcheckTokenMembership(tokenHandle Token, sidToCheck *SID, isMember *int32) (err error) = advapi32.CheckTokenMembership\n+//sys\tisTokenRestricted(tokenHandle Token) (ret bool, err error) [!failretval] = advapi32.IsTokenRestricted\n+//sys\tOpenProcessToken(process Handle, access uint32, token *Token) (err error) = advapi32.OpenProcessToken\n+//sys\tOpenThreadToken(thread Handle, access uint32, openAsSelf bool, token *Token) (err error) = advapi32.OpenThreadToken\n+//sys\tImpersonateSelf(impersonationlevel uint32) (err error) = advapi32.ImpersonateSelf\n+//sys\tRevertToSelf() (err error) = advapi32.RevertToSelf\n+//sys\tSetThreadToken(thread *Handle, token Token) (err error) = advapi32.SetThreadToken\n+//sys\tLookupPrivilegeValue(systemname *uint16, name *uint16, luid *LUID) (err error) = advapi32.LookupPrivilegeValueW\n+//sys\tAdjustTokenPrivileges(token Token, disableAllPrivileges bool, newstate *Tokenprivileges, buflen uint32, prevstate *Tokenprivileges, returnlen *uint32) (err error) = advapi32.AdjustTokenPrivileges\n+//sys\tAdjustTokenGroups(token Token, resetToDefault bool, newstate *Tokengroups, buflen uint32, prevstate *Tokengroups, returnlen *uint32) (err error) = advapi32.AdjustTokenGroups\n+//sys\tGetTokenInformation(token Token, infoClass uint32, info *byte, infoLen uint32, returnedLen *uint32) (err error) = advapi32.GetTokenInformation\n+//sys\tSetTokenInformation(token Token, infoClass uint32, info *byte, infoLen uint32) (err error) = advapi32.SetTokenInformation\n+//sys\tDuplicateTokenEx(existingToken Token, desiredAccess uint32, tokenAttributes *SecurityAttributes, impersonationLevel uint32, tokenType uint32, newToken *Token) (err error) = advapi32.DuplicateTokenEx\n+//sys\tGetUserProfileDirectory(t Token, dir *uint16, dirLen *uint32) (err error) = userenv.GetUserProfileDirectoryW\n+//sys\tgetSystemDirectory(dir *uint16, dirLen uint32) (len uint32, err error) = kernel32.GetSystemDirectoryW\n+//sys\tgetWindowsDirectory(dir *uint16, dirLen uint32) (len uint32, err error) = kernel32.GetWindowsDirectoryW\n+//sys\tgetSystemWindowsDirectory(dir *uint16, dirLen uint32) (len uint32, err error) = kernel32.GetSystemWindowsDirectoryW\n+\n+// An access token contains the security information for a logon session.\n+// The system creates an access token when a user logs on, and every\n+// process executed on behalf of the user has a copy of the token.\n+// The token identifies the user, the user's groups, and the user's\n+// privileges. The system uses the token to control access to securable\n+// objects and to control the ability of the user to perform various\n+// system-related operations on the local computer.\n+type Token Handle\n+\n+// OpenCurrentProcessToken opens an access token associated with current\n+// process with TOKEN_QUERY access. It is a real token that needs to be closed.\n+//\n+// Deprecated: Explicitly call OpenProcessToken(CurrentProcess(), ...)\n+// with the desired access instead, or use GetCurrentProcessToken for a\n+// TOKEN_QUERY token.\n+func OpenCurrentProcessToken() (Token, error) {\n+\tvar token Token\n+\terr := OpenProcessToken(CurrentProcess(), TOKEN_QUERY, &token)\n+\treturn token, err\n+}\n+\n+// GetCurrentProcessToken returns the access token associated with\n+// the current process. It is a pseudo token that does not need\n+// to be closed.\n+func GetCurrentProcessToken() Token {\n+\treturn Token(^uintptr(4 - 1))\n+}\n+\n+// GetCurrentThreadToken return the access token associated with\n+// the current thread. It is a pseudo token that does not need\n+// to be closed.\n+func GetCurrentThreadToken() Token {\n+\treturn Token(^uintptr(5 - 1))\n+}\n+\n+// GetCurrentThreadEffectiveToken returns the effective access token\n+// associated with the current thread. It is a pseudo token that does\n+// not need to be closed.\n+func GetCurrentThreadEffectiveToken() Token {\n+\treturn Token(^uintptr(6 - 1))\n+}\n+\n+// Close releases access to access token.\n+func (t Token) Close() error {\n+\treturn CloseHandle(Handle(t))\n+}\n+\n+// getInfo retrieves a specified type of information about an access token.\n+func (t Token) getInfo(class uint32, initSize int) (unsafe.Pointer, error) {\n+\tn := uint32(initSize)\n+\tfor {\n+\t\tb := make([]byte, n)\n+\t\te := GetTokenInformation(t, class, &b[0], uint32(len(b)), &n)\n+\t\tif e == nil {\n+\t\t\treturn unsafe.Pointer(&b[0]), nil\n+\t\t}\n+\t\tif e != ERROR_INSUFFICIENT_BUFFER {\n+\t\t\treturn nil, e\n+\t\t}\n+\t\tif n <= uint32(len(b)) {\n+\t\t\treturn nil, e\n+\t\t}\n+\t}\n+}\n+\n+// GetTokenUser retrieves access token t user account information.\n+func (t Token) GetTokenUser() (*Tokenuser, error) {\n+\ti, e := t.getInfo(TokenUser, 50)\n+\tif e != nil {\n+\t\treturn nil, e\n+\t}\n+\treturn (*Tokenuser)(i), nil\n+}\n+\n+// GetTokenGroups retrieves group accounts associated with access token t.\n+func (t Token) GetTokenGroups() (*Tokengroups, error) {\n+\ti, e := t.getInfo(TokenGroups, 50)\n+\tif e != nil {\n+\t\treturn nil, e\n+\t}\n+\treturn (*Tokengroups)(i), nil\n+}\n+\n+// GetTokenPrimaryGroup retrieves access token t primary group information.\n+// A pointer to a SID structure representing a group that will become\n+// the primary group of any objects created by a process using this access token.\n+func (t Token) GetTokenPrimaryGroup() (*Tokenprimarygroup, error) {\n+\ti, e := t.getInfo(TokenPrimaryGroup, 50)\n+\tif e != nil {\n+\t\treturn nil, e\n+\t}\n+\treturn (*Tokenprimarygroup)(i), nil\n+}\n+\n+// GetUserProfileDirectory retrieves path to the\n+// root directory of the access token t user's profile.\n+func (t Token) GetUserProfileDirectory() (string, error) {\n+\tn := uint32(100)\n+\tfor {\n+\t\tb := make([]uint16, n)\n+\t\te := GetUserProfileDirectory(t, &b[0], &n)\n+\t\tif e == nil {\n+\t\t\treturn UTF16ToString(b), nil\n+\t\t}\n+\t\tif e != ERROR_INSUFFICIENT_BUFFER {\n+\t\t\treturn \"\", e\n+\t\t}\n+\t\tif n <= uint32(len(b)) {\n+\t\t\treturn \"\", e\n+\t\t}\n+\t}\n+}\n+\n+// IsElevated returns whether the current token is elevated from a UAC perspective.\n+func (token Token) IsElevated() bool {\n+\tvar isElevated uint32\n+\tvar outLen uint32\n+\terr := GetTokenInformation(token, TokenElevation, (*byte)(unsafe.Pointer(&isElevated)), uint32(unsafe.Sizeof(isElevated)), &outLen)\n+\tif err != nil {\n+\t\treturn false\n+\t}\n+\treturn outLen == uint32(unsafe.Sizeof(isElevated)) && isElevated != 0\n+}\n+\n+// GetLinkedToken returns the linked token, which may be an elevated UAC token.\n+func (token Token) GetLinkedToken() (Token, error) {\n+\tvar linkedToken Token\n+\tvar outLen uint32\n+\terr := GetTokenInformation(token, TokenLinkedToken, (*byte)(unsafe.Pointer(&linkedToken)), uint32(unsafe.Sizeof(linkedToken)), &outLen)\n+\tif err != nil {\n+\t\treturn Token(0), err\n+\t}\n+\treturn linkedToken, nil\n+}\n+\n+// GetSystemDirectory retrieves the path to current location of the system\n+// directory, which is typically, though not always, `C:\\Windows\\System32`.\n+func GetSystemDirectory() (string, error) {\n+\tn := uint32(MAX_PATH)\n+\tfor {\n+\t\tb := make([]uint16, n)\n+\t\tl, e := getSystemDirectory(&b[0], n)\n+\t\tif e != nil {\n+\t\t\treturn \"\", e\n+\t\t}\n+\t\tif l <= n {\n+\t\t\treturn UTF16ToString(b[:l]), nil\n+\t\t}\n+\t\tn = l\n+\t}\n+}\n+\n+// GetWindowsDirectory retrieves the path to current location of the Windows\n+// directory, which is typically, though not always, `C:\\Windows`. This may\n+// be a private user directory in the case that the application is running\n+// under a terminal server.\n+func GetWindowsDirectory() (string, error) {\n+\tn := uint32(MAX_PATH)\n+\tfor {\n+\t\tb := make([]uint16, n)\n+\t\tl, e := getWindowsDirectory(&b[0], n)\n+\t\tif e != nil {\n+\t\t\treturn \"\", e\n+\t\t}\n+\t\tif l <= n {\n+\t\t\treturn UTF16ToString(b[:l]), nil\n+\t\t}\n+\t\tn = l\n+\t}\n+}\n+\n+// GetSystemWindowsDirectory retrieves the path to current location of the\n+// Windows directory, which is typically, though not always, `C:\\Windows`.\n+func GetSystemWindowsDirectory() (string, error) {\n+\tn := uint32(MAX_PATH)\n+\tfor {\n+\t\tb := make([]uint16, n)\n+\t\tl, e := getSystemWindowsDirectory(&b[0], n)\n+\t\tif e != nil {\n+\t\t\treturn \"\", e\n+\t\t}\n+\t\tif l <= n {\n+\t\t\treturn UTF16ToString(b[:l]), nil\n+\t\t}\n+\t\tn = l\n+\t}\n+}\n+\n+// IsMember reports whether the access token t is a member of the provided SID.\n+func (t Token) IsMember(sid *SID) (bool, error) {\n+\tvar b int32\n+\tif e := checkTokenMembership(t, sid, &b); e != nil {\n+\t\treturn false, e\n+\t}\n+\treturn b != 0, nil\n+}\n+\n+// IsRestricted reports whether the access token t is a restricted token.\n+func (t Token) IsRestricted() (isRestricted bool, err error) {\n+\tisRestricted, err = isTokenRestricted(t)\n+\tif !isRestricted && err == syscall.EINVAL {\n+\t\t// If err is EINVAL, this returned ERROR_SUCCESS indicating a non-restricted token.\n+\t\terr = nil\n+\t}\n+\treturn\n+}\n+\n+const (\n+\tWTS_CONSOLE_CONNECT        = 0x1\n+\tWTS_CONSOLE_DISCONNECT     = 0x2\n+\tWTS_REMOTE_CONNECT         = 0x3\n+\tWTS_REMOTE_DISCONNECT      = 0x4\n+\tWTS_SESSION_LOGON          = 0x5\n+\tWTS_SESSION_LOGOFF         = 0x6\n+\tWTS_SESSION_LOCK           = 0x7\n+\tWTS_SESSION_UNLOCK         = 0x8\n+\tWTS_SESSION_REMOTE_CONTROL = 0x9\n+\tWTS_SESSION_CREATE         = 0xa\n+\tWTS_SESSION_TERMINATE      = 0xb\n+)\n+\n+const (\n+\tWTSActive       = 0\n+\tWTSConnected    = 1\n+\tWTSConnectQuery = 2\n+\tWTSShadow       = 3\n+\tWTSDisconnected = 4\n+\tWTSIdle         = 5\n+\tWTSListen       = 6\n+\tWTSReset        = 7\n+\tWTSDown         = 8\n+\tWTSInit         = 9\n+)\n+\n+type WTSSESSION_NOTIFICATION struct {\n+\tSize      uint32\n+\tSessionID uint32\n+}\n+\n+type WTS_SESSION_INFO struct {\n+\tSessionID         uint32\n+\tWindowStationName *uint16\n+\tState             uint32\n+}\n+\n+//sys WTSQueryUserToken(session uint32, token *Token) (err error) = wtsapi32.WTSQueryUserToken\n+//sys WTSEnumerateSessions(handle Handle, reserved uint32, version uint32, sessions **WTS_SESSION_INFO, count *uint32) (err error) = wtsapi32.WTSEnumerateSessionsW\n+//sys WTSFreeMemory(ptr uintptr) = wtsapi32.WTSFreeMemory\n+//sys WTSGetActiveConsoleSessionId() (sessionID uint32)\n+\n+type ACL struct {\n+\taclRevision byte\n+\tsbz1        byte\n+\taclSize     uint16\n+\taceCount    uint16\n+\tsbz2        uint16\n+}\n+\n+type SECURITY_DESCRIPTOR struct {\n+\trevision byte\n+\tsbz1     byte\n+\tcontrol  SECURITY_DESCRIPTOR_CONTROL\n+\towner    *SID\n+\tgroup    *SID\n+\tsacl     *ACL\n+\tdacl     *ACL\n+}\n+\n+type SECURITY_QUALITY_OF_SERVICE struct {\n+\tLength              uint32\n+\tImpersonationLevel  uint32\n+\tContextTrackingMode byte\n+\tEffectiveOnly       byte\n+}\n+\n+// Constants for the ContextTrackingMode field of SECURITY_QUALITY_OF_SERVICE.\n+const (\n+\tSECURITY_STATIC_TRACKING  = 0\n+\tSECURITY_DYNAMIC_TRACKING = 1\n+)\n+\n+type SecurityAttributes struct {\n+\tLength             uint32\n+\tSecurityDescriptor *SECURITY_DESCRIPTOR\n+\tInheritHandle      uint32\n+}\n+\n+type SE_OBJECT_TYPE uint32\n+\n+// Constants for type SE_OBJECT_TYPE\n+const (\n+\tSE_UNKNOWN_OBJECT_TYPE     = 0\n+\tSE_FILE_OBJECT             = 1\n+\tSE_SERVICE                 = 2\n+\tSE_PRINTER                 = 3\n+\tSE_REGISTRY_KEY            = 4\n+\tSE_LMSHARE                 = 5\n+\tSE_KERNEL_OBJECT           = 6\n+\tSE_WINDOW_OBJECT           = 7\n+\tSE_DS_OBJECT               = 8\n+\tSE_DS_OBJECT_ALL           = 9\n+\tSE_PROVIDER_DEFINED_OBJECT = 10\n+\tSE_WMIGUID_OBJECT          = 11\n+\tSE_REGISTRY_WOW64_32KEY    = 12\n+\tSE_REGISTRY_WOW64_64KEY    = 13\n+)\n+\n+type SECURITY_INFORMATION uint32\n+\n+// Constants for type SECURITY_INFORMATION\n+const (\n+\tOWNER_SECURITY_INFORMATION            = 0x00000001\n+\tGROUP_SECURITY_INFORMATION            = 0x00000002\n+\tDACL_SECURITY_INFORMATION             = 0x00000004\n+\tSACL_SECURITY_INFORMATION             = 0x00000008\n+\tLABEL_SECURITY_INFORMATION            = 0x00000010\n+\tATTRIBUTE_SECURITY_INFORMATION        = 0x00000020\n+\tSCOPE_SECURITY_INFORMATION            = 0x00000040\n+\tBACKUP_SECURITY_INFORMATION           = 0x00010000\n+\tPROTECTED_DACL_SECURITY_INFORMATION   = 0x80000000\n+\tPROTECTED_SACL_SECURITY_INFORMATION   = 0x40000000\n+\tUNPROTECTED_DACL_SECURITY_INFORMATION = 0x20000000\n+\tUNPROTECTED_SACL_SECURITY_INFORMATION = 0x10000000\n+)\n+\n+type SECURITY_DESCRIPTOR_CONTROL uint16\n+\n+// Constants for type SECURITY_DESCRIPTOR_CONTROL\n+const (\n+\tSE_OWNER_DEFAULTED       = 0x0001\n+\tSE_GROUP_DEFAULTED       = 0x0002\n+\tSE_DACL_PRESENT          = 0x0004\n+\tSE_DACL_DEFAULTED        = 0x0008\n+\tSE_SACL_PRESENT          = 0x0010\n+\tSE_SACL_DEFAULTED        = 0x0020\n+\tSE_DACL_AUTO_INHERIT_REQ = 0x0100\n+\tSE_SACL_AUTO_INHERIT_REQ = 0x0200\n+\tSE_DACL_AUTO_INHERITED   = 0x0400\n+\tSE_SACL_AUTO_INHERITED   = 0x0800\n+\tSE_DACL_PROTECTED        = 0x1000\n+\tSE_SACL_PROTECTED        = 0x2000\n+\tSE_RM_CONTROL_VALID      = 0x4000\n+\tSE_SELF_RELATIVE         = 0x8000\n+)\n+\n+type ACCESS_MASK uint32\n+\n+// Constants for type ACCESS_MASK\n+const (\n+\tDELETE                   = 0x00010000\n+\tREAD_CONTROL             = 0x00020000\n+\tWRITE_DAC                = 0x00040000\n+\tWRITE_OWNER              = 0x00080000\n+\tSYNCHRONIZE              = 0x00100000\n+\tSTANDARD_RIGHTS_REQUIRED = 0x000F0000\n+\tSTANDARD_RIGHTS_READ     = READ_CONTROL\n+\tSTANDARD_RIGHTS_WRITE    = READ_CONTROL\n+\tSTANDARD_RIGHTS_EXECUTE  = READ_CONTROL\n+\tSTANDARD_RIGHTS_ALL      = 0x001F0000\n+\tSPECIFIC_RIGHTS_ALL      = 0x0000FFFF\n+\tACCESS_SYSTEM_SECURITY   = 0x01000000\n+\tMAXIMUM_ALLOWED          = 0x02000000\n+\tGENERIC_READ             = 0x80000000\n+\tGENERIC_WRITE            = 0x40000000\n+\tGENERIC_EXECUTE          = 0x20000000\n+\tGENERIC_ALL              = 0x10000000\n+)\n+\n+type ACCESS_MODE uint32\n+\n+// Constants for type ACCESS_MODE\n+const (\n+\tNOT_USED_ACCESS   = 0\n+\tGRANT_ACCESS      = 1\n+\tSET_ACCESS        = 2\n+\tDENY_ACCESS       = 3\n+\tREVOKE_ACCESS     = 4\n+\tSET_AUDIT_SUCCESS = 5\n+\tSET_AUDIT_FAILURE = 6\n+)\n+\n+// Constants for AceFlags and Inheritance fields\n+const (\n+\tNO_INHERITANCE                     = 0x0\n+\tSUB_OBJECTS_ONLY_INHERIT           = 0x1\n+\tSUB_CONTAINERS_ONLY_INHERIT        = 0x2\n+\tSUB_CONTAINERS_AND_OBJECTS_INHERIT = 0x3\n+\tINHERIT_NO_PROPAGATE               = 0x4\n+\tINHERIT_ONLY                       = 0x8\n+\tINHERITED_ACCESS_ENTRY             = 0x10\n+\tINHERITED_PARENT                   = 0x10000000\n+\tINHERITED_GRANDPARENT              = 0x20000000\n+\tOBJECT_INHERIT_ACE                 = 0x1\n+\tCONTAINER_INHERIT_ACE              = 0x2\n+\tNO_PROPAGATE_INHERIT_ACE           = 0x4\n+\tINHERIT_ONLY_ACE                   = 0x8\n+\tINHERITED_ACE                      = 0x10\n+\tVALID_INHERIT_FLAGS                = 0x1F\n+)\n+\n+type MULTIPLE_TRUSTEE_OPERATION uint32\n+\n+// Constants for MULTIPLE_TRUSTEE_OPERATION\n+const (\n+\tNO_MULTIPLE_TRUSTEE    = 0\n+\tTRUSTEE_IS_IMPERSONATE = 1\n+)\n+\n+type TRUSTEE_FORM uint32\n+\n+// Constants for TRUSTEE_FORM\n+const (\n+\tTRUSTEE_IS_SID              = 0\n+\tTRUSTEE_IS_NAME             = 1\n+\tTRUSTEE_BAD_FORM            = 2\n+\tTRUSTEE_IS_OBJECTS_AND_SID  = 3\n+\tTRUSTEE_IS_OBJECTS_AND_NAME = 4\n+)\n+\n+type TRUSTEE_TYPE uint32\n+\n+// Constants for TRUSTEE_TYPE\n+const (\n+\tTRUSTEE_IS_UNKNOWN          = 0\n+\tTRUSTEE_IS_USER             = 1\n+\tTRUSTEE_IS_GROUP            = 2\n+\tTRUSTEE_IS_DOMAIN           = 3\n+\tTRUSTEE_IS_ALIAS            = 4\n+\tTRUSTEE_IS_WELL_KNOWN_GROUP = 5\n+\tTRUSTEE_IS_DELETED          = 6\n+\tTRUSTEE_IS_INVALID          = 7\n+\tTRUSTEE_IS_COMPUTER         = 8\n+)\n+\n+// Constants for ObjectsPresent field\n+const (\n+\tACE_OBJECT_TYPE_PRESENT           = 0x1\n+\tACE_INHERITED_OBJECT_TYPE_PRESENT = 0x2\n+)\n+\n+type EXPLICIT_ACCESS struct {\n+\tAccessPermissions ACCESS_MASK\n+\tAccessMode        ACCESS_MODE\n+\tInheritance       uint32\n+\tTrustee           TRUSTEE\n+}\n+\n+// This type is the union inside of TRUSTEE and must be created using one of the TrusteeValueFrom* functions.\n+type TrusteeValue uintptr\n+\n+func TrusteeValueFromString(str string) TrusteeValue {\n+\treturn TrusteeValue(unsafe.Pointer(StringToUTF16Ptr(str)))\n+}\n+func TrusteeValueFromSID(sid *SID) TrusteeValue {\n+\treturn TrusteeValue(unsafe.Pointer(sid))\n+}\n+func TrusteeValueFromObjectsAndSid(objectsAndSid *OBJECTS_AND_SID) TrusteeValue {\n+\treturn TrusteeValue(unsafe.Pointer(objectsAndSid))\n+}\n+func TrusteeValueFromObjectsAndName(objectsAndName *OBJECTS_AND_NAME) TrusteeValue {\n+\treturn TrusteeValue(unsafe.Pointer(objectsAndName))\n+}\n+\n+type TRUSTEE struct {\n+\tMultipleTrustee          *TRUSTEE\n+\tMultipleTrusteeOperation MULTIPLE_TRUSTEE_OPERATION\n+\tTrusteeForm              TRUSTEE_FORM\n+\tTrusteeType              TRUSTEE_TYPE\n+\tTrusteeValue             TrusteeValue\n+}\n+\n+type OBJECTS_AND_SID struct {\n+\tObjectsPresent          uint32\n+\tObjectTypeGuid          GUID\n+\tInheritedObjectTypeGuid GUID\n+\tSid                     *SID\n+}\n+\n+type OBJECTS_AND_NAME struct {\n+\tObjectsPresent          uint32\n+\tObjectType              SE_OBJECT_TYPE\n+\tObjectTypeName          *uint16\n+\tInheritedObjectTypeName *uint16\n+\tName                    *uint16\n+}\n+\n+//sys\tgetSecurityInfo(handle Handle, objectType SE_OBJECT_TYPE, securityInformation SECURITY_INFORMATION, owner **SID, group **SID, dacl **ACL, sacl **ACL, sd **SECURITY_DESCRIPTOR) (ret error) = advapi32.GetSecurityInfo\n+//sys\tSetSecurityInfo(handle Handle, objectType SE_OBJECT_TYPE, securityInformation SECURITY_INFORMATION, owner *SID, group *SID, dacl *ACL, sacl *ACL) (ret error) = advapi32.SetSecurityInfo\n+//sys\tgetNamedSecurityInfo(objectName string, objectType SE_OBJECT_TYPE, securityInformation SECURITY_INFORMATION, owner **SID, group **SID, dacl **ACL, sacl **ACL, sd **SECURITY_DESCRIPTOR) (ret error) = advapi32.GetNamedSecurityInfoW\n+//sys\tSetNamedSecurityInfo(objectName string, objectType SE_OBJECT_TYPE, securityInformation SECURITY_INFORMATION, owner *SID, group *SID, dacl *ACL, sacl *ACL) (ret error) = advapi32.SetNamedSecurityInfoW\n+//sys\tSetKernelObjectSecurity(handle Handle, securityInformation SECURITY_INFORMATION, securityDescriptor *SECURITY_DESCRIPTOR) (err error) = advapi32.SetKernelObjectSecurity\n+\n+//sys\tbuildSecurityDescriptor(owner *TRUSTEE, group *TRUSTEE, countAccessEntries uint32, accessEntries *EXPLICIT_ACCESS, countAuditEntries uint32, auditEntries *EXPLICIT_ACCESS, oldSecurityDescriptor *SECURITY_DESCRIPTOR, sizeNewSecurityDescriptor *uint32, newSecurityDescriptor **SECURITY_DESCRIPTOR) (ret error) = advapi32.BuildSecurityDescriptorW\n+//sys\tinitializeSecurityDescriptor(absoluteSD *SECURITY_DESCRIPTOR, revision uint32) (err error) = advapi32.InitializeSecurityDescriptor\n+\n+//sys\tgetSecurityDescriptorControl(sd *SECURITY_DESCRIPTOR, control *SECURITY_DESCRIPTOR_CONTROL, revision *uint32) (err error) = advapi32.GetSecurityDescriptorControl\n+//sys\tgetSecurityDescriptorDacl(sd *SECURITY_DESCRIPTOR, daclPresent *bool, dacl **ACL, daclDefaulted *bool) (err error) = advapi32.GetSecurityDescriptorDacl\n+//sys\tgetSecurityDescriptorSacl(sd *SECURITY_DESCRIPTOR, saclPresent *bool, sacl **ACL, saclDefaulted *bool) (err error) = advapi32.GetSecurityDescriptorSacl\n+//sys\tgetSecurityDescriptorOwner(sd *SECURITY_DESCRIPTOR, owner **SID, ownerDefaulted *bool) (err error) = advapi32.GetSecurityDescriptorOwner\n+//sys\tgetSecurityDescriptorGroup(sd *SECURITY_DESCRIPTOR, group **SID, groupDefaulted *bool) (err error) = advapi32.GetSecurityDescriptorGroup\n+//sys\tgetSecurityDescriptorLength(sd *SECURITY_DESCRIPTOR) (len uint32) = advapi32.GetSecurityDescriptorLength\n+//sys\tgetSecurityDescriptorRMControl(sd *SECURITY_DESCRIPTOR, rmControl *uint8) (ret error) [failretval!=0] = advapi32.GetSecurityDescriptorRMControl\n+//sys\tisValidSecurityDescriptor(sd *SECURITY_DESCRIPTOR) (isValid bool) = advapi32.IsValidSecurityDescriptor\n+\n+//sys\tsetSecurityDescriptorControl(sd *SECURITY_DESCRIPTOR, controlBitsOfInterest SECURITY_DESCRIPTOR_CONTROL, controlBitsToSet SECURITY_DESCRIPTOR_CONTROL) (err error) = advapi32.SetSecurityDescriptorControl\n+//sys\tsetSecurityDescriptorDacl(sd *SECURITY_DESCRIPTOR, daclPresent bool, dacl *ACL, daclDefaulted bool) (err error) = advapi32.SetSecurityDescriptorDacl\n+//sys\tsetSecurityDescriptorSacl(sd *SECURITY_DESCRIPTOR, saclPresent bool, sacl *ACL, saclDefaulted bool) (err error) = advapi32.SetSecurityDescriptorSacl\n+//sys\tsetSecurityDescriptorOwner(sd *SECURITY_DESCRIPTOR, owner *SID, ownerDefaulted bool) (err error) = advapi32.SetSecurityDescriptorOwner\n+//sys\tsetSecurityDescriptorGroup(sd *SECURITY_DESCRIPTOR, group *SID, groupDefaulted bool) (err error) = advapi32.SetSecurityDescriptorGroup\n+//sys\tsetSecurityDescriptorRMControl(sd *SECURITY_DESCRIPTOR, rmControl *uint8) = advapi32.SetSecurityDescriptorRMControl\n+\n+//sys\tconvertStringSecurityDescriptorToSecurityDescriptor(str string, revision uint32, sd **SECURITY_DESCRIPTOR, size *uint32) (err error) = advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorW\n+//sys\tconvertSecurityDescriptorToStringSecurityDescriptor(sd *SECURITY_DESCRIPTOR, revision uint32, securityInformation SECURITY_INFORMATION, str **uint16, strLen *uint32) (err error) = advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorW\n+\n+//sys\tmakeAbsoluteSD(selfRelativeSD *SECURITY_DESCRIPTOR, absoluteSD *SECURITY_DESCRIPTOR, absoluteSDSize *uint32, dacl *ACL, daclSize *uint32, sacl *ACL, saclSize *uint32, owner *SID, ownerSize *uint32, group *SID, groupSize *uint32) (err error) = advapi32.MakeAbsoluteSD\n+//sys\tmakeSelfRelativeSD(absoluteSD *SECURITY_DESCRIPTOR, selfRelativeSD *SECURITY_DESCRIPTOR, selfRelativeSDSize *uint32) (err error) = advapi32.MakeSelfRelativeSD\n+\n+//sys\tsetEntriesInAcl(countExplicitEntries uint32, explicitEntries *EXPLICIT_ACCESS, oldACL *ACL, newACL **ACL) (ret error) = advapi32.SetEntriesInAclW\n+\n+// Control returns the security descriptor control bits.\n+func (sd *SECURITY_DESCRIPTOR) Control() (control SECURITY_DESCRIPTOR_CONTROL, revision uint32, err error) {\n+\terr = getSecurityDescriptorControl(sd, &control, &revision)\n+\treturn\n+}\n+\n+// SetControl sets the security descriptor control bits.\n+func (sd *SECURITY_DESCRIPTOR) SetControl(controlBitsOfInterest SECURITY_DESCRIPTOR_CONTROL, controlBitsToSet SECURITY_DESCRIPTOR_CONTROL) error {\n+\treturn setSecurityDescriptorControl(sd, controlBitsOfInterest, controlBitsToSet)\n+}\n+\n+// RMControl returns the security descriptor resource manager control bits.\n+func (sd *SECURITY_DESCRIPTOR) RMControl() (control uint8, err error) {\n+\terr = getSecurityDescriptorRMControl(sd, &control)\n+\treturn\n+}\n+\n+// SetRMControl sets the security descriptor resource manager control bits.\n+func (sd *SECURITY_DESCRIPTOR) SetRMControl(rmControl uint8) {\n+\tsetSecurityDescriptorRMControl(sd, &rmControl)\n+}\n+\n+// DACL returns the security descriptor DACL and whether it was defaulted. The dacl return value may be nil\n+// if a DACL exists but is an \"empty DACL\", meaning fully permissive. If the DACL does not exist, err returns\n+// ERROR_OBJECT_NOT_FOUND.\n+func (sd *SECURITY_DESCRIPTOR) DACL() (dacl *ACL, defaulted bool, err error) {\n+\tvar present bool\n+\terr = getSecurityDescriptorDacl(sd, &present, &dacl, &defaulted)\n+\tif !present {\n+\t\terr = ERROR_OBJECT_NOT_FOUND\n+\t}\n+\treturn\n+}\n+\n+// SetDACL sets the absolute security descriptor DACL.\n+func (absoluteSD *SECURITY_DESCRIPTOR) SetDACL(dacl *ACL, present, defaulted bool) error {\n+\treturn setSecurityDescriptorDacl(absoluteSD, present, dacl, defaulted)\n+}\n+\n+// SACL returns the security descriptor SACL and whether it was defaulted. The sacl return value may be nil\n+// if a SACL exists but is an \"empty SACL\", meaning fully permissive. If the SACL does not exist, err returns\n+// ERROR_OBJECT_NOT_FOUND.\n+func (sd *SECURITY_DESCRIPTOR) SACL() (sacl *ACL, defaulted bool, err error) {\n+\tvar present bool\n+\terr = getSecurityDescriptorSacl(sd, &present, &sacl, &defaulted)\n+\tif !present {\n+\t\terr = ERROR_OBJECT_NOT_FOUND\n+\t}\n+\treturn\n+}\n+\n+// SetSACL sets the absolute security descriptor SACL.\n+func (absoluteSD *SECURITY_DESCRIPTOR) SetSACL(sacl *ACL, present, defaulted bool) error {\n+\treturn setSecurityDescriptorSacl(absoluteSD, present, sacl, defaulted)\n+}\n+\n+// Owner returns the security descriptor owner and whether it was defaulted.\n+func (sd *SECURITY_DESCRIPTOR) Owner() (owner *SID, defaulted bool, err error) {\n+\terr = getSecurityDescriptorOwner(sd, &owner, &defaulted)\n+\treturn\n+}\n+\n+// SetOwner sets the absolute security descriptor owner.\n+func (absoluteSD *SECURITY_DESCRIPTOR) SetOwner(owner *SID, defaulted bool) error {\n+\treturn setSecurityDescriptorOwner(absoluteSD, owner, defaulted)\n+}\n+\n+// Group returns the security descriptor group and whether it was defaulted.\n+func (sd *SECURITY_DESCRIPTOR) Group() (group *SID, defaulted bool, err error) {\n+\terr = getSecurityDescriptorGroup(sd, &group, &defaulted)\n+\treturn\n+}\n+\n+// SetGroup sets the absolute security descriptor owner.\n+func (absoluteSD *SECURITY_DESCRIPTOR) SetGroup(group *SID, defaulted bool) error {\n+\treturn setSecurityDescriptorGroup(absoluteSD, group, defaulted)\n+}\n+\n+// Length returns the length of the security descriptor.\n+func (sd *SECURITY_DESCRIPTOR) Length() uint32 {\n+\treturn getSecurityDescriptorLength(sd)\n+}\n+\n+// IsValid returns whether the security descriptor is valid.\n+func (sd *SECURITY_DESCRIPTOR) IsValid() bool {\n+\treturn isValidSecurityDescriptor(sd)\n+}\n+\n+// String returns the SDDL form of the security descriptor, with a function signature that can be\n+// used with %v formatting directives.\n+func (sd *SECURITY_DESCRIPTOR) String() string {\n+\tvar sddl *uint16\n+\terr := convertSecurityDescriptorToStringSecurityDescriptor(sd, 1, 0xff, &sddl, nil)\n+\tif err != nil {\n+\t\treturn \"\"\n+\t}\n+\tdefer LocalFree(Handle(unsafe.Pointer(sddl)))\n+\treturn UTF16PtrToString(sddl)\n+}\n+\n+// ToAbsolute converts a self-relative security descriptor into an absolute one.\n+func (selfRelativeSD *SECURITY_DESCRIPTOR) ToAbsolute() (absoluteSD *SECURITY_DESCRIPTOR, err error) {\n+\tcontrol, _, err := selfRelativeSD.Control()\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tif control&SE_SELF_RELATIVE == 0 {\n+\t\terr = ERROR_INVALID_PARAMETER\n+\t\treturn\n+\t}\n+\tvar absoluteSDSize, daclSize, saclSize, ownerSize, groupSize uint32\n+\terr = makeAbsoluteSD(selfRelativeSD, nil, &absoluteSDSize,\n+\t\tnil, &daclSize, nil, &saclSize, nil, &ownerSize, nil, &groupSize)\n+\tswitch err {\n+\tcase ERROR_INSUFFICIENT_BUFFER:\n+\tcase nil:\n+\t\t// makeAbsoluteSD is expected to fail, but it succeeds.\n+\t\treturn nil, ERROR_INTERNAL_ERROR\n+\tdefault:\n+\t\treturn nil, err\n+\t}\n+\tif absoluteSDSize > 0 {\n+\t\tabsoluteSD = (*SECURITY_DESCRIPTOR)(unsafe.Pointer(&make([]byte, absoluteSDSize)[0]))\n+\t}\n+\tvar (\n+\t\tdacl  *ACL\n+\t\tsacl  *ACL\n+\t\towner *SID\n+\t\tgroup *SID\n+\t)\n+\tif daclSize > 0 {\n+\t\tdacl = (*ACL)(unsafe.Pointer(&make([]byte, daclSize)[0]))\n+\t}\n+\tif saclSize > 0 {\n+\t\tsacl = (*ACL)(unsafe.Pointer(&make([]byte, saclSize)[0]))\n+\t}\n+\tif ownerSize > 0 {\n+\t\towner = (*SID)(unsafe.Pointer(&make([]byte, ownerSize)[0]))\n+\t}\n+\tif groupSize > 0 {\n+\t\tgroup = (*SID)(unsafe.Pointer(&make([]byte, groupSize)[0]))\n+\t}\n+\terr = makeAbsoluteSD(selfRelativeSD, absoluteSD, &absoluteSDSize,\n+\t\tdacl, &daclSize, sacl, &saclSize, owner, &ownerSize, group, &groupSize)\n+\treturn\n+}\n+\n+// ToSelfRelative converts an absolute security descriptor into a self-relative one.\n+func (absoluteSD *SECURITY_DESCRIPTOR) ToSelfRelative() (selfRelativeSD *SECURITY_DESCRIPTOR, err error) {\n+\tcontrol, _, err := absoluteSD.Control()\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tif control&SE_SELF_RELATIVE != 0 {\n+\t\terr = ERROR_INVALID_PARAMETER\n+\t\treturn\n+\t}\n+\tvar selfRelativeSDSize uint32\n+\terr = makeSelfRelativeSD(absoluteSD, nil, &selfRelativeSDSize)\n+\tswitch err {\n+\tcase ERROR_INSUFFICIENT_BUFFER:\n+\tcase nil:\n+\t\t// makeSelfRelativeSD is expected to fail, but it succeeds.\n+\t\treturn nil, ERROR_INTERNAL_ERROR\n+\tdefault:\n+\t\treturn nil, err\n+\t}\n+\tif selfRelativeSDSize > 0 {\n+\t\tselfRelativeSD = (*SECURITY_DESCRIPTOR)(unsafe.Pointer(&make([]byte, selfRelativeSDSize)[0]))\n+\t}\n+\terr = makeSelfRelativeSD(absoluteSD, selfRelativeSD, &selfRelativeSDSize)\n+\treturn\n+}\n+\n+func (selfRelativeSD *SECURITY_DESCRIPTOR) copySelfRelativeSecurityDescriptor() *SECURITY_DESCRIPTOR {\n+\tsdLen := int(selfRelativeSD.Length())\n+\tconst min = int(unsafe.Sizeof(SECURITY_DESCRIPTOR{}))\n+\tif sdLen < min {\n+\t\tsdLen = min\n+\t}\n+\n+\tvar src []byte\n+\th := (*unsafeheader.Slice)(unsafe.Pointer(&src))\n+\th.Data = unsafe.Pointer(selfRelativeSD)\n+\th.Len = sdLen\n+\th.Cap = sdLen\n+\n+\tconst psize = int(unsafe.Sizeof(uintptr(0)))\n+\n+\tvar dst []byte\n+\th = (*unsafeheader.Slice)(unsafe.Pointer(&dst))\n+\talloc := make([]uintptr, (sdLen+psize-1)/psize)\n+\th.Data = (*unsafeheader.Slice)(unsafe.Pointer(&alloc)).Data\n+\th.Len = sdLen\n+\th.Cap = sdLen\n+\n+\tcopy(dst, src)\n+\treturn (*SECURITY_DESCRIPTOR)(unsafe.Pointer(&dst[0]))\n+}\n+\n+// SecurityDescriptorFromString converts an SDDL string describing a security descriptor into a\n+// self-relative security descriptor object allocated on the Go heap.\n+func SecurityDescriptorFromString(sddl string) (sd *SECURITY_DESCRIPTOR, err error) {\n+\tvar winHeapSD *SECURITY_DESCRIPTOR\n+\terr = convertStringSecurityDescriptorToSecurityDescriptor(sddl, 1, &winHeapSD, nil)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tdefer LocalFree(Handle(unsafe.Pointer(winHeapSD)))\n+\treturn winHeapSD.copySelfRelativeSecurityDescriptor(), nil\n+}\n+\n+// GetSecurityInfo queries the security information for a given handle and returns the self-relative security\n+// descriptor result on the Go heap.\n+func GetSecurityInfo(handle Handle, objectType SE_OBJECT_TYPE, securityInformation SECURITY_INFORMATION) (sd *SECURITY_DESCRIPTOR, err error) {\n+\tvar winHeapSD *SECURITY_DESCRIPTOR\n+\terr = getSecurityInfo(handle, objectType, securityInformation, nil, nil, nil, nil, &winHeapSD)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tdefer LocalFree(Handle(unsafe.Pointer(winHeapSD)))\n+\treturn winHeapSD.copySelfRelativeSecurityDescriptor(), nil\n+}\n+\n+// GetNamedSecurityInfo queries the security information for a given named object and returns the self-relative security\n+// descriptor result on the Go heap.\n+func GetNamedSecurityInfo(objectName string, objectType SE_OBJECT_TYPE, securityInformation SECURITY_INFORMATION) (sd *SECURITY_DESCRIPTOR, err error) {\n+\tvar winHeapSD *SECURITY_DESCRIPTOR\n+\terr = getNamedSecurityInfo(objectName, objectType, securityInformation, nil, nil, nil, nil, &winHeapSD)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tdefer LocalFree(Handle(unsafe.Pointer(winHeapSD)))\n+\treturn winHeapSD.copySelfRelativeSecurityDescriptor(), nil\n+}\n+\n+// BuildSecurityDescriptor makes a new security descriptor using the input trustees, explicit access lists, and\n+// prior security descriptor to be merged, any of which can be nil, returning the self-relative security descriptor\n+// result on the Go heap.\n+func BuildSecurityDescriptor(owner *TRUSTEE, group *TRUSTEE, accessEntries []EXPLICIT_ACCESS, auditEntries []EXPLICIT_ACCESS, mergedSecurityDescriptor *SECURITY_DESCRIPTOR) (sd *SECURITY_DESCRIPTOR, err error) {\n+\tvar winHeapSD *SECURITY_DESCRIPTOR\n+\tvar winHeapSDSize uint32\n+\tvar firstAccessEntry *EXPLICIT_ACCESS\n+\tif len(accessEntries) > 0 {\n+\t\tfirstAccessEntry = &accessEntries[0]\n+\t}\n+\tvar firstAuditEntry *EXPLICIT_ACCESS\n+\tif len(auditEntries) > 0 {\n+\t\tfirstAuditEntry = &auditEntries[0]\n+\t}\n+\terr = buildSecurityDescriptor(owner, group, uint32(len(accessEntries)), firstAccessEntry, uint32(len(auditEntries)), firstAuditEntry, mergedSecurityDescriptor, &winHeapSDSize, &winHeapSD)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tdefer LocalFree(Handle(unsafe.Pointer(winHeapSD)))\n+\treturn winHeapSD.copySelfRelativeSecurityDescriptor(), nil\n+}\n+\n+// NewSecurityDescriptor creates and initializes a new absolute security descriptor.\n+func NewSecurityDescriptor() (absoluteSD *SECURITY_DESCRIPTOR, err error) {\n+\tabsoluteSD = &SECURITY_DESCRIPTOR{}\n+\terr = initializeSecurityDescriptor(absoluteSD, 1)\n+\treturn\n+}\n+\n+// ACLFromEntries returns a new ACL on the Go heap containing a list of explicit entries as well as those of another ACL.\n+// Both explicitEntries and mergedACL are optional and can be nil.\n+func ACLFromEntries(explicitEntries []EXPLICIT_ACCESS, mergedACL *ACL) (acl *ACL, err error) {\n+\tvar firstExplicitEntry *EXPLICIT_ACCESS\n+\tif len(explicitEntries) > 0 {\n+\t\tfirstExplicitEntry = &explicitEntries[0]\n+\t}\n+\tvar winHeapACL *ACL\n+\terr = setEntriesInAcl(uint32(len(explicitEntries)), firstExplicitEntry, mergedACL, &winHeapACL)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tdefer LocalFree(Handle(unsafe.Pointer(winHeapACL)))\n+\taclBytes := make([]byte, winHeapACL.aclSize)\n+\tcopy(aclBytes, (*[(1 << 31) - 1]byte)(unsafe.Pointer(winHeapACL))[:len(aclBytes):len(aclBytes)])\n+\treturn (*ACL)(unsafe.Pointer(&aclBytes[0])), nil\n+}"
    },
    {
      "sha": "f8deca8397ae68b0bd5c884192eb80ee1d3eb1d7",
      "filename": "backend/vendor/golang.org/x/sys/windows/service.go",
      "status": "added",
      "additions": 247,
      "deletions": 0,
      "changes": 247,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fservice.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fservice.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fservice.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd",
      "patch": "@@ -0,0 +1,247 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build windows\n+// +build windows\n+\n+package windows\n+\n+const (\n+\tSC_MANAGER_CONNECT            = 1\n+\tSC_MANAGER_CREATE_SERVICE     = 2\n+\tSC_MANAGER_ENUMERATE_SERVICE  = 4\n+\tSC_MANAGER_LOCK               = 8\n+\tSC_MANAGER_QUERY_LOCK_STATUS  = 16\n+\tSC_MANAGER_MODIFY_BOOT_CONFIG = 32\n+\tSC_MANAGER_ALL_ACCESS         = 0xf003f\n+)\n+\n+const (\n+\tSERVICE_KERNEL_DRIVER       = 1\n+\tSERVICE_FILE_SYSTEM_DRIVER  = 2\n+\tSERVICE_ADAPTER             = 4\n+\tSERVICE_RECOGNIZER_DRIVER   = 8\n+\tSERVICE_WIN32_OWN_PROCESS   = 16\n+\tSERVICE_WIN32_SHARE_PROCESS = 32\n+\tSERVICE_WIN32               = SERVICE_WIN32_OWN_PROCESS | SERVICE_WIN32_SHARE_PROCESS\n+\tSERVICE_INTERACTIVE_PROCESS = 256\n+\tSERVICE_DRIVER              = SERVICE_KERNEL_DRIVER | SERVICE_FILE_SYSTEM_DRIVER | SERVICE_RECOGNIZER_DRIVER\n+\tSERVICE_TYPE_ALL            = SERVICE_WIN32 | SERVICE_ADAPTER | SERVICE_DRIVER | SERVICE_INTERACTIVE_PROCESS\n+\n+\tSERVICE_BOOT_START   = 0\n+\tSERVICE_SYSTEM_START = 1\n+\tSERVICE_AUTO_START   = 2\n+\tSERVICE_DEMAND_START = 3\n+\tSERVICE_DISABLED     = 4\n+\n+\tSERVICE_ERROR_IGNORE   = 0\n+\tSERVICE_ERROR_NORMAL   = 1\n+\tSERVICE_ERROR_SEVERE   = 2\n+\tSERVICE_ERROR_CRITICAL = 3\n+\n+\tSC_STATUS_PROCESS_INFO = 0\n+\n+\tSC_ACTION_NONE        = 0\n+\tSC_ACTION_RESTART     = 1\n+\tSC_ACTION_REBOOT      = 2\n+\tSC_ACTION_RUN_COMMAND = 3\n+\n+\tSERVICE_STOPPED          = 1\n+\tSERVICE_START_PENDING    = 2\n+\tSERVICE_STOP_PENDING     = 3\n+\tSERVICE_RUNNING          = 4\n+\tSERVICE_CONTINUE_PENDING = 5\n+\tSERVICE_PAUSE_PENDING    = 6\n+\tSERVICE_PAUSED           = 7\n+\tSERVICE_NO_CHANGE        = 0xffffffff\n+\n+\tSERVICE_ACCEPT_STOP                  = 1\n+\tSERVICE_ACCEPT_PAUSE_CONTINUE        = 2\n+\tSERVICE_ACCEPT_SHUTDOWN              = 4\n+\tSERVICE_ACCEPT_PARAMCHANGE           = 8\n+\tSERVICE_ACCEPT_NETBINDCHANGE         = 16\n+\tSERVICE_ACCEPT_HARDWAREPROFILECHANGE = 32\n+\tSERVICE_ACCEPT_POWEREVENT            = 64\n+\tSERVICE_ACCEPT_SESSIONCHANGE         = 128\n+\tSERVICE_ACCEPT_PRESHUTDOWN           = 256\n+\n+\tSERVICE_CONTROL_STOP                  = 1\n+\tSERVICE_CONTROL_PAUSE                 = 2\n+\tSERVICE_CONTROL_CONTINUE              = 3\n+\tSERVICE_CONTROL_INTERROGATE           = 4\n+\tSERVICE_CONTROL_SHUTDOWN              = 5\n+\tSERVICE_CONTROL_PARAMCHANGE           = 6\n+\tSERVICE_CONTROL_NETBINDADD            = 7\n+\tSERVICE_CONTROL_NETBINDREMOVE         = 8\n+\tSERVICE_CONTROL_NETBINDENABLE         = 9\n+\tSERVICE_CONTROL_NETBINDDISABLE        = 10\n+\tSERVICE_CONTROL_DEVICEEVENT           = 11\n+\tSERVICE_CONTROL_HARDWAREPROFILECHANGE = 12\n+\tSERVICE_CONTROL_POWEREVENT            = 13\n+\tSERVICE_CONTROL_SESSIONCHANGE         = 14\n+\tSERVICE_CONTROL_PRESHUTDOWN           = 15\n+\n+\tSERVICE_ACTIVE    = 1\n+\tSERVICE_INACTIVE  = 2\n+\tSERVICE_STATE_ALL = 3\n+\n+\tSERVICE_QUERY_CONFIG         = 1\n+\tSERVICE_CHANGE_CONFIG        = 2\n+\tSERVICE_QUERY_STATUS         = 4\n+\tSERVICE_ENUMERATE_DEPENDENTS = 8\n+\tSERVICE_START                = 16\n+\tSERVICE_STOP                 = 32\n+\tSERVICE_PAUSE_CONTINUE       = 64\n+\tSERVICE_INTERROGATE          = 128\n+\tSERVICE_USER_DEFINED_CONTROL = 256\n+\tSERVICE_ALL_ACCESS           = STANDARD_RIGHTS_REQUIRED | SERVICE_QUERY_CONFIG | SERVICE_CHANGE_CONFIG | SERVICE_QUERY_STATUS | SERVICE_ENUMERATE_DEPENDENTS | SERVICE_START | SERVICE_STOP | SERVICE_PAUSE_CONTINUE | SERVICE_INTERROGATE | SERVICE_USER_DEFINED_CONTROL\n+\n+\tSERVICE_RUNS_IN_SYSTEM_PROCESS = 1\n+\n+\tSERVICE_CONFIG_DESCRIPTION              = 1\n+\tSERVICE_CONFIG_FAILURE_ACTIONS          = 2\n+\tSERVICE_CONFIG_DELAYED_AUTO_START_INFO  = 3\n+\tSERVICE_CONFIG_FAILURE_ACTIONS_FLAG     = 4\n+\tSERVICE_CONFIG_SERVICE_SID_INFO         = 5\n+\tSERVICE_CONFIG_REQUIRED_PRIVILEGES_INFO = 6\n+\tSERVICE_CONFIG_PRESHUTDOWN_INFO         = 7\n+\tSERVICE_CONFIG_TRIGGER_INFO             = 8\n+\tSERVICE_CONFIG_PREFERRED_NODE           = 9\n+\tSERVICE_CONFIG_LAUNCH_PROTECTED         = 12\n+\n+\tSERVICE_SID_TYPE_NONE         = 0\n+\tSERVICE_SID_TYPE_UNRESTRICTED = 1\n+\tSERVICE_SID_TYPE_RESTRICTED   = 2 | SERVICE_SID_TYPE_UNRESTRICTED\n+\n+\tSC_ENUM_PROCESS_INFO = 0\n+\n+\tSERVICE_NOTIFY_STATUS_CHANGE    = 2\n+\tSERVICE_NOTIFY_STOPPED          = 0x00000001\n+\tSERVICE_NOTIFY_START_PENDING    = 0x00000002\n+\tSERVICE_NOTIFY_STOP_PENDING     = 0x00000004\n+\tSERVICE_NOTIFY_RUNNING          = 0x00000008\n+\tSERVICE_NOTIFY_CONTINUE_PENDING = 0x00000010\n+\tSERVICE_NOTIFY_PAUSE_PENDING    = 0x00000020\n+\tSERVICE_NOTIFY_PAUSED           = 0x00000040\n+\tSERVICE_NOTIFY_CREATED          = 0x00000080\n+\tSERVICE_NOTIFY_DELETED          = 0x00000100\n+\tSERVICE_NOTIFY_DELETE_PENDING   = 0x00000200\n+\n+\tSC_EVENT_DATABASE_CHANGE = 0\n+\tSC_EVENT_PROPERTY_CHANGE = 1\n+\tSC_EVENT_STATUS_CHANGE   = 2\n+\n+\tSERVICE_START_REASON_DEMAND             = 0x00000001\n+\tSERVICE_START_REASON_AUTO               = 0x00000002\n+\tSERVICE_START_REASON_TRIGGER            = 0x00000004\n+\tSERVICE_START_REASON_RESTART_ON_FAILURE = 0x00000008\n+\tSERVICE_START_REASON_DELAYEDAUTO        = 0x00000010\n+\n+\tSERVICE_DYNAMIC_INFORMATION_LEVEL_START_REASON = 1\n+)\n+\n+type SERVICE_STATUS struct {\n+\tServiceType             uint32\n+\tCurrentState            uint32\n+\tControlsAccepted        uint32\n+\tWin32ExitCode           uint32\n+\tServiceSpecificExitCode uint32\n+\tCheckPoint              uint32\n+\tWaitHint                uint32\n+}\n+\n+type SERVICE_TABLE_ENTRY struct {\n+\tServiceName *uint16\n+\tServiceProc uintptr\n+}\n+\n+type QUERY_SERVICE_CONFIG struct {\n+\tServiceType      uint32\n+\tStartType        uint32\n+\tErrorControl     uint32\n+\tBinaryPathName   *uint16\n+\tLoadOrderGroup   *uint16\n+\tTagId            uint32\n+\tDependencies     *uint16\n+\tServiceStartName *uint16\n+\tDisplayName      *uint16\n+}\n+\n+type SERVICE_DESCRIPTION struct {\n+\tDescription *uint16\n+}\n+\n+type SERVICE_DELAYED_AUTO_START_INFO struct {\n+\tIsDelayedAutoStartUp uint32\n+}\n+\n+type SERVICE_STATUS_PROCESS struct {\n+\tServiceType             uint32\n+\tCurrentState            uint32\n+\tControlsAccepted        uint32\n+\tWin32ExitCode           uint32\n+\tServiceSpecificExitCode uint32\n+\tCheckPoint              uint32\n+\tWaitHint                uint32\n+\tProcessId               uint32\n+\tServiceFlags            uint32\n+}\n+\n+type ENUM_SERVICE_STATUS_PROCESS struct {\n+\tServiceName          *uint16\n+\tDisplayName          *uint16\n+\tServiceStatusProcess SERVICE_STATUS_PROCESS\n+}\n+\n+type SERVICE_NOTIFY struct {\n+\tVersion               uint32\n+\tNotifyCallback        uintptr\n+\tContext               uintptr\n+\tNotificationStatus    uint32\n+\tServiceStatus         SERVICE_STATUS_PROCESS\n+\tNotificationTriggered uint32\n+\tServiceNames          *uint16\n+}\n+\n+type SERVICE_FAILURE_ACTIONS struct {\n+\tResetPeriod  uint32\n+\tRebootMsg    *uint16\n+\tCommand      *uint16\n+\tActionsCount uint32\n+\tActions      *SC_ACTION\n+}\n+\n+type SC_ACTION struct {\n+\tType  uint32\n+\tDelay uint32\n+}\n+\n+type QUERY_SERVICE_LOCK_STATUS struct {\n+\tIsLocked     uint32\n+\tLockOwner    *uint16\n+\tLockDuration uint32\n+}\n+\n+//sys\tOpenSCManager(machineName *uint16, databaseName *uint16, access uint32) (handle Handle, err error) [failretval==0] = advapi32.OpenSCManagerW\n+//sys\tCloseServiceHandle(handle Handle) (err error) = advapi32.CloseServiceHandle\n+//sys\tCreateService(mgr Handle, serviceName *uint16, displayName *uint16, access uint32, srvType uint32, startType uint32, errCtl uint32, pathName *uint16, loadOrderGroup *uint16, tagId *uint32, dependencies *uint16, serviceStartName *uint16, password *uint16) (handle Handle, err error) [failretval==0] = advapi32.CreateServiceW\n+//sys\tOpenService(mgr Handle, serviceName *uint16, access uint32) (handle Handle, err error) [failretval==0] = advapi32.OpenServiceW\n+//sys\tDeleteService(service Handle) (err error) = advapi32.DeleteService\n+//sys\tStartService(service Handle, numArgs uint32, argVectors **uint16) (err error) = advapi32.StartServiceW\n+//sys\tQueryServiceStatus(service Handle, status *SERVICE_STATUS) (err error) = advapi32.QueryServiceStatus\n+//sys\tQueryServiceLockStatus(mgr Handle, lockStatus *QUERY_SERVICE_LOCK_STATUS, bufSize uint32, bytesNeeded *uint32) (err error) = advapi32.QueryServiceLockStatusW\n+//sys\tControlService(service Handle, control uint32, status *SERVICE_STATUS) (err error) = advapi32.ControlService\n+//sys\tStartServiceCtrlDispatcher(serviceTable *SERVICE_TABLE_ENTRY) (err error) = advapi32.StartServiceCtrlDispatcherW\n+//sys\tSetServiceStatus(service Handle, serviceStatus *SERVICE_STATUS) (err error) = advapi32.SetServiceStatus\n+//sys\tChangeServiceConfig(service Handle, serviceType uint32, startType uint32, errorControl uint32, binaryPathName *uint16, loadOrderGroup *uint16, tagId *uint32, dependencies *uint16, serviceStartName *uint16, password *uint16, displayName *uint16) (err error) = advapi32.ChangeServiceConfigW\n+//sys\tQueryServiceConfig(service Handle, serviceConfig *QUERY_SERVICE_CONFIG, bufSize uint32, bytesNeeded *uint32) (err error) = advapi32.QueryServiceConfigW\n+//sys\tChangeServiceConfig2(service Handle, infoLevel uint32, info *byte) (err error) = advapi32.ChangeServiceConfig2W\n+//sys\tQueryServiceConfig2(service Handle, infoLevel uint32, buff *byte, buffSize uint32, bytesNeeded *uint32) (err error) = advapi32.QueryServiceConfig2W\n+//sys\tEnumServicesStatusEx(mgr Handle, infoLevel uint32, serviceType uint32, serviceState uint32, services *byte, bufSize uint32, bytesNeeded *uint32, servicesReturned *uint32, resumeHandle *uint32, groupName *uint16) (err error) = advapi32.EnumServicesStatusExW\n+//sys\tQueryServiceStatusEx(service Handle, infoLevel uint32, buff *byte, buffSize uint32, bytesNeeded *uint32) (err error) = advapi32.QueryServiceStatusEx\n+//sys\tNotifyServiceStatusChange(service Handle, notifyMask uint32, notifier *SERVICE_NOTIFY) (ret error) = advapi32.NotifyServiceStatusChangeW\n+//sys\tSubscribeServiceChangeNotifications(service Handle, eventType uint32, callback uintptr, callbackCtx uintptr, subscription *uintptr) (ret error) = sechost.SubscribeServiceChangeNotifications?\n+//sys\tUnsubscribeServiceChangeNotifications(subscription uintptr) = sechost.UnsubscribeServiceChangeNotifications?\n+//sys\tRegisterServiceCtrlHandlerEx(serviceName *uint16, handlerProc uintptr, context uintptr) (handle Handle, err error) = advapi32.RegisterServiceCtrlHandlerExW\n+//sys\tQueryServiceDynamicInformation(service Handle, infoLevel uint32, dynamicInfo unsafe.Pointer) (err error) = advapi32.QueryServiceDynamicInformation?"
    },
    {
      "sha": "f8126482fa5aad2b66d5aec88594d22b8dcb72fd",
      "filename": "backend/vendor/golang.org/x/sys/windows/setupapi_windows.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsetupapi_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsetupapi_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsetupapi_windows.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd"
    },
    {
      "sha": "4fc01434e4a2a28709808ebf3fe9016f5e42c7f0",
      "filename": "backend/vendor/golang.org/x/sys/windows/str.go",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fstr.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fstr.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fstr.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd"
    },
    {
      "sha": "8732cdb957f39a51e686765ffec2bdc4c970792e",
      "filename": "backend/vendor/golang.org/x/sys/windows/syscall.go",
      "status": "added",
      "additions": 105,
      "deletions": 0,
      "changes": 105,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd"
    },
    {
      "sha": "3723b2c224c8528f9dd4c7c6eadf52a4fa8784bf",
      "filename": "backend/vendor/golang.org/x/sys/windows/syscall_windows.go",
      "status": "added",
      "additions": 1808,
      "deletions": 0,
      "changes": 1808,
      "blob_url": "https://github.com/umputun/remark42/blob/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1b90604b2d019002e66c5f9f74c1e09ce45db2cd/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall_windows.go?ref=1b90604b2d019002e66c5f9f74c1e09ce45db2cd"
    }
  ]
}
