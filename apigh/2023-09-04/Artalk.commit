{
  "sha": "9ea6e8d9816456a674b97ee5764a782ef7d6a4f2",
  "node_id": "C_kwDOCQOkhNoAKDllYTZlOGQ5ODE2NDU2YTY3NGI5N2VlNTc2NGE3ODJlZjdkNmE0ZjI",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2023-09-01T13:59:42Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2023-09-01T13:59:57Z"
    },
    "message": "build: fix build-app workflow by disable cache",
    "tree": {
      "sha": "8c41b9bb20ad8d774480692a0f928c784a32765b",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/8c41b9bb20ad8d774480692a0f928c784a32765b"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/9ea6e8d9816456a674b97ee5764a782ef7d6a4f2",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZPHuXQAKCRDUbg8O6nwT\nagFAAQDpelVjKFINXGQzj75nqaktSEQQNAXMWXMqLQYVoxtPGgEA4lTZFeLcLLOI\n9Syu2LEUtNukCxWXQoxpAePu5rWVpAI=\n=xXdx\n-----END PGP SIGNATURE-----",
      "payload": "tree 8c41b9bb20ad8d774480692a0f928c784a32765b\nparent 2c89c2d633e5ab17a999ceb8004913d3804bf4c5\nauthor qwqcode <qwqcode@gmail.com> 1693576782 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1693576797 +0800\n\nbuild: fix build-app workflow by disable cache\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/9ea6e8d9816456a674b97ee5764a782ef7d6a4f2",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/9ea6e8d9816456a674b97ee5764a782ef7d6a4f2",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/9ea6e8d9816456a674b97ee5764a782ef7d6a4f2/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2c89c2d633e5ab17a999ceb8004913d3804bf4c5",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/2c89c2d633e5ab17a999ceb8004913d3804bf4c5",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/2c89c2d633e5ab17a999ceb8004913d3804bf4c5"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 14,
    "deletions": 12
  },
  "files": [
    {
      "sha": "29918c5f6747316c2e39912072fa935b78243aa2",
      "filename": ".github/workflows/build-app.yml",
      "status": "modified",
      "additions": 14,
      "deletions": 12,
      "changes": 26,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/9ea6e8d9816456a674b97ee5764a782ef7d6a4f2/.github%2Fworkflows%2Fbuild-app.yml",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/9ea6e8d9816456a674b97ee5764a782ef7d6a4f2/.github%2Fworkflows%2Fbuild-app.yml",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/.github%2Fworkflows%2Fbuild-app.yml?ref=9ea6e8d9816456a674b97ee5764a782ef7d6a4f2",
      "patch": "@@ -30,23 +30,25 @@ jobs:\n \n           echo \"VERSION=${VERSION}\" >> $GITHUB_ENV\n \n-      - name: Docker Image Cache\n-        id: docker-cache\n-        uses: actions/cache@v3\n-        with:\n-          path: ${{ env.CACHE_DIR }}\n-          key: docker-image-go-cross-${{ env.GO_VERSION }}\n+      # disable cache because the err `no space left on device`\n+      # - name: Docker Image Cache\n+      #   id: docker-cache\n+      #   uses: actions/cache@v3\n+      #   with:\n+      #     path: ${{ env.CACHE_DIR }}\n+      #     key: docker-image-go-cross-${{ env.GO_VERSION }}\n \n       - name: Pull Docker Image\n-        if: steps.docker-cache.outputs.cache-hit != 'true'\n+        # if: steps.docker-cache.outputs.cache-hit != 'true'\n         run: |\n           docker pull \"${DOCKER_IMG}:v${GO_VERSION}\"\n-          mkdir -p \"${CACHE_DIR}\"\n-          docker save -o \"${CACHE_DIR}/go-cross.tar\" \"${DOCKER_IMG}:v${GO_VERSION}\"\n \n-      - name: Restore Docker Image from Cache\n-        if: steps.docker-cache.outputs.cache-hit == 'true'\n-        run: docker load -i ${CACHE_DIR}/go-cross.tar\n+          # mkdir -p \"${CACHE_DIR}\"\n+          # docker save -o \"${CACHE_DIR}/go-cross.tar\" \"${DOCKER_IMG}:v${GO_VERSION}\"\n+\n+      # - name: Restore Docker Image from Cache\n+      #   if: steps.docker-cache.outputs.cache-hit == 'true'\n+      #   run: docker load -i ${CACHE_DIR}/go-cross.tar\n \n       - name: Setup git-chglog\n         run: |"
    }
  ]
}
