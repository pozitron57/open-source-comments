{
  "sha": "b034e514a7ba1fe5b59accc2cae285dd735a0276",
  "node_id": "C_kwDOCQOkhNoAKGIwMzRlNTE0YTdiYTFmZTViNTlhY2NjMmNhZTI4NWRkNzM1YTAyNzY",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "22412567+qwqcode@users.noreply.github.com",
      "date": "2023-08-23T10:06:03Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2023-08-23T10:06:03Z"
    },
    "message": "refactor(cache): remove cached fields in struct to save memory (#555)",
    "tree": {
      "sha": "2e51b126201a01f931922ea81a3bdd6636fe57b5",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/2e51b126201a01f931922ea81a3bdd6636fe57b5"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/b034e514a7ba1fe5b59accc2cae285dd735a0276",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJk5doLCRBK7hj4Ov3rIwAAzMQIAK/sVQn7rrhp94geZkC7s6wq\nR+dp9BVt3rFb+AqyexFHgbJ9Kz2k94YBonx3vUw6k51NAzT5AY0jaNH+ozKLt9+m\nQZKi+e53Yovw51mYubGXj1T/FM1djzv8Mt//tAje/B5N5qPyqYmIYK8xFsXxb8mZ\n8euUCU4Ec6MMJ3EaqR16N/A57da7RJi/AfeA5iSTYlfDLeHQzGzybmV7AA8FZAAJ\nbBc4nphM4YRDvLxjLOZMYJVPaBXt/P6aKdp6QQAP7K5+Kj6vO8OkqWBciSiVL4+R\nR4DCQgJXOQnf7Sb1C9S5/vwss17vNXKfukt9uqzeD1DwecOqjd7BXycaWHbUOic=\n=3yhE\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 2e51b126201a01f931922ea81a3bdd6636fe57b5\nparent b88a26dcae796bf6e4d765c17c48cfd5aa7056ca\nauthor qwqcode <22412567+qwqcode@users.noreply.github.com> 1692785163 +0800\ncommitter GitHub <noreply@github.com> 1692785163 +0800\n\nrefactor(cache): remove cached fields in struct to save memory (#555)\n\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/b034e514a7ba1fe5b59accc2cae285dd735a0276",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/b034e514a7ba1fe5b59accc2cae285dd735a0276",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/b034e514a7ba1fe5b59accc2cae285dd735a0276/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b88a26dcae796bf6e4d765c17c48cfd5aa7056ca",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/b88a26dcae796bf6e4d765c17c48cfd5aa7056ca",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/b88a26dcae796bf6e4d765c17c48cfd5aa7056ca"
    }
  ],
  "stats": {
    "total": 202,
    "additions": 125,
    "deletions": 77
  },
  "files": [
    {
      "sha": "0fa92ebbc0832ee65091cc5c455f33516ecb18e2",
      "filename": "internal/entity/comment.go",
      "status": "modified",
      "additions": 0,
      "deletions": 10,
      "changes": 10,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fentity%2Fcomment.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fentity%2Fcomment.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fentity%2Fcomment.go?ref=b034e514a7ba1fe5b59accc2cae285dd735a0276",
      "patch": "@@ -1,8 +1,6 @@\n package entity\n \n import (\n-\t\"sync\"\n-\n \t\"gorm.io/gorm\"\n )\n \n@@ -24,14 +22,6 @@ type Comment struct {\n \tIsPending   bool `gorm:\"default:false\"` // 待审\n \tIsPinned    bool `gorm:\"default:false\"` // 置顶\n \n-\tUser User `gorm:\"-\"`\n-\tPage Page `gorm:\"-\"`\n-\tSite Site `gorm:\"-\"`\n-\n-\tOnce_User sync.Once `gorm:\"-\"`\n-\tOnce_Page sync.Once `gorm:\"-\"`\n-\tOnce_Site sync.Once `gorm:\"-\"`\n-\n \tVoteUp   int\n \tVoteDown int\n }"
    },
    {
      "sha": "5d90cb21b3c5cd89931d6828f6ee18d3a3958f3f",
      "filename": "internal/entity/notify.go",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fentity%2Fnotify.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fentity%2Fnotify.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fentity%2Fnotify.go?ref=b034e514a7ba1fe5b59accc2cae285dd735a0276",
      "patch": "@@ -2,7 +2,6 @@ package entity\n \n import (\n \t\"math/rand\"\n-\t\"sync\"\n \t\"time\"\n \n \t\"gorm.io/gorm\"\n@@ -20,19 +19,12 @@ type Notify struct {\n \tEmailAt   *time.Time\n \n \tKey string `gorm:\"index;size:255\"`\n-\n-\tComment      Comment   `gorm:\"-\"`\n-\tOnce_Comment sync.Once `gorm:\"-\"`\n }\n \n func (n Notify) IsEmpty() bool {\n \treturn n.ID == 0\n }\n \n-func (n *Notify) SetComment(comment Comment) {\n-\tn.Comment = comment\n-}\n-\n // 操作时的验证密钥（判断是否本人操作）\n func (n *Notify) GenerateKey() {\n \tletterRunes := []rune(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\")"
    },
    {
      "sha": "0859282b4ca54eb14f350f7a1b2547e215b42e0e",
      "filename": "internal/entity/page.go",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fentity%2Fpage.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fentity%2Fpage.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fentity%2Fpage.go?ref=b034e514a7ba1fe5b59accc2cae285dd735a0276",
      "patch": "@@ -1,8 +1,6 @@\n package entity\n \n import (\n-\t\"sync\"\n-\n \t\"gorm.io/gorm\"\n )\n \n@@ -12,9 +10,7 @@ type Page struct {\n \tTitle     string\n \tAdminOnly bool\n \n-\tSiteName  string    `gorm:\"index;size:255\"`\n-\tSite      Site      `gorm:\"-\"`\n-\tOnce_Site sync.Once `gorm:\"-\"`\n+\tSiteName string `gorm:\"index;size:255\"`\n \n \tAccessibleURL string\n "
    },
    {
      "sha": "ffdb61cdc641a1942ac7fb48d03ce6a32444c9a4",
      "filename": "internal/notify_launcher/notify_launcher.go",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fnotify_launcher%2Fnotify_launcher.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fnotify_launcher%2Fnotify_launcher.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fnotify_launcher%2Fnotify_launcher.go?ref=b034e514a7ba1fe5b59accc2cae285dd735a0276",
      "patch": "@@ -53,7 +53,6 @@ func SendNotify(comment *entity.Comment, pComment *entity.Comment) {\n \t\t\t}\n \n \t\t\tnotify := query.FindCreateNotify(pComment.UserID, comment.ID)\n-\t\t\tnotify.SetComment(*comment)\n \t\t\tquery.NotifySetInitial(&notify)\n \n \t\t\t// 邮件通知\n@@ -105,7 +104,6 @@ func SendNotify(comment *entity.Comment, pComment *entity.Comment) {\n \t\t\t}\n \n \t\t\tnotify := query.FindCreateNotify(admin.ID, comment.ID)\n-\t\t\tnotify.SetComment(*comment)\n \t\t\tquery.NotifySetInitial(&notify)\n \n \t\t\t// 发送邮件给管理员"
    },
    {
      "sha": "e408f3281103b48517375e4f3e4cd4399c42a05b",
      "filename": "internal/query/association.go",
      "status": "modified",
      "additions": 5,
      "deletions": 40,
      "changes": 45,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fquery%2Fassociation.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fquery%2Fassociation.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fquery%2Fassociation.go?ref=b034e514a7ba1fe5b59accc2cae285dd735a0276",
      "patch": "@@ -9,66 +9,31 @@ import (\n // ===============\n \n func FetchUserForComment(c *entity.Comment) entity.User {\n-\tif c.User.IsEmpty() {\n-\t\tc.Once_User.Do(func() {\n-\t\t\tuser := FindUserByID(c.UserID)\n-\t\t\tc.User = user\n-\t\t})\n-\t}\n-\n-\treturn c.User\n+\treturn FindUserByID(c.UserID)\n }\n \n func FetchPageForComment(c *entity.Comment) entity.Page {\n-\tif c.Page.IsEmpty() {\n-\t\tc.Once_Page.Do(func() {\n-\t\t\tpage := FindPage(c.PageKey, c.SiteName)\n-\t\t\tc.Page = page\n-\t\t})\n-\t}\n-\n-\treturn c.Page\n+\treturn FindPage(c.PageKey, c.SiteName)\n }\n \n func FetchSiteForComment(c *entity.Comment) entity.Site {\n-\tif c.Site.IsEmpty() {\n-\t\tc.Once_Site.Do(func() {\n-\t\t\tsite := FindSite(c.SiteName)\n-\t\t\tc.Site = site\n-\t\t})\n-\t}\n-\n-\treturn c.Site\n+\treturn FindSite(c.SiteName)\n }\n \n // ===============\n //  Page\n // ===============\n \n func FetchSiteForPage(p *entity.Page) entity.Site {\n-\tif p.Site.IsEmpty() {\n-\t\tp.Once_Site.Do(func() {\n-\t\t\tsite := FindSite(p.SiteName)\n-\t\t\tp.Site = site\n-\t\t})\n-\t}\n-\n-\treturn p.Site\n+\treturn FindSite(p.SiteName)\n }\n \n // ===============\n //  Notify\n // ===============\n \n func FetchCommentForNotify(n *entity.Notify) entity.Comment {\n-\tif n.Comment.IsEmpty() {\n-\t\tn.Once_Comment.Do(func() {\n-\t\t\tcomment := FindComment(n.CommentID)\n-\t\t\tn.Comment = comment\n-\t\t})\n-\t}\n-\n-\treturn n.Comment\n+\treturn FindComment(n.CommentID)\n }\n \n // 获取接收通知的用户"
    },
    {
      "sha": "89c119190c085ffb6243e6658fea55dcab5b83d2",
      "filename": "internal/query/association_test.go",
      "status": "added",
      "additions": 73,
      "deletions": 0,
      "changes": 73,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fquery%2Fassociation_test.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fquery%2Fassociation_test.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fquery%2Fassociation_test.go?ref=b034e514a7ba1fe5b59accc2cae285dd735a0276",
      "patch": "@@ -0,0 +1,73 @@\n+package query\n+\n+import (\n+\t\"testing\"\n+\n+\t\"github.com/stretchr/testify/assert\"\n+)\n+\n+func TestFetchUserForComment(t *testing.T) {\n+\treloadTestDatabase()\n+\n+\tcomment := FindComment(1001)\n+\tassociatedUser := FetchUserForComment(&comment)\n+\trealUser := FindUserByID(1001)\n+\n+\tassert.False(t, associatedUser.IsEmpty(), \"评论关联用户找不到\")\n+\tassert.Equal(t, CookUser(&realUser), CookUser(&associatedUser), \"评论关联用户数据不一致\")\n+}\n+\n+func TestFetchPageForComment(t *testing.T) {\n+\treloadTestDatabase()\n+\n+\tcomment := FindComment(1001)\n+\trealPage := FindPage(\"/test/1000.html\", \"Site A\")\n+\tassociatedPage := FetchPageForComment(&comment)\n+\n+\tassert.False(t, associatedPage.IsEmpty(), \"评论关联页面找不到\")\n+\tassert.Equal(t, CookPage(&realPage), CookPage(&associatedPage), \"评论关联页面数据不一致\")\n+}\n+\n+func TestFetchSiteForComment(t *testing.T) {\n+\treloadTestDatabase()\n+\n+\tcomment := FindComment(1001)\n+\trealSite := FindSite(\"Site A\")\n+\tassociatedSite := FetchSiteForComment(&comment)\n+\n+\tassert.False(t, associatedSite.IsEmpty(), \"评论关联站点找不到\")\n+\tassert.Equal(t, CookSite(&realSite), CookSite(&associatedSite), \"评论关联站点数据不一致\")\n+}\n+\n+func TestFetchSiteForPage(t *testing.T) {\n+\treloadTestDatabase()\n+\n+\tpage := FindPageByID(1000)\n+\trealSite := FindSite(\"Site A\")\n+\tassociatedSite := FetchSiteForPage(&page)\n+\n+\tassert.False(t, associatedSite.IsEmpty(), \"页面关联站点找不到\")\n+\tassert.Equal(t, CookSite(&realSite), CookSite(&associatedSite), \"页面关联站点数据不一致\")\n+}\n+\n+func TestFetchCommentForNotify(t *testing.T) {\n+\treloadTestDatabase()\n+\n+\tnotify := FindNotify(1000, 1001)\n+\trealComment := FindComment(1001)\n+\tassociatedComment := FetchCommentForNotify(&notify)\n+\n+\tassert.False(t, associatedComment.IsEmpty(), \"通知关联评论找不到\")\n+\tassert.Equal(t, CookComment(&realComment), CookComment(&associatedComment), \"通知关联评论数据不一致\")\n+}\n+\n+func TestFetchUserForNotify(t *testing.T) {\n+\treloadTestDatabase()\n+\n+\tnotify := FindNotify(1000, 1001)\n+\trealUser := FindUserByID(1000)\n+\tassociatedUser := FetchUserForNotify(&notify)\n+\n+\tassert.False(t, associatedUser.IsEmpty(), \"通知关联用户找不到\")\n+\tassert.Equal(t, CookUser(&realUser), CookUser(&associatedUser), \"通知关联用户数据不一致\")\n+}"
    },
    {
      "sha": "eeb64c030c95dcfea2e1afc22f8cef0f1f9cc911",
      "filename": "internal/query/fixtures/notifies.yml",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fquery%2Ffixtures%2Fnotifies.yml",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fquery%2Ffixtures%2Fnotifies.yml",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fquery%2Ffixtures%2Fnotifies.yml?ref=b034e514a7ba1fe5b59accc2cae285dd735a0276",
      "patch": "@@ -0,0 +1,27 @@\n+- id: 1000\n+  user_id: 1000\n+  comment_id: 1000\n+  is_read: false\n+  is_emailed: false\n+  key: HL6VH\n+\n+- id: 1001\n+  user_id: 1000\n+  comment_id: 1001\n+  is_read: true\n+  is_emailed: true\n+  key: DB7G8\n+\n+- id: 1002\n+  user_id: 1001\n+  comment_id: 1000\n+  is_read: false\n+  is_emailed: false\n+  key: ZMTM4\n+\n+- id: 1003\n+  user_id: 1001\n+  comment_id: 1001\n+  is_read: true\n+  is_emailed: true\n+  key: 93FHR"
    },
    {
      "sha": "c66a776eb429f21e7ce470adf6a99a54388761c9",
      "filename": "internal/query/service.go",
      "status": "modified",
      "additions": 15,
      "deletions": 6,
      "changes": 21,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fquery%2Fservice.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fquery%2Fservice.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fquery%2Fservice.go?ref=b034e514a7ba1fe5b59accc2cae285dd735a0276",
      "patch": "@@ -42,17 +42,26 @@ func GetLinkToReplyByComment(c *entity.Comment, notifyKey ...string) string {\n // ===============\n \n // 获取可访问链接\n-func GetPageAccessibleURL(p *entity.Page) string {\n+func GetPageAccessibleURL(p *entity.Page, s ...*entity.Site) string {\n \tif p.AccessibleURL == \"\" {\n \t\tacURL := p.Key\n \n \t\t// 若 pageKey 为相对路径，生成相对于 site.FirstUrl 配置的 URL\n \t\tif !utils.ValidateURL(p.Key) {\n-\t\t\tsite := FetchSiteForPage(p)\n-\t\t\tu1, e1 := url.Parse(CookSite(&site).FirstUrl)\n-\t\t\tu2, e2 := url.Parse(p.Key)\n-\t\t\tif e1 == nil && e2 == nil {\n-\t\t\t\tacURL = u1.ResolveReference(u2).String()\n+\t\t\tvar site *entity.Site\n+\t\t\tif len(s) > 0 {\n+\t\t\t\tsite = s[0]\n+\t\t\t} else {\n+\t\t\t\tfindSite := FetchSiteForPage(p)\n+\t\t\t\tsite = &findSite\n+\t\t\t}\n+\n+\t\t\tif site != nil {\n+\t\t\t\tu1, e1 := url.Parse(CookSite(site).FirstUrl)\n+\t\t\t\tu2, e2 := url.Parse(p.Key)\n+\t\t\t\tif e1 == nil && e2 == nil {\n+\t\t\t\t\tacURL = u1.ResolveReference(u2).String()\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n "
    },
    {
      "sha": "09406fe482469e20a4d42f8d284987ad719d4173",
      "filename": "internal/query/service_test.go",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fquery%2Fservice_test.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/b034e514a7ba1fe5b59accc2cae285dd735a0276/internal%2Fquery%2Fservice_test.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fquery%2Fservice_test.go?ref=b034e514a7ba1fe5b59accc2cae285dd735a0276",
      "patch": "@@ -26,15 +26,14 @@ func Test_GetPageAccessibleURL(t *testing.T) {\n \t}\n \tfor _, tt := range tests {\n \t\tt.Run(tt.name, func(t *testing.T) {\n-\t\t\ts := entity.Site{}\n-\t\t\ts.ID = uint(1010)\n+\t\t\ts := &entity.Site{}\n \t\t\ts.Urls = tt.siteUrls\n \t\t\tp := &entity.Page{\n-\t\t\t\tKey:  tt.pageKey,\n-\t\t\t\tSite: s,\n+\t\t\t\tKey:      tt.pageKey,\n+\t\t\t\tSiteName: s.Name,\n \t\t\t}\n \n-\t\t\tif got := GetPageAccessibleURL(p); got != tt.want {\n+\t\t\tif got := GetPageAccessibleURL(p, s); got != tt.want {\n \t\t\t\tt.Errorf(\"GetPageAccessibleURL() = %v, want %v\", got, tt.want)\n \t\t\t}\n \t\t})"
    },
    {
      "sha": "70856f62f8706ef248e359153c95f55d096cbd4d",
      "filename": "server/handler/admin_comment_edit.go",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/b034e514a7ba1fe5b59accc2cae285dd735a0276/server%2Fhandler%2Fadmin_comment_edit.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/b034e514a7ba1fe5b59accc2cae285dd735a0276/server%2Fhandler%2Fadmin_comment_edit.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/server%2Fhandler%2Fadmin_comment_edit.go?ref=b034e514a7ba1fe5b59accc2cae285dd735a0276",
      "patch": "@@ -172,7 +172,6 @@ func RenotifyWhenPendingModified(comment *entity.Comment) {\n \t\treturn // 邮件已经发送过，则不再重复发送\n \t}\n \n-\tnotify.SetComment(*comment)\n \tquery.NotifySetInitial(&notify)\n \n \t// 邮件通知"
    }
  ]
}
