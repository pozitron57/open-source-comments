{
  "sha": "cbd73865bd106deaa6f2fd3338799eece352caf9",
  "node_id": "C_kwDOBtgov9oAKGNiZDczODY1YmQxMDZkZWFhNmYyZmQzMzM4Nzk5ZWVjZTM1MmNhZjk",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2024-01-11T07:39:01Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2024-01-11T21:57:39Z"
    },
    "message": "update go modules, update go-pkgz/auth to latest commit",
    "tree": {
      "sha": "6803d06d23951724805ec34734a83eff7b225d72",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/6803d06d23951724805ec34734a83eff7b225d72"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/cbd73865bd106deaa6f2fd3338799eece352caf9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/cbd73865bd106deaa6f2fd3338799eece352caf9",
  "html_url": "https://github.com/umputun/remark42/commit/cbd73865bd106deaa6f2fd3338799eece352caf9",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/cbd73865bd106deaa6f2fd3338799eece352caf9/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "url": "https://api.github.com/repos/umputun/remark42/commits/884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "html_url": "https://github.com/umputun/remark42/commit/884b5685eba3a7e88c9b60378316fd346a4c3a42"
    }
  ],
  "stats": {
    "total": 13124,
    "additions": 9870,
    "deletions": 3254
  },
  "files": [
    {
      "sha": "b5bba9d428b2c9ba0d255498f863856645aaa51c",
      "filename": "backend/_example/memory_store/go.mod",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.mod?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -16,14 +16,14 @@ require (\n \tgithub.com/Depado/bfchroma/v2 v2.0.0 // indirect\n \tgithub.com/PuerkitoBio/goquery v1.8.1 // indirect\n \tgithub.com/ajg/form v1.5.1 // indirect\n-\tgithub.com/alecthomas/chroma/v2 v2.8.0 // indirect\n+\tgithub.com/alecthomas/chroma/v2 v2.12.0 // indirect\n \tgithub.com/andybalholm/cascadia v1.3.2 // indirect\n \tgithub.com/aymerick/douceur v0.2.0 // indirect\n \tgithub.com/davecgh/go-spew v1.1.1 // indirect\n \tgithub.com/didip/tollbooth/v7 v7.0.1 // indirect\n \tgithub.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f // indirect\n \tgithub.com/dlclark/regexp2 v1.10.0 // indirect\n-\tgithub.com/go-chi/chi/v5 v5.0.10 // indirect\n+\tgithub.com/go-chi/chi/v5 v5.0.11 // indirect\n \tgithub.com/go-chi/render v1.0.3 // indirect\n \tgithub.com/go-pkgz/expirable-cache v1.0.0 // indirect\n \tgithub.com/go-pkgz/rest v1.18.2 // indirect\n@@ -35,9 +35,9 @@ require (\n \tgithub.com/rs/xid v1.5.0 // indirect\n \tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n \tgo.etcd.io/bbolt v1.3.8 // indirect\n-\tgolang.org/x/image v0.14.0 // indirect\n-\tgolang.org/x/net v0.19.0 // indirect\n-\tgolang.org/x/sys v0.15.0 // indirect\n+\tgolang.org/x/image v0.15.0 // indirect\n+\tgolang.org/x/net v0.20.0 // indirect\n+\tgolang.org/x/sys v0.16.0 // indirect\n \tgopkg.in/yaml.v3 v3.0.1 // indirect\n )\n "
    },
    {
      "sha": "453933a31b9e28e1e865b06a5ff0d834a928afdd",
      "filename": "backend/_example/memory_store/go.sum",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.sum?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -6,8 +6,8 @@ github.com/ajg/form v1.5.1 h1:t9c7v8JUKu/XxOGBU0yjNpaMloxGEJhUkqFRq0ibGeU=\n github.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\n github.com/alecthomas/assert/v2 v2.2.1 h1:XivOgYcduV98QCahG8T5XTezV5bylXe+lBxLG2K2ink=\n github.com/alecthomas/assert/v2 v2.2.1/go.mod h1:pXcQ2Asjp247dahGEmsZ6ru0UVwnkhktn7S0bBDLxvQ=\n-github.com/alecthomas/chroma/v2 v2.8.0 h1:w9WJUjFFmHHB2e8mRpL9jjy3alYDlU0QLDezj1xE264=\n-github.com/alecthomas/chroma/v2 v2.8.0/go.mod h1:yrkMI9807G1ROx13fhe1v6PN2DDeaR73L3d+1nmYQtw=\n+github.com/alecthomas/chroma/v2 v2.12.0 h1:Wh8qLEgMMsN7mgyG8/qIpegky2Hvzr4By6gEF7cmWgw=\n+github.com/alecthomas/chroma/v2 v2.12.0/go.mod h1:4TQu7gdfuPjSh76j78ietmqh9LiurGF0EpseFXdKMBw=\n github.com/alecthomas/repr v0.2.0 h1:HAzS41CIzNW5syS8Mf9UwXhNH1J9aix/BvDRf1Ml2Yk=\n github.com/alecthomas/repr v0.2.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\n github.com/andybalholm/cascadia v1.3.1/go.mod h1:R4bJ1UQfqADjvDa4P6HZHLh/3OxWWEqc0Sk8XGwHqvA=\n@@ -26,8 +26,8 @@ github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f/go.mod h1:q9C8\n github.com/dlclark/regexp2 v1.10.0 h1:+/GIL799phkJqYW+3YbOd8LCcbHzT0Pbo8zl70MHsq0=\n github.com/dlclark/regexp2 v1.10.0/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\n github.com/go-chi/chi/v5 v5.0.7/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n-github.com/go-chi/chi/v5 v5.0.10 h1:rLz5avzKpjqxrYwXNfmjkrYYXOyLJd37pz53UFHC6vk=\n-github.com/go-chi/chi/v5 v5.0.10/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n+github.com/go-chi/chi/v5 v5.0.11 h1:BnpYbFZ3T3S1WMpD79r7R5ThWX40TaFB7L31Y8xqSwA=\n+github.com/go-chi/chi/v5 v5.0.11/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n github.com/go-chi/render v1.0.1/go.mod h1:pq4Rr7HbnsdaeHagklXub+p6Wd16Af5l9koip1OvJns=\n github.com/go-chi/render v1.0.3 h1:AsXqd2a1/INaIfUSKq3G5uA8weYx20FOsM7uSoCyyt4=\n github.com/go-chi/render v1.0.3/go.mod h1:/gr3hVkmYR0YlEy3LxCuVRFzEu9Ruok+gFqbIofjao0=\n@@ -78,8 +78,8 @@ go.etcd.io/bbolt v1.3.8 h1:xs88BrvEv273UsB79e0hcVrlUWmS0a8upikMFhSyAtA=\n go.etcd.io/bbolt v1.3.8/go.mod h1:N9Mkw9X8x5fupy0IKsmuqVtoGDyxsaDlbk4Rd05IAQw=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\n-golang.org/x/image v0.14.0 h1:tNgSxAFe3jC4uYqvZdTr84SZoM1KfwdC9SKIFrLjFn4=\n-golang.org/x/image v0.14.0/go.mod h1:HUYqC05R2ZcZ3ejNQsIHQDQiwWM4JBqmm6MKANTp4LE=\n+golang.org/x/image v0.15.0 h1:kOELfmgrmJlw4Cdb7g/QGuB3CvDrXbqEIww/pNtNBm8=\n+golang.org/x/image v0.15.0/go.mod h1:HUYqC05R2ZcZ3ejNQsIHQDQiwWM4JBqmm6MKANTp4LE=\n golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\n golang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\n golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n@@ -89,8 +89,8 @@ golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug\n golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n golang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n golang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=\n-golang.org/x/net v0.19.0 h1:zTwKpTd2XuCqf8huc7Fo2iSy+4RHPd10s4KzeTnVr1c=\n-golang.org/x/net v0.19.0/go.mod h1:CfAk/cbD4CthTvqiEl8NpboMuiuOYsAr/7NOjZJtv1U=\n+golang.org/x/net v0.20.0 h1:aCL9BSgETF1k+blQaYUBx9hJ9LOGP3gAVemcZlf1Kpo=\n+golang.org/x/net v0.20.0/go.mod h1:z8BVo6PvndSri0LbOE3hAn0apkU+1YvI6E70E9jsnvY=\n golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n@@ -103,8 +103,8 @@ golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBc\n golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.15.0 h1:h48lPFYpsTvQJZF4EKyI4aLHaev3CxivZmv7yZig9pc=\n-golang.org/x/sys v0.15.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n+golang.org/x/sys v0.16.0 h1:xWw16ngr6ZMtmxDyKyIgsE93KNKz5HKmMa3b8ALHidU=\n+golang.org/x/sys v0.16.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\n golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k="
    },
    {
      "sha": "48c3bd94a8b348660f81b2f74b74293d3a1c7612",
      "filename": "backend/app/rest/api/rest_public_test.go",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fapp%2Frest%2Fapi%2Frest_public_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fapp%2Frest%2Fapi%2Frest_public_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Frest%2Fapi%2Frest_public_test.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -150,10 +150,10 @@ BKT\n \tassert.NoError(t, err)\n \tassert.Equal(t,\n \t\t`<h1>h1</h1>\n-<pre class=\"chroma\"><code><span class=\"line\"><span class=\"cl\">func TestRest_Preview(t *testing.T) {\n-</span></span><span class=\"line\"><span class=\"cl\">srv, ts := prep(t)\n-</span></span><span class=\"line\"><span class=\"cl\">  require.NotNil(t, srv)\n-</span></span><span class=\"line\"><span class=\"cl\">}\n+<pre class=\"chroma\"><code><span class=\"line\"><span class=\"cl\"><span class=\"k\">func</span> <span class=\"n\">TestRest_Preview</span><span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n+</span></span><span class=\"line\"><span class=\"cl\"><span class=\"n\">srv</span><span class=\"p\">,</span> <span class=\"n\">ts</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"n\">prep</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n+</span></span><span class=\"line\"><span class=\"cl\">  <span class=\"n\">require</span><span class=\"o\">.</span><span class=\"n\">NotNil</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">srv</span><span class=\"p\">)</span>\n+</span></span><span class=\"line\"><span class=\"cl\"><span class=\"p\">}</span>\n </span></span></code></pre>`,\n \t\tstring(b))\n \tassert.NoError(t, resp.Body.Close())"
    },
    {
      "sha": "bd5aa82eec768c34f03caedb2cba9b27177624e8",
      "filename": "backend/go.mod",
      "status": "modified",
      "additions": 17,
      "deletions": 15,
      "changes": 32,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.mod?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,17 +1,19 @@\n module github.com/umputun/remark42/backend\n \n-go 1.20\n+go 1.21\n+\n+toolchain go1.21.6\n \n require (\n \tgithub.com/Depado/bfchroma/v2 v2.0.0\n \tgithub.com/PuerkitoBio/goquery v1.8.1\n-\tgithub.com/alecthomas/chroma/v2 v2.8.0\n+\tgithub.com/alecthomas/chroma/v2 v2.12.0\n \tgithub.com/didip/tollbooth/v7 v7.0.1\n \tgithub.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f\n-\tgithub.com/go-chi/chi/v5 v5.0.10\n+\tgithub.com/go-chi/chi/v5 v5.0.11\n \tgithub.com/go-chi/cors v1.2.1\n \tgithub.com/go-chi/render v1.0.3\n-\tgithub.com/go-pkgz/auth v1.22.1-0.20231219172726-eb8671b06587\n+\tgithub.com/go-pkgz/auth v1.22.2-0.20240110230548-7a3db006ab6e\n \tgithub.com/go-pkgz/jrpc v0.3.0\n \tgithub.com/go-pkgz/lcw v1.0.2\n \tgithub.com/go-pkgz/lgr v0.11.1\n@@ -20,8 +22,8 @@ require (\n \tgithub.com/go-pkgz/rest v1.18.2\n \tgithub.com/go-pkgz/syncs v1.3.2\n \tgithub.com/golang-jwt/jwt v3.2.2+incompatible\n-\tgithub.com/google/uuid v1.3.0\n-\tgithub.com/gorilla/feeds v1.1.1\n+\tgithub.com/google/uuid v1.5.0\n+\tgithub.com/gorilla/feeds v1.1.2\n \tgithub.com/hashicorp/go-multierror v1.1.1\n \tgithub.com/jessevdk/go-flags v1.5.0\n \tgithub.com/kyokomi/emoji/v2 v2.2.12\n@@ -31,10 +33,10 @@ require (\n \tgithub.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e\n \tgithub.com/stretchr/testify v1.8.4\n \tgo.etcd.io/bbolt v1.3.8\n-\tgo.uber.org/goleak v1.2.1\n-\tgolang.org/x/crypto v0.17.0\n-\tgolang.org/x/image v0.14.0\n-\tgolang.org/x/net v0.19.0\n+\tgo.uber.org/goleak v1.3.0\n+\tgolang.org/x/crypto v0.18.0\n+\tgolang.org/x/image v0.15.0\n+\tgolang.org/x/net v0.20.0\n )\n \n require (\n@@ -57,7 +59,7 @@ require (\n \tgithub.com/gorilla/css v1.0.1 // indirect\n \tgithub.com/gorilla/websocket v1.5.1 // indirect\n \tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n-\tgithub.com/hashicorp/golang-lru v0.5.4 // indirect\n+\tgithub.com/hashicorp/golang-lru v1.0.2 // indirect\n \tgithub.com/klauspost/compress v1.17.4 // indirect\n \tgithub.com/montanaflynn/stats v0.7.1 // indirect\n \tgithub.com/nullrocks/identicon v0.0.0-20180626043057-7875f45b0022 // indirect\n@@ -68,11 +70,11 @@ require (\n \tgithub.com/xdg-go/stringprep v1.0.4 // indirect\n \tgithub.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a // indirect\n \tgo.mongodb.org/mongo-driver v1.13.1 // indirect\n-\tgolang.org/x/oauth2 v0.15.0 // indirect\n-\tgolang.org/x/sync v0.5.0 // indirect\n-\tgolang.org/x/sys v0.15.0 // indirect\n+\tgolang.org/x/oauth2 v0.16.0 // indirect\n+\tgolang.org/x/sync v0.6.0 // indirect\n+\tgolang.org/x/sys v0.16.0 // indirect\n \tgolang.org/x/text v0.14.0 // indirect\n \tgoogle.golang.org/appengine v1.6.8 // indirect\n-\tgoogle.golang.org/protobuf v1.31.0 // indirect\n+\tgoogle.golang.org/protobuf v1.32.0 // indirect\n \tgopkg.in/yaml.v3 v3.0.1 // indirect\n )"
    },
    {
      "sha": "b25c16598680e31ee0eb22e55561916e362e16ab",
      "filename": "backend/go.sum",
      "status": "modified",
      "additions": 38,
      "deletions": 28,
      "changes": 66,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.sum?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -10,9 +10,11 @@ github.com/PuerkitoBio/goquery v1.8.1/go.mod h1:Q8ICL1kNUJ2sXGoAhPGUdYDJvgQgHzJs\n github.com/ajg/form v1.5.1 h1:t9c7v8JUKu/XxOGBU0yjNpaMloxGEJhUkqFRq0ibGeU=\n github.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\n github.com/alecthomas/assert/v2 v2.2.1 h1:XivOgYcduV98QCahG8T5XTezV5bylXe+lBxLG2K2ink=\n-github.com/alecthomas/chroma/v2 v2.8.0 h1:w9WJUjFFmHHB2e8mRpL9jjy3alYDlU0QLDezj1xE264=\n-github.com/alecthomas/chroma/v2 v2.8.0/go.mod h1:yrkMI9807G1ROx13fhe1v6PN2DDeaR73L3d+1nmYQtw=\n+github.com/alecthomas/assert/v2 v2.2.1/go.mod h1:pXcQ2Asjp247dahGEmsZ6ru0UVwnkhktn7S0bBDLxvQ=\n+github.com/alecthomas/chroma/v2 v2.12.0 h1:Wh8qLEgMMsN7mgyG8/qIpegky2Hvzr4By6gEF7cmWgw=\n+github.com/alecthomas/chroma/v2 v2.12.0/go.mod h1:4TQu7gdfuPjSh76j78ietmqh9LiurGF0EpseFXdKMBw=\n github.com/alecthomas/repr v0.2.0 h1:HAzS41CIzNW5syS8Mf9UwXhNH1J9aix/BvDRf1Ml2Yk=\n+github.com/alecthomas/repr v0.2.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\n github.com/alicebob/gopher-json v0.0.0-20200520072559-a9ecdc9d1d3a h1:HbKu58rmZpUGpz5+4FfNmIU+FmZg2P3Xaj2v2bfNWmk=\n github.com/alicebob/gopher-json v0.0.0-20200520072559-a9ecdc9d1d3a/go.mod h1:SGnFV6hVsYE877CKEZ6tDNTjaSXYUk6QqoIK6PrAtcc=\n github.com/alicebob/miniredis/v2 v2.22.0 h1:lIHHiSkEyS1MkKHCHzN+0mWrA4YdbGdimE5iZ2sHSzo=\n@@ -53,17 +55,17 @@ github.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4\n github.com/gavv/httpexpect v2.0.0+incompatible h1:1X9kcRshkSKEjNJJxX9Y9mQ5BRfbxU5kORdjhlA1yX8=\n github.com/gavv/httpexpect v2.0.0+incompatible/go.mod h1:x+9tiU1YnrOvnB725RkpoLv1M62hOWzwo5OXotisrKc=\n github.com/go-chi/chi/v5 v5.0.7/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n-github.com/go-chi/chi/v5 v5.0.10 h1:rLz5avzKpjqxrYwXNfmjkrYYXOyLJd37pz53UFHC6vk=\n-github.com/go-chi/chi/v5 v5.0.10/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n+github.com/go-chi/chi/v5 v5.0.11 h1:BnpYbFZ3T3S1WMpD79r7R5ThWX40TaFB7L31Y8xqSwA=\n+github.com/go-chi/chi/v5 v5.0.11/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n github.com/go-chi/cors v1.2.1 h1:xEC8UT3Rlp2QuWNEr4Fs/c2EAGVKBwy/1vHx3bppil4=\n github.com/go-chi/cors v1.2.1/go.mod h1:sSbTewc+6wYHBBCW7ytsFSn836hqM7JxpglAy2Vzc58=\n github.com/go-chi/render v1.0.1/go.mod h1:pq4Rr7HbnsdaeHagklXub+p6Wd16Af5l9koip1OvJns=\n github.com/go-chi/render v1.0.3 h1:AsXqd2a1/INaIfUSKq3G5uA8weYx20FOsM7uSoCyyt4=\n github.com/go-chi/render v1.0.3/go.mod h1:/gr3hVkmYR0YlEy3LxCuVRFzEu9Ruok+gFqbIofjao0=\n github.com/go-oauth2/oauth2/v4 v4.5.2 h1:CuZhD3lhGuI6aNLyUbRHXsgG2RwGRBOuCBfd4WQKqBQ=\n github.com/go-oauth2/oauth2/v4 v4.5.2/go.mod h1:wk/2uLImWIa9VVQDgxz99H2GDbhmfi/9/Xr+GvkSUSQ=\n-github.com/go-pkgz/auth v1.22.1-0.20231219172726-eb8671b06587 h1:1cihW3uZm41ff3s6jBULVkUo/Y6FgUzXeNx4mUNpMsw=\n-github.com/go-pkgz/auth v1.22.1-0.20231219172726-eb8671b06587/go.mod h1:Vb92mtxdQIreeitkn/A5CoGyrEIrAmEsxD6RqJ2luy4=\n+github.com/go-pkgz/auth v1.22.2-0.20240110230548-7a3db006ab6e h1:p265UhLsZhoyRT2bXbkJE1MSBHoxjTTvbtSY8ZGuWHY=\n+github.com/go-pkgz/auth v1.22.2-0.20240110230548-7a3db006ab6e/go.mod h1:IN1y3BqIHixxr8dm8QnMK3Z3oSzg80kE0XenjedsHGw=\n github.com/go-pkgz/email v0.5.0 h1:fdtMDGJ8NwyBACLR0LYHaCIK/OeUwZHMhH7Q0+oty9U=\n github.com/go-pkgz/email v0.5.0/go.mod h1:BdxglsQnymzhfdbnncEE72a6DrucZHy6I+42LK2jLEc=\n github.com/go-pkgz/expirable-cache v0.1.0/go.mod h1:GTrEl0X+q0mPNqN6dtcQXksACnzCBQ5k/k1SwXJsZKs=\n@@ -115,17 +117,19 @@ github.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/\n github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n github.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=\n github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\n+github.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\n github.com/google/go-querystring v1.0.0 h1:Xkwi/a1rcvNg1PPYe5vI8GbeBY/jrVuDX5ASuANWTrk=\n github.com/google/go-querystring v1.0.0/go.mod h1:odCYkC5MyYFN7vkCjXpyrEuKhc/BUO6wN/zVPAxq5ck=\n github.com/google/pprof v0.0.0-20210407192527-94a9f03dee38/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\n github.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n-github.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\n github.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n+github.com/google/uuid v1.5.0 h1:1p67kYwdtXjb0gL0BPiP1Av9wiZPo5A8z2cWkTZ+eyU=\n+github.com/google/uuid v1.5.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\n github.com/gorilla/css v1.0.1 h1:ntNaBIghp6JmvWnxbZKANoLyuXTPZ4cAMlo6RyhlbO8=\n github.com/gorilla/css v1.0.1/go.mod h1:BvnYkspnSzMmwRK+b8/xgNPLiIuNZr6vbZBTPQ2A3b0=\n-github.com/gorilla/feeds v1.1.1 h1:HwKXxqzcRNg9to+BbvJog4+f3s/xzvtZXICcQGutYfY=\n-github.com/gorilla/feeds v1.1.1/go.mod h1:Nk0jZrvPFZX1OBe5NPiddPw7CfwF6Q9eqzaBbaightA=\n+github.com/gorilla/feeds v1.1.2 h1:pxzZ5PD3RJdhFH2FsJJ4x6PqMqbgFk1+Vez4XWBW8Iw=\n+github.com/gorilla/feeds v1.1.2/go.mod h1:WMib8uJP3BbY+X8Szd1rA5Pzhdfh+HCCAYT2z7Fza6Y=\n github.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\n github.com/gorilla/websocket v1.5.1 h1:gmztn0JnHVt9JZquRuzLw3g4wouNVzKL15iLr/zn/QY=\n github.com/gorilla/websocket v1.5.1/go.mod h1:x3kM2JMyaluk02fnUJpQuwD2dCS5NDG2ZHL0uE0tcaY=\n@@ -134,9 +138,11 @@ github.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY\n github.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\n github.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\n github.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\n-github.com/hashicorp/golang-lru v0.5.4 h1:YDjusn29QI/Das2iO9M0BHnIbxPeyuCHsjMW+lJfyTc=\n github.com/hashicorp/golang-lru v0.5.4/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\n+github.com/hashicorp/golang-lru v1.0.2 h1:dV3g9Z/unq5DpblPpw+Oqcv4dU/1omnb4Ok8iPY6p1c=\n+github.com/hashicorp/golang-lru v1.0.2/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\n github.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\n+github.com/hexops/gotextdiff v1.0.3/go.mod h1:pSWU5MAI3yDq+fZBTazCSJysOMbxWL1BSow5/V2vxeg=\n github.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\n github.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\n github.com/imkira/go-interpol v1.1.0 h1:KIiKr0VSG2CUW1hl1jpiyuzuJeKUUpC8iM1AIE7N1Vk=\n@@ -149,11 +155,13 @@ github.com/klauspost/compress v1.13.6/go.mod h1:/3/Vjq9QcHkK5uEr5lBEmyoZ1iFhe47e\n github.com/klauspost/compress v1.15.0/go.mod h1:/3/Vjq9QcHkK5uEr5lBEmyoZ1iFhe47etQ6QUkpK6sk=\n github.com/klauspost/compress v1.17.4 h1:Ej5ixsIri7BrIjBkRZLTo6ghwrEtHFk7ijlczPW4fZ4=\n github.com/klauspost/compress v1.17.4/go.mod h1:/dCuZOvVtNoHsyb+cuJD3itjs3NbnF6KH9zAO4BDxPM=\n-github.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\n github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\n+github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\n+github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\n github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\n-github.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\n github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\n+github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\n+github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\n github.com/kyokomi/emoji/v2 v2.2.12 h1:sSVA5nH9ebR3Zji1o31wu3yOwD1zKXQA2z0zUyeit60=\n github.com/kyokomi/emoji/v2 v2.2.12/go.mod h1:JUcn42DTdsXJo1SWanHh4HKDEyPaR5CqkmoirZZP9qE=\n github.com/mattn/go-colorable v0.1.7/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\n@@ -185,6 +193,8 @@ github.com/onsi/gomega v1.18.1/go.mod h1:0q+aL8jAiMXy9hbwj2mr5GziHiwhAIQpFmmtT5h\n github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n+github.com/rogpeppe/go-internal v1.9.0 h1:73kH8U+JUqXU8lRuOHeVHaa/SZPifC7BkcraZVejAe8=\n+github.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\n github.com/rs/xid v1.5.0 h1:mKX4bl4iPYJtEIxp6CYiUuLQ/8DYMoz0PUdtGgMFRVc=\n github.com/rs/xid v1.5.0/go.mod h1:trrq9SKmegXys3aeAKXMUTdJsYXVwGY3RLcfgqegfbg=\n github.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\n@@ -264,19 +274,19 @@ go.etcd.io/bbolt v1.3.8 h1:xs88BrvEv273UsB79e0hcVrlUWmS0a8upikMFhSyAtA=\n go.etcd.io/bbolt v1.3.8/go.mod h1:N9Mkw9X8x5fupy0IKsmuqVtoGDyxsaDlbk4Rd05IAQw=\n go.mongodb.org/mongo-driver v1.13.1 h1:YIc7HTYsKndGK4RFzJ3covLz1byri52x0IoMB0Pt/vk=\n go.mongodb.org/mongo-driver v1.13.1/go.mod h1:wcDf1JBCXy2mOW0bWHwO/IOYqdca1MPCwDtFu/Z9+eo=\n-go.uber.org/goleak v1.2.1 h1:NBol2c7O1ZokfZ0LEU9K6Whx/KnwvepVetCUhtKja4A=\n-go.uber.org/goleak v1.2.1/go.mod h1:qlT2yGI9QafXHhZZLxlSuNsMw3FFLxBr+tBRlmO1xH4=\n+go.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\n+go.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\n golang.org/x/crypto v0.0.0-20200302210943-78000ba7a073/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\n golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\n golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\n golang.org/x/crypto v0.0.0-20220214200702-86341886e292/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\n golang.org/x/crypto v0.0.0-20220622213112-05595931fe9d/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\n-golang.org/x/crypto v0.17.0 h1:r8bRNjWL3GshPW3gkd+RpvzWrZAwPS49OmTGZ/uhM4k=\n-golang.org/x/crypto v0.17.0/go.mod h1:gCAAfMLgwOJRpTjQ2zCCt2OcSfYMTeZVSRtQlPC7Nq4=\n-golang.org/x/image v0.14.0 h1:tNgSxAFe3jC4uYqvZdTr84SZoM1KfwdC9SKIFrLjFn4=\n-golang.org/x/image v0.14.0/go.mod h1:HUYqC05R2ZcZ3ejNQsIHQDQiwWM4JBqmm6MKANTp4LE=\n+golang.org/x/crypto v0.18.0 h1:PGVlW0xEltQnzFZ55hkuX5+KLyrMYhHld1YHO4AKcdc=\n+golang.org/x/crypto v0.18.0/go.mod h1:R0j02AL6hcrfOiy9T4ZYp/rcWeMxM3L6QYxlOuEG1mg=\n+golang.org/x/image v0.15.0 h1:kOELfmgrmJlw4Cdb7g/QGuB3CvDrXbqEIww/pNtNBm8=\n+golang.org/x/image v0.15.0/go.mod h1:HUYqC05R2ZcZ3ejNQsIHQDQiwWM4JBqmm6MKANTp4LE=\n golang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\n golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\n golang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\n@@ -298,19 +308,19 @@ golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug\n golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n golang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n golang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=\n-golang.org/x/net v0.19.0 h1:zTwKpTd2XuCqf8huc7Fo2iSy+4RHPd10s4KzeTnVr1c=\n-golang.org/x/net v0.19.0/go.mod h1:CfAk/cbD4CthTvqiEl8NpboMuiuOYsAr/7NOjZJtv1U=\n+golang.org/x/net v0.20.0 h1:aCL9BSgETF1k+blQaYUBx9hJ9LOGP3gAVemcZlf1Kpo=\n+golang.org/x/net v0.20.0/go.mod h1:z8BVo6PvndSri0LbOE3hAn0apkU+1YvI6E70E9jsnvY=\n golang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n-golang.org/x/oauth2 v0.15.0 h1:s8pnnxNVzjWyrvYdFUQq5llS1PX2zhPXmccZv99h7uQ=\n-golang.org/x/oauth2 v0.15.0/go.mod h1:q48ptWNTY5XWf+JNten23lcvHpLJ0ZSxF5ttTHKVCAM=\n+golang.org/x/oauth2 v0.16.0 h1:aDkGMBSYxElaoP81NpoUoz2oo2R2wHdZpGToUxfyQrQ=\n+golang.org/x/oauth2 v0.16.0/go.mod h1:hqZ+0LWXsiVoZpeld6jVt06P3adbS2Uu911W1SsJv2o=\n golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n-golang.org/x/sync v0.5.0 h1:60k92dhOjHxJkrqnwsfl8KuaHbn/5dl0lUPUklKo3qE=\n-golang.org/x/sync v0.5.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\n+golang.org/x/sync v0.6.0 h1:5BMeUDZ7vkXGfEr1x9B4bRcTH4lpkTkpdh0T/J+qjbQ=\n+golang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\n golang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190204203706-41f3e6584952/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n@@ -335,8 +345,8 @@ golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBc\n golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.15.0 h1:h48lPFYpsTvQJZF4EKyI4aLHaev3CxivZmv7yZig9pc=\n-golang.org/x/sys v0.15.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n+golang.org/x/sys v0.16.0 h1:xWw16ngr6ZMtmxDyKyIgsE93KNKz5HKmMa3b8ALHidU=\n+golang.org/x/sys v0.16.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\n golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\n@@ -373,8 +383,8 @@ google.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzi\n google.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\n google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\n google.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\n-google.golang.org/protobuf v1.31.0 h1:g0LDEJHgrBl9N9r17Ru3sqWhkIx2NB67okBHPwC7hs8=\n-google.golang.org/protobuf v1.31.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\n+google.golang.org/protobuf v1.32.0 h1:pPC6BG5ex8PDFnkbrGU3EixyhKcQ2aDuBS36lqK/C7I=\n+google.golang.org/protobuf v1.32.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\n gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n gopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15 h1:YR8cESwS4TdDjEe65xsg0ogRM/Nc3DYOhEAlW+xobZo="
    },
    {
      "sha": "8cbdd75ea0323b91f78187d039fc9afd0c2684c3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/.gitignore",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.gitignore",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.gitignore?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,4 +1,8 @@\n # Binaries for programs and plugins\n+.git\n+.idea\n+.vscode\n+.hermit\n *.exe\n *.dll\n *.so\n@@ -18,3 +22,4 @@ _models/\n \n _examples/\n *.min.*\n+build/"
    },
    {
      "sha": "bf158633a1c77d28d2d064e94bb2223f8f3f5a61",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/Bitfile",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FBitfile",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FBitfile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FBitfile?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,24 @@\n+VERSION = %(git describe --tags --dirty  --always)%\n+export CGOENABLED = 0\n+\n+tokentype_enumer.go: types.go\n+  build: go generate\n+\n+# Regenerate the list of lexers in the README\n+README.md: lexers/*.go lexers/*/*.xml table.py\n+  build: ./table.py\n+  -clean\n+\n+implicit %{1}%{2}.min.%{3}: **/*.{css,js}\n+  build: esbuild --bundle %{IN} --minify --outfile=%{OUT}\n+\n+implicit build/%{1}: cmd/*\n+  cd cmd/%{1}\n+  inputs: cmd/%{1}/**/* **/*.go\n+  build: go build -ldflags=\"-X 'main.version=%{VERSION}'\" -o ../../build/%{1} .\n+\n+#upload: chromad\n+#  build:\n+#    scp chromad root@swapoff.org:\n+#    ssh root@swapoff.org 'install -m755 ./chromad /srv/http/swapoff.org/bin && service chromad restart'\n+#    touch upload"
    },
    {
      "sha": "e2ff762e67d5984f09eb1dc21ba863d9a05629ce",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/Makefile",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FMakefile",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FMakefile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FMakefile?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -13,11 +13,11 @@ tokentype_string.go: types.go\n \tgo generate\n \n chromad:\n-\trm -f chromad\n+\trm -rf build\n \tesbuild --bundle cmd/chromad/static/index.js --minify --outfile=cmd/chromad/static/index.min.js\n \tesbuild --bundle cmd/chromad/static/index.css --minify --outfile=cmd/chromad/static/index.min.css\n-\t(export CGOENABLED=0 ; cd ./cmd/chromad && go build -ldflags=\"-X 'main.version=$(VERSION)'\" -o ../../chromad .)\n+\t(export CGOENABLED=0 ; cd ./cmd/chromad && go build -ldflags=\"-X 'main.version=$(VERSION)'\" -o ../../build/chromad .)\n \n-upload: chromad\n-\tscp chromad root@swapoff.org: && \\\n+upload: build/chromad\n+\tscp build/chromad root@swapoff.org: && \\\n \t\tssh root@swapoff.org 'install -m755 ./chromad /srv/http/swapoff.org/bin && service chromad restart'"
    },
    {
      "sha": "6c347a0be319b58e8f2b0fec73e8743040458f29",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/README.md",
      "status": "modified",
      "additions": 69,
      "deletions": 52,
      "changes": 121,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,7 +1,6 @@\n # Chroma — A general purpose syntax highlighter in pure Go\n-[![Golang Documentation](https://godoc.org/github.com/alecthomas/chroma?status.svg)](https://godoc.org/github.com/alecthomas/chroma) [![CI](https://github.com/alecthomas/chroma/actions/workflows/ci.yml/badge.svg)](https://github.com/alecthomas/chroma/actions/workflows/ci.yml) [![Slack chat](https://img.shields.io/static/v1?logo=slack&style=flat&label=slack&color=green&message=gophers)](https://invite.slack.golangbridge.org/)\n \n-> **NOTE:** As Chroma has just been released, its API is still in flux. That said, the high-level interface should not change significantly.\n+[![Golang Documentation](https://godoc.org/github.com/alecthomas/chroma?status.svg)](https://godoc.org/github.com/alecthomas/chroma) [![CI](https://github.com/alecthomas/chroma/actions/workflows/ci.yml/badge.svg)](https://github.com/alecthomas/chroma/actions/workflows/ci.yml) [![Slack chat](https://img.shields.io/static/v1?logo=slack&style=flat&label=slack&color=green&message=gophers)](https://invite.slack.golangbridge.org/)\n \n Chroma takes source code and other structured text and converts it into syntax\n highlighted HTML, ANSI-coloured text, etc.\n@@ -10,6 +9,7 @@ Chroma is based heavily on [Pygments](http://pygments.org/), and includes\n translators for Pygments lexers and styles.\n \n <a id=\"markdown-table-of-contents\" name=\"table-of-contents\"></a>\n+\n ## Table of Contents\n \n <!-- TOC -->\n@@ -18,61 +18,63 @@ translators for Pygments lexers and styles.\n 2. [Supported languages](#supported-languages)\n 3. [Try it](#try-it)\n 4. [Using the library](#using-the-library)\n-    1. [Quick start](#quick-start)\n-    2. [Identifying the language](#identifying-the-language)\n-    3. [Formatting the output](#formatting-the-output)\n-    4. [The HTML formatter](#the-html-formatter)\n+   1. [Quick start](#quick-start)\n+   2. [Identifying the language](#identifying-the-language)\n+   3. [Formatting the output](#formatting-the-output)\n+   4. [The HTML formatter](#the-html-formatter)\n 5. [More detail](#more-detail)\n-    1. [Lexers](#lexers)\n-    2. [Formatters](#formatters)\n-    3. [Styles](#styles)\n+   1. [Lexers](#lexers)\n+   2. [Formatters](#formatters)\n+   3. [Styles](#styles)\n 6. [Command-line interface](#command-line-interface)\n 7. [Testing lexers](#testing-lexers)\n 8. [What's missing compared to Pygments?](#whats-missing-compared-to-pygments)\n \n <!-- /TOC -->\n \n <a id=\"markdown-supported-languages\" name=\"supported-languages\"></a>\n-## Supported languages\n \n-Prefix | Language\n-:----: | --------\n-A | ABAP, ABNF, ActionScript, ActionScript 3, Ada, Angular2, ANTLR, ApacheConf, APL, AppleScript, ArangoDB AQL, Arduino, Awk\n-B | Ballerina, Bash, Batchfile, BibTeX, Bicep, BlitzBasic, BNF, Brainfuck, BQN\n-C | C, C#, C++, Caddyfile, Caddyfile Directives, Cap'n Proto, Cassandra CQL, Ceylon, CFEngine3, cfstatement, ChaiScript, Chapel, Cheetah, Clojure, CMake, COBOL, CoffeeScript, Common Lisp, Coq, Crystal, CSS, Cython\n-D | D, Dart, Diff, Django/Jinja, Docker, DTD, Dylan\n-E | EBNF, Elixir, Elm, EmacsLisp, Erlang\n-F | Factor, Fish, Forth, Fortran, FSharp\n-G | GAS, GDScript, Genshi, Genshi HTML, Genshi Text, Gherkin, GLSL, Gnuplot, Go, Go HTML Template, Go Text Template, GraphQL, Groff, Groovy\n-H | Handlebars, Haskell, Haxe, HCL, Hexdump, HLB, HLSL, HTML, HTTP, Hy\n-I | Idris, Igor, INI, Io\n-J | J, Java, JavaScript, JSON, Julia, Jungle\n-K | Kotlin\n-L | Lighttpd configuration file, LLVM, Lua\n-M | Makefile, Mako, markdown, Mason, Mathematica, Matlab, MiniZinc, MLIR, Modula-2, MonkeyC, MorrowindScript, Myghty, MySQL\n-N | NASM, Newspeak, Nginx configuration file, Nim, Nix\n-O | Objective-C, OCaml, Octave, OnesEnterprise, OpenEdge ABL, OpenSCAD, Org Mode\n-P | PacmanConf, Perl, PHP, PHTML, Pig, PkgConfig, PL/pgSQL, plaintext, Pony, PostgreSQL SQL dialect, PostScript, POVRay, PowerShell, Prolog, PromQL, Properties, Protocol Buffer, PSL, Puppet, Python 2, Python\n-Q | QBasic\n-R | R, Racket, Ragel, Raku, react, ReasonML, reg, reStructuredText, Rexx, Ruby, Rust\n-S | SAS, Sass, Scala, Scheme, Scilab, SCSS, Sed, Smali, Smalltalk, Smarty, Snobol, Solidity, SPARQL, SQL, SquidConf, Standard ML, stas, Stylus, Svelte, Swift, SYSTEMD, systemverilog\n-T | TableGen, TASM, Tcl, Tcsh, Termcap, Terminfo, Terraform, TeX, Thrift, TOML, TradingView, Transact-SQL, Turing, Turtle, Twig, TypeScript, TypoScript, TypoScriptCssData, TypoScriptHtmlData\n-V | VB.net, verilog, VHDL, VHS, VimL, vue\n-W | WDTE\n-X | XML, Xorg\n-Y | YAML, YANG\n-Z | Zig\n+## Supported languages\n \n+| Prefix | Language                                                                                                                                                                                                                             |\n+| :----: | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+|   A    | ABAP, ABNF, ActionScript, ActionScript 3, Ada, Agda, AL, Alloy, Angular2, ANTLR, ApacheConf, APL, AppleScript, ArangoDB AQL, Arduino, ArmAsm, AutoHotkey, AutoIt, Awk                                                                             |\n+|   B    | Ballerina, Bash, Bash Session, Batchfile, BibTeX, Bicep, BlitzBasic, BNF, BQN, Brainfuck                                                                                                                                             |\n+|   C    | C, C#, C++, Caddyfile, Caddyfile Directives, Cap'n Proto, Cassandra CQL, Ceylon, CFEngine3, cfstatement, ChaiScript, Chapel, Cheetah, Clojure, CMake, COBOL, CoffeeScript, Common Lisp, Coq, Crystal, CSS, Cython                    |\n+|   D    | D, Dart, Dax, Diff, Django/Jinja, dns, Docker, DTD, Dylan                                                                                                                                                                                 |\n+|   E    | EBNF, Elixir, Elm, EmacsLisp, Erlang                                                                                                                                                                                                 |\n+|   F    | Factor, Fennel, Fish, Forth, Fortran, FortranFixed, FSharp                                                                                                                                                                           |\n+|   G    | GAS, GDScript, Genshi, Genshi HTML, Genshi Text, Gherkin, GLSL, Gnuplot, Go, Go HTML Template, Go Text Template, GraphQL, Groff, Groovy                                                                                              |\n+|   H    | Handlebars, Hare, Haskell, Haxe, HCL, Hexdump, HLB, HLSL, HolyC, HTML, HTTP, Hy                                                                                                                                                      |\n+|   I    | Idris, Igor, INI, Io, ISCdhcpd                                                                                                                                                                                                       |\n+|   J    | J, Java, JavaScript, JSON, Julia, Jungle                                                                                                                                                                                             |\n+|   K    | Kotlin                                                                                                                                                                                                                               |\n+|   L    | Lighttpd configuration file, LLVM, Lua                                                                                                                                                                                               |\n+|   M    | Makefile, Mako, markdown, Mason, Mathematica, Matlab, mcfunction, Meson, Metal, MiniZinc, MLIR, Modula-2, MonkeyC, MorrowindScript, Myghty, MySQL                                                                                    |\n+|   N    | NASM, Natural, Newspeak, Nginx configuration file, Nim, Nix                                                                                                                                                                          |\n+|   O    | Objective-C, OCaml, Octave, Odin, OnesEnterprise, OpenEdge ABL, OpenSCAD, Org Mode                                                                                                                                                   |\n+|   P    | PacmanConf, Perl, PHP, PHTML, Pig, PkgConfig, PL/pgSQL, plaintext, Plutus Core, Pony, PostgreSQL SQL dialect, PostScript, POVRay, PowerQuery, PowerShell, Prolog, PromQL, properties, Protocol Buffer, PRQL, PSL, Puppet, Python, Python 2 |\n+|   Q    | QBasic, QML                                                                                                                                                                                                                          |\n+|   R    | R, Racket, Ragel, Raku, react, ReasonML, reg, reStructuredText, Rexx, Ruby, Rust                                                                                                                                                     |\n+|   S    | SAS, Sass, Scala, Scheme, Scilab, SCSS, Sed, Sieve, Smali, Smalltalk, Smarty, Snobol, Solidity, SourcePawn, SPARQL, SQL, SquidConf, Standard ML, stas, Stylus, Svelte, Swift, SYSTEMD, systemverilog                                 |\n+|   T    | TableGen, Tal, TASM, Tcl, Tcsh, Termcap, Terminfo, Terraform, TeX, Thrift, TOML, TradingView, Transact-SQL, Turing, Turtle, Twig, TypeScript, TypoScript, TypoScriptCssData, TypoScriptHtmlData                                      |\n+|   V    | V, V shell, Vala, VB.net, verilog, VHDL, VHS, VimL, vue                                                                                                                                                                              |\n+|   W    | WDTE, WebGPU Shading Language, Whiley                                                                                                                                                                                                |\n+|   X    | XML, Xorg                                                                                                                                                                                                                            |\n+|   Y    | YAML, YANG                                                                                                                                                                                                                           |\n+|   Z    | Z80 Assembly, Zed, Zig                                                                                                                                                                                                               |\n \n _I will attempt to keep this section up to date, but an authoritative list can be\n displayed with `chroma --list`._\n \n <a id=\"markdown-try-it\" name=\"try-it\"></a>\n+\n ## Try it\n \n Try out various languages and styles on the [Chroma Playground](https://swapoff.org/chroma/playground/).\n \n <a id=\"markdown-using-the-library\" name=\"using-the-library\"></a>\n+\n ## Using the library\n \n Chroma, like Pygments, has the concepts of\n@@ -94,6 +96,7 @@ be returned. In this situation you may want to default to the `Fallback`\n value in each respective package, which provides sane defaults.\n \n <a id=\"markdown-quick-start\" name=\"quick-start\"></a>\n+\n ### Quick start\n \n A convenience function exists that can be used to simply format some source\n@@ -104,28 +107,29 @@ err := quick.Highlight(os.Stdout, someSourceCode, \"go\", \"html\", \"monokai\")\n ```\n \n <a id=\"markdown-identifying-the-language\" name=\"identifying-the-language\"></a>\n+\n ### Identifying the language\n \n To highlight code, you'll first have to identify what language the code is\n written in. There are three primary ways to do that:\n \n 1. Detect the language from its filename.\n \n-    ```go\n-    lexer := lexers.Match(\"foo.go\")\n-    ```\n+   ```go\n+   lexer := lexers.Match(\"foo.go\")\n+   ```\n \n-3. Explicitly specify the language by its Chroma syntax ID (a full list is available from `lexers.Names()`).\n+2. Explicitly specify the language by its Chroma syntax ID (a full list is available from `lexers.Names()`).\n \n-    ```go\n-    lexer := lexers.Get(\"go\")\n-    ```\n+   ```go\n+   lexer := lexers.Get(\"go\")\n+   ```\n \n 3. Detect the language from its content.\n \n-    ```go\n-    lexer := lexers.Analyse(\"package main\\n\\nfunc main()\\n{\\n}\\n\")\n-    ```\n+   ```go\n+   lexer := lexers.Analyse(\"package main\\n\\nfunc main()\\n{\\n}\\n\")\n+   ```\n \n In all cases, `nil` will be returned if the language can not be identified.\n \n@@ -144,6 +148,7 @@ lexer = chroma.Coalesce(lexer)\n ```\n \n <a id=\"markdown-formatting-the-output\" name=\"formatting-the-output\"></a>\n+\n ### Formatting the output\n \n Once a language is identified you will need to pick a formatter and a style (theme).\n@@ -173,6 +178,7 @@ err := formatter.Format(w, style, iterator)\n ```\n \n <a id=\"markdown-the-html-formatter\" name=\"the-html-formatter\"></a>\n+\n ### The HTML formatter\n \n By default the `html` registered formatter generates standalone HTML with\n@@ -198,9 +204,11 @@ err := formatter.WriteCSS(w, style)\n ```\n \n <a id=\"markdown-more-detail\" name=\"more-detail\"></a>\n+\n ## More detail\n \n <a id=\"markdown-lexers\" name=\"lexers\"></a>\n+\n ### Lexers\n \n See the [Pygments documentation](http://pygments.org/docs/lexerdevelopment/)\n@@ -221,6 +229,7 @@ See notes in [pygments-lexers.txt](https://github.com/alecthomas/chroma/blob/mas\n for a list of lexers, and notes on some of the issues importing them.\n \n <a id=\"markdown-formatters\" name=\"formatters\"></a>\n+\n ### Formatters\n \n Chroma supports HTML output, as well as terminal output in 8 colour, 256 colour, and true-colour.\n@@ -229,6 +238,7 @@ A `noop` formatter is included that outputs the token text only, and a `tokens`\n formatter outputs raw tokens. The latter is useful for debugging lexers.\n \n <a id=\"markdown-styles\" name=\"styles\"></a>\n+\n ### Styles\n \n Chroma styles are defined in XML. The style entries use the\n@@ -237,7 +247,7 @@ Chroma styles are defined in XML. The style entries use the\n All Pygments styles have been converted to Chroma using the `_tools/style.py`\n script.\n \n-When you work with one of [Chroma's styles](https://github.com/alecthomas/chroma/tree/master/styles), \n+When you work with one of [Chroma's styles](https://github.com/alecthomas/chroma/tree/master/styles),\n know that the `Background` token type provides the default style for tokens. It does so\n by defining a foreground color and background color.\n \n@@ -253,6 +263,7 @@ Also, token types in a style file are hierarchical. For instance, when `CommentS\n For a quick overview of the available styles and how they look, check out the [Chroma Style Gallery](https://xyproto.github.io/splash/docs/).\n \n <a id=\"markdown-command-line-interface\" name=\"command-line-interface\"></a>\n+\n ## Command-line interface\n \n A command-line interface to Chroma is included.\n@@ -280,26 +291,32 @@ for that setup the `chroma` executable can be just symlinked to `~/.lessfilter`.\n <a id=\"markdown-whats-missing-compared-to-pygments\" name=\"whats-missing-compared-to-pygments\"></a>\n \n <a id=\"markdown-testing-lexers\" name=\"testing-lexers\"></a>\n+\n ## Testing lexers\n+\n If you edit some lexers and want to try it, open a shell in `cmd/chromad` and run:\n+\n ```shell\n go run .\n ```\n+\n A Link will be printed. Open it in your Browser. Now you can test on the Playground with your local changes.\n \n If you want to run the tests and the lexers, open a shell in the root directory and run:\n+\n ```shell\n go test ./lexers\n ```\n+\n When updating or adding a lexer, please add tests. See [lexers/README.md](lexers/README.md) for more.\n \n ## What's missing compared to Pygments?\n \n - Quite a few lexers, for various reasons (pull-requests welcome):\n-    - Pygments lexers for complex languages often include custom code to\n-      handle certain aspects, such as Raku's ability to nest code inside\n-      regular expressions. These require time and effort to convert.\n-    - I mostly only converted languages I had heard of, to reduce the porting cost.\n+  - Pygments lexers for complex languages often include custom code to\n+    handle certain aspects, such as Raku's ability to nest code inside\n+    regular expressions. These require time and effort to convert.\n+  - I mostly only converted languages I had heard of, to reduce the porting cost.\n - Some more esoteric features of Pygments are omitted for simplicity.\n - Though the Chroma API supports content detection, very few languages support them.\n   I have plans to implement a statistical analyser at some point, but not enough time."
    },
    {
      "sha": "eb027bf698776081a94f53f5a435187768613395",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexer.go",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexer.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -57,6 +57,26 @@ type Config struct {\n \t//\n \t// If this is 0 it will be treated as a default of 1.\n \tPriority float32 `xml:\"priority,omitempty\"`\n+\n+\t// Analyse is a list of regexes to match against the input.\n+\t//\n+\t// If a match is found, the score is returned if single attribute is set to true,\n+\t// otherwise the sum of all the score of matching patterns will be\n+\t// used as the final score.\n+\tAnalyse *AnalyseConfig `xml:\"analyse,omitempty\"`\n+}\n+\n+// AnalyseConfig defines the list of regexes analysers.\n+type AnalyseConfig struct {\n+\tRegexes []RegexConfig `xml:\"regex,omitempty\"`\n+\t// If true, the first matching score is returned.\n+\tFirst bool `xml:\"first,attr\"`\n+}\n+\n+// RegexConfig defines a single regex pattern and its score in case of match.\n+type RegexConfig struct {\n+\tPattern string  `xml:\"pattern,attr\"`\n+\tScore   float32 `xml:\"score,attr\"`\n }\n \n // Token output to formatter."
    },
    {
      "sha": "1ea30f2dd5f0a8f8208e8c79275536f94e46c1ae",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/bash.go",
      "status": "removed",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fbash.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fbash.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fbash.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,17 +0,0 @@\n-package lexers\n-\n-import (\n-\t\"regexp\"\n-)\n-\n-// TODO(moorereason): can this be factored away?\n-var bashAnalyserRe = regexp.MustCompile(`(?m)^#!.*/bin/(?:env |)(?:bash|zsh|sh|ksh)`)\n-\n-func init() { // nolint: gochecknoinits\n-\tGet(\"bash\").SetAnalyser(func(text string) float32 {\n-\t\tif bashAnalyserRe.FindString(text) != \"\" {\n-\t\t\treturn 1.0\n-\t\t}\n-\t\treturn 0.0\n-\t})\n-}"
    },
    {
      "sha": "5f6f0901c191ec9a687afe4d339da35ac563f8fb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/chapel.go",
      "status": "removed",
      "additions": 0,
      "deletions": 62,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fchapel.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fchapel.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fchapel.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,62 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// Chapel lexer.\n-var Chapel = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"Chapel\",\n-\t\tAliases:   []string{\"chapel\", \"chpl\"},\n-\t\tFilenames: []string{\"*.chpl\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tfunc() Rules {\n-\t\treturn Rules{\n-\t\t\t\"root\": {\n-\t\t\t\t{`\\n`, TextWhitespace, nil},\n-\t\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t\t{`//(.*?)\\n`, CommentSingle, nil},\n-\t\t\t\t{`/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t\t{Words(``, `\\b`, `config`, `const`, `in`, `inout`, `out`, `param`, `ref`, `type`, `var`), KeywordDeclaration, nil},\n-\t\t\t\t{Words(``, `\\b`, `false`, `nil`, `none`, `true`), KeywordConstant, nil},\n-\t\t\t\t{Words(``, `\\b`, `bool`, `bytes`, `complex`, `imag`, `int`, `locale`, `nothing`, `opaque`, `range`, `real`, `string`, `uint`, `void`), KeywordType, nil},\n-\t\t\t\t{Words(``, `\\b`, `atomic`, `single`, `sync`, `borrowed`, `owned`, `shared`, `unmanaged`, `align`, `as`, `begin`, `break`, `by`, `catch`, `cobegin`, `coforall`, `continue`, `defer`, `delete`, `dmapped`, `do`, `domain`, `else`, `enum`, `except`, `export`, `extern`, `for`, `forall`, `foreach`, `forwarding`, `if`, `implements`, `import`, `index`, `init`, `inline`, `label`, `lambda`, `let`, `lifetime`, `local`, `new`, `noinit`, `on`, `only`, `otherwise`, `override`, `pragma`, `primitive`, `private`, `prototype`, `public`, `reduce`, `require`, `return`, `scan`, `select`, `serial`, `sparse`, `subdomain`, `then`, `this`, `throw`, `throws`, `try`, `use`, `when`, `where`, `while`, `with`, `yield`, `zip`), Keyword, nil},\n-\t\t\t\t{`(iter)(\\s+)`, ByGroups(Keyword, TextWhitespace), Push(\"procname\")},\n-\t\t\t\t{`(proc)(\\s+)`, ByGroups(Keyword, TextWhitespace), Push(\"procname\")},\n-\t\t\t\t{`(operator)(\\s+)`, ByGroups(Keyword, TextWhitespace), Push(\"procname\")},\n-\t\t\t\t{`(class|interface|module|record|union)(\\s+)`, ByGroups(Keyword, TextWhitespace), Push(\"classname\")},\n-\t\t\t\t{`\\d+i`, LiteralNumber, nil},\n-\t\t\t\t{`\\d+\\.\\d*([Ee][-+]\\d+)?i`, LiteralNumber, nil},\n-\t\t\t\t{`\\.\\d+([Ee][-+]\\d+)?i`, LiteralNumber, nil},\n-\t\t\t\t{`\\d+[Ee][-+]\\d+i`, LiteralNumber, nil},\n-\t\t\t\t{`(\\d*\\.\\d+)([eE][+-]?[0-9]+)?i?`, LiteralNumberFloat, nil},\n-\t\t\t\t{`\\d+[eE][+-]?[0-9]+i?`, LiteralNumberFloat, nil},\n-\t\t\t\t{`0[bB][01]+`, LiteralNumberBin, nil},\n-\t\t\t\t{`0[xX][0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t\t{`0[oO][0-7]+`, LiteralNumberOct, nil},\n-\t\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralString, nil},\n-\t\t\t\t{`(=|\\+=|-=|\\*=|/=|\\*\\*=|%=|&=|\\|=|\\^=|&&=|\\|\\|=|<<=|>>=|<=>|<~>|\\.\\.|by|#|\\.\\.\\.|&&|\\|\\||!|&|\\||\\^|~|<<|>>|==|!=|<=|>=|<|>|[+\\-*/%]|\\*\\*)`, Operator, nil},\n-\t\t\t\t{`[:;,.?()\\[\\]{}]`, Punctuation, nil},\n-\t\t\t\t{`[a-zA-Z_][\\w$]*`, NameOther, nil},\n-\t\t\t},\n-\t\t\t\"classname\": {\n-\t\t\t\t{`[a-zA-Z_][\\w$]*`, NameClass, Pop(1)},\n-\t\t\t},\n-\t\t\t\"procname\": {\n-\t\t\t\t{`([a-zA-Z_][.\\w$]*|\\~[a-zA-Z_][.\\w$]*|[+*/!~%<>=&^|\\-:]{1,2})`, NameFunction, Pop(1)},\n-\t\t\t\t{`\\(`, Punctuation, Push(\"receivertype\")},\n-\t\t\t\t{`\\)+\\.`, Punctuation, nil},\n-\t\t\t},\n-\t\t\t\"receivertype\": {\n-\t\t\t\t{Words(``, `\\b`, `atomic`, `single`, `sync`, `borrowed`, `owned`, `shared`, `unmanaged`), Keyword, nil},\n-\t\t\t\t{Words(``, `\\b`, `bool`, `bytes`, `complex`, `imag`, `int`, `locale`, `nothing`, `opaque`, `range`, `real`, `string`, `uint`, `void`), KeywordType, nil},\n-\t\t\t\t{`[^()]*`, NameOther, Pop(1)},\n-\t\t\t},\n-\t\t}\n-\t},\n-))"
    },
    {
      "sha": "7eea429be848f5707b018c7b47bc587365577e4b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/cheetah.go",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcheetah.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcheetah.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcheetah.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,39 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// Cheetah lexer.\n-var Cheetah = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"Cheetah\",\n-\t\tAliases:   []string{\"cheetah\", \"spitfire\"},\n-\t\tFilenames: []string{\"*.tmpl\", \"*.spt\"},\n-\t\tMimeTypes: []string{\"application/x-cheetah\", \"application/x-spitfire\"},\n-\t},\n-\tcheetahRules,\n-))\n-\n-func cheetahRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`(##[^\\n]*)$`, ByGroups(Comment), nil},\n-\t\t\t{`#[*](.|\\n)*?[*]#`, Comment, nil},\n-\t\t\t{`#end[^#\\n]*(?:#|$)`, CommentPreproc, nil},\n-\t\t\t{`#slurp$`, CommentPreproc, nil},\n-\t\t\t{`(#[a-zA-Z]+)([^#\\n]*)(#|$)`, ByGroups(CommentPreproc, Using(\"Python\"), CommentPreproc), nil},\n-\t\t\t{`(\\$)([a-zA-Z_][\\w.]*\\w)`, ByGroups(CommentPreproc, Using(\"Python\")), nil},\n-\t\t\t{`(\\$\\{!?)(.*?)(\\})(?s)`, ByGroups(CommentPreproc, Using(\"Python\"), CommentPreproc), nil},\n-\t\t\t{`(?sx)\n-                (.+?)               # anything, followed by:\n-                (?:\n-                 (?=\\#[#a-zA-Z]*) | # an eval comment\n-                 (?=\\$[a-zA-Z_{]) | # a substitution\n-                 \\Z                 # end of string\n-                )\n-            `, Other, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "32f7a28121b9871aaa69e7876e34dccf8f289d44",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/cql.go",
      "status": "removed",
      "additions": 0,
      "deletions": 70,
      "changes": 70,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcql.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,70 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// CassandraCQL lexer.\n-var CassandraCQL = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:            \"Cassandra CQL\",\n-\t\tAliases:         []string{\"cassandra\", \"cql\"},\n-\t\tFilenames:       []string{\"*.cql\"},\n-\t\tMimeTypes:       []string{\"text/x-cql\"},\n-\t\tNotMultiline:    true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\tcassandraCQLRules,\n-))\n-\n-func cassandraCQLRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`(--|\\/\\/).*\\n?`, CommentSingle, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n-\t\t\t{`(ascii|bigint|blob|boolean|counter|date|decimal|double|float|frozen|inet|int|list|map|set|smallint|text|time|timestamp|timeuuid|tinyint|tuple|uuid|varchar|varint)\\b`, NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `ADD`, `AGGREGATE`, `ALL`, `ALLOW`, `ALTER`, `AND`, `ANY`, `APPLY`, `AS`, `ASC`, `AUTHORIZE`, `BATCH`, `BEGIN`, `BY`, `CLUSTERING`, `COLUMNFAMILY`, `COMPACT`, `CONSISTENCY`, `COUNT`, `CREATE`, `CUSTOM`, `DELETE`, `DESC`, `DISTINCT`, `DROP`, `EACH_QUORUM`, `ENTRIES`, `EXISTS`, `FILTERING`, `FROM`, `FULL`, `GRANT`, `IF`, `IN`, `INDEX`, `INFINITY`, `INSERT`, `INTO`, `KEY`, `KEYS`, `KEYSPACE`, `KEYSPACES`, `LEVEL`, `LIMIT`, `LOCAL_ONE`, `LOCAL_QUORUM`, `MATERIALIZED`, `MODIFY`, `NAN`, `NORECURSIVE`, `NOSUPERUSER`, `NOT`, `OF`, `ON`, `ONE`, `ORDER`, `PARTITION`, `PASSWORD`, `PER`, `PERMISSION`, `PERMISSIONS`, `PRIMARY`, `QUORUM`, `RENAME`, `REVOKE`, `SCHEMA`, `SELECT`, `STATIC`, `STORAGE`, `SUPERUSER`, `TABLE`, `THREE`, `TO`, `TOKEN`, `TRUNCATE`, `TTL`, `TWO`, `TYPE`, `UNLOGGED`, `UPDATE`, `USE`, `USER`, `USERS`, `USING`, `VALUES`, `VIEW`, `WHERE`, `WITH`, `WRITETIME`, `REPLICATION`, `OR`, `REPLACE`, `FUNCTION`, `CALLED`, `INPUT`, `RETURNS`, `LANGUAGE`, `ROLE`, `ROLES`, `TRIGGER`, `DURABLE_WRITES`, `LOGIN`, `OPTIONS`, `LOGGED`, `SFUNC`, `STYPE`, `FINALFUNC`, `INITCOND`, `IS`, `CONTAINS`, `JSON`, `PAGING`, `OFF`), Keyword, nil},\n-\t\t\t{\"[+*/<>=~!@#%^&|`?-]+\", Operator, nil},\n-\t\t\t{\n-\t\t\t\t`(?s)(java|javascript)(\\s+)(AS)(\\s+)('|\\$\\$)(.*?)(\\5)`,\n-\t\t\t\tUsingByGroup(1, 6,\n-\t\t\t\t\tNameBuiltin, TextWhitespace, Keyword, TextWhitespace,\n-\t\t\t\t\tLiteralStringHeredoc, LiteralStringHeredoc, LiteralStringHeredoc),\n-\t\t\t\tnil,\n-\t\t\t},\n-\t\t\t{`(true|false|null)\\b`, KeywordConstant, nil},\n-\t\t\t{`0x[0-9a-f]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}`, LiteralNumberHex, nil},\n-\t\t\t{`\\.[0-9]+(e[+-]?[0-9]+)?`, Error, nil},\n-\t\t\t{`-?[0-9]+(\\.[0-9])?(e[+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`'`, LiteralStringSingle, Push(\"string\")},\n-\t\t\t{`\"`, LiteralStringName, Push(\"quoted-ident\")},\n-\t\t\t{`\\$\\$`, LiteralStringHeredoc, Push(\"dollar-string\")},\n-\t\t\t{`[a-z_]\\w*`, Name, nil},\n-\t\t\t{`:(['\"]?)[a-z]\\w*\\b\\1`, NameVariable, nil},\n-\t\t\t{`[;:()\\[\\]\\{\\},.]`, Punctuation, nil},\n-\t\t},\n-\t\t\"multiline-comments\": {\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[^/*]+`, CommentMultiline, nil},\n-\t\t\t{`[/*]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^']+`, LiteralStringSingle, nil},\n-\t\t\t{`''`, LiteralStringSingle, nil},\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t},\n-\t\t\"quoted-ident\": {\n-\t\t\t{`[^\"]+`, LiteralStringName, nil},\n-\t\t\t{`\"\"`, LiteralStringName, nil},\n-\t\t\t{`\"`, LiteralStringName, Pop(1)},\n-\t\t},\n-\t\t\"dollar-string\": {\n-\t\t\t{`[^\\$]+`, LiteralStringHeredoc, nil},\n-\t\t\t{`\\$\\$`, LiteralStringHeredoc, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "b48816ae3046a18a6b5572c7a0b031ef09564e37",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/docker.go",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fdocker.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fdocker.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fdocker.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,32 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// Docker lexer.\n-var Docker = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:            \"Docker\",\n-\t\tAliases:         []string{\"docker\", \"dockerfile\"},\n-\t\tFilenames:       []string{\"Dockerfile\", \"Dockerfile.*\", \"*.docker\"},\n-\t\tMimeTypes:       []string{\"text/x-dockerfile-config\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tdockerRules,\n-))\n-\n-func dockerRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`#.*`, Comment, nil},\n-\t\t\t{`(ONBUILD)((?:\\s*\\\\?\\s*))`, ByGroups(Keyword, Using(\"Bash\")), nil},\n-\t\t\t{`(HEALTHCHECK)(((?:\\s*\\\\?\\s*)--\\w+=\\w+(?:\\s*\\\\?\\s*))*)`, ByGroups(Keyword, Using(\"Bash\")), nil},\n-\t\t\t{`(VOLUME|ENTRYPOINT|CMD|SHELL)((?:\\s*\\\\?\\s*))(\\[.*?\\])`, ByGroups(Keyword, Using(\"Bash\"), Using(\"JSON\")), nil},\n-\t\t\t{`(LABEL|ENV|ARG)((?:(?:\\s*\\\\?\\s*)\\w+=\\w+(?:\\s*\\\\?\\s*))*)`, ByGroups(Keyword, Using(\"Bash\")), nil},\n-\t\t\t{`((?:FROM|MAINTAINER|EXPOSE|WORKDIR|USER|STOPSIGNAL)|VOLUME)\\b(.*)`, ByGroups(Keyword, LiteralString), nil},\n-\t\t\t{`((?:RUN|CMD|ENTRYPOINT|ENV|ARG|LABEL|ADD|COPY))`, Keyword, nil},\n-\t\t\t{`(.*\\\\\\n)*.+`, Using(\"Bash\"), nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "6f2b2d50882c58b80cad77bcbb59091665df5864",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/agda.xml",
      "status": "added",
      "additions": 66,
      "deletions": 0,
      "changes": 66,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fagda.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fagda.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fagda.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,66 @@\n+<lexer>\n+  <config>\n+    <name>Agda</name>\n+    <alias>agda</alias>\n+    <filename>*.agda</filename>\n+    <mime_type>text/x-agda</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"^(\\s*)([^\\s(){}]+)(\\s*)(:)(\\s*)\"><bygroups><token type=\"TextWhitespace\"/><token type=\"NameFunction\"/><token type=\"TextWhitespace\"/><token type=\"OperatorWord\"/><token type=\"TextWhitespace\"/></bygroups></rule>\n+      <rule pattern=\"--(?![!#$%&amp;*+./&lt;=&gt;?@^|_~:\\\\]).*?$\"><token type=\"CommentSingle\"/></rule>\n+      <rule pattern=\"\\{-\"><token type=\"CommentMultiline\"/><push state=\"comment\"/></rule>\n+      <rule pattern=\"\\{!\"><token type=\"CommentMultiline\"/><push state=\"hole\"/></rule>\n+      <rule pattern=\"\\b(abstract|codata|coinductive|constructor|data|do|eta-equality|field|forall|hiding|in|inductive|infix|infixl|infixr|instance|interleaved|let|macro|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|quote|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)(?!\\&#x27;)\\b\"><token type=\"KeywordReserved\"/></rule>\n+      <rule pattern=\"(import|module)(\\s+)\"><bygroups><token type=\"KeywordReserved\"/><token type=\"TextWhitespace\"/></bygroups><push state=\"module\"/></rule>\n+      <rule pattern=\"\\b(Set|Prop)[\\u2080-\\u2089]*\\b\"><token type=\"KeywordType\"/></rule>\n+      <rule pattern=\"(\\(|\\)|\\{|\\})\"><token type=\"Operator\"/></rule>\n+      <rule pattern=\"(\\.{1,3}|\\||\\u03BB|\\u2200|\\u2192|:|=|-&gt;)\"><token type=\"OperatorWord\"/></rule>\n+      <rule pattern=\"\\d+[eE][+-]?\\d+\"><token type=\"LiteralNumberFloat\"/></rule>\n+      <rule pattern=\"\\d+\\.\\d+([eE][+-]?\\d+)?\"><token type=\"LiteralNumberFloat\"/></rule>\n+      <rule pattern=\"0[xX][\\da-fA-F]+\"><token type=\"LiteralNumberHex\"/></rule>\n+      <rule pattern=\"\\d+\"><token type=\"LiteralNumberInteger\"/></rule>\n+      <rule pattern=\"&#x27;\"><token type=\"LiteralStringChar\"/><push state=\"character\"/></rule>\n+      <rule pattern=\"&quot;\"><token type=\"LiteralString\"/><push state=\"string\"/></rule>\n+      <rule pattern=\"[^\\s(){}]+\"><token type=\"Text\"/></rule>\n+      <rule pattern=\"\\s+?\"><token type=\"TextWhitespace\"/></rule>\n+    </state>\n+    <state name=\"hole\">\n+      <rule pattern=\"[^!{}]+\"><token type=\"CommentMultiline\"/></rule>\n+      <rule pattern=\"\\{!\"><token type=\"CommentMultiline\"/><push/></rule>\n+      <rule pattern=\"!\\}\"><token type=\"CommentMultiline\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"[!{}]\"><token type=\"CommentMultiline\"/></rule>\n+    </state>\n+    <state name=\"module\">\n+      <rule pattern=\"\\{-\"><token type=\"CommentMultiline\"/><push state=\"comment\"/></rule>\n+      <rule pattern=\"[a-zA-Z][\\w.\\&#x27;]*\"><token type=\"Name\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"[\\W0-9_]+\"><token type=\"Text\"/></rule>\n+    </state>\n+    <state name=\"comment\">\n+      <rule pattern=\"[^-{}]+\"><token type=\"CommentMultiline\"/></rule>\n+      <rule pattern=\"\\{-\"><token type=\"CommentMultiline\"/><push/></rule>\n+      <rule pattern=\"-\\}\"><token type=\"CommentMultiline\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"[-{}]\"><token type=\"CommentMultiline\"/></rule>\n+    </state>\n+    <state name=\"character\">\n+      <rule pattern=\"[^\\\\&#x27;]&#x27;\"><token type=\"LiteralStringChar\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\\\\"><token type=\"LiteralStringEscape\"/><push state=\"escape\"/></rule>\n+      <rule pattern=\"&#x27;\"><token type=\"LiteralStringChar\"/><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"[^\\\\&quot;]+\"><token type=\"LiteralString\"/></rule>\n+      <rule pattern=\"\\\\\"><token type=\"LiteralStringEscape\"/><push state=\"escape\"/></rule>\n+      <rule pattern=\"&quot;\"><token type=\"LiteralString\"/><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"escape\">\n+      <rule pattern=\"[abfnrtv&quot;\\&#x27;&amp;\\\\]\"><token type=\"LiteralStringEscape\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\^[][A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸ-ŹŻŽƁ-ƂƄƆ-ƇƉ-ƋƎ-ƑƓ-ƔƖ-ƘƜ-ƝƟ-ƠƢƤƦ-ƧƩƬƮ-ƯƱ-ƳƵƷ-ƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺ-ȻȽ-ȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎ-ΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹ-ϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀ-ӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵᲐ-ᲺᲽ-ᲿḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾ-ℿⅅↃⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽ-ꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞮꞰ-ꞴꞶꞸＡ-Ｚ𐐀-𐐧𐒰-𐓓𐲀-𐲲𑢠-𑢿𖹀-𖹟𝐀-𝐙𝐴-𝑍𝑨-𝒁𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒵𝓐-𝓩𝔄-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔸-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕬-𝖅𝖠-𝖹𝗔-𝗭𝘈-𝘡𝘼-𝙕𝙰-𝚉𝚨-𝛀𝛢-𝛺𝜜-𝜴𝝖-𝝮𝞐-𝞨𝟊𞤀-𞤡@^_]\"><token type=\"LiteralStringEscape\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"NUL|SOH|[SE]TX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|S[OI]|DLE|DC[1-4]|NAK|SYN|ETB|CAN|EM|SUB|ESC|[FGRU]S|SP|DEL\"><token type=\"LiteralStringEscape\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"o[0-7]+\"><token type=\"LiteralStringEscape\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"x[\\da-fA-F]+\"><token type=\"LiteralStringEscape\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\d+\"><token type=\"LiteralStringEscape\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"(\\s+)(\\\\)\"><bygroups><token type=\"TextWhitespace\"/><token type=\"LiteralStringEscape\"/></bygroups><pop depth=\"1\"/></rule>\n+    </state>\n+  </rules>\n+</lexer>\n+"
    },
    {
      "sha": "1de9ea6cc3912c0787da4267bfdc1d0e1faaf9d0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/alloy.xml",
      "status": "added",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Falloy.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Falloy.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Falloy.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,58 @@\n+\n+<lexer>\n+  <config>\n+    <name>Alloy</name>\n+    <alias>alloy</alias>\n+    <filename>*.als</filename>\n+    <mime_type>text/x-alloy</mime_type>\n+    <dot_all>true</dot_all>\n+  </config>\n+  <rules>\n+    <state name=\"sig\">\n+      <rule pattern=\"(extends)\\b\"><token type=\"Keyword\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"[a-zA-Z_][\\w]*&quot;*\"><token type=\"Name\"/></rule>\n+      <rule pattern=\"[^\\S\\n]+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\",\"><token type=\"Punctuation\"/></rule>\n+      <rule pattern=\"\\{\"><token type=\"Operator\"/><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"module\">\n+      <rule pattern=\"[^\\S\\n]+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\"[a-zA-Z_][\\w]*&quot;*\"><token type=\"Name\"/><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"fun\">\n+      <rule pattern=\"[^\\S\\n]+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\"\\{\"><token type=\"Operator\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"[a-zA-Z_][\\w]*&quot;*\"><token type=\"Name\"/><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"fact\">\n+      <rule><include state=\"fun\"/></rule>\n+      <rule pattern=\"&quot;\\b(\\\\\\\\|\\\\[^\\\\]|[^&quot;\\\\])*&quot;\"><token type=\"LiteralString\"/><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule pattern=\"--.*?$\"><token type=\"CommentSingle\"/></rule>\n+      <rule pattern=\"//.*?$\"><token type=\"CommentSingle\"/></rule>\n+      <rule pattern=\"/\\*.*?\\*/\"><token type=\"CommentMultiline\"/></rule>\n+      <rule pattern=\"[^\\S\\n]+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\"(module|open)(\\s+)\"><bygroups><token type=\"KeywordNamespace\"/><token type=\"TextWhitespace\"/></bygroups><push state=\"module\"/></rule>\n+      <rule pattern=\"(sig|enum)(\\s+)\"><bygroups><token type=\"KeywordDeclaration\"/><token type=\"TextWhitespace\"/></bygroups><push state=\"sig\"/></rule>\n+      <rule pattern=\"(iden|univ|none)\\b\"><token type=\"KeywordConstant\"/></rule>\n+      <rule pattern=\"(int|Int)\\b\"><token type=\"KeywordType\"/></rule>\n+      <rule pattern=\"(var|this|abstract|extends|set|seq|one|lone|let)\\b\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"(all|some|no|sum|disj|when|else)\\b\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"(run|check|for|but|exactly|expect|as|steps)\\b\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"(always|after|eventually|until|release)\\b\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"(historically|before|once|since|triggered)\\b\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"(and|or|implies|iff|in)\\b\"><token type=\"OperatorWord\"/></rule>\n+      <rule pattern=\"(fun|pred|assert)(\\s+)\"><bygroups><token type=\"Keyword\"/><token type=\"TextWhitespace\"/></bygroups><push state=\"fun\"/></rule>\n+      <rule pattern=\"(fact)(\\s+)\"><bygroups><token type=\"Keyword\"/><token type=\"TextWhitespace\"/></bygroups><push state=\"fact\"/></rule>\n+      <rule pattern=\"!|#|&amp;&amp;|\\+\\+|&lt;&lt;|&gt;&gt;|&gt;=|&lt;=&gt;|&lt;=|\\.\\.|\\.|-&gt;\"><token type=\"Operator\"/></rule>\n+      <rule pattern=\"[-+/*%=&lt;&gt;&amp;!^|~{}\\[\\]().\\&#x27;;]\"><token type=\"Operator\"/></rule>\n+      <rule pattern=\"[a-zA-Z_][\\w]*&quot;*\"><token type=\"Name\"/></rule>\n+      <rule pattern=\"[:,]\"><token type=\"Punctuation\"/></rule>\n+      <rule pattern=\"[0-9]+\"><token type=\"LiteralNumberInteger\"/></rule>\n+      <rule pattern=\"&quot;\\b(\\\\\\\\|\\\\[^\\\\]|[^&quot;\\\\])*&quot;\"><token type=\"LiteralString\"/></rule>\n+      <rule pattern=\"\\n\"><token type=\"TextWhitespace\"/></rule>\n+    </state>\n+  </rules>\n+</lexer>\n+"
    },
    {
      "sha": "e7119737e1c31d6e987d754e3e05a871b72b0a6d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/arangodb_aql.xml",
      "status": "renamed",
      "additions": 8,
      "deletions": 9,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Farangodb_aql.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Farangodb_aql.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Farangodb_aql.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -4,9 +4,9 @@\n     <alias>aql</alias>\n     <filename>*.aql</filename>\n     <mime_type>text/x-aql</mime_type>\n+    <case_insensitive>true</case_insensitive>\n     <dot_all>true</dot_all>\n     <ensure_nl>true</ensure_nl>\n-    <case_insensitive>true</case_insensitive>\n   </config>\n   <rules>\n     <state name=\"comments-and-whitespace\">\n@@ -37,10 +37,10 @@\n       <rule pattern=\"\\\\.\">\n         <token type=\"LiteralStringDouble\"/>\n       </rule>\n-      <rule pattern=\"[^&quot;\\\\]+\">\n+      <rule pattern=\"[^&#34;\\\\]+\">\n         <token type=\"LiteralStringDouble\"/>\n       </rule>\n-      <rule pattern=\"&quot;\">\n+      <rule pattern=\"&#34;\">\n         <token type=\"LiteralStringDouble\"/>\n         <pop depth=\"1\"/>\n       </rule>\n@@ -49,10 +49,10 @@\n       <rule pattern=\"\\\\.\">\n         <token type=\"LiteralStringSingle\"/>\n       </rule>\n-      <rule pattern=\"[^'\\\\]+\">\n+      <rule pattern=\"[^&#39;\\\\]+\">\n         <token type=\"LiteralStringSingle\"/>\n       </rule>\n-      <rule pattern=\"'\">\n+      <rule pattern=\"&#39;\">\n         <token type=\"LiteralStringSingle\"/>\n         <pop depth=\"1\"/>\n       </rule>\n@@ -155,15 +155,14 @@\n       <rule pattern=\"(?:to_bool|to_number|to_string|to_array|to_list|is_null|is_bool|is_number|is_string|is_array|is_list|is_object|is_document|is_datestring|typename|json_stringify|json_parse|concat|concat_separator|char_length|lower|upper|substring|substring_bytes|left|right|trim|reverse|contains|log|log2|log10|exp|exp2|sin|cos|tan|asin|acos|atan|atan2|radians|degrees|pi|regex_test|regex_replace|like|floor|ceil|round|abs|rand|sqrt|pow|length|count|min|max|average|avg|sum|product|median|variance_population|variance_sample|variance|percentile|bit_and|bit_or|bit_xor|bit_negate|bit_test|bit_popcount|bit_shift_left|bit_shift_right|bit_construct|bit_deconstruct|bit_to_string|bit_from_string|first|last|unique|outersection|interleave|in_range|jaccard|matches|merge|merge_recursive|has|attributes|keys|values|unset|unset_recursive|keep|keep_recursive|near|within|within_rectangle|is_in_polygon|distance|fulltext|stddev_sample|stddev_population|stddev|slice|nth|position|contains_array|translate|zip|call|apply|push|append|pop|shift|unshift|remove_value|remove_values|remove_nth|replace_nth|date_now|date_timestamp|date_iso8601|date_dayofweek|date_year|date_month|date_day|date_hour|date_minute|date_second|date_millisecond|date_dayofyear|date_isoweek|date_isoweekyear|date_leapyear|date_quarter|date_days_in_month|date_trunc|date_round|date_add|date_subtract|date_diff|date_compare|date_format|date_utctolocal|date_localtoutc|date_timezone|date_timezones|fail|passthru|v8|sleep|schema_get|schema_validate|shard_id|version|noopt|noeval|not_null|first_list|first_document|parse_identifier|current_user|current_database|collection_count|pregel_result|collections|document|decode_rev|range|union|union_distinct|minus|intersection|flatten|is_same_collection|check_document|ltrim|rtrim|find_first|find_last|split|substitute|ipv4_to_number|ipv4_from_number|is_ipv4|md5|sha1|sha256|sha512|crc32|fnv64|hash|random_token|to_base64|to_hex|encode_uri_component|soundex|assert|warn|is_key|sorted|sorted_unique|count_distinct|count_unique|levenshtein_distance|levenshtein_match|regex_matches|regex_split|ngram_match|ngram_similarity|ngram_positional_similarity|uuid|tokens|exists|starts_with|phrase|min_match|bm25|tfidf|boost|analyzer|offset_info|value|cosine_similarity|decay_exp|decay_gauss|decay_linear|l1_distance|l2_distance|minhash|minhash_count|minhash_error|minhash_match|geo_point|geo_multipoint|geo_polygon|geo_multipolygon|geo_linestring|geo_multilinestring|geo_contains|geo_intersects|geo_equals|geo_distance|geo_area|geo_in_range)(?=\\s*\\()\">\n         <token type=\"NameFunction\"/>\n       </rule>\n-      <rule pattern=\"&quot;\">\n+      <rule pattern=\"&#34;\">\n         <token type=\"LiteralStringDouble\"/>\n         <push state=\"double-quote\"/>\n       </rule>\n-      <rule pattern=\"'\">\n+      <rule pattern=\"&#39;\">\n         <token type=\"LiteralStringSingle\"/>\n         <push state=\"single-quote\"/>\n       </rule>\n-      <!-- not part of the language but useful for highlighting query explain outputs -->\n       <rule pattern=\"#\\d+\\b\">\n         <token type=\"NameLabel\"/>\n       </rule>\n@@ -172,4 +171,4 @@\n       </rule>\n     </state>\n   </rules>\n-</lexer>\n+</lexer>\n\\ No newline at end of file",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/aql.xml"
    },
    {
      "sha": "d704a8ffaa405c959f5124afee8f4d0bc740801f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/bash.xml",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbash.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbash.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbash.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -26,6 +26,9 @@\n     <filename>PKGBUILD</filename>\n     <mime_type>application/x-sh</mime_type>\n     <mime_type>application/x-shellscript</mime_type>\n+    <analyse first=\"true\" >\n+      <regex pattern=\"(?m)^#!.*/bin/(?:env |)(?:bash|zsh|sh|ksh)\" score=\"1.0\" />\n+    </analyse>\n   </config>\n   <rules>\n     <state name=\"data\">"
    },
    {
      "sha": "82c5fd6d0ff425ee7fd099f7779a6306d67deb45",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/bash_session.xml",
      "status": "renamed",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbash_session.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbash_session.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbash_session.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,6 +1,6 @@\n <lexer>\n   <config>\n-    <name>BashSession</name>\n+    <name>Bash Session</name>\n     <alias>bash-session</alias>\n     <alias>console</alias>\n     <alias>shell-session</alias>\n@@ -10,7 +10,7 @@\n   </config>\n   <rules>\n     <state name=\"root\">\n-      <rule pattern=\"^((?:\\[[^]]+@[^]]+\\]\\s?)?[#$%>])(\\s*)(.*\\n?)\">\n+      <rule pattern=\"^((?:\\[[^]]+@[^]]+\\]\\s?)?[#$%&gt;])(\\s*)(.*\\n?)\">\n         <bygroups>\n           <token type=\"GenericPrompt\"/>\n           <token type=\"Text\"/>",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/bashsession.xml"
    },
    {
      "sha": "db90f31b30a9e5088f82f1ac02f00b343ada07af",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/bicep.xml",
      "status": "modified",
      "additions": 50,
      "deletions": 34,
      "changes": 84,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbicep.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbicep.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbicep.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -5,63 +5,79 @@\n     <filename>*.bicep</filename>\n   </config>\n   <rules>\n-    <state name=\"root\">\n+    <state name=\"interp\">\n+      <rule pattern=\"'\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\\\.\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"\\$\\{\">\n+        <token type=\"LiteralStringInterpol\"/>\n+        <push state=\"interp-inside\"/>\n+      </rule>\n+      <rule pattern=\"\\$\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"[^'\\\\$]+\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+    </state>\n+    <state name=\"interp-inside\">\n+      <rule pattern=\"\\}\">\n+        <token type=\"LiteralStringInterpol\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"root\"/>\n+      </rule>\n+    </state>\n+    <state name=\"commentsandwhitespace\">\n       <rule pattern=\"//[^\\n\\r]+\">\n         <token type=\"CommentSingle\"/>\n       </rule>\n       <rule pattern=\"/\\*.*?\\*/\">\n         <token type=\"CommentMultiline\"/>\n       </rule>\n-      <rule pattern=\"([&#39;]?\\w+[&#39;]?)(:)\">\n-        <bygroups>\n-          <token type=\"NameProperty\"/>\n-          <token type=\"Punctuation\"/>\n-        </bygroups>\n-      </rule>\n-      <rule pattern=\"\\b(&#39;(resourceGroup|subscription|managementGroup|tenant)&#39;)\\b\">\n-        <token type=\"KeywordNamespace\"/>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"TextWhitespace\"/>\n       </rule>\n-      <rule pattern=\"&#39;[\\w\\$\\{\\(\\)\\}\\.]{1,}?&#39;\">\n-        <token type=\"LiteralStringInterpol\"/>\n+    </state>\n+    <state name=\"root\">\n+      <rule>\n+        <include state=\"commentsandwhitespace\"/>\n       </rule>\n-      <rule pattern=\"(&#39;&#39;&#39;|&#39;).*?(&#39;&#39;&#39;|&#39;)\">\n+      <rule pattern=\"'''.*?'''\">\n         <token type=\"LiteralString\"/>\n       </rule>\n-      <rule pattern=\"\\b(allowed|batchSize|description|maxLength|maxValue|metadata|minLength|minValue|secure)\\b\">\n-        <token type=\"NameDecorator\"/>\n+      <rule pattern=\"'\">\n+        <token type=\"LiteralString\"/>\n+        <push state=\"interp\"/>\n       </rule>\n-      <rule pattern=\"\\b(az|sys)\\.\">\n-        <token type=\"NameNamespace\"/>\n+      <rule pattern=\"#[\\w-]+\\b\">\n+        <token type=\"CommentPreproc\"/>\n       </rule>\n-      <rule pattern=\"\\b(any|array|concat|contains|empty|first|intersection|items|last|length|min|max|range|skip|take|union|dateTimeAdd|utcNow|deployment|environment|loadFileAsBase64|loadTextContent|int|json|extensionResourceId|getSecret|list|listKeys|listKeyValue|listAccountSas|listSecrets|pickZones|reference|resourceId|subscriptionResourceId|tenantResourceId|managementGroup|resourceGroup|subscription|tenant|base64|base64ToJson|base64ToString|dataUri|dataUriToString|endsWith|format|guid|indexOf|lastIndexOf|length|newGuid|padLeft|replace|split|startsWith|string|substring|toLower|toUpper|trim|uniqueString|uri|uriComponent|uriComponentToString)\\b\">\n+      <rule pattern=\"[\\w_]+(?=\\()\">\n         <token type=\"NameFunction\"/>\n       </rule>\n-      <rule pattern=\"\\b(bool)(\\()\">\n-        <bygroups>\n-          <token type=\"NameFunction\"/>\n-          <token type=\"Punctuation\"/>\n-        </bygroups>\n-      </rule>\n-      <rule pattern=\"\\b(for|if|in)\\b\">\n-        <token type=\"Keyword\"/>\n-      </rule>\n-      <rule pattern=\"\\b(module|output|param|resource|var)\\b\">\n+      <rule pattern=\"\\b(metadata|targetScope|resource|module|param|var|output|for|in|if|existing|import|as|type|with|using|func|assert)\\b\">\n         <token type=\"KeywordDeclaration\"/>\n       </rule>\n-      <rule pattern=\"\\b(array|bool|int|object|string)\\b\">\n-        <token type=\"KeywordType\"/>\n+      <rule pattern=\"\\b(true|false|null)\\b\">\n+        <token type=\"KeywordConstant\"/>\n       </rule>\n       <rule pattern=\"(&gt;=|&gt;|&lt;=|&lt;|==|!=|=~|!~|::|&amp;&amp;|\\?\\?|!|-|%|\\*|\\/|\\+)\">\n         <token type=\"Operator\"/>\n       </rule>\n-      <rule pattern=\"[\\(\\)\\[\\]\\.:\\?{}@=]\">\n+      <rule pattern=\"(\\(|\\)|\\[|\\]|\\.|:|\\?|{|}|@|,|\\||=&gt;|=)\">\n         <token type=\"Punctuation\"/>\n       </rule>\n-      <rule pattern=\"[\\w_-]+\">\n-        <token type=\"Text\"/>\n+      <rule pattern=\"[\\w_]+\">\n+        <token type=\"NameVariable\"/>\n       </rule>\n-      <rule pattern=\"\\s+\">\n-        <token type=\"TextWhitespace\"/>\n+      <rule pattern=\"[0-9]+\">\n+        <token type=\"LiteralNumberInteger\"/>\n       </rule>\n     </state>\n   </rules>"
    },
    {
      "sha": "801a9543b9bfa9c839a97c681ac4f3904f1c6d48",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/c#.xml",
      "status": "renamed",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc%23.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc%23.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc%23.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -52,7 +52,7 @@\n       <rule pattern=\"0[xX][0-9a-fA-F]+[Ll]?|\\d[_\\d]*(\\.\\d*)?([eE][+-]?\\d+)?[flFLdD]?\">\n         <token type=\"LiteralNumber\"/>\n       </rule>\n-      <rule pattern=\"#[ \\t]*(if|endif|else|elif|define|undef|line|error|warning|region|endregion|pragma|nullable)\\b[^\\n\\r]+\">\n+      <rule pattern=\"#[ \\t]*(if|endif|else|elif|define|undef|line|error|warning|region|endregion|pragma|nullable)\\b\">\n         <token type=\"CommentPreproc\"/>\n       </rule>\n       <rule pattern=\"\\b(extern)(\\s+)(alias)\\b\">\n@@ -62,7 +62,7 @@\n           <token type=\"Keyword\"/>\n         </bygroups>\n       </rule>\n-      <rule pattern=\"(abstract|as|async|await|base|break|by|case|catch|checked|const|continue|default|delegate|do|else|enum|event|explicit|extern|false|finally|fixed|for|foreach|goto|if|implicit|in|init|internal|is|let|lock|new|null|on|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|true|try|typeof|unchecked|unsafe|virtual|void|while|get|set|new|partial|yield|add|remove|value|alias|ascending|descending|from|group|into|orderby|select|thenby|where|join|equals)\\b\">\n+      <rule pattern=\"(as|await|base|break|by|case|catch|checked|continue|default|delegate|do|else|event|finally|fixed|for|foreach|goto|if|in|init|is|let|lock|new|on|out|params|readonly|ref|return|sizeof|stackalloc|switch|this|throw|try|typeof|unchecked|virtual|void|while|get|set|new|yield|add|remove|value|alias|ascending|descending|from|group|into|orderby|select|thenby|where|join|equals)\\b\">\n         <token type=\"Keyword\"/>\n       </rule>\n       <rule pattern=\"(global)(::)\">\n@@ -71,9 +71,15 @@\n           <token type=\"Punctuation\"/>\n         </bygroups>\n       </rule>\n+      <rule pattern=\"(abstract|async|const|enum|explicit|extern|implicit|internal|operator|override|partial|private|protected|public|static|sealed|unsafe|volatile)\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n       <rule pattern=\"(bool|byte|char|decimal|double|dynamic|float|int|long|object|sbyte|short|string|uint|ulong|ushort|var)\\b\\??\">\n         <token type=\"KeywordType\"/>\n       </rule>\n+      <rule pattern=\"(true|false|null)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n       <rule pattern=\"(class|struct|record|interface)(\\s+)\">\n         <bygroups>\n           <token type=\"Keyword\"/>",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/csharp.xml"
    },
    {
      "sha": "680a19afba529d7ee1e0b7149c21b23d902a9ed2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/c++.xml",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc%2B%2B.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc%2B%2B.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc%2B%2B.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -15,9 +15,14 @@\n     <filename>*.H</filename>\n     <filename>*.cp</filename>\n     <filename>*.CPP</filename>\n+    <filename>*.tpp</filename>\n     <mime_type>text/x-c++hdr</mime_type>\n     <mime_type>text/x-c++src</mime_type>\n     <ensure_nl>true</ensure_nl>\n+    <analyse first=\"true\">\n+      <regex pattern=\"#include &lt;[a-z_]+>\" score=\"0.2\" />\n+      <regex pattern=\"using namespace \" score=\"0.4\" />\n+    </analyse>\n   </config>\n   <rules>\n     <state name=\"classname\">\n@@ -79,7 +84,7 @@\n       </rule>\n     </state>\n     <state name=\"macro\">\n-      <rule pattern=\"(include)(\\s*(?:/[*].*?[*]/\\s*)?)([^\\n]+)\">\n+      <rule pattern=\"(include)(\\s+)(&quot;[^&quot;]+?&quot;|&lt;[^&gt;]+?&gt;)\">\n         <bygroups>\n           <token type=\"CommentPreproc\"/>\n           <token type=\"Text\"/>"
    },
    {
      "sha": "35ee32dce68aadd5926ee1b026d4c3a714162f00",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/c.xml",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -11,6 +11,10 @@\n     <mime_type>image/x-xbitmap</mime_type>\n     <mime_type>image/x-xpixmap</mime_type>\n     <ensure_nl>true</ensure_nl>\n+    <analyse first=\"true\" >\n+      <regex pattern=\"(?m)^\\s*#include &lt;\" score=\"0.1\" />\n+      <regex pattern=\"(?m)^\\s*#ifn?def \" score=\"0.1\" />\n+    </analyse>\n   </config>\n   <rules>\n     <state name=\"statement\">"
    },
    {
      "sha": "1a78f99a143dc0649c1a9cdf064e8fed77c36eaf",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/cassandra_cql.xml",
      "status": "added",
      "additions": 137,
      "deletions": 0,
      "changes": 137,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcassandra_cql.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcassandra_cql.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcassandra_cql.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,137 @@\n+<lexer>\n+  <config>\n+    <name>Cassandra CQL</name>\n+    <alias>cassandra</alias>\n+    <alias>cql</alias>\n+    <filename>*.cql</filename>\n+    <mime_type>text/x-cql</mime_type>\n+    <case_insensitive>true</case_insensitive>\n+    <not_multiline>true</not_multiline>\n+  </config>\n+  <rules>\n+    <state name=\"string\">\n+      <rule pattern=\"[^&#39;]+\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"&#39;&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"quoted-ident\">\n+      <rule pattern=\"[^&#34;]+\">\n+        <token type=\"LiteralStringName\"/>\n+      </rule>\n+      <rule pattern=\"&#34;&#34;\">\n+        <token type=\"LiteralStringName\"/>\n+      </rule>\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralStringName\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"dollar-string\">\n+      <rule pattern=\"[^\\$]+\">\n+        <token type=\"LiteralStringHeredoc\"/>\n+      </rule>\n+      <rule pattern=\"\\$\\$\">\n+        <token type=\"LiteralStringHeredoc\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"TextWhitespace\"/>\n+      </rule>\n+      <rule pattern=\"(--|\\/\\/).*\\n?\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/\\*\">\n+        <token type=\"CommentMultiline\"/>\n+        <push state=\"multiline-comments\"/>\n+      </rule>\n+      <rule pattern=\"(ascii|bigint|blob|boolean|counter|date|decimal|double|float|frozen|inet|int|list|map|set|smallint|text|time|timestamp|timeuuid|tinyint|tuple|uuid|varchar|varint)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"(DURABLE_WRITES|LOCAL_QUORUM|MATERIALIZED|COLUMNFAMILY|REPLICATION|NORECURSIVE|NOSUPERUSER|PERMISSIONS|EACH_QUORUM|CONSISTENCY|PERMISSION|CLUSTERING|WRITETIME|SUPERUSER|KEYSPACES|AUTHORIZE|LOCAL_ONE|AGGREGATE|FINALFUNC|PARTITION|FILTERING|UNLOGGED|CONTAINS|DISTINCT|FUNCTION|LANGUAGE|INFINITY|INITCOND|TRUNCATE|KEYSPACE|PASSWORD|REPLACE|OPTIONS|TRIGGER|STORAGE|ENTRIES|RETURNS|COMPACT|PRIMARY|EXISTS|STATIC|PAGING|UPDATE|CUSTOM|VALUES|INSERT|DELETE|MODIFY|CREATE|SELECT|SCHEMA|LOGGED|REVOKE|RENAME|QUORUM|CALLED|STYPE|ORDER|ALTER|BATCH|BEGIN|COUNT|ROLES|APPLY|WHERE|SFUNC|LEVEL|INPUT|LOGIN|INDEX|TABLE|THREE|ALLOW|TOKEN|LIMIT|USING|USERS|GRANT|FROM|KEYS|JSON|USER|INTO|ROLE|TYPE|VIEW|DESC|WITH|DROP|FULL|ASC|TTL|OFF|PER|KEY|USE|ADD|NAN|ONE|ALL|ANY|TWO|AND|NOT|AS|IN|IF|OF|IS|ON|TO|BY|OR)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"[+*/&lt;&gt;=~!@#%^&amp;|`?-]+\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"(?s)(java|javascript)(\\s+)(AS)(\\s+)(&#39;|\\$\\$)(.*?)(\\5)\">\n+        <usingbygroup>\n+          <sublexer_name_group>1</sublexer_name_group>\n+          <code_group>6</code_group>\n+          <emitters>\n+            <token type=\"NameBuiltin\"/>\n+            <token type=\"TextWhitespace\"/>\n+            <token type=\"Keyword\"/>\n+            <token type=\"TextWhitespace\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+          </emitters>\n+        </usingbygroup>\n+      </rule>\n+      <rule pattern=\"(true|false|null)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"0x[0-9a-f]+\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"\\.[0-9]+(e[+-]?[0-9]+)?\">\n+        <token type=\"Error\"/>\n+      </rule>\n+      <rule pattern=\"-?[0-9]+(\\.[0-9])?(e[+-]?[0-9]+)?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+        <push state=\"string\"/>\n+      </rule>\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralStringName\"/>\n+        <push state=\"quoted-ident\"/>\n+      </rule>\n+      <rule pattern=\"\\$\\$\">\n+        <token type=\"LiteralStringHeredoc\"/>\n+        <push state=\"dollar-string\"/>\n+      </rule>\n+      <rule pattern=\"[a-z_]\\w*\">\n+        <token type=\"Name\"/>\n+      </rule>\n+      <rule pattern=\":([&#39;&#34;]?)[a-z]\\w*\\b\\1\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+      <rule pattern=\"[;:()\\[\\]\\{\\},.]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+    </state>\n+    <state name=\"multiline-comments\">\n+      <rule pattern=\"/\\*\">\n+        <token type=\"CommentMultiline\"/>\n+        <push state=\"multiline-comments\"/>\n+      </rule>\n+      <rule pattern=\"\\*/\">\n+        <token type=\"CommentMultiline\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"[^/*]+\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"[/*]\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "c89cafc6abfdae26be08c789206a67424f4a76a1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/chapel.xml",
      "status": "added",
      "additions": 143,
      "deletions": 0,
      "changes": 143,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fchapel.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fchapel.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fchapel.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,143 @@\n+<lexer>\n+  <config>\n+    <name>Chapel</name>\n+    <alias>chapel</alias>\n+    <alias>chpl</alias>\n+    <filename>*.chpl</filename>\n+  </config>\n+  <rules>\n+    <state name=\"procname\">\n+      <rule pattern=\"([a-zA-Z_][.\\w$]*|\\~[a-zA-Z_][.\\w$]*|[+*/!~%&lt;&gt;=&amp;^|\\-:]{1,2})\">\n+        <token type=\"NameFunction\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\(\">\n+        <token type=\"Punctuation\"/>\n+        <push state=\"receivertype\"/>\n+      </rule>\n+      <rule pattern=\"\\)+\\.\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+    </state>\n+    <state name=\"receivertype\">\n+      <rule pattern=\"(unmanaged|borrowed|atomic|single|shared|owned|sync)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(complex|nothing|opaque|string|locale|bytes|range|imag|real|bool|uint|void|int)\\b\">\n+        <token type=\"KeywordType\"/>\n+      </rule>\n+      <rule pattern=\"[^()]*\">\n+        <token type=\"NameOther\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule pattern=\"\\n\">\n+        <token type=\"TextWhitespace\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"TextWhitespace\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"//(.*?)\\n\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"(config|const|inout|param|type|out|ref|var|in)\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"(false|none|true|nil)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"(complex|nothing|opaque|string|locale|bytes|range|imag|real|bool|uint|void|int)\\b\">\n+        <token type=\"KeywordType\"/>\n+      </rule>\n+      <rule pattern=\"(implements|forwarding|prototype|otherwise|subdomain|primitive|unmanaged|override|borrowed|lifetime|coforall|continue|private|require|dmapped|cobegin|foreach|lambda|sparse|shared|domain|pragma|reduce|except|export|extern|throws|forall|delete|return|noinit|single|import|select|public|inline|serial|atomic|defer|break|local|index|throw|catch|label|begin|where|while|align|yield|owned|only|this|sync|with|scan|else|enum|init|when|then|let|for|try|use|new|zip|if|by|as|on|do)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(iter)(\\s+)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"TextWhitespace\"/>\n+        </bygroups>\n+        <push state=\"procname\"/>\n+      </rule>\n+      <rule pattern=\"(proc)(\\s+)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"TextWhitespace\"/>\n+        </bygroups>\n+        <push state=\"procname\"/>\n+      </rule>\n+      <rule pattern=\"(operator)(\\s+)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"TextWhitespace\"/>\n+        </bygroups>\n+        <push state=\"procname\"/>\n+      </rule>\n+      <rule pattern=\"(class|interface|module|record|union)(\\s+)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"TextWhitespace\"/>\n+        </bygroups>\n+        <push state=\"classname\"/>\n+      </rule>\n+      <rule pattern=\"\\d+i\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"\\d+\\.\\d*([Ee][-+]\\d+)?i\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"\\.\\d+([Ee][-+]\\d+)?i\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"\\d+[Ee][-+]\\d+i\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"(\\d*\\.\\d+)([eE][+-]?[0-9]+)?i?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"\\d+[eE][+-]?[0-9]+i?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0[bB][01]+\">\n+        <token type=\"LiteralNumberBin\"/>\n+      </rule>\n+      <rule pattern=\"0[xX][0-9a-fA-F]+\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"0[oO][0-7]+\">\n+        <token type=\"LiteralNumberOct\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"&#34;(\\\\\\\\|\\\\&#34;|[^&#34;])*&#34;\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"&#39;(\\\\\\\\|\\\\&#39;|[^&#39;])*&#39;\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"(=|\\+=|-=|\\*=|/=|\\*\\*=|%=|&amp;=|\\|=|\\^=|&amp;&amp;=|\\|\\|=|&lt;&lt;=|&gt;&gt;=|&lt;=&gt;|&lt;~&gt;|\\.\\.|by|#|\\.\\.\\.|&amp;&amp;|\\|\\||!|&amp;|\\||\\^|~|&lt;&lt;|&gt;&gt;|==|!=|&lt;=|&gt;=|&lt;|&gt;|[+\\-*/%]|\\*\\*)\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[:;,.?()\\[\\]{}]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"[a-zA-Z_][\\w$]*\">\n+        <token type=\"NameOther\"/>\n+      </rule>\n+    </state>\n+    <state name=\"classname\">\n+      <rule pattern=\"[a-zA-Z_][\\w$]*\">\n+        <token type=\"NameClass\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "284457c6c668349dbb850acd12309546f2ddca3d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/cheetah.xml",
      "status": "added",
      "additions": 55,
      "deletions": 0,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcheetah.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcheetah.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcheetah.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,55 @@\n+<lexer>\n+  <config>\n+    <name>Cheetah</name>\n+    <alias>cheetah</alias>\n+    <alias>spitfire</alias>\n+    <filename>*.tmpl</filename>\n+    <filename>*.spt</filename>\n+    <mime_type>application/x-cheetah</mime_type>\n+    <mime_type>application/x-spitfire</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"(##[^\\n]*)$\">\n+        <bygroups>\n+          <token type=\"Comment\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"#[*](.|\\n)*?[*]#\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"#end[^#\\n]*(?:#|$)\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"#slurp$\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"(#[a-zA-Z]+)([^#\\n]*)(#|$)\">\n+        <bygroups>\n+          <token type=\"CommentPreproc\"/>\n+          <using lexer=\"Python\"/>\n+          <token type=\"CommentPreproc\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\$)([a-zA-Z_][\\w.]*\\w)\">\n+        <bygroups>\n+          <token type=\"CommentPreproc\"/>\n+          <using lexer=\"Python\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\$\\{!?)(.*?)(\\})(?s)\">\n+        <bygroups>\n+          <token type=\"CommentPreproc\"/>\n+          <using lexer=\"Python\"/>\n+          <token type=\"CommentPreproc\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?sx)&#xA;                (.+?)               # anything, followed by:&#xA;                (?:&#xA;                 (?=\\#[#a-zA-Z]*) | # an eval comment&#xA;                 (?=\\$[a-zA-Z_{]) | # a substitution&#xA;                 \\Z                 # end of string&#xA;                )&#xA;            \">\n+        <token type=\"Other\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "967ba399cb62d5257ce4c5cebcf289d8282a0cf5",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/clojure.xml",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fclojure.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fclojure.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fclojure.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -3,9 +3,12 @@\n     <name>Clojure</name>\n     <alias>clojure</alias>\n     <alias>clj</alias>\n+    <alias>edn</alias>\n     <filename>*.clj</filename>\n+    <filename>*.edn</filename>\n     <mime_type>text/x-clojure</mime_type>\n     <mime_type>application/x-clojure</mime_type>\n+    <mime_type>application/edn</mime_type>\n   </config>\n   <rules>\n     <state name=\"root\">\n@@ -65,4 +68,4 @@\n       </rule>\n     </state>\n   </rules>\n-</lexer>\n\\ No newline at end of file\n+</lexer>"
    },
    {
      "sha": "16d7387267e676c1a1873a9e281425728faa1f90",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/cue.xml",
      "status": "added",
      "additions": 85,
      "deletions": 0,
      "changes": 85,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcue.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcue.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcue.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,85 @@\n+<lexer>\n+  <config>\n+    <name>CUE</name>\n+    <alias>cue</alias>\n+    <filename>*.cue</filename>\n+    <mime_type>text/x-cue</mime_type>\n+    <dot_all>true</dot_all>\n+    <ensure_nl>true</ensure_nl>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"[^\\S\\n]+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"//[^\\n\\r]+\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"(\\+|&amp;&amp;|==|&lt;|=|-|\\|\\||!=|&gt;|:|\\*|&amp;|=~|&lt;=|\\?|\\[|\\]|,|/|\\||!~|&gt;=|!|_\\|_|\\.\\.\\.)\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"#*&#34;+\">\n+        <token type=\"LiteralString\"/>\n+        <push state=\"string\"/>\n+      </rule>\n+      <rule pattern=\"'(\\\\\\\\|\\\\'|[^'\\n])*['\\n]\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"0[boxX][0-9a-fA-F][_0-9a-fA-F]*|(\\.\\d+|\\d[_\\d]*(\\.\\d*)?)([eE][+-]?\\d+)?[KMGTP]?i?\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"[~!%^&amp;*()+=|\\[\\]:;,.&lt;&gt;/?-]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"[{}]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"(import|for|if|in|let|package)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(bool|float|int|string|uint|ulong|ushort)\\b\\??\">\n+        <token type=\"KeywordType\"/>\n+      </rule>\n+      <rule pattern=\"(true|false|null|_)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"[_a-zA-Z]\\w*\">\n+        <token type=\"Name\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"\\\\#*\\(\">\n+        <token type=\"LiteralStringInterpol\"/>\n+        <push state=\"string-intp\"/>\n+      </rule>\n+      <rule pattern=\"&#34;+#*\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\\\[&#39;&#34;\\\\nrt]|\\\\x[0-9a-fA-F]{2}|\\\\[0-7]{1,3}|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\&#34;]+\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string-intp\">\n+      <rule pattern=\"\\)\">\n+        <token type=\"LiteralStringInterpol\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"root\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>"
    },
    {
      "sha": "1a3ffbc89f6c3cde80b66048eba80e7032f64335",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/dax.xml",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdax.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdax.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdax.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,39 @@\n+<lexer>\n+  <config>\n+    <name>Dax</name>\n+    <alias>dax</alias>\n+    <filename>*.dax</filename>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"\\s+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\"--.*\\n?\"><token type=\"CommentSingle\"/></rule>\n+      <rule pattern=\"//.*\\n?\"><token type=\"CommentSingle\"/></rule>\n+      <rule pattern=\"/\\*\"><token type=\"CommentMultiline\"/><push state=\"multiline-comments\"/></rule>\n+      <rule pattern=\"(CONTAINS|CONTAINSROW|CUSTOMDATA|ISAFTER|ISBLANK|ISERROR|ISEVEN|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|LOOKUPVALUE|NONVISUAL|SELECTEDMEASURE|SELECTEDMEASURENAME|USERNAME|USEROBJECTID|USERPRINCIPALNAME|TOJSON|TOCSV|EVALUATEANDLOG|USERCULTURE|WINDOW|PARTITIONBY|ORDERBY|OFFSET|INDEX|ROWNUMBER|MATCHBY|ACCRINT|ACCRINTM|AMORDEGRC|AMORLINC|COUPDAYBS|COUPDAYS|COUPDAYSNC|COUPNCD|COUPNUM|COUPPCD|CUMIPMT|CUMPRINC|DB|DDB|DISC|DOLLARDE|DOLLARFR|DURATION|EFFECT|FV|INTRATE|IPMT|ISPMT|MDURATION|NOMINAL|NPER|ODDFPRICE|ODDFYIELD|ODDLPRICE|ODDLYIELD|PDURATION|PMT|PPMT|PRICE|PRICEDISC|PRICEMAT|PV|RATE|RECEIVED|RRI|SLN|SYD|TBILLEQ|TBILLPRICE|TBILLYIELD|VDB|YIELD|YIELDDISC|YIELDMAT|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|CALCULATE|CALCULATETABLE|CROSSFILTER|EARLIER|EARLIEST|FILTER|FILTERS|HASONEFILTER|HASONEVALUE|ISCROSSFILTERED|ISFILTERED|KEEPFILTERS|RELATED|RELATEDTABLE|REMOVEFILTERS|SELECTEDVALUE|SUBSTITUTEWITHINDEX|USERELATIONSHIP|VALUES|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|DATEADD|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|PARALLELPERIOD|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|SAMEPERIODLASTYEAR|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|TOTALMTD|TOTALQTD|TOTALYTD|RETURN|ABS|ACOS|ACOSH|ACOT|ACOTH|ASIN|ASINH|ATAN|ATANH|CEILING|COMBIN|COMBINA|COS|COSH|COT|COTH|CURRENCY|DEGREES|DIVIDE|EVEN|EXP|FACT|FLOOR|GCD|INT|ISO.CEILING|LCM|LN|LOG|LOG10|MOD|MROUND|ODD|PI|POWER|PRODUCT|PRODUCTX|QUOTIENT|RADIANS|RAND|RANDBETWEEN|ROUND|ROUNDDOWN|ROUNDUP|SIGN|SQRT|SUM|SUMX|TRUNC|BLANK|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONTAINSSTRING|CONTAINSSTRINGEXACT|EXACT|FIND|FIXED|FORMAT|LEFT|LEN|LOWER|MID|REPLACE|REPT|RIGHT|SEARCH|SUBSTITUTE|TRIM|UNICHAR|UNICODE|UPPER|VALUE|LINEST|LINESTX|CONVERT|DATATABLE|ERROR|EXCEPT|GENERATESERIES|GROUPBY|INTERSECT|ISEMPTY|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|SELECTEDMEASUREFORMATSTRING|SUMMARIZECOLUMNS|Table Constructor|TREATAS|UNION|VAR|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|ADDCOLUMNS|ADDMISSINGITEMS|CURRENTGROUP|DETAILROWS|DISTINCT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|EXTERNALMEASURE|PMT|PPMT|PRICE|PRICEDISC|PRICEMAT|PV|RATE|RECEIVED|RRI|SLN|SYD|TBILLEQ|TBILLPRICE|TBILLYIELD|VDB|YIELD|YIELDDISC|YIELDMAT|CALENDAR|CALENDARAUTO|DATE|DATEDIFF|DATEVALUE|DAY|EDATE|EOMONTH|HOUR|MINUTE|MONTH|NETWORKDAYS|NOW|QUARTER|SECOND|TIME|TIMEVALUE|TODAY|UTCNOW|UTCTODAY|WEEKDAY|WEEKNUM|YEAR|YEARFRAC|APPROXIMATEDISTINCTCOUNT|AVERAGE|AVERAGEA|AVERAGEX|BETA.DIST|BETA.INV|CHISQ.DIST|CHISQ.DIST.RT|CHISQ.INV|CHISQ.INV.RT|CONFIDENCE.NORM|CONFIDENCE.T|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSJOIN|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|EXPON.DIST|GENERATE|GENERATEALL|GEOMEAN|GEOMEANX|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MIN|MINA|MINX|NORM.DIST|NORM.INV|NORM.S.DIST|NORM.S.INV|PERCENTILE.EXC|PERCENTILE.INC|PERCENTILEX.EXC|PERCENTILEX.INC|PERMUT|POISSON.DIST|RANK.EQ|RANKX|ROW|SAMPLE|SELECTCOLUMNS|SIN|SINH|SQRTPI|STDEV.P|STDEV.S|STDEVX.P|STDEVX.S|SUMMARIZE|T.DIST|T.DIST.2T|T.DIST.RT|T.INV|T.INV.2T|TAN|TANH|TOPN|VAR|VAR.P|VAR.S|VARX.P|VARX.S|XIRR|XNPV|RANK)\\b\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"(AND|BITAND|BITLSHIFT|BITOR|BITRSHIFT|BITXOR|COALESCE|FALSE|IF|IF.EAGER|IFERROR|IN|NOT|OR|SWITCH|TRUE)\\b\">\n+        <token type=\"NameOperator\"/>\n+      </rule>\n+      <rule pattern=\"[+*/&lt;&gt;=!^&amp;|,-]\"><token type=\"Operator\"/></rule>\n+      <rule pattern=\"&quot;\"><token type=\"LiteralString\"/><push state=\"string\"/></rule>\n+      <rule pattern=\"&#x27;(?:[^&#x27;]|&#x27;&#x27;)*&#x27;(?!&#x27;)(?:\\[[ \\w]+\\])?|\\w+\\[[ \\w]+\\]\"><token type=\"NameAttribute\"/></rule>\n+      <rule pattern=\"\\[[ \\w]+\\]\"><token type=\"NameAttribute\"/></rule>\n+      <rule pattern=\"(?&lt;!\\w)(\\d+\\.?\\d*|\\.\\d+\\b)\"><token type=\"LiteralNumber\"/></rule>\n+      <rule pattern=\"[\\[\\](){}`,.]\"><token type=\"Punctuation\"/></rule>\n+      <rule pattern=\".*\\n\"><token type=\"Text\"/></rule>\n+    </state>\n+    <state name=\"multiline-comments\">\n+      <rule pattern=\"/\\*\"><token type=\"CommentMultiline\"/><push state=\"multiline-comments\"/></rule>\n+      <rule pattern=\"\\*/\"><token type=\"CommentMultiline\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"[^/*]+\"><token type=\"CommentMultiline\"/></rule>\n+      <rule pattern=\"[/*]\"><token type=\"CommentMultiline\"/></rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"&quot;&quot;\"><token type=\"LiteralStringEscape\"/></rule>\n+      <rule pattern=\"&quot;\"><token type=\"LiteralString\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"[^&quot;]+\"><token type=\"LiteralString\"/></rule>\n+    </state>\n+  </rules>\n+</lexer>"
    },
    {
      "sha": "ef8f663f968c99cdb5a23f84a88523d50cf162c6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/dns.xml",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdns.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdns.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdns.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -4,6 +4,8 @@\n     <name>dns</name>\n     <alias>zone</alias>\n     <alias>bind</alias>\n+    <filename>*.zone</filename>\n+    <mime_type>text/dns</mime_type>\n   </config>\n   <rules>\n     <state name=\"root\">\n@@ -22,10 +24,10 @@\n       <rule pattern=\"\\b\\d+[dhwm]?\">\n         <token type=\"LiteralStringChar\"/>\n       </rule>\n-      <rule pattern=\"\\b([[:alnum:].-])+\\.($|\\s)\">\n+      <rule pattern=\"\\b([\\w\\d.-])+\\.($|\\s)\">\n         <token type=\"NameProperty\"/>\n       </rule>\n-      <rule pattern=\"^(@|[[:alnum:]-]+)\">\n+      <rule pattern=\"([\\w\\d\\.-]+\\.[a-z-]{2,24}\\.?|^(@|[\\w\\d-]+))\">\n         <token type=\"NameClass\"/>\n       </rule>\n       <rule pattern=\"^\\$(TTL|GENERATE|INCLUDE|ORIGIN)\">"
    },
    {
      "sha": "a73c52cd972e1cdd7de348f271fb34b0fca95b42",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/docker.xml",
      "status": "added",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdocker.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdocker.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdocker.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,57 @@\n+<lexer>\n+  <config>\n+    <name>Docker</name>\n+    <alias>docker</alias>\n+    <alias>dockerfile</alias>\n+    <filename>Dockerfile</filename>\n+    <filename>Dockerfile.*</filename>\n+    <filename>*.Dockerfile</filename>\n+    <filename>*.docker</filename>\n+    <mime_type>text/x-dockerfile-config</mime_type>\n+    <case_insensitive>true</case_insensitive>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"#.*\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"(ONBUILD)((?:\\s*\\\\?\\s*))\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <using lexer=\"Bash\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(HEALTHCHECK)(((?:\\s*\\\\?\\s*)--\\w+=\\w+(?:\\s*\\\\?\\s*))*)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <using lexer=\"Bash\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(VOLUME|ENTRYPOINT|CMD|SHELL)((?:\\s*\\\\?\\s*))(\\[.*?\\])\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <using lexer=\"Bash\"/>\n+          <using lexer=\"JSON\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(LABEL|ENV|ARG)((?:(?:\\s*\\\\?\\s*)\\w+=\\w+(?:\\s*\\\\?\\s*))*)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <using lexer=\"Bash\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"((?:FROM|MAINTAINER|EXPOSE|WORKDIR|USER|STOPSIGNAL)|VOLUME)\\b(.*)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"LiteralString\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"((?:RUN|CMD|ENTRYPOINT|ENV|ARG|LABEL|ADD|COPY))\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(.*\\\\\\n)*.+\">\n+        <using lexer=\"Bash\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "286f53a24150c53599ca773f3acee272481eb685",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/elixir.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Felixir.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Felixir.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Felixir.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -5,6 +5,7 @@\n     <alias>ex</alias>\n     <alias>exs</alias>\n     <filename>*.ex</filename>\n+    <filename>*.eex</filename>\n     <filename>*.exs</filename>\n     <mime_type>text/x-elixir</mime_type>\n   </config>"
    },
    {
      "sha": "11343c0e73820814df65fd1b110fd382382cb941",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/fortranfixed.xml",
      "status": "added",
      "additions": 71,
      "deletions": 0,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffortranfixed.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffortranfixed.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffortranfixed.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,71 @@\n+<lexer>\n+  <config>\n+    <name>FortranFixed</name>\n+    <alias>fortranfixed</alias>\n+    <filename>*.f</filename>\n+    <filename>*.F</filename>\n+    <mime_type>text/x-fortran</mime_type>\n+    <case_insensitive>true</case_insensitive>\n+    <not_multiline>true</not_multiline>\n+  </config>\n+  <rules>\n+    <state name=\"cont-char\">\n+      <rule pattern=\" \">\n+        <token type=\"TextWhitespace\"/>\n+        <push state=\"code\"/>\n+      </rule>\n+      <rule pattern=\".\">\n+        <token type=\"GenericStrong\"/>\n+        <push state=\"code\"/>\n+      </rule>\n+    </state>\n+    <state name=\"code\">\n+      <rule pattern=\"(.{66})(.*)(\\n)\">\n+        <bygroups>\n+          <using lexer=\"Fortran\"/>\n+          <token type=\"Comment\"/>\n+          <token type=\"TextWhitespace\"/>\n+        </bygroups>\n+        <push state=\"root\"/>\n+      </rule>\n+      <rule pattern=\"(.*)(!.*)(\\n)\">\n+        <bygroups>\n+          <using lexer=\"Fortran\"/>\n+          <token type=\"Comment\"/>\n+          <token type=\"TextWhitespace\"/>\n+        </bygroups>\n+        <push state=\"root\"/>\n+      </rule>\n+      <rule pattern=\"(.*)(\\n)\">\n+        <bygroups>\n+          <using lexer=\"Fortran\"/>\n+          <token type=\"TextWhitespace\"/>\n+        </bygroups>\n+        <push state=\"root\"/>\n+      </rule>\n+      <rule>\n+        <mutators>\n+          <push state=\"root\"/>\n+        </mutators>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule pattern=\"[C*].*\\n\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"#.*\\n\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\" {0,4}!.*\\n\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"(.{5})\">\n+        <token type=\"NameLabel\"/>\n+        <push state=\"cont-char\"/>\n+      </rule>\n+      <rule pattern=\".*\\n\">\n+        <using lexer=\"Fortran\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "7557bce0f22f0c38a976d681431fc6a648ff2cca",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/gas.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgas.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgas.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgas.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -6,6 +6,7 @@\n     <filename>*.s</filename>\n     <filename>*.S</filename>\n     <mime_type>text/x-gas</mime_type>\n+    <priority>0.1</priority>\n   </config>\n   <rules>\n     <state name=\"punctuation\">"
    },
    {
      "sha": "811f38d0283652c34aa0e17da3bec4668ac55324",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/gdscript.xml",
      "status": "modified",
      "additions": 153,
      "deletions": 159,
      "changes": 312,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgdscript.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgdscript.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgdscript.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -6,53 +6,78 @@\n     <filename>*.gd</filename>\n     <mime_type>text/x-gdscript</mime_type>\n     <mime_type>application/x-gdscript</mime_type>\n+    <priority>0.1</priority>\n+    <analyse>\n+      <regex pattern=\"^export\" score=\"0.1\"/>\n+    </analyse>\n   </config>\n   <rules>\n-    <state name=\"builtins\">\n-      <rule pattern=\"(?&lt;!\\.)(instance_from_id|nearest_po2|print_stack|type_exist|rand_range|linear2db|var2bytes|dict2inst|randomize|bytes2var|rand_seed|db2linear|inst2dict|printerr|printraw|decimals|preload|deg2rad|str2var|stepify|var2str|convert|weakref|fposmod|funcref|rad2deg|dectime|printt|is_inf|is_nan|assert|Color8|typeof|ColorN|prints|floor|atan2|yield|randf|print|range|clamp|round|randi|sqrt|tanh|cosh|ceil|ease|acos|load|fmod|lerp|seed|sign|atan|sinh|hash|asin|sin|str|cos|tan|pow|exp|min|abs|log|max)\\b\">\n-        <token type=\"NameBuiltin\"/>\n-      </rule>\n-      <rule pattern=\"(?&lt;!\\.)(self|false|true|PI|NAN|INF)\\b\">\n-        <token type=\"NameBuiltinPseudo\"/>\n+    <state name=\"dqs\">\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+        <pop depth=\"1\"/>\n       </rule>\n-      <rule pattern=\"(?&lt;!\\.)(Physics2DShapeQueryParameters|PhysicsShapeQueryParameters|Physics2DDirectBodyStateSW|NavigationPolygonInstance|ResourceInteractiveLoader|Physics2DDirectSpaceState|Physics2DShapeQueryResult|Physics2DTestMotionResult|InputEventJoystickButton|InputEventJoystickMotion|Physics2DDirectBodyState|PhysicsDirectBodyStateSW|PhysicsShapeQueryResult|PhysicsDirectSpaceState|SpatialSound2DServerSW|PackedDataContainerRef|NavigationMeshInstance|ResourceImportMetadata|PhysicsDirectBodyState|ConcavePolygonShape2D|CanvasItemShaderGraph|EditorScenePostImport|InputEventScreenTouch|InputEventMouseButton|InputEventMouseMotion|SpatialSound2DServer|AudioStreamOGGVorbis|VisibilityNotifier2D|InputEventScreenDrag|ConvexPolygonShape2D|SpatialSoundServerSW|ParticleAttractor2D|PackedDataContainer|SpatialStreamPlayer|RenderTargetTexture|AnimationTreePlayer|ConcavePolygonShape|InstancePlaceholder|MaterialShaderGraph|AudioStreamPlayback|VisibilityEnabler2D|SpatialSamplePlayer|DampedSpringJoint2D|InterpolatedCamera|ConvexPolygonShape|ConfirmationDialog|SpatialSoundServer|BakedLightInstance|ParallaxBackground|CollisionPolygon2D|CanvasItemMaterial|VisibilityNotifier|EditorImportPlugin|VideoStreamTheora|TouchScreenButton|ResourcePreloader|OccluderPolygon2D|BakedLightSampler|CollisionObject2D|RemoteTransform2D|PolygonPathFinder|StyleBoxImageMask|NavigationPolygon|TranslationServer|MultiMeshInstance|ImmediateGeometry|Physics2DServerSW|ColorPickerButton|VisibilityEnabler|PHashTranslation|RectangleShape2D|DirectionalLight|AnimatedSprite3D|WorldEnvironment|CollisionShape2D|EventStreamChibi|InputEventAction|CollisionPolygon|AudioStreamSpeex|EditorFileDialog|GeometryInstance|Generic6DOFJoint|PacketPeerStream|CanvasItemShader|KinematicBody2D|StyleBoxTexture|PhysicsServerSW|VSplitContainer|CenterContainer|GDFunctionState|AudioStreamOpus|TextureProgress|MarginContainer|CollisionObject|LightOccluder2D|AnimationPlayer|HSplitContainer|ScrollContainer|SoundRoomParams|Physics2DServer|MaterialShader|ShaderMaterial|ViewportSprite|SplitContainer|AudioStreamMPC|VisualInstance|PanelContainer|BackBufferCopy|SamplePlayer2D|CanvasModulate|ResourceLoader|CapsuleShape2D|ReferenceFrame|NavigationMesh|CollisionShape|ConeTwistJoint|ProximityGroup|AnimatedSprite|SegmentShape2D|BoneAttachment|RichTextLabel|CircleShape2D|VBoxContainer|PacketPeerUDP|SpatialPlayer|TextureButton|KinematicBody|SoundPlayer2D|PhysicsServer|ParallaxLayer|InputEventKey|GrooveJoint2D|PhysicsBody2D|FixedMaterial|GridContainer|HBoxContainer|StreamPeerSSL|StyleBoxEmpty|StreamPeerTCP|SampleLibrary|GDNativeClass|AudioServerSW|ResourceSaver|SpriteBase3D|StreamPlayer|AtlasTexture|VisualServer|SamplePlayer|StyleBoxFlat|StaticBody2D|SpriteFrames|MeshDataTool|MeshInstance|Vector3Array|BoxContainer|TabContainer|HButtonArray|LargeTexture|Navigation2D|WindowDialog|EditorScript|EditorPlugin|TextureFrame|AcceptDialog|ImageTexture|CapsuleShape|VehicleWheel|VButtonArray|Vector2Array|InputDefault|OptionButton|PathFollow2D|VehicleBody|ColorPicker|PopupDialog|ProgressBar|CanvasLayer|Translation|Environment|EventPlayer|VideoPlayer|EventStream|VideoStream|ButtonGroup|Particles2D|Patch9Frame|ButtonArray|SurfaceTool|MeshLibrary|PackedScene|PhysicsBody|AudioStream|Performance|StringArray|AudioServer|RigidBody2D|LineShape2D|SliderJoint|SphereShape|ShaderGraph|CheckButton|StreamPeer|FileDialog|PathFollow|SceneState|RoomBounds|Dictionary|VSeparator|PacketPeer|VScrollBar|MenuButton|HTTPClient|PinJoint2D|BakedLight|PlaneShape|InputEvent|BaseButton|HSeparator|HScrollBar|Navigation|PopupPanel|StaticBody|Position2D|Position3D|ToolButton|HingeJoint|CanvasItem|RayShape2D|ColorArray|ConfigFile|TCP_Server|RayCast2D|ColorRamp|SpotLight|RealArray|GraphNode|Container|Reference|PopupMenu|Separator|Polygon2D|MultiMesh|Semaphore|Transform|OmniLight|GraphEdit|Particles|Animation|Marshalls|SceneTree|RigidBody|XMLParser|PathRemap|ScrollBar|Directory|PCKPacker|RawArray|TextEdit|MainLoop|TreeItem|StyleBox|Material|Geometry|Matrix32|Resource|UndoRedo|RayShape|TestCube|ItemList|CheckBox|Camera2D|Skeleton|Sprite3D|Viewport|NodePath|IntArray|BoxShape|PinJoint|InputMap|LineEdit|GDScript|Vector3|TileMap|HSlider|Spatial|SpinBox|World2D|IP_Unix|Curve2D|Curve3D|WeakRef|GridMap|Matrix3|VSlider|CubeMap|Joint2D|Globals|Shape2D|Texture|Control|TileSet|Light2D|FuncRef|Vector2|RayCast|Script|Node2D|Button|BitMap|Sample|Object|String|Shader|Area2D|Slider|Sprite|Thread|Path2D|Camera|Portal|float|Theme|World|YSort|Shape|Joint|Mutex|Tween|RegEx|Label|Rect2|Array|Plane|Light|Range|Color|Input|Popup|Panel|Timer|Image|Area|Quad|bool|AABB|Quat|File|Tabs|Path|Font|Tree|Room|Mesh|Node|RID|int|Nil|IP|OS)\\b\">\n-        <token type=\"NameException\"/>\n+      <rule>\n+        <include state=\"strings_double\"/>\n       </rule>\n     </state>\n-    <state name=\"sqs\">\n-      <rule pattern=\"&#39;\">\n-        <token type=\"LiteralStringSingle\"/>\n+    <state name=\"tdqs\">\n+      <rule pattern=\"&#34;&#34;&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n         <pop depth=\"1\"/>\n       </rule>\n-      <rule pattern=\"\\\\\\\\|\\\\&#39;|\\\\\\n\">\n-        <token type=\"LiteralStringEscape\"/>\n-      </rule>\n       <rule>\n-        <include state=\"strings-single\"/>\n+        <include state=\"strings_double\"/>\n       </rule>\n     </state>\n-    <state name=\"stringescape\">\n-      <rule pattern=\"\\\\([\\\\abfnrtv&#34;\\&#39;]|\\n|N\\{.*?\\}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|x[a-fA-F0-9]{2}|[0-7]{1,3})\">\n-        <token type=\"LiteralStringEscape\"/>\n+    <state name=\"keywords\">\n+      <rule pattern=\"(?&lt;!\\w)(PI|TAU|NAN|INF|true|false)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\w)(is|in|as|not|or|and)\\b\">\n+        <token type=\"OperatorWord\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\w)(var|const|enum|signal|static)\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\w)(if|elif|else|for|while|match|break|continue|pass|return|breakpoint|await|yield|super)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\w)(self)\\b\">\n+        <token type=\"NameBuiltinPseudo\"/>\n       </rule>\n     </state>\n-    <state name=\"classname\">\n-      <rule pattern=\"[a-zA-Z_]\\w*\">\n-        <token type=\"NameClass\"/>\n+    <state name=\"builtin_funcs\">\n+      <rule pattern=\"(?&lt;!\\w)(assert|char|convert|dict_to_inst|get_stack|inst_to_dict|is_instance_of|len|load|preload|print_debug|print_stack|range|type_exists)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\w)(abs[fi]?|acos|asin|atan2?|bezier_(derivative|interpolate)|bytes_to_var(_with_objects)?|ceil[fi]?|clamp[fi]?|cosh?|cubic_interpolate(_angle)?(_in_time)?|db_to_linear|deg_to_rad|ease|error_string|exp|floor[fi]?|fmod|fposmod|hash|instance_from_id|inverse_lerp|is_equal_approx|is_finite|is_instance(_id)?_valid|is_nan|is_same|is_zero_approx|lerp|lerp_angle|lerpf|linear_to_db|log|max[fi]?|min[fi]?|move_toward|nearest_po2|pingpong|posmod|pow|print|print_rich|print_verbose|printerr|printraw|prints|printt|push_error|push_warning|rad_to_deg|rand_from_seed|randf|randf_range|randfn|randi|randi_range|randomize|remap|rid_allocate_id|rid_from_int64|round[fi]?|seed|sign[fi]?|sinh?|smoothstep|snapped[fi]?|sqrt|step_decimals|str|str_to_var|tanh?|typeof|var_to_bytes(_with_objects)?|var_to_str|weakref|wrap[fi]?)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+    </state>\n+    <state name=\"tsqs\">\n+      <rule pattern=\"&#39;&#39;&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n         <pop depth=\"1\"/>\n       </rule>\n+      <rule>\n+        <include state=\"strings_single\"/>\n+      </rule>\n     </state>\n-    <state name=\"strings-single\">\n-      <rule pattern=\"%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]\">\n+    <state name=\"strings_single\">\n+      <rule>\n+        <include state=\"strings\"/>\n+      </rule>\n+      <rule pattern=\"\\{[^\\\\\\&#39;\\n]+\\}\">\n         <token type=\"LiteralStringInterpol\"/>\n       </rule>\n-      <rule pattern=\"[^\\\\\\&#39;&#34;%\\n]+\">\n+      <rule pattern=\"[^\\\\\\&#39;\\{%]+\">\n         <token type=\"LiteralStringSingle\"/>\n       </rule>\n-      <rule pattern=\"[\\&#39;&#34;\\\\]\">\n+      <rule pattern=\"%\">\n         <token type=\"LiteralStringSingle\"/>\n       </rule>\n-      <rule pattern=\"%\">\n+      <rule pattern=\"{\">\n         <token type=\"LiteralStringSingle\"/>\n       </rule>\n     </state>\n@@ -61,205 +86,174 @@\n         <token type=\"NameFunction\"/>\n         <pop depth=\"1\"/>\n       </rule>\n-      <rule>\n-        <pop depth=\"1\"/>\n-      </rule>\n     </state>\n     <state name=\"numbers\">\n-      <rule pattern=\"(\\d+\\.\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?j?\">\n+      <rule pattern=\"(\\d+\\.\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?\">\n         <token type=\"LiteralNumberFloat\"/>\n       </rule>\n-      <rule pattern=\"\\d+[eE][+-]?[0-9]+j?\">\n+      <rule pattern=\"\\d+[eE][+-]?[0-9]+\">\n         <token type=\"LiteralNumberFloat\"/>\n       </rule>\n-      <rule pattern=\"0[xX][a-fA-F0-9]+\">\n+      <rule pattern=\"0x[a-fA-F0-9]+\">\n         <token type=\"LiteralNumberHex\"/>\n       </rule>\n-      <rule pattern=\"\\d+j?\">\n+      <rule pattern=\"0b[01]+\">\n+        <token type=\"LiteralNumberBin\"/>\n+      </rule>\n+      <rule pattern=\"\\d+\">\n         <token type=\"LiteralNumberInteger\"/>\n       </rule>\n     </state>\n-    <state name=\"tdqs\">\n-      <rule pattern=\"&#34;&#34;&#34;\">\n-        <token type=\"LiteralStringDouble\"/>\n+    <state name=\"sqs\">\n+      <rule pattern=\"&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n         <pop depth=\"1\"/>\n       </rule>\n       <rule>\n-        <include state=\"strings-double\"/>\n+        <include state=\"strings_single\"/>\n       </rule>\n-      <rule pattern=\"\\n\">\n+    </state>\n+    <state name=\"classname\">\n+      <rule pattern=\"[a-zA-Z_]\\w*\">\n+        <token type=\"NameClass\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"annotations\">\n+      <rule pattern=\"^\\s*@export(_category|_color_no_alpha|_dir|_enum|_exp_easing|_file|_flags((_2d|_3d)(_navigation|_physics|_render)|_avoidance)?|_global(_file|_dir)|_group|_multiline|_node_path|_placeholder|_range|_subgroup)?\">\n+        <token type=\"NameDecorator\"/>\n+      </rule>\n+      <rule pattern=\"^\\s*@(icon|onready|rpc|tool|warning_ignore)\">\n+        <token type=\"NameDecorator\"/>\n+      </rule>\n+    </state>\n+    <state name=\"types\">\n+      <rule pattern=\"(?&lt;!\\w)(null|void|bool|int|float)\\b\">\n+        <token type=\"KeywordType\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\w)(String(Name)?|NodePath|Vector[234]i?|Rect2|Transform[23]D|Plane|Quaternion|AABB|Basis|Color8?|RID|Object|(Packed(Byte|Int(32|64)|Float(32|64)|String|Vector(2|3)|Color))?Array|Dictionary|Signal|Callable)\\b\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\w)(Node|AcceptDialog|AnimatableBody2D|AnimatableBody3D|AnimatedSprite2D|AnimatedSprite3D|AnimationPlayer|AnimationTree|Area2D|Area3D|AspectRatioContainer|AudioListener2D|AudioListener3D|AudioStreamPlayer|AudioStreamPlayer2D|AudioStreamPlayer3D|BackBufferCopy|BaseButton|Bone2D|BoneAttachment3D|BoxContainer|Button|Camera2D|Camera3D|CanvasGroup|CanvasItem|CanvasLayer|CanvasModulate|CenterContainer|CharacterBody2D|CharacterBody3D|CheckBox|CheckButton|CodeEdit|CollisionObject2D|CollisionObject3D|CollisionPolygon2D|CollisionPolygon3D|CollisionShape2D|CollisionShape3D|ColorPicker|ColorPickerButton|ColorRect|ConeTwistJoint3D|ConfirmationDialog|Container|Control|CPUParticles2D|CPUParticles3D|CSGBox3D|CSGCombiner3D|CSGCylinder3D|CSGMesh3D|CSGPolygon3D|CSGPrimitive3D|CSGShape3D|CSGSphere3D|CSGTorus3D|DampedSpringJoint2D|Decal|DirectionalLight2D|DirectionalLight3D|EditorCommandPalette|EditorFileDialog|EditorFileSystem|EditorInspector|EditorPlugin|EditorProperty|EditorResourcePicker|EditorResourcePreview|EditorScriptPicker|EditorSpinSlider|FileDialog|FileSystemDock|FlowContainer|FogVolume|Generic6DOFJoint3D|GeometryInstance3D|GPUParticles2D|GPUParticles3D|GPUParticlesAttractor3D|GPUParticlesAttractorBox3D|GPUParticlesAttractorSphere3D|GPUParticlesAttractorVectorField3D|GPUParticlesCollision3D|GPUParticlesCollisionBox3D|GPUParticlesCollisionHeightField3D|GPUParticlesCollisionSDF3D|GPUParticlesCollisionSphere3D|GraphEdit|GraphNode|GridContainer|GridMap|GrooveJoint2D|HBoxContainer|HFlowContainer|HingeJoint3D|HScrollBar|HSeparator|HSlider|HSplitContainer|HTTPRequest|ImporterMeshInstance3D|InstancePlaceholder|ItemList|Joint2D|Joint3D|Label|Label3D|Light2D|Light3D|LightmapGI|LightmapProbe|LightOccluder2D|Line2D|LineEdit|LinkButton|MarginContainer|Marker2D|Marker3D|MenuBar|MenuButton|MeshInstance2D|MeshInstance3D|MissingNode|MultiMeshInstance2D|MultiMeshInstance3D|MultiplayerSpawner|MultiplayerSynchronizer|NavigationAgent2D|NavigationAgent3D|NavigationLink2D|NavigationLink3D|NavigationObstacle2D|NavigationObstacle3D|NavigationRegion2D|NavigationRegion3D|NinePatchRect|Node2D|Node3D|OccluderInstance3D|OmniLight3D|OpenXRHand|OptionButton|Panel|PanelContainer|ParallaxBackground|ParallaxLayer|Path2D|Path3D|PathFollow2D|PathFollow3D|PhysicalBone2D|PhysicalBone3D|PhysicsBody2D|PhysicsBody3D|PinJoint2D|PinJoint3D|PointLight2D|Polygon2D|Popup|PopupMenu|PopupPanel|ProgressBar|Range|RayCast2D|RayCast3D|ReferenceRect|ReflectionProbe|RemoteTransform2D|RemoteTransform3D|ResourcePreloader|RichTextLabel|RigidBody2D|RigidBody3D|RootMotionView|ScriptCreateDialog|ScriptEditor|ScriptEditorBase|ScrollBar|ScrollContainer|Separator|ShaderGlobalsOverride|ShapeCast2D|ShapeCast3D|Skeleton2D|Skeleton3D|SkeletonIK3D|Slider|SliderJoint3D|SoftBody3D|SpinBox|SplitContainer|SpotLight3D|SpringArm3D|Sprite2D|Sprite3D|SpriteBase3D|StaticBody2D|StaticBody3D|SubViewport|SubViewportContainer|TabBar|TabContainer|TextEdit|TextureButton|TextureProgressBar|TextureRect|TileMap|Timer|TouchScreenButton|Tree|VBoxContainer|VehicleBody3D|VehicleWheel3D|VFlowContainer|VideoStreamPlayer|Viewport|VisibleOnScreenEnabler2D|VisibleOnScreenEnabler3D|VisibleOnScreenNotifier2D|VisibleOnScreenNotifier3D|VisualInstance3D|VoxelGI|VScrollBar|VSeparator|VSlider|VSplitContainer|Window|WorldEnvironment|XRAnchor3D|XRCamera3D|XRController3D|XRNode3D|XROrigin3D)\\b\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\w)(Resource|AnimatedTexture|Animation|AnimationLibrary|AnimationNode|AnimationNodeAdd2|AnimationNodeAdd3|AnimationNodeAnimation|AnimationNodeBlend2|AnimationNodeBlend3|AnimationNodeBlendSpace1D|AnimationNodeBlendSpace2D|AnimationNodeBlendTree|AnimationNodeOneShot|AnimationNodeOutput|AnimationNodeStateMachine|AnimationNodeStateMachinePlayback|AnimationNodeStateMachineTransition|AnimationNodeSub2|AnimationNodeSync|AnimationNodeTimeScale|AnimationNodeTimeSeek|AnimationNodeTransition|AnimationRootNode|ArrayMesh|ArrayOccluder3D|AtlasTexture|AudioBusLayout|AudioEffect|AudioEffectAmplify|AudioEffectBandLimitFilter|AudioEffectBandPassFilter|AudioEffectCapture|AudioEffectChorus|AudioEffectCompressor|AudioEffectDelay|AudioEffectDistortion|AudioEffectEQ|AudioEffectEQ10|AudioEffectEQ21|AudioEffectEQ6|AudioEffectFilter|AudioEffectHighPassFilter|AudioEffectHighShelfFilter|AudioEffectLimiter|AudioEffectLowPassFilter|AudioEffectLowShelfFilter|AudioEffectNotchFilter|AudioEffectPanner|AudioEffectPhaser|AudioEffectPitchShift|AudioEffectRecord|AudioEffectReverb|AudioEffectSpectrumAnalyzer|AudioEffectStereoEnhance|AudioStream|AudioStreamGenerator|AudioStreamMicrophone|AudioStreamMP3|AudioStreamOggVorbis|AudioStreamPolyphonic|AudioStreamRandomizer|AudioStreamWAV|BaseMaterial3D|BitMap|BoneMap|BoxMesh|BoxOccluder3D|BoxShape3D|ButtonGroup|CameraAttributes|CameraAttributesPhysical|CameraAttributesPractical|CameraTexture|CanvasItemMaterial|CanvasTexture|CapsuleMesh|CapsuleShape2D|CapsuleShape3D|CircleShape2D|CodeHighlighter|CompressedCubemap|CompressedCubemapArray|CompressedTexture2D|CompressedTexture2DArray|CompressedTexture3D|CompressedTextureLayered|ConcavePolygonShape2D|ConcavePolygonShape3D|ConvexPolygonShape2D|ConvexPolygonShape3D|CryptoKey|CSharpScript|Cubemap|CubemapArray|Curve|Curve2D|Curve3D|CurveTexture|CurveXYZTexture|CylinderMesh|CylinderShape3D|EditorNode3DGizmoPlugin|EditorSettings|EditorSyntaxHighlighter|Environment|FastNoiseLite|FogMaterial|Font|FontFile|FontVariation|GDExtension|GDScript|GLTFAccessor|GLTFAnimation|GLTFBufferView|GLTFCamera|GLTFDocument|GLTFDocumentExtension|GLTFDocumentExtensionConvertImporterMesh|GLTFLight|GLTFMesh|GLTFNode|GLTFPhysicsBody|GLTFPhysicsShape|GLTFSkeleton|GLTFSkin|GLTFSpecGloss|GLTFState|GLTFTexture|GLTFTextureSampler|Gradient|GradientTexture1D|GradientTexture2D|HeightMapShape3D|Image|ImageTexture|ImageTexture3D|ImageTextureLayered|ImmediateMesh|ImporterMesh|InputEvent|InputEventAction|InputEventFromWindow|InputEventGesture|InputEventJoypadButton|InputEventJoypadMotion|InputEventKey|InputEventMagnifyGesture|InputEventMIDI|InputEventMouse|InputEventMouseButton|InputEventMouseMotion|InputEventPanGesture|InputEventScreenDrag|InputEventScreenTouch|InputEventShortcut|InputEventWithModifiers|JSON|LabelSettings|LightmapGIData|Material|Mesh|MeshLibrary|MeshTexture|MissingResource|MultiMesh|NavigationMesh|NavigationMeshSourceGeometryData3D|NavigationPolygon|Noise|NoiseTexture2D|NoiseTexture3D|Occluder3D|OccluderPolygon2D|OggPacketSequence|OpenXRAction|OpenXRActionMap|OpenXRActionSet|OpenXRInteractionProfile|OpenXRIPBinding|OptimizedTranslation|ORMMaterial3D|PackedDataContainer|PackedScene|PanoramaSkyMaterial|ParticleProcessMaterial|PhysicalSkyMaterial|PhysicsMaterial|PlaceholderCubemap|PlaceholderCubemapArray|PlaceholderMaterial|PlaceholderMesh|PlaceholderTexture2D|PlaceholderTexture2DArray|PlaceholderTexture3D|PlaceholderTextureLayered|PlaneMesh|PointMesh|PolygonOccluder3D|PolygonPathFinder|PortableCompressedTexture2D|PrimitiveMesh|PrismMesh|ProceduralSkyMaterial|QuadMesh|QuadOccluder3D|RDShaderFile|RDShaderSPIRV|RectangleShape2D|RibbonTrailMesh|RichTextEffect|SceneReplicationConfig|Script|ScriptExtension|SegmentShape2D|SeparationRayShape2D|SeparationRayShape3D|Shader|ShaderInclude|ShaderMaterial|Shape2D|Shape3D|Shortcut|SkeletonModification2D|SkeletonModification2DCCDIK|SkeletonModification2DFABRIK|SkeletonModification2DJiggle|SkeletonModification2DLookAt|SkeletonModification2DPhysicalBones|SkeletonModification2DStackHolder|SkeletonModification2DTwoBoneIK|SkeletonModificationStack2D|SkeletonProfile|SkeletonProfileHumanoid|Skin|Sky|SphereMesh|SphereOccluder3D|SphereShape3D|SpriteFrames|StandardMaterial3D|StyleBox|StyleBoxEmpty|StyleBoxFlat|StyleBoxLine|StyleBoxTexture|SyntaxHighlighter|SystemFont|TextMesh|Texture|Texture2D|Texture2DArray|Texture3D|TextureLayered|Theme|TileMapPattern|TileSet|TileSetAtlasSource|TileSetScenesCollectionSource|TileSetSource|TorusMesh|Translation|TubeTrailMesh|VideoStream|VideoStreamPlayback|VideoStreamTheora|ViewportTexture|VisualShader|VisualShaderNode|VisualShaderNodeBillboard|VisualShaderNodeBooleanConstant|VisualShaderNodeBooleanParameter|VisualShaderNodeClamp|VisualShaderNodeColorConstant|VisualShaderNodeColorFunc|VisualShaderNodeColorOp|VisualShaderNodeColorParameter|VisualShaderNodeComment|VisualShaderNodeCompare|VisualShaderNodeConstant|VisualShaderNodeCubemap|VisualShaderNodeCubemapParameter|VisualShaderNodeCurveTexture|VisualShaderNodeCurveXYZTexture|VisualShaderNodeCustom|VisualShaderNodeDerivativeFunc|VisualShaderNodeDeterminant|VisualShaderNodeDistanceFade|VisualShaderNodeDotProduct|VisualShaderNodeExpression|VisualShaderNodeFaceForward|VisualShaderNodeFloatConstant|VisualShaderNodeFloatFunc|VisualShaderNodeFloatOp|VisualShaderNodeFloatParameter|VisualShaderNodeFresnel|VisualShaderNodeGlobalExpression|VisualShaderNodeGroupBase|VisualShaderNodeIf|VisualShaderNodeInput|VisualShaderNodeIntConstant|VisualShaderNodeIntFunc|VisualShaderNodeIntOp|VisualShaderNodeIntParameter|VisualShaderNodeIs|VisualShaderNodeLinearSceneDepth|VisualShaderNodeMix|VisualShaderNodeMultiplyAdd|VisualShaderNodeOuterProduct|VisualShaderNodeOutput|VisualShaderNodeParameter|VisualShaderNodeParameterRef|VisualShaderNodeParticleAccelerator|VisualShaderNodeParticleBoxEmitter|VisualShaderNodeParticleConeVelocity|VisualShaderNodeParticleEmit|VisualShaderNodeParticleEmitter|VisualShaderNodeParticleMeshEmitter|VisualShaderNodeParticleMultiplyByAxisAngle|VisualShaderNodeParticleOutput|VisualShaderNodeParticleRandomness|VisualShaderNodeParticleRingEmitter|VisualShaderNodeParticleSphereEmitter|VisualShaderNodeProximityFade|VisualShaderNodeRandomRange|VisualShaderNodeRemap|VisualShaderNodeResizableBase|VisualShaderNodeSample3D|VisualShaderNodeScreenUVToSDF|VisualShaderNodeSDFRaymarch|VisualShaderNodeSDFToScreenUV|VisualShaderNodeSmoothStep|VisualShaderNodeStep|VisualShaderNodeSwitch|VisualShaderNodeTexture|VisualShaderNodeTexture2DArray|VisualShaderNodeTexture2DArrayParameter|VisualShaderNodeTexture2DParameter|VisualShaderNodeTexture3D|VisualShaderNodeTexture3DParameter|VisualShaderNodeTextureParameter|VisualShaderNodeTextureParameterTriplanar|VisualShaderNodeTextureSDF|VisualShaderNodeTextureSDFNormal|VisualShaderNodeTransformCompose|VisualShaderNodeTransformConstant|VisualShaderNodeTransformDecompose|VisualShaderNodeTransformFunc|VisualShaderNodeTransformOp|VisualShaderNodeTransformParameter|VisualShaderNodeTransformVecMult|VisualShaderNodeUIntConstant|VisualShaderNodeUIntFunc|VisualShaderNodeUIntOp|VisualShaderNodeUIntParameter|VisualShaderNodeUVFunc|VisualShaderNodeUVPolarCoord|VisualShaderNodeVarying|VisualShaderNodeVaryingGetter|VisualShaderNodeVaryingSetter|VisualShaderNodeVec2Constant|VisualShaderNodeVec2Parameter|VisualShaderNodeVec3Constant|VisualShaderNodeVec3Parameter|VisualShaderNodeVec4Constant|VisualShaderNodeVec4Parameter|VisualShaderNodeVectorBase|VisualShaderNodeVectorCompose|VisualShaderNodeVectorDecompose|VisualShaderNodeVectorDistance|VisualShaderNodeVectorFunc|VisualShaderNodeVectorLen|VisualShaderNodeVectorOp|VisualShaderNodeVectorRefract|VoxelGIData|World2D|World3D|WorldBoundaryShape2D|WorldBoundaryShape3D|X509Certificate)\\b\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\w)(Object|AESContext|AStar2D|AStar3D|AStarGrid2D|AudioEffectInstance|AudioEffectSpectrumAnalyzerInstance|AudioServer|AudioStreamGeneratorPlayback|AudioStreamPlayback|AudioStreamPlaybackOggVorbis|AudioStreamPlaybackPolyphonic|AudioStreamPlaybackResampled|CallbackTweener|CameraFeed|CameraServer|CharFXTransform|ClassDB|ConfigFile|Crypto|DirAccess|DisplayServer|DTLSServer|EditorDebuggerPlugin|EditorDebuggerSession|EditorExportPlatform|EditorExportPlatformAndroid|EditorExportPlatformIOS|EditorExportPlatformLinuxBSD|EditorExportPlatformMacOS|EditorExportPlatformPC|EditorExportPlatformWeb|EditorExportPlatformWindows|EditorExportPlugin|EditorFeatureProfile|EditorFileSystemDirectory|EditorFileSystemImportFormatSupportQuery|EditorImportPlugin|EditorInspectorPlugin|EditorInterface|EditorNode3DGizmo|EditorPaths|EditorResourceConversionPlugin|EditorResourcePreviewGenerator|EditorResourceTooltipPlugin|EditorSceneFormatImporter|EditorSceneFormatImporterBlend|EditorSceneFormatImporterFBX|EditorSceneFormatImporterGLTF|EditorScenePostImport|EditorScenePostImportPlugin|EditorScript|EditorSelection|EditorTranslationParserPlugin|EditorUndoRedoManager|EditorVCSInterface|EncodedObjectAsID|ENetConnection|ENetMultiplayerPeer|ENetPacketPeer|Engine|EngineDebugger|EngineProfiler|Expression|FileAccess|GDExtensionManager|Geometry2D|Geometry3D|GodotSharp|HashingContext|HMACContext|HTTPClient|ImageFormatLoader|ImageFormatLoaderExtension|Input|InputMap|IntervalTweener|IP|JavaClass|JavaClassWrapper|JavaScriptBridge|JavaScriptObject|JNISingleton|JSONRPC|KinematicCollision2D|KinematicCollision3D|Lightmapper|LightmapperRD|MainLoop|Marshalls|MeshConvexDecompositionSettings|MeshDataTool|MethodTweener|MobileVRInterface|MovieWriter|MultiplayerAPI|MultiplayerAPIExtension|MultiplayerPeer|MultiplayerPeerExtension|Mutex|NavigationMeshGenerator|NavigationPathQueryParameters2D|NavigationPathQueryParameters3D|NavigationPathQueryResult2D|NavigationPathQueryResult3D|NavigationServer2D|NavigationServer3D|Node|Node3DGizmo|OfflineMultiplayerPeer|OggPacketSequencePlayback|OpenXRInterface|OS|PackedDataContainerRef|PacketPeer|PacketPeerDTLS|PacketPeerExtension|PacketPeerStream|PacketPeerUDP|PCKPacker|Performance|PhysicsDirectBodyState2D|PhysicsDirectBodyState2DExtension|PhysicsDirectBodyState3D|PhysicsDirectBodyState3DExtension|PhysicsDirectSpaceState2D|PhysicsDirectSpaceState2DExtension|PhysicsDirectSpaceState3D|PhysicsDirectSpaceState3DExtension|PhysicsPointQueryParameters2D|PhysicsPointQueryParameters3D|PhysicsRayQueryParameters2D|PhysicsRayQueryParameters3D|PhysicsServer2D|PhysicsServer2DExtension|PhysicsServer2DManager|PhysicsServer3D|PhysicsServer3DExtension|PhysicsServer3DManager|PhysicsServer3DRenderingServerHandler|PhysicsShapeQueryParameters2D|PhysicsShapeQueryParameters3D|PhysicsTestMotionParameters2D|PhysicsTestMotionParameters3D|PhysicsTestMotionResult2D|PhysicsTestMotionResult3D|ProjectSettings|PropertyTweener|RandomNumberGenerator|RDAttachmentFormat|RDFramebufferPass|RDPipelineColorBlendState|RDPipelineColorBlendStateAttachment|RDPipelineDepthStencilState|RDPipelineMultisampleState|RDPipelineRasterizationState|RDPipelineSpecializationConstant|RDSamplerState|RDShaderSource|RDTextureFormat|RDTextureView|RDUniform|RDVertexAttribute|RefCounted|RegEx|RegExMatch|RenderingDevice|RenderingServer|Resource|ResourceFormatLoader|ResourceFormatSaver|ResourceImporter|ResourceLoader|ResourceSaver|ResourceUID|SceneMultiplayer|SceneState|SceneTree|SceneTreeTimer|ScriptLanguage|ScriptLanguageExtension|Semaphore|SkinReference|StreamPeer|StreamPeerBuffer|StreamPeerExtension|StreamPeerGZIP|StreamPeerTCP|StreamPeerTLS|SurfaceTool|TCPServer|TextLine|TextParagraph|TextServer|TextServerAdvanced|TextServerDummy|TextServerExtension|TextServerFallback|TextServerManager|ThemeDB|Thread|TileData|Time|TLSOptions|TranslationServer|TreeItem|TriangleMesh|Tween|Tweener|UDPServer|UndoRedo|UPNP|UPNPDevice|WeakRef|WebRTCDataChannel|WebRTCDataChannelExtension|WebRTCMultiplayerPeer|WebRTCPeerConnection|WebRTCPeerConnectionExtension|WebSocketMultiplayerPeer|WebSocketPeer|WebXRInterface|WorkerThreadPool|XMLParser|XRInterface|XRInterfaceExtension|XRPose|XRPositionalTracker|XRServer|ZIPPacker|ZIPReader)\\b\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\w)(EditorCommandPalette|EditorDebuggerPlugin|EditorDebuggerSession|EditorExportPlatform|EditorExportPlatformAndroid|EditorExportPlatformIOS|EditorExportPlatformLinuxBSD|EditorExportPlatformMacOS|EditorExportPlatformPC|EditorExportPlatformWeb|EditorExportPlatformWindows|EditorExportPlugin|EditorFeatureProfile|EditorFileDialog|EditorFileSystem|EditorFileSystemDirectory|EditorFileSystemImportFormatSupportQuery|EditorImportPlugin|EditorInspector|EditorInspectorPlugin|EditorInterface|EditorNode3DGizmo|EditorNode3DGizmoPlugin|EditorPaths|EditorPlugin|EditorProperty|EditorResourceConversionPlugin|EditorResourcePicker|EditorResourcePreview|EditorResourcePreviewGenerator|EditorResourceTooltipPlugin|EditorSceneFormatImporter|EditorSceneFormatImporterBlend|EditorSceneFormatImporterFBX|EditorSceneFormatImporterGLTF|EditorScenePostImport|EditorScenePostImportPlugin|EditorScript|EditorScriptPicker|EditorSelection|EditorSettings|EditorSpinSlider|EditorSyntaxHighlighter|EditorTranslationParserPlugin|EditorUndoRedoManager|EditorVCSInterface|FileSystemDock|ScriptCreateDialog|ScriptEditor|ScriptEditorBase)\\b\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+    </state>\n+    <state name=\"strings_double\">\n+      <rule>\n+        <include state=\"strings\"/>\n+      </rule>\n+      <rule pattern=\"\\{[^\\\\\\&#34;\\n]*\\}\">\n+        <token type=\"LiteralStringInterpol\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\\\&#34;\\{%]+\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"%\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"{\">\n         <token type=\"LiteralStringDouble\"/>\n       </rule>\n     </state>\n-    <state name=\"name\">\n-      <rule pattern=\"[a-zA-Z_]\\w*\">\n-        <token type=\"Name\"/>\n+    <state name=\"strings\">\n+      <rule pattern=\"%(?:[+-]?[0-9*]*\\.?[0-9*]*)?[scdoxXf]\">\n+        <token type=\"LiteralStringInterpol\"/>\n+      </rule>\n+      <rule pattern=\"\\\\(U[0-9a-fA-F]{6}|u[0-9a-fA-F]{4}|[\\n\\\\\\&#39;\\&#34;ntrabfv])\">\n+        <token type=\"LiteralStringEscape\"/>\n       </rule>\n     </state>\n     <state name=\"root\">\n       <rule pattern=\"\\n\">\n         <token type=\"Text\"/>\n       </rule>\n-      <rule pattern=\"^(\\s*)([rRuUbB]{,2})(&#34;&#34;&#34;(?:.|\\n)*?&#34;&#34;&#34;)\">\n-        <bygroups>\n-          <token type=\"Text\"/>\n-          <token type=\"LiteralStringAffix\"/>\n-          <token type=\"LiteralStringDoc\"/>\n-        </bygroups>\n-      </rule>\n-      <rule pattern=\"^(\\s*)([rRuUbB]{,2})(&#39;&#39;&#39;(?:.|\\n)*?&#39;&#39;&#39;)\">\n-        <bygroups>\n-          <token type=\"Text\"/>\n-          <token type=\"LiteralStringAffix\"/>\n-          <token type=\"LiteralStringDoc\"/>\n-        </bygroups>\n-      </rule>\n       <rule pattern=\"[^\\S\\n]+\">\n         <token type=\"Text\"/>\n       </rule>\n       <rule pattern=\"#.*$\">\n         <token type=\"CommentSingle\"/>\n       </rule>\n-      <rule pattern=\"[]{}:(),;[]\">\n-        <token type=\"Punctuation\"/>\n-      </rule>\n       <rule pattern=\"\\\\\\n\">\n         <token type=\"Text\"/>\n       </rule>\n-      <rule pattern=\"\\\\\">\n-        <token type=\"Text\"/>\n+      <rule>\n+        <include state=\"keywords\"/>\n       </rule>\n-      <rule pattern=\"(in|and|or|not)\\b\">\n-        <token type=\"OperatorWord\"/>\n+      <rule>\n+        <include state=\"annotations\"/>\n       </rule>\n-      <rule pattern=\"!=|==|&lt;&lt;|&gt;&gt;|&amp;&amp;|\\+=|-=|\\*=|/=|%=|&amp;=|\\|=|\\|\\||[-~+/*%=&lt;&gt;&amp;^.!|$]\">\n+      <rule pattern=\"\\*\\*|[*\\/~+-]|&lt;&lt;|&gt;&gt;|[&amp;^|]|==|!=|[&lt;&gt;]|&lt;=|&gt;=|!|&amp;&amp;|\\|\\||=|:=|\\+=|-=|\\*=|\\/=|\\*\\*=|%=|&amp;=|\\|=|\\^=|&lt;&lt;=|&gt;&gt;=|-&gt;|\\.\">\n         <token type=\"Operator\"/>\n       </rule>\n-      <rule>\n-        <include state=\"keywords\"/>\n+      <rule pattern=\"[]{}:(),;[]\">\n+        <token type=\"Punctuation\"/>\n       </rule>\n-      <rule pattern=\"(def)((?:\\s|\\\\\\s)+)\">\n+      <rule pattern=\"(func)((?:\\s|\\\\\\s)+)\">\n         <bygroups>\n-          <token type=\"Keyword\"/>\n+          <token type=\"KeywordDeclaration\"/>\n           <token type=\"Text\"/>\n         </bygroups>\n         <push state=\"funcname\"/>\n       </rule>\n-      <rule pattern=\"(class)((?:\\s|\\\\\\s)+)\">\n+      <rule pattern=\"(class|class_name|extends)((?:\\s|\\\\\\s)+)\">\n         <bygroups>\n-          <token type=\"Keyword\"/>\n+          <token type=\"KeywordDeclaration\"/>\n           <token type=\"Text\"/>\n         </bygroups>\n         <push state=\"classname\"/>\n       </rule>\n-      <rule>\n-        <include state=\"builtins\"/>\n-      </rule>\n-      <rule pattern=\"([rR]|[uUbB][rR]|[rR][uUbB])(&#34;&#34;&#34;)\">\n-        <bygroups>\n-          <token type=\"LiteralStringAffix\"/>\n-          <token type=\"LiteralStringDouble\"/>\n-        </bygroups>\n-        <push state=\"tdqs\"/>\n-      </rule>\n-      <rule pattern=\"([rR]|[uUbB][rR]|[rR][uUbB])(&#39;&#39;&#39;)\">\n-        <bygroups>\n-          <token type=\"LiteralStringAffix\"/>\n-          <token type=\"LiteralStringSingle\"/>\n-        </bygroups>\n-        <push state=\"tsqs\"/>\n-      </rule>\n-      <rule pattern=\"([rR]|[uUbB][rR]|[rR][uUbB])(&#34;)\">\n-        <bygroups>\n-          <token type=\"LiteralStringAffix\"/>\n-          <token type=\"LiteralStringDouble\"/>\n-        </bygroups>\n-        <push state=\"dqs\"/>\n-      </rule>\n-      <rule pattern=\"([rR]|[uUbB][rR]|[rR][uUbB])(&#39;)\">\n-        <bygroups>\n-          <token type=\"LiteralStringAffix\"/>\n-          <token type=\"LiteralStringSingle\"/>\n-        </bygroups>\n-        <push state=\"sqs\"/>\n+      <rule pattern=\"\\$[a-zA-Z_][\\w\\/]*\">\n+        <token type=\"NameOther\"/>\n       </rule>\n-      <rule pattern=\"([uUbB]?)(&#34;&#34;&#34;)\">\n-        <bygroups>\n-          <token type=\"LiteralStringAffix\"/>\n-          <token type=\"LiteralStringDouble\"/>\n-        </bygroups>\n-        <combined state=\"stringescape\" state=\"tdqs\"/>\n+      <rule pattern=\"%[a-zA-Z_]\\w*\">\n+        <token type=\"NameOther\"/>\n       </rule>\n-      <rule pattern=\"([uUbB]?)(&#39;&#39;&#39;)\">\n-        <bygroups>\n-          <token type=\"LiteralStringAffix\"/>\n-          <token type=\"LiteralStringSingle\"/>\n-        </bygroups>\n-        <combined state=\"stringescape\" state=\"tsqs\"/>\n-      </rule>\n-      <rule pattern=\"([uUbB]?)(&#34;)\">\n-        <bygroups>\n-          <token type=\"LiteralStringAffix\"/>\n-          <token type=\"LiteralStringDouble\"/>\n-        </bygroups>\n-        <combined state=\"stringescape\" state=\"dqs\"/>\n+      <rule pattern=\"%\">\n+        <token type=\"Operator\"/>\n       </rule>\n-      <rule pattern=\"([uUbB]?)(&#39;)\">\n-        <bygroups>\n-          <token type=\"LiteralStringAffix\"/>\n-          <token type=\"LiteralStringSingle\"/>\n-        </bygroups>\n-        <combined state=\"stringescape\" state=\"sqs\"/>\n+      <rule>\n+        <include state=\"types\"/>\n       </rule>\n       <rule>\n-        <include state=\"name\"/>\n+        <include state=\"builtin_funcs\"/>\n       </rule>\n       <rule>\n         <include state=\"numbers\"/>\n       </rule>\n-    </state>\n-    <state name=\"keywords\">\n-      <rule pattern=\"(breakpoint|continue|onready|extends|signal|return|export|static|setget|switch|break|const|while|class|tool|pass|func|case|enum|else|elif|var|for|do|if)\\b\">\n-        <token type=\"Keyword\"/>\n+      <rule pattern=\"(\\b[a-zA-Z_]\\w*)([(])\">\n+        <bygroups>\n+          <token type=\"NameFunction\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+        <push state=\"sqs\"/>\n       </rule>\n-    </state>\n-    <state name=\"dqs\">\n       <rule pattern=\"&#34;\">\n         <token type=\"LiteralStringDouble\"/>\n-        <pop depth=\"1\"/>\n-      </rule>\n-      <rule pattern=\"\\\\\\\\|\\\\&#34;|\\\\\\n\">\n-        <token type=\"LiteralStringEscape\"/>\n-      </rule>\n-      <rule>\n-        <include state=\"strings-double\"/>\n+        <push state=\"dqs\"/>\n       </rule>\n-    </state>\n-    <state name=\"tsqs\">\n       <rule pattern=\"&#39;&#39;&#39;\">\n         <token type=\"LiteralStringSingle\"/>\n-        <pop depth=\"1\"/>\n-      </rule>\n-      <rule>\n-        <include state=\"strings-single\"/>\n-      </rule>\n-      <rule pattern=\"\\n\">\n-        <token type=\"LiteralStringSingle\"/>\n-      </rule>\n-    </state>\n-    <state name=\"strings-double\">\n-      <rule pattern=\"%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]\">\n-        <token type=\"LiteralStringInterpol\"/>\n-      </rule>\n-      <rule pattern=\"[^\\\\\\&#39;&#34;%\\n]+\">\n-        <token type=\"LiteralStringDouble\"/>\n+        <push state=\"tsqs\"/>\n       </rule>\n-      <rule pattern=\"[\\&#39;&#34;\\\\]\">\n+      <rule pattern=\"&#34;&#34;&#34;\">\n         <token type=\"LiteralStringDouble\"/>\n+        <push state=\"tdqs\"/>\n       </rule>\n-      <rule pattern=\"%\">\n-        <token type=\"LiteralStringDouble\"/>\n+      <rule pattern=\"[a-zA-Z_]\\w*\">\n+        <token type=\"Name\"/>\n       </rule>\n     </state>\n   </rules>\n-</lexer>\n\\ No newline at end of file\n+</lexer>"
    },
    {
      "sha": "b50c9dd7b6c55b089a68835c6583a43db1d29d48",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/gdscript3.xml",
      "status": "added",
      "additions": 270,
      "deletions": 0,
      "changes": 270,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgdscript3.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgdscript3.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgdscript3.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,270 @@\n+<lexer>\n+  <config>\n+    <name>GDScript3</name>\n+    <alias>gdscript3</alias>\n+    <alias>gd3</alias>\n+    <filename>*.gd</filename>\n+    <mime_type>text/x-gdscript</mime_type>\n+    <mime_type>application/x-gdscript</mime_type>\n+    <analyse>\n+      <regex pattern=\"func (_ready|_init|_input|_process|_unhandled_input)\" score=\"0.8\"/>\n+      <regex pattern=\"(extends |class_name |onready |preload|load|setget|func [^_])\" score=\"0.4\"/>\n+      <regex pattern=\"(var|const|enum|export|signal|tool)\" score=\"0.2\"/>\n+    </analyse>\n+  </config>\n+  <rules>\n+    <state name=\"builtins\">\n+      <rule pattern=\"(?&lt;!\\.)(instance_from_id|nearest_po2|print_stack|type_exist|rand_range|linear2db|var2bytes|dict2inst|randomize|bytes2var|rand_seed|db2linear|inst2dict|printerr|printraw|decimals|preload|deg2rad|str2var|stepify|var2str|convert|weakref|fposmod|funcref|rad2deg|dectime|printt|is_inf|is_nan|assert|Color8|typeof|ColorN|prints|floor|atan2|yield|randf|print|range|clamp|round|randi|sqrt|tanh|cosh|ceil|ease|acos|load|fmod|lerp|seed|sign|atan|sinh|hash|asin|sin|str|cos|tan|pow|exp|min|abs|log|max)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\.)(self|false|true|PI|NAN|INF)\\b\">\n+        <token type=\"NameBuiltinPseudo\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\.)(Physics2DShapeQueryParameters|PhysicsShapeQueryParameters|Physics2DDirectBodyStateSW|NavigationPolygonInstance|ResourceInteractiveLoader|Physics2DDirectSpaceState|Physics2DShapeQueryResult|Physics2DTestMotionResult|InputEventJoystickButton|InputEventJoystickMotion|Physics2DDirectBodyState|PhysicsDirectBodyStateSW|PhysicsShapeQueryResult|PhysicsDirectSpaceState|SpatialSound2DServerSW|PackedDataContainerRef|NavigationMeshInstance|ResourceImportMetadata|PhysicsDirectBodyState|ConcavePolygonShape2D|CanvasItemShaderGraph|EditorScenePostImport|InputEventScreenTouch|InputEventMouseButton|InputEventMouseMotion|SpatialSound2DServer|AudioStreamOGGVorbis|VisibilityNotifier2D|InputEventScreenDrag|ConvexPolygonShape2D|SpatialSoundServerSW|ParticleAttractor2D|PackedDataContainer|SpatialStreamPlayer|RenderTargetTexture|AnimationTreePlayer|ConcavePolygonShape|InstancePlaceholder|MaterialShaderGraph|AudioStreamPlayback|VisibilityEnabler2D|SpatialSamplePlayer|DampedSpringJoint2D|InterpolatedCamera|ConvexPolygonShape|ConfirmationDialog|SpatialSoundServer|BakedLightInstance|ParallaxBackground|CollisionPolygon2D|CanvasItemMaterial|VisibilityNotifier|EditorImportPlugin|VideoStreamTheora|TouchScreenButton|ResourcePreloader|OccluderPolygon2D|BakedLightSampler|CollisionObject2D|RemoteTransform2D|PolygonPathFinder|StyleBoxImageMask|NavigationPolygon|TranslationServer|MultiMeshInstance|ImmediateGeometry|Physics2DServerSW|ColorPickerButton|VisibilityEnabler|PHashTranslation|RectangleShape2D|DirectionalLight|AnimatedSprite3D|WorldEnvironment|CollisionShape2D|EventStreamChibi|InputEventAction|CollisionPolygon|AudioStreamSpeex|EditorFileDialog|GeometryInstance|Generic6DOFJoint|PacketPeerStream|CanvasItemShader|KinematicBody2D|StyleBoxTexture|PhysicsServerSW|VSplitContainer|CenterContainer|GDFunctionState|AudioStreamOpus|TextureProgress|MarginContainer|CollisionObject|LightOccluder2D|AnimationPlayer|HSplitContainer|ScrollContainer|SoundRoomParams|Physics2DServer|MaterialShader|ShaderMaterial|ViewportSprite|SplitContainer|AudioStreamMPC|VisualInstance|PanelContainer|BackBufferCopy|SamplePlayer2D|CanvasModulate|ResourceLoader|CapsuleShape2D|ReferenceFrame|NavigationMesh|CollisionShape|ConeTwistJoint|ProximityGroup|AnimatedSprite|SegmentShape2D|BoneAttachment|RichTextLabel|CircleShape2D|VBoxContainer|PacketPeerUDP|SpatialPlayer|TextureButton|KinematicBody|SoundPlayer2D|PhysicsServer|ParallaxLayer|InputEventKey|GrooveJoint2D|PhysicsBody2D|FixedMaterial|GridContainer|HBoxContainer|StreamPeerSSL|StyleBoxEmpty|StreamPeerTCP|SampleLibrary|GDNativeClass|AudioServerSW|ResourceSaver|SpriteBase3D|StreamPlayer|AtlasTexture|VisualServer|SamplePlayer|StyleBoxFlat|StaticBody2D|SpriteFrames|MeshDataTool|MeshInstance|Vector3Array|BoxContainer|TabContainer|HButtonArray|LargeTexture|Navigation2D|WindowDialog|EditorScript|EditorPlugin|TextureFrame|AcceptDialog|ImageTexture|CapsuleShape|VehicleWheel|VButtonArray|Vector2Array|InputDefault|OptionButton|PathFollow2D|VehicleBody|ColorPicker|PopupDialog|ProgressBar|CanvasLayer|Translation|Environment|EventPlayer|VideoPlayer|EventStream|VideoStream|ButtonGroup|Particles2D|Patch9Frame|ButtonArray|SurfaceTool|MeshLibrary|PackedScene|PhysicsBody|AudioStream|Performance|StringArray|AudioServer|RigidBody2D|LineShape2D|SliderJoint|SphereShape|ShaderGraph|CheckButton|StreamPeer|FileDialog|PathFollow|SceneState|RoomBounds|Dictionary|VSeparator|PacketPeer|VScrollBar|MenuButton|HTTPClient|PinJoint2D|BakedLight|PlaneShape|InputEvent|BaseButton|HSeparator|HScrollBar|Navigation|PopupPanel|StaticBody|Position2D|Position3D|ToolButton|HingeJoint|CanvasItem|RayShape2D|ColorArray|ConfigFile|TCP_Server|RayCast2D|ColorRamp|SpotLight|RealArray|GraphNode|Container|Reference|PopupMenu|Separator|Polygon2D|MultiMesh|Semaphore|Transform|OmniLight|GraphEdit|Particles|Animation|Marshalls|SceneTree|RigidBody|XMLParser|PathRemap|ScrollBar|Directory|PCKPacker|RawArray|TextEdit|MainLoop|TreeItem|StyleBox|Material|Geometry|Matrix32|Resource|UndoRedo|RayShape|TestCube|ItemList|CheckBox|Camera2D|Skeleton|Sprite3D|Viewport|NodePath|IntArray|BoxShape|PinJoint|InputMap|LineEdit|GDScript|Vector3|TileMap|HSlider|Spatial|SpinBox|World2D|IP_Unix|Curve2D|Curve3D|WeakRef|GridMap|Matrix3|VSlider|CubeMap|Joint2D|Globals|Shape2D|Texture|Control|TileSet|Light2D|FuncRef|Vector2|RayCast|Script|Node2D|Button|BitMap|Sample|Object|String|Shader|Area2D|Slider|Sprite|Thread|Path2D|Camera|Portal|float|Theme|World|YSort|Shape|Joint|Mutex|Tween|RegEx|Label|Rect2|Array|Plane|Light|Range|Color|Input|Popup|Panel|Timer|Image|Area|Quad|bool|AABB|Quat|File|Tabs|Path|Font|Tree|Room|Mesh|Node|RID|int|Nil|IP|OS)\\b\">\n+        <token type=\"NameException\"/>\n+      </rule>\n+    </state>\n+    <state name=\"sqs\">\n+      <rule pattern=\"&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\\\\|\\\\&#39;|\\\\\\n\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"strings-single\"/>\n+      </rule>\n+    </state>\n+    <state name=\"stringescape\">\n+      <rule pattern=\"\\\\([\\\\abfnrtv&#34;\\&#39;]|\\n|N\\{.*?\\}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|x[a-fA-F0-9]{2}|[0-7]{1,3})\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+    </state>\n+    <state name=\"classname\">\n+      <rule pattern=\"[a-zA-Z_]\\w*\">\n+        <token type=\"NameClass\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"strings-single\">\n+      <rule pattern=\"%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]\">\n+        <token type=\"LiteralStringInterpol\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\\\&#39;&#34;%\\n]+\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"[\\&#39;&#34;\\\\]\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"%\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+    </state>\n+    <state name=\"funcname\">\n+      <rule pattern=\"[a-zA-Z_]\\w*\">\n+        <token type=\"NameFunction\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"numbers\">\n+      <rule pattern=\"(\\d+\\.\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?j?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"\\d+[eE][+-]?[0-9]+j?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0[xX][a-fA-F0-9]+\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"\\d+j?\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+    </state>\n+    <state name=\"tdqs\">\n+      <rule pattern=\"&#34;&#34;&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"strings-double\"/>\n+      </rule>\n+      <rule pattern=\"\\n\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+    </state>\n+    <state name=\"name\">\n+      <rule pattern=\"[a-zA-Z_]\\w*\">\n+        <token type=\"Name\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule pattern=\"\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"^(\\s*)([rRuUbB]{,2})(&#34;&#34;&#34;(?:.|\\n)*?&#34;&#34;&#34;)\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringDoc\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^(\\s*)([rRuUbB]{,2})(&#39;&#39;&#39;(?:.|\\n)*?&#39;&#39;&#39;)\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringDoc\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"[^\\S\\n]+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"#.*$\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"[]{}:(),;[]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"(in|and|or|not)\\b\">\n+        <token type=\"OperatorWord\"/>\n+      </rule>\n+      <rule pattern=\"!=|==|&lt;&lt;|&gt;&gt;|&amp;&amp;|\\+=|-=|\\*=|/=|%=|&amp;=|\\|=|\\|\\||[-~+/*%=&lt;&gt;&amp;^.!|$]\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"keywords\"/>\n+      </rule>\n+      <rule pattern=\"(def)((?:\\s|\\\\\\s)+)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+        <push state=\"funcname\"/>\n+      </rule>\n+      <rule pattern=\"(class)((?:\\s|\\\\\\s)+)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+        <push state=\"classname\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"builtins\"/>\n+      </rule>\n+      <rule pattern=\"([rR]|[uUbB][rR]|[rR][uUbB])(&#34;&#34;&#34;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringDouble\"/>\n+        </bygroups>\n+        <push state=\"tdqs\"/>\n+      </rule>\n+      <rule pattern=\"([rR]|[uUbB][rR]|[rR][uUbB])(&#39;&#39;&#39;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringSingle\"/>\n+        </bygroups>\n+        <push state=\"tsqs\"/>\n+      </rule>\n+      <rule pattern=\"([rR]|[uUbB][rR]|[rR][uUbB])(&#34;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringDouble\"/>\n+        </bygroups>\n+        <push state=\"dqs\"/>\n+      </rule>\n+      <rule pattern=\"([rR]|[uUbB][rR]|[rR][uUbB])(&#39;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringSingle\"/>\n+        </bygroups>\n+        <push state=\"sqs\"/>\n+      </rule>\n+      <rule pattern=\"([uUbB]?)(&#34;&#34;&#34;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringDouble\"/>\n+        </bygroups>\n+        <combined state=\"stringescape\" state=\"tdqs\"/>\n+      </rule>\n+      <rule pattern=\"([uUbB]?)(&#39;&#39;&#39;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringSingle\"/>\n+        </bygroups>\n+        <combined state=\"stringescape\" state=\"tsqs\"/>\n+      </rule>\n+      <rule pattern=\"([uUbB]?)(&#34;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringDouble\"/>\n+        </bygroups>\n+        <combined state=\"stringescape\" state=\"dqs\"/>\n+      </rule>\n+      <rule pattern=\"([uUbB]?)(&#39;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringSingle\"/>\n+        </bygroups>\n+        <combined state=\"stringescape\" state=\"sqs\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"name\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"numbers\"/>\n+      </rule>\n+    </state>\n+    <state name=\"keywords\">\n+      <rule pattern=\"(breakpoint|continue|onready|extends|signal|return|export|static|setget|switch|break|const|while|class|tool|pass|func|case|enum|else|elif|var|for|do|if)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+    </state>\n+    <state name=\"dqs\">\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\\\\|\\\\&#34;|\\\\\\n\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"strings-double\"/>\n+      </rule>\n+    </state>\n+    <state name=\"tsqs\">\n+      <rule pattern=\"&#39;&#39;&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"strings-single\"/>\n+      </rule>\n+      <rule pattern=\"\\n\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+    </state>\n+    <state name=\"strings-double\">\n+      <rule pattern=\"%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]\">\n+        <token type=\"LiteralStringInterpol\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\\\&#39;&#34;%\\n]+\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"[\\&#39;&#34;\\\\]\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"%\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>"
    },
    {
      "sha": "36f737b93f92c6766fa6717c66448df7089c8265",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/go_template.xml",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgo_template.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgo_template.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgo_template.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,7 +1,9 @@\n <lexer>\n   <config>\n-    <name>Go HTML Template</name>\n-    <alias>go-html-template</alias>\n+    <name>Go Template</name>\n+    <alias>go-template</alias>\n+    <filename>*.gotmpl</filename>\n+    <filename>*.go.tmpl</filename>\n   </config>\n   <rules>\n     <state name=\"template\">\n@@ -109,4 +111,4 @@\n       </rule>\n     </state>\n   </rules>\n-</lexer>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "3cca2e9a5bc9fc67baa6f6b97127eecfe7e21ccd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/groovy.xml",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgroovy.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgroovy.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgroovy.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -41,10 +41,10 @@\n       <rule pattern=\"(as|assert|break|case|catch|continue|default|do|else|finally|for|if|in|goto|instanceof|new|return|switch|this|throw|try|while|in|as)\\b\">\n         <token type=\"Keyword\"/>\n       </rule>\n-      <rule pattern=\"(abstract|const|enum|extends|final|implements|native|private|protected|public|static|strictfp|super|synchronized|throws|transient|volatile)\\b\">\n+      <rule pattern=\"(abstract|const|extends|final|implements|native|private|protected|public|static|strictfp|super|synchronized|throws|transient|volatile)\\b\">\n         <token type=\"KeywordDeclaration\"/>\n       </rule>\n-      <rule pattern=\"(def|boolean|byte|char|double|float|int|long|short|void)\\b\">\n+      <rule pattern=\"(def|var|boolean|byte|char|double|float|int|long|short|void)\\b\">\n         <token type=\"KeywordType\"/>\n       </rule>\n       <rule pattern=\"(package)(\\s+)\">\n@@ -56,7 +56,7 @@\n       <rule pattern=\"(true|false|null)\\b\">\n         <token type=\"KeywordConstant\"/>\n       </rule>\n-      <rule pattern=\"(class|interface|record)(\\s+)\">\n+      <rule pattern=\"(class|interface|enum|trait|record)(\\s+)\">\n         <bygroups>\n           <token type=\"KeywordDeclaration\"/>\n           <token type=\"Text\"/>\n@@ -132,4 +132,4 @@\n       </rule>\n     </state>\n   </rules>\n-</lexer>\n\\ No newline at end of file\n+</lexer>"
    },
    {
      "sha": "ea63642284c398533b9c7a5e43a30d3a147a4c3c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/hare.xml",
      "status": "added",
      "additions": 98,
      "deletions": 0,
      "changes": 98,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhare.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhare.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhare.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,98 @@\n+<lexer>\n+  <config>\n+    <name>Hare</name>\n+    <alias>hare</alias>\n+    <filename>*.ha</filename>\n+    <mime_type>text/x-hare</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"string\">\n+      <rule pattern=\"&quot;\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\\\([\\\\0abfnrtv&quot;']|x[a-fA-F0-9]{2}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8})\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\&quot;\\n]+\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule pattern=\"[\\s\\n]+\">\n+        <token type=\"TextWhitespace\"/>\n+      </rule>\n+      <rule pattern=\"@[a-z]+\">\n+        <token type=\"NameDecorator\"/>\n+      </rule>\n+      <rule pattern=\"//.*\\n\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"&quot;\">\n+        <token type=\"LiteralString\"/>\n+        <push state=\"string\"/>\n+      </rule>\n+      <rule pattern=\"`[^`]*`\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"'(\\\\[\\\\0abfnrtv&quot;']||\\\\(x[a-fA-F0-9]{2}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8})|[^\\\\'])'\">\n+        <token type=\"LiteralStringChar\"/>\n+      </rule>\n+      <rule pattern=\"(0|[1-9]\\d*)\\.\\d+([eE][+-]?\\d+)?(f32|f64)?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"(0|[1-9]\\d*)([eE][+-]?\\d+)?(f32|f64)\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0x[0-9a-fA-F]+\\.[0-9a-fA-F]+([pP][+-]?\\d+(f32|f64)?)?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0x[0-9a-fA-F]+[pP][+-]?\\d+(f32|f64)\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0x[0-9a-fA-F]+(z|[iu](8|16|32|64)?)?\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"0o[0-7]+(z|[iu](8|16|32|64)?)?\">\n+        <token type=\"LiteralNumberOct\"/>\n+      </rule>\n+      <rule pattern=\"0b[01]+(z|[iu](8|16|32|64)?)?\">\n+        <token type=\"LiteralNumberBin\"/>\n+      </rule>\n+      <rule pattern=\"(0|[1-9]\\d*)([eE][+-]?\\d+)?(z|[iu](8|16|32|64)?)?\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"[~!%^&amp;*+=|?:&lt;&gt;/-]|[ai]s\\b|\\.\\.\\.\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[()\\[\\],.{};]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"use\\b\">\n+        <token type=\"KeywordNamespace\"/>\n+      </rule>\n+      <rule pattern=\"(_|align|break|const|continue|else|enum|export|for|if|return|static|struct|offset|union|fn|free|assert|abort|alloc|let|len|def|type|match|switch|case|append|delete|insert|defer|yield|vastart|vaarg|vaend)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(size)([\\s\\n]*)(\\()\">\n+        <bygroups>\n+          <token type=\"Keyword\" />\n+          <token type=\"TextWhitespace\" />\n+          <token type=\"Punctuation\" />\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(str|size|rune|bool|int|uint|uintptr|u8|u16|u32|u64|i8|i16|i32|i64|f32|f64|null|void|nullable|valist|opaque|never)\\b\">\n+        <token type=\"KeywordType\"/>\n+      </rule>\n+      <rule pattern=\"(true|false)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"[a-zA-Z_]\\w*\">\n+        <token type=\"Name\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>"
    },
    {
      "sha": "41ab32395bc0deb13bf2dda34c4040389186dbfb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/hlsl.xml",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhlsl.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhlsl.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhlsl.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -4,6 +4,9 @@\n     <alias>hlsl</alias>\n     <filename>*.hlsl</filename>\n     <filename>*.hlsli</filename>\n+    <filename>*.cginc</filename>\n+    <filename>*.fx</filename>\n+    <filename>*.fxh</filename>\n     <mime_type>text/x-hlsl</mime_type>\n   </config>\n   <rules>\n@@ -104,4 +107,4 @@\n       </rule>\n     </state>\n   </rules>\n-</lexer>\n\\ No newline at end of file\n+</lexer>"
    },
    {
      "sha": "2f1a8a9790fea1c60b64b77c1ad113eaf425249b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/html.xml",
      "status": "added",
      "additions": 159,
      "deletions": 0,
      "changes": 159,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhtml.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhtml.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhtml.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,159 @@\n+<lexer>\n+  <config>\n+    <name>HTML</name>\n+    <alias>html</alias>\n+    <filename>*.html</filename>\n+    <filename>*.htm</filename>\n+    <filename>*.xhtml</filename>\n+    <filename>*.xslt</filename>\n+    <mime_type>text/html</mime_type>\n+    <mime_type>application/xhtml+xml</mime_type>\n+    <case_insensitive>true</case_insensitive>\n+    <dot_all>true</dot_all>\n+    <not_multiline>true</not_multiline>\n+  </config>\n+  <rules>\n+    <state name=\"script-content\">\n+      <rule pattern=\"(&lt;)(\\s*)(/)(\\s*)(script)(\\s*)(&gt;)\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameTag\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\".+?(?=&lt;\\s*/\\s*script\\s*&gt;)\">\n+        <using lexer=\"Javascript\"/>\n+      </rule>\n+    </state>\n+    <state name=\"style-content\">\n+      <rule pattern=\"(&lt;)(\\s*)(/)(\\s*)(style)(\\s*)(&gt;)\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameTag\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\".+?(?=&lt;\\s*/\\s*style\\s*&gt;)\">\n+        <using lexer=\"CSS\"/>\n+      </rule>\n+    </state>\n+    <state name=\"attr\">\n+      <rule pattern=\"&#34;.*?&#34;\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"&#39;.*?&#39;\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"[^\\s&gt;]+\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule pattern=\"[^&lt;&amp;]+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"&amp;\\S*?;\">\n+        <token type=\"NameEntity\"/>\n+      </rule>\n+      <rule pattern=\"\\&lt;\\!\\[CDATA\\[.*?\\]\\]\\&gt;\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"&lt;!--\">\n+        <token type=\"Comment\"/>\n+        <push state=\"comment\"/>\n+      </rule>\n+      <rule pattern=\"&lt;\\?.*?\\?&gt;\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"&lt;![^&gt;]*&gt;\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"(&lt;)(\\s*)(script)(\\s*)\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameTag\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+        <push state=\"script-content\" state=\"tag\"/>\n+      </rule>\n+      <rule pattern=\"(&lt;)(\\s*)(style)(\\s*)\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameTag\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+        <push state=\"style-content\" state=\"tag\"/>\n+      </rule>\n+      <rule pattern=\"(&lt;)(\\s*)([\\w:.-]+)\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameTag\"/>\n+        </bygroups>\n+        <push state=\"tag\"/>\n+      </rule>\n+      <rule pattern=\"(&lt;)(\\s*)(/)(\\s*)([\\w:.-]+)(\\s*)(&gt;)\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameTag\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+    </state>\n+    <state name=\"comment\">\n+      <rule pattern=\"[^-]+\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"--&gt;\">\n+        <token type=\"Comment\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"-\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+    </state>\n+    <state name=\"tag\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"([\\w:-]+\\s*)(=)(\\s*)\">\n+        <bygroups>\n+          <token type=\"NameAttribute\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+        <push state=\"attr\"/>\n+      </rule>\n+      <rule pattern=\"[\\w:-]+\">\n+        <token type=\"NameAttribute\"/>\n+      </rule>\n+      <rule pattern=\"(/?)(\\s*)(&gt;)\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "08f3870be284ce658dcac09ca1b8c49b8b483e73",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/ini.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fini.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fini.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fini.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -15,6 +15,7 @@\n     <filename>.pylintrc</filename>\n     <mime_type>text/x-ini</mime_type>\n     <mime_type>text/inf</mime_type>\n+    <priority>0.1</priority> <!-- higher priority than Inform 6 -->\n   </config>\n   <rules>\n     <state name=\"root\">"
    },
    {
      "sha": "645cb05d5098b9c7567d433463f61ac8f2f170e2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/iscdhcpd.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fiscdhcpd.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fiscdhcpd.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fiscdhcpd.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2,7 +2,7 @@\n   <config>\n     <name>ISCdhcpd</name>\n     <alias>iscdhcpd</alias>\n-    <filename>*.conf</filename>\n+    <filename>dhcpd.conf</filename>\n   </config>\n   <rules>\n     <state name=\"interpol\">"
    },
    {
      "sha": "3ce33ff6dc616c53571458d968b991e5babf862f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/java.xml",
      "status": "modified",
      "additions": 132,
      "deletions": 57,
      "changes": 189,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjava.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjava.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjava.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -5,114 +5,189 @@\n     <filename>*.java</filename>\n     <mime_type>text/x-java</mime_type>\n     <dot_all>true</dot_all>\n-    <ensure_nl>true</ensure_nl>\n   </config>\n   <rules>\n-    <state name=\"class\">\n-      <rule pattern=\"([^\\W\\d]|\\$)[\\w$]*\">\n-        <token type=\"NameClass\"/>\n-        <pop depth=\"1\"/>\n-      </rule>\n-    </state>\n-    <state name=\"import\">\n-      <rule pattern=\"[\\w.]+\\*?\">\n-        <token type=\"NameNamespace\"/>\n-        <pop depth=\"1\"/>\n-      </rule>\n-    </state>\n     <state name=\"root\">\n+      <rule pattern=\"(^\\s*)((?:(?:public|private|protected|static|strictfp)(?:\\s+))*)(record)\\b\">\n+        <bygroups>\n+          <token type=\"TextWhitespace\" />\n+          <usingself state=\"root\" />\n+          <token type=\"KeywordDeclaration\" />\n+        </bygroups>\n+        <push state=\"class\" />\n+      </rule>\n       <rule pattern=\"[^\\S\\n]+\">\n-        <token type=\"Text\"/>\n+        <token type=\"TextWhitespace\" />\n       </rule>\n-      <rule pattern=\"//.*?\\n\">\n-        <token type=\"CommentSingle\"/>\n+      <rule pattern=\"(//.*?)(\\n)\">\n+        <bygroups>\n+          <token type=\"CommentSingle\" />\n+          <token type=\"TextWhitespace\" />\n+        </bygroups>\n       </rule>\n       <rule pattern=\"/\\*.*?\\*/\">\n-        <token type=\"CommentMultiline\"/>\n+        <token type=\"CommentMultiline\" />\n       </rule>\n-      <rule pattern=\"(assert|break|case|catch|continue|default|do|else|finally|for|if|goto|instanceof|new|return|switch|this|throw|try|while)\\b\">\n-        <token type=\"Keyword\"/>\n+      <rule\n+        pattern=\"(assert|break|case|catch|continue|default|do|else|finally|for|if|goto|instanceof|new|return|switch|this|throw|try|while)\\b\">\n+        <token type=\"Keyword\" />\n       </rule>\n       <rule pattern=\"((?:(?:[^\\W\\d]|\\$)[\\w.\\[\\]$&lt;&gt;]*\\s+)+?)((?:[^\\W\\d]|\\$)[\\w$]*)(\\s*)(\\()\">\n         <bygroups>\n-          <usingself state=\"root\"/>\n-          <token type=\"NameFunction\"/>\n-          <token type=\"Text\"/>\n-          <token type=\"Operator\"/>\n+          <usingself state=\"root\" />\n+          <token type=\"NameFunction\" />\n+          <token type=\"TextWhitespace\" />\n+          <token type=\"Punctuation\" />\n         </bygroups>\n       </rule>\n       <rule pattern=\"@[^\\W\\d][\\w.]*\">\n-        <token type=\"NameDecorator\"/>\n+        <token type=\"NameDecorator\" />\n       </rule>\n-      <rule pattern=\"(abstract|const|enum|extends|final|implements|native|private|protected|public|static|strictfp|super|synchronized|throws|transient|volatile)\\b\">\n-        <token type=\"KeywordDeclaration\"/>\n+      <rule\n+        pattern=\"(abstract|const|enum|extends|final|implements|native|private|protected|public|sealed|static|strictfp|super|synchronized|throws|transient|volatile|yield)\\b\">\n+        <token type=\"KeywordDeclaration\" />\n       </rule>\n       <rule pattern=\"(boolean|byte|char|double|float|int|long|short|void)\\b\">\n-        <token type=\"KeywordType\"/>\n+        <token type=\"KeywordType\" />\n       </rule>\n       <rule pattern=\"(package)(\\s+)\">\n         <bygroups>\n-          <token type=\"KeywordNamespace\"/>\n-          <token type=\"Text\"/>\n+          <token type=\"KeywordNamespace\" />\n+          <token type=\"TextWhitespace\" />\n         </bygroups>\n-        <push state=\"import\"/>\n+        <push state=\"import\" />\n       </rule>\n       <rule pattern=\"(true|false|null)\\b\">\n-        <token type=\"KeywordConstant\"/>\n+        <token type=\"KeywordConstant\" />\n+      </rule>\n+      <rule pattern=\"(class|interface)\\b\">\n+        <token type=\"KeywordDeclaration\" />\n+        <push state=\"class\" />\n       </rule>\n-      <rule pattern=\"(class|interface)(\\s+)\">\n+      <rule pattern=\"(var)(\\s+)\">\n         <bygroups>\n-          <token type=\"KeywordDeclaration\"/>\n-          <token type=\"Text\"/>\n+          <token type=\"KeywordDeclaration\" />\n+          <token type=\"TextWhitespace\" />\n         </bygroups>\n-        <push state=\"class\"/>\n+        <push state=\"var\" />\n       </rule>\n       <rule pattern=\"(import(?:\\s+static)?)(\\s+)\">\n         <bygroups>\n-          <token type=\"KeywordNamespace\"/>\n-          <token type=\"Text\"/>\n+          <token type=\"KeywordNamespace\" />\n+          <token type=\"TextWhitespace\" />\n         </bygroups>\n-        <push state=\"import\"/>\n+        <push state=\"import\" />\n       </rule>\n-      <rule pattern=\"&#34;(\\\\\\\\|\\\\&#34;|[^&#34;])*&#34;\">\n-        <token type=\"LiteralString\"/>\n+      <rule pattern=\"&quot;&quot;&quot;\\n\">\n+        <token type=\"LiteralString\" />\n+        <push state=\"multiline_string\" />\n       </rule>\n-      <rule pattern=\"&#39;\\\\.&#39;|&#39;[^\\\\]&#39;|&#39;\\\\u[0-9a-fA-F]{4}&#39;\">\n-        <token type=\"LiteralStringChar\"/>\n+      <rule pattern=\"&quot;\">\n+        <token type=\"LiteralString\" />\n+        <push state=\"string\" />\n+      </rule>\n+      <rule pattern=\"&#x27;\\\\.&#x27;|&#x27;[^\\\\]&#x27;|&#x27;\\\\u[0-9a-fA-F]{4}&#x27;\">\n+        <token type=\"LiteralStringChar\" />\n       </rule>\n       <rule pattern=\"(\\.)((?:[^\\W\\d]|\\$)[\\w$]*)\">\n         <bygroups>\n-          <token type=\"Operator\"/>\n-          <token type=\"NameAttribute\"/>\n+          <token type=\"Punctuation\" />\n+          <token type=\"NameAttribute\" />\n         </bygroups>\n       </rule>\n-      <rule pattern=\"^\\s*([^\\W\\d]|\\$)[\\w$]*:\">\n-        <token type=\"NameLabel\"/>\n+      <rule pattern=\"^(\\s*)(default)(:)\">\n+        <bygroups>\n+          <token type=\"TextWhitespace\" />\n+          <token type=\"Keyword\" />\n+          <token type=\"Punctuation\" />\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^(\\s*)((?:[^\\W\\d]|\\$)[\\w$]*)(:)\">\n+        <bygroups>\n+          <token type=\"TextWhitespace\" />\n+          <token type=\"NameLabel\" />\n+          <token type=\"Punctuation\" />\n+        </bygroups>\n       </rule>\n       <rule pattern=\"([^\\W\\d]|\\$)[\\w$]*\">\n-        <token type=\"Name\"/>\n+        <token type=\"Name\" />\n       </rule>\n-      <rule pattern=\"([0-9][0-9_]*\\.([0-9][0-9_]*)?|\\.[0-9][0-9_]*)([eE][+\\-]?[0-9][0-9_]*)?[fFdD]?|[0-9][eE][+\\-]?[0-9][0-9_]*[fFdD]?|[0-9]([eE][+\\-]?[0-9][0-9_]*)?[fFdD]|0[xX]([0-9a-fA-F][0-9a-fA-F_]*\\.?|([0-9a-fA-F][0-9a-fA-F_]*)?\\.[0-9a-fA-F][0-9a-fA-F_]*)[pP][+\\-]?[0-9][0-9_]*[fFdD]?\">\n-        <token type=\"LiteralNumberFloat\"/>\n+      <rule\n+        pattern=\"([0-9][0-9_]*\\.([0-9][0-9_]*)?|\\.[0-9][0-9_]*)([eE][+\\-]?[0-9][0-9_]*)?[fFdD]?|[0-9][eE][+\\-]?[0-9][0-9_]*[fFdD]?|[0-9]([eE][+\\-]?[0-9][0-9_]*)?[fFdD]|0[xX]([0-9a-fA-F][0-9a-fA-F_]*\\.?|([0-9a-fA-F][0-9a-fA-F_]*)?\\.[0-9a-fA-F][0-9a-fA-F_]*)[pP][+\\-]?[0-9][0-9_]*[fFdD]?\">\n+        <token type=\"LiteralNumberFloat\" />\n       </rule>\n       <rule pattern=\"0[xX][0-9a-fA-F][0-9a-fA-F_]*[lL]?\">\n-        <token type=\"LiteralNumberHex\"/>\n+        <token type=\"LiteralNumberHex\" />\n       </rule>\n       <rule pattern=\"0[bB][01][01_]*[lL]?\">\n-        <token type=\"LiteralNumberBin\"/>\n+        <token type=\"LiteralNumberBin\" />\n       </rule>\n       <rule pattern=\"0[0-7_]+[lL]?\">\n-        <token type=\"LiteralNumberOct\"/>\n+        <token type=\"LiteralNumberOct\" />\n       </rule>\n       <rule pattern=\"0|[1-9][0-9_]*[lL]?\">\n-        <token type=\"LiteralNumberInteger\"/>\n+        <token type=\"LiteralNumberInteger\" />\n       </rule>\n-      <rule pattern=\"[~^*!%&amp;\\[\\](){}&lt;&gt;|+=:;,./?-]\">\n-        <token type=\"Operator\"/>\n+      <rule pattern=\"[~^*!%&amp;\\[\\]&lt;&gt;|+=/?-]\">\n+        <token type=\"Operator\" />\n+      </rule>\n+      <rule pattern=\"[{}();:.,]\">\n+        <token type=\"Punctuation\" />\n       </rule>\n       <rule pattern=\"\\n\">\n-        <token type=\"Text\"/>\n+        <token type=\"TextWhitespace\" />\n+      </rule>\n+    </state>\n+    <state name=\"class\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\" />\n+      </rule>\n+      <rule pattern=\"([^\\W\\d]|\\$)[\\w$]*\">\n+        <token type=\"NameClass\" />\n+        <pop depth=\"1\" />\n+      </rule>\n+    </state>\n+    <state name=\"var\">\n+      <rule pattern=\"([^\\W\\d]|\\$)[\\w$]*\">\n+        <token type=\"Name\" />\n+        <pop depth=\"1\" />\n+      </rule>\n+    </state>\n+    <state name=\"import\">\n+      <rule pattern=\"[\\w.]+\\*?\">\n+        <token type=\"NameNamespace\" />\n+        <pop depth=\"1\" />\n+      </rule>\n+    </state>\n+    <state name=\"multiline_string\">\n+      <rule pattern=\"&quot;&quot;&quot;\">\n+        <token type=\"LiteralString\" />\n+        <pop depth=\"1\" />\n+      </rule>\n+      <rule pattern=\"&quot;\">\n+        <token type=\"LiteralString\" />\n+      </rule>\n+      <rule>\n+        <include state=\"string\" />\n+      </rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"[^\\\\&quot;]+\">\n+        <token type=\"LiteralString\" />\n+      </rule>\n+      <rule pattern=\"\\\\\\\\\">\n+        <token type=\"LiteralString\" />\n+      </rule>\n+      <rule pattern=\"\\\\&quot;\">\n+        <token type=\"LiteralString\" />\n+      </rule>\n+      <rule pattern=\"\\\\\">\n+        <token type=\"LiteralString\" />\n+      </rule>\n+      <rule pattern=\"&quot;\">\n+        <token type=\"LiteralString\" />\n+        <pop depth=\"1\" />\n       </rule>\n     </state>\n   </rules>\n-</lexer>\n\\ No newline at end of file\n+</lexer>"
    },
    {
      "sha": "1319e5c838c2cfeb280b02f9bca4562c1f83b716",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/lighttpd_configuration_file.xml",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Flighttpd_configuration_file.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Flighttpd_configuration_file.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Flighttpd_configuration_file.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/lighttpd.xml"
    },
    {
      "sha": "a82a7f8d5656a48fcff6eac6adfe0cb3ad7e5ebb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/makefile.xml",
      "status": "added",
      "additions": 131,
      "deletions": 0,
      "changes": 131,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmakefile.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmakefile.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmakefile.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,131 @@\n+<lexer>\n+  <config>\n+    <name>Makefile</name>\n+    <alias>make</alias>\n+    <alias>makefile</alias>\n+    <alias>mf</alias>\n+    <alias>bsdmake</alias>\n+    <filename>*.mak</filename>\n+    <filename>*.mk</filename>\n+    <filename>Makefile</filename>\n+    <filename>makefile</filename>\n+    <filename>Makefile.*</filename>\n+    <filename>GNUmakefile</filename>\n+    <filename>BSDmakefile</filename>\n+    <filename>Justfile</filename>\n+    <filename>justfile</filename>\n+    <filename>.justfile</filename>\n+    <mime_type>text/x-makefile</mime_type>\n+    <ensure_nl>true</ensure_nl>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"^(?:[\\t ]+.*\\n|\\n)+\">\n+        <using lexer=\"Bash\"/>\n+      </rule>\n+      <rule pattern=\"\\$[&lt;@$+%?|*]\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"#.*?\\n\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"(export)(\\s+)(?=[\\w${}\\t -]+\\n)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+        <push state=\"export\"/>\n+      </rule>\n+      <rule pattern=\"export\\s+\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"([\\w${}().-]+)(\\s*)([!?:+]?=)([ \\t]*)((?:.*\\\\\\n)+|.*\\n)\">\n+        <bygroups>\n+          <token type=\"NameVariable\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"Text\"/>\n+          <using lexer=\"Bash\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?s)&#34;(\\\\\\\\|\\\\.|[^&#34;\\\\])*&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"(?s)&#39;(\\\\\\\\|\\\\.|[^&#39;\\\\])*&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"([^\\n:]+)(:+)([ \\t]*)\">\n+        <bygroups>\n+          <token type=\"NameFunction\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+        <push state=\"block-header\"/>\n+      </rule>\n+      <rule pattern=\"\\$\\(\">\n+        <token type=\"Keyword\"/>\n+        <push state=\"expansion\"/>\n+      </rule>\n+    </state>\n+    <state name=\"expansion\">\n+      <rule pattern=\"[^$a-zA-Z_()]+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"[a-zA-Z_]+\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+      <rule pattern=\"\\$\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"\\(\">\n+        <token type=\"Keyword\"/>\n+        <push/>\n+      </rule>\n+      <rule pattern=\"\\)\">\n+        <token type=\"Keyword\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"export\">\n+      <rule pattern=\"[\\w${}-]+\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+      <rule pattern=\"\\n\">\n+        <token type=\"Text\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+    <state name=\"block-header\">\n+      <rule pattern=\"[,|]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"#.*?\\n\">\n+        <token type=\"Comment\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\$\\(\">\n+        <token type=\"Keyword\"/>\n+        <push state=\"expansion\"/>\n+      </rule>\n+      <rule pattern=\"[a-zA-Z_]+\">\n+        <token type=\"Name\"/>\n+      </rule>\n+      <rule pattern=\"\\n\">\n+        <token type=\"Text\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\".\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "782414087b2460438854fcefc1c374e19d0486cd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/mako.xml",
      "status": "added",
      "additions": 120,
      "deletions": 0,
      "changes": 120,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmako.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmako.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmako.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,120 @@\n+<lexer>\n+  <config>\n+    <name>Mako</name>\n+    <alias>mako</alias>\n+    <filename>*.mao</filename>\n+    <mime_type>application/x-mako</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"(\\s*)(%)(\\s*end(?:\\w+))(\\n|\\Z)\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"CommentPreproc\"/>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Other\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\s*)(%)([^\\n]*)(\\n|\\Z)\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"CommentPreproc\"/>\n+          <using lexer=\"Python\"/>\n+          <token type=\"Other\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\s*)(##[^\\n]*)(\\n|\\Z)\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"CommentPreproc\"/>\n+          <token type=\"Other\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?s)&lt;%doc&gt;.*?&lt;/%doc&gt;\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"(&lt;%)([\\w.:]+)\">\n+        <bygroups>\n+          <token type=\"CommentPreproc\"/>\n+          <token type=\"NameBuiltin\"/>\n+        </bygroups>\n+        <push state=\"tag\"/>\n+      </rule>\n+      <rule pattern=\"(&lt;/%)([\\w.:]+)(&gt;)\">\n+        <bygroups>\n+          <token type=\"CommentPreproc\"/>\n+          <token type=\"NameBuiltin\"/>\n+          <token type=\"CommentPreproc\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"&lt;%(?=([\\w.:]+))\">\n+        <token type=\"CommentPreproc\"/>\n+        <push state=\"ondeftags\"/>\n+      </rule>\n+      <rule pattern=\"(&lt;%(?:!?))(.*?)(%&gt;)(?s)\">\n+        <bygroups>\n+          <token type=\"CommentPreproc\"/>\n+          <using lexer=\"Python\"/>\n+          <token type=\"CommentPreproc\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\$\\{)(.*?)(\\})\">\n+        <bygroups>\n+          <token type=\"CommentPreproc\"/>\n+          <using lexer=\"Python\"/>\n+          <token type=\"CommentPreproc\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?sx)&#xA;                (.+?)                # anything, followed by:&#xA;                (?:&#xA;                 (?&lt;=\\n)(?=%|\\#\\#) | # an eval or comment line&#xA;                 (?=\\#\\*) |          # multiline comment&#xA;                 (?=&lt;/?%) |          # a python block&#xA;                                     # call start or end&#xA;                 (?=\\$\\{) |          # a substitution&#xA;                 (?&lt;=\\n)(?=\\s*%) |&#xA;                                     # - don&#39;t consume&#xA;                 (\\\\\\n) |            # an escaped newline&#xA;                 \\Z                  # end of string&#xA;                )&#xA;            \">\n+        <bygroups>\n+          <token type=\"Other\"/>\n+          <token type=\"Operator\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+    <state name=\"ondeftags\">\n+      <rule pattern=\"&lt;%\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=&lt;%)(include|inherit|namespace|page)\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"tag\"/>\n+      </rule>\n+    </state>\n+    <state name=\"tag\">\n+      <rule pattern=\"((?:\\w+)\\s*=)(\\s*)(&#34;.*?&#34;)\">\n+        <bygroups>\n+          <token type=\"NameAttribute\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"LiteralString\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"/?\\s*&gt;\">\n+        <token type=\"CommentPreproc\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+    <state name=\"attr\">\n+      <rule pattern=\"&#34;.*?&#34;\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"&#39;.*?&#39;\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"[^\\s&gt;]+\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "5873f2afc53f0552f8204c35efb82c94d93f5b4f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/mason.xml",
      "status": "added",
      "additions": 89,
      "deletions": 0,
      "changes": 89,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmason.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmason.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmason.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,89 @@\n+<lexer>\n+  <config>\n+    <name>Mason</name>\n+    <alias>mason</alias>\n+    <filename>*.m</filename>\n+    <filename>*.mhtml</filename>\n+    <filename>*.mc</filename>\n+    <filename>*.mi</filename>\n+    <filename>autohandler</filename>\n+    <filename>dhandler</filename>\n+    <mime_type>application/x-mason</mime_type>\n+    <priority>0.1</priority>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"(&lt;%doc&gt;)(.*?)(&lt;/%doc&gt;)(?s)\">\n+        <bygroups>\n+          <token type=\"NameTag\"/>\n+          <token type=\"CommentMultiline\"/>\n+          <token type=\"NameTag\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(&lt;%(?:def|method))(\\s*)(.*?)(&gt;)(.*?)(&lt;/%\\2\\s*&gt;)(?s)\">\n+        <bygroups>\n+          <token type=\"NameTag\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameFunction\"/>\n+          <token type=\"NameTag\"/>\n+          <usingself state=\"root\"/>\n+          <token type=\"NameTag\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(&lt;%\\w+)(.*?)(&gt;)(.*?)(&lt;/%\\2\\s*&gt;)(?s)\">\n+        <bygroups>\n+          <token type=\"NameTag\"/>\n+          <token type=\"NameFunction\"/>\n+          <token type=\"NameTag\"/>\n+          <using lexer=\"Perl\"/>\n+          <token type=\"NameTag\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(&lt;&amp;[^|])(.*?)(,.*?)?(&amp;&gt;)(?s)\">\n+        <bygroups>\n+          <token type=\"NameTag\"/>\n+          <token type=\"NameFunction\"/>\n+          <using lexer=\"Perl\"/>\n+          <token type=\"NameTag\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(&lt;&amp;\\|)(.*?)(,.*?)?(&amp;&gt;)(?s)\">\n+        <bygroups>\n+          <token type=\"NameTag\"/>\n+          <token type=\"NameFunction\"/>\n+          <using lexer=\"Perl\"/>\n+          <token type=\"NameTag\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"&lt;/&amp;&gt;\">\n+        <token type=\"NameTag\"/>\n+      </rule>\n+      <rule pattern=\"(&lt;%!?)(.*?)(%&gt;)(?s)\">\n+        <bygroups>\n+          <token type=\"NameTag\"/>\n+          <using lexer=\"Perl\"/>\n+          <token type=\"NameTag\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?&lt;=^)#[^\\n]*(\\n|\\Z)\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=^)(%)([^\\n]*)(\\n|\\Z)\">\n+        <bygroups>\n+          <token type=\"NameTag\"/>\n+          <using lexer=\"Perl\"/>\n+          <token type=\"Other\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?sx)&#xA;                 (.+?)               # anything, followed by:&#xA;                 (?:&#xA;                  (?&lt;=\\n)(?=[%#]) |  # an eval or comment line&#xA;                  (?=&lt;/?[%&amp;]) |      # a substitution or block or&#xA;                                     # call start or end&#xA;                                     # - don&#39;t consume&#xA;                  (\\\\\\n) |           # an escaped newline&#xA;                  \\Z                 # end of string&#xA;                 )\">\n+        <bygroups>\n+          <using lexer=\"HTML\"/>\n+          <token type=\"Operator\"/>\n+        </bygroups>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "0b8dfb617ff3275afabd920ef205bb8e47e7a2dc",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/mathematica.xml",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmathematica.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmathematica.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmathematica.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -4,10 +4,14 @@\n     <alias>mathematica</alias>\n     <alias>mma</alias>\n     <alias>nb</alias>\n-    <filename>*.nb</filename>\n     <filename>*.cdf</filename>\n-    <filename>*.nbp</filename>\n+    <filename>*.m</filename>\n     <filename>*.ma</filename>\n+    <filename>*.mt</filename>\n+    <filename>*.mx</filename>\n+    <filename>*.nb</filename>\n+    <filename>*.nbp</filename>\n+    <filename>*.wl</filename>\n     <mime_type>application/mathematica</mime_type>\n     <mime_type>application/vnd.wolfram.mathematica</mime_type>\n     <mime_type>application/vnd.wolfram.mathematica.package</mime_type>"
    },
    {
      "sha": "6d03917e52872a113d5b5a981a178d2f859ecec4",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/myghty.xml",
      "status": "added",
      "additions": 77,
      "deletions": 0,
      "changes": 77,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmyghty.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmyghty.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmyghty.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,77 @@\n+<lexer>\n+  <config>\n+    <name>Myghty</name>\n+    <alias>myghty</alias>\n+    <filename>*.myt</filename>\n+    <filename>autodelegate</filename>\n+    <mime_type>application/x-myghty</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"(&lt;%(?:def|method))(\\s*)(.*?)(&gt;)(.*?)(&lt;/%\\2\\s*&gt;)(?s)\">\n+        <bygroups>\n+          <token type=\"NameTag\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameFunction\"/>\n+          <token type=\"NameTag\"/>\n+          <usingself state=\"root\"/>\n+          <token type=\"NameTag\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(&lt;%\\w+)(.*?)(&gt;)(.*?)(&lt;/%\\2\\s*&gt;)(?s)\">\n+        <bygroups>\n+          <token type=\"NameTag\"/>\n+          <token type=\"NameFunction\"/>\n+          <token type=\"NameTag\"/>\n+          <using lexer=\"Python2\"/>\n+          <token type=\"NameTag\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(&lt;&amp;[^|])(.*?)(,.*?)?(&amp;&gt;)\">\n+        <bygroups>\n+          <token type=\"NameTag\"/>\n+          <token type=\"NameFunction\"/>\n+          <using lexer=\"Python2\"/>\n+          <token type=\"NameTag\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(&lt;&amp;\\|)(.*?)(,.*?)?(&amp;&gt;)(?s)\">\n+        <bygroups>\n+          <token type=\"NameTag\"/>\n+          <token type=\"NameFunction\"/>\n+          <using lexer=\"Python2\"/>\n+          <token type=\"NameTag\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"&lt;/&amp;&gt;\">\n+        <token type=\"NameTag\"/>\n+      </rule>\n+      <rule pattern=\"(&lt;%!?)(.*?)(%&gt;)(?s)\">\n+        <bygroups>\n+          <token type=\"NameTag\"/>\n+          <using lexer=\"Python2\"/>\n+          <token type=\"NameTag\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?&lt;=^)#[^\\n]*(\\n|\\Z)\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=^)(%)([^\\n]*)(\\n|\\Z)\">\n+        <bygroups>\n+          <token type=\"NameTag\"/>\n+          <using lexer=\"Python2\"/>\n+          <token type=\"Other\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?sx)&#xA;                 (.+?)               # anything, followed by:&#xA;                 (?:&#xA;                  (?&lt;=\\n)(?=[%#]) |  # an eval or comment line&#xA;                  (?=&lt;/?[%&amp;]) |      # a substitution or block or&#xA;                                     # call start or end&#xA;                                     # - don&#39;t consume&#xA;                  (\\\\\\n) |           # an escaped newline&#xA;                  \\Z                 # end of string&#xA;                 )\">\n+        <bygroups>\n+          <token type=\"Other\"/>\n+          <token type=\"Operator\"/>\n+        </bygroups>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "defe65b3c4155a01d063c587ef9b3b826d9418e2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/nasm.xml",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnasm.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnasm.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnasm.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -4,8 +4,10 @@\n     <alias>nasm</alias>\n     <filename>*.asm</filename>\n     <filename>*.ASM</filename>\n+    <filename>*.nasm</filename>\n     <mime_type>text/x-nasm</mime_type>\n     <case_insensitive>true</case_insensitive>\n+    <priority>1.0</priority> <!-- TASM uses the same file endings, but TASM is not as common as NASM, so we prioritize NASM higher by default. -->\n   </config>\n   <rules>\n     <state name=\"punctuation\">"
    },
    {
      "sha": "46bdf573dbf19056f94197f7e53d72e1b0ac8c76",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/nginx_configuration_file.xml",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnginx_configuration_file.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnginx_configuration_file.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnginx_configuration_file.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/nginx.xml"
    },
    {
      "sha": "bfdd6156ab84684e471145bf3e32a40256cfe869",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/nim.xml",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnim.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnim.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fnim.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -132,6 +132,10 @@\n       <rule pattern=\"\\.\\.|\\.|,|\\[\\.|\\.\\]|\\{\\.|\\.\\}|\\(\\.|\\.\\)|\\{|\\}|\\(|\\)|:|\\^|`|;\">\n         <token type=\"Punctuation\"/>\n       </rule>\n+      <rule pattern=\"(?:[\\w]+)&#34;&#34;&#34;\">\n+        <token type=\"LiteralString\"/>\n+        <push state=\"tdqs\"/>\n+      </rule>\n       <rule pattern=\"(?:[\\w]+)&#34;\">\n         <token type=\"LiteralString\"/>\n         <push state=\"rdqs\"/>"
    },
    {
      "sha": "12af64b9df70dc0d45462b5f8d2837df86d21ddb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/objectpascal.xml",
      "status": "added",
      "additions": 145,
      "deletions": 0,
      "changes": 145,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fobjectpascal.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fobjectpascal.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fobjectpascal.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,145 @@\n+<lexer>\n+  <config>\n+    <name>ObjectPascal</name>\n+    <alias>objectpascal</alias>\n+    <filename>*.pas</filename>\n+    <filename>*.pp</filename>\n+    <filename>*.inc</filename>\n+    <filename>*.dpr</filename>\n+    <filename>*.dpk</filename>\n+    <filename>*.lpr</filename>\n+    <filename>*.lpk</filename>\n+    <mime_type>text/x-pascal</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <!-- TextWhitespace -->\n+      <rule pattern=\"[^\\S\\n]+\">\n+        <token type=\"TextWhitespace\" />\n+      </rule>\n+      <rule pattern=\"\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <!-- Magic Number (BOM) -->\n+      <rule pattern=\"[^\\u0000-\\u007F]+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <!-- Compiler Directive -->\n+      <rule pattern=\"\\{[$].*?\\}|\\{[-](NOD|EXT|OBJ).*?\\}|\\([*][$].*?[*]\\)\">\n+        <token type=\"CommentPreproc\" />\n+      </rule>\n+      <!-- Comment Single -->\n+      <rule pattern=\"(//.*?)(\\n)\">\n+        <bygroups>\n+          <token type=\"CommentSingle\" />\n+          <token type=\"TextWhitespace\" />\n+        </bygroups>\n+      </rule>\n+      <!-- Comment Multiline Block -->\n+      <rule pattern=\"\\([*](.|\\n)*?[*]\\)\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <!-- Comment Multiline Source Documentation -->\n+      <rule pattern=\"[{](.|\\n)*?[}]\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <!-- Range Indicator -->\n+      <rule pattern=\"(?i:(\\.\\.))\">\n+        <token type=\"Operator\" />\n+      </rule>\n+      <!-- Control Character -->\n+      <rule pattern=\"[\\#][0-9a-fA-F]*|[0-9]+[xX][0-9a-fA-F]*\">\n+        <token type=\"LiteralStringEscape\" />\n+      </rule>\n+      <!-- Numbers -->\n+      <rule pattern=\"[\\$][0-9a-fA-F]*[xX][0-9a-fA-F]*|[\\$][0-9a-fA-F]*|([0-9]+[0-9a-fA-F]+(?=[hH]))\">\n+        <token type=\"LiteralNumberHex\" />\n+      </rule>\n+      <rule pattern=\"[0-9]+(\\&#39;[0-9]+)*\\.[0-9]+(\\&#39;[0-9]+)*[eE][+-]?[0-9]+(\\&#39;[0-9]+)*|[0-9]+(\\&#39;[0-9]+)*\\.[0-9]+(\\&#39;[0-9]+)*|\\d+[eE][+-]?[0-9]+\">\n+        <token type=\"LiteralNumberFloat\" />\n+      </rule>\n+      <rule pattern=\"0|[1-9][0-9_]*?\">\n+        <token type=\"LiteralNumberInteger\" />\n+      </rule>\n+      <!-- Multiline string Literal -->\n+      <rule pattern=\"(&#39;&#39;&#39;\\s*\\n)(.|\\n)*?(&#39;&#39;&#39;)(?=\\s*&#59;)\">\n+        <token type=\"LiteralString\" />\n+      </rule>\n+      <!-- string -->\n+      <rule pattern=\"(?i:(\\')).*?(?i:(\\'))\">\n+        <token type=\"LiteralString\" />\n+      </rule>\n+      <!-- string (Special case for Delphi Assembler)-->\n+      <rule pattern=\"(?i:(&#34;)).*?(?i:(&#34;))\">\n+        <token type=\"LiteralString\" />\n+      </rule>\n+      <!-- Simple Types -->\n+      <rule pattern=\"\\b(?!=\\.)(?i:(NativeInt|NativeUInt|LongInt|LongWord|Integer|Int64|Cardinal|UInt64|ShortInt|SmallInt|FixedInt|Byte|Word|FixedUInt|Int8|Int16|Int32|UInt8|UInt16|UInt32|Real48|Single|Double|Real|Extended|Comp|Currency|Char|AnsiChar|WideChar|UCS2Char|UCS4Char|string|ShortString|AnsiString|UnicodeString|WideString|RawByteString|UTF8String|File|TextFile|Text|Boolean|ByteBool|WordBool|LongBool|Pointer|Variant|OleVariant))\\b(?![&#60;\\/(])\">\n+        <token type=\"KeywordType\" />\n+      </rule>\n+      <!-- T Types -->\n+      <rule pattern=\"\\b(?!=\\.)(?i:(TSingleRec|TDoubleRec|TExtended80Rec|TByteArray|TTextBuf|TVarRec|TWordArray))\\b(?![&#60;\\/(])\">\n+        <token type=\"KeywordType\" />\n+      </rule>\n+      <!-- Pointer Types -->\n+      <rule pattern=\"\\b(?!=\\.)(?i:(PChar|PAnsiChar|PWideChar|PRawByteString|PUnicodeString|PString|PAnsiString|PShortString|PTextBuf|PWideString|PByte|PShortInt|PWord|PSmallInt|PCardinal|PLongWord|PFixedUInt|PLongint|PFixedInt|PUInt64|PInt64|PNativeUInt|PNativeInt|PByteArray|PCurrency|PDouble|PExtended|PSingle|PInteger|POleVariant|PVarRec|PVariant|PWordArray|PBoolean|PWordBool|PLongBool|PPointer))\\b(?![&#60;\\/(])\">\n+        <token type=\"KeywordType\" />\n+      </rule>\n+      <!-- More Types -->\n+      <rule pattern=\"\\b(?!=\\.)(?i:(IntPtr|UIntPtr|Float32|Float64|_ShortStr|_ShortString|_AnsiStr|_AnsiString|_AnsiChr|_AnsiChar|_WideStr|_WideString|_PAnsiChr|_PAnsiChar|UTF8Char|_AnsiChar|PUTF8Char|_PAnsiChar|MarshaledString|MarshaledAString))\\b(?![&#60;\\/(])\">\n+        <token type=\"KeywordType\" />\n+      </rule>\n+      <!-- Result -->\n+      <rule pattern=\"\\b(?!=\\.)(?i:(Result))\\b(?![&#60;\\/(])\">\n+        <token type=\"GenericEmph\" />\n+      </rule>      \n+      <!-- Result Constants -->\n+      <rule pattern=\"\\b(?!=\\.)(?i:(True|False))\\b(?![&#60;\\/(])\">\n+        <token type=\"NameConstant\" />\n+      </rule>\n+      <!-- Operator (Assign) -->\n+      <rule pattern=\"[(\\:\\=)]\">\n+        <token type=\"Operator\" />\n+      </rule>      \n+      <!-- Operators (Arithmetic, Unary Arithmetic, String, Pointer, Set, Relational, Address) -->\n+      <rule pattern=\"[\\+\\-\\*\\/\\^&#60;&#62;\\=\\@]\">\n+        <token type=\"Operator\" />\n+      </rule>\n+      <!-- Operators (Arithmetic, Boolean, Logical (Bitwise), Set) -->\n+      <rule pattern=\"\\b(?i:([div][mod][not][and][or][xor][shl][shr][in]))\\b\">\n+        <token type=\"OperatorWord\" />\n+      </rule>\n+      <!-- Special Symbols (Escape, Literal Chr, Hex Value, Binary Numeral Expression Indicator) -->\n+      <rule pattern=\"[&#38;\\#\\$\\%]\">\n+        <token type=\"Operator\" />\n+      </rule>\n+      <!-- Special Symbols (Punctuation) -->\n+      <rule pattern=\"[\\(\\)\\,\\.\\:\\;\\[\\]]\">\n+        <token type=\"Punctuation\" />\n+      </rule>\n+      <!-- Reserved Words -->\n+      <rule pattern=\"\\b(?!=\\.)(?i:(and|end|interface|record|var|array|except|is|repeat|while|as|exports|label|resourcestring|with|asm|file|library|set|xor|begin|finalization|mod|shl|case|finally|nil|shr|class|for|not|string|const|function|object|then|constructor|goto|of|threadvar|destructor|if|or|to|dispinterface|implementation|packed|try|div|in|procedure|type|do|inherited|program|unit|downto|initialization|property|until|else|inline|raise|uses))\\b(?![&#60;\\/(])\">\n+        <token type=\"KeywordReserved\" />\n+      </rule>\n+      <!-- Directives -->\n+      <rule pattern=\"\\b(?!=\\.)(?i:(absolute|export|name|public|stdcall|abstract|external|published|strict|assembler|nodefault|read|stored|automated|final|operator|readonly|unsafe|cdecl|forward|out|reference|varargs|contains|helper|overload|register|virtual|default|implements|override|reintroduce|winapi|delayed|index|package|requires|write|deprecated|inline|pascal|writeonly|dispid|library|platform|safecall|dynamic|local|private|sealed|experimental|message|protected|static))\\b(?![&#60;\\/(])\">\n+        <token type=\"Keyword\" />\n+      </rule>\n+      <!-- Directives obsolete -->\n+      <rule pattern=\"\\b(?!=\\.)(?i:(near|far|resident))\\b(?![&#60;\\/(])\">\n+        <token type=\"Keyword\" />\n+      </rule>\n+      <!-- Constant Expressions -->\n+      <rule pattern=\"\\b(?!=\\.)(?i:(Abs|High|Low|Pred|Succ|Chr|Length|Odd|Round|Swap|Hi|Lo|Ord|SizeOf|Trunc))\\b(?![&#60;\\/(])\">\n+        <token type=\"KeywordConstant\" />\n+      </rule>\n+      <!-- everything else -->\n+      <rule pattern=\"([^\\W\\d]|\\$)[\\w$]*\">\n+        <token type=\"Text\" />\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>"
    },
    {
      "sha": "b9842638535ebf998f8ca795949a9458dd656737",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/odin.xml",
      "status": "added",
      "additions": 113,
      "deletions": 0,
      "changes": 113,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fodin.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fodin.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fodin.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,113 @@\n+<lexer>\n+  <config>\n+    <name>Odin</name>\n+    <alias>odin</alias>\n+    <filename>*.odin</filename>\n+    <mime_type>text/odin</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"NestedComment\">\n+        <rule pattern = \"/[*]\">\n+            <token type = \"CommentMultiline\"/>\n+            <push/>\n+        </rule>\n+        <rule pattern = \"[*]/\">\n+            <token type = \"CommentMultiline\"/>\n+            <pop depth = \"1\"/>\n+        </rule>\n+        <rule pattern = \"[\\s\\S]\">\n+            <token type = \"CommentMultiline\"/>\n+        </rule>\n+    </state>\n+    <state name=\"root\">\n+        <rule pattern = \"\\n\">\n+            <token type = \"TextWhitespace\"/>\n+        </rule>\n+        <rule pattern = \"\\s+\">\n+            <token type = \"TextWhitespace\"/>\n+        </rule>\n+        <rule pattern = \"//.*?\\n\">\n+            <token type = \"CommentSingle\"/>\n+        </rule>\n+        <rule pattern = \"/[*]\">\n+            <token type = \"CommentMultiline\"/>\n+            <push state=\"NestedComment\"/>\n+        </rule>\n+        <rule pattern = \"(import|package)\\b\">\n+            <token type = \"KeywordNamespace\"/>\n+        </rule>\n+        <rule pattern = \"(proc|struct|map|enum|union)\\b\">\n+            <token type = \"KeywordDeclaration\"/>\n+        </rule>\n+        <rule pattern = \"(asm|auto_cast|bit_set|break|case|cast|context|continue|defer|distinct|do|dynamic|else|enum|fallthrough|for|foreign|if|import|in|map|not_in|or_else|or_return|package|proc|return|struct|switch|transmute|typeid|union|using|when|where|panic|real|imag|len|cap|append|copy|delete|new|make|clearpanic|real|imag|len|cap|append|copy|delete|new|make|clear)\\b\">\n+            <token type = \"Keyword\"/>\n+        </rule>\n+        <rule pattern = \"(true|false|nil)\\b\">\n+            <token type = \"KeywordConstant\"/>\n+        </rule>\n+        <rule pattern = \"(uint|u8|u16|u32|u64|int|i8|i16|i32|i64|i16le|i32le|i64le|i128le|u16le|u32le|u64le|u128le|i16be|i32be|i64be|i128be|u16be|u32be|u64be|u128be|f16|f32|f64|complex32|complex64|complex128|quaternion64|quaternion128|quaternion256|byte|rune|string|cstring|typeid|any|bool|b8|b16|b32|b64|uintptr|rawptr)\\b\">\n+            <token type = \"KeywordType\"/>\n+        </rule>\n+        <rule pattern = \"\\#[a-zA-Z_]+\\b\">\n+            <token type = \"NameDecorator\"/>\n+        </rule>\n+        <rule pattern = \"\\@(\\([a-zA-Z_]+\\b\\s*.*\\)|\\(?[a-zA-Z_]+\\)?)\">\n+            <token type = \"NameAttribute\"/>\n+        </rule>\n+        <rule pattern=\"[a-zA-Z_]\\w*\">\n+            <token type=\"Name\"/>\n+        </rule>\n+        <rule pattern=\"([a-zA-Z_]\\w*)(\\s*)(\\()\">\n+            <token type=\"NameFunction\"/>\n+        </rule>\n+        <rule pattern=\"[^\\W\\d]\\w*\">\n+            <token type=\"NameOther\"/>\n+        </rule>\n+        <rule pattern = \"\\d+i\">\n+            <token type = \"LiteralNumber\"/>\n+        </rule>\n+        <rule pattern = \"\\d+\\.\\d*([Ee][-+]\\d+)?i\">\n+            <token type = \"LiteralNumber\"/>\n+        </rule>\n+        <rule pattern = \"\\.\\d+([Ee][-+]\\d+)?i\">\n+            <token type = \"LiteralNumber\"/>\n+        </rule>\n+        <rule pattern = \"\\d+[Ee][-+]\\d+i\">\n+            <token type = \"LiteralNumber\"/>\n+        </rule>\n+        <rule pattern = \"\\d+(\\.\\d+[eE][+\\-]?\\d+|\\.\\d*|[eE][+\\-]?\\d+)\">\n+            <token type = \"LiteralNumberFloat\"/>\n+        </rule>\n+        <rule pattern = \"\\.\\d+([eE][+\\-]?\\d+)?\">\n+            <token type = \"LiteralNumberFloat\"/>\n+        </rule>\n+        <rule pattern = \"0o[0-7]+\">\n+            <token type = \"LiteralNumberOct\"/>\n+        </rule>\n+        <rule pattern = \"0x[0-9a-fA-F_]+\">\n+            <token type = \"LiteralNumberHex\"/>\n+        </rule>\n+        <rule pattern = \"0b[01_]+\">\n+            <token type = \"LiteralNumberBin\"/>\n+        </rule>\n+        <rule pattern = \"(0|[1-9][0-9_]*)\">\n+            <token type = \"LiteralNumberInteger\"/>\n+        </rule>\n+        <rule pattern = \"'(\\\\['&quot;\\\\abfnrtv]|\\\\x[0-9a-fA-F]{2}|\\\\[0-7]{1,3}|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}|[^\\\\])'\" >\n+            <token type = \"LiteralStringChar\"/>\n+        </rule>\n+        <rule pattern = \"(`)([^`]*)(`)\" >\n+            <token type = \"LiteralString\"/>\n+        </rule>\n+        <rule pattern = \"&quot;(\\\\\\\\|\\\\&quot;|[^&quot;])*&quot;\" >\n+            <token type = \"LiteralString\"/>\n+        </rule>\n+        <rule pattern = \"(&lt;&lt;=|&gt;&gt;=|&lt;&lt;|&gt;&gt;|&lt;=|&gt;=|&amp;=|&amp;|\\+=|-=|\\*=|/=|%=|\\||\\^|=|&amp;&amp;|\\|\\||--|-&gt;|=|==|!=|:=|:|::|\\.\\.\\&lt;|\\.\\.=|[&lt;&gt;+\\-*/%&amp;])\" >\n+            <token type = \"Operator\"/>\n+        </rule>\n+        <rule pattern=\"[{}()\\[\\],.;]\">\n+            <token type=\"Punctuation\"/>\n+        </rule>\n+    </state>  \n+  </rules>\n+</lexer>"
    },
    {
      "sha": "04a80f3ce2759ef68281df7d2e0581713574ad16",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/openedge_abl.xml",
      "status": "added",
      "additions": 101,
      "deletions": 0,
      "changes": 101,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fopenedge_abl.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fopenedge_abl.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fopenedge_abl.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,101 @@\n+<lexer>\n+  <config>\n+    <name>OpenEdge ABL</name>\n+    <alias>openedge</alias>\n+    <alias>abl</alias>\n+    <alias>progress</alias>\n+    <alias>openedgeabl</alias>\n+    <filename>*.p</filename>\n+    <filename>*.cls</filename>\n+    <filename>*.w</filename>\n+    <filename>*.i</filename>\n+    <mime_type>text/x-openedge</mime_type>\n+    <mime_type>application/x-openedge</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"/\\*\">\n+        <token type=\"CommentMultiline\"/>\n+        <push state=\"comment\"/>\n+      </rule>\n+      <rule pattern=\"//.*?$\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"\\{\">\n+        <token type=\"CommentPreproc\"/>\n+        <push state=\"preprocessor\"/>\n+      </rule>\n+      <rule pattern=\"\\s*&amp;.*\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"0[xX][0-9a-fA-F]+[LlUu]*\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"(?i)(DEFINE|DEF|DEFI|DEFIN)\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"(?i)(^|(?&lt;=[^\\w\\-]))(CHARACTER|CHAR|CHARA|CHARAC|CHARACT|CHARACTE|COM-HANDLE|DATE|DATETIME|DATETIME-TZ|DECIMAL|DEC|DECI|DECIM|DECIMA|HANDLE|INT64|INTEGER|INT|INTE|INTEG|INTEGE|LOGICAL|LONGCHAR|MEMPTR|RAW|RECID|ROWID)\\s*($|(?=[^\\w\\-]))\">\n+        <token type=\"KeywordType\"/>\n+      </rule>\n+      <rule pattern=\"(?i)(^|(?&lt;=[^\\w\\-]))(XML-SUPPRESS-NAMESPACE-PROCESSING|SERVER-CONNECTION-BOUND-REQUEST|SYMMETRIC-ENCRYPTION-ALGORITHM|SUPPRESS-NAMESPACE-PROCESSING|WRITE-PROCESSING-INSTRUCTION|XML-STRICT-ENTITY-RESOLUTION|GET-INDEX-BY-NAMESPACE-NAME|GET-VALUE-BY-NAMESPACE-NAME|NONAMESPACE-SCHEMA-LOCATION|VIEW-FIRST-COLUMN-ON-REOPEN|XML-ENTITY-EXPANSION-LIMIT|GET-TYPE-BY-NAMESPACE-NAME|LOGIN-EXPIRATION-TIMESTAMP|DEFINE-USER-EVENT-MANAGER|PERSISTENT-CACHE-DISABLED|SERVER-CONNECTION-CONTEXT|GET-CALLBACK-PROC-CONTEXT|CREATE-RESULT-LIST-ENTRY|DELETE-RESULT-LIST-ENTRY|DATA-SOURCE-COMPLETE-MAP|INITIALIZE-DOCUMENT-TYPE|STRICT-ENTITY-RESOLUTION|SYMMETRIC-ENCRYPTION-KEY|SET-EVENT-MANAGER-OPTION|WORK-AREA-HEIGHT-PIXELS|BLOCK-ITERATION-DISPLAY|SYMMETRIC-ENCRYPTION-IV|SERVER-CONNECTION-BOUND|GRID-UNIT-HEIGHT-PIXELS|EVENT-PROCEDURE-CONTEXT|MIN-COLUMN-WIDTH-PIXELS|REMOVE-EVENTS-PROCEDURE|CREATE-LIKE-SEQUENTIAL|WORK-AREA-WIDTH-PIXELS|PRINTER-CONTROL-HANDLE|GET-CALLBACK-PROC-NAME|REMOVE-SUPER-PROCEDURE|ALLOW-COLUMN-SEARCHING|GRID-FACTOR-HORIZONTAL|GET-LOCALNAME-BY-INDEX|REPLACE-SELECTION-TEXT|RETURN-VALUE-DATA-TYPE|INCREMENT-EXCLUSIVE-ID|GRID-UNIT-HEIGHT-CHARS|LOAD-IMAGE-INSENSITIVE|SET-OUTPUT-DESTINATION|GRID-UNIT-WIDTH-PIXELS|MIN-COLUMN-WIDTH-CHARS|MIN-COLUMN-WIDTH-PIXEL|ENTITY-EXPANSION-LIMIT|GRID-UNIT-HEIGHT-PIXEL|NEEDS-APPSERVER-PROMPT|SCROLL-TO-SELECTED-ROW|NO-SEPARATE-CONNECTION|GET-TEXT-HEIGHT-PIXELS|GRID-UNIT-WIDTH-CHARS|MIN-COLUMN-WIDTH-PIXE|NO-SCROLLBAR-VERTICAL|SCROLLED-ROW-POSITION|GET-TEXT-HEIGHT-PIXEL|ENCRYPT-AUDIT-MAC-KEY|SCROLL-TO-CURRENT-ROW|MULTITASKING-INTERVAL|GET-TEXT-WIDTH-PIXELS|CAN-DO-DOMAIN-SUPPORT|GET-TEXT-HEIGHT-CHARS|GRID-UNIT-WIDTH-PIXEL|GRID-UNIT-HEIGHT-PIXE|SERVER-OPERATING-MODE|CREATE-NODE-NAMESPACE|MIN-COLUMN-WIDTH-CHAR|DISABLE-LOAD-TRIGGERS|LOCATOR-COLUMN-NUMBER|CURRENT-RESPONSE-INFO|DISABLE-DUMP-TRIGGERS|DESELECT-SELECTED-ROW|GRID-FACTOR-HORIZONTA|VIRTUAL-HEIGHT-PIXELS|AUTHENTICATION-FAILED|DEFAULT-BUFFER-HANDLE|BORDER-BOTTOM-PIXELS|FIND-PREV-OCCURRENCE|DELETE-SELECTED-ROWS|GET-TEXT-WIDTH-PIXEL|SET-REPOSITIONED-ROW|GRID-UNIT-WIDTH-PIXE|NUM-SELECTED-WIDGETS|VIRTUAL-HEIGHT-CHARS|VIRTUAL-HEIGHT-PIXEL|SERVER-CONNECTION-ID|GRID-UNIT-WIDTH-CHAR|NODE-VALUE-TO-MEMPTR|ASYNC-REQUEST-HANDLE|VIRTUAL-WIDTH-PIXELS|GET-TEXT-WIDTH-CHARS|GRID-FACTOR-HORIZONT|GRID-FACTOR-VERTICAL|NO-CONVERT-3D-COLORS|CLIENT-CONNECTION-ID|GET-TEXT-HEIGHT-PIXE|REFRESH-AUDIT-POLICY|MOVE-BEFORE-TAB-ITEM|SCROLLED-ROW-POSITIO|KEEP-CONNECTION-OPEN|DATA-SOURCE-MODIFIED|GET-REPOSITIONED-ROW|SCROLLBAR-HORIZONTAL|GET-TEXT-HEIGHT-CHAR|GRID-UNIT-HEIGHT-CHA|MIN-COLUMN-WIDTH-PIX|CURRENT-ROW-MODIFIED|CURRENT-REQUEST-INFO|MIN-COLUMN-WIDTH-CHA|DESELECT-FOCUSED-ROW|ADD-EVENTS-PROCEDURE|TRANS-INIT-PROCEDURE|MARGIN-HEIGHT-PIXELS|GRID-UNIT-HEIGHT-PIX|MEMPTR-TO-NODE-VALUE|FIND-NEXT-OCCURRENCE|FOCUSED-ROW-SELECTED|FIRST-ASYNCH-REQUEST|CURRENT-ENVIRONMENT|ADD-SUPER-PROCEDURE|FIND-CASE-SENSITIVE|GRID-UNIT-HEIGHT-PI|MARGIN-HEIGHT-PIXEL|MARGIN-HEIGHT-CHARS|MIN-COLUMN-WIDTH-CH|COPY-SAX-ATTRIBUTES|GET-SELECTED-WIDGET|VIRTUAL-WIDTH-CHARS|VALIDATE-EXPRESSION|MIN-COLUMN-WIDTH-PI|LOCATOR-LINE-NUMBER|BORDER-RIGHT-PIXELS|RETURN-TO-START-DIR|GET-TEXT-HEIGHT-CHA|SCROLLBAR-HORIZONTA|GRID-UNIT-HEIGHT-CH|SCROLLED-ROW-POSITI|REPOSITION-TO-ROWID|MOVE-AFTER-TAB-ITEM|REPOSITION-BACKWARD|ADD-SCHEMA-LOCATION|MOVE-BEFORE-TAB-ITE|LIST-PROPERTY-NAMES|MARGIN-WIDTH-PIXELS|WRITE-EMPTY-ELEMENT|GET-TEXT-HEIGHT-PIX|PROCEDURE-CALL-TYPE|GENERATE-RANDOM-KEY|SKIP-DELETED-RECORD|LAST-ASYNCH-REQUEST|GRID-FACTOR-VERTICA|SEPARATE-CONNECTION|GET-TEXT-WIDTH-CHAR|GRID-UNIT-WIDTH-CHA|VIRTUAL-WIDTH-PIXEL|ASYNC-REQUEST-COUNT|AUDIT-EVENT-CONTEXT|BUFFER-PARTITION-ID|BORDER-BOTTOM-PIXEL|VIRTUAL-HEIGHT-CHAR|GRID-FACTOR-HORIZON|GET-TEXT-WIDTH-PIXE|NUM-SELECTED-WIDGET|GRID-UNIT-WIDTH-PIX|VIRTUAL-HEIGHT-PIXE|DELETE-SELECTED-ROW|KEEP-SECURITY-CACHE|BORDER-BOTTOM-CHARS|NUM-VISIBLE-COLUMNS|DOMAIN-DESCRIPTION|GRID-FACTOR-HORIZO|PBE-HASH-ALGORITHM|GET-VALUE-BY-QNAME|GET-VALUE-BY-INDEX|GET-UNSIGNED-SHORT|NUM-SELECTED-WIDGE|BORDER-BOTTOM-PIXE|NUM-LOCKED-COLUMNS|GET-TEXT-WIDTH-PIX|DELETE-CURRENT-ROW|GET-TEXT-WIDTH-CHA|GRID-FACTOR-VERTIC|NO-INHERIT-FGCOLOR|NO-INHERIT-BGCOLOR|VIRTUAL-WIDTH-PIXE|GET-TEXT-HEIGHT-PI|SYSTEM-ALERT-BOXES|MOVE-BEFORE-TAB-IT|GRID-UNIT-HEIGHT-C|APPSERVER-PASSWORD|REPOSITION-FORWARD|MOVE-AFTER-TAB-ITE|EXCLUSIVE-WEB-USER|FETCH-SELECTED-ROW|BORDER-LEFT-PIXELS|RETURN-TO-START-DI|TEMP-TABLE-PREPARE|GET-TEXT-HEIGHT-CH|MIN-COLUMN-WIDTH-P|CURRENT-RESULT-ROW|GRID-UNIT-HEIGHT-P|VIRTUAL-WIDTH-CHAR|MIN-COLUMN-WIDTH-C|CURRENT-ENVIRONMEN|MARGIN-WIDTH-PIXEL|BORDER-RIGHT-CHARS|MARGIN-WIDTH-CHARS|MARGIN-HEIGHT-PIXE|SAX-WRITE-COMPLETE|MARGIN-HEIGHT-CHAR|BORDER-RIGHT-PIXEL|GET-SELECTED-WIDGE|GRID-UNIT-WIDTH-CH|WRITE-DATA-ELEMENT|SCROLLBAR-HORIZONT|VALIDATION-ENABLED|LOCAL-VERSION-INFO|SCROLLBAR-VERTICAL|SCROLLED-ROW-POSIT|LOAD-MOUSE-POINTER|FULL-HEIGHT-PIXELS|FUNCTION-CALL-TYPE|SELECT-FOCUSED-ROW|CLIENT-WORKSTATION|GET-ATTR-CALL-TYPE|CLEAR-APPL-CONTEXT|SEND-SQL-STATEMENT|GET-ATTRIBUTE-NODE|VIRTUAL-HEIGHT-CHA|GET-QNAME-BY-INDEX|GET-CGI-LONG-VALUE|WRITE-EXTERNAL-DTD|LABELS-HAVE-COLONS|GRID-UNIT-WIDTH-PI|SET-ATTR-CALL-TYPE|SET-ATTRIBUTE-NODE|KEEP-FRAME-Z-ORDER|GET-INDEX-BY-QNAME|INDEXED-REPOSITION|VIRTUAL-HEIGHT-PIX|BY-VARIANT-POINTER|LOCATOR-SYSTEM-ID|VIRTUAL-WIDTH-PIX|NUM-SELECTED-WIDG|NUM-SELECTED-ROWS|NUM-LOCKED-COLUMN|NUM-DROPPED-FILES|HTML-HEADER-BEGIN|SUPPRESS-WARNINGS|BEGIN-EVENT-GROUP|IMAGE-INSENSITIVE|SYMMETRIC-SUPPORT|PBE-HASH-ALGORITH|NO-INHERIT-FGCOLO|BORDER-BOTTOM-PIX|IMAGE-SIZE-PIXELS|IMMEDIATE-DISPLAY|PIXELS-PER-COLUMN|SET-POINTER-VALUE|INDEX-INFORMATION|SYSTEM-ALERT-BOXE|ERROR-STACK-TRACE|MOVE-BEFORE-TAB-I|DEFAULT-EXTENSION|MOVE-AFTER-TAB-IT|GRID-UNIT-WIDTH-P|MIN-HEIGHT-PIXELS|DECLARE-NAMESPACE|GRID-UNIT-WIDTH-C|MESSAGE-AREA-FONT|AVAILABLE-FORMATS|PUT-UNSIGNED-LONG|SET-CURRENT-VALUE|MAX-HEIGHT-PIXELS|MARGIN-WIDTH-PIXE|RCODE-INFORMATION|MARGIN-WIDTH-CHAR|GRID-UNIT-HEIGHT-|BORDER-LEFT-CHARS|MARGIN-HEIGHT-PIX|GRID-FACTOR-VERTI|REPOSITION-TO-ROW|MARGIN-HEIGHT-CHA|LOCK-REGISTRATION|DATA-SOURCE-ROWID|ALLOW-REPLICATION|BORDER-LEFT-PIXEL|LOCATOR-PUBLIC-ID|LOAD-MOUSE-POINTE|DATA-ENTRY-RETURN|GRID-FACTOR-HORIZ|FULL-HEIGHT-CHARS|FULL-HEIGHT-PIXEL|SEPARATOR-FGCOLOR|SIDE-LABEL-HANDLE|BORDER-TOP-PIXELS|FULL-WIDTH-PIXELS|CURRENT-ITERATION|CURRENT-ENVIRONME|GENERATE-PBE-SALT|ROW-HEIGHT-PIXELS|BORDER-RIGHT-CHAR|VIRTUAL-HEIGHT-CH|CLEAR-SORT-ARROWS|GET-BROWSE-COLUMN|GET-BUFFER-HANDLE|SAX-UNINITIALIZED|SAX-WRITE-CONTENT|SAX-WRITE-ELEMENT|GET-UNSIGNED-LONG|BORDER-RIGHT-PIXE|CONVERT-TO-OFFSET|GET-TYPE-BY-QNAME|CONVERT-3D-COLORS|VIRTUAL-HEIGHT-PI|ATTACHED-PAIRLIST|GET-TYPE-BY-INDEX|GET-TEXT-WIDTH-PI|KEEP-FRAME-Z-ORDE|CONTEXT-HELP-FILE|GET-POINTER-VALUE|GET-TEXT-WIDTH-CH|GET-SELECTED-WIDG|VIRTUAL-WIDTH-CHA|SCROLLED-ROW-POSI|SCROLLBAR-HORIZON|GET-TEXT-HEIGHT-C|SCROLLBAR-VERTICA|GET-TEXT-HEIGHT-P|BORDER-RIGHT-CHA|CREATE-TEST-FILE|SCROLLBAR-VERTIC|HTML-END-OF-LINE|APPL-ALERT-BOXES|APPSERVER-USERID|VIRTUAL-WIDTH-PI|NUM-SELECTED-WID|DISABLE-AUTO-ZAP|COLUMN-READ-ONLY|COLUMN-RESIZABLE|COLUMN-SCROLLING|GET-TEXT-HEIGHT-|STORED-PROCEDURE|IS-PARAMETER-SET|SOURCE-PROCEDURE|SCROLLED-ROW-POS|SCROLLBAR-HORIZO|NUM-LOCKED-COLUM|HTML-FRAME-BEGIN|VIRTUAL-WIDTH-CH|GET-TEXT-WIDTH-C|DROP-FILE-NOTIFY|GET-SELECTED-WID|SUPPRESS-WARNING|DYNAMIC-FUNCTION|HTML-TITLE-BEGIN|NO-JOIN-BY-SQLDB|PBE-HASH-ALGORIT|BORDER-TOP-CHARS|IMAGE-SIZE-CHARS|KEEP-FRAME-Z-ORD|GET-TEXT-WIDTH-P|CODEPAGE-CONVERT|BORDER-BOTTOM-PI|VIRTUAL-HEIGHT-P|CODEBASE-LOCATOR|IMAGE-SIZE-PIXEL|CONVERT-TO-OFFSE|NO-INHERIT-FGCOL|DELETE-CHARACTER|NO-CURRENT-VALUE|NO-AUTO-VALIDATE|EMPTY-TEMP-TABLE|NO-ARRAY-MESSAGE|GET-ERROR-COLUMN|GET-DROPPED-FILE|DELETE PROCEDURE|GET-URI-BY-INDEX|PIXELS-PER-COLUM|BORDER-RIGHT-PIX|IMPORT-PRINCIPAL|NAMESPACE-PREFIX|SAX-PARSER-ERROR|GET-CONFIG-VALUE|SYSTEM-ALERT-BOX|CLIENT-PRINCIPAL|SET-INPUT-SOURCE|DEFAULT-EXTENSIO|CLEAR-SORT-ARROW|MOVE-BEFORE-TAB-|MARGIN-HEIGHT-PI|TARGET-PROCEDURE|MOVE-AFTER-TAB-I|VIRTUAL-HEIGHT-C|WINDOW-MAXIMIZED|INTERNAL-ENTRIES|GENERATE-PBE-KEY|MIN-WIDTH-PIXELS|EXPORT-PRINCIPAL|CURRENT-ENVIRONM|INSERT-ATTRIBUTE|SUPER-PROCEDURES|STATUS-AREA-FONT|WRITE-ENTITY-REF|BORDER-TOP-PIXEL|FULL-WIDTH-PIXEL|MIN-HEIGHT-PIXEL|MIN-HEIGHT-CHARS|CURRENT-LANGUAGE|FULL-WIDTH-CHARS|PROC-TEXT-BUFFER|FILE-CREATE-DATE|FILE-CREATE-TIME|LIST-QUERY-ATTRS|GRID-FACTOR-HORI|FULL-HEIGHT-PIXE|FILE-INFORMATION|ROW-HEIGHT-CHARS|SERIALIZE-HIDDEN|FULL-HEIGHT-CHAR|GRID-UNIT-WIDTH-|LITERAL-QUESTION|TRANSACTION-MODE|PUBLISHED-EVENTS|MAX-WIDTH-PIXELS|ADD-COLUMNS-FROM|DATA-ENTRY-RETUR|SIDE-LABEL-HANDL|START-ROW-RESIZE|LOAD-MOUSE-POINT|FIND-WRAP-AROUND|MAX-HEIGHT-PIXEL|MAX-HEIGHT-CHARS|VALIDATE-MESSAGE|CHARACTER_LENGTH|WINDOW-MINIMIZED|BORDER-LEFT-PIXE|UPDATE-ATTRIBUTE|HTML-END-OF-PAGE|SET-APPL-CONTEXT|RCODE-INFORMATIO|MANUAL-HIGHLIGHT|WRITE-CHARACTERS|MARGIN-HEIGHT-CH|MARGIN-WIDTH-PIX|MARGIN-WIDTH-CHA|AUTO-SYNCHRONIZE|BORDER-LEFT-CHAR|GRID-FACTOR-VERT|GRID-UNIT-HEIGHT|MARGIN-HEIGHT-P|INHERIT-FGCOLOR|REPOSITION-MODE|BORDER-LEFT-PIX|BORDER-LEFT-CHA|APPL-CONTEXT-ID|REGISTER-DOMAIN|MARGIN-WIDTH-CH|USE-WIDGET-POOL|FORM-LONG-INPUT|ADD-LIKE-COLUMN|MARGIN-WIDTH-PI|GRID-FACTOR-VER|MARGIN-HEIGHT-C|LOG-AUDIT-EVENT|RCODE-INFORMATI|ADD-INDEX-FIELD|SIDE-LABEL-HAND|MAX-HEIGHT-CHAR|LOAD-SMALL-ICON|FIT-LAST-COLUMN|MAX-HEIGHT-PIXE|FIRST-PROCEDURE|WINDOW-MINIMIZE|ADD-FIELDS-FROM|MAX-WIDTH-CHARS|RETURN-INSERTED|DATA-ENTRY-RETU|MAX-WIDTH-PIXEL|LOAD-MOUSE-POIN|VIRTUAL-HEIGHT-|GRID-UNIT-WIDTH|LOAD-IMAGE-DOWN|PROGRESS-SOURCE|FULL-HEIGHT-CHA|FULL-HEIGHT-PIX|FILE-INFORMATIO|AUTO-COMPLETION|LIST-ITEM-PAIRS|MIN-HEIGHT-CHAR|FULL-WIDTH-CHAR|CURRENT-LANGUAG|ADD-CALC-COLUMN|MIN-HEIGHT-PIXE|FULL-WIDTH-PIXE|GRID-FACTOR-HOR|MIN-WIDTH-CHARS|BORDER-RIGHT-CH|CURRENT-ENVIRON|MIN-WIDTH-PIXEL|LIKE-SEQUENTIAL|MOVE-AFTER-TAB-|CURRENT-CHANGED|WRITE-XMLSCHEMA|GET-BINARY-DATA|EVENT-PROCEDURE|MOVE-BEFORE-TAB|CLEAR-SELECTION|DEFAULT-EXTENSI|BORDER-RIGHT-PI|SET-GREEN-VALUE|BORDER-TOP-PIXE|INHERIT-BGCOLOR|XML-SCHEMA-PATH|DEFAULT-NOXLATE|SAX-PARSE-FIRST|SELECTION-START|END-USER-PROMPT|SYSTEM-ALERT-BO|END-EVENT-GROUP|ENCRYPTION-SALT|SAX-WRITE-BEGIN|WINDOW-MAXIMIZE|PIXELS-PER-COLU|SAX-WRITE-ERROR|SCHEMA-LOCATION|COPY-TEMP-TABLE|SELECT-PREV-ROW|GET-FILE-OFFSET|NO-INHERIT-BGCO|DELETE-CHARACTE|GET-GREEN-VALUE|NO-INHERIT-FGCO|SELECT-NEXT-ROW|CONVERT-TO-OFFS|SECURITY-POLICY|BORDER-BOTTOM-P|IMAGE-SIZE-PIXE|CONTEXT-HELP-ID|KEEP-FRAME-Z-OR|PBE-HASH-ALGORI|IMAGE-SIZE-CHAR|BORDER-TOP-CHAR|IS-ROW-SELECTED|HTML-HEADER-END|VIRTUAL-WIDTH-C|GET-SELECTED-WI|STORED-PROCEDUR|DS-CLOSE-CURSOR|SUPPRESS-WARNIN|SSL-SERVER-NAME|ON-FRAME-BORDER|GET-TEXT-WIDTH-|NUM-LOCKED-COLU|SCROLLBAR-HORIZ|HOST-BYTE-ORDER|DISPLAY-MESSAGE|SHOW-IN-TASKBAR|NUM-SELECTED-WI|GET-TEXT-HEIGHT|APPL-ALERT-BOXE|VIRTUAL-WIDTH-P|SCROLLBAR-VERTI|MOVE-BEFORE-TA|FILE-INFORMATI|SAX-PARSE-NEXT|BUFFER-RELEASE|STRETCH-TO-FIT|GET-COLLATIONS|HTML-FRAME-END|NUM-SELECTED-W|LARGE-TO-SMALL|GET-BLUE-VALUE|NUMERIC-FORMAT|SET-WAIT-STATE|SET-SORT-ARROW|NUM-REFERENCES|HTML-TITLE-END|NUM-PARAMETERS|GET-FILE-OFFSE|BORDER-RIGHT-P|SUPPRESS-WARNI|SCHEMA-MARSHAL|IMAGE-SIZE-CHA|LAST-PROCEDURE|NUM-LOCKED-COL|CURRENT-COLUMN|NUM-ITERATIONS|ON-FRAME-BORDE|DROP-DOWN-LIST|KEEP-TAB-ORDER|GET-GREEN-VALU|CURRENT-ENVIRO|AUTO-COMPLETIO|CURRENT-LANGUA|IMAGE-SIZE-PIX|FULL-WIDTH-PIX|STORED-PROCEDU|DYNAMIC-INVOKE|BORDER-RIGHT-C|FULL-WIDTH-CHA|PASSWORD-FIELD|KEEP-FRAME-Z-O|NO-ROW-MARKERS|LIST-SET-ATTRS|CURRENT-WINDOW|PBE-HASH-ALGOR|FULL-HEIGHT-PI|PBE-KEY-ROUNDS|FULL-HEIGHT-CH|NO-INHERIT-FGC|VIRTUAL-WIDTH-|DELETE-CHARACT|NO-INHERIT-BGC|EDIT-CAN-PASTE|START-DOCUMENT|LOAD-MOUSE-POI|NO-EMPTY-SPACE|DATA-ENTRY-RET|GET-SELECTED-W|RETURN-INSERTE|INHERIT-BGCOLO|VIRTUAL-HEIGHT|BUFFER-COMPARE|SCROLL-TO-ITEM|INHERIT-FGCOLO|PIXELS-PER-COL|ENABLED-FIELDS|SCROLLBAR-HORI|IS-PARTITIONED|SYSTEM-ALERT-B|PIXELS-PER-ROW|SORT-ASCENDING|SET-GREEN-VALU|COLUMN-PFCOLOR|PREFER-DATASET|MARGIN-HEIGHT-|COLUMN-MOVABLE|WRITE-FRAGMENT|DATASET-HANDLE|END-ROW-RESIZE|PREPARE-STRING|DEFAULT-WINDOW|SCROLLBAR-VERT|DEFAULT-NOXLAT|SAX-WRITE-IDLE|BORDER-LEFT-PI|MOVE-TO-BOTTOM|APPSERVER-INFO|COLUMN-FGCOLOR|MARGIN-WIDTH-C|BORDER-LEFT-CH|REFERENCE-ONLY|READ-XMLSCHEMA|MARGIN-WIDTH-P|SET-BLUE-VALUE|DEFAULT-EXTENS|ADD-LIKE-FIELD|READ-EXACT-NUM|READ-AVAILABLE|COLUMN-BGCOLOR|EVENT-GROUP-ID|ADD-LIKE-INDEX|MARK-ROW-STATE|MAX-DATA-GUESS|GET-TEXT-WIDTH|MAX-HEIGHT-CHA|CASE-SENSITIVE|DEFAULT-COMMIT|DEFAULT-BUTTON|MOVE-AFTER-TAB|DBRESTRICTIONS|RCODE-INFORMAT|BORDER-TOP-CHA|MAX-HEIGHT-PIX|FIRST-TAB-ITEM|EXCLUSIVE-LOCK|APPL-ALERT-BOX|SEAL-TIMESTAMP|FIRST-PROCEDUR|WINDOW-MAXIMIZ|SIDE-LABEL-HAN|MIN-WIDTH-PIXE|MAX-WIDTH-CHAR|GRID-FACTOR-VE|BORDER-TOP-PIX|MAX-WIDTH-PIXE|MIN-WIDTH-CHAR|SELECTION-LIST|BOX-SELECTABLE|CLEAR-SELECTIO|GET-WAIT-STATE|WINDOW-MINIMIZ|PROXY-PASSWORD|MIN-HEIGHT-PIX|MERGE-BY-FIELD|SERIALIZE-NAME|SELECTION-TEXT|PROGRESS-SOURC|MIN-HEIGHT-CHA|PROCEDURE-TYPE|GRID-FACTOR-HO|INSERT-BACKTAB|THIS-PROCEDURE|TEMP-DIRECTORY|INITIAL-FILTER|ACTIVE-WINDOW|XML-DATA-TYPE|WINDOW-MINIMI|PROGRESS-SOUR|FILE-MOD-DATE|FILE-MOD-TIME|TEMP-DIRECTOR|TEXT-SEG-GROW|TEXT-SELECTED|GRID-FACTOR-H|INSERT-BACKTA|TITLE-BGCOLOR|MIN-HEIGHT-CH|INSERT-STRING|TITLE-FGCOLOR|TOP-NAV-QUERY|MESSAGE-LINES|BORDER-LEFT-C|CLEAR-SELECTI|MIN-HEIGHT-PI|PRINTER-SETUP|FIND-BY-ROWID|IS-ATTR-SPACE|ALWAYS-ON-TOP|MAXIMUM-LEVEL|BOX-SELECTABL|PUT-KEY-VALUE|MIN-WIDTH-CHA|UNLESS-HIDDEN|GRID-FACTOR-V|MAX-WIDTH-PIX|QUERY-OFF-END|PREV-TAB-ITEM|QUERY-PREPARE|UNSIGNED-LONG|MIN-WIDTH-PIX|DEFAULT-BUTTO|MAX-WIDTH-CHA|SELECTION-END|BORDER-TOP-PI|WINDOW-MAXIMI|RADIO-BUTTONS|SEARCH-TARGET|FIRST-PROCEDU|SIDE-LABEL-HA|MOUSE-POINTER|APPL-ALERT-BO|BASE64-DECODE|COLON-ALIGNED|FIRST-TAB-ITE|EXCLUSIVE-LOC|RCODE-INFORMA|WINDOW-NORMAL|MAX-HEIGHT-PI|WINDOW-SYSTEM|SET-BLUE-VALU|MOVE-AFTER-TA|DBRESTRICTION|BASE64-ENCODE|MAX-HEIGHT-CH|CASE-SENSITIV|ADD-NEW-INDEX|ADD-NEW-FIELD|BORDER-TOP-CH|USE-DICT-EXPS|MOVE-BEFORE-T|BUFFER-HANDLE|DEFAULT-EXTEN|DEFAULT-NOXLA|COLUMN-DCOLOR|WRITE-COMMENT|RECORD-LENGTH|SET-DB-CLIENT|CAREFUL-PAINT|SYSTEM-DIALOG|MARGIN-WIDTH-|CANCEL-BUTTON|MOVE-TO-BOTTO|USE-UNDERLINE|DB-REFERENCES|BORDER-LEFT-P|MULTI-COMPILE|DEFAULT-VALUE|NAMESPACE-URI|ARRAY-MESSAGE|RESPONSE-INFO|RESTART-ROWID|SET-GREEN-VAL|END-FILE-DROP|MARGIN-HEIGHT|SCROLLBAR-VER|WRITE-MESSAGE|MACHINE-CLASS|FILE-INFORMAT|GET-SIGNATURE|XML-NODE-TYPE|FRAME-SPACING|RETURN-ALIGNE|NEXT-TAB-ITEM|SCROLLBAR-HOR|RETURN-INSERT|DATA-RELATION|VALIDATE-SEAL|VALUE-CHANGED|INHERIT-FGCOL|SCROLL-TO-ITE|NO-ATTR-SPACE|NO-BIND-WHERE|SYSTEM-ALERT-|DELETE-CHARAC|NO-INDEX-HINT|LOAD-MOUSE-PO|GET-SELECTED-|GET-RGB-VALUE|LOAD-IMAGE-UP|GET-RED-VALUE|CURSOR-OFFSET|EDIT-CAN-UNDO|LITTLE-ENDIAN|ITEMS-PER-ROW|JOIN-BY-SQLDB|INHERIT-BGCOL|FULL-HEIGHT-C|STORED-PROCED|ASK-OVERWRITE|RIGHT-ALIGNED|ROUTINE-LEVEL|FULL-HEIGHT-P|SET-PARAMETER|KEEP-FRAME-Z-|PBE-HASH-ALGO|CURRENT-VALUE|SCROLL-OFFSET|YES-NO-CANCEL|START-ELEMENT|SET-RED-VALUE|FULL-PATHNAME|CONTEXT-POPUP|BORDER-RIGHT-|VIRTUAL-WIDTH|FULL-WIDTH-CH|NO-SEPARATORS|BUFFER-CREATE|CURRENT-QUERY|GET-KEY-VALUE|FULL-WIDTH-PI|SET-RGB-VALUE|DESELECT-ROWS|CURRENT-LANGU|KEEP-MESSAGES|GET-ITERATION|DSLOG-MANAGER|IMAGE-SIZE-PI|CONTROL-FRAME|LAST-TAB-ITEM|OS-CREATE-DIR|CURRENT-ENVIR|GET-GREEN-VAL|AUTO-COMPLETI|GENERATE-UUID|HEIGHT-PIXELS|LABEL-BGCOLOR|BUFFER-DELETE|ROW-RESIZABLE|ON-FRAME-BORD|LAST-PROCEDUR|IMAGE-SIZE-CH|SUPPRESS-WARN|SET-SELECTION|GET-BLUE-VALU|NUM-SELECTED-|RUN-PROCEDURE|GET-FILE-NAME|NUMERIC-FORMA|AUTHORIZATION|GET-ERROR-ROW|SAX-WRITE-TAG|AUDIT-ENABLED|GET-CGI-VALUE|AUDIT-CONTROL|GET-CODEPAGES|STREAM-HANDLE|NUM-TO-RETAIN|LABEL-PFCOLOR|LABEL-FGCOLOR|FROM-CURRENT|LABEL-PFCOLO|GET-CGI-LIST|AUDIT-POLICY|LABEL-FGCOLO|SAX-COMPLETE|GET-BLUE-VAL|LAST-PROCEDU|LABEL-DCOLOR|AUTO-COMPLET|LABEL-BGCOLO|KEY-FUNCTION|LAST-TAB-ITE|GET-GREEN-VA|CURRENT-ENVI|GENERATE-MD5|COPY-DATASET|SCREEN-LINES|LEFT-ALIGNED|SCREEN-VALUE|LINE-COUNTER|CURRENT-LANG|GET-KEY-VALU|FULL-WIDTH-P|ASYNCHRONOUS|FULL-WIDTH-C|SCROLL-DELTA|BORDER-RIGHT|CONTEXT-HELP|FULL-PATHNAM|AUTO-END-KEY|CURRENT_DATE|GET-PRINTERS|GET-PROPERTY|REVERSE-FROM|KEEP-FRAME-Z|FULL-HEIGHT-|LIST-WIDGETS|START-RESIZE|LOAD-DOMAINS|GET-RED-VALU|RETURN-VALUE|SCROLL-TO-IT|STRING-VALUE|GET-SELECTED|LOAD-MOUSE-P|STATE-DETAIL|LOAD-PICTURE|DATA-RELATIO|SCROLLBAR-HO|RETURN-INSER|LOCATOR-TYPE|FRAME-SPACIN|RETURN-ALIGN|VALID-OBJECT|IS-LEAD-BYTE|GET-TAB-ITEM|BORDER-TOP-C|SCROLLBAR-VE|RETRY-CANCEL|MARGIN-EXTRA|RETAIN-SHAPE|VALID-HANDLE|COLUMN-LABEL|REQUEST-INFO|USE-REVVIDEO|MARGIN-WIDTH|USE-FILENAME|DBRESTRICTIO|URL-PASSWORD|MAX-HEIGHT-C|MAX-HEIGHT-P|FIRST-TAB-IT|COLON-ALIGNE|RCODE-INFORM|FIRST-SERVER|APPL-ALERT-B|BORDER-TOP-P|RAW-TRANSFER|WIDGET-ENTER|WIDGET-LEAVE|WIDTH-PIXELS|WINDOW-MAXIM|FIRST-PROCED|QUERY-TUNING|MAX-WIDTH-CH|FIRST-OBJECT|FIRST-COLUMN|MAX-WIDTH-PI|UNIQUE-MATCH|PUT-KEY-VALU|WINDOW-MINIM|FIND-CURRENT|PROXY-USERID|IS-ATTR-SPAC|MESSAGE-AREA|TITLE-FGCOLO|TITLE-DCOLOR|TITLE-BGCOLO|INSERT-BACKT|CLEAR-SELECT|INPUT-OUTPUT|PROGRESS-SOU|FILE-INFORMA|GRAPHIC-EDGE|MIN-HEIGHT-C|PROGRAM-NAME|PRIVATE-DATA|SERIALIZABLE|MIN-HEIGHT-P|PRINTER-PORT|BOX-SELECTAB|TEMP-DIRECTO|PRINTER-NAME|MIN-WIDTH-CH|BORDER-LEFT-|MIN-WIDTH-PI|DEFAULT-BUTT|MOUSE-POINTE|SET-BLUE-VAL|EXCLUSIVE-LO|WINDOW-STATE|MOVE-AFTER-T|EXCLUSIVE-ID|PREV-TAB-ITE|PREV-SIBLING|MOVE-BEFORE-|TABLE-NUMBER|DEFAULT-EXTE|ERROR-STATUS|CASE-SENSITI|DEFAULT-NOXL|SET-CALLBACK|TABLE-HANDLE|SET-CONTENTS|ERROR-COLUMN|TAB-POSITION|BUFFER-CHARS|MOVE-TO-BOTT|CANCEL-BREAK|MULTIPLE-KEY|SET-GREEN-VA|STOP-PARSING|NEEDS-PROMPT|NEW-INSTANCE|WRITE-STATUS|END-DOCUMENT|NEXT-SIBLING|NEXT-TAB-ITE|GRID-VISIBLE|STORED-PROCE|NO-ATTR-LIST|INHERIT-FGCO|NO-ATTR-SPAC|DELETE-CHARA|SYSTEM-ALERT|INHERIT-BGCO|SIDE-LABEL-H|BORDER-BOTTO|NO-LOOKAHEAD|SET-PROPERTY|SET-RED-VALU|PBE-HASH-ALG|NO-UNDERLINE|HEIGHT-CHARS|DYNAMIC-ENUM|NO-WORD-WRAP|PARSE-STATUS|IMAGE-SIZE-P|HEIGHT-PIXEL|ORDERED-JOIN|DRAG-ENABLED|SET-ROLLBACK|ON-FRAME-BOR|OCTET-LENGTH|IMAGE-SIZE-C|NUM-MESSAGES|DISPLAY-TYPE|NUM-REPLACED|NUM-SELECTED|BUFFER-VALUE|NUMERIC-FORM|SUPPRESS-WAR|BUFFER-FIELD|HTML-CHARSET|BUFFER-LINES|LINE-COUNTE|BEFORE-HIDE|PAGE-BOTTOM|YEAR-OFFSET|ACCELERATOR|PAGE-NUMBER|DESELECTION|PARTIAL-KEY|ON-FRAME-BO|ACTIVE-FORM|DELETE-LINE|DELETE-CHAR|NUMERIC-FOR|PREV-COLUMN|WRITE-CDATA|DEFAULT-EXT|PREV-TAB-IT|NUM-RESULTS|DISPLAY-TYP|HEIGHT-PIXE|DEFAULT-BUT|DOMAIN-NAME|WORK-AREA-Y|HEIGHT-CHAR|DOMAIN-TYPE|WORK-AREA-X|PRINTER-HDC|NUM-FORMATS|NUM-ENTRIES|NUM-COLUMNS|PRIVATE-DAT|NUM-BUTTONS|WINDOW-STAT|NUM-BUFFERS|NUM-ALIASES|WINDOW-NAME|PROC-HANDLE|PROC-STATUS|DROP-TARGET|WIDTH-PIXEL|PROGRESS-SO|NO-VALIDATE|WIDTH-CHARS|DEBUG-ALERT|NO-UNDERLIN|INFORMATION|INHERIT-BGC|NO-TAB-STOP|HAS-RECORDS|PUT-KEY-VAL|WIDGET-POOL|INHERIT-FGC|WIDGET-LEAV|NO-PREFETCH|QUERY-CLOSE|RCODE-INFOR|DBRESTRICTI|WIDGET-ENTE|EDGE-PIXELS|DBCOLLATION|WEB-CONTEXT|INITIAL-DIR|GRAPHIC-EDG|REFRESHABLE|DATE-FORMAT|INNER-CHARS|INNER-LINES|APPL-ALERT-|APPLICATION|RESTART-ROW|DATASERVERS|NO-ATTR-SPA|INPUT-OUTPU|RETURN-INSE|INPUT-VALUE|NO-ATTR-LIS|DATA-SOURCE|DATA-RELATI|RETURN-VALU|NEXT-TAB-IT|INSERT-BACK|CURSOR-LINE|NEXT-PROMPT|AUTO-COMPLE|INSERT-FILE|NEXT-COLUMN|AUTO-ENDKEY|CURSOR-CHAR|END-ELEMENT|CURRENT-ENV|ROW-MARKERS|AUTO-INDENT|AUTO-RESIZE|CREATE-LIKE|SAX-COMPLET|SAX-RUNNING|VALID-EVENT|MOVE-TO-TOP|AUTO-RETURN|MOVE-TO-EOF|MOVE-TO-BOT|MOVE-COLUMN|IS-ATTR-SPA|SCHEMA-PATH|ERROR-COLUM|ERROR-STATU|SCREEN-VALU|CONTROL-BOX|UNSUBSCRIBE|MOVE-BEFORE|SCROLL-BARS|GET-RED-VAL|IS-SELECTED|SCROLL-TO-I|UNFORMATTED|CONSTRUCTOR|EXCLUSIVE-L|MOVE-AFTER-|SCROLLBAR-H|MOUSE-POINT|CONFIG-NAME|SCROLLBAR-V|COLUMN-LABE|TRANSPARENT|GET-MESSAGE|TRANSACTION|COLUMN-FONT|GET-KEY-VAL|COLOR-TABLE|GET-GREEN-V|COLON-ALIGN|SEARCH-SELF|TITLE-FGCOL|MIN-WIDTH-P|CLIENT-TYPE|KEY-FUNCTIO|MIN-WIDTH-C|SET-BLUE-VA|CASE-SENSIT|SET-BUFFERS|TITLE-DCOLO|MIN-HEIGHT-|FILE-INFORM|KEYFUNCTION|FILE-OFFSET|SET-DYNAMIC|TITLE-BGCOL|KEYWORD-ALL|SET-GREEN-V|SET-RED-VAL|SHA1-DIGEST|LABEL-BGCOL|BUFFER-NAME|FIND-GLOBAL|FIND-SELECT|FIND-UNIQUE|MAX-WIDTH-P|LABEL-DCOLO|BUFFER-COPY|FIRST-CHILD|BOX-SELECTA|LABEL-FGCOL|TIME-SOURCE|GET-DYNAMIC|MAX-WIDTH-C|SIDE-LABELS|FIRST-PROCE|LABEL-PFCOL|FIRST-TAB-I|GET-CURRENT|FLAT-BUTTON|FOCUSED-ROW|SIZE-PIXELS|THREAD-SAFE|SMALL-TITLE|THIS-OBJECT|TEXT-CURSOR|BORDER-TOP-|GET-BLUE-VA|SORT-NUMBER|BORDER-RIGH|STATUS-AREA|BORDER-LEFT|STORED-PROC|FRAME-FIELD|LAST-OBJECT|FRAME-INDEX|BORDER-BOTT|LAST-PROCED|LOGIN-STATE|BLOCK-LEVEL|LOG-MANAGER|LAST-SERVER|FRAME-SPACI|LAST-TAB-IT|STRING-XREF|TEMP-DIRECT|FRAME-VALUE|SUB-AVERAGE|SUB-MAXIMUM|SUB-MINIMUM|SYSTEM-HELP|FROM-CURREN|LEFT-ALIGNE|FROM-PIXELS|FULL-HEIGHT|FULL-PATHNA|FULL-WIDTH-|LIST-EVENTS|SUPPRESS-WA|LABEL-PFCO|URL-DECODE|BIG-ENDIAN|BEFORE-HID|PAGE-BOTTO|BATCH-SIZE|LIST-ITEMS|FULL-WIDTH|BATCH-MODE|FULL-PATHN|DESTRUCTOR|SUPPRESS-W|SUM-MAXIMU|OS-COMMAND|DIALOG-BOX|FROM-PIXEL|PAGE-NUMBE|PAGE-WIDTH|WRITE-JSON|LOAD-IMAGE|SUBSTITUTE|ACCUMULATE|ON-FRAME-B|LEFT-ALIGN|FROM-CURRE|DESCENDING|ADD-BUFFER|FROM-CHARS|PERSISTENT|IMAGE-DOWN|TABLE-SCAN|DICTIONARY|LOCAL-NAME|NUMERIC-FO|POPUP-MENU|SUB-AVERAG|POPUP-ONLY|TEMP-DIREC|FRAME-VALU|PREPROCESS|DISCONNECT|BIND-WHERE|LAST-TAB-I|BACKGROUND|IMAGE-SIZE|FRAME-SPAC|LOGIN-HOST|GET-BLUE-V|WORK-TABLE|PREV-TAB-I|HEX-ENCODE|BORDER-BOT|LAST-PROCE|HEX-DECODE|DISPLAY-TY|DEFAULT-EX|HEIGHT-PIX|FRAME-NAME|FRAME-LINE|TEMP-TABLE|FRAME-INDE|FRAME-FILE|HEIGHT-CHA|FRAME-DOWN|DEFAULT-BU|IMPLEMENTS|BORDER-LEF|STOP-AFTER|LAST-EVENT|NUM-FIELDS|PRIVATE-DA|BORDER-RIG|NUM-COPIES|START-MOVE|LAST-CHILD|STANDALONE|WORD-INDEX|FORM INPUT|FOREGROUND|NUM-COLUMN|BORDER-TOP|LAST-BATCH|PRIVILEGES|HORIZONTAL|NUM-BUTTON|SMALL-ICON|PROC-HANDL|SIZE-PIXEL|MAX-BUTTON|WINDOW-STA|FORCE-FILE|MAX-HEIGHT|INDEX-HINT|FONT-TABLE|SIZE-CHARS|NUM-ALIASE|PROC-STATU|NOT-ACTIVE|DEBUG-LIST|FIXED-ONLY|GET-DOUBLE|PROGRESS-S|FIRST-PROC|SINGLE-RUN|WIDTH-PIXE|NO-VALIDAT|BOX-SELECT|PROMPT-FOR|INFORMATIO|MAX-WIDTH-|LABEL-FONT|LABEL-FGCO|FIRST-FORM|NO-UNDERLI|PROVERSION|LABEL-DCOL|SIDE-LABEL|WIDTH-CHAR|PUT-DOUBLE|WIDGET-LEA|NO-PREFETC|PUT-STRING|SHOW-STATS|NO-MESSAGE|QUERY-OPEN|SHARE-LOCK|FIND-FIRST|MD5-DIGEST|RCODE-INFO|LABEL-BGCO|DBRESTRICT|BY-POINTER|EDGE-CHARS|CACHE-SIZE|EDGE-PIXEL|WIDGET-ENT|SET-RED-VA|EDIT-CLEAR|GRAPHIC-ED|DBCODEPAGE|MENU-MOUSE|CAN-CREATE|CAN-DELETE|SET-OPTION|DB-CONTEXT|APPL-ALERT|TITLE-BGCO|SET-GREEN-|REPOSITION|MIN-BUTTON|DATE-FORMA|EDIT-PASTE|SET-COMMIT|NO-CONVERT|NO-CONSOLE|TITLE-DCOL|FILE-OFFSE|RETURN-INS|SET-CLIENT|INPUT-OUTP|KEYFUNCTIO|MIN-HEIGHT|NO-ATTR-SP|FILE-INFOR|ATTR-SPACE|CASE-SENSI|NO-ATTR-LI|AUTO-COMPL|TITLE-FGCO|DATA-RELAT|SET-BLUE-V|RETURN-VAL|SESSION-ID|NEXT-VALUE|SEPARATORS|CLASS-TYPE|INSERT-BAC|NEXT-TAB-I|GO-PENDING|MIN-WIDTH-|GET-GREEN-|NEXT-ROWID|CLIENT-TTY|KEY-FUNCTI|INSERT-ROW|RIGHT-TRIM|INSERT-TAB|SELECTABLE|EXPANDABLE|SELECT-ROW|AUTO-INDEN|SELECT-ALL|SAVE CACHE|END-RESIZE|TITLE-FONT|SAX-COMPLE|TOGGLE-BOX|COLUMN-LAB|GET-NUMBER|MUST-EXIST|AUTO-RETUR|COM-HANDLE|CPRCODEOUT|UNBUFFERED|MOVE-TO-TO|MOUSE-POIN|CPINTERNAL|SAX-WRITER|SCROLLABLE|MOVE-TO-BO|MOVE-AFTER|IS-ATTR-SP|UNFORMATTE|EXCLUSIVE-|MOVE-COLUM|GET-RED-VA|ERROR-COLU|EVENT-TYPE|URL-USERID|ERROR-STAT|MOVE-BEFOR|URL-ENCODE|GET-STRING|LINE-COUNT|SCREEN-VAL|TITLE-BGC|GET-CLASS|GET-SHORT|ERROR-ROW|EVENT-TYP|UNIQUE-ID|AUTOMATIC|MOVE-COLU|EXCLUSIVE|GET-RED-V|MOVE-TO-B|CONNECTED|IS-ATTR-S|ERROR-COL|UNFORMATT|UNDERLINE|USE-INDEX|MOVE-TO-T|MOUSE-POI|V6DISPLAY|CPRCODEIN|COMBO-BOX|UNBUFFERE|CRC-VALUE|SAX-PARSE|AUTO-RETU|COLUMN-OF|GET-INT64|SAVE-FILE|SCROLLING|TITLE-FON|INTERFACE|CLOSE-LOG|SELECTION|KEY-FUNCT|INSERT-TA|RGB-VALUE|AUTO-INDE|CLIPBOARD|GO-PENDIN|CLEAR-LOG|MIN-WIDTH|MIN-VALUE|SENSITIVE|DATA-BIND|INSERT-BA|CHARACTER|SET-BLUE-|DATA-RELA|KEY-LABEL|NO-ASSIGN|SET-BREAK|AUTO-COMP|NO-ATTR-L|TITLE-FGC|FILE-INFO|GRAPHIC-E|NO-ATTR-S|KEYFUNCTI|FILE-NAME|FILE-OFFS|DATA-TYPE|INPUT-OUT|EDIT-UNDO|ASCENDING|FILE-SIZE|FILE-TYPE|CASE-SENS|RESIZABLE|DATE-FORM|TITLE-DCO|SET-GREEN|EDIT-COPY|CAN-WRITE|CAN-QUERY|MENU-MOUS|CALL-TYPE|WIDGET-EN|RECURSIVE|RECTANGLE|READ-ONLY|SET-RED-V|LABEL-BGC|CALL-NAME|EDGE-PIXE|READ-JSON|READ-FILE|DBRESTRIC|MENU-ITEM|EDGE-CHAR|SETUSERID|WIDGET-ID|NO-LABELS|GRID-SNAP|SHARE-LOC|RADIO-SET|DBVERSION|GET-GREEN|WIDGET-LE|DDE-ERROR|NO-MESSAG|SHOW-STAT|SIDE-LABE|PUT-SHORT|NO-PREFET|GET-FLOAT|FIND-LAST|WIDTH-CHA|PUT-INT64|PUT-FLOAT|SUBSTRING|AVAILABLE|SUBSCRIBE|DDE-TOPIC|GET-FIRST|NO-UNDERL|LABEL-FGC|MAX-WIDTH|PROVERSIO|PROTECTED|MAX-VALUE|PROMPT-FO|INFORMATI|NO-VALIDA|LABEL-PFC|WIDTH-PIX|SIGNATURE|OS-RENAME|TIC-MARKS|ANSI-ONLY|PROCEDURE|NORMALIZE|PROC-TEXT|SINGLETON|INDICATOR|SIZE-CHAR|PROC-STAT|AMBIGUOUS|NUM-ALIAS|LABEL-DCO|SIZE-PIXE|MAX-CHARS|LANDSCAPE|PROC-HAND|NUM-BUTTO|LANGUAGES|IN-HANDLE|TERMINATE|ALERT-BOX|NUM-COLUM|FOREGROUN|BORDER-TO|FORMATTED|BORDER-RI|DROP-DOWN|WORD-WRAP|LAST-EVEN|FRAME-COL|NUM-ITEMS|PRIVATE-D|NUM-LINES|DEFAULT-B|HEIGHT-CH|LAST-FORM|BACKGROUN|HEIGHT-PI|BORDER-LE|FRAME-ROW|WORK-TABL|MANDATORY|FRAME-SPA|DISPLAY-T|LOOKAHEAD|BORDER-BO|STREAM-IO|GET-BLUE-|BACKWARDS|DISCONNEC|PRESELECT|FRAME-VAL|PREPROCES|PRECISION|SUB-AVERA|POPUP-ONL|FREQUENCY|NUMERIC-F|TEMP-DIRE|ADD-FIRST|POPUP-MEN|SUB-COUNT|DICTIONAR|SYSTEM-ID|FROM-CHAR|PERSISTEN|SUB-TOTAL|OK-CANCEL|DELIMITER|DESCENDIN|FROM-CURR|ON-FRAME-|PUBLIC-ID|SUBSTITUT|ACCUMULAT|LOAD-ICON|PARAMETER|FROM-PIXE|PAGE-WIDT|PAGE-SIZE|WRITE-XML|SCREEN-IO|BATCH-MOD|PAGE-NUMB|OS-APPEND|SUM-MAXIM|HORIZONTA|LEFT-TRIM|OS-DELETE|BEFORE-HI|PAGE-BOTT|OS-DRIVES|OTHERWISE|OS-GETENV|SMALLINT|NO-ERROR|HORIZONT|XREF-XML|OVERRIDE|ABSOLUTE|ABSTRACT|PAGE-BOT|OS-DRIVE|ACCUMULA|ADD-LAST|PAGE-NUM|WORKFILE|WORK-TAB|HEIGHT-P|IMAGE-UP|PAGE-TOP|PAGE-WID|ADM-DATA|HEIGHT-C|AMBIGUOU|WIDTH-PI|INFORMAT|WIDTH-CH|PARAMETE|ANYWHERE|WIDGET-L|INHERITS|WIDGET-E|WAIT-FOR|ON-FRAME|PATHNAME|INITIATE|ASCENDIN|DESCENDI|INPUT-OU|ASSEMBLY|ATTRIBUT|INSERT-B|GO-PENDI|AUTO-IND|VERTICAL|VARIABLE|PERSISTE|INSERT-T|AUTO-RET|DICTIONA|VALIDATE|USE-TEXT|IS-ATTR-|AUTO-ZAP|IS-CLASS|AVAILABL|GET-SIZE|UNFORMAT|DELEGATE|GET-RED-|UNDERLIN|GET-PREV|POPUP-ME|UNBUFFER|TRUNCATE|TRIGGERS|POPUP-ON|GET-NEXT|DISABLED|PORTRAIT|POSITION|NUM-TABS|GET-LONG|TRAILING|PREPARED|TOP-ONLY|PREPROCE|TOOLTIPS|GET-LAST|TO-ROWID|KEY-CODE|PRESELEC|DISCONNE|TITLE-FO|KEY-FUNC|KEYFUNCT|KEYLABEL|TITLE-DC|DISTINCT|LABEL-DC|GET-FILE|LANGUAGE|BACKGROU|GET-BYTE|TERMINAL|LAST-KEY|GET-BLUE|BACKWARD|TEMP-DIR|BASE-ADE|NUM-COLU|BASE-KEY|TAB-STOP|BATCH-MO|PROC-HAN|NUM-BUTT|GATEWAYS|NUM-ALIA|BEFORE-H|PROC-STA|FUNCTION|SUM-MAXI|SUBSTRIN|FROM-PIX|DECIMALS|SUBSTITU|FROM-CUR|FROM-CHA|PROCEDUR|SUB-MENU|SUB-AVER|DEBUGGER|BORDER-B|PROFILER|LONGCHAR|PROGRESS|BORDER-L|FRAME-DB|NO-VALID|FRAGMENT|BORDER-R|FORWARDS|FORMATTE|PROMPT-F|BORDER-T|FOREGROU|MARK-NEW|SIZE-PIX|PROPERTY|SIZE-CHA|MAX-ROWS|PROVERSI|MAX-SIZE|NO-UNDER|MAX-VALU|FIRST-OF|DDE-NAME|SIDE-LAB|MAXIMIZE|SHARE-LO|DDE-ITEM|SETUSERI|PUT-BYTE|OS-ERROR|SET-SIZE|MENU-BAR|MENU-KEY|SET-RED-|MENU-MOU|PUT-LONG|NO-PREFE|NO-PAUSE|NO-MESSA|CAN-FIND|CAN-READ|CASE-SEN|FILENAME|FILE-OFF|SET-BLUE|CENTERED|QUESTION|MIN-SIZE|MIN-VALU|EXTERNAL|DBVERSIO|EXTENDED|SELECTED|EXPLICIT|CODEPAGE|MODIFIED|COM-SELF|COMPARES|COMPILER|DBTASKID|COMPLETE|EDGE-CHA|MOUSE-PO|DBRESTRI|CONTAINS|CONTENTS|EDGE-PIX|EVENT-TY|READ-XML|MOVE-COL|COPY-LOB|COUNT-OF|CPSTREAM|MULTIPLE|END-MOVE|DATA-REL|NO-APPLY|NO-ATTR-|RECTANGL|DATA-TYP|NO-FOCUS|DATABASE|EDIT-CUT|RESIZABL|DATE-FOR|NO-DEBUG|SETUSER|FILTERS|OVERLAY|ABSOLUT|HORIZON|REPLACE|RELEASE|NO-ECHO|NO-DRAG|ACCUMUL|OS-COPY|DATE-FO|ORDINAL|REQUEST|HEIGHT-|AMBIGUO|ANALYZE|RESIZAB|NO-FILL|REFRESH|INFORMA|DATASET|WIDTH-P|EDITING|HANDLER|PARAMET|WIDTH-C|DICTION|WEEKDAY|NO-HELP|DATA-TY|INITIAL|WARNING|VISIBLE|RECTANG|NO-ATTR|INPUT-O|ASCENDI|DESCEND|ATTRIBU|GO-PEND|ENCRYPT|AUTO-GO|RETURNS|VIEW-AS|PDBNAME|VERTICA|NEW-ROW|VERSION|VERBOSE|PERSIST|VARIABL|INTEGER|V6FRAME|USER-ID|END-KEY|IS-ATTR|AUTO-ZA|CURRENT|GETBYTE|PFCOLOR|IS-JSON|IS-OPEN|AVAILAB|KBLABEL|SAVE-AS|UNFORMA|UNDERLI|ENTERED|GET-RED|POPUP-M|DBPARAM|UNBUFFE|TYPE-OF|NUMERIC|TRUNCAT|POPUP-O|CPPRINT|TRIGGER|DISABLE|DEFINED|PREPROC|TOOLTIP|DISCONN|PRESELE|AVERAGE|READKEY|KEYCODE|KEYFUNC|DISPLAY|CONVERT|KEYWORD|PRIMARY|EVENT-T|THROUGH|NO-HIDE|CONTROL|CONTEXT|EDGE-PI|THREE-D|DBRESTR|PRINTER|MOVABLE|CONNECT|EXECUTE|BACKGRO|TERMINA|NO-LABE|DEFAULT|COMPILE|LAST-OF|COMMAND|MOUSE-P|NO-LOBS|DECRYPT|PRIVATE|COLUMNS|LASTKEY|NUM-DBS|LDBNAME|NO-LOCK|DECLARE|NUM-COL|BATCH-M|PROC-HA|NUM-BUT|MINIMUM|LIBRARY|COLLATE|PROC-ST|SDBNAME|GATEWAY|BETWEEN|BGCOLOR|NUM-ALI|LISTING|SECTION|DBVERSI|SUM-MAX|SUBTYPE|SUBSTRI|FROM-PI|SUBSTIT|PROCEDU|SUB-MIN|FROM-CH|FRAME-Y|FRAME-X|EDGE-CH|DECIMAL|R-INDEX|SUB-AVE|LOGICAL|PROCESS|DYNAMIC|NO-WAIT|MIN-VAL|STOPPED|STDCALL|FRAGMEN|DEBLANK|CHECKED|FORWARD|NO-VALI|CHARSET|FOREGRO|CHAINED|PROMSGS|SESSION|MATCHES|PROPATH|CENTERE|SIZE-PI|NO-UNDO|SIZE-CH|PROVERS|MAX-VAL|NO-UNDE|MAXIMUM|PUBLISH|FGCOLOR|SHARE-L|BUTTONS|MENU-KE|MENU-MO|SET-RED|MENUBAR|NO-MESS|FINALLY|FILL-IN|MESSAGE|PUTBYTE|CAN-SET|SUBSTI|DICTIO|METHOD|UNLOAD|PIXELS|YES-NO|OUTPUT|CAN-DO|UPDATE|ABSOLU|DELETE|IS-XML|DDE-ID|NO-MES|MENU-M|EDGE-C|REPEAT|UNIQUE|MENU-K|AVAILA|ENDKEY|UNFORM|HORIZO|FIELDS|BUTTON|ACCUMU|GLOBAL|OS-DIR|PFCOLO|ROW-OF|SHARE-|UNDERL|CREATE|MEMBER|AUTO-Z|SHARED|MAXIMU|NO-UND|CPTERM|PUBLIC|NO-FIL|FINDER|UNBUFF|BUFFER|BROWSE|USERID|FGCOLO|TRUNCA|INVOKE|CPCOLL|SILENT|SIMPLE|SINGLE|DATE-F|VALUES|HIDDEN|SIZE-C|DCOLOR|DEFINE|CPCASE|OPTION|SIZE-P|CENTER|DISCON|ADVISE|IMPORT|PRESEL|VARIAB|HEIGHT|SLIDER|SCHEMA|NO-MAP|AVERAG|CURSOR|AMBIGU|FOREGR|DBREST|SOURCE|NO-VAL|SCREEN|DISPLA|VERTIC|HEADER|ESCAPE|REVOKE|REVERT|FORMAT|PROMPT|SERVER|CHOOSE|ANALYZ|STATIC|STATUS|RESIZA|ENCODE|WINDOW|LABELS|INFORM|SCROLL|STOPPE|EVENTS|QUOTER|RESIZE|EXCEPT|BACKGR|LOOKUP|NO-BOX|STREAM|PARAME|LOGOUT|HAVING|STRICT|EXISTS|STRING|RETAIN|LOCKED|ATTRIB|EXTENT|EXPORT|RANDOM|DBNAME|FROM-C|DOUBLE|WIDTH-|EXPAND|INSERT|PROCED|FROM-P|FILLED|REMOTE|EDGE-P|TERMIN|HANDLE|ASSIGN|SUBSTR|DBTYPE|PARENT|NATIVE|SELECT|APPEND|DBVERS|INITIA|EDITOR|LISTIN|DESCEN|WIDGET|BINARY|MODULO|RECTAN|ASCEND|SEARCH|BGCOLO|TARGET|COLUMN|RETURN|COL-OF|BATCH-|BEGINS|PASCAL|DATA-T|ENABLE|MINIMU|LENGTH|FETCH|COUNT|INPUT|PAUSE|LEAVE|APPLY|EMPTY|COLUM|TABLE|BATCH|WHERE|ASCEN|BGCOL|MODUL|WHILE|MINIM|LISTI|RECTA|SUPER|MONTH|MOUSE|INITI|GROUP|DICTI|COLON|PROCE|WIDTH|SUBST|CLOSE|ATTRI|RETRY|FALSE|BLANK|DESCE|LARGE|AMBIG|CLEAR|CLASS|FRAME|THROW|GRANT|INFOR|DEBUG|EVENT|TITLE|CHECK|LABEL|ETIME|BACKG|START|FORMA|PAGED|RESET|DISPL|VERTI|SPACE|TERMI|COLOR|PARAM|FOREG|ROLES|ALTER|ROUND|INDEX|ALIAS|TODAY|ERROR|VARIA|OPSYS|AVERA|FOCUS|TOPIC|TOTAL|CDECL|TRANS|FLOAT|WRITE|VALUE|INT64|CPLOG|CURSO|GO-ON|FGCOL|TRUNC|PROXY|MTIME|USING|BREAK|RECID|UNBOX|FIRST|MAXIM|CATCH|ENTRY|IMAGE|FIELD|SHARE|PFCOL|HORIZ|NO-FI|ACCUM|EDGE-|DELET|ROWID|AVAIL|CACHE|UNION|XCODE|OWNER|DDE-I|ABSOL|FINAL|QUERY|ATTR|DICT|ABSO|UNIX|ITEM|CAPS|YEAR|RULE|JOIN|SAVE|Y-OF|UNDO|DELE|NO-F|NAME|PFCO|XREF|RECT|USER|CURS|TYPE|ENUM|CASE|FILL|TRUE|INTO|TRIM|PAGE|FILE|CALL|X-OF|EDGE|ECHO|MENU|AVER|FIND|VARI|REAL|HWND|ICON|PREV|CAST|DISP|VERT|HORI|KEYS|BACK|MAXI|VIEW|NEXT|HIDE|EACH|TIME|FGCO|DESC|THRU|THEN|SIZE|HELP|TEXT|LAST|DOWN|FONT|TERM|OPEN|WITH|DATE|SKIP|DROP|MODU|ASCE|FORE|SOME|SORT|COLU|SQRT|LIKE|SEAL|VOID|WAIT|LINE|BELL|ELSE|FORM|WHEN|BGCO|DEBU|BIND|INFO|NULL|SEEK|INIT|QUIT|LOAD|STOP|MINI|FRAM|GUID|DUMP|CODE|SEND|NONE|SELF|FROM|USE|NEW|EXP|NOT|MIN|MAP|YES|NOW|ANY|SUM|COL|AND|CHR|ABS|BGC|MOD|SQL|URL|RUN|ASC|BOX|ALL|PUT|RAW|DAY|DIR|ROW|FGC|MAX|FOR|GET|SET|DDE|LOG|DOS|PFC|OLD|END|MPE|INT|AVG|DEL|ADD|AVE|KEY|OFF|VAR|OR|NE|IF|EQ|BY|UP|DO|OK|OF|NO|AT|TO|GE|IS|IN|ON|LT|LC|AS|LE|GT|Y|X)\\s*($|(?=[^\\w\\-]))\">\n+        <token type=\"KeywordReserved\"/>\n+      </rule>\n+      <rule pattern=\"&#34;(~~|~[^~]|[^&#34;~])*&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"&#39;(~~|~[^~]|[^&#34;~])*&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"[+*/=-]\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[.:()]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\".\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+    </state>\n+    <state name=\"comment\">\n+      <rule pattern=\"[^*/]\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"/\\*\">\n+        <token type=\"CommentMultiline\"/>\n+        <push/>\n+      </rule>\n+      <rule pattern=\"\\*/\">\n+        <token type=\"CommentMultiline\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"[*/]\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"\\/\\/\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+    </state>\n+    <state name=\"preprocessor\">\n+      <rule pattern=\"[^{}]\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"\\{\">\n+        <token type=\"CommentPreproc\"/>\n+        <push/>\n+      </rule>\n+      <rule pattern=\"\\}\">\n+        <token type=\"CommentPreproc\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "3f227ad8d647248f912bcc112b8ab84f228064fc",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/org_mode.xml",
      "status": "added",
      "additions": 329,
      "deletions": 0,
      "changes": 329,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Forg_mode.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Forg_mode.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Forg_mode.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,329 @@\n+<lexer>\n+  <config>\n+    <name>Org Mode</name>\n+    <alias>org</alias>\n+    <alias>orgmode</alias>\n+    <filename>*.org</filename>\n+    <mime_type>text/org</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"^# .*$\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"^(\\*)( COMMENT)( .*)$\">\n+        <bygroups>\n+          <token type=\"GenericHeading\"/>\n+          <token type=\"NameEntity\"/>\n+          <token type=\"GenericStrong\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^(\\*\\*+)( COMMENT)( .*)$\">\n+        <bygroups>\n+          <token type=\"GenericSubheading\"/>\n+          <token type=\"NameEntity\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^(\\*)( DONE)( .*)$\">\n+        <bygroups>\n+          <token type=\"GenericHeading\"/>\n+          <token type=\"LiteralStringRegex\"/>\n+          <token type=\"GenericStrong\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^(\\*\\*+)( DONE)( .*)$\">\n+        <bygroups>\n+          <token type=\"GenericSubheading\"/>\n+          <token type=\"LiteralStringRegex\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^(\\*)( TODO)( .*)$\">\n+        <bygroups>\n+          <token type=\"GenericHeading\"/>\n+          <token type=\"Error\"/>\n+          <token type=\"GenericStrong\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^(\\*\\*+)( TODO)( .*)$\">\n+        <bygroups>\n+          <token type=\"GenericSubheading\"/>\n+          <token type=\"Error\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^(\\*)( .+?)( :[a-zA-Z0-9_@:]+:)$\">\n+        <bygroups>\n+          <token type=\"GenericHeading\"/>\n+          <token type=\"GenericStrong\"/>\n+          <token type=\"GenericEmph\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^(\\*)( .+)$\">\n+        <bygroups>\n+          <token type=\"GenericHeading\"/>\n+          <token type=\"GenericStrong\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^(\\*\\*+)( .+?)( :[a-zA-Z0-9_@:]+:)$\">\n+        <bygroups>\n+          <token type=\"GenericSubheading\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"GenericEmph\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^(\\*\\*+)( .+)$\">\n+        <bygroups>\n+          <token type=\"GenericSubheading\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^( *)([+-] )(\\[[ X]\\])( .+)$\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Keyword\"/>\n+          <usingself state=\"inline\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^( +)(\\* )(\\[[ X]\\])( .+)$\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Keyword\"/>\n+          <usingself state=\"inline\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^( *)([+-] )([^ \\n]+ ::)( .+)$\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Keyword\"/>\n+          <usingself state=\"inline\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^( +)(\\* )([^ \\n]+ ::)( .+)$\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Keyword\"/>\n+          <usingself state=\"inline\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^( *)([+-] )(.+)$\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"Keyword\"/>\n+          <usingself state=\"inline\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^( +)(\\* )(.+)$\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"Keyword\"/>\n+          <usingself state=\"inline\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^( *)([0-9]+[.)])( \\[@[0-9]+\\])( .+)$\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"Keyword\"/>\n+          <token type=\"GenericEmph\"/>\n+          <usingself state=\"inline\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^( *)([0-9]+[.)])( .+)$\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"Keyword\"/>\n+          <usingself state=\"inline\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?i)^( *#\\+begin: )([^ ]+)([\\w\\W]*?\\n)([\\w\\W]*?)(^ *#\\+end: *$)\">\n+        <bygroups>\n+          <token type=\"Comment\"/>\n+          <token type=\"CommentSpecial\"/>\n+          <token type=\"Comment\"/>\n+          <usingself state=\"inline\"/>\n+          <token type=\"Comment\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?i)^( *#\\+begin_comment *\\n)([\\w\\W]*?)(^ *#\\+end_comment *$)\">\n+        <bygroups>\n+          <token type=\"Comment\"/>\n+          <token type=\"Comment\"/>\n+          <token type=\"Comment\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?i)^( *#\\+begin_src )([^ \\n]+)(.*?\\n)([\\w\\W]*?)(^ *#\\+end_src *$)\">\n+        <usingbygroup>\n+          <sublexer_name_group>2</sublexer_name_group>\n+          <code_group>4</code_group>\n+          <emitters>\n+            <token type=\"Comment\"/>\n+            <token type=\"CommentSpecial\"/>\n+            <token type=\"Comment\"/>\n+            <token type=\"Text\"/>\n+            <token type=\"Comment\"/>\n+          </emitters>\n+        </usingbygroup>\n+      </rule>\n+      <rule pattern=\"(?i)^( *#\\+begin_export )(\\w+)( *\\n)([\\w\\W]*?)(^ *#\\+end_export *$)\">\n+        <usingbygroup>\n+          <sublexer_name_group>2</sublexer_name_group>\n+          <code_group>4</code_group>\n+          <emitters>\n+            <token type=\"Comment\"/>\n+            <token type=\"CommentSpecial\"/>\n+            <token type=\"Text\"/>\n+            <token type=\"Text\"/>\n+            <token type=\"Comment\"/>\n+          </emitters>\n+        </usingbygroup>\n+      </rule>\n+      <rule pattern=\"(?i)^( *#\\+begin_)(\\w+)( *\\n)([\\w\\W]*?)(^ *#\\+end_\\2)( *$)\">\n+        <bygroups>\n+          <token type=\"Comment\"/>\n+          <token type=\"Comment\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Comment\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^(#\\+\\w+)(:.*)$\">\n+        <bygroups>\n+          <token type=\"CommentSpecial\"/>\n+          <token type=\"Comment\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?i)^( *:\\w+: *\\n)([\\w\\W]*?)(^ *:end: *$)\">\n+        <bygroups>\n+          <token type=\"Comment\"/>\n+          <token type=\"CommentSpecial\"/>\n+          <token type=\"Comment\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^(.*)(\\\\\\\\)$\">\n+        <bygroups>\n+          <usingself state=\"inline\"/>\n+          <token type=\"Operator\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?i)^( *(?:DEADLINE|SCHEDULED): )(&lt;[^&lt;&gt;]+?&gt; *)$\">\n+        <bygroups>\n+          <token type=\"Comment\"/>\n+          <token type=\"CommentSpecial\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?i)^( *CLOSED: )(\\[[^][]+?\\] *)$\">\n+        <bygroups>\n+          <token type=\"Comment\"/>\n+          <token type=\"CommentSpecial\"/>\n+        </bygroups>\n+      </rule>\n+      <rule>\n+        <include state=\"inline\"/>\n+      </rule>\n+    </state>\n+    <state name=\"inline\">\n+      <rule pattern=\"(\\s)*(\\*[^ \\n*][^*]+?[^ \\n*]\\*)((?=\\W|\\n|$))\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"GenericStrong\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\s)*(/[^/]+?/)((?=\\W|\\n|$))\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"GenericEmph\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\s)*(=[^\\n=]+?=)((?=\\W|\\n|$))\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"NameClass\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\s)*(~[^\\n~]+?~)((?=\\W|\\n|$))\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"NameClass\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\s)*(\\+[^+]+?\\+)((?=\\W|\\n|$))\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"GenericDeleted\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\s)*(_[^_]+?_)((?=\\W|\\n|$))\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"GenericUnderline\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(&lt;)([^&lt;&gt;]+?)(&gt;)\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"LiteralString\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"[{]{3}[^}]+[}]{3}\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"([^[])(\\[fn:)([^]]+?)(\\])([^]])\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"NameBuiltinPseudo\"/>\n+          <token type=\"LiteralString\"/>\n+          <token type=\"NameBuiltinPseudo\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\[\\[)([^][]+?)(\\]\\[)([^][]+)(\\]\\])\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"NameAttribute\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameTag\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\[\\[)([^][]+?)(\\]\\])\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"NameAttribute\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(&lt;&lt;)([^&lt;&gt;]+?)(&gt;&gt;)\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"NameAttribute\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^( *)(\\|[ -].*?[ -]\\|)$\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"LiteralString\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\".\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "d5e3243ee99b167f0ce7a9084348f9094e915687",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/plaintext.xml",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fplaintext.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fplaintext.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fplaintext.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,21 @@\n+<lexer>\n+  <config>\n+    <name>plaintext</name>\n+    <alias>text</alias>\n+    <alias>plain</alias>\n+    <alias>no-highlight</alias>\n+    <filename>*.txt</filename>\n+    <mime_type>text/plain</mime_type>\n+    <priority>-1</priority>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\".+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "e901c1855a5dcb47ef074fa0c3dd0b32944dc161",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/postgresql_sql_dialect.xml",
      "status": "added",
      "additions": 155,
      "deletions": 0,
      "changes": 155,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpostgresql_sql_dialect.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpostgresql_sql_dialect.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpostgresql_sql_dialect.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,155 @@\n+<lexer>\n+  <config>\n+    <name>PostgreSQL SQL dialect</name>\n+    <alias>postgresql</alias>\n+    <alias>postgres</alias>\n+    <mime_type>text/x-postgresql</mime_type>\n+    <case_insensitive>true</case_insensitive>\n+    <not_multiline>true</not_multiline>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"--.*\\n?\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/\\*\">\n+        <token type=\"CommentMultiline\"/>\n+        <push state=\"multiline-comments\"/>\n+      </rule>\n+      <rule pattern=\"(bigint|bigserial|bit|bit\\s+varying|bool|boolean|box|bytea|char|character|character\\s+varying|cidr|circle|date|decimal|double\\s+precision|float4|float8|inet|int|int2|int4|int8|integer|interval|json|jsonb|line|lseg|macaddr|money|numeric|path|pg_lsn|point|polygon|real|serial|serial2|serial4|serial8|smallint|smallserial|text|time|timestamp|timestamptz|timetz|tsquery|tsvector|txid_snapshot|uuid|varbit|varchar|with\\s+time\\s+zone|without\\s+time\\s+zone|xml|anyarray|anyelement|anyenum|anynonarray|anyrange|cstring|fdw_handler|internal|language_handler|opaque|record|void)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"(?s)(DO)(\\s+)(?:(LANGUAGE)?(\\s+)(&#39;?)(\\w+)?(&#39;?)(\\s+))?(\\$)([^$]*)(\\$)(.*?)(\\$)(\\10)(\\$)\">\n+        <usingbygroup>\n+          <sublexer_name_group>6</sublexer_name_group>\n+          <code_group>12</code_group>\n+          <emitters>\n+            <token type=\"Keyword\"/>\n+            <token type=\"Text\"/>\n+            <token type=\"Keyword\"/>\n+            <token type=\"Text\"/>\n+            <token type=\"LiteralStringSingle\"/>\n+            <token type=\"LiteralStringSingle\"/>\n+            <token type=\"LiteralStringSingle\"/>\n+            <token type=\"Text\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+          </emitters>\n+        </usingbygroup>\n+      </rule>\n+      <rule pattern=\"(CURRENT_TIMESTAMP|CHARACTERISTICS|CURRENT_CATALOG|CURRENT_SCHEMA|LOCALTIMESTAMP|CONFIGURATION|AUTHORIZATION|XMLATTRIBUTES|MATERIALIZED|SERIALIZABLE|CURRENT_DATE|XMLSERIALIZE|SESSION_USER|CURRENT_ROLE|CURRENT_USER|CONCURRENTLY|CURRENT_TIME|UNENCRYPTED|UNCOMMITTED|TRANSACTION|INSENSITIVE|CONSTRAINTS|ASSIGNMENT|ASYMMETRIC|DEALLOCATE|ORDINALITY|PRIVILEGES|DEFERRABLE|PROCEDURAL|CONVERSION|REFERENCES|WHITESPACE|TABLESPACE|CONSTRAINT|CONNECTION|STATISTICS|DELIMITERS|STANDALONE|DICTIONARY|REPEATABLE|CHECKPOINT|XMLELEMENT|LC_COLLATE|SYMMETRIC|PARTITION|SEQUENCES|FUNCTIONS|IMMEDIATE|IMMUTABLE|SAVEPOINT|EXTENSION|INCLUDING|RETURNING|COLLATION|INCREMENT|EXCLUSIVE|EXCLUDING|INITIALLY|COMMITTED|INTERSECT|STATEMENT|SUBSTRING|FOLLOWING|ISOLATION|TEMPORARY|ENCRYPTED|TIMESTAMP|RECURSIVE|LEAKPROOF|PROCEDURE|LOCALTIME|XMLFOREST|XMLEXISTS|AGGREGATE|ATTRIBUTE|UNBOUNDED|ASSERTION|XMLCONCAT|DELIMITER|CHARACTER|VALIDATOR|PRECISION|PRECEDING|LC_CTYPE|SECURITY|PREPARED|PASSWORD|VALIDATE|OVERLAPS|VARIADIC|DEFAULTS|VOLATILE|DEFERRED|OPERATOR|NATIONAL|UNLOGGED|UNLISTEN|TRAILING|BACKWARD|MAXVALUE|PRESERVE|DISTINCT|LOCATION|DOCUMENT|TRUNCATE|MINVALUE|POSITION|ABSOLUTE|XMLPARSE|LANGUAGE|ENCODING|CONTINUE|TEMPLATE|INTERVAL|CASCADED|DATABASE|RELATIVE|INHERITS|COMMENTS|SNAPSHOT|RESTRICT|COALESCE|IMPLICIT|ROLLBACK|EXTERNAL|REASSIGN|SMALLINT|IDENTITY|GREATEST|SEQUENCE|FUNCTION|DISCARD|CASCADE|DECIMAL|XMLROOT|FOREIGN|FORWARD|PARTIAL|PLACING|WRAPPER|WITHOUT|OVERLAY|DECLARE|PREPARE|GRANTED|CURRENT|DEFAULT|HANDLER|PRIMARY|OPTIONS|VERSION|VERBOSE|DEFINER|VARYING|ANALYSE|VARCHAR|EXTRACT|EXPLAIN|PROGRAM|RECHECK|EXECUTE|ANALYZE|INDEXES|INHERIT|EXCLUDE|CONTENT|REFRESH|REINDEX|NUMERIC|UNKNOWN|RELEASE|NOTNULL|INSTEAD|TRUSTED|INTEGER|NOTHING|COMMENT|TRIGGER|INVOKER|BETWEEN|REPLACE|REPLICA|RESTART|BOOLEAN|NATURAL|COLLATE|RETURNS|CLUSTER|LATERAL|STORAGE|DISABLE|LEADING|MAPPING|PASSING|SESSION|CATALOG|SIMILAR|SIMPLE|LISTEN|STABLE|SERVER|DOUBLE|DOMAIN|SELECT|SECOND|CALLED|SEARCH|SCROLL|STDOUT|MINUTE|SCHEMA|STRICT|REVOKE|SYSTEM|ENABLE|COLUMN|DELETE|TABLES|BINARY|BIGINT|ISNULL|BEFORE|RENAME|ESCAPE|NOTIFY|INSERT|NOWAIT|UNIQUE|NULLIF|COMMIT|UPDATE|OBJECT|VACUUM|INLINE|OFFSET|EXCEPT|EXISTS|VALUES|FAMILY|OPTION|HEADER|CREATE|HAVING|ALWAYS|WINDOW|CURSOR|WITHIN|GLOBAL|FILTER|POLICY|ACTION|PARSER|FREEZE|ACCESS|LOCAL|LEAST|OWNER|PLANS|OWNED|FORCE|XMLPI|CYCLE|ADMIN|OUTER|AFTER|ORDER|PRIOR|WRITE|CROSS|FIRST|GRANT|QUOTE|RANGE|FETCH|ALTER|WHERE|GROUP|VIEWS|ILIKE|FALSE|VALUE|INDEX|NULLS|VALID|INNER|USING|INOUT|UNTIL|RESET|NCHAR|NAMES|ARRAY|INPUT|MONTH|RIGHT|EVENT|UNION|TYPES|TREAT|BEGIN|CLOSE|LABEL|ABORT|MATCH|TABLE|CLASS|LARGE|CHECK|SYSID|CHAIN|FLOAT|STRIP|LIMIT|STDIN|SETOF|SHARE|CACHE|START|LEVEL|NAME|MOVE|SOME|LEFT|CAST|LIKE|DROP|SHOW|ZONE|EACH|ELSE|LAST|LOAD|YEAR|BOTH|CHAR|DATA|LOCK|DESC|FROM|TEMP|OVER|JOIN|TEXT|THEN|TIME|ALSO|FULL|WORK|RULE|ROWS|INTO|TRIM|TRUE|ENUM|ONLY|TYPE|WITH|READ|REAL|COST|MODE|ROLE|CASE|WHEN|COPY|NEXT|VIEW|USER|NONE|HOLD|NULL|HOUR|OIDS|BIT|ADD|SET|YES|FOR|AND|NOT|DAY|ANY|KEY|DEC|END|ASC|OFF|ROW|INT|REF|OUT|ALL|CSV|XML|ON|AT|NO|TO|AS|IN|DO|IS|IF|BY|OR|OF)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"[+*/&lt;&gt;=~!@#%^&amp;|`?-]+\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"::\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"\\$\\d+\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+      <rule pattern=\"([0-9]*\\.[0-9]*|[0-9]+)(e[+-]?[0-9]+)?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"((?:E|U&amp;)?)(&#39;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringSingle\"/>\n+        </bygroups>\n+        <push state=\"string\"/>\n+      </rule>\n+      <rule pattern=\"((?:U&amp;)?)(&#34;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringName\"/>\n+        </bygroups>\n+        <push state=\"quoted-ident\"/>\n+      </rule>\n+      <rule pattern=\"(?s)(\\$)([^$]*)(\\$)(.*?)(\\$)(\\2)(\\$)(\\s+)(LANGUAGE)?(\\s+)(&#39;?)(\\w+)?(&#39;?)\">\n+        <usingbygroup>\n+          <sublexer_name_group>12</sublexer_name_group>\n+          <code_group>4</code_group>\n+          <emitters>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"Text\"/>\n+            <token type=\"Keyword\"/>\n+            <token type=\"Text\"/>\n+            <token type=\"LiteralStringSingle\"/>\n+            <token type=\"LiteralStringSingle\"/>\n+            <token type=\"LiteralStringSingle\"/>\n+          </emitters>\n+        </usingbygroup>\n+      </rule>\n+      <rule pattern=\"(?s)(\\$)([^$]*)(\\$)(.*?)(\\$)(\\2)(\\$)\">\n+        <token type=\"LiteralStringHeredoc\"/>\n+      </rule>\n+      <rule pattern=\"[a-z_]\\w*\">\n+        <token type=\"Name\"/>\n+      </rule>\n+      <rule pattern=\":([&#39;&#34;]?)[a-z]\\w*\\b\\1\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+      <rule pattern=\"[;:()\\[\\]{},.]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+    </state>\n+    <state name=\"multiline-comments\">\n+      <rule pattern=\"/\\*\">\n+        <token type=\"CommentMultiline\"/>\n+        <push state=\"multiline-comments\"/>\n+      </rule>\n+      <rule pattern=\"\\*/\">\n+        <token type=\"CommentMultiline\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"[^/*]+\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"[/*]\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"[^&#39;]+\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"&#39;&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"quoted-ident\">\n+      <rule pattern=\"[^&#34;]+\">\n+        <token type=\"LiteralStringName\"/>\n+      </rule>\n+      <rule pattern=\"&#34;&#34;\">\n+        <token type=\"LiteralStringName\"/>\n+      </rule>\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralStringName\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "157d321f8b224370cd0efd74675f24274a6515b1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/protocol_buffer.xml",
      "status": "renamed",
      "additions": 27,
      "deletions": 27,
      "changes": 54,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fprotocol_buffer.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fprotocol_buffer.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fprotocol_buffer.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -6,6 +6,33 @@\n     <filename>*.proto</filename>\n   </config>\n   <rules>\n+    <state name=\"package\">\n+      <rule pattern=\"[a-zA-Z_]\\w*\">\n+        <token type=\"NameNamespace\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"message\">\n+      <rule pattern=\"[a-zA-Z_]\\w*\">\n+        <token type=\"NameClass\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"type\">\n+      <rule pattern=\"[a-zA-Z_]\\w*\">\n+        <token type=\"Name\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n     <state name=\"root\">\n       <rule pattern=\"[ \\t]+\">\n         <token type=\"Text\"/>\n@@ -87,32 +114,5 @@\n         <token type=\"Name\"/>\n       </rule>\n     </state>\n-    <state name=\"package\">\n-      <rule pattern=\"[a-zA-Z_]\\w*\">\n-        <token type=\"NameNamespace\"/>\n-        <pop depth=\"1\"/>\n-      </rule>\n-      <rule>\n-        <pop depth=\"1\"/>\n-      </rule>\n-    </state>\n-    <state name=\"message\">\n-      <rule pattern=\"[a-zA-Z_]\\w*\">\n-        <token type=\"NameClass\"/>\n-        <pop depth=\"1\"/>\n-      </rule>\n-      <rule>\n-        <pop depth=\"1\"/>\n-      </rule>\n-    </state>\n-    <state name=\"type\">\n-      <rule pattern=\"[a-zA-Z_]\\w*\">\n-        <token type=\"Name\"/>\n-        <pop depth=\"1\"/>\n-      </rule>\n-      <rule>\n-        <pop depth=\"1\"/>\n-      </rule>\n-    </state>\n   </rules>\n </lexer>\n\\ No newline at end of file",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/protobuf.xml"
    },
    {
      "sha": "21f21c65c17c9e459e904cc9196e314f5aa8f573",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/prql.xml",
      "status": "added",
      "additions": 161,
      "deletions": 0,
      "changes": 161,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fprql.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fprql.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fprql.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,161 @@\n+<lexer>\n+  <config>\n+    <name>PRQL</name>\n+    <alias>prql</alias>\n+    <filename>*.prql</filename>\n+    <mime_type>application/prql</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"#!.*\"><token type=\"LiteralStringDoc\"/></rule>\n+      <rule pattern=\"#.*\"><token type=\"CommentSingle\"/></rule>\n+      <rule pattern=\"\\s+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\"^(\\s*)(module)(\\s*)\"><bygroups><token type=\"TextWhitespace\"/><token type=\"KeywordNamespace\"/><token type=\"TextWhitespace\"/></bygroups><push state=\"imports\"/></rule>\n+      <rule pattern=\"(bool|int|int8|int16|int32|int64|int128|float|text|set)\\b\"><token type=\"KeywordType\"/></rule>\n+      <rule pattern=\"^prql \"><token type=\"KeywordReserved\"/></rule>\n+      <rule pattern=\"let\"><token type=\"KeywordDeclaration\"/></rule>\n+      <rule><include state=\"keywords\"/></rule>\n+      <rule><include state=\"expr\"/></rule>\n+      <rule pattern=\"^[A-Za-z_][a-zA-Z0-9_]*\"><token type=\"Keyword\"/></rule>\n+    </state>\n+    <state name=\"expr\">\n+      <rule pattern=\"(f)(&quot;&quot;&quot;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralStringDouble\"/></bygroups><combined state=\"fstringescape\" state=\"tdqf\"/></rule>\n+      <rule pattern=\"(f)(&#x27;&#x27;&#x27;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralStringSingle\"/></bygroups><combined state=\"fstringescape\" state=\"tsqf\"/></rule>\n+      <rule pattern=\"(f)(&quot;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralStringDouble\"/></bygroups><combined state=\"fstringescape\" state=\"dqf\"/></rule>\n+      <rule pattern=\"(f)(&#x27;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralStringSingle\"/></bygroups><combined state=\"fstringescape\" state=\"sqf\"/></rule>\n+      <rule pattern=\"(s)(&quot;&quot;&quot;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralStringDouble\"/></bygroups><combined state=\"stringescape\" state=\"tdqf\"/></rule>\n+      <rule pattern=\"(s)(&#x27;&#x27;&#x27;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralStringSingle\"/></bygroups><combined state=\"stringescape\" state=\"tsqf\"/></rule>\n+      <rule pattern=\"(s)(&quot;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralStringDouble\"/></bygroups><combined state=\"stringescape\" state=\"dqf\"/></rule>\n+      <rule pattern=\"(s)(&#x27;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralStringSingle\"/></bygroups><combined state=\"stringescape\" state=\"sqf\"/></rule>\n+      <rule pattern=\"(?i)(r)(&quot;&quot;&quot;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralStringDouble\"/></bygroups><push state=\"tdqs\"/></rule>\n+      <rule pattern=\"(?i)(r)(&#x27;&#x27;&#x27;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralStringSingle\"/></bygroups><push state=\"tsqs\"/></rule>\n+      <rule pattern=\"(?i)(r)(&quot;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralStringDouble\"/></bygroups><push state=\"dqs\"/></rule>\n+      <rule pattern=\"(?i)(r)(&#x27;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralStringSingle\"/></bygroups><push state=\"sqs\"/></rule>\n+      <rule pattern=\"&quot;&quot;&quot;\"><token type=\"LiteralStringDouble\"/><combined state=\"stringescape\" state=\"tdqs\"/></rule>\n+      <rule pattern=\"&#x27;&#x27;&#x27;\"><token type=\"LiteralStringSingle\"/><combined state=\"stringescape\" state=\"tsqs\"/></rule>\n+      <rule pattern=\"&quot;\"><token type=\"LiteralStringDouble\"/><combined state=\"stringescape\" state=\"dqs\"/></rule>\n+      <rule pattern=\"&#x27;\"><token type=\"LiteralStringSingle\"/><combined state=\"stringescape\" state=\"sqs\"/></rule>\n+      <rule pattern=\"@\\d{4}-\\d{2}-\\d{2}T\\d{2}(:\\d{2})?(:\\d{2})?(\\.\\d{1,6})?(Z|[+-]\\d{1,2}(:\\d{1,2})?)?\"><token type=\"LiteralDate\"/></rule>\n+      <rule pattern=\"@\\d{4}-\\d{2}-\\d{2}\"><token type=\"LiteralDate\"/></rule>\n+      <rule pattern=\"@\\d{2}(:\\d{2})?(:\\d{2})?(\\.\\d{1,6})?(Z|[+-]\\d{1,2}(:\\d{1,2})?)?\"><token type=\"LiteralDate\"/></rule>\n+      <rule pattern=\"[^\\S\\n]+\"><token type=\"Text\"/></rule>\n+      <rule><include state=\"numbers\"/></rule>\n+      <rule pattern=\"-&gt;|=&gt;|==|!=|&gt;=|&lt;=|~=|&amp;&amp;|\\|\\||\\?\\?|\\/\\/\"><token type=\"Operator\"/></rule>\n+      <rule pattern=\"[-~+/*%=&lt;&gt;&amp;^|.@]\"><token type=\"Operator\"/></rule>\n+      <rule pattern=\"[]{}:(),;[]\"><token type=\"Punctuation\"/></rule>\n+      <rule><include state=\"functions\"/></rule>\n+      <rule pattern=\"[A-Za-z_][a-zA-Z0-9_]*\"><token type=\"NameVariable\"/></rule>\n+    </state>\n+    <state name=\"numbers\">\n+      <rule pattern=\"(\\d(?:_?\\d)*\\.(?:\\d(?:_?\\d)*)?|(?:\\d(?:_?\\d)*)?\\.\\d(?:_?\\d)*)([eE][+-]?\\d(?:_?\\d)*)?\"><token type=\"LiteralNumberFloat\"/></rule>\n+      <rule pattern=\"\\d(?:_?\\d)*[eE][+-]?\\d(?:_?\\d)*j?\"><token type=\"LiteralNumberFloat\"/></rule>\n+      <rule pattern=\"0[oO](?:_?[0-7])+\"><token type=\"LiteralNumberOct\"/></rule>\n+      <rule pattern=\"0[bB](?:_?[01])+\"><token type=\"LiteralNumberBin\"/></rule>\n+      <rule pattern=\"0[xX](?:_?[a-fA-F0-9])+\"><token type=\"LiteralNumberHex\"/></rule>\n+      <rule pattern=\"\\d(?:_?\\d)*\"><token type=\"LiteralNumberInteger\"/></rule>\n+    </state>\n+    <state name=\"fstringescape\">\n+      <rule><include state=\"stringescape\"/></rule>\n+    </state>\n+    <state name=\"bytesescape\">\n+      <rule pattern=\"\\\\([\\\\bfnrt&quot;\\&#x27;]|\\n|x[a-fA-F0-9]{2}|[0-7]{1,3})\"><token type=\"LiteralStringEscape\"/></rule>\n+    </state>\n+    <state name=\"stringescape\">\n+      <rule pattern=\"\\\\(N\\{.*?\\}|u\\{[a-fA-F0-9]{1,6}\\})\"><token type=\"LiteralStringEscape\"/></rule>\n+      <rule><include state=\"bytesescape\"/></rule>\n+    </state>\n+    <state name=\"fstrings-single\">\n+      <rule pattern=\"\\}\"><token type=\"LiteralStringInterpol\"/></rule>\n+      <rule pattern=\"\\{\"><token type=\"LiteralStringInterpol\"/><push state=\"expr-inside-fstring\"/></rule>\n+      <rule pattern=\"[^\\\\\\&#x27;&quot;{}\\n]+\"><token type=\"LiteralStringSingle\"/></rule>\n+      <rule pattern=\"[\\&#x27;&quot;\\\\]\"><token type=\"LiteralStringSingle\"/></rule>\n+    </state>\n+    <state name=\"fstrings-double\">\n+      <rule pattern=\"\\}\"><token type=\"LiteralStringInterpol\"/></rule>\n+      <rule pattern=\"\\{\"><token type=\"LiteralStringInterpol\"/><push state=\"expr-inside-fstring\"/></rule>\n+      <rule pattern=\"[^\\\\\\&#x27;&quot;{}\\n]+\"><token type=\"LiteralStringDouble\"/></rule>\n+      <rule pattern=\"[\\&#x27;&quot;\\\\]\"><token type=\"LiteralStringDouble\"/></rule>\n+    </state>\n+    <state name=\"strings-single\">\n+      <rule pattern=\"\\{((\\w+)((\\.\\w+)|(\\[[^\\]]+\\]))*)?(\\:(.?[&lt;&gt;=\\^])?[-+ ]?#?0?(\\d+)?,?(\\.\\d+)?[E-GXb-gnosx%]?)?\\}\"><token type=\"LiteralStringInterpol\"/></rule>\n+      <rule pattern=\"[^\\\\\\&#x27;&quot;%{\\n]+\"><token type=\"LiteralStringSingle\"/></rule>\n+      <rule pattern=\"[\\&#x27;&quot;\\\\]\"><token type=\"LiteralStringSingle\"/></rule>\n+      <rule pattern=\"%|(\\{{1,2})\"><token type=\"LiteralStringSingle\"/></rule>\n+    </state>\n+    <state name=\"strings-double\">\n+      <rule pattern=\"\\{((\\w+)((\\.\\w+)|(\\[[^\\]]+\\]))*)?(\\:(.?[&lt;&gt;=\\^])?[-+ ]?#?0?(\\d+)?,?(\\.\\d+)?[E-GXb-gnosx%]?)?\\}\"><token type=\"LiteralStringInterpol\"/></rule>\n+      <rule pattern=\"[^\\\\\\&#x27;&quot;%{\\n]+\"><token type=\"LiteralStringDouble\"/></rule>\n+      <rule pattern=\"[\\&#x27;&quot;\\\\]\"><token type=\"LiteralStringDouble\"/></rule>\n+      <rule pattern=\"%|(\\{{1,2})\"><token type=\"LiteralStringDouble\"/></rule>\n+    </state>\n+    <state name=\"dqf\">\n+      <rule pattern=\"&quot;\"><token type=\"LiteralStringDouble\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\\\\\\\|\\\\&quot;|\\\\\\n\"><token type=\"LiteralStringEscape\"/></rule>\n+      <rule><include state=\"fstrings-double\"/></rule>\n+    </state>\n+    <state name=\"sqf\">\n+      <rule pattern=\"&#x27;\"><token type=\"LiteralStringSingle\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\\\\\\\|\\\\&#x27;|\\\\\\n\"><token type=\"LiteralStringEscape\"/></rule>\n+      <rule><include state=\"fstrings-single\"/></rule>\n+    </state>\n+    <state name=\"dqs\">\n+      <rule pattern=\"&quot;\"><token type=\"LiteralStringDouble\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\\\\\\\|\\\\&quot;|\\\\\\n\"><token type=\"LiteralStringEscape\"/></rule>\n+      <rule><include state=\"strings-double\"/></rule>\n+    </state>\n+    <state name=\"sqs\">\n+      <rule pattern=\"&#x27;\"><token type=\"LiteralStringSingle\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\\\\\\\|\\\\&#x27;|\\\\\\n\"><token type=\"LiteralStringEscape\"/></rule>\n+      <rule><include state=\"strings-single\"/></rule>\n+    </state>\n+    <state name=\"tdqf\">\n+      <rule pattern=\"&quot;&quot;&quot;\"><token type=\"LiteralStringDouble\"/><pop depth=\"1\"/></rule>\n+      <rule><include state=\"fstrings-double\"/></rule>\n+      <rule pattern=\"\\n\"><token type=\"LiteralStringDouble\"/></rule>\n+    </state>\n+    <state name=\"tsqf\">\n+      <rule pattern=\"&#x27;&#x27;&#x27;\"><token type=\"LiteralStringSingle\"/><pop depth=\"1\"/></rule>\n+      <rule><include state=\"fstrings-single\"/></rule>\n+      <rule pattern=\"\\n\"><token type=\"LiteralStringSingle\"/></rule>\n+    </state>\n+    <state name=\"tdqs\">\n+      <rule pattern=\"&quot;&quot;&quot;\"><token type=\"LiteralStringDouble\"/><pop depth=\"1\"/></rule>\n+      <rule><include state=\"strings-double\"/></rule>\n+      <rule pattern=\"\\n\"><token type=\"LiteralStringDouble\"/></rule>\n+    </state>\n+    <state name=\"tsqs\">\n+      <rule pattern=\"&#x27;&#x27;&#x27;\"><token type=\"LiteralStringSingle\"/><pop depth=\"1\"/></rule>\n+      <rule><include state=\"strings-single\"/></rule>\n+      <rule pattern=\"\\n\"><token type=\"LiteralStringSingle\"/></rule>\n+    </state>\n+    <state name=\"expr-inside-fstring\">\n+      <rule pattern=\"[{([]\"><token type=\"Punctuation\"/><push state=\"expr-inside-fstring-inner\"/></rule>\n+      <rule pattern=\"(=\\s*)?\\}\"><token type=\"LiteralStringInterpol\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"(=\\s*)?:\"><token type=\"LiteralStringInterpol\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\s+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule><include state=\"expr\"/></rule>\n+    </state>\n+    <state name=\"expr-inside-fstring-inner\">\n+      <rule pattern=\"[{([]\"><token type=\"Punctuation\"/><push state=\"expr-inside-fstring-inner\"/></rule>\n+      <rule pattern=\"[])}]\"><token type=\"Punctuation\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\s+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule><include state=\"expr\"/></rule>\n+    </state>\n+    <state name=\"keywords\">\n+      <rule pattern=\"(into|case|type|module|internal)\\b\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"(true|false|null)\\b\"><token type=\"KeywordConstant\"/></rule>\n+    </state>\n+    <state name=\"functions\">\n+      <rule pattern=\"(min|max|sum|average|stddev|every|any|concat_array|count|lag|lead|first|last|rank|rank_dense|row_number|round|as|in|tuple_every|tuple_map|tuple_zip|_eq|_is_null|from_text|lower|upper|read_parquet|read_csv)\\b\"><token type=\"NameFunction\"/></rule>\n+    </state>\n+    <state name=\"comment\">\n+      <rule pattern=\"-(?!\\})\"><token type=\"CommentMultiline\"/></rule>\n+      <rule pattern=\"\\{-\"><token type=\"CommentMultiline\"/><push state=\"comment\"/></rule>\n+      <rule pattern=\"[^-}]\"><token type=\"CommentMultiline\"/></rule>\n+      <rule pattern=\"-\\}\"><token type=\"CommentMultiline\"/><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"imports\">\n+      <rule pattern=\"\\w+(\\.\\w+)*\"><token type=\"NameClass\"/><pop depth=\"1\"/></rule>\n+    </state>\n+  </rules>\n+</lexer>"
    },
    {
      "sha": "c1fba4e5ef9a0ec89971fe702ac0466386b966b5",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/r.xml",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fr.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fr.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fr.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -17,6 +17,7 @@\n     <mime_type>text/x-R</mime_type>\n     <mime_type>text/x-r-history</mime_type>\n     <mime_type>text/x-r-profile</mime_type>\n+    <priority>0.1</priority> <!-- higher priority than Rebol -->\n   </config>\n   <rules>\n     <state name=\"numbers\">\n@@ -36,6 +37,9 @@\n       </rule>\n     </state>\n     <state name=\"root\">\n+      <rule>\n+        <include state=\"keywords\"/>\n+      </rule>\n       <rule pattern=\"((?:`[^`\\\\]*(?:\\\\.[^`\\\\]*)*`)|(?:(?:[a-zA-z]|[_.][^0-9])[\\w_.]*))\\s*(?=\\()\">\n         <token type=\"NameFunction\"/>\n       </rule>\n@@ -107,9 +111,6 @@\n       <rule>\n         <include state=\"numbers\"/>\n       </rule>\n-      <rule>\n-        <include state=\"keywords\"/>\n-      </rule>\n       <rule>\n         <include state=\"punctuation\"/>\n       </rule>"
    },
    {
      "sha": "baa7e435946a8388ff77c7318987be26203962e2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/ruby.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fruby.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fruby.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fruby.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -12,6 +12,7 @@\n     <filename>*.rbx</filename>\n     <filename>*.duby</filename>\n     <filename>Gemfile</filename>\n+    <filename>Vagrantfile</filename>\n     <mime_type>text/x-ruby</mime_type>\n     <mime_type>application/x-ruby</mime_type>\n     <dot_all>true</dot_all>"
    },
    {
      "sha": "dd7752c586bcff30be53d5aa580c700e6a339397",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/smarty.xml",
      "status": "added",
      "additions": 79,
      "deletions": 0,
      "changes": 79,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fsmarty.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fsmarty.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fsmarty.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,79 @@\n+<lexer>\n+  <config>\n+    <name>Smarty</name>\n+    <alias>smarty</alias>\n+    <filename>*.tpl</filename>\n+    <mime_type>application/x-smarty</mime_type>\n+    <dot_all>true</dot_all>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"[^{]+\">\n+        <token type=\"Other\"/>\n+      </rule>\n+      <rule pattern=\"(\\{)(\\*.*?\\*)(\\})\">\n+        <bygroups>\n+          <token type=\"CommentPreproc\"/>\n+          <token type=\"Comment\"/>\n+          <token type=\"CommentPreproc\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\{php\\})(.*?)(\\{/php\\})\">\n+        <bygroups>\n+          <token type=\"CommentPreproc\"/>\n+          <using lexer=\"PHP\"/>\n+          <token type=\"CommentPreproc\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\{)(/?[a-zA-Z_]\\w*)(\\s*)\">\n+        <bygroups>\n+          <token type=\"CommentPreproc\"/>\n+          <token type=\"NameFunction\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+        <push state=\"smarty\"/>\n+      </rule>\n+      <rule pattern=\"\\{\">\n+        <token type=\"CommentPreproc\"/>\n+        <push state=\"smarty\"/>\n+      </rule>\n+    </state>\n+    <state name=\"smarty\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\{\">\n+        <token type=\"CommentPreproc\"/>\n+        <push/>\n+      </rule>\n+      <rule pattern=\"\\}\">\n+        <token type=\"CommentPreproc\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"#[a-zA-Z_]\\w*#\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+      <rule pattern=\"\\$[a-zA-Z_]\\w*(\\.\\w+)*\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+      <rule pattern=\"[~!%^&amp;*()+=|\\[\\]:;,.&lt;&gt;/?@-]\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"(true|false|null)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"[0-9](\\.[0-9]*)?(eE[+-][0-9])?[flFLdD]?|0[xX][0-9a-fA-F]+[Ll]?\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"&#34;(\\\\\\\\|\\\\&#34;|[^&#34;])*&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"&#39;(\\\\\\\\|\\\\&#39;|[^&#39;])*&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"[a-zA-Z_]\\w*\">\n+        <token type=\"NameAttribute\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "caca401e3e3ff2e8f6ec8efc69bc546fd5c5aaa2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/sourcepawn.xml",
      "status": "added",
      "additions": 59,
      "deletions": 0,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fsourcepawn.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fsourcepawn.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fsourcepawn.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,59 @@\n+<lexer>\n+  <config>\n+    <name>SourcePawn</name>\n+    <alias>sp</alias>\n+    <filename>*.sp</filename>\n+    <filename>*.inc</filename>\n+    <mime_type>text/x-sourcepawn</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"^#if\\s+0\"><token type=\"CommentPreproc\"/><push state=\"if0\"/></rule>\n+      <rule pattern=\"^#\"><token type=\"CommentPreproc\"/><push state=\"macro\"/></rule>\n+      <rule pattern=\"^\\s*(?:/[*].*?[*]/\\s*)*#if\\s+0\"><token type=\"CommentPreproc\"/><push state=\"if0\"/></rule>\n+      <rule pattern=\"^\\s*(?:/[*].*?[*]/\\s*)*#\"><token type=\"CommentPreproc\"/><push state=\"macro\"/></rule>\n+      <rule pattern=\"\\n\"><token type=\"Text\"/></rule>\n+      <rule pattern=\"\\s+\"><token type=\"Text\"/></rule>\n+      <rule pattern=\"\\\\\\n\"><token type=\"Text\"/></rule>\n+      <rule pattern=\"/(\\\\\\n)?/(\\n|(.|\\n)*?[^\\\\]\\n)\"><token type=\"CommentSingle\"/></rule>\n+      <rule pattern=\"/(\\\\\\n)?\\*(.|\\n)*?\\*(\\\\\\n)?/\"><token type=\"CommentMultiline\"/></rule>\n+      <rule pattern=\"[{}]\"><token type=\"Punctuation\"/></rule>\n+      <rule pattern=\"L?&quot;\"><token type=\"LiteralString\"/><push state=\"string\"/></rule>\n+      <rule pattern=\"L?&#x27;(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,2}|[^\\\\\\&#x27;\\n])&#x27;\"><token type=\"LiteralStringChar\"/></rule>\n+      <rule pattern=\"(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+[LlUu]*\"><token type=\"LiteralNumberFloat\"/></rule>\n+      <rule pattern=\"(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?\"><token type=\"LiteralNumberFloat\"/></rule>\n+      <rule pattern=\"0x[0-9a-fA-F]+[LlUu]*\"><token type=\"LiteralNumberHex\"/></rule>\n+      <rule pattern=\"0[0-7]+[LlUu]*\"><token type=\"LiteralNumberOct\"/></rule>\n+      <rule pattern=\"\\d+[LlUu]*\"><token type=\"LiteralNumberInteger\"/></rule>\n+      <rule pattern=\"[~!%^&amp;*+=|?:&lt;&gt;/-]\"><token type=\"Operator\"/></rule>\n+      <rule pattern=\"[()\\[\\],.;]\"><token type=\"Punctuation\"/></rule>\n+      <rule pattern=\"(case|const|continue|native|default|else|enum|for|if|new|operator|public|return|sizeof|static|decl|struct|switch)\\b\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"(bool|float|void|int|char)\\b\"><token type=\"KeywordType\"/></rule>\n+      <rule pattern=\"(true|false)\\b\"><token type=\"KeywordConstant\"/></rule>\n+      <rule pattern=\"[a-zA-Z_]\\w*\"><token type=\"Name\"/></rule>\n+      <rule pattern=\"((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;{]*)(\\{)\"><bygroups><usingself state=\"root\"/><token type=\"NameFunction\"/><usingself state=\"root\"/><usingself state=\"root\"/><token type=\"Punctuation\"/></bygroups><push state=\"function\"/></rule>\n+      <rule pattern=\"((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;]*)(;)\"><bygroups><usingself state=\"root\"/><token type=\"NameFunction\"/><usingself state=\"root\"/><usingself state=\"root\"/><token type=\"Punctuation\"/></bygroups></rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"&quot;\"><token type=\"LiteralString\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\\\([\\\\abfnrtv&quot;\\&#x27;]|x[a-fA-F0-9]{2,4}|[0-7]{1,3})\"><token type=\"LiteralStringEscape\"/></rule>\n+      <rule pattern=\"[^\\\\&quot;\\n]+\"><token type=\"LiteralString\"/></rule>\n+      <rule pattern=\"\\\\\\n\"><token type=\"LiteralString\"/></rule>\n+      <rule pattern=\"\\\\\"><token type=\"LiteralString\"/></rule>\n+    </state>\n+    <state name=\"macro\">\n+      <rule pattern=\"(include)(\\s*(?:/[*].*?[*]/\\s*)?)([^\\n]+)\"><bygroups><token type=\"CommentPreproc\"/><token type=\"Text\"/><token type=\"CommentPreprocFile\"/></bygroups></rule>\n+      <rule pattern=\"[^/\\n]+\"><token type=\"CommentPreproc\"/></rule>\n+      <rule pattern=\"/\\*(.|\\n)*?\\*/\"><token type=\"CommentMultiline\"/></rule>\n+      <rule pattern=\"//.*?\\n\"><token type=\"CommentSingle\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"/\"><token type=\"CommentPreproc\"/></rule>\n+      <rule pattern=\"(?&lt;=\\\\)\\n\"><token type=\"CommentPreproc\"/></rule>\n+      <rule pattern=\"\\n\"><token type=\"CommentPreproc\"/><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"if0\">\n+      <rule pattern=\"^\\s*#if.*?(?&lt;!\\\\)\\n\"><token type=\"CommentPreproc\"/><push/></rule>\n+      <rule pattern=\"^\\s*#endif.*?(?&lt;!\\\\)\\n\"><token type=\"CommentPreproc\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\".*?\\n\"><token type=\"Comment\"/></rule>\n+    </state>\n+  </rules>\n+</lexer>"
    },
    {
      "sha": "9c98ba534c768513d29ac41a9786f32665f12ffb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/toml.xml",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ftoml.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ftoml.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ftoml.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -3,6 +3,8 @@\n     <name>TOML</name>\n     <alias>toml</alias>\n     <filename>*.toml</filename>\n+    <filename>Pipfile</filename>\n+    <filename>poetry.lock</filename>\n     <mime_type>text/x-toml</mime_type>\n   </config>\n   <rules>"
    },
    {
      "sha": "de95c5f9131dfd8e1dc8b944bd595ef94f236f31",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/twig.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ftwig.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ftwig.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ftwig.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2,6 +2,7 @@\n   <config>\n     <name>Twig</name>\n     <alias>twig</alias>\n+    <filename>*.twig</filename>\n     <mime_type>application/x-twig</mime_type>\n     <dot_all>true</dot_all>\n   </config>"
    },
    {
      "sha": "bc416d4726d150a0eb85c3349e14a753348933fb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/typoscript.xml",
      "status": "added",
      "additions": 178,
      "deletions": 0,
      "changes": 178,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ftyposcript.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ftyposcript.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ftyposcript.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,178 @@\n+<lexer>\n+  <config>\n+    <name>TypoScript</name>\n+    <alias>typoscript</alias>\n+    <filename>*.ts</filename>\n+    <mime_type>text/x-typoscript</mime_type>\n+    <dot_all>true</dot_all>\n+    <priority>0.1</priority>\n+  </config>\n+  <rules>\n+    <state name=\"whitespace\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+    <state name=\"html\">\n+      <rule pattern=\"&lt;\\S[^\\n&gt;]*&gt;\">\n+        <using lexer=\"TypoScriptHTMLData\"/>\n+      </rule>\n+      <rule pattern=\"&amp;[^;\\n]*;\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"(_CSS_DEFAULT_STYLE)(\\s*)(\\()(?s)(.*(?=\\n\\)))\">\n+        <bygroups>\n+          <token type=\"NameClass\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"LiteralStringSymbol\"/>\n+          <using lexer=\"TypoScriptCSSData\"/>\n+        </bygroups>\n+      </rule>\n+    </state>\n+    <state name=\"operator\">\n+      <rule pattern=\"[&lt;&gt;,:=.*%+|]\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+    </state>\n+    <state name=\"structure\">\n+      <rule pattern=\"[{}()\\[\\]\\\\]\">\n+        <token type=\"LiteralStringSymbol\"/>\n+      </rule>\n+    </state>\n+    <state name=\"constant\">\n+      <rule pattern=\"(\\{)(\\$)((?:[\\w\\-]+\\.)*)([\\w\\-]+)(\\})\">\n+        <bygroups>\n+          <token type=\"LiteralStringSymbol\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"NameConstant\"/>\n+          <token type=\"NameConstant\"/>\n+          <token type=\"LiteralStringSymbol\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\{)([\\w\\-]+)(\\s*:\\s*)([\\w\\-]+)(\\})\">\n+        <bygroups>\n+          <token type=\"LiteralStringSymbol\"/>\n+          <token type=\"NameConstant\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"NameConstant\"/>\n+          <token type=\"LiteralStringSymbol\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(#[a-fA-F0-9]{6}\\b|#[a-fA-F0-9]{3}\\b)\">\n+        <token type=\"LiteralStringChar\"/>\n+      </rule>\n+    </state>\n+    <state name=\"comment\">\n+      <rule pattern=\"(?&lt;!(#|\\&#39;|&#34;))(?:#(?!(?:[a-fA-F0-9]{6}|[a-fA-F0-9]{3}))[^\\n#]+|//[^\\n]*)\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"/\\*(?:(?!\\*/).)*\\*/\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"(\\s*#\\s*\\n)\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule>\n+        <include state=\"comment\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"constant\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"html\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"label\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"whitespace\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"keywords\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"punctuation\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"operator\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"structure\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"literal\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"other\"/>\n+      </rule>\n+    </state>\n+    <state name=\"literal\">\n+      <rule pattern=\"0x[0-9A-Fa-f]+t?\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"(###\\w+###)\">\n+        <token type=\"NameConstant\"/>\n+      </rule>\n+    </state>\n+    <state name=\"label\">\n+      <rule pattern=\"(EXT|FILE|LLL):[^}\\n&#34;]*\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"(?![^\\w\\-])([\\w\\-]+(?:/[\\w\\-]+)+/?)(\\S*\\n)\">\n+        <bygroups>\n+          <token type=\"LiteralString\"/>\n+          <token type=\"LiteralString\"/>\n+        </bygroups>\n+      </rule>\n+    </state>\n+    <state name=\"punctuation\">\n+      <rule pattern=\"[,.]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+    </state>\n+    <state name=\"other\">\n+      <rule pattern=\"[\\w&#34;\\-!/&amp;;]+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+    <state name=\"keywords\">\n+      <rule pattern=\"(\\[)(?i)(browser|compatVersion|dayofmonth|dayofweek|dayofyear|device|ELSE|END|GLOBAL|globalString|globalVar|hostname|hour|IP|language|loginUser|loginuser|minute|month|page|PIDinRootline|PIDupinRootline|system|treeLevel|useragent|userFunc|usergroup|version)([^\\]]*)(\\])\">\n+        <bygroups>\n+          <token type=\"LiteralStringSymbol\"/>\n+          <token type=\"NameConstant\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"LiteralStringSymbol\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?=[\\w\\-])(HTMLparser|HTMLparser_tags|addParams|cache|encapsLines|filelink|if|imageLinkWrap|imgResource|makelinks|numRows|numberFormat|parseFunc|replacement|round|select|split|stdWrap|strPad|tableStyle|tags|textStyle|typolink)(?![\\w\\-])\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"(?:(=?\\s*&lt;?\\s+|^\\s*))(cObj|field|config|content|constants|FEData|file|frameset|includeLibs|lib|page|plugin|register|resources|sitemap|sitetitle|styles|temp|tt_[^:.\\s]*|types|xmlnews|INCLUDE_TYPOSCRIPT|_CSS_DEFAULT_STYLE|_DEFAULT_PI_VARS|_LOCAL_LANG)(?![\\w\\-])\">\n+        <bygroups>\n+          <token type=\"Operator\"/>\n+          <token type=\"NameBuiltin\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?=[\\w\\-])(CASE|CLEARGIF|COA|COA_INT|COBJ_ARRAY|COLUMNS|CONTENT|CTABLE|EDITPANEL|FILE|FILES|FLUIDTEMPLATE|FORM|HMENU|HRULER|HTML|IMAGE|IMGTEXT|IMG_RESOURCE|LOAD_REGISTER|MEDIA|MULTIMEDIA|OTABLE|PAGE|QTOBJECT|RECORDS|RESTORE_REGISTER|SEARCHRESULT|SVG|SWFOBJECT|TEMPLATE|TEXT|USER|USER_INT)(?![\\w\\-])\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+      <rule pattern=\"(?=[\\w\\-])(ACTIFSUBRO|ACTIFSUB|ACTRO|ACT|CURIFSUBRO|CURIFSUB|CURRO|CUR|IFSUBRO|IFSUB|NO|SPC|USERDEF1RO|USERDEF1|USERDEF2RO|USERDEF2|USRRO|USR)\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+      <rule pattern=\"(?=[\\w\\-])(GMENU_FOLDOUT|GMENU_LAYERS|GMENU|IMGMENUITEM|IMGMENU|JSMENUITEM|JSMENU|TMENUITEM|TMENU_LAYERS|TMENU)\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+      <rule pattern=\"(?=[\\w\\-])(PHP_SCRIPT(_EXT|_INT)?)\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+      <rule pattern=\"(?=[\\w\\-])(userFunc)(?![\\w\\-])\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "054fa8913c8b63f1202840f94c8016f1940b78b7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/ucode.xml",
      "status": "added",
      "additions": 147,
      "deletions": 0,
      "changes": 147,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fucode.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fucode.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fucode.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,147 @@\n+<lexer>\n+  <config>\n+    <name>ucode</name>\n+    <filename>*.uc</filename>\n+    <mime_type>application/x.ucode</mime_type>\n+    <mime_type>text/x.ucode</mime_type>\n+    <dot_all>true</dot_all>\n+    <ensure_nl>true</ensure_nl>\n+  </config>\n+  <rules>\n+    <state name=\"interp\">\n+      <rule pattern=\"`\">\n+        <token type=\"LiteralStringBacktick\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\\\\\">\n+        <token type=\"LiteralStringBacktick\"/>\n+      </rule>\n+      <rule pattern=\"\\\\`\">\n+        <token type=\"LiteralStringBacktick\"/>\n+      </rule>\n+      <rule pattern=\"\\\\[^`\\\\]\">\n+        <token type=\"LiteralStringBacktick\"/>\n+      </rule>\n+      <rule pattern=\"\\$\\{\">\n+        <token type=\"LiteralStringInterpol\"/>\n+        <push state=\"interp-inside\"/>\n+      </rule>\n+      <rule pattern=\"\\$\">\n+        <token type=\"LiteralStringBacktick\"/>\n+      </rule>\n+      <rule pattern=\"[^`\\\\$]+\">\n+        <token type=\"LiteralStringBacktick\"/>\n+      </rule>\n+    </state>\n+    <state name=\"interp-inside\">\n+      <rule pattern=\"\\}\">\n+        <token type=\"LiteralStringInterpol\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"root\"/>\n+      </rule>\n+    </state>\n+    <state name=\"commentsandwhitespace\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"&lt;!--\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"//.*?\\n\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/\\*.*?\\*/\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+    </state>\n+    <state name=\"slashstartsregex\">\n+      <rule>\n+        <include state=\"commentsandwhitespace\"/>\n+      </rule>\n+      <rule pattern=\"/(\\\\.|[^[/\\\\\\n]|\\[(\\\\.|[^\\]\\\\\\n])*])+/([gimuy]+\\b|\\B)\">\n+        <token type=\"LiteralStringRegex\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"(?=/)\">\n+        <token type=\"Text\"/>\n+        <push state=\"#pop\" state=\"badregex\"/>\n+      </rule>\n+      <rule>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"badregex\">\n+      <rule pattern=\"\\n\">\n+        <token type=\"Text\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule pattern=\"\\A#! ?/.*?\\n\">\n+        <token type=\"CommentHashbang\"/>\n+      </rule>\n+      <rule pattern=\"^(?=\\s|/|&lt;!--)\">\n+        <token type=\"Text\"/>\n+        <push state=\"slashstartsregex\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"commentsandwhitespace\"/>\n+      </rule>\n+      <rule pattern=\"\\d+(\\.\\d*|[eE][+\\-]?\\d+)\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0[bB][01]+\">\n+        <token type=\"LiteralNumberBin\"/>\n+      </rule>\n+      <rule pattern=\"0[oO][0-7]+\">\n+        <token type=\"LiteralNumberOct\"/>\n+      </rule>\n+      <rule pattern=\"0[xX][0-9a-fA-F]+\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"[0-9][0-9_]*\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"\\.\\.\\.|=&gt;\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"\\+\\+|--|~|&amp;&amp;|\\?|:|\\|\\||\\\\(?=\\n)|(&lt;&lt;|&gt;&gt;&gt;?|==?|!=?|[-&lt;&gt;+*%&amp;|^/])=?\">\n+        <token type=\"Operator\"/>\n+        <push state=\"slashstartsregex\"/>\n+      </rule>\n+      <rule pattern=\"[{(\\[;,]\">\n+        <token type=\"Punctuation\"/>\n+        <push state=\"slashstartsregex\"/>\n+      </rule>\n+      <rule pattern=\"[})\\].]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"(import|export|from|as|for|in|while|break|return|continue|switch|case|default|if|else|try|catch|delete|this)\\b\">\n+        <token type=\"Keyword\"/>\n+        <push state=\"slashstartsregex\"/>\n+      </rule>\n+      <rule pattern=\"(const|let|function)\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+        <push state=\"slashstartsregex\"/>\n+      </rule>\n+      <rule pattern=\"(true|false|null|NaN|Infinity)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"(?:[$_\\p{L}\\p{N}]|\\\\u[a-fA-F0-9]{4})(?:(?:[$\\p{L}\\p{N}]|\\\\u[a-fA-F0-9]{4}))*\">\n+        <token type=\"NameOther\"/>\n+      </rule>\n+      <rule pattern=\"&#34;(\\\\\\\\|\\\\&#34;|[^&#34;])*&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"&#39;(\\\\\\\\|\\\\&#39;|[^&#39;])*&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"`\">\n+        <token type=\"LiteralStringBacktick\"/>\n+        <push state=\"interp\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>"
    },
    {
      "sha": "e1af3d1cd10e5f5067dbec559702ab5745d58b8e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/v.xml",
      "status": "added",
      "additions": 355,
      "deletions": 0,
      "changes": 355,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fv.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fv.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fv.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,355 @@\n+<lexer>\n+  <config>\n+    <name>V</name>\n+    <alias>v</alias>\n+    <alias>vlang</alias>\n+    <filename>*.v</filename>\n+    <filename>*.vv</filename>\n+    <filename>v.mod</filename>\n+    <mime_type>text/x-v</mime_type>\n+    <ensure_nl>true</ensure_nl>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=module\\s+\\w[^\\n]*\\s+)(//[^\\n]+\\n)+(?=\\n)\">\n+        <token type=\"LiteralStringDoc\"/>\n+      </rule>\n+      <rule pattern=\"(// *)(\\w+)([^\\n]+\\n)(?=(?://[^\\n]*\\n)* *(?:pub +)?(?:fn|struct|union|type|interface|enum|const) +\\2\\b)\">\n+        <bygroups>\n+          <token type=\"LiteralStringDoc\"/>\n+          <token type=\"GenericEmph\"/>\n+          <token type=\"LiteralStringDoc\"/>\n+        </bygroups>\n+        <push state=\"string-doc\"/>\n+      </rule>\n+      <rule pattern=\"//[^\\n]*\\n\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/\\*(?:(?:/\\*(?:.|\\n)*?\\*/)*|.|\\n)*\\*/\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"\\b(import|module)\\b\">\n+        <token type=\"KeywordNamespace\"/>\n+      </rule>\n+      <rule pattern=\"\\b(fn|struct|union|map|chan|type|interface|enum|const|mut|shared|pub|__global)\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"\\?\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=\\)\\s*)!\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"[ \\t]*#include[^\\n]+\">\n+        <using lexer=\"c\"/>\n+      </rule>\n+      <rule pattern=\"[ \\t]*#\\w[^\\n]*\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"(sql)(\\s+)(\\w+)(\\s+)({)([^}]*?)(})\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Name\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+          <using lexer=\"sql\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"\\$(?=\\w)\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=\\$)(?:embed_file|pkgconfig|tmpl|env|compile_error|compile_warn)\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"(asm)(\\s+)(\\w+)(\\s*)({)([^}]*?)(})\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"KeywordType\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+          <using lexer=\"nasm\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"\\b_(?:un)?likely_(?=\\()\">\n+        <token type=\"NameFunctionMagic\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=\\$if.+?(?:&amp;&amp;|\\|\\|)?)((no_segfault_handler|no_bounds_checking|little_endian|freestanding|no_backtrace|big_endian|cplusplus|dragonfly|prealloc|android|windows|no_main|solaris|darwin|clang|tinyc|glibc|mingw|haiku|macos|amd64|arm64|debug|linux|prod|msvc|test|hpux|mach|x32|x64|gcc|qnx|gnu|ios|mac|js))+\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"@(VMOD_FILE|VEXEROOT|VMODROOT|METHOD|STRUCT|COLUMN|VHASH|FILE|LINE|VEXE|MOD|FN)\\b\">\n+        <token type=\"NameVariableMagic\"/>\n+      </rule>\n+      <rule pattern=\"\\b(?&lt;!@)(__offsetof|isreftype|continue|volatile|typeof|static|unsafe|return|assert|sizeof|atomic|select|match|break|defer|rlock|lock|else|goto|for|in|is|as|or|if|go)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"\\b(?&lt;!@)(none|true|false|si_s_code|si_g32_code|si_g64_code)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"\\b(?&lt;!@)(vstring_literal_with_len|utf8_str_visible_length|get_str_intp_u64_format|get_str_intp_u32_format|utf32_decode_to_buffer|utf32_to_str_no_malloc|panic_optional_not_set|panic_result_not_set|contains_any_substr|strip_margin_custom|starts_with_capital|cstring_to_vstring|winapi_lasterr_str|c_error_number_str|panic_error_number|substr_with_check|string_from_wide2|sort_with_compare|trim_string_right|string_from_wide|sort_ignore_case|trim_string_left|reverse_in_place|split_into_lines|vstring_with_len|compare_strings|all_before_last|print_backtrace|repeat_to_depth|length_in_bytes|error_with_code|vstring_literal|gc_check_leaks|clone_to_depth|vcalloc_noscan|all_after_last|utf8_char_len|panic_lasterr|memdup_noscan|malloc_noscan|str_intp_rune|last_index_u8|utf8_to_utf32|flush_stderr|flush_stdout|str_intp_sub|replace_each|replace_once|vstrlen_char|utf8_getchar|str_intp_g64|contains_any|find_between|realloc_data|strip_margin|utf32_to_str|is_bin_digit|is_hex_digit|is_oct_digit|proc_pidpath|str_intp_g32|delete_many|delete_last|str_escaped|index_after|sort_by_len|str_intp_sq|starts_with|trim_space|last_index|parse_uint|is_capital|trim_right|join_lines|capitalize|all_before|after_char|match_glob|utf32_code|eq_epsilon|tos_clone|substr_ni|v_realloc|push_many|is_letter|split_nth|split_any|trim_left|index_any|ascii_str|parse_int|all_after|ends_with|is_title|contains|eprintln|is_space|index_u8|is_digit|vmemmove|byterune|is_alnum|pointers|grow_len|is_lower|grow_cap|str_intp|to_upper|hex_full|len_utf8|is_upper|try_push|to_lower|compare|vmemset|try_pop|vcalloc|reverse|vmemcmp|vstring|replace|ptr_str|strlong|to_wide|bytestr|f32_abs|f32_max|println|f32_min|f64_max|vmemcpy|vstrlen|prepend|vbytes|strsci|substr|string|insert|eprint|filter|delete|repeat|malloc|memdup|fields|before|reduce|string|isize|count|index|title|bytes|clone|usize|error|after|split|runes|print|panic|first|close|limit|isnil|bool|rune|tos3|u128|hex2|i128|hash|code|tos4|free|exit|keys|tos2|last|trim|strg|tos5|move|copy|drop|sort|dump|join|free|cap|int|any|all|any|len|map|pop|hex|f64|f32|u16|msg|i64|i16|u32|str|tos|u64|i8|u8)(?=\\()\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"\\b(?&lt;!@)(StrIntpCgenData|VAssertMetaInfo|StructAttribute|AttributeKind|FunctionData|StrIntpData|StrIntpType|MethodArgs|StrIntpMem|ArrayFlags|FieldData|SortedMap|ChanState|string|array|Error|map)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"\\b(?&lt;!@)(voidptr|string|error|isize|usize|i128|u128|bool|rune|int|f32|f64|i64|i16|u64|any|u32|u16|i8|u8)\\b\">\n+        <token type=\"KeywordType\"/>\n+      </rule>\n+      <rule pattern=\"\\bit\\b\">\n+        <token type=\"NameVariableMagic\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!fn\\s+)(?&lt;=\\w+\\s+|^)\\[(?=:if +)?(?=\\w+)\">\n+        <token type=\"Punctuation\"/>\n+        <push state=\"attribute\"/>\n+      </rule>\n+      <rule pattern=\"(&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&gt;&gt;&gt;|&lt;&lt;|&gt;&gt;|&lt;=|&gt;=|\\^=|\\+=|-=|\\*=|/=|%=|&amp;=|\\|=|&amp;&amp;|\\|\\||&lt;-|\\+\\+|--|==|!=|:=|\\.\\.\\.|\\.\\.|[+\\-*/%&amp;|^~=#@!])\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[\\d_]+(\\.\\d+e[+\\-]?\\d+|\\.\\d+|e[+\\-]?\\d+)\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"\\.\\d+(e[+\\-]?\\d+)?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0o[0-7_]+\">\n+        <token type=\"LiteralNumberOct\"/>\n+      </rule>\n+      <rule pattern=\"0x[0-9a-fA-F_]+\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"0b[01_]+\">\n+        <token type=\"LiteralNumberBin\"/>\n+      </rule>\n+      <rule pattern=\"(0|[1-9][0-9_]*)\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"`\">\n+        <token type=\"LiteralStringChar\"/>\n+        <push state=\"char\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"strings\"/>\n+      </rule>\n+      <rule pattern=\"@?[A-Z]\\w*\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=[^\\W\\d]\\w*)(&lt;)([A-Z]\\w*)(&gt;)\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"NameClass\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"@?[^\\W\\d]\\w*(?=\\()\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=fn\\s+)@?[^\\W\\d]\\w*(?=\\s*\\()\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=(?:continue|break|goto)\\s+)\\w+\">\n+        <token type=\"NameLabel\"/>\n+      </rule>\n+      <rule pattern=\"\\b[^\\W\\d]\\w*(?=:(?:$|\\s+for))\">\n+        <token type=\"NameLabel\"/>\n+      </rule>\n+      <rule pattern=\"[&lt;&gt;()\\[\\]{}.,;:]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"@?[^\\W\\d]\\w*\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+    </state>\n+    <state name=\"char\">\n+      <rule pattern=\"`\">\n+        <token type=\"LiteralStringChar\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"char-escape\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\]\">\n+        <token type=\"LiteralStringChar\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string-doc\">\n+      <rule pattern=\"(// *)(#+ [^\\n]+)(\\n)\">\n+        <bygroups>\n+          <token type=\"LiteralStringDoc\"/>\n+          <token type=\"GenericHeading\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"// *([=_*~-])\\1{2,}\\n\">\n+        <token type=\"LiteralStringDelimiter\"/>\n+      </rule>\n+      <rule pattern=\"//[^\\n]*\\n\">\n+        <token type=\"LiteralStringDoc\"/>\n+      </rule>\n+      <rule>\n+        <mutators>\n+          <pop depth=\"1\"/>\n+        </mutators>\n+      </rule>\n+    </state>\n+    <state name=\"string-curly-interpolation\">\n+      <rule pattern=\"}\">\n+        <token type=\"Punctuation\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"strings\"/>\n+      </rule>\n+      <rule pattern=\"(:)( *?)([ 0&#39;#+-])?(?:(\\.)?([0-9]+))?([fFgeEGxXobsd])?\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"LiteralNumber\"/>\n+          <token type=\"LiteralStringAffix\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"[^}&#34;&#39;:]+\">\n+        <usingself state=\"root\"/>\n+      </rule>\n+    </state>\n+    <state name=\"attribute\">\n+      <rule pattern=\"\\]\">\n+        <token type=\"Punctuation\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"&#39;\">\n+        <token type=\"Punctuation\"/>\n+        <push state=\"string-single\"/>\n+      </rule>\n+      <rule pattern=\"&#34;\">\n+        <token type=\"Punctuation\"/>\n+        <push state=\"string-double\"/>\n+      </rule>\n+      <rule pattern=\"[;:]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=\\[)if\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=: *)\\w+\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"[^\\W\\d]\\w*\">\n+        <token type=\"NameAttribute\"/>\n+      </rule>\n+    </state>\n+    <state name=\"strings\">\n+      <rule pattern=\"(c)?(&#34;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringDouble\"/>\n+        </bygroups>\n+        <push state=\"string-double\"/>\n+      </rule>\n+      <rule pattern=\"(c)?(&#39;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringSingle\"/>\n+        </bygroups>\n+        <push state=\"string-single\"/>\n+      </rule>\n+      <rule pattern=\"(r)(&#34;[^&#34;]+&#34;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralString\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(r)(&#39;[^&#39;]+&#39;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralString\"/>\n+        </bygroups>\n+      </rule>\n+    </state>\n+    <state name=\"string-double\">\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"char-escape\"/>\n+      </rule>\n+      <rule pattern=\"(\\$)((?!\\\\){)\">\n+        <bygroups>\n+          <token type=\"Operator\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+        <push state=\"string-curly-interpolation\"/>\n+      </rule>\n+      <rule pattern=\"\\$\">\n+        <token type=\"Operator\"/>\n+        <push state=\"string-interpolation\"/>\n+      </rule>\n+      <rule pattern=\"[^&#34;]+?\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string-single\">\n+      <rule pattern=\"&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"char-escape\"/>\n+      </rule>\n+      <rule pattern=\"(\\$)((?!\\\\){)\">\n+        <bygroups>\n+          <token type=\"Operator\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+        <push state=\"string-curly-interpolation\"/>\n+      </rule>\n+      <rule pattern=\"\\$\">\n+        <token type=\"Operator\"/>\n+        <push state=\"string-interpolation\"/>\n+      </rule>\n+      <rule pattern=\"[^&#39;]+?\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+    </state>\n+    <state name=\"char-escape\">\n+      <rule pattern=\"\\\\[`&#39;&#34;\\\\abfnrtv$]|\\\\x[0-9a-fA-F]{2}|\\\\[0-7]{1,3}|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string-interpolation\">\n+      <rule pattern=\"(\\.)?(@)?(?:([^\\W\\d]\\w*)(\\()([^)]*)(\\))|([^\\W\\d]\\w*))\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"NameFunction\"/>\n+          <token type=\"Punctuation\"/>\n+          <usingself state=\"root\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"NameVariable\"/>\n+        </bygroups>\n+      </rule>\n+      <rule>\n+        <mutators>\n+          <pop depth=\"1\"/>\n+        </mutators>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "34ce6106505128d6ad96139120d853a252430770",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/v_shell.xml",
      "status": "added",
      "additions": 365,
      "deletions": 0,
      "changes": 365,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fv_shell.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fv_shell.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fv_shell.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,365 @@\n+<lexer>\n+  <config>\n+    <name>V shell</name>\n+    <alias>vsh</alias>\n+    <alias>vshell</alias>\n+    <filename>*.vsh</filename>\n+    <mime_type>text/x-vsh</mime_type>\n+    <ensure_nl>true</ensure_nl>\n+  </config>\n+  <rules>\n+    <state name=\"attribute\">\n+      <rule pattern=\"\\]\">\n+        <token type=\"Punctuation\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"&#39;\">\n+        <token type=\"Punctuation\"/>\n+        <push state=\"string-single\"/>\n+      </rule>\n+      <rule pattern=\"&#34;\">\n+        <token type=\"Punctuation\"/>\n+        <push state=\"string-double\"/>\n+      </rule>\n+      <rule pattern=\"[;:]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=\\[)if\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=: *)\\w+\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"[^\\W\\d]\\w*\">\n+        <token type=\"NameAttribute\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string-double\">\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"char-escape\"/>\n+      </rule>\n+      <rule pattern=\"(\\$)((?!\\\\){)\">\n+        <bygroups>\n+          <token type=\"Operator\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+        <push state=\"string-curly-interpolation\"/>\n+      </rule>\n+      <rule pattern=\"\\$\">\n+        <token type=\"Operator\"/>\n+        <push state=\"string-interpolation\"/>\n+      </rule>\n+      <rule pattern=\"[^&#34;]+?\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+    </state>\n+    <state name=\"char\">\n+      <rule pattern=\"`\">\n+        <token type=\"LiteralStringChar\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"char-escape\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\]\">\n+        <token type=\"LiteralStringChar\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string-doc\">\n+      <rule pattern=\"(// *)(#+ [^\\n]+)(\\n)\">\n+        <bygroups>\n+          <token type=\"LiteralStringDoc\"/>\n+          <token type=\"GenericHeading\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"// *([=_*~-])\\1{2,}\\n\">\n+        <token type=\"LiteralStringDelimiter\"/>\n+      </rule>\n+      <rule pattern=\"//[^\\n]*\\n\">\n+        <token type=\"LiteralStringDoc\"/>\n+      </rule>\n+      <rule>\n+        <mutators>\n+          <pop depth=\"1\"/>\n+        </mutators>\n+      </rule>\n+    </state>\n+    <state name=\"string-interpolation\">\n+      <rule pattern=\"(\\.)?(@)?(?:([^\\W\\d]\\w*)(\\()([^)]*)(\\))|([^\\W\\d]\\w*))\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"NameFunction\"/>\n+          <token type=\"Punctuation\"/>\n+          <usingself state=\"root\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"NameVariable\"/>\n+        </bygroups>\n+      </rule>\n+      <rule>\n+        <mutators>\n+          <pop depth=\"1\"/>\n+        </mutators>\n+      </rule>\n+    </state>\n+    <state name=\"string-curly-interpolation\">\n+      <rule pattern=\"}\">\n+        <token type=\"Punctuation\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"strings\"/>\n+      </rule>\n+      <rule pattern=\"(:)( *?)([ 0&#39;#+-])?(?:(\\.)?([0-9]+))?([fFgeEGxXobsd])?\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"LiteralNumber\"/>\n+          <token type=\"LiteralStringAffix\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"[^}&#34;&#39;:]+\">\n+        <usingself state=\"root\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule pattern=\"^#![^\\n]*\\n\">\n+        <token type=\"CommentHashbang\"/>\n+      </rule>\n+      <rule pattern=\"\\b(path_delimiter|path_separator|wd_at_startup|max_path_len|sys_write|sys_close|sys_mkdir|sys_creat|sys_open|s_iflnk|s_irusr|s_ifdir|s_ixoth|s_isuid|s_isgid|s_isvtx|s_iwoth|s_iwusr|s_ixusr|s_irgrp|s_iwgrp|s_ixgrp|s_iroth|s_ifmt|args)\\b\">\n+        <token type=\"NameConstant\"/>\n+      </rule>\n+      <rule pattern=\"\\b(ExecutableNotFoundError|FileNotOpenedError|SizeOfTypeIs0Error|ProcessState|SeekMode|Command|Process|Signal|Result|Uname|File)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"\\b(find_abs_path_of_executable|posix_set_permission_bit|read_bytes_into_newline|sigint_to_signal_name|exists_in_system_path|get_raw_lines_joined|expand_tilde_to_home|posix_get_error_msg|set_redirect_stdio|is_writable_folder|file_last_mod_unix|walk_with_context|resource_abs_path|debugger_present|write_file_array|join_path_single|execute_or_panic|get_lines_joined|set_environment|read_bytes_into|read_file_array|execute_or_exit|signal_continue|write_struct_at|read_struct_at|vmodules_paths|get_error_msg|signal_pgkill|read_into_ptr|read_bytes_at|existing_path|is_executable|get_raw_stdin|is_dir_empty|write_struct|vmodules_dir|stdout_slurp|write_raw_at|write_string|get_raw_line|stderr_slurp|signal_kill|stderr_read|signal_stop|quoted_path|stdin_write|stdout_read|open_append|new_process|args_before|read_struct|is_writable|is_readable|is_abs_path|read_raw_at|write_file|getenv_opt|args_after|read_lines|read_bytes|signal_opt|config_dir|last_error|executable|file_name|file_size|rmdir_all|write_raw|real_path|join_path|input_opt|norm_path|read_from|get_lines|loginname|read_file|cache_dir|mkdir_all|read_line|open_file|home_dir|hostname|fd_slurp|fd_close|mv_by_cp|open_uri|file_ext|walk_ext|unsetenv|write_to|fd_write|abs_path|read_raw|is_alive|get_line|truncate|temp_dir|set_args|geteuid|is_file|getppid|bitmask|is_atty|execute|symlink|environ|fd_read|is_link|writeln|getegid|user_os|is_dir|stdout|create|fileno|cp_all|system|getenv|vfopen|execve|getgid|stderr|getuid|execvp|exists|setenv|getpid|flush|getwd|input|stdin|mkdir|chdir|chmod|start|chown|rmdir|uname|write|close|utime|inode|wait|seek|base|fork|open|link|glob|read|tell|walk|msg|dir|run|log|cp|mv|rm|ls)(?=\\()\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=module\\s+\\w[^\\n]*\\s+)(//[^\\n]+\\n)+(?=\\n)\">\n+        <token type=\"LiteralStringDoc\"/>\n+      </rule>\n+      <rule pattern=\"(// *)(\\w+)([^\\n]+\\n)(?=(?://[^\\n]*\\n)* *(?:pub +)?(?:fn|struct|union|type|interface|enum|const) +\\2\\b)\">\n+        <bygroups>\n+          <token type=\"LiteralStringDoc\"/>\n+          <token type=\"GenericEmph\"/>\n+          <token type=\"LiteralStringDoc\"/>\n+        </bygroups>\n+        <push state=\"string-doc\"/>\n+      </rule>\n+      <rule pattern=\"//[^\\n]*\\n\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/\\*(?:(?:/\\*(?:.|\\n)*?\\*/)*|.|\\n)*\\*/\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"\\b(import|module)\\b\">\n+        <token type=\"KeywordNamespace\"/>\n+      </rule>\n+      <rule pattern=\"\\b(fn|struct|union|map|chan|type|interface|enum|const|mut|shared|pub|__global)\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"\\?\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=\\)\\s*)!\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"[ \\t]*#include[^\\n]+\">\n+        <using lexer=\"c\"/>\n+      </rule>\n+      <rule pattern=\"[ \\t]*#\\w[^\\n]*\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"(sql)(\\s+)(\\w+)(\\s+)({)([^}]*?)(})\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Name\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+          <using lexer=\"sql\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"\\$(?=\\w)\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=\\$)(?:embed_file|pkgconfig|tmpl|env|compile_error|compile_warn)\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"(asm)(\\s+)(\\w+)(\\s*)({)([^}]*?)(})\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"KeywordType\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+          <using lexer=\"nasm\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"\\b_(?:un)?likely_(?=\\()\">\n+        <token type=\"NameFunctionMagic\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=\\$if.+?(?:&amp;&amp;|\\|\\|)?)((no_segfault_handler|no_bounds_checking|little_endian|freestanding|no_backtrace|big_endian|cplusplus|dragonfly|prealloc|android|windows|no_main|solaris|darwin|clang|tinyc|glibc|mingw|haiku|macos|amd64|arm64|debug|linux|prod|msvc|test|hpux|mach|x32|x64|gcc|qnx|gnu|ios|mac|js))+\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"@(VMOD_FILE|VEXEROOT|VMODROOT|METHOD|STRUCT|COLUMN|VHASH|FILE|LINE|VEXE|MOD|FN)\\b\">\n+        <token type=\"NameVariableMagic\"/>\n+      </rule>\n+      <rule pattern=\"\\b(?&lt;!@)(__offsetof|isreftype|continue|volatile|typeof|static|unsafe|return|assert|sizeof|atomic|select|match|break|defer|rlock|lock|else|goto|for|in|is|as|or|if|go)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"\\b(?&lt;!@)(none|true|false|si_s_code|si_g32_code|si_g64_code)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"\\b(?&lt;!@)(vstring_literal_with_len|utf8_str_visible_length|get_str_intp_u64_format|get_str_intp_u32_format|utf32_decode_to_buffer|utf32_to_str_no_malloc|panic_optional_not_set|panic_result_not_set|contains_any_substr|strip_margin_custom|starts_with_capital|cstring_to_vstring|winapi_lasterr_str|c_error_number_str|panic_error_number|substr_with_check|string_from_wide2|sort_with_compare|trim_string_right|string_from_wide|sort_ignore_case|trim_string_left|reverse_in_place|split_into_lines|vstring_with_len|compare_strings|all_before_last|print_backtrace|repeat_to_depth|length_in_bytes|error_with_code|vstring_literal|gc_check_leaks|clone_to_depth|vcalloc_noscan|all_after_last|utf8_char_len|panic_lasterr|memdup_noscan|malloc_noscan|str_intp_rune|last_index_u8|utf8_to_utf32|flush_stderr|flush_stdout|str_intp_sub|replace_each|replace_once|vstrlen_char|utf8_getchar|str_intp_g64|contains_any|find_between|realloc_data|strip_margin|utf32_to_str|is_bin_digit|is_hex_digit|is_oct_digit|proc_pidpath|str_intp_g32|delete_many|delete_last|str_escaped|index_after|sort_by_len|str_intp_sq|starts_with|trim_space|last_index|parse_uint|is_capital|trim_right|join_lines|capitalize|all_before|after_char|match_glob|utf32_code|eq_epsilon|tos_clone|substr_ni|v_realloc|push_many|is_letter|split_nth|split_any|trim_left|index_any|ascii_str|parse_int|all_after|ends_with|is_title|contains|eprintln|is_space|index_u8|is_digit|vmemmove|byterune|is_alnum|pointers|grow_len|is_lower|grow_cap|str_intp|to_upper|hex_full|len_utf8|is_upper|try_push|to_lower|compare|vmemset|try_pop|vcalloc|reverse|vmemcmp|vstring|replace|ptr_str|strlong|to_wide|bytestr|f32_abs|f32_max|println|f32_min|f64_max|vmemcpy|vstrlen|prepend|vbytes|strsci|substr|string|insert|eprint|filter|delete|repeat|malloc|memdup|fields|before|reduce|string|isize|count|index|title|bytes|clone|usize|error|after|split|runes|print|panic|first|close|limit|isnil|bool|rune|tos3|u128|hex2|i128|hash|code|tos4|free|exit|keys|tos2|last|trim|strg|tos5|move|copy|drop|sort|dump|join|free|cap|int|any|all|any|len|map|pop|hex|f64|f32|u16|msg|i64|i16|u32|str|tos|u64|i8|u8)(?=\\()\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"\\b(?&lt;!@)(StrIntpCgenData|VAssertMetaInfo|StructAttribute|AttributeKind|FunctionData|StrIntpData|StrIntpType|MethodArgs|StrIntpMem|ArrayFlags|FieldData|SortedMap|ChanState|string|array|Error|map)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"\\b(?&lt;!@)(voidptr|string|error|isize|usize|i128|u128|bool|rune|int|f32|f64|i64|i16|u64|any|u32|u16|i8|u8)\\b\">\n+        <token type=\"KeywordType\"/>\n+      </rule>\n+      <rule pattern=\"\\bit\\b\">\n+        <token type=\"NameVariableMagic\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!fn\\s+)(?&lt;=\\w+\\s+|^)\\[(?=:if +)?(?=\\w+)\">\n+        <token type=\"Punctuation\"/>\n+        <push state=\"attribute\"/>\n+      </rule>\n+      <rule pattern=\"(&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&gt;&gt;&gt;|&lt;&lt;|&gt;&gt;|&lt;=|&gt;=|\\^=|\\+=|-=|\\*=|/=|%=|&amp;=|\\|=|&amp;&amp;|\\|\\||&lt;-|\\+\\+|--|==|!=|:=|\\.\\.\\.|\\.\\.|[+\\-*/%&amp;|^~=#@!])\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[\\d_]+(\\.\\d+e[+\\-]?\\d+|\\.\\d+|e[+\\-]?\\d+)\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"\\.\\d+(e[+\\-]?\\d+)?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0o[0-7_]+\">\n+        <token type=\"LiteralNumberOct\"/>\n+      </rule>\n+      <rule pattern=\"0x[0-9a-fA-F_]+\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"0b[01_]+\">\n+        <token type=\"LiteralNumberBin\"/>\n+      </rule>\n+      <rule pattern=\"(0|[1-9][0-9_]*)\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"`\">\n+        <token type=\"LiteralStringChar\"/>\n+        <push state=\"char\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"strings\"/>\n+      </rule>\n+      <rule pattern=\"@?[A-Z]\\w*\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=[^\\W\\d]\\w*)(&lt;)([A-Z]\\w*)(&gt;)\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"NameClass\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"@?[^\\W\\d]\\w*(?=\\()\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=fn\\s+)@?[^\\W\\d]\\w*(?=\\s*\\()\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=(?:continue|break|goto)\\s+)\\w+\">\n+        <token type=\"NameLabel\"/>\n+      </rule>\n+      <rule pattern=\"\\b[^\\W\\d]\\w*(?=:(?:$|\\s+for))\">\n+        <token type=\"NameLabel\"/>\n+      </rule>\n+      <rule pattern=\"[&lt;&gt;()\\[\\]{}.,;:]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"@?[^\\W\\d]\\w*\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+    </state>\n+    <state name=\"strings\">\n+      <rule pattern=\"(c)?(&#34;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringDouble\"/>\n+        </bygroups>\n+        <push state=\"string-double\"/>\n+      </rule>\n+      <rule pattern=\"(c)?(&#39;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringSingle\"/>\n+        </bygroups>\n+        <push state=\"string-single\"/>\n+      </rule>\n+      <rule pattern=\"(r)(&#34;[^&#34;]+&#34;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralString\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(r)(&#39;[^&#39;]+&#39;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralString\"/>\n+        </bygroups>\n+      </rule>\n+    </state>\n+    <state name=\"string-single\">\n+      <rule pattern=\"&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"char-escape\"/>\n+      </rule>\n+      <rule pattern=\"(\\$)((?!\\\\){)\">\n+        <bygroups>\n+          <token type=\"Operator\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+        <push state=\"string-curly-interpolation\"/>\n+      </rule>\n+      <rule pattern=\"\\$\">\n+        <token type=\"Operator\"/>\n+        <push state=\"string-interpolation\"/>\n+      </rule>\n+      <rule pattern=\"[^&#39;]+?\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+    </state>\n+    <state name=\"char-escape\">\n+      <rule pattern=\"\\\\[`&#39;&#34;\\\\abfnrtv$]|\\\\x[0-9a-fA-F]{2}|\\\\[0-7]{1,3}|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "43e6bfa7443cc5fc94358cd761747e3aa975f2e4",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/viml.xml",
      "status": "added",
      "additions": 85,
      "deletions": 0,
      "changes": 85,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fviml.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fviml.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fviml.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,85 @@\n+<lexer>\n+  <config>\n+    <name>VimL</name>\n+    <alias>vim</alias>\n+    <filename>*.vim</filename>\n+    <filename>.vimrc</filename>\n+    <filename>.exrc</filename>\n+    <filename>.gvimrc</filename>\n+    <filename>_vimrc</filename>\n+    <filename>_exrc</filename>\n+    <filename>_gvimrc</filename>\n+    <filename>vimrc</filename>\n+    <filename>gvimrc</filename>\n+    <mime_type>text/x-vim</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"^([ \\t:]*)(py(?:t(?:h(?:o(?:n)?)?)?)?)([ \\t]*)(&lt;&lt;)([ \\t]*)(.*)((?:\\n|.)*)(\\6)\">\n+        <bygroups>\n+          <usingself state=\"root\"/>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Text\"/>\n+          <using lexer=\"Python\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^([ \\t:]*)(py(?:t(?:h(?:o(?:n)?)?)?)?)([ \\t])(.*)\">\n+        <bygroups>\n+          <usingself state=\"root\"/>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <using lexer=\"Python\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"^\\s*&#34;.*\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"[ \\t]+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"/(\\\\\\\\|\\\\/|[^\\n/])*/\">\n+        <token type=\"LiteralStringRegex\"/>\n+      </rule>\n+      <rule pattern=\"&#34;(\\\\\\\\|\\\\&#34;|[^\\n&#34;])*&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"&#39;(&#39;&#39;|[^\\n&#39;])*&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=\\s)&#34;[^\\-:.%#=*].*\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"-?\\d+\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"#[0-9a-f]{6}\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"^:\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"[()&lt;&gt;+=!|,~-]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"\\b(let|if|else|endif|elseif|fun|function|endfunction|set|map|autocmd|filetype|hi(ghlight)?|execute|syntax|colorscheme)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"\\b(NONE|bold|italic|underline|dark|light)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"\\b\\w+\\b\">\n+        <token type=\"NameOther\"/>\n+      </rule>\n+      <rule pattern=\"\\n\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\".\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "ea2b6e1ef35e7c1137715e937bb56653d65a7522",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/webgpu_shading_language.xml",
      "status": "renamed",
      "additions": 123,
      "deletions": 42,
      "changes": 165,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fwebgpu_shading_language.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fwebgpu_shading_language.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fwebgpu_shading_language.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,4 +1,3 @@\n-\n <lexer>\n   <config>\n     <name>WebGPU Shading Language</name>\n@@ -8,54 +7,136 @@\n   </config>\n   <rules>\n     <state name=\"blankspace\">\n-      <rule pattern=\"[\\u0020\\u0009\\u000a\\u000b\\u000c\\u000d\\u0085\\u200e\\u200f\\u2028\\u2029]+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\"[\\u0020\\u0009\\u000a\\u000b\\u000c\\u000d\\u0085\\u200e\\u200f\\u2028\\u2029]+\">\n+        <token type=\"TextWhitespace\"/>\n+      </rule>\n     </state>\n     <state name=\"comments\">\n-      <rule pattern=\"//[^\\u000a\\u000b\\u000c\\u000d\\u0085\\u2028\\u2029]*\\u000d\\u000a\"><token type=\"CommentSingle\"/></rule>\n-      <rule pattern=\"//[^\\u000a\\u000b\\u000c\\u000d\\u0085\\u2028\\u2029]*[\\u000a\\u000b\\u000c\\u000d\\u0085\\u2028\\u2029]\"><token type=\"CommentSingle\"/></rule>\n-      <rule pattern=\"/\\*\"><token type=\"CommentMultiline\"/><push state=\"block_comment\"/></rule>\n+      <rule pattern=\"//[^\\u000a\\u000b\\u000c\\u000d\\u0085\\u2028\\u2029]*\\u000d\\u000a\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"//[^\\u000a\\u000b\\u000c\\u000d\\u0085\\u2028\\u2029]*[\\u000a\\u000b\\u000c\\u000d\\u0085\\u2028\\u2029]\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/\\*\">\n+        <token type=\"CommentMultiline\"/>\n+        <push state=\"block_comment\"/>\n+      </rule>\n     </state>\n     <state name=\"attribute\">\n-      <rule><include state=\"blankspace\"/></rule>\n-      <rule><include state=\"comments\"/></rule>\n-      <rule pattern=\"([_A-Z_a-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶ-ͷͻ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮ-ٯٱ-ۓەۥ-ۦۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴ-ߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱৼਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡૹଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠ-ౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาเ-ๆກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳱᳵ-ᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪ-ꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽ-ꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹﹱﹳﹷﹹﹻﹽﹿ-ﻼＡ-Ｚａ-ｚｦ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐊀-𐊜𐊠-𐋐𐌀-𐌟𐌭-𐍊𐍐-𐍵𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨵𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫤𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴣𐼀-𐼜𐼧𐼰-𐽅𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑅄𑅐-𑅲𑅶𑆃-𑆲𑇁-𑇄𑇚𑇜𑈀-𑈑𑈓-𑈫𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋞𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌽𑍐𑍝-𑍡𑐀-𑐴𑑇-𑑊𑒀-𑒯𑓄-𑓅𑓇𑖀-𑖮𑗘-𑗛𑘀-𑘯𑙄𑚀-𑚪𑜀-𑜚𑠀-𑠫𑢠-𑣟𑣿𑨀𑨋-𑨲𑨺𑩐𑩜-𑪃𑪆-𑪉𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰮𑱀𑱲-𑲏𑴀-𑴆𑴈-𑴉𑴋-𑴰𑵆𑵠-𑵥𑵧-𑵨𑵪-𑶉𑶘𑻠-𑻲𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖫐-𖫭𖬀-𖬯𖭀-𖭃𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐𖾓-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𞠀-𞣄𞤀-𞥃𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀][0-9A-Z_a-zªµ·ºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶ-ͷͻ-ͽͿΆ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԯԱ-Ֆՙՠ-ֈ֑-ֽֿׁ-ׂׄ-ׇׅא-תׯ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺ߽ࠀ-࠭ࡀ-࡛ࡠ-ࡪࢠ-ࢴࢶ-ࢽ࣓-ࣣ࣡-ॣ०-९ॱ-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-ৱৼ৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍ୖ-ୗଡ଼-ଢ଼ୟ-ୣ୦-୯ୱஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఀ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕ-ౖౘ-ౚౠ-ౣ౦-౯ಀ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೞೠ-ೣ೦-೯ೱ-ೲഀ-ഃഅ-ഌഎ-ഐഒ-ൄെ-ൈൊ-ൎൔ-ൗൟ-ൣ൦-൯ൺ-ൿං-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-ෳก-ฺเ-๎๐-๙ກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘-༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟፩-፱ᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៓ៗៜ-៝០-៩᠋-᠍᠐-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧ᪰-᪽ᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿ᳐-᳔᳒-᳹ᴀ-᷹᷻-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‿-⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙-゚ゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠧꡀ-ꡳꢀ-ꣅ꣐-꣙꣠-ꣷꣻꣽ-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꧠ-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯪ꯬-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹ︀-️︠-︯︳-︴﹍-﹏ﹱﹳﹷﹹﹻﹽﹿ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐇽𐊀-𐊜𐊠-𐋐𐋠𐌀-𐌟𐌭-𐍊𐍐-𐍺𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒠-𐒩𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀-𐨃𐨅-𐨆𐨌-𐨓𐨕-𐨗𐨙-𐨵𐨸-𐨿𐨺𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫦𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴧𐴰-𐴹𐼀-𐼜𐼧𐼰-𐽐𑀀-𑁆𑁦-𑁯𑁿-𑂺𑃐-𑃨𑃰-𑃹𑄀-𑄴𑄶-𑄿𑅄-𑅆𑅐-𑅳𑅶𑆀-𑇄𑇉-𑇌𑇐-𑇚𑇜𑈀-𑈑𑈓-𑈷𑈾𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋪𑋰-𑋹𑌀-𑌃𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌻-𑍄𑍇-𑍈𑍋-𑍍𑍐𑍗𑍝-𑍣𑍦-𑍬𑍰-𑍴𑐀-𑑊𑑐-𑑙𑑞𑒀-𑓅𑓇𑓐-𑓙𑖀-𑖵𑖸-𑗀𑗘-𑗝𑘀-𑙀𑙄𑙐-𑙙𑚀-𑚷𑛀-𑛉𑜀-𑜚𑜝-𑜫𑜰-𑜹𑠀-𑠺𑢠-𑣩𑣿𑨀-𑨾𑩇𑩐-𑪃𑪆-𑪙𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰶𑰸-𑱀𑱐-𑱙𑱲-𑲏𑲒-𑲧𑲩-𑲶𑴀-𑴆𑴈-𑴉𑴋-𑴶𑴺𑴼-𑴽𑴿-𑵇𑵐-𑵙𑵠-𑵥𑵧-𑵨𑵪-𑶎𑶐-𑶑𑶓-𑶘𑶠-𑶩𑻠-𑻶𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖩠-𖩩𖫐-𖫭𖫰-𖫴𖬀-𖬶𖭀-𖭃𖭐-𖭙𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐-𖽾𖾏-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𛲝-𛲞𝅥-𝅩𝅭-𝅲𝅻-𝆂𝆅-𝆋𝆪-𝆭𝉂-𝉄𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𝟎-𝟿𝨀-𝨶𝨻-𝩬𝩵𝪄𝪛-𝪟𝪡-𝪯𞀀-𞀆𞀈-𞀘𞀛-𞀡𞀣-𞀤𞀦-𞀪𞠀-𞣄𞣐-𞣖𞤀-𞥊𞥐-𞥙𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀󠄀-󠇯]+)|[A-Z_a-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶ-ͷͻ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮ-ٯٱ-ۓەۥ-ۦۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴ-ߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱৼਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡૹଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠ-ౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาเ-ๆກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳱᳵ-ᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪ-ꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽ-ꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹﹱﹳﹷﹹﹻﹽﹿ-ﻼＡ-Ｚａ-ｚｦ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐊀-𐊜𐊠-𐋐𐌀-𐌟𐌭-𐍊𐍐-𐍵𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨵𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫤𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴣𐼀-𐼜𐼧𐼰-𐽅𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑅄𑅐-𑅲𑅶𑆃-𑆲𑇁-𑇄𑇚𑇜𑈀-𑈑𑈓-𑈫𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋞𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌽𑍐𑍝-𑍡𑐀-𑐴𑑇-𑑊𑒀-𑒯𑓄-𑓅𑓇𑖀-𑖮𑗘-𑗛𑘀-𑘯𑙄𑚀-𑚪𑜀-𑜚𑠀-𑠫𑢠-𑣟𑣿𑨀𑨋-𑨲𑨺𑩐𑩜-𑪃𑪆-𑪉𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰮𑱀𑱲-𑲏𑴀-𑴆𑴈-𑴉𑴋-𑴰𑵆𑵠-𑵥𑵧-𑵨𑵪-𑶉𑶘𑻠-𑻲𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖫐-𖫭𖬀-𖬯𖭀-𖭃𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐𖾓-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𞠀-𞣄𞤀-𞥃𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀]\"><token type=\"NameDecorator\"/><pop depth=\"1\"/></rule>\n-      <rule><pop depth=\"1\"/></rule>\n+      <rule>\n+        <include state=\"blankspace\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"comments\"/>\n+      </rule>\n+      <rule pattern=\"([_A-Z_a-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶ-ͷͻ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮ-ٯٱ-ۓەۥ-ۦۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴ-ߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱৼਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡૹଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠ-ౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาเ-ๆກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳱᳵ-ᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪ-ꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽ-ꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹﹱﹳﹷﹹﹻﹽﹿ-ﻼＡ-Ｚａ-ｚｦ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐊀-𐊜𐊠-𐋐𐌀-𐌟𐌭-𐍊𐍐-𐍵𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨵𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫤𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴣𐼀-𐼜𐼧𐼰-𐽅𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑅄𑅐-𑅲𑅶𑆃-𑆲𑇁-𑇄𑇚𑇜𑈀-𑈑𑈓-𑈫𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋞𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌽𑍐𑍝-𑍡𑐀-𑐴𑑇-𑑊𑒀-𑒯𑓄-𑓅𑓇𑖀-𑖮𑗘-𑗛𑘀-𑘯𑙄𑚀-𑚪𑜀-𑜚𑠀-𑠫𑢠-𑣟𑣿𑨀𑨋-𑨲𑨺𑩐𑩜-𑪃𑪆-𑪉𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰮𑱀𑱲-𑲏𑴀-𑴆𑴈-𑴉𑴋-𑴰𑵆𑵠-𑵥𑵧-𑵨𑵪-𑶉𑶘𑻠-𑻲𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖫐-𖫭𖬀-𖬯𖭀-𖭃𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐𖾓-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𞠀-𞣄𞤀-𞥃𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀][0-9A-Z_a-zªµ·ºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶ-ͷͻ-ͽͿΆ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԯԱ-Ֆՙՠ-ֈ֑-ֽֿׁ-ׂׄ-ׇׅא-תׯ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺ߽ࠀ-࠭ࡀ-࡛ࡠ-ࡪࢠ-ࢴࢶ-ࢽ࣓-ࣣ࣡-ॣ०-९ॱ-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-ৱৼ৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍ୖ-ୗଡ଼-ଢ଼ୟ-ୣ୦-୯ୱஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఀ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕ-ౖౘ-ౚౠ-ౣ౦-౯ಀ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೞೠ-ೣ೦-೯ೱ-ೲഀ-ഃഅ-ഌഎ-ഐഒ-ൄെ-ൈൊ-ൎൔ-ൗൟ-ൣ൦-൯ൺ-ൿං-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-ෳก-ฺเ-๎๐-๙ກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘-༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟፩-፱ᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៓ៗៜ-៝០-៩᠋-᠍᠐-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧ᪰-᪽ᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿ᳐-᳔᳒-᳹ᴀ-᷹᷻-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‿-⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙-゚ゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠧꡀ-ꡳꢀ-ꣅ꣐-꣙꣠-ꣷꣻꣽ-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꧠ-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯪ꯬-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹ︀-️︠-︯︳-︴﹍-﹏ﹱﹳﹷﹹﹻﹽﹿ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐇽𐊀-𐊜𐊠-𐋐𐋠𐌀-𐌟𐌭-𐍊𐍐-𐍺𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒠-𐒩𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀-𐨃𐨅-𐨆𐨌-𐨓𐨕-𐨗𐨙-𐨵𐨸-𐨿𐨺𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫦𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴧𐴰-𐴹𐼀-𐼜𐼧𐼰-𐽐𑀀-𑁆𑁦-𑁯𑁿-𑂺𑃐-𑃨𑃰-𑃹𑄀-𑄴𑄶-𑄿𑅄-𑅆𑅐-𑅳𑅶𑆀-𑇄𑇉-𑇌𑇐-𑇚𑇜𑈀-𑈑𑈓-𑈷𑈾𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋪𑋰-𑋹𑌀-𑌃𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌻-𑍄𑍇-𑍈𑍋-𑍍𑍐𑍗𑍝-𑍣𑍦-𑍬𑍰-𑍴𑐀-𑑊𑑐-𑑙𑑞𑒀-𑓅𑓇𑓐-𑓙𑖀-𑖵𑖸-𑗀𑗘-𑗝𑘀-𑙀𑙄𑙐-𑙙𑚀-𑚷𑛀-𑛉𑜀-𑜚𑜝-𑜫𑜰-𑜹𑠀-𑠺𑢠-𑣩𑣿𑨀-𑨾𑩇𑩐-𑪃𑪆-𑪙𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰶𑰸-𑱀𑱐-𑱙𑱲-𑲏𑲒-𑲧𑲩-𑲶𑴀-𑴆𑴈-𑴉𑴋-𑴶𑴺𑴼-𑴽𑴿-𑵇𑵐-𑵙𑵠-𑵥𑵧-𑵨𑵪-𑶎𑶐-𑶑𑶓-𑶘𑶠-𑶩𑻠-𑻶𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖩠-𖩩𖫐-𖫭𖫰-𖫴𖬀-𖬶𖭀-𖭃𖭐-𖭙𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐-𖽾𖾏-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𛲝-𛲞𝅥-𝅩𝅭-𝅲𝅻-𝆂𝆅-𝆋𝆪-𝆭𝉂-𝉄𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𝟎-𝟿𝨀-𝨶𝨻-𝩬𝩵𝪄𝪛-𝪟𝪡-𝪯𞀀-𞀆𞀈-𞀘𞀛-𞀡𞀣-𞀤𞀦-𞀪𞠀-𞣄𞣐-𞣖𞤀-𞥊𞥐-𞥙𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀󠄀-󠇯]+)|[A-Z_a-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶ-ͷͻ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮ-ٯٱ-ۓەۥ-ۦۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴ-ߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱৼਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡૹଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠ-ౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาเ-ๆກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳱᳵ-ᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪ-ꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽ-ꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹﹱﹳﹷﹹﹻﹽﹿ-ﻼＡ-Ｚａ-ｚｦ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐊀-𐊜𐊠-𐋐𐌀-𐌟𐌭-𐍊𐍐-𐍵𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨵𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫤𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴣𐼀-𐼜𐼧𐼰-𐽅𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑅄𑅐-𑅲𑅶𑆃-𑆲𑇁-𑇄𑇚𑇜𑈀-𑈑𑈓-𑈫𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋞𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌽𑍐𑍝-𑍡𑐀-𑐴𑑇-𑑊𑒀-𑒯𑓄-𑓅𑓇𑖀-𑖮𑗘-𑗛𑘀-𑘯𑙄𑚀-𑚪𑜀-𑜚𑠀-𑠫𑢠-𑣟𑣿𑨀𑨋-𑨲𑨺𑩐𑩜-𑪃𑪆-𑪉𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰮𑱀𑱲-𑲏𑴀-𑴆𑴈-𑴉𑴋-𑴰𑵆𑵠-𑵥𑵧-𑵨𑵪-𑶉𑶘𑻠-𑻲𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖫐-𖫭𖬀-𖬯𖭀-𖭃𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐𖾓-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𞠀-𞣄𞤀-𞥃𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀]\">\n+        <token type=\"NameDecorator\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <pop depth=\"1\"/>\n+      </rule>\n     </state>\n     <state name=\"root\">\n-      <rule><include state=\"blankspace\"/></rule>\n-      <rule><include state=\"comments\"/></rule>\n-      <rule pattern=\"@\"><token type=\"NameDecorator\"/><push state=\"attribute\"/></rule>\n-      <rule pattern=\"(true|false)\\b\"><token type=\"KeywordConstant\"/></rule>\n-      <rule pattern=\"(var|let|const|override)\\b\"><token type=\"KeywordDeclaration\"/></rule>\n-      <rule pattern=\"(alias|break|case|const_assert|continue|continuing|default|diagnostic|discard|else|enable|false|fn|for|if|loop|requires|return|struct|switch|true|while)\\b\"><token type=\"Keyword\"/></rule>\n-      <rule pattern=\"(NULL|Self|abstract|active|alignas|alignof|as|asm|asm_fragment|async|attribute|auto|await|become|binding_array|cast|catch|class|co_await|co_return|co_yield|coherent|column_major|common|compile|compile_fragment|concept|const_cast|consteval|constexpr|constinit|crate|debugger|decltype|delete|demote|demote_to_helper|do|dynamic_cast|enum|explicit|export|extends|extern|external|fallthrough|filter|final|finally|friend|from|fxgroup|get|goto|groupshared|highp|impl|implements|import|inline|instanceof|interface|layout|lowp|macro|macro_rules|match|mediump|meta|mod|module|move|mut|mutable|namespace|new|nil|noexcept|noinline|nointerpolation|noperspective|null|nullptr|of|operator|package|packoffset|partition|pass|patch|pixelfragment|precise|precision|premerge|priv|protected|pub|public|readonly|ref|regardless|register|reinterpret_cast|require|resource|restrict|self|set|shared|sizeof|smooth|snorm|static|static_assert|static_cast|std|subroutine|super|target|template|this|thread_local|throw|trait|try|type|typedef|typeid|typename|typeof|union|unless|unorm|unsafe|unsized|use|using|varying|virtual|volatile|wgsl|where|with|writeonly|yield)\\b\"><token type=\"KeywordReserved\"/></rule>\n-      <rule pattern=\"(read|write|read_write|function|private|workgroup|uniform|storage|perspective|linear|flat|center|centroid|sample|vertex_index|instance_index|position|front_facing|frag_depth|local_invocation_id|local_invocation_index|global_invocation_id|workgroup_id|num_workgroups|sample_index|sample_mask|rgba8unorm|rgba8snorm|rgba8uint|rgba8sint|rgba16uint|rgba16sint|rgba16float|r32uint|r32sint|r32float|rg32uint|rg32sint|rg32float|rgba32uint|rgba32sint|rgba32float|bgra8unorm)\\b\"><token type=\"NameBuiltin\"/></rule>\n-      <rule pattern=\"(bool|f16|f32|i32|sampler|sampler_comparison|texture_depth_2d|texture_depth_2d_array|texture_depth_cube|texture_depth_cube_array|texture_depth_multisampled_2d|texture_external|texture_external|u32)\\b\"><token type=\"NameBuiltin\"/></rule>\n-      <rule pattern=\"(array|atomic|mat2x2|mat2x3|mat2x4|mat3x2|mat3x3|mat3x4|mat4x2|mat4x3|mat4x4|ptr|texture_1d|texture_2d|texture_2d_array|texture_3d|texture_cube|texture_cube_array|texture_multisampled_2d|texture_storage_1d|texture_storage_2d|texture_storage_2d_array|texture_storage_3d|vec2|vec3|vec4)\\b\"><token type=\"NameBuiltin\"/></rule>\n-      <rule pattern=\"(vec2i|vec3i|vec4i|vec2u|vec3u|vec4u|vec2f|vec3f|vec4f|vec2h|vec3h|vec4h)\\b\"><token type=\"NameBuiltin\"/></rule>\n-      <rule pattern=\"(mat2x2f|mat2x3f|mat2x4f|mat3x2f|mat3x3f|mat3x4f|mat4x2f|mat4x3f|mat4x4f|mat2x2h|mat2x3h|mat2x4h|mat3x2h|mat3x3h|mat3x4h|mat4x2h|mat4x3h|mat4x4h)\\b\"><token type=\"NameBuiltin\"/></rule>\n-      <rule pattern=\"0[fh]\"><token type=\"LiteralNumberFloat\"/></rule>\n-      <rule pattern=\"[1-9][0-9]*[fh]\"><token type=\"LiteralNumberFloat\"/></rule>\n-      <rule pattern=\"[0-9]*\\.[0-9]+([eE][+-]?[0-9]+)?[fh]?\"><token type=\"LiteralNumberFloat\"/></rule>\n-      <rule pattern=\"[0-9]+\\.[0-9]*([eE][+-]?[0-9]+)?[fh]?\"><token type=\"LiteralNumberFloat\"/></rule>\n-      <rule pattern=\"[0-9]+[eE][+-]?[0-9]+[fh]?\"><token type=\"LiteralNumberFloat\"/></rule>\n-      <rule pattern=\"0[xX][0-9a-fA-F]*\\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?\"><token type=\"LiteralNumberFloat\"/></rule>\n-      <rule pattern=\"0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?\"><token type=\"LiteralNumberFloat\"/></rule>\n-      <rule pattern=\"0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?\"><token type=\"LiteralNumberFloat\"/></rule>\n-      <rule pattern=\"0[xX][0-9a-fA-F]+[iu]?\"><token type=\"LiteralNumberHex\"/></rule>\n-      <rule pattern=\"[1-9][0-9]*[iu]?\"><token type=\"LiteralNumberInteger\"/></rule>\n-      <rule pattern=\"0[iu]?\"><token type=\"LiteralNumberInteger\"/></rule>\n-      <rule pattern=\"[{}()\\[\\],\\.;:]\"><token type=\"Punctuation\"/></rule>\n-      <rule pattern=\"-&gt;\"><token type=\"Punctuation\"/></rule>\n-      <rule pattern=\"[+\\-*/%&amp;|&lt;&gt;^!~=]\"><token type=\"Operator\"/></rule>\n-      <rule pattern=\"([_A-Z_a-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶ-ͷͻ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮ-ٯٱ-ۓەۥ-ۦۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴ-ߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱৼਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡૹଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠ-ౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาเ-ๆກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳱᳵ-ᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪ-ꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽ-ꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹﹱﹳﹷﹹﹻﹽﹿ-ﻼＡ-Ｚａ-ｚｦ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐊀-𐊜𐊠-𐋐𐌀-𐌟𐌭-𐍊𐍐-𐍵𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨵𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫤𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴣𐼀-𐼜𐼧𐼰-𐽅𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑅄𑅐-𑅲𑅶𑆃-𑆲𑇁-𑇄𑇚𑇜𑈀-𑈑𑈓-𑈫𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋞𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌽𑍐𑍝-𑍡𑐀-𑐴𑑇-𑑊𑒀-𑒯𑓄-𑓅𑓇𑖀-𑖮𑗘-𑗛𑘀-𑘯𑙄𑚀-𑚪𑜀-𑜚𑠀-𑠫𑢠-𑣟𑣿𑨀𑨋-𑨲𑨺𑩐𑩜-𑪃𑪆-𑪉𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰮𑱀𑱲-𑲏𑴀-𑴆𑴈-𑴉𑴋-𑴰𑵆𑵠-𑵥𑵧-𑵨𑵪-𑶉𑶘𑻠-𑻲𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖫐-𖫭𖬀-𖬯𖭀-𖭃𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐𖾓-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𞠀-𞣄𞤀-𞥃𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀][0-9A-Z_a-zªµ·ºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶ-ͷͻ-ͽͿΆ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԯԱ-Ֆՙՠ-ֈ֑-ֽֿׁ-ׂׄ-ׇׅא-תׯ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺ߽ࠀ-࠭ࡀ-࡛ࡠ-ࡪࢠ-ࢴࢶ-ࢽ࣓-ࣣ࣡-ॣ०-९ॱ-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-ৱৼ৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍ୖ-ୗଡ଼-ଢ଼ୟ-ୣ୦-୯ୱஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఀ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕ-ౖౘ-ౚౠ-ౣ౦-౯ಀ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೞೠ-ೣ೦-೯ೱ-ೲഀ-ഃഅ-ഌഎ-ഐഒ-ൄെ-ൈൊ-ൎൔ-ൗൟ-ൣ൦-൯ൺ-ൿං-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-ෳก-ฺเ-๎๐-๙ກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘-༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟፩-፱ᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៓ៗៜ-៝០-៩᠋-᠍᠐-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧ᪰-᪽ᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿ᳐-᳔᳒-᳹ᴀ-᷹᷻-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‿-⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙-゚ゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠧꡀ-ꡳꢀ-ꣅ꣐-꣙꣠-ꣷꣻꣽ-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꧠ-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯪ꯬-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹ︀-️︠-︯︳-︴﹍-﹏ﹱﹳﹷﹹﹻﹽﹿ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐇽𐊀-𐊜𐊠-𐋐𐋠𐌀-𐌟𐌭-𐍊𐍐-𐍺𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒠-𐒩𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀-𐨃𐨅-𐨆𐨌-𐨓𐨕-𐨗𐨙-𐨵𐨸-𐨿𐨺𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫦𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴧𐴰-𐴹𐼀-𐼜𐼧𐼰-𐽐𑀀-𑁆𑁦-𑁯𑁿-𑂺𑃐-𑃨𑃰-𑃹𑄀-𑄴𑄶-𑄿𑅄-𑅆𑅐-𑅳𑅶𑆀-𑇄𑇉-𑇌𑇐-𑇚𑇜𑈀-𑈑𑈓-𑈷𑈾𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋪𑋰-𑋹𑌀-𑌃𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌻-𑍄𑍇-𑍈𑍋-𑍍𑍐𑍗𑍝-𑍣𑍦-𑍬𑍰-𑍴𑐀-𑑊𑑐-𑑙𑑞𑒀-𑓅𑓇𑓐-𑓙𑖀-𑖵𑖸-𑗀𑗘-𑗝𑘀-𑙀𑙄𑙐-𑙙𑚀-𑚷𑛀-𑛉𑜀-𑜚𑜝-𑜫𑜰-𑜹𑠀-𑠺𑢠-𑣩𑣿𑨀-𑨾𑩇𑩐-𑪃𑪆-𑪙𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰶𑰸-𑱀𑱐-𑱙𑱲-𑲏𑲒-𑲧𑲩-𑲶𑴀-𑴆𑴈-𑴉𑴋-𑴶𑴺𑴼-𑴽𑴿-𑵇𑵐-𑵙𑵠-𑵥𑵧-𑵨𑵪-𑶎𑶐-𑶑𑶓-𑶘𑶠-𑶩𑻠-𑻶𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖩠-𖩩𖫐-𖫭𖫰-𖫴𖬀-𖬶𖭀-𖭃𖭐-𖭙𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐-𖽾𖾏-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𛲝-𛲞𝅥-𝅩𝅭-𝅲𝅻-𝆂𝆅-𝆋𝆪-𝆭𝉂-𝉄𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𝟎-𝟿𝨀-𝨶𝨻-𝩬𝩵𝪄𝪛-𝪟𝪡-𝪯𞀀-𞀆𞀈-𞀘𞀛-𞀡𞀣-𞀤𞀦-𞀪𞠀-𞣄𞣐-𞣖𞤀-𞥊𞥐-𞥙𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀󠄀-󠇯]+)|[A-Z_a-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶ-ͷͻ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮ-ٯٱ-ۓەۥ-ۦۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴ-ߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱৼਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡૹଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠ-ౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาเ-ๆກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳱᳵ-ᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪ-ꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽ-ꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹﹱﹳﹷﹹﹻﹽﹿ-ﻼＡ-Ｚａ-ｚｦ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐊀-𐊜𐊠-𐋐𐌀-𐌟𐌭-𐍊𐍐-𐍵𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨵𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫤𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴣𐼀-𐼜𐼧𐼰-𐽅𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑅄𑅐-𑅲𑅶𑆃-𑆲𑇁-𑇄𑇚𑇜𑈀-𑈑𑈓-𑈫𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋞𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌽𑍐𑍝-𑍡𑐀-𑐴𑑇-𑑊𑒀-𑒯𑓄-𑓅𑓇𑖀-𑖮𑗘-𑗛𑘀-𑘯𑙄𑚀-𑚪𑜀-𑜚𑠀-𑠫𑢠-𑣟𑣿𑨀𑨋-𑨲𑨺𑩐𑩜-𑪃𑪆-𑪉𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰮𑱀𑱲-𑲏𑴀-𑴆𑴈-𑴉𑴋-𑴰𑵆𑵠-𑵥𑵧-𑵨𑵪-𑶉𑶘𑻠-𑻲𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖫐-𖫭𖬀-𖬯𖭀-𖭃𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐𖾓-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𞠀-𞣄𞤀-𞥃𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀]\"><token type=\"Name\"/></rule>\n+      <rule>\n+        <include state=\"blankspace\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"comments\"/>\n+      </rule>\n+      <rule pattern=\"@\">\n+        <token type=\"NameDecorator\"/>\n+        <push state=\"attribute\"/>\n+      </rule>\n+      <rule pattern=\"(true|false)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"(var|let|const|override)\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"(alias|break|case|const_assert|continue|continuing|default|diagnostic|discard|else|enable|false|fn|for|if|loop|requires|return|struct|switch|true|while)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(NULL|Self|abstract|active|alignas|alignof|as|asm|asm_fragment|async|attribute|auto|await|become|binding_array|cast|catch|class|co_await|co_return|co_yield|coherent|column_major|common|compile|compile_fragment|concept|const_cast|consteval|constexpr|constinit|crate|debugger|decltype|delete|demote|demote_to_helper|do|dynamic_cast|enum|explicit|export|extends|extern|external|fallthrough|filter|final|finally|friend|from|fxgroup|get|goto|groupshared|highp|impl|implements|import|inline|instanceof|interface|layout|lowp|macro|macro_rules|match|mediump|meta|mod|module|move|mut|mutable|namespace|new|nil|noexcept|noinline|nointerpolation|noperspective|null|nullptr|of|operator|package|packoffset|partition|pass|patch|pixelfragment|precise|precision|premerge|priv|protected|pub|public|readonly|ref|regardless|register|reinterpret_cast|require|resource|restrict|self|set|shared|sizeof|smooth|snorm|static|static_assert|static_cast|std|subroutine|super|target|template|this|thread_local|throw|trait|try|type|typedef|typeid|typename|typeof|union|unless|unorm|unsafe|unsized|use|using|varying|virtual|volatile|wgsl|where|with|writeonly|yield)\\b\">\n+        <token type=\"KeywordReserved\"/>\n+      </rule>\n+      <rule pattern=\"(read|write|read_write|function|private|workgroup|uniform|storage|perspective|linear|flat|center|centroid|sample|vertex_index|instance_index|position|front_facing|frag_depth|local_invocation_id|local_invocation_index|global_invocation_id|workgroup_id|num_workgroups|sample_index|sample_mask|rgba8unorm|rgba8snorm|rgba8uint|rgba8sint|rgba16uint|rgba16sint|rgba16float|r32uint|r32sint|r32float|rg32uint|rg32sint|rg32float|rgba32uint|rgba32sint|rgba32float|bgra8unorm)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"(bool|f16|f32|i32|sampler|sampler_comparison|texture_depth_2d|texture_depth_2d_array|texture_depth_cube|texture_depth_cube_array|texture_depth_multisampled_2d|texture_external|texture_external|u32)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"(array|atomic|mat2x2|mat2x3|mat2x4|mat3x2|mat3x3|mat3x4|mat4x2|mat4x3|mat4x4|ptr|texture_1d|texture_2d|texture_2d_array|texture_3d|texture_cube|texture_cube_array|texture_multisampled_2d|texture_storage_1d|texture_storage_2d|texture_storage_2d_array|texture_storage_3d|vec2|vec3|vec4)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"(vec2i|vec3i|vec4i|vec2u|vec3u|vec4u|vec2f|vec3f|vec4f|vec2h|vec3h|vec4h)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"(mat2x2f|mat2x3f|mat2x4f|mat3x2f|mat3x3f|mat3x4f|mat4x2f|mat4x3f|mat4x4f|mat2x2h|mat2x3h|mat2x4h|mat3x2h|mat3x3h|mat3x4h|mat4x2h|mat4x3h|mat4x4h)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"0[fh]\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"[1-9][0-9]*[fh]\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]*\\.[0-9]+([eE][+-]?[0-9]+)?[fh]?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+\\.[0-9]*([eE][+-]?[0-9]+)?[fh]?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+[eE][+-]?[0-9]+[fh]?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0[xX][0-9a-fA-F]*\\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0[xX][0-9a-fA-F]+[iu]?\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"[1-9][0-9]*[iu]?\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"0[iu]?\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"[{}()\\[\\],\\.;:]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"-&gt;\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"[+\\-*/%&amp;|&lt;&gt;^!~=]\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"([_A-Z_a-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶ-ͷͻ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮ-ٯٱ-ۓەۥ-ۦۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴ-ߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱৼਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡૹଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠ-ౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาเ-ๆກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳱᳵ-ᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪ-ꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽ-ꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹﹱﹳﹷﹹﹻﹽﹿ-ﻼＡ-Ｚａ-ｚｦ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐊀-𐊜𐊠-𐋐𐌀-𐌟𐌭-𐍊𐍐-𐍵𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨵𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫤𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴣𐼀-𐼜𐼧𐼰-𐽅𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑅄𑅐-𑅲𑅶𑆃-𑆲𑇁-𑇄𑇚𑇜𑈀-𑈑𑈓-𑈫𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋞𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌽𑍐𑍝-𑍡𑐀-𑐴𑑇-𑑊𑒀-𑒯𑓄-𑓅𑓇𑖀-𑖮𑗘-𑗛𑘀-𑘯𑙄𑚀-𑚪𑜀-𑜚𑠀-𑠫𑢠-𑣟𑣿𑨀𑨋-𑨲𑨺𑩐𑩜-𑪃𑪆-𑪉𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰮𑱀𑱲-𑲏𑴀-𑴆𑴈-𑴉𑴋-𑴰𑵆𑵠-𑵥𑵧-𑵨𑵪-𑶉𑶘𑻠-𑻲𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖫐-𖫭𖬀-𖬯𖭀-𖭃𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐𖾓-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𞠀-𞣄𞤀-𞥃𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀][0-9A-Z_a-zªµ·ºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶ-ͷͻ-ͽͿΆ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԯԱ-Ֆՙՠ-ֈ֑-ֽֿׁ-ׂׄ-ׇׅא-תׯ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺ߽ࠀ-࠭ࡀ-࡛ࡠ-ࡪࢠ-ࢴࢶ-ࢽ࣓-ࣣ࣡-ॣ०-९ॱ-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-ৱৼ৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍ୖ-ୗଡ଼-ଢ଼ୟ-ୣ୦-୯ୱஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఀ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕ-ౖౘ-ౚౠ-ౣ౦-౯ಀ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೞೠ-ೣ೦-೯ೱ-ೲഀ-ഃഅ-ഌഎ-ഐഒ-ൄെ-ൈൊ-ൎൔ-ൗൟ-ൣ൦-൯ൺ-ൿං-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-ෳก-ฺเ-๎๐-๙ກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘-༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟፩-፱ᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៓ៗៜ-៝០-៩᠋-᠍᠐-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧ᪰-᪽ᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿ᳐-᳔᳒-᳹ᴀ-᷹᷻-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‿-⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙-゚ゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠧꡀ-ꡳꢀ-ꣅ꣐-꣙꣠-ꣷꣻꣽ-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꧠ-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯪ꯬-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹ︀-️︠-︯︳-︴﹍-﹏ﹱﹳﹷﹹﹻﹽﹿ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐇽𐊀-𐊜𐊠-𐋐𐋠𐌀-𐌟𐌭-𐍊𐍐-𐍺𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒠-𐒩𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀-𐨃𐨅-𐨆𐨌-𐨓𐨕-𐨗𐨙-𐨵𐨸-𐨿𐨺𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫦𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴧𐴰-𐴹𐼀-𐼜𐼧𐼰-𐽐𑀀-𑁆𑁦-𑁯𑁿-𑂺𑃐-𑃨𑃰-𑃹𑄀-𑄴𑄶-𑄿𑅄-𑅆𑅐-𑅳𑅶𑆀-𑇄𑇉-𑇌𑇐-𑇚𑇜𑈀-𑈑𑈓-𑈷𑈾𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋪𑋰-𑋹𑌀-𑌃𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌻-𑍄𑍇-𑍈𑍋-𑍍𑍐𑍗𑍝-𑍣𑍦-𑍬𑍰-𑍴𑐀-𑑊𑑐-𑑙𑑞𑒀-𑓅𑓇𑓐-𑓙𑖀-𑖵𑖸-𑗀𑗘-𑗝𑘀-𑙀𑙄𑙐-𑙙𑚀-𑚷𑛀-𑛉𑜀-𑜚𑜝-𑜫𑜰-𑜹𑠀-𑠺𑢠-𑣩𑣿𑨀-𑨾𑩇𑩐-𑪃𑪆-𑪙𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰶𑰸-𑱀𑱐-𑱙𑱲-𑲏𑲒-𑲧𑲩-𑲶𑴀-𑴆𑴈-𑴉𑴋-𑴶𑴺𑴼-𑴽𑴿-𑵇𑵐-𑵙𑵠-𑵥𑵧-𑵨𑵪-𑶎𑶐-𑶑𑶓-𑶘𑶠-𑶩𑻠-𑻶𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖩠-𖩩𖫐-𖫭𖫰-𖫴𖬀-𖬶𖭀-𖭃𖭐-𖭙𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐-𖽾𖾏-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𛲝-𛲞𝅥-𝅩𝅭-𝅲𝅻-𝆂𝆅-𝆋𝆪-𝆭𝉂-𝉄𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𝟎-𝟿𝨀-𝨶𝨻-𝩬𝩵𝪄𝪛-𝪟𝪡-𝪯𞀀-𞀆𞀈-𞀘𞀛-𞀡𞀣-𞀤𞀦-𞀪𞠀-𞣄𞣐-𞣖𞤀-𞥊𞥐-𞥙𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀󠄀-󠇯]+)|[A-Z_a-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶ-ͷͻ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮ-ٯٱ-ۓەۥ-ۦۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴ-ߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱৼਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡૹଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠ-ౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาเ-ๆກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳱᳵ-ᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪ-ꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽ-ꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹﹱﹳﹷﹹﹻﹽﹿ-ﻼＡ-Ｚａ-ｚｦ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐊀-𐊜𐊠-𐋐𐌀-𐌟𐌭-𐍊𐍐-𐍵𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨵𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫤𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴣𐼀-𐼜𐼧𐼰-𐽅𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑅄𑅐-𑅲𑅶𑆃-𑆲𑇁-𑇄𑇚𑇜𑈀-𑈑𑈓-𑈫𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋞𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌽𑍐𑍝-𑍡𑐀-𑐴𑑇-𑑊𑒀-𑒯𑓄-𑓅𑓇𑖀-𑖮𑗘-𑗛𑘀-𑘯𑙄𑚀-𑚪𑜀-𑜚𑠀-𑠫𑢠-𑣟𑣿𑨀𑨋-𑨲𑨺𑩐𑩜-𑪃𑪆-𑪉𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰮𑱀𑱲-𑲏𑴀-𑴆𑴈-𑴉𑴋-𑴰𑵆𑵠-𑵥𑵧-𑵨𑵪-𑶉𑶘𑻠-𑻲𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖫐-𖫭𖬀-𖬯𖭀-𖭃𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐𖾓-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𞠀-𞣄𞤀-𞥃𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀]\">\n+        <token type=\"Name\"/>\n+      </rule>\n     </state>\n     <state name=\"block_comment\">\n-      <rule pattern=\"[^*/]+\"><token type=\"CommentMultiline\"/></rule>\n-      <rule pattern=\"/\\*\"><token type=\"CommentMultiline\"/><push/></rule>\n-      <rule pattern=\"\\*/\"><token type=\"CommentMultiline\"/><pop depth=\"1\"/></rule>\n-      <rule pattern=\"[*/]\"><token type=\"CommentMultiline\"/></rule>\n+      <rule pattern=\"[^*/]+\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"/\\*\">\n+        <token type=\"CommentMultiline\"/>\n+        <push/>\n+      </rule>\n+      <rule pattern=\"\\*/\">\n+        <token type=\"CommentMultiline\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"[*/]\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n     </state>\n   </rules>\n-</lexer>\n-\n+</lexer>\n\\ No newline at end of file",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/wgsl.xml"
    },
    {
      "sha": "410183261069af5a50ce030d0a7c79b552156e6b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/z80.xml",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fz80.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fz80.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fz80.xml?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,36 +0,0 @@\n-\n-<lexer>\n-  <config>\n-    <name>Z80 Assembly</name>\n-    <alias>z80</alias>\n-    <filename>*.z80</filename>\n-    <filename>*.asm</filename>\n-    <case_insensitive>true</case_insensitive>\n-  </config>\n-  <rules>\n-    <state name=\"root\">\n-      <rule pattern=\";.*?$\"><token type=\"CommentSingle\"/></rule>\n-      <rule pattern=\"^[.\\w]+:\"><token type=\"NameLabel\"/></rule>\n-      <rule pattern=\"((0x)|\\$)[0-9a-fA-F]+\"><token type=\"LiteralNumberHex\"/></rule>\n-      <rule pattern=\"[0-9][0-9a-fA-F]+h\"><token type=\"LiteralNumberHex\"/></rule>\n-      <rule pattern=\"((0b)|%)[01]+\"><token type=\"LiteralNumberBin\"/></rule>\n-      <rule pattern=\"-?[0-9]+\"><token type=\"LiteralNumberInteger\"/></rule>\n-      <rule pattern=\"&quot;\"><token type=\"LiteralString\"/><push state=\"string\"/></rule>\n-      <rule pattern=\"&#x27;\\\\?.&#x27;\"><token type=\"LiteralStringChar\"/></rule>\n-      <rule pattern=\"[,=()\\\\]\"><token type=\"Punctuation\"/></rule>\n-      <rule pattern=\"^\\s*#\\w+\"><token type=\"CommentPreproc\"/></rule>\n-      <rule pattern=\"\\.(db|dw|end|org|byte|word|fill|block|addinstr|echo|error|list|nolist|equ|show|option|seek)\"><token type=\"NameBuiltin\"/></rule>\n-      <rule pattern=\"(ex|exx|ld|ldd|lddr|ldi|ldir|pop|push|adc|add|cp|cpd|cpdr|cpi|cpir|cpl|daa|dec|inc|neg|sbc|sub|and|bit|ccf|or|res|scf|set|xor|rl|rla|rlc|rlca|rld|rr|rra|rrc|rrca|rrd|sla|sra|srl|call|djnz|jp|jr|ret|rst|nop|reti|retn|di|ei|halt|im|in|ind|indr|ini|inir|out|outd|otdr|outi|otir)\"><token type=\"Keyword\"/></rule>\n-      <rule pattern=\"(z|nz|c|nc|po|pe|p|m)\"><token type=\"Keyword\"/></rule>\n-      <rule pattern=\"[+-/*~\\^&amp;|]\"><token type=\"Operator\"/></rule>\n-      <rule pattern=\"\\w+\"><token type=\"Text\"/></rule>\n-      <rule pattern=\"\\s+\"><token type=\"Text\"/></rule>\n-    </state>\n-    <state name=\"string\">\n-      <rule pattern=\"[^&quot;\\\\]+\"><token type=\"LiteralString\"/></rule>\n-      <rule pattern=\"\\\\.\"><token type=\"LiteralStringEscape\"/></rule>\n-      <rule pattern=\"&quot;\"><token type=\"LiteralString\"/><pop depth=\"1\"/></rule>\n-    </state>\n-  </rules>\n-</lexer>\n-"
    },
    {
      "sha": "5bb77a9adc4497ebce6685dde351a323fa26f9ac",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/z80_assembly.xml",
      "status": "added",
      "additions": 74,
      "deletions": 0,
      "changes": 74,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fz80_assembly.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fz80_assembly.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fz80_assembly.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,74 @@\n+<lexer>\n+  <config>\n+    <name>Z80 Assembly</name>\n+    <alias>z80</alias>\n+    <filename>*.z80</filename>\n+    <filename>*.asm</filename>\n+    <case_insensitive>true</case_insensitive>\n+  </config>\n+  <rules>\n+    <state name=\"string\">\n+      <rule pattern=\"[^&#34;\\\\]+\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"\\\\.\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule pattern=\";.*?$\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"^[.\\w]+:\">\n+        <token type=\"NameLabel\"/>\n+      </rule>\n+      <rule pattern=\"((0x)|\\$)[0-9a-fA-F]+\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"[0-9][0-9a-fA-F]+h\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"((0b)|%)[01]+\">\n+        <token type=\"LiteralNumberBin\"/>\n+      </rule>\n+      <rule pattern=\"-?[0-9]+\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralString\"/>\n+        <push state=\"string\"/>\n+      </rule>\n+      <rule pattern=\"&#39;\\\\?.&#39;\">\n+        <token type=\"LiteralStringChar\"/>\n+      </rule>\n+      <rule pattern=\"[,=()\\\\]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"^\\s*#\\w+\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"\\.(db|dw|end|org|byte|word|fill|block|addinstr|echo|error|list|nolist|equ|show|option|seek)\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"(ex|exx|ld|ldd|lddr|ldi|ldir|pop|push|adc|add|cp|cpd|cpdr|cpi|cpir|cpl|daa|dec|inc|neg|sbc|sub|and|bit|ccf|or|res|scf|set|xor|rl|rla|rlc|rlca|rld|rr|rra|rrc|rrca|rrd|sla|sra|srl|call|djnz|jp|jr|ret|rst|nop|reti|retn|di|ei|halt|im|in|ind|indr|ini|inir|out|outd|otdr|outi|otir)\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(z|nz|c|nc|po|pe|p|m)\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"[+-/*~\\^&amp;|]\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"\\w+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "aa93ce07a386f262aa4043a1be78ca657bf3cda0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/fortran_fixed.go",
      "status": "removed",
      "additions": 0,
      "deletions": 38,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Ffortran_fixed.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Ffortran_fixed.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Ffortran_fixed.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,38 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// FortranFixed lexer.\n-var FortranFixed = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:            \"FortranFixed\",\n-\t\tAliases:         []string{\"fortranfixed\"},\n-\t\tFilenames:       []string{\"*.f\", \"*.F\"},\n-\t\tMimeTypes:       []string{\"text/x-fortran\"},\n-\t\tNotMultiline:    true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\tfunc() Rules {\n-\t\treturn Rules{\n-\t\t\t\"root\": {\n-\t\t\t\t{`[C*].*\\n`, Comment, nil},\n-\t\t\t\t{`#.*\\n`, CommentPreproc, nil},\n-\t\t\t\t{` {0,4}!.*\\n`, Comment, nil},\n-\t\t\t\t{`(.{5})`, NameLabel, Push(\"cont-char\")},\n-\t\t\t\t{`.*\\n`, Using(\"Fortran\"), nil},\n-\t\t\t},\n-\t\t\t\"cont-char\": {\n-\t\t\t\t{` `, TextWhitespace, Push(\"code\")},\n-\t\t\t\t{`.`, GenericStrong, Push(\"code\")},\n-\t\t\t},\n-\t\t\t\"code\": {\n-\t\t\t\t{`(.{66})(.*)(\\n)`, ByGroups(Using(\"Fortran\"), Comment, TextWhitespace), Push(\"root\")},\n-\t\t\t\t{`(.*)(!.*)(\\n)`, ByGroups(Using(\"Fortran\"), Comment, TextWhitespace), Push(\"root\")},\n-\t\t\t\t{`(.*)(\\n)`, ByGroups(Using(\"Fortran\"), TextWhitespace), Push(\"root\")},\n-\t\t\t\tDefault(Push(\"root\")),\n-\t\t\t},\n-\t\t}\n-\t},\n-))"
    },
    {
      "sha": "77bc2259c6b17072ebf771c16ea1e7e36148efd8",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/go.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fgo.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fgo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fgo.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -38,7 +38,7 @@ func goRules() Rules {\n \t\t\t{`(var|func|struct|map|chan|type|interface|const)\\b`, KeywordDeclaration, nil},\n \t\t\t{Words(``, `\\b`, `break`, `default`, `select`, `case`, `defer`, `go`, `else`, `goto`, `switch`, `fallthrough`, `if`, `range`, `continue`, `for`, `return`), Keyword, nil},\n \t\t\t{`(true|false|iota|nil)\\b`, KeywordConstant, nil},\n-\t\t\t{Words(``, `\\b(\\()`, `uint`, `uint8`, `uint16`, `uint32`, `uint64`, `int`, `int8`, `int16`, `int32`, `int64`, `float`, `float32`, `float64`, `complex64`, `complex128`, `byte`, `rune`, `string`, `bool`, `error`, `uintptr`, `print`, `println`, `panic`, `recover`, `close`, `complex`, `real`, `imag`, `len`, `cap`, `append`, `copy`, `delete`, `new`, `make`), ByGroups(NameBuiltin, Punctuation), nil},\n+\t\t\t{Words(``, `\\b(\\()`, `uint`, `uint8`, `uint16`, `uint32`, `uint64`, `int`, `int8`, `int16`, `int32`, `int64`, `float`, `float32`, `float64`, `complex64`, `complex128`, `byte`, `rune`, `string`, `bool`, `error`, `uintptr`, `print`, `println`, `panic`, `recover`, `close`, `complex`, `real`, `imag`, `len`, `cap`, `append`, `copy`, `delete`, `new`, `make`, `clear`, `min`, `max`), ByGroups(NameBuiltin, Punctuation), nil},\n \t\t\t{Words(``, `\\b`, `uint`, `uint8`, `uint16`, `uint32`, `uint64`, `int`, `int8`, `int16`, `int32`, `int64`, `float`, `float32`, `float64`, `complex64`, `complex128`, `byte`, `rune`, `string`, `bool`, `error`, `uintptr`), KeywordType, nil},\n \t\t\t{`\\d+i`, LiteralNumber, nil},\n \t\t\t{`\\d+\\.\\d*([Ee][-+]\\d+)?i`, LiteralNumber, nil},"
    },
    {
      "sha": "9a72de865bf7d6b4c518d148358b85b105bae8c7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/haxe.go",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fhaxe.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fhaxe.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fhaxe.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -630,7 +630,9 @@ func haxePreProcMutator(state *LexerState) error {\n \t\t\tstate.Stack = stack[len(stack)-1]\n \t\t}\n \tcase \"end\":\n-\t\tstack = stack[:len(stack)-1]\n+\t\tif len(stack) > 0 {\n+\t\t\tstack = stack[:len(stack)-1]\n+\t\t}\n \t}\n \n \tif proc == \"if\" || proc == \"elseif\" {"
    },
    {
      "sha": "c858042bf9d2de9f99fff9de6dd2103e5610104b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/html.go",
      "status": "modified",
      "additions": 2,
      "deletions": 54,
      "changes": 56,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fhtml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fhtml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fhtml.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,60 +1,8 @@\n package lexers\n \n import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n+\t\"github.com/alecthomas/chroma/v2\"\n )\n \n // HTML lexer.\n-var HTML = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:            \"HTML\",\n-\t\tAliases:         []string{\"html\"},\n-\t\tFilenames:       []string{\"*.html\", \"*.htm\", \"*.xhtml\", \"*.xslt\"},\n-\t\tMimeTypes:       []string{\"text/html\", \"application/xhtml+xml\"},\n-\t\tNotMultiline:    true,\n-\t\tDotAll:          true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\thtmlRules,\n-))\n-\n-func htmlRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^<&]+`, Text, nil},\n-\t\t\t{`&\\S*?;`, NameEntity, nil},\n-\t\t\t{`\\<\\!\\[CDATA\\[.*?\\]\\]\\>`, CommentPreproc, nil},\n-\t\t\t{`<!--`, Comment, Push(\"comment\")},\n-\t\t\t{`<\\?.*?\\?>`, CommentPreproc, nil},\n-\t\t\t{`<![^>]*>`, CommentPreproc, nil},\n-\t\t\t{`(<)(\\s*)(script)(\\s*)`, ByGroups(Punctuation, Text, NameTag, Text), Push(\"script-content\", \"tag\")},\n-\t\t\t{`(<)(\\s*)(style)(\\s*)`, ByGroups(Punctuation, Text, NameTag, Text), Push(\"style-content\", \"tag\")},\n-\t\t\t{`(<)(\\s*)([\\w:.-]+)`, ByGroups(Punctuation, Text, NameTag), Push(\"tag\")},\n-\t\t\t{`(<)(\\s*)(/)(\\s*)([\\w:.-]+)(\\s*)(>)`, ByGroups(Punctuation, Text, Punctuation, Text, NameTag, Text, Punctuation), nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^-]+`, Comment, nil},\n-\t\t\t{`-->`, Comment, Pop(1)},\n-\t\t\t{`-`, Comment, nil},\n-\t\t},\n-\t\t\"tag\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`([\\w:-]+\\s*)(=)(\\s*)`, ByGroups(NameAttribute, Operator, Text), Push(\"attr\")},\n-\t\t\t{`[\\w:-]+`, NameAttribute, nil},\n-\t\t\t{`(/?)(\\s*)(>)`, ByGroups(Punctuation, Text, Punctuation), Pop(1)},\n-\t\t},\n-\t\t\"script-content\": {\n-\t\t\t{`(<)(\\s*)(/)(\\s*)(script)(\\s*)(>)`, ByGroups(Punctuation, Text, Punctuation, Text, NameTag, Text, Punctuation), Pop(1)},\n-\t\t\t{`.+?(?=<\\s*/\\s*script\\s*>)`, Using(\"Javascript\"), nil},\n-\t\t},\n-\t\t\"style-content\": {\n-\t\t\t{`(<)(\\s*)(/)(\\s*)(style)(\\s*)(>)`, ByGroups(Punctuation, Text, Punctuation, Text, NameTag, Text, Punctuation), Pop(1)},\n-\t\t\t{`.+?(?=<\\s*/\\s*style\\s*>)`, Using(\"CSS\"), nil},\n-\t\t},\n-\t\t\"attr\": {\n-\t\t\t{`\".*?\"`, LiteralString, Pop(1)},\n-\t\t\t{`'.*?'`, LiteralString, Pop(1)},\n-\t\t\t{`[^\\s>]+`, LiteralString, Pop(1)},\n-\t\t},\n-\t}\n-}\n+var HTML = chroma.MustNewXMLLexer(embedded, \"embedded/html.xml\")"
    },
    {
      "sha": "4fa35ad2222311d5d4310f16b48a2f746636d0ba",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/lexers.go",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Flexers.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Flexers.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Flexers.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -30,6 +30,9 @@ func Names(withAliases bool) []string {\n }\n \n // Get a Lexer by name, alias or file extension.\n+//\n+// Note that this if there isn't an exact match on name or alias, this will\n+// call Match(), so it is not efficient.\n func Get(name string) chroma.Lexer {\n \treturn GlobalLexerRegistry.Get(name)\n }\n@@ -40,6 +43,9 @@ func MatchMimeType(mimeType string) chroma.Lexer {\n }\n \n // Match returns the first lexer matching filename.\n+//\n+// Note that this iterates over all file patterns in all lexers, so it's not\n+// particularly efficient.\n func Match(filename string) chroma.Lexer {\n \treturn GlobalLexerRegistry.Match(filename)\n }"
    },
    {
      "sha": "1d2a5d32633c5676e1ab5365833a7d66fc765101",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/make.go",
      "status": "removed",
      "additions": 0,
      "deletions": 56,
      "changes": 56,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmake.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmake.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmake.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,56 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// Makefile lexer.\n-var Makefile = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"Makefile\",\n-\t\tAliases:   []string{\"make\", \"makefile\", \"mf\", \"bsdmake\"},\n-\t\tFilenames: []string{\"*.mak\", \"*.mk\", \"Makefile\", \"makefile\", \"Makefile.*\", \"GNUmakefile\", \"BSDmakefile\"},\n-\t\tMimeTypes: []string{\"text/x-makefile\"},\n-\t\tEnsureNL:  true,\n-\t},\n-\tmakefileRules,\n-))\n-\n-func makefileRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^(?:[\\t ]+.*\\n|\\n)+`, Using(\"Bash\"), nil},\n-\t\t\t{`\\$[<@$+%?|*]`, Keyword, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`#.*?\\n`, Comment, nil},\n-\t\t\t{`(export)(\\s+)(?=[\\w${}\\t -]+\\n)`, ByGroups(Keyword, Text), Push(\"export\")},\n-\t\t\t{`export\\s+`, Keyword, nil},\n-\t\t\t{`([\\w${}().-]+)(\\s*)([!?:+]?=)([ \\t]*)((?:.*\\\\\\n)+|.*\\n)`, ByGroups(NameVariable, Text, Operator, Text, Using(\"Bash\")), nil},\n-\t\t\t{`(?s)\"(\\\\\\\\|\\\\.|[^\"\\\\])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`(?s)'(\\\\\\\\|\\\\.|[^'\\\\])*'`, LiteralStringSingle, nil},\n-\t\t\t{`([^\\n:]+)(:+)([ \\t]*)`, ByGroups(NameFunction, Operator, Text), Push(\"block-header\")},\n-\t\t\t{`\\$\\(`, Keyword, Push(\"expansion\")},\n-\t\t},\n-\t\t\"expansion\": {\n-\t\t\t{`[^$a-zA-Z_()]+`, Text, nil},\n-\t\t\t{`[a-zA-Z_]+`, NameVariable, nil},\n-\t\t\t{`\\$`, Keyword, nil},\n-\t\t\t{`\\(`, Keyword, Push()},\n-\t\t\t{`\\)`, Keyword, Pop(1)},\n-\t\t},\n-\t\t\"export\": {\n-\t\t\t{`[\\w${}-]+`, NameVariable, nil},\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"block-header\": {\n-\t\t\t{`[,|]`, Punctuation, nil},\n-\t\t\t{`#.*?\\n`, Comment, Pop(1)},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`\\$\\(`, Keyword, Push(\"expansion\")},\n-\t\t\t{`[a-zA-Z_]+`, Name, nil},\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0de18fe906344bb186569b0836c450768c0940f7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/mako.go",
      "status": "removed",
      "additions": 0,
      "deletions": 62,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmako.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmako.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmako.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,62 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// Mako lexer.\n-var Mako = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"Mako\",\n-\t\tAliases:   []string{\"mako\"},\n-\t\tFilenames: []string{\"*.mao\"},\n-\t\tMimeTypes: []string{\"application/x-mako\"},\n-\t},\n-\tmakoRules,\n-))\n-\n-func makoRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`(\\s*)(%)(\\s*end(?:\\w+))(\\n|\\Z)`, ByGroups(Text, CommentPreproc, Keyword, Other), nil},\n-\t\t\t{`(\\s*)(%)([^\\n]*)(\\n|\\Z)`, ByGroups(Text, CommentPreproc, Using(\"Python\"), Other), nil},\n-\t\t\t{`(\\s*)(##[^\\n]*)(\\n|\\Z)`, ByGroups(Text, CommentPreproc, Other), nil},\n-\t\t\t{`(?s)<%doc>.*?</%doc>`, CommentPreproc, nil},\n-\t\t\t{`(<%)([\\w.:]+)`, ByGroups(CommentPreproc, NameBuiltin), Push(\"tag\")},\n-\t\t\t{`(</%)([\\w.:]+)(>)`, ByGroups(CommentPreproc, NameBuiltin, CommentPreproc), nil},\n-\t\t\t{`<%(?=([\\w.:]+))`, CommentPreproc, Push(\"ondeftags\")},\n-\t\t\t{`(<%(?:!?))(.*?)(%>)(?s)`, ByGroups(CommentPreproc, Using(\"Python\"), CommentPreproc), nil},\n-\t\t\t{`(\\$\\{)(.*?)(\\})`, ByGroups(CommentPreproc, Using(\"Python\"), CommentPreproc), nil},\n-\t\t\t{`(?sx)\n-                (.+?)                # anything, followed by:\n-                (?:\n-                 (?<=\\n)(?=%|\\#\\#) | # an eval or comment line\n-                 (?=\\#\\*) |          # multiline comment\n-                 (?=</?%) |          # a python block\n-                                     # call start or end\n-                 (?=\\$\\{) |          # a substitution\n-                 (?<=\\n)(?=\\s*%) |\n-                                     # - don't consume\n-                 (\\\\\\n) |            # an escaped newline\n-                 \\Z                  # end of string\n-                )\n-            `, ByGroups(Other, Operator), nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"ondeftags\": {\n-\t\t\t{`<%`, CommentPreproc, nil},\n-\t\t\t{`(?<=<%)(include|inherit|namespace|page)`, NameBuiltin, nil},\n-\t\t\tInclude(\"tag\"),\n-\t\t},\n-\t\t\"tag\": {\n-\t\t\t{`((?:\\w+)\\s*=)(\\s*)(\".*?\")`, ByGroups(NameAttribute, Text, LiteralString), nil},\n-\t\t\t{`/?\\s*>`, CommentPreproc, Pop(1)},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"attr\": {\n-\t\t\t{`\".*?\"`, LiteralString, Pop(1)},\n-\t\t\t{`'.*?'`, LiteralString, Pop(1)},\n-\t\t\t{`[^\\s>]+`, LiteralString, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "57e61205a9a0df51d8e8432ccff2443700d43633",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/mason.go",
      "status": "removed",
      "additions": 0,
      "deletions": 44,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmason.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmason.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmason.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,44 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// Mason lexer.\n-var Mason = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"Mason\",\n-\t\tAliases:   []string{\"mason\"},\n-\t\tFilenames: []string{\"*.m\", \"*.mhtml\", \"*.mc\", \"*.mi\", \"autohandler\", \"dhandler\"},\n-\t\tMimeTypes: []string{\"application/x-mason\"},\n-\t\tPriority:  0.1,\n-\t},\n-\tmasonRules,\n-))\n-\n-func masonRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(<%doc>)(.*?)(</%doc>)(?s)`, ByGroups(NameTag, CommentMultiline, NameTag), nil},\n-\t\t\t{`(<%(?:def|method))(\\s*)(.*?)(>)(.*?)(</%\\2\\s*>)(?s)`, ByGroups(NameTag, Text, NameFunction, NameTag, UsingSelf(\"root\"), NameTag), nil},\n-\t\t\t{`(<%\\w+)(.*?)(>)(.*?)(</%\\2\\s*>)(?s)`, ByGroups(NameTag, NameFunction, NameTag, Using(\"Perl\"), NameTag), nil},\n-\t\t\t{`(<&[^|])(.*?)(,.*?)?(&>)(?s)`, ByGroups(NameTag, NameFunction, Using(\"Perl\"), NameTag), nil},\n-\t\t\t{`(<&\\|)(.*?)(,.*?)?(&>)(?s)`, ByGroups(NameTag, NameFunction, Using(\"Perl\"), NameTag), nil},\n-\t\t\t{`</&>`, NameTag, nil},\n-\t\t\t{`(<%!?)(.*?)(%>)(?s)`, ByGroups(NameTag, Using(\"Perl\"), NameTag), nil},\n-\t\t\t{`(?<=^)#[^\\n]*(\\n|\\Z)`, Comment, nil},\n-\t\t\t{`(?<=^)(%)([^\\n]*)(\\n|\\Z)`, ByGroups(NameTag, Using(\"Perl\"), Other), nil},\n-\t\t\t{`(?sx)\n-                 (.+?)               # anything, followed by:\n-                 (?:\n-                  (?<=\\n)(?=[%#]) |  # an eval or comment line\n-                  (?=</?[%&]) |      # a substitution or block or\n-                                     # call start or end\n-                                     # - don't consume\n-                  (\\\\\\n) |           # an escaped newline\n-                  \\Z                 # end of string\n-                 )`, ByGroups(Using(\"HTML\"), Operator), nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "42ff0e6e592bd4fedebcc08ca83451f4e9604ed8",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/myghty.go",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmyghty.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmyghty.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmyghty.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,42 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// Myghty lexer.\n-var Myghty = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"Myghty\",\n-\t\tAliases:   []string{\"myghty\"},\n-\t\tFilenames: []string{\"*.myt\", \"autodelegate\"},\n-\t\tMimeTypes: []string{\"application/x-myghty\"},\n-\t},\n-\tmyghtyRules,\n-))\n-\n-func myghtyRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(<%(?:def|method))(\\s*)(.*?)(>)(.*?)(</%\\2\\s*>)(?s)`, ByGroups(NameTag, Text, NameFunction, NameTag, UsingSelf(\"root\"), NameTag), nil},\n-\t\t\t{`(<%\\w+)(.*?)(>)(.*?)(</%\\2\\s*>)(?s)`, ByGroups(NameTag, NameFunction, NameTag, Using(\"Python2\"), NameTag), nil},\n-\t\t\t{`(<&[^|])(.*?)(,.*?)?(&>)`, ByGroups(NameTag, NameFunction, Using(\"Python2\"), NameTag), nil},\n-\t\t\t{`(<&\\|)(.*?)(,.*?)?(&>)(?s)`, ByGroups(NameTag, NameFunction, Using(\"Python2\"), NameTag), nil},\n-\t\t\t{`</&>`, NameTag, nil},\n-\t\t\t{`(<%!?)(.*?)(%>)(?s)`, ByGroups(NameTag, Using(\"Python2\"), NameTag), nil},\n-\t\t\t{`(?<=^)#[^\\n]*(\\n|\\Z)`, Comment, nil},\n-\t\t\t{`(?<=^)(%)([^\\n]*)(\\n|\\Z)`, ByGroups(NameTag, Using(\"Python2\"), Other), nil},\n-\t\t\t{`(?sx)\n-                 (.+?)               # anything, followed by:\n-                 (?:\n-                  (?<=\\n)(?=[%#]) |  # an eval or comment line\n-                  (?=</?[%&]) |      # a substitution or block or\n-                                     # call start or end\n-                                     # - don't consume\n-                  (\\\\\\n) |           # an escaped newline\n-                  \\Z                 # end of string\n-                 )`, ByGroups(Other, Operator), nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "30473b8c8aab28e794b7edf4c2da7fd33ea676e7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/openedgeabl.go",
      "status": "removed",
      "additions": 0,
      "deletions": 49,
      "changes": 49,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fopenedgeabl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fopenedgeabl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fopenedgeabl.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,49 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// OpenedgeAbl lexer.\n-var OpenEdgeABL = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"OpenEdge ABL\",\n-\t\tAliases:   []string{\"openedge\", \"abl\", \"progress\", \"openedgeabl\"},\n-\t\tFilenames: []string{\"*.p\", \"*.cls\", \"*.w\", \"*.i\"},\n-\t\tMimeTypes: []string{\"text/x-openedge\", \"application/x-openedge\"},\n-\t},\n-\tfunc() Rules {\n-\t\treturn Rules{\n-\t\t\t\"root\": {\n-\t\t\t\t{`/\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t\t\t{`//.*?$`, CommentSingle, nil},\n-\t\t\t\t{`\\{`, CommentPreproc, Push(\"preprocessor\")},\n-\t\t\t\t{`\\s*&.*`, CommentPreproc, nil},\n-\t\t\t\t{`0[xX][0-9a-fA-F]+[LlUu]*`, LiteralNumberHex, nil},\n-\t\t\t\t{`(?i)(DEFINE|DEF|DEFI|DEFIN)\\b`, KeywordDeclaration, nil},\n-\t\t\t\t{`(?i)(^|(?<=[^\\w\\-]))(CHARACTER|CHAR|CHARA|CHARAC|CHARACT|CHARACTE|COM-HANDLE|DATE|DATETIME|DATETIME-TZ|DECIMAL|DEC|DECI|DECIM|DECIMA|HANDLE|INT64|INTEGER|INT|INTE|INTEG|INTEGE|LOGICAL|LONGCHAR|MEMPTR|RAW|RECID|ROWID)\\s*($|(?=[^\\w\\-]))`, KeywordType, nil},\n-\t\t\t\t{Words(`(?i)(^|(?<=[^\\w\\-]))`, `\\s*($|(?=[^\\w\\-]))`, `ABS`, `ABSO`, `ABSOL`, `ABSOLU`, `ABSOLUT`, `ABSOLUTE`, `ABSTRACT`, `ACCELERATOR`, `ACCUM`, `ACCUMU`, `ACCUMUL`, `ACCUMULA`, `ACCUMULAT`, `ACCUMULATE`, `ACTIVE-FORM`, `ACTIVE-WINDOW`, `ADD`, `ADD-BUFFER`, `ADD-CALC-COLUMN`, `ADD-COLUMNS-FROM`, `ADD-EVENTS-PROCEDURE`, `ADD-FIELDS-FROM`, `ADD-FIRST`, `ADD-INDEX-FIELD`, `ADD-LAST`, `ADD-LIKE-COLUMN`, `ADD-LIKE-FIELD`, `ADD-LIKE-INDEX`, `ADD-NEW-FIELD`, `ADD-NEW-INDEX`, `ADD-SCHEMA-LOCATION`, `ADD-SUPER-PROCEDURE`, `ADM-DATA`, `ADVISE`, `ALERT-BOX`, `ALIAS`, `ALL`, `ALLOW-COLUMN-SEARCHING`, `ALLOW-REPLICATION`, `ALTER`, `ALWAYS-ON-TOP`, `AMBIG`, `AMBIGU`, `AMBIGUO`, `AMBIGUOU`, `AMBIGUOUS`, `ANALYZ`, `ANALYZE`, `AND`, `ANSI-ONLY`, `ANY`, `ANYWHERE`, `APPEND`, `APPL-ALERT`, `APPL-ALERT-`, `APPL-ALERT-B`, `APPL-ALERT-BO`, `APPL-ALERT-BOX`, `APPL-ALERT-BOXE`, `APPL-ALERT-BOXES`, `APPL-CONTEXT-ID`, `APPLICATION`, `APPLY`, `APPSERVER-INFO`, `APPSERVER-PASSWORD`, `APPSERVER-USERID`, `ARRAY-MESSAGE`, `AS`, `ASC`, `ASCE`, `ASCEN`, `ASCEND`, `ASCENDI`, `ASCENDIN`, `ASCENDING`, `ASK-OVERWRITE`, `ASSEMBLY`, `ASSIGN`, `ASYNC-REQUEST-COUNT`, `ASYNC-REQUEST-HANDLE`, `ASYNCHRONOUS`, `AT`, `ATTACHED-PAIRLIST`, `ATTR`, `ATTR-SPACE`, `ATTRI`, `ATTRIB`, `ATTRIBU`, `ATTRIBUT`, `AUDIT-CONTROL`, `AUDIT-ENABLED`, `AUDIT-EVENT-CONTEXT`, `AUDIT-POLICY`, `AUTHENTICATION-FAILED`, `AUTHORIZATION`, `AUTO-COMP`, `AUTO-COMPL`, `AUTO-COMPLE`, `AUTO-COMPLET`, `AUTO-COMPLETI`, `AUTO-COMPLETIO`, `AUTO-COMPLETION`, `AUTO-END-KEY`, `AUTO-ENDKEY`, `AUTO-GO`, `AUTO-IND`, `AUTO-INDE`, `AUTO-INDEN`, `AUTO-INDENT`, `AUTO-RESIZE`, `AUTO-RET`, `AUTO-RETU`, `AUTO-RETUR`, `AUTO-RETURN`, `AUTO-SYNCHRONIZE`, `AUTO-Z`, `AUTO-ZA`, `AUTO-ZAP`, `AUTOMATIC`, `AVAIL`, `AVAILA`, `AVAILAB`, `AVAILABL`, `AVAILABLE`, `AVAILABLE-FORMATS`, `AVE`, `AVER`, `AVERA`, `AVERAG`, `AVERAGE`, `AVG`, `BACK`, `BACKG`, `BACKGR`, `BACKGRO`, `BACKGROU`, `BACKGROUN`, `BACKGROUND`, `BACKWARD`, `BACKWARDS`, `BASE64-DECODE`, `BASE64-ENCODE`, `BASE-ADE`, `BASE-KEY`, `BATCH`, `BATCH-`, `BATCH-M`, `BATCH-MO`, `BATCH-MOD`, `BATCH-MODE`, `BATCH-SIZE`, `BEFORE-H`, `BEFORE-HI`, `BEFORE-HID`, `BEFORE-HIDE`, `BEGIN-EVENT-GROUP`, `BEGINS`, `BELL`, `BETWEEN`, `BGC`, `BGCO`, `BGCOL`, `BGCOLO`, `BGCOLOR`, `BIG-ENDIAN`, `BINARY`, `BIND`, `BIND-WHERE`, `BLANK`, `BLOCK-ITERATION-DISPLAY`, `BLOCK-LEVEL`, `BORDER-B`, `BORDER-BO`, `BORDER-BOT`, `BORDER-BOTT`, `BORDER-BOTTO`, `BORDER-BOTTOM-CHARS`, `BORDER-BOTTOM-P`, `BORDER-BOTTOM-PI`, `BORDER-BOTTOM-PIX`, `BORDER-BOTTOM-PIXE`, `BORDER-BOTTOM-PIXEL`, `BORDER-BOTTOM-PIXELS`, `BORDER-L`, `BORDER-LE`, `BORDER-LEF`, `BORDER-LEFT`, `BORDER-LEFT-`, `BORDER-LEFT-C`, `BORDER-LEFT-CH`, `BORDER-LEFT-CHA`, `BORDER-LEFT-CHAR`, `BORDER-LEFT-CHARS`, `BORDER-LEFT-P`, `BORDER-LEFT-PI`, `BORDER-LEFT-PIX`, `BORDER-LEFT-PIXE`, `BORDER-LEFT-PIXEL`, `BORDER-LEFT-PIXELS`, `BORDER-R`, `BORDER-RI`, `BORDER-RIG`, `BORDER-RIGH`, `BORDER-RIGHT`, `BORDER-RIGHT-`, `BORDER-RIGHT-C`, `BORDER-RIGHT-CH`, `BORDER-RIGHT-CHA`, `BORDER-RIGHT-CHAR`, `BORDER-RIGHT-CHARS`, `BORDER-RIGHT-P`, `BORDER-RIGHT-PI`, `BORDER-RIGHT-PIX`, `BORDER-RIGHT-PIXE`, `BORDER-RIGHT-PIXEL`, `BORDER-RIGHT-PIXELS`, `BORDER-T`, `BORDER-TO`, `BORDER-TOP`, `BORDER-TOP-`, `BORDER-TOP-C`, `BORDER-TOP-CH`, `BORDER-TOP-CHA`, `BORDER-TOP-CHAR`, `BORDER-TOP-CHARS`, `BORDER-TOP-P`, `BORDER-TOP-PI`, `BORDER-TOP-PIX`, `BORDER-TOP-PIXE`, `BORDER-TOP-PIXEL`, `BORDER-TOP-PIXELS`, `BOX`, `BOX-SELECT`, `BOX-SELECTA`, `BOX-SELECTAB`, `BOX-SELECTABL`, `BOX-SELECTABLE`, `BREAK`, `BROWSE`, `BUFFER`, `BUFFER-CHARS`, `BUFFER-COMPARE`, `BUFFER-COPY`, `BUFFER-CREATE`, `BUFFER-DELETE`, `BUFFER-FIELD`, `BUFFER-HANDLE`, `BUFFER-LINES`, `BUFFER-NAME`, `BUFFER-PARTITION-ID`, `BUFFER-RELEASE`, `BUFFER-VALUE`, `BUTTON`, `BUTTONS`, `BY`, `BY-POINTER`, `BY-VARIANT-POINTER`, `CACHE`, `CACHE-SIZE`, `CALL`, `CALL-NAME`, `CALL-TYPE`, `CAN-CREATE`, `CAN-DELETE`, `CAN-DO`, `CAN-DO-DOMAIN-SUPPORT`, `CAN-FIND`, `CAN-QUERY`, `CAN-READ`, `CAN-SET`, `CAN-WRITE`, `CANCEL-BREAK`, `CANCEL-BUTTON`, `CAPS`, `CAREFUL-PAINT`, `CASE`, `CASE-SEN`, `CASE-SENS`, `CASE-SENSI`, `CASE-SENSIT`, `CASE-SENSITI`, `CASE-SENSITIV`, `CASE-SENSITIVE`, `CAST`, `CATCH`, `CDECL`, `CENTER`, `CENTERE`, `CENTERED`, `CHAINED`, `CHARACTER`, `CHARACTER_LENGTH`, `CHARSET`, `CHECK`, `CHECKED`, `CHOOSE`, `CHR`, `CLASS`, `CLASS-TYPE`, `CLEAR`, `CLEAR-APPL-CONTEXT`, `CLEAR-LOG`, `CLEAR-SELECT`, `CLEAR-SELECTI`, `CLEAR-SELECTIO`, `CLEAR-SELECTION`, `CLEAR-SORT-ARROW`, `CLEAR-SORT-ARROWS`, `CLIENT-CONNECTION-ID`, `CLIENT-PRINCIPAL`, `CLIENT-TTY`, `CLIENT-TYPE`, `CLIENT-WORKSTATION`, `CLIPBOARD`, `CLOSE`, `CLOSE-LOG`, `CODE`, `CODEBASE-LOCATOR`, `CODEPAGE`, `CODEPAGE-CONVERT`, `COL`, `COL-OF`, `COLLATE`, `COLON`, `COLON-ALIGN`, `COLON-ALIGNE`, `COLON-ALIGNED`, `COLOR`, `COLOR-TABLE`, `COLU`, `COLUM`, `COLUMN`, `COLUMN-BGCOLOR`, `COLUMN-DCOLOR`, `COLUMN-FGCOLOR`, `COLUMN-FONT`, `COLUMN-LAB`, `COLUMN-LABE`, `COLUMN-LABEL`, `COLUMN-MOVABLE`, `COLUMN-OF`, `COLUMN-PFCOLOR`, `COLUMN-READ-ONLY`, `COLUMN-RESIZABLE`, `COLUMN-SCROLLING`, `COLUMNS`, `COM-HANDLE`, `COM-SELF`, `COMBO-BOX`, `COMMAND`, `COMPARES`, `COMPILE`, `COMPILER`, `COMPLETE`, `CONFIG-NAME`, `CONNECT`, `CONNECTED`, `CONSTRUCTOR`, `CONTAINS`, `CONTENTS`, `CONTEXT`, `CONTEXT-HELP`, `CONTEXT-HELP-FILE`, `CONTEXT-HELP-ID`, `CONTEXT-POPUP`, `CONTROL`, `CONTROL-BOX`, `CONTROL-FRAME`, `CONVERT`, `CONVERT-3D-COLORS`, `CONVERT-TO-OFFS`, `CONVERT-TO-OFFSE`, `CONVERT-TO-OFFSET`, `COPY-DATASET`, `COPY-LOB`, `COPY-SAX-ATTRIBUTES`, `COPY-TEMP-TABLE`, `COUNT`, `COUNT-OF`, `CPCASE`, `CPCOLL`, `CPINTERNAL`, `CPLOG`, `CPPRINT`, `CPRCODEIN`, `CPRCODEOUT`, `CPSTREAM`, `CPTERM`, `CRC-VALUE`, `CREATE`, `CREATE-LIKE`, `CREATE-LIKE-SEQUENTIAL`, `CREATE-NODE-NAMESPACE`, `CREATE-RESULT-LIST-ENTRY`, `CREATE-TEST-FILE`, `CURRENT`, `CURRENT-CHANGED`, `CURRENT-COLUMN`, `CURRENT-ENV`, `CURRENT-ENVI`, `CURRENT-ENVIR`, `CURRENT-ENVIRO`, `CURRENT-ENVIRON`, `CURRENT-ENVIRONM`, `CURRENT-ENVIRONME`, `CURRENT-ENVIRONMEN`, `CURRENT-ENVIRONMENT`, `CURRENT-ITERATION`, `CURRENT-LANG`, `CURRENT-LANGU`, `CURRENT-LANGUA`, `CURRENT-LANGUAG`, `CURRENT-LANGUAGE`, `CURRENT-QUERY`, `CURRENT-REQUEST-INFO`, `CURRENT-RESPONSE-INFO`, `CURRENT-RESULT-ROW`, `CURRENT-ROW-MODIFIED`, `CURRENT-VALUE`, `CURRENT-WINDOW`, `CURRENT_DATE`, `CURS`, `CURSO`, `CURSOR`, `CURSOR-CHAR`, `CURSOR-LINE`, `CURSOR-OFFSET`, `DATA-BIND`, `DATA-ENTRY-RET`, `DATA-ENTRY-RETU`, `DATA-ENTRY-RETUR`, `DATA-ENTRY-RETURN`, `DATA-REL`, `DATA-RELA`, `DATA-RELAT`, `DATA-RELATI`, `DATA-RELATIO`, `DATA-RELATION`, `DATA-SOURCE`, `DATA-SOURCE-COMPLETE-MAP`, `DATA-SOURCE-MODIFIED`, `DATA-SOURCE-ROWID`, `DATA-T`, `DATA-TY`, `DATA-TYP`, `DATA-TYPE`, `DATABASE`, `DATASERVERS`, `DATASET`, `DATASET-HANDLE`, `DATE`, `DATE-F`, `DATE-FO`, `DATE-FOR`, `DATE-FORM`, `DATE-FORMA`, `DATE-FORMAT`, `DAY`, `DB-CONTEXT`, `DB-REFERENCES`, `DBCODEPAGE`, `DBCOLLATION`, `DBNAME`, `DBPARAM`, `DBREST`, `DBRESTR`, `DBRESTRI`, `DBRESTRIC`, `DBRESTRICT`, `DBRESTRICTI`, `DBRESTRICTIO`, `DBRESTRICTION`, `DBRESTRICTIONS`, `DBTASKID`, `DBTYPE`, `DBVERS`, `DBVERSI`, `DBVERSIO`, `DBVERSION`, `DCOLOR`, `DDE`, `DDE-ERROR`, `DDE-I`, `DDE-ID`, `DDE-ITEM`, `DDE-NAME`, `DDE-TOPIC`, `DEBLANK`, `DEBU`, `DEBUG`, `DEBUG-ALERT`, `DEBUG-LIST`, `DEBUGGER`, `DECIMAL`, `DECIMALS`, `DECLARE`, `DECLARE-NAMESPACE`, `DECRYPT`, `DEFAULT`, `DEFAULT-B`, `DEFAULT-BU`, `DEFAULT-BUFFER-HANDLE`, `DEFAULT-BUT`, `DEFAULT-BUTT`, `DEFAULT-BUTTO`, `DEFAULT-BUTTON`, `DEFAULT-COMMIT`, `DEFAULT-EX`, `DEFAULT-EXT`, `DEFAULT-EXTE`, `DEFAULT-EXTEN`, `DEFAULT-EXTENS`, `DEFAULT-EXTENSI`, `DEFAULT-EXTENSIO`, `DEFAULT-EXTENSION`, `DEFAULT-NOXL`, `DEFAULT-NOXLA`, `DEFAULT-NOXLAT`, `DEFAULT-NOXLATE`, `DEFAULT-VALUE`, `DEFAULT-WINDOW`, `DEFINE`, `DEFINE-USER-EVENT-MANAGER`, `DEFINED`, `DEL`, `DELE`, `DELEGATE`, `DELET`, `DELETE PROCEDURE`, `DELETE`, `DELETE-CHAR`, `DELETE-CHARA`, `DELETE-CHARAC`, `DELETE-CHARACT`, `DELETE-CHARACTE`, `DELETE-CHARACTER`, `DELETE-CURRENT-ROW`, `DELETE-LINE`, `DELETE-RESULT-LIST-ENTRY`, `DELETE-SELECTED-ROW`, `DELETE-SELECTED-ROWS`, `DELIMITER`, `DESC`, `DESCE`, `DESCEN`, `DESCEND`, `DESCENDI`, `DESCENDIN`, `DESCENDING`, `DESELECT-FOCUSED-ROW`, `DESELECT-ROWS`, `DESELECT-SELECTED-ROW`, `DESELECTION`, `DESTRUCTOR`, `DIALOG-BOX`, `DICT`, `DICTI`, `DICTIO`, `DICTION`, `DICTIONA`, `DICTIONAR`, `DICTIONARY`, `DIR`, `DISABLE`, `DISABLE-AUTO-ZAP`, `DISABLE-DUMP-TRIGGERS`, `DISABLE-LOAD-TRIGGERS`, `DISABLED`, `DISCON`, `DISCONN`, `DISCONNE`, `DISCONNEC`, `DISCONNECT`, `DISP`, `DISPL`, `DISPLA`, `DISPLAY`, `DISPLAY-MESSAGE`, `DISPLAY-T`, `DISPLAY-TY`, `DISPLAY-TYP`, `DISPLAY-TYPE`, `DISTINCT`, `DO`, `DOMAIN-DESCRIPTION`, `DOMAIN-NAME`, `DOMAIN-TYPE`, `DOS`, `DOUBLE`, `DOWN`, `DRAG-ENABLED`, `DROP`, `DROP-DOWN`, `DROP-DOWN-LIST`, `DROP-FILE-NOTIFY`, `DROP-TARGET`, `DS-CLOSE-CURSOR`, `DSLOG-MANAGER`, `DUMP`, `DYNAMIC`, `DYNAMIC-ENUM`, `DYNAMIC-FUNCTION`, `DYNAMIC-INVOKE`, `EACH`, `ECHO`, `EDGE`, `EDGE-`, `EDGE-C`, `EDGE-CH`, `EDGE-CHA`, `EDGE-CHAR`, `EDGE-CHARS`, `EDGE-P`, `EDGE-PI`, `EDGE-PIX`, `EDGE-PIXE`, `EDGE-PIXEL`, `EDGE-PIXELS`, `EDIT-CAN-PASTE`, `EDIT-CAN-UNDO`, `EDIT-CLEAR`, `EDIT-COPY`, `EDIT-CUT`, `EDIT-PASTE`, `EDIT-UNDO`, `EDITING`, `EDITOR`, `ELSE`, `EMPTY`, `EMPTY-TEMP-TABLE`, `ENABLE`, `ENABLED-FIELDS`, `ENCODE`, `ENCRYPT`, `ENCRYPT-AUDIT-MAC-KEY`, `ENCRYPTION-SALT`, `END`, `END-DOCUMENT`, `END-ELEMENT`, `END-EVENT-GROUP`, `END-FILE-DROP`, `END-KEY`, `END-MOVE`, `END-RESIZE`, `END-ROW-RESIZE`, `END-USER-PROMPT`, `ENDKEY`, `ENTERED`, `ENTITY-EXPANSION-LIMIT`, `ENTRY`, `ENUM`, `EQ`, `ERROR`, `ERROR-COL`, `ERROR-COLU`, `ERROR-COLUM`, `ERROR-COLUMN`, `ERROR-ROW`, `ERROR-STACK-TRACE`, `ERROR-STAT`, `ERROR-STATU`, `ERROR-STATUS`, `ESCAPE`, `ETIME`, `EVENT`, `EVENT-GROUP-ID`, `EVENT-PROCEDURE`, `EVENT-PROCEDURE-CONTEXT`, `EVENT-T`, `EVENT-TY`, `EVENT-TYP`, `EVENT-TYPE`, `EVENTS`, `EXCEPT`, `EXCLUSIVE`, `EXCLUSIVE-`, `EXCLUSIVE-ID`, `EXCLUSIVE-L`, `EXCLUSIVE-LO`, `EXCLUSIVE-LOC`, `EXCLUSIVE-LOCK`, `EXCLUSIVE-WEB-USER`, `EXECUTE`, `EXISTS`, `EXP`, `EXPAND`, `EXPANDABLE`, `EXPLICIT`, `EXPORT`, `EXPORT-PRINCIPAL`, `EXTENDED`, `EXTENT`, `EXTERNAL`, `FALSE`, `FETCH`, `FETCH-SELECTED-ROW`, `FGC`, `FGCO`, `FGCOL`, `FGCOLO`, `FGCOLOR`, `FIELD`, `FIELDS`, `FILE`, `FILE-CREATE-DATE`, `FILE-CREATE-TIME`, `FILE-INFO`, `FILE-INFOR`, `FILE-INFORM`, `FILE-INFORMA`, `FILE-INFORMAT`, `FILE-INFORMATI`, `FILE-INFORMATIO`, `FILE-INFORMATION`, `FILE-MOD-DATE`, `FILE-MOD-TIME`, `FILE-NAME`, `FILE-OFF`, `FILE-OFFS`, `FILE-OFFSE`, `FILE-OFFSET`, `FILE-SIZE`, `FILE-TYPE`, `FILENAME`, `FILL`, `FILL-IN`, `FILLED`, `FILTERS`, `FINAL`, `FINALLY`, `FIND`, `FIND-BY-ROWID`, `FIND-CASE-SENSITIVE`, `FIND-CURRENT`, `FIND-FIRST`, `FIND-GLOBAL`, `FIND-LAST`, `FIND-NEXT-OCCURRENCE`, `FIND-PREV-OCCURRENCE`, `FIND-SELECT`, `FIND-UNIQUE`, `FIND-WRAP-AROUND`, `FINDER`, `FIRST`, `FIRST-ASYNCH-REQUEST`, `FIRST-CHILD`, `FIRST-COLUMN`, `FIRST-FORM`, `FIRST-OBJECT`, `FIRST-OF`, `FIRST-PROC`, `FIRST-PROCE`, `FIRST-PROCED`, `FIRST-PROCEDU`, `FIRST-PROCEDUR`, `FIRST-PROCEDURE`, `FIRST-SERVER`, `FIRST-TAB-I`, `FIRST-TAB-IT`, `FIRST-TAB-ITE`, `FIRST-TAB-ITEM`, `FIT-LAST-COLUMN`, `FIXED-ONLY`, `FLAT-BUTTON`, `FLOAT`, `FOCUS`, `FOCUSED-ROW`, `FOCUSED-ROW-SELECTED`, `FONT`, `FONT-TABLE`, `FOR`, `FORCE-FILE`, `FORE`, `FOREG`, `FOREGR`, `FOREGRO`, `FOREGROU`, `FOREGROUN`, `FOREGROUND`, `FORM INPUT`, `FORM`, `FORM-LONG-INPUT`, `FORMA`, `FORMAT`, `FORMATTE`, `FORMATTED`, `FORWARD`, `FORWARDS`, `FRAGMEN`, `FRAGMENT`, `FRAM`, `FRAME`, `FRAME-COL`, `FRAME-DB`, `FRAME-DOWN`, `FRAME-FIELD`, `FRAME-FILE`, `FRAME-INDE`, `FRAME-INDEX`, `FRAME-LINE`, `FRAME-NAME`, `FRAME-ROW`, `FRAME-SPA`, `FRAME-SPAC`, `FRAME-SPACI`, `FRAME-SPACIN`, `FRAME-SPACING`, `FRAME-VAL`, `FRAME-VALU`, `FRAME-VALUE`, `FRAME-X`, `FRAME-Y`, `FREQUENCY`, `FROM`, `FROM-C`, `FROM-CH`, `FROM-CHA`, `FROM-CHAR`, `FROM-CHARS`, `FROM-CUR`, `FROM-CURR`, `FROM-CURRE`, `FROM-CURREN`, `FROM-CURRENT`, `FROM-P`, `FROM-PI`, `FROM-PIX`, `FROM-PIXE`, `FROM-PIXEL`, `FROM-PIXELS`, `FULL-HEIGHT`, `FULL-HEIGHT-`, `FULL-HEIGHT-C`, `FULL-HEIGHT-CH`, `FULL-HEIGHT-CHA`, `FULL-HEIGHT-CHAR`, `FULL-HEIGHT-CHARS`, `FULL-HEIGHT-P`, `FULL-HEIGHT-PI`, `FULL-HEIGHT-PIX`, `FULL-HEIGHT-PIXE`, `FULL-HEIGHT-PIXEL`, `FULL-HEIGHT-PIXELS`, `FULL-PATHN`, `FULL-PATHNA`, `FULL-PATHNAM`, `FULL-PATHNAME`, `FULL-WIDTH`, `FULL-WIDTH-`, `FULL-WIDTH-C`, `FULL-WIDTH-CH`, `FULL-WIDTH-CHA`, `FULL-WIDTH-CHAR`, `FULL-WIDTH-CHARS`, `FULL-WIDTH-P`, `FULL-WIDTH-PI`, `FULL-WIDTH-PIX`, `FULL-WIDTH-PIXE`, `FULL-WIDTH-PIXEL`, `FULL-WIDTH-PIXELS`, `FUNCTION`, `FUNCTION-CALL-TYPE`, `GATEWAY`, `GATEWAYS`, `GE`, `GENERATE-MD5`, `GENERATE-PBE-KEY`, `GENERATE-PBE-SALT`, `GENERATE-RANDOM-KEY`, `GENERATE-UUID`, `GET`, `GET-ATTR-CALL-TYPE`, `GET-ATTRIBUTE-NODE`, `GET-BINARY-DATA`, `GET-BLUE`, `GET-BLUE-`, `GET-BLUE-V`, `GET-BLUE-VA`, `GET-BLUE-VAL`, `GET-BLUE-VALU`, `GET-BLUE-VALUE`, `GET-BROWSE-COLUMN`, `GET-BUFFER-HANDLE`, `GET-BYTE`, `GET-CALLBACK-PROC-CONTEXT`, `GET-CALLBACK-PROC-NAME`, `GET-CGI-LIST`, `GET-CGI-LONG-VALUE`, `GET-CGI-VALUE`, `GET-CLASS`, `GET-CODEPAGES`, `GET-COLLATIONS`, `GET-CONFIG-VALUE`, `GET-CURRENT`, `GET-DOUBLE`, `GET-DROPPED-FILE`, `GET-DYNAMIC`, `GET-ERROR-COLUMN`, `GET-ERROR-ROW`, `GET-FILE`, `GET-FILE-NAME`, `GET-FILE-OFFSE`, `GET-FILE-OFFSET`, `GET-FIRST`, `GET-FLOAT`, `GET-GREEN`, `GET-GREEN-`, `GET-GREEN-V`, `GET-GREEN-VA`, `GET-GREEN-VAL`, `GET-GREEN-VALU`, `GET-GREEN-VALUE`, `GET-INDEX-BY-NAMESPACE-NAME`, `GET-INDEX-BY-QNAME`, `GET-INT64`, `GET-ITERATION`, `GET-KEY-VAL`, `GET-KEY-VALU`, `GET-KEY-VALUE`, `GET-LAST`, `GET-LOCALNAME-BY-INDEX`, `GET-LONG`, `GET-MESSAGE`, `GET-NEXT`, `GET-NUMBER`, `GET-POINTER-VALUE`, `GET-PREV`, `GET-PRINTERS`, `GET-PROPERTY`, `GET-QNAME-BY-INDEX`, `GET-RED`, `GET-RED-`, `GET-RED-V`, `GET-RED-VA`, `GET-RED-VAL`, `GET-RED-VALU`, `GET-RED-VALUE`, `GET-REPOSITIONED-ROW`, `GET-RGB-VALUE`, `GET-SELECTED`, `GET-SELECTED-`, `GET-SELECTED-W`, `GET-SELECTED-WI`, `GET-SELECTED-WID`, `GET-SELECTED-WIDG`, `GET-SELECTED-WIDGE`, `GET-SELECTED-WIDGET`, `GET-SHORT`, `GET-SIGNATURE`, `GET-SIZE`, `GET-STRING`, `GET-TAB-ITEM`, `GET-TEXT-HEIGHT`, `GET-TEXT-HEIGHT-`, `GET-TEXT-HEIGHT-C`, `GET-TEXT-HEIGHT-CH`, `GET-TEXT-HEIGHT-CHA`, `GET-TEXT-HEIGHT-CHAR`, `GET-TEXT-HEIGHT-CHARS`, `GET-TEXT-HEIGHT-P`, `GET-TEXT-HEIGHT-PI`, `GET-TEXT-HEIGHT-PIX`, `GET-TEXT-HEIGHT-PIXE`, `GET-TEXT-HEIGHT-PIXEL`, `GET-TEXT-HEIGHT-PIXELS`, `GET-TEXT-WIDTH`, `GET-TEXT-WIDTH-`, `GET-TEXT-WIDTH-C`, `GET-TEXT-WIDTH-CH`, `GET-TEXT-WIDTH-CHA`, `GET-TEXT-WIDTH-CHAR`, `GET-TEXT-WIDTH-CHARS`, `GET-TEXT-WIDTH-P`, `GET-TEXT-WIDTH-PI`, `GET-TEXT-WIDTH-PIX`, `GET-TEXT-WIDTH-PIXE`, `GET-TEXT-WIDTH-PIXEL`, `GET-TEXT-WIDTH-PIXELS`, `GET-TYPE-BY-INDEX`, `GET-TYPE-BY-NAMESPACE-NAME`, `GET-TYPE-BY-QNAME`, `GET-UNSIGNED-LONG`, `GET-UNSIGNED-SHORT`, `GET-URI-BY-INDEX`, `GET-VALUE-BY-INDEX`, `GET-VALUE-BY-NAMESPACE-NAME`, `GET-VALUE-BY-QNAME`, `GET-WAIT-STATE`, `GETBYTE`, `GLOBAL`, `GO-ON`, `GO-PEND`, `GO-PENDI`, `GO-PENDIN`, `GO-PENDING`, `GRANT`, `GRAPHIC-E`, `GRAPHIC-ED`, `GRAPHIC-EDG`, `GRAPHIC-EDGE`, `GRID-FACTOR-H`, `GRID-FACTOR-HO`, `GRID-FACTOR-HOR`, `GRID-FACTOR-HORI`, `GRID-FACTOR-HORIZ`, `GRID-FACTOR-HORIZO`, `GRID-FACTOR-HORIZON`, `GRID-FACTOR-HORIZONT`, `GRID-FACTOR-HORIZONTA`, `GRID-FACTOR-HORIZONTAL`, `GRID-FACTOR-V`, `GRID-FACTOR-VE`, `GRID-FACTOR-VER`, `GRID-FACTOR-VERT`, `GRID-FACTOR-VERTI`, `GRID-FACTOR-VERTIC`, `GRID-FACTOR-VERTICA`, `GRID-FACTOR-VERTICAL`, `GRID-SNAP`, `GRID-UNIT-HEIGHT`, `GRID-UNIT-HEIGHT-`, `GRID-UNIT-HEIGHT-C`, `GRID-UNIT-HEIGHT-CH`, `GRID-UNIT-HEIGHT-CHA`, `GRID-UNIT-HEIGHT-CHARS`, `GRID-UNIT-HEIGHT-P`, `GRID-UNIT-HEIGHT-PI`, `GRID-UNIT-HEIGHT-PIX`, `GRID-UNIT-HEIGHT-PIXE`, `GRID-UNIT-HEIGHT-PIXEL`, `GRID-UNIT-HEIGHT-PIXELS`, `GRID-UNIT-WIDTH`, `GRID-UNIT-WIDTH-`, `GRID-UNIT-WIDTH-C`, `GRID-UNIT-WIDTH-CH`, `GRID-UNIT-WIDTH-CHA`, `GRID-UNIT-WIDTH-CHAR`, `GRID-UNIT-WIDTH-CHARS`, `GRID-UNIT-WIDTH-P`, `GRID-UNIT-WIDTH-PI`, `GRID-UNIT-WIDTH-PIX`, `GRID-UNIT-WIDTH-PIXE`, `GRID-UNIT-WIDTH-PIXEL`, `GRID-UNIT-WIDTH-PIXELS`, `GRID-VISIBLE`, `GROUP`, `GT`, `GUID`, `HANDLE`, `HANDLER`, `HAS-RECORDS`, `HAVING`, `HEADER`, `HEIGHT`, `HEIGHT-`, `HEIGHT-C`, `HEIGHT-CH`, `HEIGHT-CHA`, `HEIGHT-CHAR`, `HEIGHT-CHARS`, `HEIGHT-P`, `HEIGHT-PI`, `HEIGHT-PIX`, `HEIGHT-PIXE`, `HEIGHT-PIXEL`, `HEIGHT-PIXELS`, `HELP`, `HEX-DECODE`, `HEX-ENCODE`, `HIDDEN`, `HIDE`, `HORI`, `HORIZ`, `HORIZO`, `HORIZON`, `HORIZONT`, `HORIZONTA`, `HORIZONTAL`, `HOST-BYTE-ORDER`, `HTML-CHARSET`, `HTML-END-OF-LINE`, `HTML-END-OF-PAGE`, `HTML-FRAME-BEGIN`, `HTML-FRAME-END`, `HTML-HEADER-BEGIN`, `HTML-HEADER-END`, `HTML-TITLE-BEGIN`, `HTML-TITLE-END`, `HWND`, `ICON`, `IF`, `IMAGE`, `IMAGE-DOWN`, `IMAGE-INSENSITIVE`, `IMAGE-SIZE`, `IMAGE-SIZE-C`, `IMAGE-SIZE-CH`, `IMAGE-SIZE-CHA`, `IMAGE-SIZE-CHAR`, `IMAGE-SIZE-CHARS`, `IMAGE-SIZE-P`, `IMAGE-SIZE-PI`, `IMAGE-SIZE-PIX`, `IMAGE-SIZE-PIXE`, `IMAGE-SIZE-PIXEL`, `IMAGE-SIZE-PIXELS`, `IMAGE-UP`, `IMMEDIATE-DISPLAY`, `IMPLEMENTS`, `IMPORT`, `IMPORT-PRINCIPAL`, `IN`, `IN-HANDLE`, `INCREMENT-EXCLUSIVE-ID`, `INDEX`, `INDEX-HINT`, `INDEX-INFORMATION`, `INDEXED-REPOSITION`, `INDICATOR`, `INFO`, `INFOR`, `INFORM`, `INFORMA`, `INFORMAT`, `INFORMATI`, `INFORMATIO`, `INFORMATION`, `INHERIT-BGC`, `INHERIT-BGCO`, `INHERIT-BGCOL`, `INHERIT-BGCOLO`, `INHERIT-BGCOLOR`, `INHERIT-FGC`, `INHERIT-FGCO`, `INHERIT-FGCOL`, `INHERIT-FGCOLO`, `INHERIT-FGCOLOR`, `INHERITS`, `INIT`, `INITI`, `INITIA`, `INITIAL`, `INITIAL-DIR`, `INITIAL-FILTER`, `INITIALIZE-DOCUMENT-TYPE`, `INITIATE`, `INNER-CHARS`, `INNER-LINES`, `INPUT`, `INPUT-O`, `INPUT-OU`, `INPUT-OUT`, `INPUT-OUTP`, `INPUT-OUTPU`, `INPUT-OUTPUT`, `INPUT-VALUE`, `INSERT`, `INSERT-ATTRIBUTE`, `INSERT-B`, `INSERT-BA`, `INSERT-BAC`, `INSERT-BACK`, `INSERT-BACKT`, `INSERT-BACKTA`, `INSERT-BACKTAB`, `INSERT-FILE`, `INSERT-ROW`, `INSERT-STRING`, `INSERT-T`, `INSERT-TA`, `INSERT-TAB`, `INT64`, `INT`, `INTEGER`, `INTERFACE`, `INTERNAL-ENTRIES`, `INTO`, `INVOKE`, `IS`, `IS-ATTR`, `IS-ATTR-`, `IS-ATTR-S`, `IS-ATTR-SP`, `IS-ATTR-SPA`, `IS-ATTR-SPAC`, `IS-ATTR-SPACE`, `IS-CLASS`, `IS-JSON`, `IS-LEAD-BYTE`, `IS-OPEN`, `IS-PARAMETER-SET`, `IS-PARTITIONED`, `IS-ROW-SELECTED`, `IS-SELECTED`, `IS-XML`, `ITEM`, `ITEMS-PER-ROW`, `JOIN`, `JOIN-BY-SQLDB`, `KBLABEL`, `KEEP-CONNECTION-OPEN`, `KEEP-FRAME-Z`, `KEEP-FRAME-Z-`, `KEEP-FRAME-Z-O`, `KEEP-FRAME-Z-OR`, `KEEP-FRAME-Z-ORD`, `KEEP-FRAME-Z-ORDE`, `KEEP-FRAME-Z-ORDER`, `KEEP-MESSAGES`, `KEEP-SECURITY-CACHE`, `KEEP-TAB-ORDER`, `KEY`, `KEY-CODE`, `KEY-FUNC`, `KEY-FUNCT`, `KEY-FUNCTI`, `KEY-FUNCTIO`, `KEY-FUNCTION`, `KEY-LABEL`, `KEYCODE`, `KEYFUNC`, `KEYFUNCT`, `KEYFUNCTI`, `KEYFUNCTIO`, `KEYFUNCTION`, `KEYLABEL`, `KEYS`, `KEYWORD`, `KEYWORD-ALL`, `LABEL`, `LABEL-BGC`, `LABEL-BGCO`, `LABEL-BGCOL`, `LABEL-BGCOLO`, `LABEL-BGCOLOR`, `LABEL-DC`, `LABEL-DCO`, `LABEL-DCOL`, `LABEL-DCOLO`, `LABEL-DCOLOR`, `LABEL-FGC`, `LABEL-FGCO`, `LABEL-FGCOL`, `LABEL-FGCOLO`, `LABEL-FGCOLOR`, `LABEL-FONT`, `LABEL-PFC`, `LABEL-PFCO`, `LABEL-PFCOL`, `LABEL-PFCOLO`, `LABEL-PFCOLOR`, `LABELS`, `LABELS-HAVE-COLONS`, `LANDSCAPE`, `LANGUAGE`, `LANGUAGES`, `LARGE`, `LARGE-TO-SMALL`, `LAST`, `LAST-ASYNCH-REQUEST`, `LAST-BATCH`, `LAST-CHILD`, `LAST-EVEN`, `LAST-EVENT`, `LAST-FORM`, `LAST-KEY`, `LAST-OBJECT`, `LAST-OF`, `LAST-PROCE`, `LAST-PROCED`, `LAST-PROCEDU`, `LAST-PROCEDUR`, `LAST-PROCEDURE`, `LAST-SERVER`, `LAST-TAB-I`, `LAST-TAB-IT`, `LAST-TAB-ITE`, `LAST-TAB-ITEM`, `LASTKEY`, `LC`, `LDBNAME`, `LE`, `LEAVE`, `LEFT-ALIGN`, `LEFT-ALIGNE`, `LEFT-ALIGNED`, `LEFT-TRIM`, `LENGTH`, `LIBRARY`, `LIKE`, `LIKE-SEQUENTIAL`, `LINE`, `LINE-COUNT`, `LINE-COUNTE`, `LINE-COUNTER`, `LIST-EVENTS`, `LIST-ITEM-PAIRS`, `LIST-ITEMS`, `LIST-PROPERTY-NAMES`, `LIST-QUERY-ATTRS`, `LIST-SET-ATTRS`, `LIST-WIDGETS`, `LISTI`, `LISTIN`, `LISTING`, `LITERAL-QUESTION`, `LITTLE-ENDIAN`, `LOAD`, `LOAD-DOMAINS`, `LOAD-ICON`, `LOAD-IMAGE`, `LOAD-IMAGE-DOWN`, `LOAD-IMAGE-INSENSITIVE`, `LOAD-IMAGE-UP`, `LOAD-MOUSE-P`, `LOAD-MOUSE-PO`, `LOAD-MOUSE-POI`, `LOAD-MOUSE-POIN`, `LOAD-MOUSE-POINT`, `LOAD-MOUSE-POINTE`, `LOAD-MOUSE-POINTER`, `LOAD-PICTURE`, `LOAD-SMALL-ICON`, `LOCAL-NAME`, `LOCAL-VERSION-INFO`, `LOCATOR-COLUMN-NUMBER`, `LOCATOR-LINE-NUMBER`, `LOCATOR-PUBLIC-ID`, `LOCATOR-SYSTEM-ID`, `LOCATOR-TYPE`, `LOCK-REGISTRATION`, `LOCKED`, `LOG`, `LOG-AUDIT-EVENT`, `LOG-MANAGER`, `LOGICAL`, `LOGIN-EXPIRATION-TIMESTAMP`, `LOGIN-HOST`, `LOGIN-STATE`, `LOGOUT`, `LONGCHAR`, `LOOKAHEAD`, `LOOKUP`, `LT`, `MACHINE-CLASS`, `MANDATORY`, `MANUAL-HIGHLIGHT`, `MAP`, `MARGIN-EXTRA`, `MARGIN-HEIGHT`, `MARGIN-HEIGHT-`, `MARGIN-HEIGHT-C`, `MARGIN-HEIGHT-CH`, `MARGIN-HEIGHT-CHA`, `MARGIN-HEIGHT-CHAR`, `MARGIN-HEIGHT-CHARS`, `MARGIN-HEIGHT-P`, `MARGIN-HEIGHT-PI`, `MARGIN-HEIGHT-PIX`, `MARGIN-HEIGHT-PIXE`, `MARGIN-HEIGHT-PIXEL`, `MARGIN-HEIGHT-PIXELS`, `MARGIN-WIDTH`, `MARGIN-WIDTH-`, `MARGIN-WIDTH-C`, `MARGIN-WIDTH-CH`, `MARGIN-WIDTH-CHA`, `MARGIN-WIDTH-CHAR`, `MARGIN-WIDTH-CHARS`, `MARGIN-WIDTH-P`, `MARGIN-WIDTH-PI`, `MARGIN-WIDTH-PIX`, `MARGIN-WIDTH-PIXE`, `MARGIN-WIDTH-PIXEL`, `MARGIN-WIDTH-PIXELS`, `MARK-NEW`, `MARK-ROW-STATE`, `MATCHES`, `MAX`, `MAX-BUTTON`, `MAX-CHARS`, `MAX-DATA-GUESS`, `MAX-HEIGHT`, `MAX-HEIGHT-C`, `MAX-HEIGHT-CH`, `MAX-HEIGHT-CHA`, `MAX-HEIGHT-CHAR`, `MAX-HEIGHT-CHARS`, `MAX-HEIGHT-P`, `MAX-HEIGHT-PI`, `MAX-HEIGHT-PIX`, `MAX-HEIGHT-PIXE`, `MAX-HEIGHT-PIXEL`, `MAX-HEIGHT-PIXELS`, `MAX-ROWS`, `MAX-SIZE`, `MAX-VAL`, `MAX-VALU`, `MAX-VALUE`, `MAX-WIDTH`, `MAX-WIDTH-`, `MAX-WIDTH-C`, `MAX-WIDTH-CH`, `MAX-WIDTH-CHA`, `MAX-WIDTH-CHAR`, `MAX-WIDTH-CHARS`, `MAX-WIDTH-P`, `MAX-WIDTH-PI`, `MAX-WIDTH-PIX`, `MAX-WIDTH-PIXE`, `MAX-WIDTH-PIXEL`, `MAX-WIDTH-PIXELS`, `MAXI`, `MAXIM`, `MAXIMIZE`, `MAXIMU`, `MAXIMUM`, `MAXIMUM-LEVEL`, `MD5-DIGEST`, `MEMBER`, `MEMPTR-TO-NODE-VALUE`, `MENU`, `MENU-BAR`, `MENU-ITEM`, `MENU-K`, `MENU-KE`, `MENU-KEY`, `MENU-M`, `MENU-MO`, `MENU-MOU`, `MENU-MOUS`, `MENU-MOUSE`, `MENUBAR`, `MERGE-BY-FIELD`, `MESSAGE`, `MESSAGE-AREA`, `MESSAGE-AREA-FONT`, `MESSAGE-LINES`, `METHOD`, `MIN`, `MIN-BUTTON`, `MIN-COLUMN-WIDTH-C`, `MIN-COLUMN-WIDTH-CH`, `MIN-COLUMN-WIDTH-CHA`, `MIN-COLUMN-WIDTH-CHAR`, `MIN-COLUMN-WIDTH-CHARS`, `MIN-COLUMN-WIDTH-P`, `MIN-COLUMN-WIDTH-PI`, `MIN-COLUMN-WIDTH-PIX`, `MIN-COLUMN-WIDTH-PIXE`, `MIN-COLUMN-WIDTH-PIXEL`, `MIN-COLUMN-WIDTH-PIXELS`, `MIN-HEIGHT`, `MIN-HEIGHT-`, `MIN-HEIGHT-C`, `MIN-HEIGHT-CH`, `MIN-HEIGHT-CHA`, `MIN-HEIGHT-CHAR`, `MIN-HEIGHT-CHARS`, `MIN-HEIGHT-P`, `MIN-HEIGHT-PI`, `MIN-HEIGHT-PIX`, `MIN-HEIGHT-PIXE`, `MIN-HEIGHT-PIXEL`, `MIN-HEIGHT-PIXELS`, `MIN-SIZE`, `MIN-VAL`, `MIN-VALU`, `MIN-VALUE`, `MIN-WIDTH`, `MIN-WIDTH-`, `MIN-WIDTH-C`, `MIN-WIDTH-CH`, `MIN-WIDTH-CHA`, `MIN-WIDTH-CHAR`, `MIN-WIDTH-CHARS`, `MIN-WIDTH-P`, `MIN-WIDTH-PI`, `MIN-WIDTH-PIX`, `MIN-WIDTH-PIXE`, `MIN-WIDTH-PIXEL`, `MIN-WIDTH-PIXELS`, `MINI`, `MINIM`, `MINIMU`, `MINIMUM`, `MOD`, `MODIFIED`, `MODU`, `MODUL`, `MODULO`, `MONTH`, `MOUSE`, `MOUSE-P`, `MOUSE-PO`, `MOUSE-POI`, `MOUSE-POIN`, `MOUSE-POINT`, `MOUSE-POINTE`, `MOUSE-POINTER`, `MOVABLE`, `MOVE-AFTER`, `MOVE-AFTER-`, `MOVE-AFTER-T`, `MOVE-AFTER-TA`, `MOVE-AFTER-TAB`, `MOVE-AFTER-TAB-`, `MOVE-AFTER-TAB-I`, `MOVE-AFTER-TAB-IT`, `MOVE-AFTER-TAB-ITE`, `MOVE-AFTER-TAB-ITEM`, `MOVE-BEFOR`, `MOVE-BEFORE`, `MOVE-BEFORE-`, `MOVE-BEFORE-T`, `MOVE-BEFORE-TA`, `MOVE-BEFORE-TAB`, `MOVE-BEFORE-TAB-`, `MOVE-BEFORE-TAB-I`, `MOVE-BEFORE-TAB-IT`, `MOVE-BEFORE-TAB-ITE`, `MOVE-BEFORE-TAB-ITEM`, `MOVE-COL`, `MOVE-COLU`, `MOVE-COLUM`, `MOVE-COLUMN`, `MOVE-TO-B`, `MOVE-TO-BO`, `MOVE-TO-BOT`, `MOVE-TO-BOTT`, `MOVE-TO-BOTTO`, `MOVE-TO-BOTTOM`, `MOVE-TO-EOF`, `MOVE-TO-T`, `MOVE-TO-TO`, `MOVE-TO-TOP`, `MPE`, `MTIME`, `MULTI-COMPILE`, `MULTIPLE`, `MULTIPLE-KEY`, `MULTITASKING-INTERVAL`, `MUST-EXIST`, `NAME`, `NAMESPACE-PREFIX`, `NAMESPACE-URI`, `NATIVE`, `NE`, `NEEDS-APPSERVER-PROMPT`, `NEEDS-PROMPT`, `NEW`, `NEW-INSTANCE`, `NEW-ROW`, `NEXT`, `NEXT-COLUMN`, `NEXT-PROMPT`, `NEXT-ROWID`, `NEXT-SIBLING`, `NEXT-TAB-I`, `NEXT-TAB-IT`, `NEXT-TAB-ITE`, `NEXT-TAB-ITEM`, `NEXT-VALUE`, `NO`, `NO-APPLY`, `NO-ARRAY-MESSAGE`, `NO-ASSIGN`, `NO-ATTR`, `NO-ATTR-`, `NO-ATTR-L`, `NO-ATTR-LI`, `NO-ATTR-LIS`, `NO-ATTR-LIST`, `NO-ATTR-S`, `NO-ATTR-SP`, `NO-ATTR-SPA`, `NO-ATTR-SPAC`, `NO-ATTR-SPACE`, `NO-AUTO-VALIDATE`, `NO-BIND-WHERE`, `NO-BOX`, `NO-CONSOLE`, `NO-CONVERT`, `NO-CONVERT-3D-COLORS`, `NO-CURRENT-VALUE`, `NO-DEBUG`, `NO-DRAG`, `NO-ECHO`, `NO-EMPTY-SPACE`, `NO-ERROR`, `NO-F`, `NO-FI`, `NO-FIL`, `NO-FILL`, `NO-FOCUS`, `NO-HELP`, `NO-HIDE`, `NO-INDEX-HINT`, `NO-INHERIT-BGC`, `NO-INHERIT-BGCO`, `NO-INHERIT-BGCOLOR`, `NO-INHERIT-FGC`, `NO-INHERIT-FGCO`, `NO-INHERIT-FGCOL`, `NO-INHERIT-FGCOLO`, `NO-INHERIT-FGCOLOR`, `NO-JOIN-BY-SQLDB`, `NO-LABE`, `NO-LABELS`, `NO-LOBS`, `NO-LOCK`, `NO-LOOKAHEAD`, `NO-MAP`, `NO-MES`, `NO-MESS`, `NO-MESSA`, `NO-MESSAG`, `NO-MESSAGE`, `NO-PAUSE`, `NO-PREFE`, `NO-PREFET`, `NO-PREFETC`, `NO-PREFETCH`, `NO-ROW-MARKERS`, `NO-SCROLLBAR-VERTICAL`, `NO-SEPARATE-CONNECTION`, `NO-SEPARATORS`, `NO-TAB-STOP`, `NO-UND`, `NO-UNDE`, `NO-UNDER`, `NO-UNDERL`, `NO-UNDERLI`, `NO-UNDERLIN`, `NO-UNDERLINE`, `NO-UNDO`, `NO-VAL`, `NO-VALI`, `NO-VALID`, `NO-VALIDA`, `NO-VALIDAT`, `NO-VALIDATE`, `NO-WAIT`, `NO-WORD-WRAP`, `NODE-VALUE-TO-MEMPTR`, `NONAMESPACE-SCHEMA-LOCATION`, `NONE`, `NORMALIZE`, `NOT`, `NOT-ACTIVE`, `NOW`, `NULL`, `NUM-ALI`, `NUM-ALIA`, `NUM-ALIAS`, `NUM-ALIASE`, `NUM-ALIASES`, `NUM-BUFFERS`, `NUM-BUT`, `NUM-BUTT`, `NUM-BUTTO`, `NUM-BUTTON`, `NUM-BUTTONS`, `NUM-COL`, `NUM-COLU`, `NUM-COLUM`, `NUM-COLUMN`, `NUM-COLUMNS`, `NUM-COPIES`, `NUM-DBS`, `NUM-DROPPED-FILES`, `NUM-ENTRIES`, `NUM-FIELDS`, `NUM-FORMATS`, `NUM-ITEMS`, `NUM-ITERATIONS`, `NUM-LINES`, `NUM-LOCKED-COL`, `NUM-LOCKED-COLU`, `NUM-LOCKED-COLUM`, `NUM-LOCKED-COLUMN`, `NUM-LOCKED-COLUMNS`, `NUM-MESSAGES`, `NUM-PARAMETERS`, `NUM-REFERENCES`, `NUM-REPLACED`, `NUM-RESULTS`, `NUM-SELECTED`, `NUM-SELECTED-`, `NUM-SELECTED-ROWS`, `NUM-SELECTED-W`, `NUM-SELECTED-WI`, `NUM-SELECTED-WID`, `NUM-SELECTED-WIDG`, `NUM-SELECTED-WIDGE`, `NUM-SELECTED-WIDGET`, `NUM-SELECTED-WIDGETS`, `NUM-TABS`, `NUM-TO-RETAIN`, `NUM-VISIBLE-COLUMNS`, `NUMERIC`, `NUMERIC-F`, `NUMERIC-FO`, `NUMERIC-FOR`, `NUMERIC-FORM`, `NUMERIC-FORMA`, `NUMERIC-FORMAT`, `OCTET-LENGTH`, `OF`, `OFF`, `OK`, `OK-CANCEL`, `OLD`, `ON`, `ON-FRAME`, `ON-FRAME-`, `ON-FRAME-B`, `ON-FRAME-BO`, `ON-FRAME-BOR`, `ON-FRAME-BORD`, `ON-FRAME-BORDE`, `ON-FRAME-BORDER`, `OPEN`, `OPSYS`, `OPTION`, `OR`, `ORDERED-JOIN`, `ORDINAL`, `OS-APPEND`, `OS-COMMAND`, `OS-COPY`, `OS-CREATE-DIR`, `OS-DELETE`, `OS-DIR`, `OS-DRIVE`, `OS-DRIVES`, `OS-ERROR`, `OS-GETENV`, `OS-RENAME`, `OTHERWISE`, `OUTPUT`, `OVERLAY`, `OVERRIDE`, `OWNER`, `PAGE`, `PAGE-BOT`, `PAGE-BOTT`, `PAGE-BOTTO`, `PAGE-BOTTOM`, `PAGE-NUM`, `PAGE-NUMB`, `PAGE-NUMBE`, `PAGE-NUMBER`, `PAGE-SIZE`, `PAGE-TOP`, `PAGE-WID`, `PAGE-WIDT`, `PAGE-WIDTH`, `PAGED`, `PARAM`, `PARAME`, `PARAMET`, `PARAMETE`, `PARAMETER`, `PARENT`, `PARSE-STATUS`, `PARTIAL-KEY`, `PASCAL`, `PASSWORD-FIELD`, `PATHNAME`, `PAUSE`, `PBE-HASH-ALG`, `PBE-HASH-ALGO`, `PBE-HASH-ALGOR`, `PBE-HASH-ALGORI`, `PBE-HASH-ALGORIT`, `PBE-HASH-ALGORITH`, `PBE-HASH-ALGORITHM`, `PBE-KEY-ROUNDS`, `PDBNAME`, `PERSIST`, `PERSISTE`, `PERSISTEN`, `PERSISTENT`, `PERSISTENT-CACHE-DISABLED`, `PFC`, `PFCO`, `PFCOL`, `PFCOLO`, `PFCOLOR`, `PIXELS`, `PIXELS-PER-COL`, `PIXELS-PER-COLU`, `PIXELS-PER-COLUM`, `PIXELS-PER-COLUMN`, `PIXELS-PER-ROW`, `POPUP-M`, `POPUP-ME`, `POPUP-MEN`, `POPUP-MENU`, `POPUP-O`, `POPUP-ON`, `POPUP-ONL`, `POPUP-ONLY`, `PORTRAIT`, `POSITION`, `PRECISION`, `PREFER-DATASET`, `PREPARE-STRING`, `PREPARED`, `PREPROC`, `PREPROCE`, `PREPROCES`, `PREPROCESS`, `PRESEL`, `PRESELE`, `PRESELEC`, `PRESELECT`, `PREV`, `PREV-COLUMN`, `PREV-SIBLING`, `PREV-TAB-I`, `PREV-TAB-IT`, `PREV-TAB-ITE`, `PREV-TAB-ITEM`, `PRIMARY`, `PRINTER`, `PRINTER-CONTROL-HANDLE`, `PRINTER-HDC`, `PRINTER-NAME`, `PRINTER-PORT`, `PRINTER-SETUP`, `PRIVATE`, `PRIVATE-D`, `PRIVATE-DA`, `PRIVATE-DAT`, `PRIVATE-DATA`, `PRIVILEGES`, `PROC-HA`, `PROC-HAN`, `PROC-HAND`, `PROC-HANDL`, `PROC-HANDLE`, `PROC-ST`, `PROC-STA`, `PROC-STAT`, `PROC-STATU`, `PROC-STATUS`, `PROC-TEXT`, `PROC-TEXT-BUFFER`, `PROCE`, `PROCED`, `PROCEDU`, `PROCEDUR`, `PROCEDURE`, `PROCEDURE-CALL-TYPE`, `PROCEDURE-TYPE`, `PROCESS`, `PROFILER`, `PROGRAM-NAME`, `PROGRESS`, `PROGRESS-S`, `PROGRESS-SO`, `PROGRESS-SOU`, `PROGRESS-SOUR`, `PROGRESS-SOURC`, `PROGRESS-SOURCE`, `PROMPT`, `PROMPT-F`, `PROMPT-FO`, `PROMPT-FOR`, `PROMSGS`, `PROPATH`, `PROPERTY`, `PROTECTED`, `PROVERS`, `PROVERSI`, `PROVERSIO`, `PROVERSION`, `PROXY`, `PROXY-PASSWORD`, `PROXY-USERID`, `PUBLIC`, `PUBLIC-ID`, `PUBLISH`, `PUBLISHED-EVENTS`, `PUT`, `PUT-BYTE`, `PUT-DOUBLE`, `PUT-FLOAT`, `PUT-INT64`, `PUT-KEY-VAL`, `PUT-KEY-VALU`, `PUT-KEY-VALUE`, `PUT-LONG`, `PUT-SHORT`, `PUT-STRING`, `PUT-UNSIGNED-LONG`, `PUTBYTE`, `QUERY`, `QUERY-CLOSE`, `QUERY-OFF-END`, `QUERY-OPEN`, `QUERY-PREPARE`, `QUERY-TUNING`, `QUESTION`, `QUIT`, `QUOTER`, `R-INDEX`, `RADIO-BUTTONS`, `RADIO-SET`, `RANDOM`, `RAW`, `RAW-TRANSFER`, `RCODE-INFO`, `RCODE-INFOR`, `RCODE-INFORM`, `RCODE-INFORMA`, `RCODE-INFORMAT`, `RCODE-INFORMATI`, `RCODE-INFORMATIO`, `RCODE-INFORMATION`, `READ-AVAILABLE`, `READ-EXACT-NUM`, `READ-FILE`, `READ-JSON`, `READ-ONLY`, `READ-XML`, `READ-XMLSCHEMA`, `READKEY`, `REAL`, `RECID`, `RECORD-LENGTH`, `RECT`, `RECTA`, `RECTAN`, `RECTANG`, `RECTANGL`, `RECTANGLE`, `RECURSIVE`, `REFERENCE-ONLY`, `REFRESH`, `REFRESH-AUDIT-POLICY`, `REFRESHABLE`, `REGISTER-DOMAIN`, `RELEASE`, `REMOTE`, `REMOVE-EVENTS-PROCEDURE`, `REMOVE-SUPER-PROCEDURE`, `REPEAT`, `REPLACE`, `REPLACE-SELECTION-TEXT`, `REPOSITION`, `REPOSITION-BACKWARD`, `REPOSITION-FORWARD`, `REPOSITION-MODE`, `REPOSITION-TO-ROW`, `REPOSITION-TO-ROWID`, `REQUEST`, `REQUEST-INFO`, `RESET`, `RESIZA`, `RESIZAB`, `RESIZABL`, `RESIZABLE`, `RESIZE`, `RESPONSE-INFO`, `RESTART-ROW`, `RESTART-ROWID`, `RETAIN`, `RETAIN-SHAPE`, `RETRY`, `RETRY-CANCEL`, `RETURN`, `RETURN-ALIGN`, `RETURN-ALIGNE`, `RETURN-INS`, `RETURN-INSE`, `RETURN-INSER`, `RETURN-INSERT`, `RETURN-INSERTE`, `RETURN-INSERTED`, `RETURN-TO-START-DI`, `RETURN-TO-START-DIR`, `RETURN-VAL`, `RETURN-VALU`, `RETURN-VALUE`, `RETURN-VALUE-DATA-TYPE`, `RETURNS`, `REVERSE-FROM`, `REVERT`, `REVOKE`, `RGB-VALUE`, `RIGHT-ALIGNED`, `RIGHT-TRIM`, `ROLES`, `ROUND`, `ROUTINE-LEVEL`, `ROW`, `ROW-HEIGHT-CHARS`, `ROW-HEIGHT-PIXELS`, `ROW-MARKERS`, `ROW-OF`, `ROW-RESIZABLE`, `ROWID`, `RULE`, `RUN`, `RUN-PROCEDURE`, `SAVE CACHE`, `SAVE`, `SAVE-AS`, `SAVE-FILE`, `SAX-COMPLE`, `SAX-COMPLET`, `SAX-COMPLETE`, `SAX-PARSE`, `SAX-PARSE-FIRST`, `SAX-PARSE-NEXT`, `SAX-PARSER-ERROR`, `SAX-RUNNING`, `SAX-UNINITIALIZED`, `SAX-WRITE-BEGIN`, `SAX-WRITE-COMPLETE`, `SAX-WRITE-CONTENT`, `SAX-WRITE-ELEMENT`, `SAX-WRITE-ERROR`, `SAX-WRITE-IDLE`, `SAX-WRITE-TAG`, `SAX-WRITER`, `SCHEMA`, `SCHEMA-LOCATION`, `SCHEMA-MARSHAL`, `SCHEMA-PATH`, `SCREEN`, `SCREEN-IO`, `SCREEN-LINES`, `SCREEN-VAL`, `SCREEN-VALU`, `SCREEN-VALUE`, `SCROLL`, `SCROLL-BARS`, `SCROLL-DELTA`, `SCROLL-OFFSET`, `SCROLL-TO-CURRENT-ROW`, `SCROLL-TO-I`, `SCROLL-TO-IT`, `SCROLL-TO-ITE`, `SCROLL-TO-ITEM`, `SCROLL-TO-SELECTED-ROW`, `SCROLLABLE`, `SCROLLBAR-H`, `SCROLLBAR-HO`, `SCROLLBAR-HOR`, `SCROLLBAR-HORI`, `SCROLLBAR-HORIZ`, `SCROLLBAR-HORIZO`, `SCROLLBAR-HORIZON`, `SCROLLBAR-HORIZONT`, `SCROLLBAR-HORIZONTA`, `SCROLLBAR-HORIZONTAL`, `SCROLLBAR-V`, `SCROLLBAR-VE`, `SCROLLBAR-VER`, `SCROLLBAR-VERT`, `SCROLLBAR-VERTI`, `SCROLLBAR-VERTIC`, `SCROLLBAR-VERTICA`, `SCROLLBAR-VERTICAL`, `SCROLLED-ROW-POS`, `SCROLLED-ROW-POSI`, `SCROLLED-ROW-POSIT`, `SCROLLED-ROW-POSITI`, `SCROLLED-ROW-POSITIO`, `SCROLLED-ROW-POSITION`, `SCROLLING`, `SDBNAME`, `SEAL`, `SEAL-TIMESTAMP`, `SEARCH`, `SEARCH-SELF`, `SEARCH-TARGET`, `SECTION`, `SECURITY-POLICY`, `SEEK`, `SELECT`, `SELECT-ALL`, `SELECT-FOCUSED-ROW`, `SELECT-NEXT-ROW`, `SELECT-PREV-ROW`, `SELECT-ROW`, `SELECTABLE`, `SELECTED`, `SELECTION`, `SELECTION-END`, `SELECTION-LIST`, `SELECTION-START`, `SELECTION-TEXT`, `SELF`, `SEND`, `SEND-SQL-STATEMENT`, `SENSITIVE`, `SEPARATE-CONNECTION`, `SEPARATOR-FGCOLOR`, `SEPARATORS`, `SERIALIZABLE`, `SERIALIZE-HIDDEN`, `SERIALIZE-NAME`, `SERVER`, `SERVER-CONNECTION-BOUND`, `SERVER-CONNECTION-BOUND-REQUEST`, `SERVER-CONNECTION-CONTEXT`, `SERVER-CONNECTION-ID`, `SERVER-OPERATING-MODE`, `SESSION`, `SESSION-ID`, `SET`, `SET-APPL-CONTEXT`, `SET-ATTR-CALL-TYPE`, `SET-ATTRIBUTE-NODE`, `SET-BLUE`, `SET-BLUE-`, `SET-BLUE-V`, `SET-BLUE-VA`, `SET-BLUE-VAL`, `SET-BLUE-VALU`, `SET-BLUE-VALUE`, `SET-BREAK`, `SET-BUFFERS`, `SET-CALLBACK`, `SET-CLIENT`, `SET-COMMIT`, `SET-CONTENTS`, `SET-CURRENT-VALUE`, `SET-DB-CLIENT`, `SET-DYNAMIC`, `SET-EVENT-MANAGER-OPTION`, `SET-GREEN`, `SET-GREEN-`, `SET-GREEN-V`, `SET-GREEN-VA`, `SET-GREEN-VAL`, `SET-GREEN-VALU`, `SET-GREEN-VALUE`, `SET-INPUT-SOURCE`, `SET-OPTION`, `SET-OUTPUT-DESTINATION`, `SET-PARAMETER`, `SET-POINTER-VALUE`, `SET-PROPERTY`, `SET-RED`, `SET-RED-`, `SET-RED-V`, `SET-RED-VA`, `SET-RED-VAL`, `SET-RED-VALU`, `SET-RED-VALUE`, `SET-REPOSITIONED-ROW`, `SET-RGB-VALUE`, `SET-ROLLBACK`, `SET-SELECTION`, `SET-SIZE`, `SET-SORT-ARROW`, `SET-WAIT-STATE`, `SETUSER`, `SETUSERI`, `SETUSERID`, `SHA1-DIGEST`, `SHARE`, `SHARE-`, `SHARE-L`, `SHARE-LO`, `SHARE-LOC`, `SHARE-LOCK`, `SHARED`, `SHOW-IN-TASKBAR`, `SHOW-STAT`, `SHOW-STATS`, `SIDE-LAB`, `SIDE-LABE`, `SIDE-LABEL`, `SIDE-LABEL-H`, `SIDE-LABEL-HA`, `SIDE-LABEL-HAN`, `SIDE-LABEL-HAND`, `SIDE-LABEL-HANDL`, `SIDE-LABEL-HANDLE`, `SIDE-LABELS`, `SIGNATURE`, `SILENT`, `SIMPLE`, `SINGLE`, `SINGLE-RUN`, `SINGLETON`, `SIZE`, `SIZE-C`, `SIZE-CH`, `SIZE-CHA`, `SIZE-CHAR`, `SIZE-CHARS`, `SIZE-P`, `SIZE-PI`, `SIZE-PIX`, `SIZE-PIXE`, `SIZE-PIXEL`, `SIZE-PIXELS`, `SKIP`, `SKIP-DELETED-RECORD`, `SLIDER`, `SMALL-ICON`, `SMALL-TITLE`, `SMALLINT`, `SOME`, `SORT`, `SORT-ASCENDING`, `SORT-NUMBER`, `SOURCE`, `SOURCE-PROCEDURE`, `SPACE`, `SQL`, `SQRT`, `SSL-SERVER-NAME`, `STANDALONE`, `START`, `START-DOCUMENT`, `START-ELEMENT`, `START-MOVE`, `START-RESIZE`, `START-ROW-RESIZE`, `STATE-DETAIL`, `STATIC`, `STATUS`, `STATUS-AREA`, `STATUS-AREA-FONT`, `STDCALL`, `STOP`, `STOP-AFTER`, `STOP-PARSING`, `STOPPE`, `STOPPED`, `STORED-PROC`, `STORED-PROCE`, `STORED-PROCED`, `STORED-PROCEDU`, `STORED-PROCEDUR`, `STORED-PROCEDURE`, `STREAM`, `STREAM-HANDLE`, `STREAM-IO`, `STRETCH-TO-FIT`, `STRICT`, `STRICT-ENTITY-RESOLUTION`, `STRING`, `STRING-VALUE`, `STRING-XREF`, `SUB-AVE`, `SUB-AVER`, `SUB-AVERA`, `SUB-AVERAG`, `SUB-AVERAGE`, `SUB-COUNT`, `SUB-MAXIMUM`, `SUB-MENU`, `SUB-MIN`, `SUB-MINIMUM`, `SUB-TOTAL`, `SUBSCRIBE`, `SUBST`, `SUBSTI`, `SUBSTIT`, `SUBSTITU`, `SUBSTITUT`, `SUBSTITUTE`, `SUBSTR`, `SUBSTRI`, `SUBSTRIN`, `SUBSTRING`, `SUBTYPE`, `SUM`, `SUM-MAX`, `SUM-MAXI`, `SUM-MAXIM`, `SUM-MAXIMU`, `SUPER`, `SUPER-PROCEDURES`, `SUPPRESS-NAMESPACE-PROCESSING`, `SUPPRESS-W`, `SUPPRESS-WA`, `SUPPRESS-WAR`, `SUPPRESS-WARN`, `SUPPRESS-WARNI`, `SUPPRESS-WARNIN`, `SUPPRESS-WARNING`, `SUPPRESS-WARNINGS`, `SYMMETRIC-ENCRYPTION-ALGORITHM`, `SYMMETRIC-ENCRYPTION-IV`, `SYMMETRIC-ENCRYPTION-KEY`, `SYMMETRIC-SUPPORT`, `SYSTEM-ALERT`, `SYSTEM-ALERT-`, `SYSTEM-ALERT-B`, `SYSTEM-ALERT-BO`, `SYSTEM-ALERT-BOX`, `SYSTEM-ALERT-BOXE`, `SYSTEM-ALERT-BOXES`, `SYSTEM-DIALOG`, `SYSTEM-HELP`, `SYSTEM-ID`, `TAB-POSITION`, `TAB-STOP`, `TABLE`, `TABLE-HANDLE`, `TABLE-NUMBER`, `TABLE-SCAN`, `TARGET`, `TARGET-PROCEDURE`, `TEMP-DIR`, `TEMP-DIRE`, `TEMP-DIREC`, `TEMP-DIRECT`, `TEMP-DIRECTO`, `TEMP-DIRECTOR`, `TEMP-DIRECTORY`, `TEMP-TABLE`, `TEMP-TABLE-PREPARE`, `TERM`, `TERMI`, `TERMIN`, `TERMINA`, `TERMINAL`, `TERMINATE`, `TEXT`, `TEXT-CURSOR`, `TEXT-SEG-GROW`, `TEXT-SELECTED`, `THEN`, `THIS-OBJECT`, `THIS-PROCEDURE`, `THREAD-SAFE`, `THREE-D`, `THROUGH`, `THROW`, `THRU`, `TIC-MARKS`, `TIME`, `TIME-SOURCE`, `TITLE`, `TITLE-BGC`, `TITLE-BGCO`, `TITLE-BGCOL`, `TITLE-BGCOLO`, `TITLE-BGCOLOR`, `TITLE-DC`, `TITLE-DCO`, `TITLE-DCOL`, `TITLE-DCOLO`, `TITLE-DCOLOR`, `TITLE-FGC`, `TITLE-FGCO`, `TITLE-FGCOL`, `TITLE-FGCOLO`, `TITLE-FGCOLOR`, `TITLE-FO`, `TITLE-FON`, `TITLE-FONT`, `TO`, `TO-ROWID`, `TODAY`, `TOGGLE-BOX`, `TOOLTIP`, `TOOLTIPS`, `TOP-NAV-QUERY`, `TOP-ONLY`, `TOPIC`, `TOTAL`, `TRAILING`, `TRANS`, `TRANS-INIT-PROCEDURE`, `TRANSACTION`, `TRANSACTION-MODE`, `TRANSPARENT`, `TRIGGER`, `TRIGGERS`, `TRIM`, `TRUE`, `TRUNC`, `TRUNCA`, `TRUNCAT`, `TRUNCATE`, `TYPE`, `TYPE-OF`, `UNBOX`, `UNBUFF`, `UNBUFFE`, `UNBUFFER`, `UNBUFFERE`, `UNBUFFERED`, `UNDERL`, `UNDERLI`, `UNDERLIN`, `UNDERLINE`, `UNDO`, `UNFORM`, `UNFORMA`, `UNFORMAT`, `UNFORMATT`, `UNFORMATTE`, `UNFORMATTED`, `UNION`, `UNIQUE`, `UNIQUE-ID`, `UNIQUE-MATCH`, `UNIX`, `UNLESS-HIDDEN`, `UNLOAD`, `UNSIGNED-LONG`, `UNSUBSCRIBE`, `UP`, `UPDATE`, `UPDATE-ATTRIBUTE`, `URL`, `URL-DECODE`, `URL-ENCODE`, `URL-PASSWORD`, `URL-USERID`, `USE`, `USE-DICT-EXPS`, `USE-FILENAME`, `USE-INDEX`, `USE-REVVIDEO`, `USE-TEXT`, `USE-UNDERLINE`, `USE-WIDGET-POOL`, `USER`, `USER-ID`, `USERID`, `USING`, `V6DISPLAY`, `V6FRAME`, `VALID-EVENT`, `VALID-HANDLE`, `VALID-OBJECT`, `VALIDATE`, `VALIDATE-EXPRESSION`, `VALIDATE-MESSAGE`, `VALIDATE-SEAL`, `VALIDATION-ENABLED`, `VALUE`, `VALUE-CHANGED`, `VALUES`, `VAR`, `VARI`, `VARIA`, `VARIAB`, `VARIABL`, `VARIABLE`, `VERBOSE`, `VERSION`, `VERT`, `VERTI`, `VERTIC`, `VERTICA`, `VERTICAL`, `VIEW`, `VIEW-AS`, `VIEW-FIRST-COLUMN-ON-REOPEN`, `VIRTUAL-HEIGHT`, `VIRTUAL-HEIGHT-`, `VIRTUAL-HEIGHT-C`, `VIRTUAL-HEIGHT-CH`, `VIRTUAL-HEIGHT-CHA`, `VIRTUAL-HEIGHT-CHAR`, `VIRTUAL-HEIGHT-CHARS`, `VIRTUAL-HEIGHT-P`, `VIRTUAL-HEIGHT-PI`, `VIRTUAL-HEIGHT-PIX`, `VIRTUAL-HEIGHT-PIXE`, `VIRTUAL-HEIGHT-PIXEL`, `VIRTUAL-HEIGHT-PIXELS`, `VIRTUAL-WIDTH`, `VIRTUAL-WIDTH-`, `VIRTUAL-WIDTH-C`, `VIRTUAL-WIDTH-CH`, `VIRTUAL-WIDTH-CHA`, `VIRTUAL-WIDTH-CHAR`, `VIRTUAL-WIDTH-CHARS`, `VIRTUAL-WIDTH-P`, `VIRTUAL-WIDTH-PI`, `VIRTUAL-WIDTH-PIX`, `VIRTUAL-WIDTH-PIXE`, `VIRTUAL-WIDTH-PIXEL`, `VIRTUAL-WIDTH-PIXELS`, `VISIBLE`, `VOID`, `WAIT`, `WAIT-FOR`, `WARNING`, `WEB-CONTEXT`, `WEEKDAY`, `WHEN`, `WHERE`, `WHILE`, `WIDGET`, `WIDGET-E`, `WIDGET-EN`, `WIDGET-ENT`, `WIDGET-ENTE`, `WIDGET-ENTER`, `WIDGET-ID`, `WIDGET-L`, `WIDGET-LE`, `WIDGET-LEA`, `WIDGET-LEAV`, `WIDGET-LEAVE`, `WIDGET-POOL`, `WIDTH`, `WIDTH-`, `WIDTH-C`, `WIDTH-CH`, `WIDTH-CHA`, `WIDTH-CHAR`, `WIDTH-CHARS`, `WIDTH-P`, `WIDTH-PI`, `WIDTH-PIX`, `WIDTH-PIXE`, `WIDTH-PIXEL`, `WIDTH-PIXELS`, `WINDOW`, `WINDOW-MAXIM`, `WINDOW-MAXIMI`, `WINDOW-MAXIMIZ`, `WINDOW-MAXIMIZE`, `WINDOW-MAXIMIZED`, `WINDOW-MINIM`, `WINDOW-MINIMI`, `WINDOW-MINIMIZ`, `WINDOW-MINIMIZE`, `WINDOW-MINIMIZED`, `WINDOW-NAME`, `WINDOW-NORMAL`, `WINDOW-STA`, `WINDOW-STAT`, `WINDOW-STATE`, `WINDOW-SYSTEM`, `WITH`, `WORD-INDEX`, `WORD-WRAP`, `WORK-AREA-HEIGHT-PIXELS`, `WORK-AREA-WIDTH-PIXELS`, `WORK-AREA-X`, `WORK-AREA-Y`, `WORK-TAB`, `WORK-TABL`, `WORK-TABLE`, `WORKFILE`, `WRITE`, `WRITE-CDATA`, `WRITE-CHARACTERS`, `WRITE-COMMENT`, `WRITE-DATA-ELEMENT`, `WRITE-EMPTY-ELEMENT`, `WRITE-ENTITY-REF`, `WRITE-EXTERNAL-DTD`, `WRITE-FRAGMENT`, `WRITE-JSON`, `WRITE-MESSAGE`, `WRITE-PROCESSING-INSTRUCTION`, `WRITE-STATUS`, `WRITE-XML`, `WRITE-XMLSCHEMA`, `X`, `X-OF`, `XCODE`, `XML-DATA-TYPE`, `XML-ENTITY-EXPANSION-LIMIT`, `XML-NODE-TYPE`, `XML-SCHEMA-PATH`, `XML-STRICT-ENTITY-RESOLUTION`, `XML-SUPPRESS-NAMESPACE-PROCESSING`, `XREF`, `XREF-XML`, `Y`, `Y-OF`, `YEAR`, `YEAR-OFFSET`, `YES`, `YES-NO`, `YES-NO-CANCEL`), KeywordReserved, nil}, // nolint\n-\t\t\t\t{`\"(~~|~[^~]|[^\"~])*\"`, LiteralStringDouble, nil},\n-\t\t\t\t{`'(~~|~[^~]|[^\"~])*'`, LiteralStringSingle, nil},\n-\t\t\t\t{`[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?`, LiteralNumberFloat, nil},\n-\t\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t\t{`\\s+`, Text, nil},\n-\t\t\t\t{`[+*/=-]`, Operator, nil},\n-\t\t\t\t{`[.:()]`, Punctuation, nil},\n-\t\t\t\t{`.`, NameVariable, nil},\n-\t\t\t},\n-\t\t\t\"comment\": {\n-\t\t\t\t{`[^*/]`, CommentMultiline, nil},\n-\t\t\t\t{`/\\*`, CommentMultiline, Push()},\n-\t\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t\t{`[*/]`, CommentMultiline, nil},\n-\t\t\t\t{`\\/\\/`, CommentSingle, nil},\n-\t\t\t},\n-\t\t\t\"preprocessor\": {\n-\t\t\t\t{`[^{}]`, CommentPreproc, nil},\n-\t\t\t\t{`\\{`, CommentPreproc, Push()},\n-\t\t\t\t{`\\}`, CommentPreproc, Pop(1)},\n-\t\t\t},\n-\t\t}\n-\t},\n-))"
    },
    {
      "sha": "aed663fe51a0ebccb13286bb60c9c03cdade975e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/org.go",
      "status": "removed",
      "additions": 0,
      "deletions": 99,
      "changes": 99,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Forg.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Forg.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Forg.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,99 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// Org mode lexer.\n-var Org = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"Org Mode\",\n-\t\tAliases:   []string{\"org\", \"orgmode\"},\n-\t\tFilenames: []string{\"*.org\"},\n-\t\tMimeTypes: []string{\"text/org\"}, // https://lists.gnu.org/r/emacs-orgmode/2017-09/msg00087.html\n-\t},\n-\torgRules,\n-))\n-\n-func orgRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^# .*$`, Comment, nil},\n-\t\t\t// Headings\n-\t\t\t{`^(\\*)( COMMENT)( .*)$`, ByGroups(GenericHeading, NameEntity, GenericStrong), nil},\n-\t\t\t{`^(\\*\\*+)( COMMENT)( .*)$`, ByGroups(GenericSubheading, NameEntity, Text), nil},\n-\t\t\t{`^(\\*)( DONE)( .*)$`, ByGroups(GenericHeading, LiteralStringRegex, GenericStrong), nil},\n-\t\t\t{`^(\\*\\*+)( DONE)( .*)$`, ByGroups(GenericSubheading, LiteralStringRegex, Text), nil},\n-\t\t\t{`^(\\*)( TODO)( .*)$`, ByGroups(GenericHeading, Error, GenericStrong), nil},\n-\t\t\t{`^(\\*\\*+)( TODO)( .*)$`, ByGroups(GenericSubheading, Error, Text), nil},\n-\t\t\t{`^(\\*)( .+?)( :[a-zA-Z0-9_@:]+:)$`, ByGroups(GenericHeading, GenericStrong, GenericEmph), nil}, // Level 1 heading with tags\n-\t\t\t{`^(\\*)( .+)$`, ByGroups(GenericHeading, GenericStrong), nil},                                   // // Level 1 heading with NO tags\n-\t\t\t{`^(\\*\\*+)( .+?)( :[a-zA-Z0-9_@:]+:)$`, ByGroups(GenericSubheading, Text, GenericEmph), nil},    // Level 2+ heading with tags\n-\t\t\t{`^(\\*\\*+)( .+)$`, ByGroups(GenericSubheading, Text), nil},                                      // Level 2+ heading with NO tags\n-\t\t\t// Checkbox lists\n-\t\t\t{`^( *)([+-] )(\\[[ X]\\])( .+)$`, ByGroups(Text, Keyword, Keyword, UsingSelf(\"inline\")), nil},\n-\t\t\t{`^( +)(\\* )(\\[[ X]\\])( .+)$`, ByGroups(Text, Keyword, Keyword, UsingSelf(\"inline\")), nil},\n-\t\t\t// Definition lists\n-\t\t\t{`^( *)([+-] )([^ \\n]+ ::)( .+)$`, ByGroups(Text, Keyword, Keyword, UsingSelf(\"inline\")), nil},\n-\t\t\t{`^( +)(\\* )([^ \\n]+ ::)( .+)$`, ByGroups(Text, Keyword, Keyword, UsingSelf(\"inline\")), nil},\n-\t\t\t// Unordered lists\n-\t\t\t{`^( *)([+-] )(.+)$`, ByGroups(Text, Keyword, UsingSelf(\"inline\")), nil},\n-\t\t\t{`^( +)(\\* )(.+)$`, ByGroups(Text, Keyword, UsingSelf(\"inline\")), nil},\n-\t\t\t// Ordered lists\n-\t\t\t{`^( *)([0-9]+[.)])( \\[@[0-9]+\\])( .+)$`, ByGroups(Text, Keyword, GenericEmph, UsingSelf(\"inline\")), nil},\n-\t\t\t{`^( *)([0-9]+[.)])( .+)$`, ByGroups(Text, Keyword, UsingSelf(\"inline\")), nil},\n-\t\t\t// Dynamic Blocks\n-\t\t\t{`(?i)^( *#\\+begin: )([^ ]+)([\\w\\W]*?\\n)([\\w\\W]*?)(^ *#\\+end: *$)`, ByGroups(Comment, CommentSpecial, Comment, UsingSelf(\"inline\"), Comment), nil},\n-\t\t\t// Blocks\n-\t\t\t// - Comment Blocks\n-\t\t\t{`(?i)^( *#\\+begin_comment *\\n)([\\w\\W]*?)(^ *#\\+end_comment *$)`, ByGroups(Comment, Comment, Comment), nil},\n-\t\t\t// - Src Blocks\n-\t\t\t{\n-\t\t\t\t`(?i)^( *#\\+begin_src )([^ \\n]+)(.*?\\n)([\\w\\W]*?)(^ *#\\+end_src *$)`,\n-\t\t\t\tUsingByGroup(2, 4, Comment, CommentSpecial, Comment, Text, Comment),\n-\t\t\t\tnil,\n-\t\t\t},\n-\t\t\t// - Export Blocks\n-\t\t\t{\n-\t\t\t\t`(?i)^( *#\\+begin_export )(\\w+)( *\\n)([\\w\\W]*?)(^ *#\\+end_export *$)`,\n-\t\t\t\tUsingByGroup(2, 4, Comment, CommentSpecial, Text, Text, Comment),\n-\t\t\t\tnil,\n-\t\t\t},\n-\t\t\t// - Org Special, Example, Verse, etc. Blocks\n-\t\t\t{`(?i)^( *#\\+begin_)(\\w+)( *\\n)([\\w\\W]*?)(^ *#\\+end_\\2)( *$)`, ByGroups(Comment, Comment, Text, Text, Comment, Text), nil},\n-\t\t\t// Keywords\n-\t\t\t{`^(#\\+\\w+)(:.*)$`, ByGroups(CommentSpecial, Comment), nil}, // Other Org keywords like #+title\n-\t\t\t// Properties and Drawers\n-\t\t\t{`(?i)^( *:\\w+: *\\n)([\\w\\W]*?)(^ *:end: *$)`, ByGroups(Comment, CommentSpecial, Comment), nil},\n-\t\t\t// Line break operator\n-\t\t\t{`^(.*)(\\\\\\\\)$`, ByGroups(UsingSelf(\"inline\"), Operator), nil},\n-\t\t\t// Deadline/Scheduled\n-\t\t\t{`(?i)^( *(?:DEADLINE|SCHEDULED): )(<[^<>]+?> *)$`, ByGroups(Comment, CommentSpecial), nil}, // DEADLINE/SCHEDULED: <datestamp>\n-\t\t\t// DONE state CLOSED\n-\t\t\t{`(?i)^( *CLOSED: )(\\[[^][]+?\\] *)$`, ByGroups(Comment, CommentSpecial), nil}, // CLOSED: [datestamp]\n-\t\t\t// All other lines\n-\t\t\tInclude(\"inline\"),\n-\t\t},\n-\t\t\"inline\": {\n-\t\t\t{`(\\s)*(\\*[^ \\n*][^*]+?[^ \\n*]\\*)((?=\\W|\\n|$))`, ByGroups(Text, GenericStrong, Text), nil},                          // Bold\n-\t\t\t{`(\\s)*(/[^/]+?/)((?=\\W|\\n|$))`, ByGroups(Text, GenericEmph, Text), nil},                                            // Italic\n-\t\t\t{`(\\s)*(=[^\\n=]+?=)((?=\\W|\\n|$))`, ByGroups(Text, NameClass, Text), nil},                                            // Verbatim\n-\t\t\t{`(\\s)*(~[^\\n~]+?~)((?=\\W|\\n|$))`, ByGroups(Text, NameClass, Text), nil},                                            // Code\n-\t\t\t{`(\\s)*(\\+[^+]+?\\+)((?=\\W|\\n|$))`, ByGroups(Text, GenericDeleted, Text), nil},                                       // Strikethrough\n-\t\t\t{`(\\s)*(_[^_]+?_)((?=\\W|\\n|$))`, ByGroups(Text, GenericUnderline, Text), nil},                                       // Underline\n-\t\t\t{`(<)([^<>]+?)(>)`, ByGroups(Text, String, Text), nil},                                                              // <datestamp>\n-\t\t\t{`[{]{3}[^}]+[}]{3}`, NameBuiltin, nil},                                                                             // {{{macro(foo,1)}}}\n-\t\t\t{`([^[])(\\[fn:)([^]]+?)(\\])([^]])`, ByGroups(Text, NameBuiltinPseudo, LiteralString, NameBuiltinPseudo, Text), nil}, // [fn:1]\n-\t\t\t// Links\n-\t\t\t{`(\\[\\[)([^][]+?)(\\]\\[)([^][]+)(\\]\\])`, ByGroups(Text, NameAttribute, Text, NameTag, Text), nil}, // [[link][descr]]\n-\t\t\t{`(\\[\\[)([^][]+?)(\\]\\])`, ByGroups(Text, NameAttribute, Text), nil},                              // [[link]]\n-\t\t\t{`(<<)([^<>]+?)(>>)`, ByGroups(Text, NameAttribute, Text), nil},                                  // <<targetlink>>\n-\t\t\t// Tables\n-\t\t\t{`^( *)(\\|[ -].*?[ -]\\|)$`, ByGroups(Text, String), nil},\n-\t\t\t// Blank lines, newlines\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t// Any other text\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "8b32aa4420695f2ae297d31ded769f89da99640a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/plaintext.go",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fplaintext.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fplaintext.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fplaintext.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,16 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-var Plaintext = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"plaintext\",\n-\t\tAliases:   []string{\"text\", \"plain\", \"no-highlight\"},\n-\t\tFilenames: []string{\"*.txt\"},\n-\t\tMimeTypes: []string{\"text/plain\"},\n-\t\tPriority:  -1,\n-\t},\n-\tPlaintextRules,\n-))"
    },
    {
      "sha": "0ef96ef8f3c0efadfbf122c775dccf7d474ed1a7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/postgres.go",
      "status": "removed",
      "additions": 0,
      "deletions": 77,
      "changes": 77,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fpostgres.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fpostgres.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fpostgres.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,77 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// Postgresql Sql Dialect lexer.\n-var PostgreSQL = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:            \"PostgreSQL SQL dialect\",\n-\t\tAliases:         []string{\"postgresql\", \"postgres\"},\n-\t\tFilenames:       []string{},\n-\t\tMimeTypes:       []string{\"text/x-postgresql\"},\n-\t\tNotMultiline:    true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\tpostgreSQLRules,\n-))\n-\n-func postgreSQLRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`--.*\\n?`, CommentSingle, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n-\t\t\t{`(bigint|bigserial|bit|bit\\s+varying|bool|boolean|box|bytea|char|character|character\\s+varying|cidr|circle|date|decimal|double\\s+precision|float4|float8|inet|int|int2|int4|int8|integer|interval|json|jsonb|line|lseg|macaddr|money|numeric|path|pg_lsn|point|polygon|real|serial|serial2|serial4|serial8|smallint|smallserial|text|time|timestamp|timestamptz|timetz|tsquery|tsvector|txid_snapshot|uuid|varbit|varchar|with\\s+time\\s+zone|without\\s+time\\s+zone|xml|anyarray|anyelement|anyenum|anynonarray|anyrange|cstring|fdw_handler|internal|language_handler|opaque|record|void)\\b`, NameBuiltin, nil},\n-\t\t\t{\n-\t\t\t\t`(?s)(DO)(\\s+)(?:(LANGUAGE)?(\\s+)('?)(\\w+)?('?)(\\s+))?(\\$)([^$]*)(\\$)(.*?)(\\$)(\\10)(\\$)`,\n-\t\t\t\tUsingByGroup(6, 12,\n-\t\t\t\t\tKeyword, Text, Keyword, Text, // DO LANGUAGE\n-\t\t\t\t\tStringSingle, StringSingle, StringSingle, Text, // 'plpgsql'\n-\t\t\t\t\tStringHeredoc, StringHeredoc, StringHeredoc, // $tag$\n-\t\t\t\t\tStringHeredoc,                                // (code block)\n-\t\t\t\t\tStringHeredoc, StringHeredoc, StringHeredoc), // $tag$\n-\t\t\t\tnil,\n-\t\t\t},\n-\t\t\t{Words(``, `\\b`, `ABORT`, `ABSOLUTE`, `ACCESS`, `ACTION`, `ADD`, `ADMIN`, `AFTER`, `AGGREGATE`, `ALL`, `ALSO`, `ALTER`, `ALWAYS`, `ANALYSE`, `ANALYZE`, `AND`, `ANY`, `ARRAY`, `AS`, `ASC`, `ASSERTION`, `ASSIGNMENT`, `ASYMMETRIC`, `AT`, `ATTRIBUTE`, `AUTHORIZATION`, `BACKWARD`, `BEFORE`, `BEGIN`, `BETWEEN`, `BIGINT`, `BINARY`, `BIT`, `BOOLEAN`, `BOTH`, `BY`, `CACHE`, `CALLED`, `CASCADE`, `CASCADED`, `CASE`, `CAST`, `CATALOG`, `CHAIN`, `CHAR`, `CHARACTER`, `CHARACTERISTICS`, `CHECK`, `CHECKPOINT`, `CLASS`, `CLOSE`, `CLUSTER`, `COALESCE`, `COLLATE`, `COLLATION`, `COLUMN`, `COMMENT`, `COMMENTS`, `COMMIT`, `COMMITTED`, `CONCURRENTLY`, `CONFIGURATION`, `CONNECTION`, `CONSTRAINT`, `CONSTRAINTS`, `CONTENT`, `CONTINUE`, `CONVERSION`, `COPY`, `COST`, `CREATE`, `CROSS`, `CSV`, `CURRENT`, `CURRENT_CATALOG`, `CURRENT_DATE`, `CURRENT_ROLE`, `CURRENT_SCHEMA`, `CURRENT_TIME`, `CURRENT_TIMESTAMP`, `CURRENT_USER`, `CURSOR`, `CYCLE`, `DATA`, `DATABASE`, `DAY`, `DEALLOCATE`, `DEC`, `DECIMAL`, `DECLARE`, `DEFAULT`, `DEFAULTS`, `DEFERRABLE`, `DEFERRED`, `DEFINER`, `DELETE`, `DELIMITER`, `DELIMITERS`, `DESC`, `DICTIONARY`, `DISABLE`, `DISCARD`, `DISTINCT`, `DO`, `DOCUMENT`, `DOMAIN`, `DOUBLE`, `DROP`, `EACH`, `ELSE`, `ENABLE`, `ENCODING`, `ENCRYPTED`, `END`, `ENUM`, `ESCAPE`, `EVENT`, `EXCEPT`, `EXCLUDE`, `EXCLUDING`, `EXCLUSIVE`, `EXECUTE`, `EXISTS`, `EXPLAIN`, `EXTENSION`, `EXTERNAL`, `EXTRACT`, `FALSE`, `FAMILY`, `FETCH`, `FILTER`, `FIRST`, `FLOAT`, `FOLLOWING`, `FOR`, `FORCE`, `FOREIGN`, `FORWARD`, `FREEZE`, `FROM`, `FULL`, `FUNCTION`, `FUNCTIONS`, `GLOBAL`, `GRANT`, `GRANTED`, `GREATEST`, `GROUP`, `HANDLER`, `HAVING`, `HEADER`, `HOLD`, `HOUR`, `IDENTITY`, `IF`, `ILIKE`, `IMMEDIATE`, `IMMUTABLE`, `IMPLICIT`, `IN`, `INCLUDING`, `INCREMENT`, `INDEX`, `INDEXES`, `INHERIT`, `INHERITS`, `INITIALLY`, `INLINE`, `INNER`, `INOUT`, `INPUT`, `INSENSITIVE`, `INSERT`, `INSTEAD`, `INT`, `INTEGER`, `INTERSECT`, `INTERVAL`, `INTO`, `INVOKER`, `IS`, `ISNULL`, `ISOLATION`, `JOIN`, `KEY`, `LABEL`, `LANGUAGE`, `LARGE`, `LAST`, `LATERAL`, `LC_COLLATE`, `LC_CTYPE`, `LEADING`, `LEAKPROOF`, `LEAST`, `LEFT`, `LEVEL`, `LIKE`, `LIMIT`, `LISTEN`, `LOAD`, `LOCAL`, `LOCALTIME`, `LOCALTIMESTAMP`, `LOCATION`, `LOCK`, `MAPPING`, `MATCH`, `MATERIALIZED`, `MAXVALUE`, `MINUTE`, `MINVALUE`, `MODE`, `MONTH`, `MOVE`, `NAME`, `NAMES`, `NATIONAL`, `NATURAL`, `NCHAR`, `NEXT`, `NO`, `NONE`, `NOT`, `NOTHING`, `NOTIFY`, `NOTNULL`, `NOWAIT`, `NULL`, `NULLIF`, `NULLS`, `NUMERIC`, `OBJECT`, `OF`, `OFF`, `OFFSET`, `OIDS`, `ON`, `ONLY`, `OPERATOR`, `OPTION`, `OPTIONS`, `OR`, `ORDER`, `ORDINALITY`, `OUT`, `OUTER`, `OVER`, `OVERLAPS`, `OVERLAY`, `OWNED`, `OWNER`, `PARSER`, `PARTIAL`, `PARTITION`, `PASSING`, `PASSWORD`, `PLACING`, `PLANS`, `POLICY`, `POSITION`, `PRECEDING`, `PRECISION`, `PREPARE`, `PREPARED`, `PRESERVE`, `PRIMARY`, `PRIOR`, `PRIVILEGES`, `PROCEDURAL`, `PROCEDURE`, `PROGRAM`, `QUOTE`, `RANGE`, `READ`, `REAL`, `REASSIGN`, `RECHECK`, `RECURSIVE`, `REF`, `REFERENCES`, `REFRESH`, `REINDEX`, `RELATIVE`, `RELEASE`, `RENAME`, `REPEATABLE`, `REPLACE`, `REPLICA`, `RESET`, `RESTART`, `RESTRICT`, `RETURNING`, `RETURNS`, `REVOKE`, `RIGHT`, `ROLE`, `ROLLBACK`, `ROW`, `ROWS`, `RULE`, `SAVEPOINT`, `SCHEMA`, `SCROLL`, `SEARCH`, `SECOND`, `SECURITY`, `SELECT`, `SEQUENCE`, `SEQUENCES`, `SERIALIZABLE`, `SERVER`, `SESSION`, `SESSION_USER`, `SET`, `SETOF`, `SHARE`, `SHOW`, `SIMILAR`, `SIMPLE`, `SMALLINT`, `SNAPSHOT`, `SOME`, `STABLE`, `STANDALONE`, `START`, `STATEMENT`, `STATISTICS`, `STDIN`, `STDOUT`, `STORAGE`, `STRICT`, `STRIP`, `SUBSTRING`, `SYMMETRIC`, `SYSID`, `SYSTEM`, `TABLE`, `TABLES`, `TABLESPACE`, `TEMP`, `TEMPLATE`, `TEMPORARY`, `TEXT`, `THEN`, `TIME`, `TIMESTAMP`, `TO`, `TRAILING`, `TRANSACTION`, `TREAT`, `TRIGGER`, `TRIM`, `TRUE`, `TRUNCATE`, `TRUSTED`, `TYPE`, `TYPES`, `UNBOUNDED`, `UNCOMMITTED`, `UNENCRYPTED`, `UNION`, `UNIQUE`, `UNKNOWN`, `UNLISTEN`, `UNLOGGED`, `UNTIL`, `UPDATE`, `USER`, `USING`, `VACUUM`, `VALID`, `VALIDATE`, `VALIDATOR`, `VALUE`, `VALUES`, `VARCHAR`, `VARIADIC`, `VARYING`, `VERBOSE`, `VERSION`, `VIEW`, `VIEWS`, `VOLATILE`, `WHEN`, `WHERE`, `WHITESPACE`, `WINDOW`, `WITH`, `WITHIN`, `WITHOUT`, `WORK`, `WRAPPER`, `WRITE`, `XML`, `XMLATTRIBUTES`, `XMLCONCAT`, `XMLELEMENT`, `XMLEXISTS`, `XMLFOREST`, `XMLPARSE`, `XMLPI`, `XMLROOT`, `XMLSERIALIZE`, `YEAR`, `YES`, `ZONE`), Keyword, nil},\n-\t\t\t{\"[+*/<>=~!@#%^&|`?-]+\", Operator, nil},\n-\t\t\t{`::`, Operator, nil},\n-\t\t\t{`\\$\\d+`, NameVariable, nil},\n-\t\t\t{`([0-9]*\\.[0-9]*|[0-9]+)(e[+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`((?:E|U&)?)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"string\")},\n-\t\t\t{`((?:U&)?)(\")`, ByGroups(LiteralStringAffix, LiteralStringName), Push(\"quoted-ident\")},\n-\t\t\t{\n-\t\t\t\t`(?s)(\\$)([^$]*)(\\$)(.*?)(\\$)(\\2)(\\$)(\\s+)(LANGUAGE)?(\\s+)('?)(\\w+)?('?)`,\n-\t\t\t\tUsingByGroup(12, 4,\n-\t\t\t\t\tStringHeredoc, StringHeredoc, StringHeredoc, // $tag$\n-\t\t\t\t\tStringHeredoc,                               // (code block)\n-\t\t\t\t\tStringHeredoc, StringHeredoc, StringHeredoc, // $tag$\n-\t\t\t\t\tText, Keyword, Text, // <space> LANGUAGE <space>\n-\t\t\t\t\tStringSingle, StringSingle, StringSingle), // 'type'\n-\t\t\t\tnil,\n-\t\t\t},\n-\t\t\t{`(?s)(\\$)([^$]*)(\\$)(.*?)(\\$)(\\2)(\\$)`, LiteralStringHeredoc, nil},\n-\t\t\t{`[a-z_]\\w*`, Name, nil},\n-\t\t\t{`:(['\"]?)[a-z]\\w*\\b\\1`, NameVariable, nil},\n-\t\t\t{`[;:()\\[\\]{},.]`, Punctuation, nil},\n-\t\t},\n-\t\t\"multiline-comments\": {\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[^/*]+`, CommentMultiline, nil},\n-\t\t\t{`[/*]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^']+`, LiteralStringSingle, nil},\n-\t\t\t{`''`, LiteralStringSingle, nil},\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t},\n-\t\t\"quoted-ident\": {\n-\t\t\t{`[^\"]+`, LiteralStringName, nil},\n-\t\t\t{`\"\"`, LiteralStringName, nil},\n-\t\t\t{`\"`, LiteralStringName, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "38e02456529a4548fd86bb26f68a815b4058952f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/smarty.go",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fsmarty.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fsmarty.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fsmarty.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,42 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// Smarty lexer.\n-var Smarty = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"Smarty\",\n-\t\tAliases:   []string{\"smarty\"},\n-\t\tFilenames: []string{\"*.tpl\"},\n-\t\tMimeTypes: []string{\"application/x-smarty\"},\n-\t\tDotAll:    true,\n-\t},\n-\tsmartyRules,\n-))\n-\n-func smartyRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^{]+`, Other, nil},\n-\t\t\t{`(\\{)(\\*.*?\\*)(\\})`, ByGroups(CommentPreproc, Comment, CommentPreproc), nil},\n-\t\t\t{`(\\{php\\})(.*?)(\\{/php\\})`, ByGroups(CommentPreproc, Using(\"PHP\"), CommentPreproc), nil},\n-\t\t\t{`(\\{)(/?[a-zA-Z_]\\w*)(\\s*)`, ByGroups(CommentPreproc, NameFunction, Text), Push(\"smarty\")},\n-\t\t\t{`\\{`, CommentPreproc, Push(\"smarty\")},\n-\t\t},\n-\t\t\"smarty\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\{`, CommentPreproc, Push()},\n-\t\t\t{`\\}`, CommentPreproc, Pop(1)},\n-\t\t\t{`#[a-zA-Z_]\\w*#`, NameVariable, nil},\n-\t\t\t{`\\$[a-zA-Z_]\\w*(\\.\\w+)*`, NameVariable, nil},\n-\t\t\t{`[~!%^&*()+=|\\[\\]:;,.<>/?@-]`, Operator, nil},\n-\t\t\t{`(true|false|null)\\b`, KeywordConstant, nil},\n-\t\t\t{`[0-9](\\.[0-9]*)?(eE[+-][0-9])?[flFLdD]?|0[xX][0-9a-fA-F]+[Ll]?`, LiteralNumber, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, NameAttribute, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "11561b3afcb02d1b6460079331abed2ceb1d5db0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/v.go",
      "status": "removed",
      "additions": 0,
      "deletions": 173,
      "changes": 173,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fv.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fv.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fv.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,173 +0,0 @@\n-package lexers\n-\n-import (\n-\t\"strings\"\n-\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// V lexer.\n-var V = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"V\",\n-\t\tAliases:   []string{\"v\", \"vlang\"},\n-\t\tFilenames: []string{\"*.v\", \"*.vv\", \"v.mod\"},\n-\t\tMimeTypes: []string{\"text/x-v\"},\n-\t\tEnsureNL:  true,\n-\t},\n-\tvRules,\n-).SetAnalyser(func(text string) float32 {\n-\tif strings.Contains(text, \"import \") && strings.Contains(text, \"module \") {\n-\t\treturn 0.2\n-\t}\n-\tif strings.Contains(text, \"module \") {\n-\t\treturn 0.1\n-\t}\n-\treturn 0.0\n-}))\n-\n-const (\n-\tnamePattern             = `[^\\W\\d]\\w*`\n-\ttypeNamePattern         = `[A-Z]\\w*`\n-\tmultiLineCommentPattern = `/\\*(?:.|\\n)*?\\*/`\n-)\n-\n-func vRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`(?<=module\\s+\\w[^\\n]*\\s+)(//[^\\n]+\\n)+(?=\\n)`, StringDoc, nil},\n-\t\t\t{`(// *)(\\w+)([^\\n]+\\n)(?=(?://[^\\n]*\\n)* *(?:pub +)?(?:fn|struct|union|type|interface|enum|const) +\\2\\b)`, ByGroups(StringDoc, GenericEmph, StringDoc), Push(`string-doc`)},\n-\t\t\t{`//[^\\n]*\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*(?:(?:` + multiLineCommentPattern + `)*|.|\\n)*\\*/`, CommentMultiline, nil},\n-\t\t\t{`\\b(import|module)\\b`, KeywordNamespace, nil},\n-\t\t\t{`\\b(fn|struct|union|map|chan|type|interface|enum|const|mut|shared|pub|__global)\\b`, KeywordDeclaration, nil},\n-\t\t\t{`\\?`, KeywordDeclaration, nil},\n-\t\t\t{`(?<=\\)\\s*)!`, KeywordDeclaration, nil},\n-\t\t\t{`[ \\t]*#include[^\\n]+`, Using(`c`), nil},\n-\t\t\t{`[ \\t]*#\\w[^\\n]*`, CommentPreproc, nil},\n-\t\t\t{`(sql)(\\s+)(\\w+)(\\s+)({)([^}]*?)(})`, ByGroups(Keyword, Text, Name, Text, Punctuation, Using(`sql`), Punctuation), nil},\n-\t\t\t{`\\$(?=\\w)`, Operator, nil},\n-\t\t\t{`(?<=\\$)(?:embed_file|pkgconfig|tmpl|env|compile_error|compile_warn)`, NameBuiltin, nil},\n-\t\t\t{`(asm)(\\s+)(\\w+)(\\s*)({)([^}]*?)(})`, ByGroups(Keyword, Text, KeywordType, Text, Punctuation, Using(`nasm`), Punctuation), nil},\n-\t\t\t{`\\b_(?:un)?likely_(?=\\()`, NameFunctionMagic, nil},\n-\t\t\t{`(?<=\\$if.+?(?:&&|\\|\\|)?)(` + Words(``, ``, `windows`, `linux`, `macos`, `mac`, `darwin`, `ios`, `android`, `mach`, `dragonfly`, `gnu`, `hpux`, `haiku`, `qnx`, `solaris`, `gcc`, `tinyc`, `clang`, `mingw`, `msvc`, `cplusplus`, `amd64`, `arm64`, `x64`, `x32`, `little_endian`, `big_endian`, `debug`, `prod`, `test`, `js`, `glibc`, `prealloc`, `no_bounds_checking`, `freestanding`, `no_segfault_handler`, `no_backtrace`, `no_main`) + `)+`, NameBuiltin, nil},\n-\t\t\t{`@` + Words(``, `\\b`, `FN`, `METHOD`, `MOD`, `STRUCT`, `FILE`, `LINE`, `COLUMN`, `VEXE`, `VEXEROOT`, `VHASH`, `VMOD_FILE`, `VMODROOT`), NameVariableMagic, nil},\n-\t\t\t{Words(`\\b(?<!@)`, `\\b`, `break`, `select`, `match`, `defer`, `go`, `goto`, `else`, `if`, `continue`, `for`, `return`, `assert`, `or`, `as`, `atomic`, `isreftype`, `is`, `in`, `lock`, `rlock`, `sizeof`, `typeof`, `unsafe`, `volatile`, `static`, `__offsetof`), Keyword, nil},\n-\t\t\t{`\\b(?<!@)(none|true|false|si_s_code|si_g32_code|si_g64_code)\\b`, KeywordConstant, nil},\n-\t\t\t{Words(`\\b(?<!@)`, `(?=\\()`, `u8`, `u16`, `u32`, `u64`, `u128`, `int`, `i8`, `i16`, `i64`, `i128`, `f32`, `f64`, `rune`, `string`, `bool`, `usize`, `isize`, `any`, `error`, `print`, `println`, `dump`, `panic`, `eprint`, `eprintln`, `copy`, `close`, `len`, `map`, `filter`, `cap`, `delete`, `delete_many`, `delete_last`, `c_error_number_str`, `compare_strings`, `cstring_to_vstring`, `error_with_code`, `exit`, `f32_abs`, `f32_max`, `f32_min`, `f64_max`, `flush_stderr`, `flush_stdout`, `free`, `gc_check_leaks`, `get_str_intp_u32_format`, `get_str_intp_u64_format`, `isnil`, `malloc`, `malloc_noscan`, `memdup`, `memdup_noscan`, `panic_error_number`, `panic_lasterr`, `panic_optional_not_set`, `panic_result_not_set`, `print_backtrace`, `proc_pidpath`, `ptr_str`, `realloc_data`, `str_intp`, `str_intp_g32`, `str_intp_g64`, `str_intp_rune`, `str_intp_sq`, `str_intp_sub`, `string_from_wide`, `string_from_wide2`, `tos`, `tos2`, `tos3`, `tos4`, `tos5`, `tos_clone`, `utf32_decode_to_buffer`, `utf32_to_str`, `utf32_to_str_no_malloc`, `utf8_char_len`, `utf8_getchar`, `utf8_str_visible_length`, `v_realloc`, `vcalloc`, `vcalloc_noscan`, `vmemcmp`, `vmemcpy`, `vmemmove`, `vmemset`, `vstrlen`, `vstrlen_char`, `winapi_lasterr_str`, `reduce`, `string`, `join`, `free`, `join_lines`, `sort_by_len`, `sort_ignore_case`, `str`, `byterune`, `bytestr`, `clone`, `hex`, `utf8_to_utf32`, `vbytes`, `vstring`, `vstring_literal`, `vstring_literal_with_len`, `vstring_with_len`, `try_pop`, `try_push`, `strg`, `strsci`, `strlong`, `eq_epsilon`, `hex_full`, `hex2`, `msg`, `code`, `repeat`, `bytes`, `length_in_bytes`, `ascii_str`, `is_alnum`, `is_bin_digit`, `is_capital`, `is_digit`, `is_hex_digit`, `is_letter`, `is_oct_digit`, `is_space`, `str_escaped`, `repeat_to_depth`, `insert`, `prepend`, `trim`, `drop`, `first`, `last`, `pop`, `clone_to_depth`, `push_many`, `reverse_in_place`, `reverse`, `any`, `all`, `sort`, `sort_with_compare`, `contains`, `index`, `grow_cap`, `grow_len`, `pointers`, `move`, `keys`, `after`, `after_char`, `all_after`, `all_after_last`, `all_before`, `all_before_last`, `before`, `capitalize`, `compare`, `contains_any`, `contains_any_substr`, `count`, `ends_with`, `fields`, `find_between`, `hash`, `index_after`, `index_any`, `index_u8`, `is_lower`, `is_title`, `is_upper`, `last_index`, `last_index_u8`, `len_utf8`, `limit`, `match_glob`, `parse_int`, `parse_uint`, `replace`, `replace_each`, `replace_once`, `runes`, `split`, `split_any`, `split_into_lines`, `split_nth`, `starts_with`, `starts_with_capital`, `strip_margin`, `strip_margin_custom`, `substr`, `substr_ni`, `substr_with_check`, `title`, `to_lower`, `to_upper`, `to_wide`, `trim_left`, `trim_right`, `trim_space`, `trim_string_left`, `trim_string_right`, `utf32_code`), NameBuiltin, nil},\n-\t\t\t{Words(`\\b(?<!@)`, `\\b`, `ArrayFlags`, `AttributeKind`, `ChanState`, `StrIntpType`, `array`, `Error`, `FieldData`, `FunctionData`, `map`, `MethodArgs`, `SortedMap`, `string`, `StrIntpCgenData`, `StrIntpData`, `StrIntpMem`, `StructAttribute`, `VAssertMetaInfo`), NameBuiltin, nil},\n-\t\t\t{Words(`\\b(?<!@)`, `\\b`, `u8`, `u16`, `u32`, `u64`, `u128`, `int`, `i8`, `i16`, `i64`, `i128`, `f32`, `f64`, `rune`, `string`, `bool`, `usize`, `isize`, `any`, `error`, `voidptr`), KeywordType, nil},\n-\t\t\t{`\\bit\\b`, NameVariableMagic, nil},\n-\t\t\t{`(?<!fn\\s+)(?<=\\w+\\s+|^)\\[(?=:if +)?(?=\\w+)`, Punctuation, Push(`attribute`)},\n-\t\t\t{`(<<=|>>=|>>>=|>>>|<<|>>|<=|>=|\\^=|\\+=|-=|\\*=|/=|%=|&=|\\|=|&&|\\|\\||<-|\\+\\+|--|==|!=|:=|\\.\\.\\.|\\.\\.|[+\\-*/%&|^~=#@!])`, Operator, nil},\n-\t\t\t{`[\\d_]+(\\.\\d+e[+\\-]?\\d+|\\.\\d+|e[+\\-]?\\d+)`, LiteralNumberFloat, nil},\n-\t\t\t{`\\.\\d+(e[+\\-]?\\d+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`0o[0-7_]+`, LiteralNumberOct, nil},\n-\t\t\t{`0x[0-9a-fA-F_]+`, LiteralNumberHex, nil},\n-\t\t\t{`0b[01_]+`, LiteralNumberBin, nil},\n-\t\t\t{`(0|[1-9][0-9_]*)`, LiteralNumberInteger, nil},\n-\t\t\t{\"`\", StringChar, Push(`char`)},\n-\t\t\tInclude(`strings`),\n-\t\t\t{`@?` + typeNamePattern, NameClass, nil},\n-\t\t\t{`(?<=` + namePattern + `)(<)(` + typeNamePattern + `)(>)`, ByGroups(Punctuation, NameClass, Punctuation), nil},\n-\t\t\t{`@?` + namePattern + `(?=\\()`, NameFunction, nil},\n-\t\t\t{`(?<=fn\\s+)@?` + namePattern + `(?=\\s*\\()`, NameFunction, nil},\n-\t\t\t{`(?<=(?:continue|break|goto)\\s+)\\w+`, NameLabel, nil},\n-\t\t\t{`\\b` + namePattern + `(?=:(?:$|\\s+for))`, NameLabel, nil},\n-\t\t\t{`[<>()\\[\\]{}.,;:]`, Punctuation, nil},\n-\t\t\t{`@?` + namePattern, NameVariable, nil},\n-\t\t},\n-\t\t\"strings\": {\n-\t\t\t{`(c)?(\")`, ByGroups(StringAffix, StringDouble), Push(`string-double`)},\n-\t\t\t{`(c)?(')`, ByGroups(StringAffix, StringSingle), Push(`string-single`)},\n-\t\t\t{`(r)(\"[^\"]+\")`, ByGroups(StringAffix, String), nil},\n-\t\t\t{`(r)('[^']+')`, ByGroups(StringAffix, String), nil},\n-\t\t},\n-\t\t\"string-double\": {\n-\t\t\t{`\"`, StringDouble, Pop(1)},\n-\t\t\tInclude(`char-escape`),\n-\t\t\t{`(\\$)((?!\\\\){)`, ByGroups(Operator, Punctuation), Push(`string-curly-interpolation`)},\n-\t\t\t{`\\$`, Operator, Push(`string-interpolation`)},\n-\t\t\t{`[^\"]+?`, StringDouble, nil},\n-\t\t},\n-\t\t\"string-single\": {\n-\t\t\t{`'`, StringSingle, Pop(1)},\n-\t\t\tInclude(`char-escape`),\n-\t\t\t{`(\\$)((?!\\\\){)`, ByGroups(Operator, Punctuation), Push(`string-curly-interpolation`)},\n-\t\t\t{`\\$`, Operator, Push(`string-interpolation`)},\n-\t\t\t{`[^']+?`, StringSingle, nil},\n-\t\t},\n-\t\t\"char\": {\n-\t\t\t{\"`\", StringChar, Pop(1)},\n-\t\t\tInclude(`char-escape`),\n-\t\t\t{`[^\\\\]`, StringChar, nil},\n-\t\t},\n-\t\t\"char-escape\": {\n-\t\t\t{\"\\\\\\\\[`'\\\"\\\\\\\\abfnrtv$]|\\\\\\\\x[0-9a-fA-F]{2}|\\\\\\\\[0-7]{1,3}|\\\\\\\\u[0-9a-fA-F]{4}|\\\\\\\\U[0-9a-fA-F]{8}\", StringEscape, nil},\n-\t\t},\n-\t\t\"string-doc\": {\n-\t\t\t{`(// *)(#+ [^\\n]+)(\\n)`, ByGroups(StringDoc, GenericHeading, Text), nil},\n-\t\t\t{`// *([=_*~-])\\1{2,}\\n`, StringDelimiter, nil},\n-\t\t\t{`//[^\\n]*\\n`, StringDoc, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"string-interpolation\": {\n-\t\t\t{`(\\.)?(@)?(?:(` + namePattern + `)(\\()([^)]*)(\\))|(` + namePattern + `))`, ByGroups(Punctuation, Operator, NameFunction, Punctuation, UsingSelf(`root`), Punctuation, NameVariable), nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"string-curly-interpolation\": {\n-\t\t\t{`}`, Punctuation, Pop(1)},\n-\t\t\tInclude(`strings`),\n-\t\t\t{`(:)( *?)([ 0'#+-])?(?:(\\.)?([0-9]+))?([fFgeEGxXobsd])?`, ByGroups(Punctuation, Text, Operator, Punctuation, Number, StringAffix), nil},\n-\t\t\t{`[^}\"':]+`, UsingSelf(`root`), nil},\n-\t\t},\n-\t\t\"attribute\": {\n-\t\t\t{`\\]`, Punctuation, Pop(1)},\n-\t\t\t{`'`, Punctuation, Push(`string-single`)},\n-\t\t\t{`\"`, Punctuation, Push(`string-double`)},\n-\t\t\t{`[;:]`, Punctuation, nil},\n-\t\t\t{`(?<=\\[)if\\b`, Keyword, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(?<=: *)\\w+`, String, nil},\n-\t\t\t{namePattern, NameAttribute, nil},\n-\t\t},\n-\t}\n-}\n-\n-// V shell lexer.\n-var VSH = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"V shell\",\n-\t\tAliases:   []string{\"vsh\", \"vshell\"},\n-\t\tFilenames: []string{\"*.vsh\"},\n-\t\tMimeTypes: []string{\"text/x-vsh\"},\n-\t\tEnsureNL:  true,\n-\t},\n-\tvshRules,\n-).SetAnalyser(func(text string) float32 {\n-\tfirstLine := strings.Split(text, \"\\n\")[0]\n-\tif strings.Contains(firstLine, \"#!/usr/bin/env\") && strings.Contains(firstLine, \"v run\") {\n-\t\treturn 1.0\n-\t}\n-\tif strings.Contains(firstLine, \"#!/\") && strings.Contains(firstLine, \"/v run\") {\n-\t\treturn 1.0\n-\t}\n-\treturn 0.0\n-}))\n-\n-func vshRules() Rules {\n-\tvshRules := vRules()\n-\tvshRoot := []Rule{\n-\t\t{`^#![^\\n]*\\n`, CommentHashbang, nil},\n-\t\t{Words(`\\b`, `\\b`, `args`, `max_path_len`, `wd_at_startup`, `sys_write`, `sys_open`, `sys_close`, `sys_mkdir`, `sys_creat`, `path_separator`, `path_delimiter`, `s_ifmt`, `s_ifdir`, `s_iflnk`, `s_isuid`, `s_isgid`, `s_isvtx`, `s_irusr`, `s_iwusr`, `s_ixusr`, `s_irgrp`, `s_iwgrp`, `s_ixgrp`, `s_iroth`, `s_iwoth`, `s_ixoth`), NameConstant, nil},\n-\t\t{Words(`\\b`, `\\b`, `ProcessState`, `SeekMode`, `Signal`, `Command`, `ExecutableNotFoundError`, `File`, `FileNotOpenedError`, `Process`, `Result`, `SizeOfTypeIs0Error`, `Uname`), NameBuiltin, nil},\n-\t\t{Words(`\\b`, `(?=\\()`, `abs_path`, `args_after`, `args_before`, `base`, `cache_dir`, `chdir`, `chmod`, `chown`, `config_dir`, `cp`, `cp_all`, `create`, `debugger_present`, `dir`, `environ`, `executable`, `execute`, `execute_or_exit`, `execute_or_panic`, `execve`, `execvp`, `existing_path`, `exists`, `exists_in_system_path`, `expand_tilde_to_home`, `fd_close`, `fd_read`, `fd_slurp`, `fd_write`, `file_ext`, `file_last_mod_unix`, `file_name`, `file_size`, `fileno`, `find_abs_path_of_executable`, `flush`, `fork`, `get_error_msg`, `get_line`, `get_lines`, `get_lines_joined`, `get_raw_line`, `get_raw_lines_joined`, `get_raw_stdin`, `getegid`, `getenv`, `getenv_opt`, `geteuid`, `getgid`, `getpid`, `getppid`, `getuid`, `getwd`, `glob`, `home_dir`, `hostname`, `inode`, `input`, `input_opt`, `is_abs_path`, `is_atty`, `is_dir`, `is_dir_empty`, `is_executable`, `is_file`, `is_link`, `is_readable`, `is_writable`, `is_writable_folder`, `join_path`, `join_path_single`, `last_error`, `link`, `log`, `loginname`, `ls`, `mkdir`, `mkdir_all`, `mv`, `mv_by_cp`, `new_process`, `norm_path`, `open`, `open_append`, `open_file`, `open_uri`, `posix_get_error_msg`, `posix_set_permission_bit`, `quoted_path`, `read_bytes`, `read_file`, `read_file_array`, `read_lines`, `real_path`, `resource_abs_path`, `rm`, `rmdir`, `rmdir_all`, `setenv`, `sigint_to_signal_name`, `signal_opt`, `stderr`, `stdin`, `stdout`, `symlink`, `system`, `temp_dir`, `truncate`, `uname`, `unsetenv`, `user_os`, `utime`, `vfopen`, `vmodules_dir`, `vmodules_paths`, `wait`, `walk`, `walk_ext`, `walk_with_context`, `write_file`, `write_file_array`, `bitmask`, `close`, `read_line`, `start`, `msg`, `read`, `read_bytes_at`, `read_bytes_into`, `read_bytes_into_newline`, `read_from`, `read_into_ptr`, `read_raw`, `read_raw_at`, `read_struct`, `read_struct_at`, `seek`, `tell`, `write`, `write_raw`, `write_raw_at`, `write_string`, `write_struct`, `write_struct_at`, `write_to`, `writeln`, `is_alive`, `run`, `set_args`, `set_environment`, `set_redirect_stdio`, `signal_continue`, `signal_kill`, `signal_pgkill`, `signal_stop`, `stderr_read`, `stderr_slurp`, `stdin_write`, `stdout_read`, `stdout_slurp`), NameBuiltin, nil},\n-\t}\n-\n-\tvshRules[`root`] = append(vshRoot, vshRules[`root`]...)\n-\n-\treturn vshRules\n-}"
    },
    {
      "sha": "b0059ea0eb2a3ca32a96ff6321009cc6dc623085",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/vim.go",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fvim.go",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fvim.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fvim.go?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,39 +0,0 @@\n-package lexers\n-\n-import (\n-\t. \"github.com/alecthomas/chroma/v2\" // nolint\n-)\n-\n-// Viml lexer.\n-var Viml = Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"VimL\",\n-\t\tAliases:   []string{\"vim\"},\n-\t\tFilenames: []string{\"*.vim\", \".vimrc\", \".exrc\", \".gvimrc\", \"_vimrc\", \"_exrc\", \"_gvimrc\", \"vimrc\", \"gvimrc\"},\n-\t\tMimeTypes: []string{\"text/x-vim\"},\n-\t},\n-\tvimlRules,\n-))\n-\n-func vimlRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^([ \\t:]*)(py(?:t(?:h(?:o(?:n)?)?)?)?)([ \\t]*)(<<)([ \\t]*)(.*)((?:\\n|.)*)(\\6)`, ByGroups(UsingSelf(\"root\"), Keyword, Text, Operator, Text, Text, Using(\"Python\"), Text), nil},\n-\t\t\t{`^([ \\t:]*)(py(?:t(?:h(?:o(?:n)?)?)?)?)([ \\t])(.*)`, ByGroups(UsingSelf(\"root\"), Keyword, Text, Using(\"Python\")), nil},\n-\t\t\t{`^\\s*\".*`, Comment, nil},\n-\t\t\t{`[ \\t]+`, Text, nil},\n-\t\t\t{`/(\\\\\\\\|\\\\/|[^\\n/])*/`, LiteralStringRegex, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\\n\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(''|[^\\n'])*'`, LiteralStringSingle, nil},\n-\t\t\t{`(?<=\\s)\"[^\\-:.%#=*].*`, Comment, nil},\n-\t\t\t{`-?\\d+`, LiteralNumber, nil},\n-\t\t\t{`#[0-9a-f]{6}`, LiteralNumberHex, nil},\n-\t\t\t{`^:`, Punctuation, nil},\n-\t\t\t{`[()<>+=!|,~-]`, Punctuation, nil},\n-\t\t\t{`\\b(let|if|else|endif|elseif|fun|function|endfunction)\\b`, Keyword, nil},\n-\t\t\t{`\\b(NONE|bold|italic|underline|dark|light)\\b`, NameBuiltin, nil},\n-\t\t\t{`\\b\\w+\\b`, NameOther, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "e80ad97a52db878dc1c8755a3a63204982f7a56f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/mutators.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fmutators.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fmutators.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fmutators.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -69,7 +69,7 @@ func (m *multiMutator) MarshalXML(e *xml.Encoder, start xml.StartElement) error\n \treturn e.EncodeToken(xml.EndElement{Name: name})\n }\n \n-func (m *multiMutator) MutatorKind() string { return \"multiple\" }\n+func (m *multiMutator) MutatorKind() string { return \"mutators\" }\n \n func (m *multiMutator) Mutate(state *LexerState) error {\n \tfor _, modifier := range m.Mutators {"
    },
    {
      "sha": "0dcb077feb0a5322685f184d421af0ae8d010601",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/regexp.go",
      "status": "modified",
      "additions": 10,
      "deletions": 7,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fregexp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fregexp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fregexp.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -76,8 +76,8 @@ func (r Rules) Merge(rules Rules) Rules {\n }\n \n // MustNewLexer creates a new Lexer with deferred rules generation or panics.\n-func MustNewLexer(config *Config, rulesFunc func() Rules) *RegexLexer {\n-\tlexer, err := NewLexer(config, rulesFunc)\n+func MustNewLexer(config *Config, rules func() Rules) *RegexLexer {\n+\tlexer, err := NewLexer(config, rules)\n \tif err != nil {\n \t\tpanic(err)\n \t}\n@@ -298,11 +298,12 @@ func (r *RegexLexer) SetAnalyser(analyser func(text string) float32) Lexer {\n \treturn r\n }\n \n-func (r *RegexLexer) AnalyseText(text string) float32 { // nolint\n+// AnalyseText scores how likely a fragment of text is to match this lexer, between 0.0 and 1.0.\n+func (r *RegexLexer) AnalyseText(text string) float32 {\n \tif r.analyser != nil {\n \t\treturn r.analyser(text)\n \t}\n-\treturn 0.0\n+\treturn 0\n }\n \n // SetConfig replaces the Config for this Lexer.\n@@ -311,7 +312,8 @@ func (r *RegexLexer) SetConfig(config *Config) *RegexLexer {\n \treturn r\n }\n \n-func (r *RegexLexer) Config() *Config { // nolint\n+// Config returns the Config for this Lexer.\n+func (r *RegexLexer) Config() *Config {\n \treturn r.config\n }\n \n@@ -330,7 +332,7 @@ func (r *RegexLexer) maybeCompile() (err error) {\n \t\t\t\t\tpattern = \"(?\" + rule.flags + \")\" + pattern\n \t\t\t\t}\n \t\t\t\tpattern = `\\G` + pattern\n-\t\t\t\trule.Regexp, err = regexp2.Compile(pattern, regexp2.RE2)\n+\t\t\t\trule.Regexp, err = regexp2.Compile(pattern, 0)\n \t\t\t\tif err != nil {\n \t\t\t\t\treturn fmt.Errorf(\"failed to compile rule %s.%d: %s\", state, i, err)\n \t\t\t\t}\n@@ -406,7 +408,8 @@ func (r *RegexLexer) needRules() error {\n \treturn err\n }\n \n-func (r *RegexLexer) Tokenise(options *TokeniseOptions, text string) (Iterator, error) { // nolint\n+// Tokenise text using lexer, returning an iterator.\n+func (r *RegexLexer) Tokenise(options *TokeniseOptions, text string) (Iterator, error) {\n \terr := r.needRules()\n \tif err != nil {\n \t\treturn nil, err"
    },
    {
      "sha": "4742e8c5abca893fd082b508424b444478822f22",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/registry.go",
      "status": "modified",
      "additions": 25,
      "deletions": 2,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fregistry.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fregistry.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fregistry.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -97,6 +97,8 @@ func (l *LexerRegistry) MatchMimeType(mimeType string) Lexer {\n }\n \n // Match returns the first lexer matching filename.\n+//\n+// Note that this iterates over all file patterns in all lexers, so is not fast.\n func (l *LexerRegistry) Match(filename string) Lexer {\n \tfilename = filepath.Base(filename)\n \tmatched := PrioritisedLexers{}\n@@ -172,16 +174,37 @@ func (l *LexerRegistry) Analyse(text string) Lexer {\n \treturn picked\n }\n \n-// Register a Lexer with the LexerRegistry.\n+// Register a Lexer with the LexerRegistry. If the lexer is already registered\n+// it will be replaced.\n func (l *LexerRegistry) Register(lexer Lexer) Lexer {\n \tlexer.SetRegistry(l)\n \tconfig := lexer.Config()\n+\n \tl.byName[config.Name] = lexer\n \tl.byName[strings.ToLower(config.Name)] = lexer\n+\n \tfor _, alias := range config.Aliases {\n \t\tl.byAlias[alias] = lexer\n \t\tl.byAlias[strings.ToLower(alias)] = lexer\n \t}\n-\tl.Lexers = append(l.Lexers, lexer)\n+\n+\tl.Lexers = add(l.Lexers, lexer)\n+\n \treturn lexer\n }\n+\n+// add adds a lexer to a slice of lexers if it doesn't already exist, or if found will replace it.\n+func add(lexers Lexers, lexer Lexer) Lexers {\n+\tfor i, val := range lexers {\n+\t\tif val == nil {\n+\t\t\tcontinue\n+\t\t}\n+\n+\t\tif val.Config().Name == lexer.Config().Name {\n+\t\t\tlexers[i] = lexer\n+\t\t\treturn lexers\n+\t\t}\n+\t}\n+\n+\treturn append(lexers, lexer)\n+}"
    },
    {
      "sha": "897864b852f50776a7de7bdc9523ef3e201413a4",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/renovate.json5",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Frenovate.json5",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Frenovate.json5",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Frenovate.json5?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,11 @@\n+{\n+  $schema: \"https://docs.renovatebot.com/renovate-schema.json\",\n+  extends: [\n+    \"config:recommended\",\n+    \":semanticCommits\",\n+    \":semanticCommitTypeAll(chore)\",\n+    \":semanticCommitScope(deps)\",\n+    \"group:allNonMajor\",\n+    \"schedule:earlyMondays\", // Run once a week.\n+  ],\n+}"
    },
    {
      "sha": "645a5faabcc911b9162be574490d2ce6e0249a15",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/serialise.go",
      "status": "modified",
      "additions": 49,
      "deletions": 2,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fserialise.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fserialise.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fserialise.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -7,10 +7,13 @@ import (\n \t\"fmt\"\n \t\"io\"\n \t\"io/fs\"\n+\t\"math\"\n \t\"path/filepath\"\n \t\"reflect\"\n \t\"regexp\"\n \t\"strings\"\n+\n+\t\"github.com/dlclark/regexp2\"\n )\n \n // Serialisation of Chroma rules to XML. The format is:\n@@ -107,7 +110,7 @@ func fastUnmarshalConfig(from fs.FS, path string) (*Config, error) {\n \t\t\tvar config Config\n \t\t\terr = dec.DecodeElement(&config, &se)\n \t\t\tif err != nil {\n-\t\t\t\tpanic(err)\n+\t\t\t\treturn nil, fmt.Errorf(\"%s: %w\", path, err)\n \t\t\t}\n \t\t\treturn &config, nil\n \t\t}\n@@ -129,14 +132,58 @@ func NewXMLLexer(from fs.FS, path string) (*RegexLexer, error) {\n \tif err != nil {\n \t\treturn nil, err\n \t}\n+\n \tfor _, glob := range append(config.Filenames, config.AliasFilenames...) {\n \t\t_, err := filepath.Match(glob, \"\")\n \t\tif err != nil {\n \t\t\treturn nil, fmt.Errorf(\"%s: %q is not a valid glob: %w\", config.Name, glob, err)\n \t\t}\n \t}\n+\n+\tvar analyserFn func(string) float32\n+\n+\tif config.Analyse != nil {\n+\t\ttype regexAnalyse struct {\n+\t\t\tre    *regexp2.Regexp\n+\t\t\tscore float32\n+\t\t}\n+\n+\t\tregexAnalysers := make([]regexAnalyse, 0, len(config.Analyse.Regexes))\n+\n+\t\tfor _, ra := range config.Analyse.Regexes {\n+\t\t\tre, err := regexp2.Compile(ra.Pattern, regexp2.None)\n+\t\t\tif err != nil {\n+\t\t\t\treturn nil, fmt.Errorf(\"%s: %q is not a valid analyser regex: %w\", config.Name, ra.Pattern, err)\n+\t\t\t}\n+\n+\t\t\tregexAnalysers = append(regexAnalysers, regexAnalyse{re, ra.Score})\n+\t\t}\n+\n+\t\tanalyserFn = func(text string) float32 {\n+\t\t\tvar score float32\n+\n+\t\t\tfor _, ra := range regexAnalysers {\n+\t\t\t\tok, err := ra.re.MatchString(text)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn 0\n+\t\t\t\t}\n+\n+\t\t\t\tif ok && config.Analyse.First {\n+\t\t\t\t\treturn float32(math.Min(float64(ra.score), 1.0))\n+\t\t\t\t}\n+\n+\t\t\t\tif ok {\n+\t\t\t\t\tscore += ra.score\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\treturn float32(math.Min(float64(score), 1.0))\n+\t\t}\n+\t}\n+\n \treturn &RegexLexer{\n-\t\tconfig: config,\n+\t\tconfig:   config,\n+\t\tanalyser: analyserFn,\n \t\tfetchRulesFunc: func() (Rules, error) {\n \t\t\tvar lexer struct {\n \t\t\t\tConfig"
    },
    {
      "sha": "08eb42a630326e5f8aa6dc9576851d0ad881dc28",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/catppuccin-frappe.xml",
      "status": "modified",
      "additions": 71,
      "deletions": 34,
      "changes": 105,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-frappe.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-frappe.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-frappe.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,46 +1,83 @@\n <style name=\"catppuccin-frappe\">\n+  <entry type=\"Background\" style=\"bg:#303446 #c6d0f5\"/>\n+  <entry type=\"CodeLine\" style=\"#c6d0f5\"/>\n   <entry type=\"Error\" style=\"#e78284\"/>\n-  <entry type=\"Background\" style=\"#ef9f76 bg:#303446\"/>\n+  <entry type=\"Other\" style=\"#c6d0f5\"/>\n+  <entry type=\"LineTableTD\" style=\"\"/>\n+  <entry type=\"LineTable\" style=\"\"/>\n+  <entry type=\"LineHighlight\" style=\"#51576d\"/>\n+  <entry type=\"LineNumbersTable\" style=\"#838ba7\"/>\n+  <entry type=\"LineNumbers\" style=\"#838ba7\"/>\n   <entry type=\"Keyword\" style=\"#ca9ee6\"/>\n-  <entry type=\"KeywordConstant\" style=\"italic #ca9ee6\"/>\n-  <entry type=\"KeywordPseudo\" style=\"bold #ca9ee6\"/>\n-  <entry type=\"KeywordType\" style=\"#e5c890\"/>\n-  <entry type=\"Name\" style=\"#babbf1\"/>\n-  <entry type=\"NameAttribute\" style=\"#e5c890\"/>\n-  <entry type=\"NameBuiltin\" style=\"italic #c6d0f5\"/>\n+  <entry type=\"KeywordReserved\" style=\"#ca9ee6\"/>\n+  <entry type=\"KeywordPseudo\" style=\"#ca9ee6\"/>\n+  <entry type=\"KeywordConstant\" style=\"#ef9f76\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"#e78284\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#81c8be\"/>\n+  <entry type=\"KeywordType\" style=\"#e78284\"/>\n+  <entry type=\"Name\" style=\"#c6d0f5\"/>\n   <entry type=\"NameClass\" style=\"#e5c890\"/>\n   <entry type=\"NameConstant\" style=\"#e5c890\"/>\n-  <entry type=\"NameDecorator\" style=\"#f4b8e4\"/>\n-  <entry type=\"NameEntity\" style=\"#f4b8e4\"/>\n-  <entry type=\"NameException\" style=\"#ea999c\"/>\n-  <entry type=\"NameFunction\" style=\"#99d1db\"/>\n-  <entry type=\"NameLabel\" style=\"#e5c890\"/>\n-  <entry type=\"NameNamespace\" style=\"#e5c890\"/>\n-  <entry type=\"NameOther\" style=\"#ef9f76\"/>\n+  <entry type=\"NameDecorator\" style=\"bold #8caaee\"/>\n+  <entry type=\"NameEntity\" style=\"#81c8be\"/>\n+  <entry type=\"NameException\" style=\"#ef9f76\"/>\n+  <entry type=\"NameFunction\" style=\"#8caaee\"/>\n+  <entry type=\"NameFunctionMagic\" style=\"#8caaee\"/>\n+  <entry type=\"NameLabel\" style=\"#99d1db\"/>\n+  <entry type=\"NameNamespace\" style=\"#ef9f76\"/>\n+  <entry type=\"NameProperty\" style=\"#ef9f76\"/>\n   <entry type=\"NameTag\" style=\"#ca9ee6\"/>\n-  <entry type=\"NameVariable\" style=\"#ef9f76\"/>\n+  <entry type=\"NameVariable\" style=\"#f2d5cf\"/>\n+  <entry type=\"NameVariableClass\" style=\"#f2d5cf\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"#f2d5cf\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#f2d5cf\"/>\n+  <entry type=\"NameVariableMagic\" style=\"#f2d5cf\"/>\n+  <entry type=\"NameAttribute\" style=\"#8caaee\"/>\n+  <entry type=\"NameBuiltin\" style=\"#99d1db\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#99d1db\"/>\n+  <entry type=\"NameOther\" style=\"#c6d0f5\"/>\n+  <entry type=\"Literal\" style=\"#c6d0f5\"/>\n+  <entry type=\"LiteralDate\" style=\"#c6d0f5\"/>\n   <entry type=\"LiteralString\" style=\"#a6d189\"/>\n-  <entry type=\"LiteralStringDoc\" style=\"#a6d189\"/>\n-  <entry type=\"LiteralStringEscape\" style=\"#8caaee\"/>\n-  <entry type=\"LiteralStringInterpol\" style=\"#a6d189\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#a6d189\"/>\n+  <entry type=\"LiteralStringSingle\" style=\"#a6d189\"/>\n+  <entry type=\"LiteralStringDouble\" style=\"#a6d189\"/>\n+  <entry type=\"LiteralStringBacktick\" style=\"#a6d189\"/>\n   <entry type=\"LiteralStringOther\" style=\"#a6d189\"/>\n-  <entry type=\"LiteralStringRegex\" style=\"#8caaee\"/>\n   <entry type=\"LiteralStringSymbol\" style=\"#a6d189\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#a6d189\"/>\n+  <entry type=\"LiteralStringAffix\" style=\"#e78284\"/>\n+  <entry type=\"LiteralStringDelimiter\" style=\"#8caaee\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#8caaee\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#81c8be\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#737994\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#737994\"/>\n   <entry type=\"LiteralNumber\" style=\"#ef9f76\"/>\n-  <entry type=\"Operator\" style=\"#99d1db\"/>\n+  <entry type=\"LiteralNumberBin\" style=\"#ef9f76\"/>\n+  <entry type=\"LiteralNumberHex\" style=\"#ef9f76\"/>\n+  <entry type=\"LiteralNumberInteger\" style=\"#ef9f76\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"#ef9f76\"/>\n+  <entry type=\"LiteralNumberIntegerLong\" style=\"#ef9f76\"/>\n+  <entry type=\"LiteralNumberOct\" style=\"#ef9f76\"/>\n+  <entry type=\"Operator\" style=\"bold #99d1db\"/>\n   <entry type=\"OperatorWord\" style=\"bold #99d1db\"/>\n-  <entry type=\"Punctuation\" style=\"#c6d0f5\"/>\n-  <entry type=\"Comment\" style=\"italic #626880\"/>\n-  <entry type=\"CommentPreproc\" style=\"#8caaee\"/>\n-  <entry type=\"GenericDeleted\" style=\"#ea999c\"/>\n-  <entry type=\"GenericEmph\" style=\"italic\"/>\n-  <entry type=\"GenericError\" style=\"#ea999c\"/>\n-  <entry type=\"GenericHeading\" style=\"bold #99d1db\"/>\n-  <entry type=\"GenericInserted\" style=\"#a6d189\"/>\n-  <entry type=\"GenericOutput\" style=\"#ef9f76\"/>\n-  <entry type=\"GenericPrompt\" style=\"bold #737994\"/>\n-  <entry type=\"GenericStrong\" style=\"bold\"/>\n-  <entry type=\"GenericSubheading\" style=\"bold #99d1db\"/>\n-  <entry type=\"GenericTraceback\" style=\"#ea999c\"/>\n-  <entry type=\"TextWhitespace\" style=\"#414559\"/>\n+  <entry type=\"Comment\" style=\"italic #737994\"/>\n+  <entry type=\"CommentSingle\" style=\"italic #737994\"/>\n+  <entry type=\"CommentMultiline\" style=\"italic #737994\"/>\n+  <entry type=\"CommentSpecial\" style=\"italic #737994\"/>\n+  <entry type=\"CommentHashbang\" style=\"italic #737994\"/>\n+  <entry type=\"CommentPreproc\" style=\"italic #737994\"/>\n+  <entry type=\"CommentPreprocFile\" style=\"bold #737994\"/>\n+  <entry type=\"Generic\" style=\"#c6d0f5\"/>\n+  <entry type=\"GenericInserted\" style=\"bg:#414559 #a6d189\"/>\n+  <entry type=\"GenericDeleted\" style=\"#e78284 bg:#414559\"/>\n+  <entry type=\"GenericEmph\" style=\"italic #c6d0f5\"/>\n+  <entry type=\"GenericStrong\" style=\"bold #c6d0f5\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline #c6d0f5\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #ef9f76\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #ef9f76\"/>\n+  <entry type=\"GenericOutput\" style=\"#c6d0f5\"/>\n+  <entry type=\"GenericPrompt\" style=\"#c6d0f5\"/>\n+  <entry type=\"GenericError\" style=\"#e78284\"/>\n+  <entry type=\"GenericTraceback\" style=\"#e78284\"/>\n </style>\n\\ No newline at end of file"
    },
    {
      "sha": "3d510743c06e3e67a84e0bb9e4beca15790ae512",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/catppuccin-latte.xml",
      "status": "modified",
      "additions": 71,
      "deletions": 34,
      "changes": 105,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-latte.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-latte.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-latte.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,46 +1,83 @@\n <style name=\"catppuccin-latte\">\n+  <entry type=\"Background\" style=\"bg:#eff1f5 #4c4f69\"/>\n+  <entry type=\"CodeLine\" style=\"#4c4f69\"/>\n   <entry type=\"Error\" style=\"#d20f39\"/>\n-  <entry type=\"Background\" style=\"#fe640b bg:#eff1f5\"/>\n+  <entry type=\"Other\" style=\"#4c4f69\"/>\n+  <entry type=\"LineTableTD\" style=\"\"/>\n+  <entry type=\"LineTable\" style=\"\"/>\n+  <entry type=\"LineHighlight\" style=\"#bcc0cc\"/>\n+  <entry type=\"LineNumbersTable\" style=\"#8c8fa1\"/>\n+  <entry type=\"LineNumbers\" style=\"#8c8fa1\"/>\n   <entry type=\"Keyword\" style=\"#8839ef\"/>\n-  <entry type=\"KeywordConstant\" style=\"italic #8839ef\"/>\n-  <entry type=\"KeywordPseudo\" style=\"bold #8839ef\"/>\n-  <entry type=\"KeywordType\" style=\"#df8e1d\"/>\n-  <entry type=\"Name\" style=\"#7287fd\"/>\n-  <entry type=\"NameAttribute\" style=\"#df8e1d\"/>\n-  <entry type=\"NameBuiltin\" style=\"italic #fe640b\"/>\n+  <entry type=\"KeywordReserved\" style=\"#8839ef\"/>\n+  <entry type=\"KeywordPseudo\" style=\"#8839ef\"/>\n+  <entry type=\"KeywordConstant\" style=\"#fe640b\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"#d20f39\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#179299\"/>\n+  <entry type=\"KeywordType\" style=\"#d20f39\"/>\n+  <entry type=\"Name\" style=\"#4c4f69\"/>\n   <entry type=\"NameClass\" style=\"#df8e1d\"/>\n   <entry type=\"NameConstant\" style=\"#df8e1d\"/>\n-  <entry type=\"NameDecorator\" style=\"#ea76cb\"/>\n-  <entry type=\"NameEntity\" style=\"#ea76cb\"/>\n-  <entry type=\"NameException\" style=\"#e64553\"/>\n-  <entry type=\"NameFunction\" style=\"#04a5e5\"/>\n-  <entry type=\"NameLabel\" style=\"#df8e1d\"/>\n-  <entry type=\"NameNamespace\" style=\"#df8e1d\"/>\n-  <entry type=\"NameOther\" style=\"#fe640b\"/>\n+  <entry type=\"NameDecorator\" style=\"bold #1e66f5\"/>\n+  <entry type=\"NameEntity\" style=\"#179299\"/>\n+  <entry type=\"NameException\" style=\"#fe640b\"/>\n+  <entry type=\"NameFunction\" style=\"#1e66f5\"/>\n+  <entry type=\"NameFunctionMagic\" style=\"#1e66f5\"/>\n+  <entry type=\"NameLabel\" style=\"#04a5e5\"/>\n+  <entry type=\"NameNamespace\" style=\"#fe640b\"/>\n+  <entry type=\"NameProperty\" style=\"#fe640b\"/>\n   <entry type=\"NameTag\" style=\"#8839ef\"/>\n-  <entry type=\"NameVariable\" style=\"#fe640b\"/>\n+  <entry type=\"NameVariable\" style=\"#dc8a78\"/>\n+  <entry type=\"NameVariableClass\" style=\"#dc8a78\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"#dc8a78\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#dc8a78\"/>\n+  <entry type=\"NameVariableMagic\" style=\"#dc8a78\"/>\n+  <entry type=\"NameAttribute\" style=\"#1e66f5\"/>\n+  <entry type=\"NameBuiltin\" style=\"#04a5e5\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#04a5e5\"/>\n+  <entry type=\"NameOther\" style=\"#4c4f69\"/>\n+  <entry type=\"Literal\" style=\"#4c4f69\"/>\n+  <entry type=\"LiteralDate\" style=\"#4c4f69\"/>\n   <entry type=\"LiteralString\" style=\"#40a02b\"/>\n-  <entry type=\"LiteralStringDoc\" style=\"#40a02b\"/>\n-  <entry type=\"LiteralStringEscape\" style=\"#1e66f5\"/>\n-  <entry type=\"LiteralStringInterpol\" style=\"#40a02b\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#40a02b\"/>\n+  <entry type=\"LiteralStringSingle\" style=\"#40a02b\"/>\n+  <entry type=\"LiteralStringDouble\" style=\"#40a02b\"/>\n+  <entry type=\"LiteralStringBacktick\" style=\"#40a02b\"/>\n   <entry type=\"LiteralStringOther\" style=\"#40a02b\"/>\n-  <entry type=\"LiteralStringRegex\" style=\"#1e66f5\"/>\n   <entry type=\"LiteralStringSymbol\" style=\"#40a02b\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#40a02b\"/>\n+  <entry type=\"LiteralStringAffix\" style=\"#d20f39\"/>\n+  <entry type=\"LiteralStringDelimiter\" style=\"#1e66f5\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#1e66f5\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#179299\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#9ca0b0\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#9ca0b0\"/>\n   <entry type=\"LiteralNumber\" style=\"#fe640b\"/>\n-  <entry type=\"Operator\" style=\"#04a5e5\"/>\n+  <entry type=\"LiteralNumberBin\" style=\"#fe640b\"/>\n+  <entry type=\"LiteralNumberHex\" style=\"#fe640b\"/>\n+  <entry type=\"LiteralNumberInteger\" style=\"#fe640b\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"#fe640b\"/>\n+  <entry type=\"LiteralNumberIntegerLong\" style=\"#fe640b\"/>\n+  <entry type=\"LiteralNumberOct\" style=\"#fe640b\"/>\n+  <entry type=\"Operator\" style=\"bold #04a5e5\"/>\n   <entry type=\"OperatorWord\" style=\"bold #04a5e5\"/>\n-  <entry type=\"Punctuation\" style=\"#4c4f69\"/>\n-  <entry type=\"Comment\" style=\"italic #acb0be\"/>\n-  <entry type=\"CommentPreproc\" style=\"#1e66f5\"/>\n-  <entry type=\"GenericDeleted\" style=\"#e64553\"/>\n-  <entry type=\"GenericEmph\" style=\"italic\"/>\n-  <entry type=\"GenericError\" style=\"#e64553\"/>\n-  <entry type=\"GenericHeading\" style=\"bold #04a5e5\"/>\n-  <entry type=\"GenericInserted\" style=\"#40a02b\"/>\n-  <entry type=\"GenericOutput\" style=\"#fe640b\"/>\n-  <entry type=\"GenericPrompt\" style=\"bold #9ca0b0\"/>\n-  <entry type=\"GenericStrong\" style=\"bold\"/>\n-  <entry type=\"GenericSubheading\" style=\"bold #04a5e5\"/>\n-  <entry type=\"GenericTraceback\" style=\"#e64553\"/>\n-  <entry type=\"TextWhitespace\" style=\"#ccd0da\"/>\n+  <entry type=\"Comment\" style=\"italic #9ca0b0\"/>\n+  <entry type=\"CommentSingle\" style=\"italic #9ca0b0\"/>\n+  <entry type=\"CommentMultiline\" style=\"italic #9ca0b0\"/>\n+  <entry type=\"CommentSpecial\" style=\"italic #9ca0b0\"/>\n+  <entry type=\"CommentHashbang\" style=\"italic #9ca0b0\"/>\n+  <entry type=\"CommentPreproc\" style=\"italic #9ca0b0\"/>\n+  <entry type=\"CommentPreprocFile\" style=\"bold #9ca0b0\"/>\n+  <entry type=\"Generic\" style=\"#4c4f69\"/>\n+  <entry type=\"GenericInserted\" style=\"bg:#ccd0da #40a02b\"/>\n+  <entry type=\"GenericDeleted\" style=\"#d20f39 bg:#ccd0da\"/>\n+  <entry type=\"GenericEmph\" style=\"italic #4c4f69\"/>\n+  <entry type=\"GenericStrong\" style=\"bold #4c4f69\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline #4c4f69\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #fe640b\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #fe640b\"/>\n+  <entry type=\"GenericOutput\" style=\"#4c4f69\"/>\n+  <entry type=\"GenericPrompt\" style=\"#4c4f69\"/>\n+  <entry type=\"GenericError\" style=\"#d20f39\"/>\n+  <entry type=\"GenericTraceback\" style=\"#d20f39\"/>\n </style>\n\\ No newline at end of file"
    },
    {
      "sha": "5d96f59966cb9d7dffcd3ab85f83b429a30b99e1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/catppuccin-macchiato.xml",
      "status": "modified",
      "additions": 71,
      "deletions": 34,
      "changes": 105,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-macchiato.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-macchiato.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-macchiato.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,46 +1,83 @@\n <style name=\"catppuccin-macchiato\">\n+  <entry type=\"Background\" style=\"bg:#24273a #cad3f5\"/>\n+  <entry type=\"CodeLine\" style=\"#cad3f5\"/>\n   <entry type=\"Error\" style=\"#ed8796\"/>\n-  <entry type=\"Background\" style=\"#f5a97f bg:#24273a\"/>\n+  <entry type=\"Other\" style=\"#cad3f5\"/>\n+  <entry type=\"LineTableTD\" style=\"\"/>\n+  <entry type=\"LineTable\" style=\"\"/>\n+  <entry type=\"LineHighlight\" style=\"#494d64\"/>\n+  <entry type=\"LineNumbersTable\" style=\"#8087a2\"/>\n+  <entry type=\"LineNumbers\" style=\"#8087a2\"/>\n   <entry type=\"Keyword\" style=\"#c6a0f6\"/>\n-  <entry type=\"KeywordConstant\" style=\"italic #c6a0f6\"/>\n-  <entry type=\"KeywordPseudo\" style=\"bold #c6a0f6\"/>\n-  <entry type=\"KeywordType\" style=\"#eed49f\"/>\n-  <entry type=\"Name\" style=\"#b7bdf8\"/>\n-  <entry type=\"NameAttribute\" style=\"#eed49f\"/>\n-  <entry type=\"NameBuiltin\" style=\"italic #f5a97f\"/>\n+  <entry type=\"KeywordReserved\" style=\"#c6a0f6\"/>\n+  <entry type=\"KeywordPseudo\" style=\"#c6a0f6\"/>\n+  <entry type=\"KeywordConstant\" style=\"#f5a97f\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"#ed8796\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#8bd5ca\"/>\n+  <entry type=\"KeywordType\" style=\"#ed8796\"/>\n+  <entry type=\"Name\" style=\"#cad3f5\"/>\n   <entry type=\"NameClass\" style=\"#eed49f\"/>\n   <entry type=\"NameConstant\" style=\"#eed49f\"/>\n-  <entry type=\"NameDecorator\" style=\"#f5bde6\"/>\n-  <entry type=\"NameEntity\" style=\"#f5bde6\"/>\n-  <entry type=\"NameException\" style=\"#ee99a0\"/>\n-  <entry type=\"NameFunction\" style=\"#91d7e3\"/>\n-  <entry type=\"NameLabel\" style=\"#eed49f\"/>\n-  <entry type=\"NameNamespace\" style=\"#eed49f\"/>\n-  <entry type=\"NameOther\" style=\"#f5a97f\"/>\n+  <entry type=\"NameDecorator\" style=\"bold #8aadf4\"/>\n+  <entry type=\"NameEntity\" style=\"#8bd5ca\"/>\n+  <entry type=\"NameException\" style=\"#f5a97f\"/>\n+  <entry type=\"NameFunction\" style=\"#8aadf4\"/>\n+  <entry type=\"NameFunctionMagic\" style=\"#8aadf4\"/>\n+  <entry type=\"NameLabel\" style=\"#91d7e3\"/>\n+  <entry type=\"NameNamespace\" style=\"#f5a97f\"/>\n+  <entry type=\"NameProperty\" style=\"#f5a97f\"/>\n   <entry type=\"NameTag\" style=\"#c6a0f6\"/>\n-  <entry type=\"NameVariable\" style=\"#f5a97f\"/>\n+  <entry type=\"NameVariable\" style=\"#f4dbd6\"/>\n+  <entry type=\"NameVariableClass\" style=\"#f4dbd6\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"#f4dbd6\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#f4dbd6\"/>\n+  <entry type=\"NameVariableMagic\" style=\"#f4dbd6\"/>\n+  <entry type=\"NameAttribute\" style=\"#8aadf4\"/>\n+  <entry type=\"NameBuiltin\" style=\"#91d7e3\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#91d7e3\"/>\n+  <entry type=\"NameOther\" style=\"#cad3f5\"/>\n+  <entry type=\"Literal\" style=\"#cad3f5\"/>\n+  <entry type=\"LiteralDate\" style=\"#cad3f5\"/>\n   <entry type=\"LiteralString\" style=\"#a6da95\"/>\n-  <entry type=\"LiteralStringDoc\" style=\"#a6da95\"/>\n-  <entry type=\"LiteralStringEscape\" style=\"#8aadf4\"/>\n-  <entry type=\"LiteralStringInterpol\" style=\"#a6da95\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#a6da95\"/>\n+  <entry type=\"LiteralStringSingle\" style=\"#a6da95\"/>\n+  <entry type=\"LiteralStringDouble\" style=\"#a6da95\"/>\n+  <entry type=\"LiteralStringBacktick\" style=\"#a6da95\"/>\n   <entry type=\"LiteralStringOther\" style=\"#a6da95\"/>\n-  <entry type=\"LiteralStringRegex\" style=\"#8aadf4\"/>\n   <entry type=\"LiteralStringSymbol\" style=\"#a6da95\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#a6da95\"/>\n+  <entry type=\"LiteralStringAffix\" style=\"#ed8796\"/>\n+  <entry type=\"LiteralStringDelimiter\" style=\"#8aadf4\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#8aadf4\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#8bd5ca\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#6e738d\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#6e738d\"/>\n   <entry type=\"LiteralNumber\" style=\"#f5a97f\"/>\n-  <entry type=\"Operator\" style=\"#91d7e3\"/>\n+  <entry type=\"LiteralNumberBin\" style=\"#f5a97f\"/>\n+  <entry type=\"LiteralNumberHex\" style=\"#f5a97f\"/>\n+  <entry type=\"LiteralNumberInteger\" style=\"#f5a97f\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"#f5a97f\"/>\n+  <entry type=\"LiteralNumberIntegerLong\" style=\"#f5a97f\"/>\n+  <entry type=\"LiteralNumberOct\" style=\"#f5a97f\"/>\n+  <entry type=\"Operator\" style=\"bold #91d7e3\"/>\n   <entry type=\"OperatorWord\" style=\"bold #91d7e3\"/>\n-  <entry type=\"Punctuation\" style=\"#cad3f5\"/>\n-  <entry type=\"Comment\" style=\"italic #5b6078\"/>\n-  <entry type=\"CommentPreproc\" style=\"#8aadf4\"/>\n-  <entry type=\"GenericDeleted\" style=\"#ee99a0\"/>\n-  <entry type=\"GenericEmph\" style=\"italic\"/>\n-  <entry type=\"GenericError\" style=\"#ee99a0\"/>\n-  <entry type=\"GenericHeading\" style=\"bold #91d7e3\"/>\n-  <entry type=\"GenericInserted\" style=\"#a6da95\"/>\n-  <entry type=\"GenericOutput\" style=\"#f5a97f\"/>\n-  <entry type=\"GenericPrompt\" style=\"bold #6e738d\"/>\n-  <entry type=\"GenericStrong\" style=\"bold\"/>\n-  <entry type=\"GenericSubheading\" style=\"bold #91d7e3\"/>\n-  <entry type=\"GenericTraceback\" style=\"#ee99a0\"/>\n-  <entry type=\"TextWhitespace\" style=\"#363a4f\"/>\n+  <entry type=\"Comment\" style=\"italic #6e738d\"/>\n+  <entry type=\"CommentSingle\" style=\"italic #6e738d\"/>\n+  <entry type=\"CommentMultiline\" style=\"italic #6e738d\"/>\n+  <entry type=\"CommentSpecial\" style=\"italic #6e738d\"/>\n+  <entry type=\"CommentHashbang\" style=\"italic #6e738d\"/>\n+  <entry type=\"CommentPreproc\" style=\"italic #6e738d\"/>\n+  <entry type=\"CommentPreprocFile\" style=\"bold #6e738d\"/>\n+  <entry type=\"Generic\" style=\"#cad3f5\"/>\n+  <entry type=\"GenericInserted\" style=\"bg:#363a4f #a6da95\"/>\n+  <entry type=\"GenericDeleted\" style=\"#ed8796 bg:#363a4f\"/>\n+  <entry type=\"GenericEmph\" style=\"italic #cad3f5\"/>\n+  <entry type=\"GenericStrong\" style=\"bold #cad3f5\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline #cad3f5\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #f5a97f\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #f5a97f\"/>\n+  <entry type=\"GenericOutput\" style=\"#cad3f5\"/>\n+  <entry type=\"GenericPrompt\" style=\"#cad3f5\"/>\n+  <entry type=\"GenericError\" style=\"#ed8796\"/>\n+  <entry type=\"GenericTraceback\" style=\"#ed8796\"/>\n </style>\n\\ No newline at end of file"
    },
    {
      "sha": "e17866dd2c548df20779f62dd3670eef17ab72e6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/catppuccin-mocha.xml",
      "status": "modified",
      "additions": 71,
      "deletions": 34,
      "changes": 105,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-mocha.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-mocha.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-mocha.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,46 +1,83 @@\n <style name=\"catppuccin-mocha\">\n+  <entry type=\"Background\" style=\"bg:#1e1e2e #cdd6f4\"/>\n+  <entry type=\"CodeLine\" style=\"#cdd6f4\"/>\n   <entry type=\"Error\" style=\"#f38ba8\"/>\n-  <entry type=\"Background\" style=\"#fab387 bg:#1e1e2e\"/>\n+  <entry type=\"Other\" style=\"#cdd6f4\"/>\n+  <entry type=\"LineTableTD\" style=\"\"/>\n+  <entry type=\"LineTable\" style=\"\"/>\n+  <entry type=\"LineHighlight\" style=\"#45475a\"/>\n+  <entry type=\"LineNumbersTable\" style=\"#7f849c\"/>\n+  <entry type=\"LineNumbers\" style=\"#7f849c\"/>\n   <entry type=\"Keyword\" style=\"#cba6f7\"/>\n-  <entry type=\"KeywordConstant\" style=\"italic #cba6f7\"/>\n-  <entry type=\"KeywordPseudo\" style=\"bold #cba6f7\"/>\n-  <entry type=\"KeywordType\" style=\"#f9e2af\"/>\n-  <entry type=\"Name\" style=\"#b4befe\"/>\n-  <entry type=\"NameAttribute\" style=\"#f9e2af\"/>\n-  <entry type=\"NameBuiltin\" style=\"italic #fab387\"/>\n+  <entry type=\"KeywordReserved\" style=\"#cba6f7\"/>\n+  <entry type=\"KeywordPseudo\" style=\"#cba6f7\"/>\n+  <entry type=\"KeywordConstant\" style=\"#fab387\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"#f38ba8\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#94e2d5\"/>\n+  <entry type=\"KeywordType\" style=\"#f38ba8\"/>\n+  <entry type=\"Name\" style=\"#cdd6f4\"/>\n   <entry type=\"NameClass\" style=\"#f9e2af\"/>\n   <entry type=\"NameConstant\" style=\"#f9e2af\"/>\n-  <entry type=\"NameDecorator\" style=\"#f5c2e7\"/>\n-  <entry type=\"NameEntity\" style=\"#f5c2e7\"/>\n-  <entry type=\"NameException\" style=\"#eba0ac\"/>\n-  <entry type=\"NameFunction\" style=\"#89dceb\"/>\n-  <entry type=\"NameLabel\" style=\"#f9e2af\"/>\n-  <entry type=\"NameNamespace\" style=\"#f9e2af\"/>\n-  <entry type=\"NameOther\" style=\"#fab387\"/>\n+  <entry type=\"NameDecorator\" style=\"bold #89b4fa\"/>\n+  <entry type=\"NameEntity\" style=\"#94e2d5\"/>\n+  <entry type=\"NameException\" style=\"#fab387\"/>\n+  <entry type=\"NameFunction\" style=\"#89b4fa\"/>\n+  <entry type=\"NameFunctionMagic\" style=\"#89b4fa\"/>\n+  <entry type=\"NameLabel\" style=\"#89dceb\"/>\n+  <entry type=\"NameNamespace\" style=\"#fab387\"/>\n+  <entry type=\"NameProperty\" style=\"#fab387\"/>\n   <entry type=\"NameTag\" style=\"#cba6f7\"/>\n-  <entry type=\"NameVariable\" style=\"#fab387\"/>\n+  <entry type=\"NameVariable\" style=\"#f5e0dc\"/>\n+  <entry type=\"NameVariableClass\" style=\"#f5e0dc\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"#f5e0dc\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#f5e0dc\"/>\n+  <entry type=\"NameVariableMagic\" style=\"#f5e0dc\"/>\n+  <entry type=\"NameAttribute\" style=\"#89b4fa\"/>\n+  <entry type=\"NameBuiltin\" style=\"#89dceb\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#89dceb\"/>\n+  <entry type=\"NameOther\" style=\"#cdd6f4\"/>\n+  <entry type=\"Literal\" style=\"#cdd6f4\"/>\n+  <entry type=\"LiteralDate\" style=\"#cdd6f4\"/>\n   <entry type=\"LiteralString\" style=\"#a6e3a1\"/>\n-  <entry type=\"LiteralStringDoc\" style=\"#a6e3a1\"/>\n-  <entry type=\"LiteralStringEscape\" style=\"#89b4fa\"/>\n-  <entry type=\"LiteralStringInterpol\" style=\"#a6e3a1\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#a6e3a1\"/>\n+  <entry type=\"LiteralStringSingle\" style=\"#a6e3a1\"/>\n+  <entry type=\"LiteralStringDouble\" style=\"#a6e3a1\"/>\n+  <entry type=\"LiteralStringBacktick\" style=\"#a6e3a1\"/>\n   <entry type=\"LiteralStringOther\" style=\"#a6e3a1\"/>\n-  <entry type=\"LiteralStringRegex\" style=\"#89b4fa\"/>\n   <entry type=\"LiteralStringSymbol\" style=\"#a6e3a1\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#a6e3a1\"/>\n+  <entry type=\"LiteralStringAffix\" style=\"#f38ba8\"/>\n+  <entry type=\"LiteralStringDelimiter\" style=\"#89b4fa\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#89b4fa\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#94e2d5\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#6c7086\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#6c7086\"/>\n   <entry type=\"LiteralNumber\" style=\"#fab387\"/>\n-  <entry type=\"Operator\" style=\"#89dceb\"/>\n+  <entry type=\"LiteralNumberBin\" style=\"#fab387\"/>\n+  <entry type=\"LiteralNumberHex\" style=\"#fab387\"/>\n+  <entry type=\"LiteralNumberInteger\" style=\"#fab387\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"#fab387\"/>\n+  <entry type=\"LiteralNumberIntegerLong\" style=\"#fab387\"/>\n+  <entry type=\"LiteralNumberOct\" style=\"#fab387\"/>\n+  <entry type=\"Operator\" style=\"bold #89dceb\"/>\n   <entry type=\"OperatorWord\" style=\"bold #89dceb\"/>\n-  <entry type=\"Punctuation\" style=\"#cdd6f4\"/>\n-  <entry type=\"Comment\" style=\"italic #585b70\"/>\n-  <entry type=\"CommentPreproc\" style=\"#89b4fa\"/>\n-  <entry type=\"GenericDeleted\" style=\"#eba0ac\"/>\n-  <entry type=\"GenericEmph\" style=\"italic\"/>\n-  <entry type=\"GenericError\" style=\"#eba0ac\"/>\n-  <entry type=\"GenericHeading\" style=\"bold #89dceb\"/>\n-  <entry type=\"GenericInserted\" style=\"#a6e3a1\"/>\n-  <entry type=\"GenericOutput\" style=\"#fab387\"/>\n-  <entry type=\"GenericPrompt\" style=\"bold #6c7086\"/>\n-  <entry type=\"GenericStrong\" style=\"bold\"/>\n-  <entry type=\"GenericSubheading\" style=\"bold #89dceb\"/>\n-  <entry type=\"GenericTraceback\" style=\"#eba0ac\"/>\n-  <entry type=\"TextWhitespace\" style=\"#313244\"/>\n+  <entry type=\"Comment\" style=\"italic #6c7086\"/>\n+  <entry type=\"CommentSingle\" style=\"italic #6c7086\"/>\n+  <entry type=\"CommentMultiline\" style=\"italic #6c7086\"/>\n+  <entry type=\"CommentSpecial\" style=\"italic #6c7086\"/>\n+  <entry type=\"CommentHashbang\" style=\"italic #6c7086\"/>\n+  <entry type=\"CommentPreproc\" style=\"italic #6c7086\"/>\n+  <entry type=\"CommentPreprocFile\" style=\"bold #6c7086\"/>\n+  <entry type=\"Generic\" style=\"#cdd6f4\"/>\n+  <entry type=\"GenericInserted\" style=\"bg:#313244 #a6e3a1\"/>\n+  <entry type=\"GenericDeleted\" style=\"#f38ba8 bg:#313244\"/>\n+  <entry type=\"GenericEmph\" style=\"italic #cdd6f4\"/>\n+  <entry type=\"GenericStrong\" style=\"bold #cdd6f4\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline #cdd6f4\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #fab387\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #fab387\"/>\n+  <entry type=\"GenericOutput\" style=\"#cdd6f4\"/>\n+  <entry type=\"GenericPrompt\" style=\"#cdd6f4\"/>\n+  <entry type=\"GenericError\" style=\"#f38ba8\"/>\n+  <entry type=\"GenericTraceback\" style=\"#f38ba8\"/>\n </style>\n\\ No newline at end of file"
    },
    {
      "sha": "0adb7756104dfc240a00a1fc5d2eeaf466dbb48a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/github-dark.xml",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub-dark.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub-dark.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub-dark.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2,11 +2,11 @@\n   <entry type=\"Error\" style=\"#f85149\"/>\n   <entry type=\"LineHighlight\" style=\"#6e7681\"/>\n   <entry type=\"LineNumbers\" style=\"#6e7681\"/>\n-  <entry type=\"Background\" style=\"#c9d1d9 bg:#0d1117\"/>\n+  <entry type=\"Background\" style=\"#e6edf3 bg:#0d1117\"/>\n   <entry type=\"Keyword\" style=\"#ff7b72\"/>\n   <entry type=\"KeywordConstant\" style=\"#79c0ff\"/>\n   <entry type=\"KeywordPseudo\" style=\"#79c0ff\"/>\n-  <entry type=\"Name\" style=\"#c9d1d9\"/>\n+  <entry type=\"Name\" style=\"#e6edf3\"/>\n   <entry type=\"NameClass\" style=\"bold #f0883e\"/>\n   <entry type=\"NameConstant\" style=\"bold #79c0ff\"/>\n   <entry type=\"NameDecorator\" style=\"bold #d2a8ff\"/>\n@@ -29,7 +29,7 @@\n   <entry type=\"Comment\" style=\"italic #8b949e\"/>\n   <entry type=\"CommentSpecial\" style=\"bold italic #8b949e\"/>\n   <entry type=\"CommentPreproc\" style=\"bold #8b949e\"/>\n-  <entry type=\"Generic\" style=\"#c9d1d9\"/>\n+  <entry type=\"Generic\" style=\"#e6edf3\"/>\n   <entry type=\"GenericDeleted\" style=\"#ffa198 bg:#490202\"/>\n   <entry type=\"GenericEmph\" style=\"italic\"/>\n   <entry type=\"GenericError\" style=\"#ffa198\"/>\n@@ -42,4 +42,4 @@\n   <entry type=\"GenericTraceback\" style=\"#ff7b72\"/>\n   <entry type=\"GenericUnderline\" style=\"underline\"/>\n   <entry type=\"TextWhitespace\" style=\"#6e7681\"/>\n-</style>\n\\ No newline at end of file\n+</style>"
    },
    {
      "sha": "6921eb5eebd51bccbce67815a7baef9a5e47fafb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/onedark.xml",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fonedark.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fonedark.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fonedark.xml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -20,4 +20,6 @@\n   <entry type=\"LiteralNumber\"       style=\"#D19A66\"/>\n   <entry type=\"Operator\"            style=\"#56B6C2\"/>\n   <entry type=\"Comment\"             style=\"#7F848E\"/>\n+  <entry type=\"GenericDeleted\"      style=\"#E06C75\"/>\n+  <entry type=\"GenericInserted\"     style=\"bold #98C379\"/>\n </style>"
    },
    {
      "sha": "ea4b7556a7b0d6c3f39f1dc416656c3c227e987f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/table.py",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftable.py",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftable.py",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftable.py?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -5,8 +5,7 @@\n \n README_FILE = \"README.md\"\n \n-\n-lines = check_output([\"go\", \"run\", \"./cmd/chroma/main.go\", \"--list\"]).decode(\"utf-8\").splitlines()\n+lines = check_output([\"chroma\", \"--list\"]).decode(\"utf-8\").splitlines()\n lines = [line.strip() for line in lines if line.startswith(\"  \") and not line.startswith(\"   \")]\n lines = sorted(lines, key=lambda l: l.lower())\n "
    },
    {
      "sha": "696e9ce5e9c8dd1802bf0da7ade900732e83985e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/tokentype_enumer.go",
      "status": "modified",
      "additions": 419,
      "deletions": 100,
      "changes": 519,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftokentype_enumer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftokentype_enumer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftokentype_enumer.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -4,9 +4,11 @@ package chroma\n \n import (\n \t\"fmt\"\n+\t\"strings\"\n )\n \n const _TokenTypeName = \"NoneOtherErrorCodeLineLineLinkLineTableTDLineTableLineHighlightLineNumbersTableLineNumbersLinePreWrapperBackgroundEOFTypeKeywordKeywordConstantKeywordDeclarationKeywordNamespaceKeywordPseudoKeywordReservedKeywordTypeNameNameAttributeNameBuiltinNameBuiltinPseudoNameClassNameConstantNameDecoratorNameEntityNameExceptionNameFunctionNameFunctionMagicNameKeywordNameLabelNameNamespaceNameOperatorNameOtherNamePseudoNamePropertyNameTagNameVariableNameVariableAnonymousNameVariableClassNameVariableGlobalNameVariableInstanceNameVariableMagicLiteralLiteralDateLiteralOtherLiteralStringLiteralStringAffixLiteralStringAtomLiteralStringBacktickLiteralStringBooleanLiteralStringCharLiteralStringDelimiterLiteralStringDocLiteralStringDoubleLiteralStringEscapeLiteralStringHeredocLiteralStringInterpolLiteralStringNameLiteralStringOtherLiteralStringRegexLiteralStringSingleLiteralStringSymbolLiteralNumberLiteralNumberBinLiteralNumberFloatLiteralNumberHexLiteralNumberIntegerLiteralNumberIntegerLongLiteralNumberOctOperatorOperatorWordPunctuationCommentCommentHashbangCommentMultilineCommentSingleCommentSpecialCommentPreprocCommentPreprocFileGenericGenericDeletedGenericEmphGenericErrorGenericHeadingGenericInsertedGenericOutputGenericPromptGenericStrongGenericSubheadingGenericTracebackGenericUnderlineTextTextWhitespaceTextSymbolTextPunctuation\"\n+const _TokenTypeLowerName = \"noneothererrorcodelinelinelinklinetabletdlinetablelinehighlightlinenumberstablelinenumberslineprewrapperbackgroundeoftypekeywordkeywordconstantkeyworddeclarationkeywordnamespacekeywordpseudokeywordreservedkeywordtypenamenameattributenamebuiltinnamebuiltinpseudonameclassnameconstantnamedecoratornameentitynameexceptionnamefunctionnamefunctionmagicnamekeywordnamelabelnamenamespacenameoperatornameothernamepseudonamepropertynametagnamevariablenamevariableanonymousnamevariableclassnamevariableglobalnamevariableinstancenamevariablemagicliteralliteraldateliteralotherliteralstringliteralstringaffixliteralstringatomliteralstringbacktickliteralstringbooleanliteralstringcharliteralstringdelimiterliteralstringdocliteralstringdoubleliteralstringescapeliteralstringheredocliteralstringinterpolliteralstringnameliteralstringotherliteralstringregexliteralstringsingleliteralstringsymbolliteralnumberliteralnumberbinliteralnumberfloatliteralnumberhexliteralnumberintegerliteralnumberintegerlongliteralnumberoctoperatoroperatorwordpunctuationcommentcommenthashbangcommentmultilinecommentsinglecommentspecialcommentpreproccommentpreprocfilegenericgenericdeletedgenericemphgenericerrorgenericheadinggenericinsertedgenericoutputgenericpromptgenericstronggenericsubheadinggenerictracebackgenericunderlinetexttextwhitespacetextsymboltextpunctuation\"\n \n var _TokenTypeMap = map[TokenType]string{\n \t-13:  _TokenTypeName[0:4],\n@@ -117,108 +119,414 @@ func (i TokenType) String() string {\n \treturn fmt.Sprintf(\"TokenType(%d)\", i)\n }\n \n-var _TokenTypeValues = []TokenType{-13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 3000, 3001, 3002, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 4000, 4001, 5000, 6000, 6001, 6002, 6003, 6004, 6100, 6101, 7000, 7001, 7002, 7003, 7004, 7005, 7006, 7007, 7008, 7009, 7010, 7011, 8000, 8001, 8002, 8003}\n+// An \"invalid array index\" compiler error signifies that the constant values have changed.\n+// Re-run the stringer command to generate them again.\n+func _TokenTypeNoOp() {\n+\tvar x [1]struct{}\n+\t_ = x[None-(-13)]\n+\t_ = x[Other-(-12)]\n+\t_ = x[Error-(-11)]\n+\t_ = x[CodeLine-(-10)]\n+\t_ = x[LineLink-(-9)]\n+\t_ = x[LineTableTD-(-8)]\n+\t_ = x[LineTable-(-7)]\n+\t_ = x[LineHighlight-(-6)]\n+\t_ = x[LineNumbersTable-(-5)]\n+\t_ = x[LineNumbers-(-4)]\n+\t_ = x[Line-(-3)]\n+\t_ = x[PreWrapper-(-2)]\n+\t_ = x[Background-(-1)]\n+\t_ = x[EOFType-(0)]\n+\t_ = x[Keyword-(1000)]\n+\t_ = x[KeywordConstant-(1001)]\n+\t_ = x[KeywordDeclaration-(1002)]\n+\t_ = x[KeywordNamespace-(1003)]\n+\t_ = x[KeywordPseudo-(1004)]\n+\t_ = x[KeywordReserved-(1005)]\n+\t_ = x[KeywordType-(1006)]\n+\t_ = x[Name-(2000)]\n+\t_ = x[NameAttribute-(2001)]\n+\t_ = x[NameBuiltin-(2002)]\n+\t_ = x[NameBuiltinPseudo-(2003)]\n+\t_ = x[NameClass-(2004)]\n+\t_ = x[NameConstant-(2005)]\n+\t_ = x[NameDecorator-(2006)]\n+\t_ = x[NameEntity-(2007)]\n+\t_ = x[NameException-(2008)]\n+\t_ = x[NameFunction-(2009)]\n+\t_ = x[NameFunctionMagic-(2010)]\n+\t_ = x[NameKeyword-(2011)]\n+\t_ = x[NameLabel-(2012)]\n+\t_ = x[NameNamespace-(2013)]\n+\t_ = x[NameOperator-(2014)]\n+\t_ = x[NameOther-(2015)]\n+\t_ = x[NamePseudo-(2016)]\n+\t_ = x[NameProperty-(2017)]\n+\t_ = x[NameTag-(2018)]\n+\t_ = x[NameVariable-(2019)]\n+\t_ = x[NameVariableAnonymous-(2020)]\n+\t_ = x[NameVariableClass-(2021)]\n+\t_ = x[NameVariableGlobal-(2022)]\n+\t_ = x[NameVariableInstance-(2023)]\n+\t_ = x[NameVariableMagic-(2024)]\n+\t_ = x[Literal-(3000)]\n+\t_ = x[LiteralDate-(3001)]\n+\t_ = x[LiteralOther-(3002)]\n+\t_ = x[LiteralString-(3100)]\n+\t_ = x[LiteralStringAffix-(3101)]\n+\t_ = x[LiteralStringAtom-(3102)]\n+\t_ = x[LiteralStringBacktick-(3103)]\n+\t_ = x[LiteralStringBoolean-(3104)]\n+\t_ = x[LiteralStringChar-(3105)]\n+\t_ = x[LiteralStringDelimiter-(3106)]\n+\t_ = x[LiteralStringDoc-(3107)]\n+\t_ = x[LiteralStringDouble-(3108)]\n+\t_ = x[LiteralStringEscape-(3109)]\n+\t_ = x[LiteralStringHeredoc-(3110)]\n+\t_ = x[LiteralStringInterpol-(3111)]\n+\t_ = x[LiteralStringName-(3112)]\n+\t_ = x[LiteralStringOther-(3113)]\n+\t_ = x[LiteralStringRegex-(3114)]\n+\t_ = x[LiteralStringSingle-(3115)]\n+\t_ = x[LiteralStringSymbol-(3116)]\n+\t_ = x[LiteralNumber-(3200)]\n+\t_ = x[LiteralNumberBin-(3201)]\n+\t_ = x[LiteralNumberFloat-(3202)]\n+\t_ = x[LiteralNumberHex-(3203)]\n+\t_ = x[LiteralNumberInteger-(3204)]\n+\t_ = x[LiteralNumberIntegerLong-(3205)]\n+\t_ = x[LiteralNumberOct-(3206)]\n+\t_ = x[Operator-(4000)]\n+\t_ = x[OperatorWord-(4001)]\n+\t_ = x[Punctuation-(5000)]\n+\t_ = x[Comment-(6000)]\n+\t_ = x[CommentHashbang-(6001)]\n+\t_ = x[CommentMultiline-(6002)]\n+\t_ = x[CommentSingle-(6003)]\n+\t_ = x[CommentSpecial-(6004)]\n+\t_ = x[CommentPreproc-(6100)]\n+\t_ = x[CommentPreprocFile-(6101)]\n+\t_ = x[Generic-(7000)]\n+\t_ = x[GenericDeleted-(7001)]\n+\t_ = x[GenericEmph-(7002)]\n+\t_ = x[GenericError-(7003)]\n+\t_ = x[GenericHeading-(7004)]\n+\t_ = x[GenericInserted-(7005)]\n+\t_ = x[GenericOutput-(7006)]\n+\t_ = x[GenericPrompt-(7007)]\n+\t_ = x[GenericStrong-(7008)]\n+\t_ = x[GenericSubheading-(7009)]\n+\t_ = x[GenericTraceback-(7010)]\n+\t_ = x[GenericUnderline-(7011)]\n+\t_ = x[Text-(8000)]\n+\t_ = x[TextWhitespace-(8001)]\n+\t_ = x[TextSymbol-(8002)]\n+\t_ = x[TextPunctuation-(8003)]\n+}\n+\n+var _TokenTypeValues = []TokenType{None, Other, Error, CodeLine, LineLink, LineTableTD, LineTable, LineHighlight, LineNumbersTable, LineNumbers, Line, PreWrapper, Background, EOFType, Keyword, KeywordConstant, KeywordDeclaration, KeywordNamespace, KeywordPseudo, KeywordReserved, KeywordType, Name, NameAttribute, NameBuiltin, NameBuiltinPseudo, NameClass, NameConstant, NameDecorator, NameEntity, NameException, NameFunction, NameFunctionMagic, NameKeyword, NameLabel, NameNamespace, NameOperator, NameOther, NamePseudo, NameProperty, NameTag, NameVariable, NameVariableAnonymous, NameVariableClass, NameVariableGlobal, NameVariableInstance, NameVariableMagic, Literal, LiteralDate, LiteralOther, LiteralString, LiteralStringAffix, LiteralStringAtom, LiteralStringBacktick, LiteralStringBoolean, LiteralStringChar, LiteralStringDelimiter, LiteralStringDoc, LiteralStringDouble, LiteralStringEscape, LiteralStringHeredoc, LiteralStringInterpol, LiteralStringName, LiteralStringOther, LiteralStringRegex, LiteralStringSingle, LiteralStringSymbol, LiteralNumber, LiteralNumberBin, LiteralNumberFloat, LiteralNumberHex, LiteralNumberInteger, LiteralNumberIntegerLong, LiteralNumberOct, Operator, OperatorWord, Punctuation, Comment, CommentHashbang, CommentMultiline, CommentSingle, CommentSpecial, CommentPreproc, CommentPreprocFile, Generic, GenericDeleted, GenericEmph, GenericError, GenericHeading, GenericInserted, GenericOutput, GenericPrompt, GenericStrong, GenericSubheading, GenericTraceback, GenericUnderline, Text, TextWhitespace, TextSymbol, TextPunctuation}\n \n var _TokenTypeNameToValueMap = map[string]TokenType{\n-\t_TokenTypeName[0:4]:       -13,\n-\t_TokenTypeName[4:9]:       -12,\n-\t_TokenTypeName[9:14]:      -11,\n-\t_TokenTypeName[14:22]:     -10,\n-\t_TokenTypeName[22:30]:     -9,\n-\t_TokenTypeName[30:41]:     -8,\n-\t_TokenTypeName[41:50]:     -7,\n-\t_TokenTypeName[50:63]:     -6,\n-\t_TokenTypeName[63:79]:     -5,\n-\t_TokenTypeName[79:90]:     -4,\n-\t_TokenTypeName[90:94]:     -3,\n-\t_TokenTypeName[94:104]:    -2,\n-\t_TokenTypeName[104:114]:   -1,\n-\t_TokenTypeName[114:121]:   0,\n-\t_TokenTypeName[121:128]:   1000,\n-\t_TokenTypeName[128:143]:   1001,\n-\t_TokenTypeName[143:161]:   1002,\n-\t_TokenTypeName[161:177]:   1003,\n-\t_TokenTypeName[177:190]:   1004,\n-\t_TokenTypeName[190:205]:   1005,\n-\t_TokenTypeName[205:216]:   1006,\n-\t_TokenTypeName[216:220]:   2000,\n-\t_TokenTypeName[220:233]:   2001,\n-\t_TokenTypeName[233:244]:   2002,\n-\t_TokenTypeName[244:261]:   2003,\n-\t_TokenTypeName[261:270]:   2004,\n-\t_TokenTypeName[270:282]:   2005,\n-\t_TokenTypeName[282:295]:   2006,\n-\t_TokenTypeName[295:305]:   2007,\n-\t_TokenTypeName[305:318]:   2008,\n-\t_TokenTypeName[318:330]:   2009,\n-\t_TokenTypeName[330:347]:   2010,\n-\t_TokenTypeName[347:358]:   2011,\n-\t_TokenTypeName[358:367]:   2012,\n-\t_TokenTypeName[367:380]:   2013,\n-\t_TokenTypeName[380:392]:   2014,\n-\t_TokenTypeName[392:401]:   2015,\n-\t_TokenTypeName[401:411]:   2016,\n-\t_TokenTypeName[411:423]:   2017,\n-\t_TokenTypeName[423:430]:   2018,\n-\t_TokenTypeName[430:442]:   2019,\n-\t_TokenTypeName[442:463]:   2020,\n-\t_TokenTypeName[463:480]:   2021,\n-\t_TokenTypeName[480:498]:   2022,\n-\t_TokenTypeName[498:518]:   2023,\n-\t_TokenTypeName[518:535]:   2024,\n-\t_TokenTypeName[535:542]:   3000,\n-\t_TokenTypeName[542:553]:   3001,\n-\t_TokenTypeName[553:565]:   3002,\n-\t_TokenTypeName[565:578]:   3100,\n-\t_TokenTypeName[578:596]:   3101,\n-\t_TokenTypeName[596:613]:   3102,\n-\t_TokenTypeName[613:634]:   3103,\n-\t_TokenTypeName[634:654]:   3104,\n-\t_TokenTypeName[654:671]:   3105,\n-\t_TokenTypeName[671:693]:   3106,\n-\t_TokenTypeName[693:709]:   3107,\n-\t_TokenTypeName[709:728]:   3108,\n-\t_TokenTypeName[728:747]:   3109,\n-\t_TokenTypeName[747:767]:   3110,\n-\t_TokenTypeName[767:788]:   3111,\n-\t_TokenTypeName[788:805]:   3112,\n-\t_TokenTypeName[805:823]:   3113,\n-\t_TokenTypeName[823:841]:   3114,\n-\t_TokenTypeName[841:860]:   3115,\n-\t_TokenTypeName[860:879]:   3116,\n-\t_TokenTypeName[879:892]:   3200,\n-\t_TokenTypeName[892:908]:   3201,\n-\t_TokenTypeName[908:926]:   3202,\n-\t_TokenTypeName[926:942]:   3203,\n-\t_TokenTypeName[942:962]:   3204,\n-\t_TokenTypeName[962:986]:   3205,\n-\t_TokenTypeName[986:1002]:  3206,\n-\t_TokenTypeName[1002:1010]: 4000,\n-\t_TokenTypeName[1010:1022]: 4001,\n-\t_TokenTypeName[1022:1033]: 5000,\n-\t_TokenTypeName[1033:1040]: 6000,\n-\t_TokenTypeName[1040:1055]: 6001,\n-\t_TokenTypeName[1055:1071]: 6002,\n-\t_TokenTypeName[1071:1084]: 6003,\n-\t_TokenTypeName[1084:1098]: 6004,\n-\t_TokenTypeName[1098:1112]: 6100,\n-\t_TokenTypeName[1112:1130]: 6101,\n-\t_TokenTypeName[1130:1137]: 7000,\n-\t_TokenTypeName[1137:1151]: 7001,\n-\t_TokenTypeName[1151:1162]: 7002,\n-\t_TokenTypeName[1162:1174]: 7003,\n-\t_TokenTypeName[1174:1188]: 7004,\n-\t_TokenTypeName[1188:1203]: 7005,\n-\t_TokenTypeName[1203:1216]: 7006,\n-\t_TokenTypeName[1216:1229]: 7007,\n-\t_TokenTypeName[1229:1242]: 7008,\n-\t_TokenTypeName[1242:1259]: 7009,\n-\t_TokenTypeName[1259:1275]: 7010,\n-\t_TokenTypeName[1275:1291]: 7011,\n-\t_TokenTypeName[1291:1295]: 8000,\n-\t_TokenTypeName[1295:1309]: 8001,\n-\t_TokenTypeName[1309:1319]: 8002,\n-\t_TokenTypeName[1319:1334]: 8003,\n+\t_TokenTypeName[0:4]:            None,\n+\t_TokenTypeLowerName[0:4]:       None,\n+\t_TokenTypeName[4:9]:            Other,\n+\t_TokenTypeLowerName[4:9]:       Other,\n+\t_TokenTypeName[9:14]:           Error,\n+\t_TokenTypeLowerName[9:14]:      Error,\n+\t_TokenTypeName[14:22]:          CodeLine,\n+\t_TokenTypeLowerName[14:22]:     CodeLine,\n+\t_TokenTypeName[22:30]:          LineLink,\n+\t_TokenTypeLowerName[22:30]:     LineLink,\n+\t_TokenTypeName[30:41]:          LineTableTD,\n+\t_TokenTypeLowerName[30:41]:     LineTableTD,\n+\t_TokenTypeName[41:50]:          LineTable,\n+\t_TokenTypeLowerName[41:50]:     LineTable,\n+\t_TokenTypeName[50:63]:          LineHighlight,\n+\t_TokenTypeLowerName[50:63]:     LineHighlight,\n+\t_TokenTypeName[63:79]:          LineNumbersTable,\n+\t_TokenTypeLowerName[63:79]:     LineNumbersTable,\n+\t_TokenTypeName[79:90]:          LineNumbers,\n+\t_TokenTypeLowerName[79:90]:     LineNumbers,\n+\t_TokenTypeName[90:94]:          Line,\n+\t_TokenTypeLowerName[90:94]:     Line,\n+\t_TokenTypeName[94:104]:         PreWrapper,\n+\t_TokenTypeLowerName[94:104]:    PreWrapper,\n+\t_TokenTypeName[104:114]:        Background,\n+\t_TokenTypeLowerName[104:114]:   Background,\n+\t_TokenTypeName[114:121]:        EOFType,\n+\t_TokenTypeLowerName[114:121]:   EOFType,\n+\t_TokenTypeName[121:128]:        Keyword,\n+\t_TokenTypeLowerName[121:128]:   Keyword,\n+\t_TokenTypeName[128:143]:        KeywordConstant,\n+\t_TokenTypeLowerName[128:143]:   KeywordConstant,\n+\t_TokenTypeName[143:161]:        KeywordDeclaration,\n+\t_TokenTypeLowerName[143:161]:   KeywordDeclaration,\n+\t_TokenTypeName[161:177]:        KeywordNamespace,\n+\t_TokenTypeLowerName[161:177]:   KeywordNamespace,\n+\t_TokenTypeName[177:190]:        KeywordPseudo,\n+\t_TokenTypeLowerName[177:190]:   KeywordPseudo,\n+\t_TokenTypeName[190:205]:        KeywordReserved,\n+\t_TokenTypeLowerName[190:205]:   KeywordReserved,\n+\t_TokenTypeName[205:216]:        KeywordType,\n+\t_TokenTypeLowerName[205:216]:   KeywordType,\n+\t_TokenTypeName[216:220]:        Name,\n+\t_TokenTypeLowerName[216:220]:   Name,\n+\t_TokenTypeName[220:233]:        NameAttribute,\n+\t_TokenTypeLowerName[220:233]:   NameAttribute,\n+\t_TokenTypeName[233:244]:        NameBuiltin,\n+\t_TokenTypeLowerName[233:244]:   NameBuiltin,\n+\t_TokenTypeName[244:261]:        NameBuiltinPseudo,\n+\t_TokenTypeLowerName[244:261]:   NameBuiltinPseudo,\n+\t_TokenTypeName[261:270]:        NameClass,\n+\t_TokenTypeLowerName[261:270]:   NameClass,\n+\t_TokenTypeName[270:282]:        NameConstant,\n+\t_TokenTypeLowerName[270:282]:   NameConstant,\n+\t_TokenTypeName[282:295]:        NameDecorator,\n+\t_TokenTypeLowerName[282:295]:   NameDecorator,\n+\t_TokenTypeName[295:305]:        NameEntity,\n+\t_TokenTypeLowerName[295:305]:   NameEntity,\n+\t_TokenTypeName[305:318]:        NameException,\n+\t_TokenTypeLowerName[305:318]:   NameException,\n+\t_TokenTypeName[318:330]:        NameFunction,\n+\t_TokenTypeLowerName[318:330]:   NameFunction,\n+\t_TokenTypeName[330:347]:        NameFunctionMagic,\n+\t_TokenTypeLowerName[330:347]:   NameFunctionMagic,\n+\t_TokenTypeName[347:358]:        NameKeyword,\n+\t_TokenTypeLowerName[347:358]:   NameKeyword,\n+\t_TokenTypeName[358:367]:        NameLabel,\n+\t_TokenTypeLowerName[358:367]:   NameLabel,\n+\t_TokenTypeName[367:380]:        NameNamespace,\n+\t_TokenTypeLowerName[367:380]:   NameNamespace,\n+\t_TokenTypeName[380:392]:        NameOperator,\n+\t_TokenTypeLowerName[380:392]:   NameOperator,\n+\t_TokenTypeName[392:401]:        NameOther,\n+\t_TokenTypeLowerName[392:401]:   NameOther,\n+\t_TokenTypeName[401:411]:        NamePseudo,\n+\t_TokenTypeLowerName[401:411]:   NamePseudo,\n+\t_TokenTypeName[411:423]:        NameProperty,\n+\t_TokenTypeLowerName[411:423]:   NameProperty,\n+\t_TokenTypeName[423:430]:        NameTag,\n+\t_TokenTypeLowerName[423:430]:   NameTag,\n+\t_TokenTypeName[430:442]:        NameVariable,\n+\t_TokenTypeLowerName[430:442]:   NameVariable,\n+\t_TokenTypeName[442:463]:        NameVariableAnonymous,\n+\t_TokenTypeLowerName[442:463]:   NameVariableAnonymous,\n+\t_TokenTypeName[463:480]:        NameVariableClass,\n+\t_TokenTypeLowerName[463:480]:   NameVariableClass,\n+\t_TokenTypeName[480:498]:        NameVariableGlobal,\n+\t_TokenTypeLowerName[480:498]:   NameVariableGlobal,\n+\t_TokenTypeName[498:518]:        NameVariableInstance,\n+\t_TokenTypeLowerName[498:518]:   NameVariableInstance,\n+\t_TokenTypeName[518:535]:        NameVariableMagic,\n+\t_TokenTypeLowerName[518:535]:   NameVariableMagic,\n+\t_TokenTypeName[535:542]:        Literal,\n+\t_TokenTypeLowerName[535:542]:   Literal,\n+\t_TokenTypeName[542:553]:        LiteralDate,\n+\t_TokenTypeLowerName[542:553]:   LiteralDate,\n+\t_TokenTypeName[553:565]:        LiteralOther,\n+\t_TokenTypeLowerName[553:565]:   LiteralOther,\n+\t_TokenTypeName[565:578]:        LiteralString,\n+\t_TokenTypeLowerName[565:578]:   LiteralString,\n+\t_TokenTypeName[578:596]:        LiteralStringAffix,\n+\t_TokenTypeLowerName[578:596]:   LiteralStringAffix,\n+\t_TokenTypeName[596:613]:        LiteralStringAtom,\n+\t_TokenTypeLowerName[596:613]:   LiteralStringAtom,\n+\t_TokenTypeName[613:634]:        LiteralStringBacktick,\n+\t_TokenTypeLowerName[613:634]:   LiteralStringBacktick,\n+\t_TokenTypeName[634:654]:        LiteralStringBoolean,\n+\t_TokenTypeLowerName[634:654]:   LiteralStringBoolean,\n+\t_TokenTypeName[654:671]:        LiteralStringChar,\n+\t_TokenTypeLowerName[654:671]:   LiteralStringChar,\n+\t_TokenTypeName[671:693]:        LiteralStringDelimiter,\n+\t_TokenTypeLowerName[671:693]:   LiteralStringDelimiter,\n+\t_TokenTypeName[693:709]:        LiteralStringDoc,\n+\t_TokenTypeLowerName[693:709]:   LiteralStringDoc,\n+\t_TokenTypeName[709:728]:        LiteralStringDouble,\n+\t_TokenTypeLowerName[709:728]:   LiteralStringDouble,\n+\t_TokenTypeName[728:747]:        LiteralStringEscape,\n+\t_TokenTypeLowerName[728:747]:   LiteralStringEscape,\n+\t_TokenTypeName[747:767]:        LiteralStringHeredoc,\n+\t_TokenTypeLowerName[747:767]:   LiteralStringHeredoc,\n+\t_TokenTypeName[767:788]:        LiteralStringInterpol,\n+\t_TokenTypeLowerName[767:788]:   LiteralStringInterpol,\n+\t_TokenTypeName[788:805]:        LiteralStringName,\n+\t_TokenTypeLowerName[788:805]:   LiteralStringName,\n+\t_TokenTypeName[805:823]:        LiteralStringOther,\n+\t_TokenTypeLowerName[805:823]:   LiteralStringOther,\n+\t_TokenTypeName[823:841]:        LiteralStringRegex,\n+\t_TokenTypeLowerName[823:841]:   LiteralStringRegex,\n+\t_TokenTypeName[841:860]:        LiteralStringSingle,\n+\t_TokenTypeLowerName[841:860]:   LiteralStringSingle,\n+\t_TokenTypeName[860:879]:        LiteralStringSymbol,\n+\t_TokenTypeLowerName[860:879]:   LiteralStringSymbol,\n+\t_TokenTypeName[879:892]:        LiteralNumber,\n+\t_TokenTypeLowerName[879:892]:   LiteralNumber,\n+\t_TokenTypeName[892:908]:        LiteralNumberBin,\n+\t_TokenTypeLowerName[892:908]:   LiteralNumberBin,\n+\t_TokenTypeName[908:926]:        LiteralNumberFloat,\n+\t_TokenTypeLowerName[908:926]:   LiteralNumberFloat,\n+\t_TokenTypeName[926:942]:        LiteralNumberHex,\n+\t_TokenTypeLowerName[926:942]:   LiteralNumberHex,\n+\t_TokenTypeName[942:962]:        LiteralNumberInteger,\n+\t_TokenTypeLowerName[942:962]:   LiteralNumberInteger,\n+\t_TokenTypeName[962:986]:        LiteralNumberIntegerLong,\n+\t_TokenTypeLowerName[962:986]:   LiteralNumberIntegerLong,\n+\t_TokenTypeName[986:1002]:       LiteralNumberOct,\n+\t_TokenTypeLowerName[986:1002]:  LiteralNumberOct,\n+\t_TokenTypeName[1002:1010]:      Operator,\n+\t_TokenTypeLowerName[1002:1010]: Operator,\n+\t_TokenTypeName[1010:1022]:      OperatorWord,\n+\t_TokenTypeLowerName[1010:1022]: OperatorWord,\n+\t_TokenTypeName[1022:1033]:      Punctuation,\n+\t_TokenTypeLowerName[1022:1033]: Punctuation,\n+\t_TokenTypeName[1033:1040]:      Comment,\n+\t_TokenTypeLowerName[1033:1040]: Comment,\n+\t_TokenTypeName[1040:1055]:      CommentHashbang,\n+\t_TokenTypeLowerName[1040:1055]: CommentHashbang,\n+\t_TokenTypeName[1055:1071]:      CommentMultiline,\n+\t_TokenTypeLowerName[1055:1071]: CommentMultiline,\n+\t_TokenTypeName[1071:1084]:      CommentSingle,\n+\t_TokenTypeLowerName[1071:1084]: CommentSingle,\n+\t_TokenTypeName[1084:1098]:      CommentSpecial,\n+\t_TokenTypeLowerName[1084:1098]: CommentSpecial,\n+\t_TokenTypeName[1098:1112]:      CommentPreproc,\n+\t_TokenTypeLowerName[1098:1112]: CommentPreproc,\n+\t_TokenTypeName[1112:1130]:      CommentPreprocFile,\n+\t_TokenTypeLowerName[1112:1130]: CommentPreprocFile,\n+\t_TokenTypeName[1130:1137]:      Generic,\n+\t_TokenTypeLowerName[1130:1137]: Generic,\n+\t_TokenTypeName[1137:1151]:      GenericDeleted,\n+\t_TokenTypeLowerName[1137:1151]: GenericDeleted,\n+\t_TokenTypeName[1151:1162]:      GenericEmph,\n+\t_TokenTypeLowerName[1151:1162]: GenericEmph,\n+\t_TokenTypeName[1162:1174]:      GenericError,\n+\t_TokenTypeLowerName[1162:1174]: GenericError,\n+\t_TokenTypeName[1174:1188]:      GenericHeading,\n+\t_TokenTypeLowerName[1174:1188]: GenericHeading,\n+\t_TokenTypeName[1188:1203]:      GenericInserted,\n+\t_TokenTypeLowerName[1188:1203]: GenericInserted,\n+\t_TokenTypeName[1203:1216]:      GenericOutput,\n+\t_TokenTypeLowerName[1203:1216]: GenericOutput,\n+\t_TokenTypeName[1216:1229]:      GenericPrompt,\n+\t_TokenTypeLowerName[1216:1229]: GenericPrompt,\n+\t_TokenTypeName[1229:1242]:      GenericStrong,\n+\t_TokenTypeLowerName[1229:1242]: GenericStrong,\n+\t_TokenTypeName[1242:1259]:      GenericSubheading,\n+\t_TokenTypeLowerName[1242:1259]: GenericSubheading,\n+\t_TokenTypeName[1259:1275]:      GenericTraceback,\n+\t_TokenTypeLowerName[1259:1275]: GenericTraceback,\n+\t_TokenTypeName[1275:1291]:      GenericUnderline,\n+\t_TokenTypeLowerName[1275:1291]: GenericUnderline,\n+\t_TokenTypeName[1291:1295]:      Text,\n+\t_TokenTypeLowerName[1291:1295]: Text,\n+\t_TokenTypeName[1295:1309]:      TextWhitespace,\n+\t_TokenTypeLowerName[1295:1309]: TextWhitespace,\n+\t_TokenTypeName[1309:1319]:      TextSymbol,\n+\t_TokenTypeLowerName[1309:1319]: TextSymbol,\n+\t_TokenTypeName[1319:1334]:      TextPunctuation,\n+\t_TokenTypeLowerName[1319:1334]: TextPunctuation,\n+}\n+\n+var _TokenTypeNames = []string{\n+\t_TokenTypeName[0:4],\n+\t_TokenTypeName[4:9],\n+\t_TokenTypeName[9:14],\n+\t_TokenTypeName[14:22],\n+\t_TokenTypeName[22:30],\n+\t_TokenTypeName[30:41],\n+\t_TokenTypeName[41:50],\n+\t_TokenTypeName[50:63],\n+\t_TokenTypeName[63:79],\n+\t_TokenTypeName[79:90],\n+\t_TokenTypeName[90:94],\n+\t_TokenTypeName[94:104],\n+\t_TokenTypeName[104:114],\n+\t_TokenTypeName[114:121],\n+\t_TokenTypeName[121:128],\n+\t_TokenTypeName[128:143],\n+\t_TokenTypeName[143:161],\n+\t_TokenTypeName[161:177],\n+\t_TokenTypeName[177:190],\n+\t_TokenTypeName[190:205],\n+\t_TokenTypeName[205:216],\n+\t_TokenTypeName[216:220],\n+\t_TokenTypeName[220:233],\n+\t_TokenTypeName[233:244],\n+\t_TokenTypeName[244:261],\n+\t_TokenTypeName[261:270],\n+\t_TokenTypeName[270:282],\n+\t_TokenTypeName[282:295],\n+\t_TokenTypeName[295:305],\n+\t_TokenTypeName[305:318],\n+\t_TokenTypeName[318:330],\n+\t_TokenTypeName[330:347],\n+\t_TokenTypeName[347:358],\n+\t_TokenTypeName[358:367],\n+\t_TokenTypeName[367:380],\n+\t_TokenTypeName[380:392],\n+\t_TokenTypeName[392:401],\n+\t_TokenTypeName[401:411],\n+\t_TokenTypeName[411:423],\n+\t_TokenTypeName[423:430],\n+\t_TokenTypeName[430:442],\n+\t_TokenTypeName[442:463],\n+\t_TokenTypeName[463:480],\n+\t_TokenTypeName[480:498],\n+\t_TokenTypeName[498:518],\n+\t_TokenTypeName[518:535],\n+\t_TokenTypeName[535:542],\n+\t_TokenTypeName[542:553],\n+\t_TokenTypeName[553:565],\n+\t_TokenTypeName[565:578],\n+\t_TokenTypeName[578:596],\n+\t_TokenTypeName[596:613],\n+\t_TokenTypeName[613:634],\n+\t_TokenTypeName[634:654],\n+\t_TokenTypeName[654:671],\n+\t_TokenTypeName[671:693],\n+\t_TokenTypeName[693:709],\n+\t_TokenTypeName[709:728],\n+\t_TokenTypeName[728:747],\n+\t_TokenTypeName[747:767],\n+\t_TokenTypeName[767:788],\n+\t_TokenTypeName[788:805],\n+\t_TokenTypeName[805:823],\n+\t_TokenTypeName[823:841],\n+\t_TokenTypeName[841:860],\n+\t_TokenTypeName[860:879],\n+\t_TokenTypeName[879:892],\n+\t_TokenTypeName[892:908],\n+\t_TokenTypeName[908:926],\n+\t_TokenTypeName[926:942],\n+\t_TokenTypeName[942:962],\n+\t_TokenTypeName[962:986],\n+\t_TokenTypeName[986:1002],\n+\t_TokenTypeName[1002:1010],\n+\t_TokenTypeName[1010:1022],\n+\t_TokenTypeName[1022:1033],\n+\t_TokenTypeName[1033:1040],\n+\t_TokenTypeName[1040:1055],\n+\t_TokenTypeName[1055:1071],\n+\t_TokenTypeName[1071:1084],\n+\t_TokenTypeName[1084:1098],\n+\t_TokenTypeName[1098:1112],\n+\t_TokenTypeName[1112:1130],\n+\t_TokenTypeName[1130:1137],\n+\t_TokenTypeName[1137:1151],\n+\t_TokenTypeName[1151:1162],\n+\t_TokenTypeName[1162:1174],\n+\t_TokenTypeName[1174:1188],\n+\t_TokenTypeName[1188:1203],\n+\t_TokenTypeName[1203:1216],\n+\t_TokenTypeName[1216:1229],\n+\t_TokenTypeName[1229:1242],\n+\t_TokenTypeName[1242:1259],\n+\t_TokenTypeName[1259:1275],\n+\t_TokenTypeName[1275:1291],\n+\t_TokenTypeName[1291:1295],\n+\t_TokenTypeName[1295:1309],\n+\t_TokenTypeName[1309:1319],\n+\t_TokenTypeName[1319:1334],\n }\n \n // TokenTypeString retrieves an enum value from the enum constants string name.\n@@ -227,6 +535,10 @@ func TokenTypeString(s string) (TokenType, error) {\n \tif val, ok := _TokenTypeNameToValueMap[s]; ok {\n \t\treturn val, nil\n \t}\n+\n+\tif val, ok := _TokenTypeNameToValueMap[strings.ToLower(s)]; ok {\n+\t\treturn val, nil\n+\t}\n \treturn 0, fmt.Errorf(\"%s does not belong to TokenType values\", s)\n }\n \n@@ -235,6 +547,13 @@ func TokenTypeValues() []TokenType {\n \treturn _TokenTypeValues\n }\n \n+// TokenTypeStrings returns a slice of all String values of the enum\n+func TokenTypeStrings() []string {\n+\tstrs := make([]string, len(_TokenTypeNames))\n+\tcopy(strs, _TokenTypeNames)\n+\treturn strs\n+}\n+\n // IsATokenType returns \"true\" if the value is listed in the enum definition. \"false\" otherwise\n func (i TokenType) IsATokenType() bool {\n \t_, ok := _TokenTypeMap[i]"
    },
    {
      "sha": "83d5aa28f23c35891a79b9f870035012d7273982",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/CHANGELOG.md",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FCHANGELOG.md",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FCHANGELOG.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FCHANGELOG.md?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,9 +1,14 @@\n # Changelog\n \n+## v5.0.11 (2023-12-19)\n+\n+- History of changes: see https://github.com/go-chi/chi/compare/v5.0.10...v5.0.11\n+\n+\n ## v5.0.10 (2023-07-13)\n \n - Fixed small edge case in tests of v5.0.9 for older Go versions\n-- History of changes: see https://github.com/go-chi/chi/compare/v5.0.8...v5.0.10\n+- History of changes: see https://github.com/go-chi/chi/compare/v5.0.9...v5.0.10\n \n \n ## v5.0.9 (2023-07-13)\n@@ -306,7 +311,7 @@ Cheers all, happy coding!\n   request-scoped values. We're very excited about the new context addition and are proud to\n   introduce chi v2, a minimal and powerful routing package for building large HTTP services,\n   with zero external dependencies. Chi focuses on idiomatic design and encourages the use of \n-  stdlib HTTP handlers and middlwares.\n+  stdlib HTTP handlers and middlewares.\n - chi v2 deprecates its `chi.Handler` interface and requires `http.Handler` or `http.HandlerFunc`\n - chi v2 stores URL routing parameters and patterns in the standard request context: `r.Context()`\n - chi v2 lower-level routing context is accessible by `chi.RouteContext(r.Context()) *chi.Context`,"
    },
    {
      "sha": "4b1c99d12dd2db6faf0d3d9dffc2c53277fcf7c9",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FREADME.md?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -494,7 +494,7 @@ Copyright (c) 2015-present [Peter Kieltyka](https://github.com/pkieltyka)\n \n Licensed under [MIT License](./LICENSE)\n \n-[GoDoc]: https://pkg.go.dev/github.com/go-chi/chi?tab=versions\n+[GoDoc]: https://pkg.go.dev/github.com/go-chi/chi/v5\n [GoDoc Widget]: https://godoc.org/github.com/go-chi/chi?status.svg\n [Travis]: https://travis-ci.org/go-chi/chi\n [Travis Widget]: https://travis-ci.org/go-chi/chi.svg?branch=master"
    },
    {
      "sha": "7e937f87f30d924874c8f25ece2861156dfd0221",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/SECURITY.md",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FSECURITY.md",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FSECURITY.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FSECURITY.md?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,5 @@\n+# Reporting Security Issues\n+\n+We appreciate your efforts to responsibly disclose your findings, and will make every effort to acknowledge your contributions.\n+\n+To report a security issue, please use the GitHub Security Advisory [\"Report a Vulnerability\"](https://github.com/go-chi/chi/security/advisories/new) tab."
    },
    {
      "sha": "82e5f289080383e31e7164a26c06d095ff8cfb22",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/context.go",
      "status": "modified",
      "additions": 13,
      "deletions": 10,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fcontext.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fcontext.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fcontext.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -60,7 +60,7 @@ type Context struct {\n \tURLParams RouteParams\n \n \t// Route parameters matched for the current sub-router. It is\n-\t// intentionally unexported so it cant be tampered.\n+\t// intentionally unexported so it can't be tampered.\n \trouteParams RouteParams\n \n \t// The endpoint routing pattern that matched the request URI path\n@@ -92,6 +92,7 @@ func (x *Context) Reset() {\n \tx.routeParams.Keys = x.routeParams.Keys[:0]\n \tx.routeParams.Values = x.routeParams.Values[:0]\n \tx.methodNotAllowed = false\n+\tx.methodsAllowed = x.methodsAllowed[:0]\n \tx.parentCtx = nil\n }\n \n@@ -113,18 +114,20 @@ func (x *Context) URLParam(key string) string {\n //\n // For example,\n //\n-//   func Instrument(next http.Handler) http.Handler {\n-//     return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n-//       next.ServeHTTP(w, r)\n-//       routePattern := chi.RouteContext(r.Context()).RoutePattern()\n-//       measure(w, r, routePattern)\n-//   \t })\n-//   }\n+//\tfunc Instrument(next http.Handler) http.Handler {\n+//\t\treturn http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n+//\t\t\tnext.ServeHTTP(w, r)\n+//\t\t\troutePattern := chi.RouteContext(r.Context()).RoutePattern()\n+//\t\t\tmeasure(w, r, routePattern)\n+//\t\t})\n+//\t}\n func (x *Context) RoutePattern() string {\n \troutePattern := strings.Join(x.RoutePatterns, \"\")\n \troutePattern = replaceWildcards(routePattern)\n-\troutePattern = strings.TrimSuffix(routePattern, \"//\")\n-\troutePattern = strings.TrimSuffix(routePattern, \"/\")\n+\tif routePattern != \"/\" {\n+\t\troutePattern = strings.TrimSuffix(routePattern, \"//\")\n+\t\troutePattern = strings.TrimSuffix(routePattern, \"/\")\n+\t}\n \treturn routePattern\n }\n "
    },
    {
      "sha": "28240c4b3af79f9e3298342eed551b061f13fbc5",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/compress.go",
      "status": "modified",
      "additions": 17,
      "deletions": 22,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fcompress.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fcompress.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fcompress.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -137,14 +137,14 @@ func NewCompressor(level int, types ...string) *Compressor {\n //\n // For example, add the Brotli algorithm:\n //\n-//  import brotli_enc \"gopkg.in/kothar/brotli-go.v0/enc\"\n+//\timport brotli_enc \"gopkg.in/kothar/brotli-go.v0/enc\"\n //\n-//  compressor := middleware.NewCompressor(5, \"text/html\")\n-//  compressor.SetEncoder(\"br\", func(w io.Writer, level int) io.Writer {\n-//    params := brotli_enc.NewBrotliParams()\n-//    params.SetQuality(level)\n-//    return brotli_enc.NewBrotliWriter(params, w)\n-//  })\n+//\tcompressor := middleware.NewCompressor(5, \"text/html\")\n+//\tcompressor.SetEncoder(\"br\", func(w io.Writer, level int) io.Writer {\n+//\t\tparams := brotli_enc.NewBrotliParams()\n+//\t\tparams.SetQuality(level)\n+//\t\treturn brotli_enc.NewBrotliWriter(params, w)\n+//\t})\n func (c *Compressor) SetEncoder(encoding string, fn EncoderFunc) {\n \tencoding = strings.ToLower(encoding)\n \tif encoding == \"\" {\n@@ -156,12 +156,8 @@ func (c *Compressor) SetEncoder(encoding string, fn EncoderFunc) {\n \n \t// If we are adding a new encoder that is already registered, we have to\n \t// clear that one out first.\n-\tif _, ok := c.pooledEncoders[encoding]; ok {\n-\t\tdelete(c.pooledEncoders, encoding)\n-\t}\n-\tif _, ok := c.encoders[encoding]; ok {\n-\t\tdelete(c.encoders, encoding)\n-\t}\n+\tdelete(c.pooledEncoders, encoding)\n+\tdelete(c.encoders, encoding)\n \n \t// If the encoder supports Resetting (IoReseterWriter), then it can be pooled.\n \tencoder := fn(ioutil.Discard, c.level)\n@@ -201,7 +197,7 @@ func (c *Compressor) Handler(next http.Handler) http.Handler {\n \t\t\tcontentTypes:     c.allowedTypes,\n \t\t\tcontentWildcards: c.allowedWildcards,\n \t\t\tencoding:         encoding,\n-\t\t\tcompressable:     false, // determined in post-handler\n+\t\t\tcompressible:     false, // determined in post-handler\n \t\t}\n \t\tif encoder != nil {\n \t\t\tcw.w = encoder\n@@ -275,10 +271,10 @@ type compressResponseWriter struct {\n \tcontentWildcards map[string]struct{}\n \tencoding         string\n \twroteHeader      bool\n-\tcompressable     bool\n+\tcompressible     bool\n }\n \n-func (cw *compressResponseWriter) isCompressable() bool {\n+func (cw *compressResponseWriter) isCompressible() bool {\n \t// Parse the first part of the Content-Type response header.\n \tcontentType := cw.Header().Get(\"Content-Type\")\n \tif idx := strings.Index(contentType, \";\"); idx >= 0 {\n@@ -310,13 +306,13 @@ func (cw *compressResponseWriter) WriteHeader(code int) {\n \t\treturn\n \t}\n \n-\tif !cw.isCompressable() {\n-\t\tcw.compressable = false\n+\tif !cw.isCompressible() {\n+\t\tcw.compressible = false\n \t\treturn\n \t}\n \n \tif cw.encoding != \"\" {\n-\t\tcw.compressable = true\n+\t\tcw.compressible = true\n \t\tcw.Header().Set(\"Content-Encoding\", cw.encoding)\n \t\tcw.Header().Add(\"Vary\", \"Accept-Encoding\")\n \n@@ -334,11 +330,10 @@ func (cw *compressResponseWriter) Write(p []byte) (int, error) {\n }\n \n func (cw *compressResponseWriter) writer() io.Writer {\n-\tif cw.compressable {\n+\tif cw.compressible {\n \t\treturn cw.w\n-\t} else {\n-\t\treturn cw.ResponseWriter\n \t}\n+\treturn cw.ResponseWriter\n }\n \n type compressFlusher interface {"
    },
    {
      "sha": "cff9bd2062cbd726b067be47379b872615b4257c",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/logger.go",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Flogger.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Flogger.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Flogger.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -31,10 +31,11 @@ var (\n //\n // IMPORTANT NOTE: Logger should go before any other middleware that may change\n // the response, such as middleware.Recoverer. Example:\n-//     r := chi.NewRouter()\n-//     r.Use(middleware.Logger)        // <--<< Logger should come before Recoverer\n-//     r.Use(middleware.Recoverer)\n-//     r.Get(\"/\", handler)\n+//\n+//\tr := chi.NewRouter()\n+//\tr.Use(middleware.Logger)        // <--<< Logger should come before Recoverer\n+//\tr.Use(middleware.Recoverer)\n+//\tr.Get(\"/\", handler)\n func Logger(next http.Handler) http.Handler {\n \treturn DefaultLogger(next)\n }"
    },
    {
      "sha": "9308d40d73cb5b7ee595f2aa1f53bed0ac8d5643",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/nocache.go",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fnocache.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fnocache.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fnocache.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -32,10 +32,11 @@ var etagHeaders = []string{\n // a router (or subrouter) from being cached by an upstream proxy and/or client.\n //\n // As per http://wiki.nginx.org/HttpProxyModule - NoCache sets:\n-//      Expires: Thu, 01 Jan 1970 00:00:00 UTC\n-//      Cache-Control: no-cache, private, max-age=0\n-//      X-Accel-Expires: 0\n-//      Pragma: no-cache (for HTTP/1.0 proxies/clients)\n+//\n+//\tExpires: Thu, 01 Jan 1970 00:00:00 UTC\n+//\tCache-Control: no-cache, private, max-age=0\n+//\tX-Accel-Expires: 0\n+//\tPragma: no-cache (for HTTP/1.0 proxies/clients)\n func NoCache(h http.Handler) http.Handler {\n \tfn := func(w http.ResponseWriter, r *http.Request) {\n "
    },
    {
      "sha": "ebd81ee4f6dc70a0c3bcb1ff4168d216bc38d608",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/profiler.go",
      "status": "modified",
      "additions": 8,
      "deletions": 24,
      "changes": 32,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fprofiler.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fprofiler.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fprofiler.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2,7 +2,6 @@ package middleware\n \n import (\n \t\"expvar\"\n-\t\"fmt\"\n \t\"net/http\"\n \t\"net/http/pprof\"\n \n@@ -11,13 +10,13 @@ import (\n \n // Profiler is a convenient subrouter used for mounting net/http/pprof. ie.\n //\n-//  func MyService() http.Handler {\n-//    r := chi.NewRouter()\n-//    // ..middlewares\n-//    r.Mount(\"/debug\", middleware.Profiler())\n-//    // ..routes\n-//    return r\n-//  }\n+//\tfunc MyService() http.Handler {\n+//\t\tr := chi.NewRouter()\n+//\t\t// ..middlewares\n+//\t\tr.Mount(\"/debug\", middleware.Profiler())\n+//\t\t// ..routes\n+//\t\treturn r\n+//\t}\n func Profiler() http.Handler {\n \tr := chi.NewRouter()\n \tr.Use(NoCache)\n@@ -34,7 +33,7 @@ func Profiler() http.Handler {\n \tr.HandleFunc(\"/pprof/profile\", pprof.Profile)\n \tr.HandleFunc(\"/pprof/symbol\", pprof.Symbol)\n \tr.HandleFunc(\"/pprof/trace\", pprof.Trace)\n-\tr.HandleFunc(\"/vars\", expVars)\n+\tr.Handle(\"/vars\", expvar.Handler())\n \n \tr.Handle(\"/pprof/goroutine\", pprof.Handler(\"goroutine\"))\n \tr.Handle(\"/pprof/threadcreate\", pprof.Handler(\"threadcreate\"))\n@@ -45,18 +44,3 @@ func Profiler() http.Handler {\n \n \treturn r\n }\n-\n-// Replicated from expvar.go as not public.\n-func expVars(w http.ResponseWriter, r *http.Request) {\n-\tfirst := true\n-\tw.Header().Set(\"Content-Type\", \"application/json\")\n-\tfmt.Fprintf(w, \"{\\n\")\n-\texpvar.Do(func(kv expvar.KeyValue) {\n-\t\tif !first {\n-\t\t\tfmt.Fprintf(w, \",\\n\")\n-\t\t}\n-\t\tfirst = false\n-\t\tfmt.Fprintf(w, \"%q: %s\", kv.Key, kv.Value)\n-\t})\n-\tfmt.Fprintf(w, \"\\n}\\n\")\n-}"
    },
    {
      "sha": "81342dfa7d8ce671774b717b51f143fbc1f72b50",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/recoverer.go",
      "status": "modified",
      "additions": 6,
      "deletions": 7,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Frecoverer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Frecoverer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Frecoverer.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -113,15 +113,14 @@ func (s prettyStack) decorateLine(line string, useColor bool, num int) (string,\n \tline = strings.TrimSpace(line)\n \tif strings.HasPrefix(line, \"\\t\") || strings.Contains(line, \".go:\") {\n \t\treturn s.decorateSourceLine(line, useColor, num)\n-\t} else if strings.HasSuffix(line, \")\") {\n+\t}\n+\tif strings.HasSuffix(line, \")\") {\n \t\treturn s.decorateFuncCallLine(line, useColor, num)\n-\t} else {\n-\t\tif strings.HasPrefix(line, \"\\t\") {\n-\t\t\treturn strings.Replace(line, \"\\t\", \"      \", 1), nil\n-\t\t} else {\n-\t\t\treturn fmt.Sprintf(\"    %s\\n\", line), nil\n-\t\t}\n \t}\n+\tif strings.HasPrefix(line, \"\\t\") {\n+\t\treturn strings.Replace(line, \"\\t\", \"      \", 1), nil\n+\t}\n+\treturn fmt.Sprintf(\"    %s\\n\", line), nil\n }\n \n func (s prettyStack) decorateFuncCallLine(line string, useColor bool, num int) (string, error) {"
    },
    {
      "sha": "997bed569ad89aec1f30765bfc6e868a7f232b6d",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/route_headers.go",
      "status": "modified",
      "additions": 24,
      "deletions": 33,
      "changes": 57,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Froute_headers.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Froute_headers.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Froute_headers.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -11,39 +11,34 @@ import (\n // For example, lets say you'd like to setup multiple routers depending on the\n // request Host header, you could then do something as so:\n //\n-// r := chi.NewRouter()\n-// rSubdomain := chi.NewRouter()\n-//\n-// r.Use(middleware.RouteHeaders().\n-//   Route(\"Host\", \"example.com\", middleware.New(r)).\n-//   Route(\"Host\", \"*.example.com\", middleware.New(rSubdomain)).\n-//   Handler)\n-//\n-// r.Get(\"/\", h)\n-// rSubdomain.Get(\"/\", h2)\n-//\n+//\tr := chi.NewRouter()\n+//\trSubdomain := chi.NewRouter()\n+//\tr.Use(middleware.RouteHeaders().\n+//\t\tRoute(\"Host\", \"example.com\", middleware.New(r)).\n+//\t\tRoute(\"Host\", \"*.example.com\", middleware.New(rSubdomain)).\n+//\t\tHandler)\n+//\tr.Get(\"/\", h)\n+//\trSubdomain.Get(\"/\", h2)\n //\n // Another example, imagine you want to setup multiple CORS handlers, where for\n // your origin servers you allow authorized requests, but for third-party public\n // requests, authorization is disabled.\n //\n-// r := chi.NewRouter()\n-//\n-// r.Use(middleware.RouteHeaders().\n-//   Route(\"Origin\", \"https://app.skyweaver.net\", cors.Handler(cors.Options{\n-// \t   AllowedOrigins:   []string{\"https://api.skyweaver.net\"},\n-// \t   AllowedMethods:   []string{\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"},\n-// \t   AllowedHeaders:   []string{\"Accept\", \"Authorization\", \"Content-Type\"},\n-// \t   AllowCredentials: true, // <----------<<< allow credentials\n-//   })).\n-//   Route(\"Origin\", \"*\", cors.Handler(cors.Options{\n-// \t   AllowedOrigins:   []string{\"*\"},\n-// \t   AllowedMethods:   []string{\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"},\n-// \t   AllowedHeaders:   []string{\"Accept\", \"Content-Type\"},\n-// \t   AllowCredentials: false, // <----------<<< do not allow credentials\n-//   })).\n-//   Handler)\n-//\n+//\tr := chi.NewRouter()\n+//\tr.Use(middleware.RouteHeaders().\n+//\t\tRoute(\"Origin\", \"https://app.skyweaver.net\", cors.Handler(cors.Options{\n+//\t\t\tAllowedOrigins:   []string{\"https://api.skyweaver.net\"},\n+//\t\t\tAllowedMethods:   []string{\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"},\n+//\t\t\tAllowedHeaders:   []string{\"Accept\", \"Authorization\", \"Content-Type\"},\n+//\t\t\tAllowCredentials: true, // <----------<<< allow credentials\n+//\t\t})).\n+//\t\tRoute(\"Origin\", \"*\", cors.Handler(cors.Options{\n+//\t\t\tAllowedOrigins:   []string{\"*\"},\n+//\t\t\tAllowedMethods:   []string{\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"},\n+//\t\t\tAllowedHeaders:   []string{\"Accept\", \"Content-Type\"},\n+//\t\t\tAllowCredentials: false, // <----------<<< do not allow credentials\n+//\t\t})).\n+//\t\tHandler)\n func RouteHeaders() HeaderRouter {\n \treturn HeaderRouter{}\n }\n@@ -150,11 +145,7 @@ func NewPattern(value string) Pattern {\n \n func (p Pattern) Match(v string) bool {\n \tif !p.wildcard {\n-\t\tif p.prefix == v {\n-\t\t\treturn true\n-\t\t} else {\n-\t\t\treturn false\n-\t\t}\n+\t\treturn p.prefix == v\n \t}\n \treturn len(v) >= len(p.prefix+p.suffix) && strings.HasPrefix(v, p.prefix) && strings.HasSuffix(v, p.suffix)\n }"
    },
    {
      "sha": "18815d585deced49ba649d4b341d3f05a082ead4",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/sunset.go",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fsunset.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fsunset.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fsunset.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,25 @@\n+package middleware\n+\n+import (\n+\t\"net/http\"\n+\t\"time\"\n+)\n+\n+// Sunset set Deprecation/Sunset header to response\n+// This can be used to enable Sunset in a route or a route group\n+// For more: https://www.rfc-editor.org/rfc/rfc8594.html\n+func Sunset(sunsetAt time.Time, links ...string) func(http.Handler) http.Handler {\n+\treturn func(next http.Handler) http.Handler {\n+\t\treturn http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n+\t\t\tif !sunsetAt.IsZero() {\n+\t\t\t\tw.Header().Set(\"Sunset\", sunsetAt.Format(http.TimeFormat))\n+\t\t\t\tw.Header().Set(\"Deprecation\", sunsetAt.Format(http.TimeFormat))\n+\n+\t\t\t\tfor _, link := range links {\n+\t\t\t\t\tw.Header().Add(\"Link\", link)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tnext.ServeHTTP(w, r)\n+\t\t})\n+\t}\n+}"
    },
    {
      "sha": "83a8a87215466adc7d849ead5832b25c94bf7532",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/supress_notfound.go",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fsupress_notfound.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fsupress_notfound.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fsupress_notfound.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,27 @@\n+package middleware\n+\n+import (\n+\t\"net/http\"\n+\n+\t\"github.com/go-chi/chi/v5\"\n+)\n+\n+// SupressNotFound will quickly respond with a 404 if the route is not found\n+// and will not continue to the next middleware handler.\n+//\n+// This is handy to put at the top of your middleware stack to avoid unnecessary\n+// processing of requests that are not going to match any routes anyway. For\n+// example its super annoying to see a bunch of 404's in your logs from bots.\n+func SupressNotFound(router *chi.Mux) func(next http.Handler) http.Handler {\n+\treturn func(next http.Handler) http.Handler {\n+\t\treturn http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n+\t\t\trctx := chi.RouteContext(r.Context())\n+\t\t\tmatch := rctx.Routes.Match(rctx, r.Method, r.URL.Path)\n+\t\t\tif !match {\n+\t\t\t\trouter.NotFoundHandler().ServeHTTP(w, r)\n+\t\t\t\treturn\n+\t\t\t}\n+\t\t\tnext.ServeHTTP(w, r)\n+\t\t})\n+\t}\n+}"
    },
    {
      "sha": "add596d69a529708a37e2b51434d3a97ed9da1f4",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/timeout.go",
      "status": "modified",
      "additions": 11,
      "deletions": 12,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Ftimeout.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Ftimeout.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Ftimeout.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -15,21 +15,20 @@ import (\n //\n // ie. a route/handler may look like:\n //\n-//  r.Get(\"/long\", func(w http.ResponseWriter, r *http.Request) {\n-// \t ctx := r.Context()\n-// \t processTime := time.Duration(rand.Intn(4)+1) * time.Second\n+//\tr.Get(\"/long\", func(w http.ResponseWriter, r *http.Request) {\n+//\t\tctx := r.Context()\n+//\t\tprocessTime := time.Duration(rand.Intn(4)+1) * time.Second\n //\n-// \t select {\n-// \t case <-ctx.Done():\n-// \t \treturn\n+//\t\tselect {\n+//\t\tcase <-ctx.Done():\n+//\t\t\treturn\n //\n-// \t case <-time.After(processTime):\n-// \t \t // The above channel simulates some hard work.\n-// \t }\n-//\n-// \t w.Write([]byte(\"done\"))\n-//  })\n+//\t\tcase <-time.After(processTime):\n+//\t\t\t// The above channel simulates some hard work.\n+//\t\t}\n //\n+//\t\tw.Write([]byte(\"done\"))\n+//\t})\n func Timeout(timeout time.Duration) func(next http.Handler) http.Handler {\n \treturn func(next http.Handler) http.Handler {\n \t\tfn := func(w http.ResponseWriter, r *http.Request) {"
    },
    {
      "sha": "d8a651e4ee3a4813112edc9608ab0ace2c974c78",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/url_format.go",
      "status": "modified",
      "additions": 18,
      "deletions": 19,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Furl_format.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Furl_format.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Furl_format.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -20,30 +20,29 @@ var (\n //\n // Routers should not include a url parameter for the suffix when using this middleware.\n //\n-// Sample usage.. for url paths: `/articles/1`, `/articles/1.json` and `/articles/1.xml`\n+// Sample usage for url paths `/articles/1`, `/articles/1.json` and `/articles/1.xml`:\n //\n-//  func routes() http.Handler {\n-//    r := chi.NewRouter()\n-//    r.Use(middleware.URLFormat)\n+//\tfunc routes() http.Handler {\n+//\t\tr := chi.NewRouter()\n+//\t\tr.Use(middleware.URLFormat)\n //\n-//    r.Get(\"/articles/{id}\", ListArticles)\n+//\t\tr.Get(\"/articles/{id}\", ListArticles)\n //\n-//    return r\n-//  }\n+//\t\treturn r\n+//\t}\n //\n-//  func ListArticles(w http.ResponseWriter, r *http.Request) {\n-// \t  urlFormat, _ := r.Context().Value(middleware.URLFormatCtxKey).(string)\n-//\n-// \t  switch urlFormat {\n-// \t  case \"json\":\n-// \t  \trender.JSON(w, r, articles)\n-// \t  case \"xml:\"\n-// \t  \trender.XML(w, r, articles)\n-// \t  default:\n-// \t  \trender.JSON(w, r, articles)\n-// \t  }\n-// }\n+//\tfunc ListArticles(w http.ResponseWriter, r *http.Request) {\n+//\t\turlFormat, _ := r.Context().Value(middleware.URLFormatCtxKey).(string)\n //\n+//\t\tswitch urlFormat {\n+//\t\tcase \"json\":\n+//\t\t\trender.JSON(w, r, articles)\n+//\t\tcase \"xml:\"\n+//\t\t\trender.XML(w, r, articles)\n+//\t\tdefault:\n+//\t\t\trender.JSON(w, r, articles)\n+//\t\t}\n+//\t}\n func URLFormat(next http.Handler) http.Handler {\n \tfn := func(w http.ResponseWriter, r *http.Request) {\n \t\tctx := r.Context()"
    },
    {
      "sha": "735ab2323978111fd5ed90c5cf9856b384146e17",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/mux.go",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmux.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -250,20 +250,19 @@ func (mx *Mux) With(middlewares ...func(http.Handler) http.Handler) Router {\n \treturn im\n }\n \n-// Group creates a new inline-Mux with a fresh middleware stack. It's useful\n+// Group creates a new inline-Mux with a copy of middleware stack. It's useful\n // for a group of handlers along the same routing path that use an additional\n // set of middlewares. See _examples/.\n func (mx *Mux) Group(fn func(r Router)) Router {\n-\tim := mx.With().(*Mux)\n+\tim := mx.With()\n \tif fn != nil {\n \t\tfn(im)\n \t}\n \treturn im\n }\n \n-// Route creates a new Mux with a fresh middleware stack and mounts it\n-// along the `pattern` as a subrouter. Effectively, this is a short-hand\n-// call to Mount. See _examples/.\n+// Route creates a new Mux and mounts it along the `pattern` as a subrouter.\n+// Effectively, this is a short-hand call to Mount. See _examples/.\n func (mx *Mux) Route(pattern string, fn func(r Router)) Router {\n \tif fn == nil {\n \t\tpanic(fmt.Sprintf(\"chi: attempting to Route() a nil subrouter on '%s'\", pattern))"
    },
    {
      "sha": "0ca145e3d0f1b2fdc89e419f4a50c06112445993",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/custom_server.go",
      "status": "modified",
      "additions": 12,
      "deletions": 9,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fcustom_server.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fcustom_server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fcustom_server.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2,6 +2,7 @@ package provider\n \n import (\n \t\"context\"\n+\t\"encoding/json\"\n \t\"fmt\"\n \t\"html/template\"\n \t\"net\"\n@@ -12,7 +13,6 @@ import (\n \t\"time\"\n \n \tgoauth2 \"github.com/go-oauth2/oauth2/v4/server\"\n-\t\"github.com/microcosm-cc/bluemonday\"\n \t\"golang.org/x/oauth2\"\n \n \t\"github.com/go-pkgz/auth/avatar\"\n@@ -160,16 +160,19 @@ func (c *CustomServer) handleUserInfo(w http.ResponseWriter, r *http.Request) {\n \t}\n \tuserID := ti.GetUserID()\n \n-\tp := bluemonday.UGCPolicy()\n-\tava := p.Sanitize(fmt.Sprintf(c.URL+\"/avatar?user=%s\", userID))\n-\tres := fmt.Sprintf(`{\n-\t\t\t\t\t\"id\": \"%s\",\n-\t\t\t\t\t\"name\":\"%s\",\n-\t\t\t\t\t\"picture\":\"%s\"\n-\t\t\t\t\t}`, userID, userID, ava)\n+\tuser := token.User{\n+\t\tID:      userID,\n+\t\tName:    userID,\n+\t\tPicture: fmt.Sprintf(c.URL+\"/avatar?user=%s\", url.QueryEscape(userID)),\n+\t}\n+\tres, err := json.Marshal(user)\n+\tif err != nil {\n+\t\tw.WriteHeader(http.StatusInternalServerError)\n+\t\treturn\n+\t}\n \n \tw.Header().Set(\"Content-Type\", \"application/json; charset=utf-8\")\n-\tif _, err := w.Write([]byte(res)); err != nil {\n+\tif _, err := w.Write(res); err != nil {\n \t\tw.WriteHeader(http.StatusInternalServerError)\n \t\treturn\n \t}"
    },
    {
      "sha": "8b0a03ddd9474da454fd23d1d698b369a0e97189",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/verify.go",
      "status": "modified",
      "additions": 7,
      "deletions": 16,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fverify.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fverify.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fverify.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -11,7 +11,6 @@ import (\n \n \t\"github.com/go-pkgz/rest\"\n \t\"github.com/golang-jwt/jwt\"\n-\t\"github.com/microcosm-cc/bluemonday\"\n \n \t\"github.com/go-pkgz/auth/avatar\"\n \t\"github.com/go-pkgz/auth/logger\"\n@@ -134,9 +133,7 @@ func (e VerifyHandler) LoginHandler(w http.ResponseWriter, r *http.Request) {\n // GET /login?site=site&user=name&address=someone@example.com\n func (e VerifyHandler) sendConfirmation(w http.ResponseWriter, r *http.Request) {\n \n-\tuser, address := r.URL.Query().Get(\"user\"), r.URL.Query().Get(\"address\")\n-\tuser = e.sanitize(user)\n-\taddress = e.sanitize(address)\n+\tuser, address, site := r.URL.Query().Get(\"user\"), r.URL.Query().Get(\"address\"), r.URL.Query().Get(\"site\")\n \n \tif user == \"\" || address == \"\" {\n \t\trest.SendErrorJSON(w, r, e.L, http.StatusBadRequest, fmt.Errorf(\"wrong request\"), \"can't get user and address\")\n@@ -150,7 +147,7 @@ func (e VerifyHandler) sendConfirmation(w http.ResponseWriter, r *http.Request)\n \t\t},\n \t\tSessionOnly: r.URL.Query().Get(\"session\") != \"\" && r.URL.Query().Get(\"session\") != \"0\",\n \t\tStandardClaims: jwt.StandardClaims{\n-\t\t\tAudience:  e.sanitize(r.URL.Query().Get(\"site\")),\n+\t\t\tAudience:  site,\n \t\t\tExpiresAt: time.Now().Add(30 * time.Minute).Unix(),\n \t\t\tNotBefore: time.Now().Add(-1 * time.Minute).Unix(),\n \t\t\tIssuer:    e.Issuer,\n@@ -179,10 +176,10 @@ func (e VerifyHandler) sendConfirmation(w http.ResponseWriter, r *http.Request)\n \t\tToken   string\n \t\tSite    string\n \t}{\n-\t\tUser:    user,\n-\t\tAddress: address,\n+\t\tUser:    trim(user),\n+\t\tAddress: trim(address),\n \t\tToken:   tkn,\n-\t\tSite:    r.URL.Query().Get(\"site\"),\n+\t\tSite:    site,\n \t}\n \tbuf := bytes.Buffer{}\n \tif err = emailTmpl.Execute(&buf, tmplData); err != nil {\n@@ -212,14 +209,8 @@ Confirmation for {{.User}} {{.Address}}, site {{.Site}}\n Token: {{.Token}}\n `\n \n-func (e VerifyHandler) sanitize(inp string) string {\n-\tp := bluemonday.UGCPolicy()\n-\tres := p.Sanitize(inp)\n-\tres = template.HTMLEscapeString(res)\n-\tres = strings.ReplaceAll(res, \"&amp;\", \"&\")\n-\tres = strings.ReplaceAll(res, \"&#34;\", \"\\\"\")\n-\tres = strings.ReplaceAll(res, \"&#39;\", \"'\")\n-\tres = strings.ReplaceAll(res, \"\\n\", \"\")\n+func trim(inp string) string {\n+\tres := strings.ReplaceAll(inp, \"\\n\", \"\")\n \tres = strings.TrimSpace(res)\n \tif len(res) > 128 {\n \t\treturn res[:128]"
    },
    {
      "sha": "d8156a60ba9b3affe8a7ebd9c1a7ca3a06674e55",
      "filename": "backend/vendor/github.com/google/uuid/.travis.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2F.travis.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2F.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2F.travis.yml?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,9 +0,0 @@\n-language: go\n-\n-go:\n-  - 1.4.3\n-  - 1.5.3\n-  - tip\n-\n-script:\n-  - go test -v ./..."
    },
    {
      "sha": "c9fb829dc64f4629f3f7b0efd249ebfd9ec0cb6a",
      "filename": "backend/vendor/github.com/google/uuid/CHANGELOG.md",
      "status": "added",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2FCHANGELOG.md",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2FCHANGELOG.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2FCHANGELOG.md?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,28 @@\n+# Changelog\n+\n+## [1.5.0](https://github.com/google/uuid/compare/v1.4.0...v1.5.0) (2023-12-12)\n+\n+\n+### Features\n+\n+* Validate UUID without creating new UUID ([#141](https://github.com/google/uuid/issues/141)) ([9ee7366](https://github.com/google/uuid/commit/9ee7366e66c9ad96bab89139418a713dc584ae29))\n+\n+## [1.4.0](https://github.com/google/uuid/compare/v1.3.1...v1.4.0) (2023-10-26)\n+\n+\n+### Features\n+\n+* UUIDs slice type with Strings() convenience method ([#133](https://github.com/google/uuid/issues/133)) ([cd5fbbd](https://github.com/google/uuid/commit/cd5fbbdd02f3e3467ac18940e07e062be1f864b4))\n+\n+### Fixes\n+\n+* Clarify that Parse's job is to parse but not necessarily validate strings. (Documents current behavior)\n+\n+## [1.3.1](https://github.com/google/uuid/compare/v1.3.0...v1.3.1) (2023-08-18)\n+\n+\n+### Bug Fixes\n+\n+* Use .EqualFold() to parse urn prefixed UUIDs ([#118](https://github.com/google/uuid/issues/118)) ([574e687](https://github.com/google/uuid/commit/574e6874943741fb99d41764c705173ada5293f0))\n+\n+## Changelog"
    },
    {
      "sha": "a502fdc515ac9a531558f10a70b32a47615e0c5a",
      "filename": "backend/vendor/github.com/google/uuid/CONTRIBUTING.md",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2FCONTRIBUTING.md",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2FCONTRIBUTING.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2FCONTRIBUTING.md?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2,6 +2,22 @@\n \n We definitely welcome patches and contribution to this project!\n \n+### Tips\n+\n+Commits must be formatted according to the [Conventional Commits Specification](https://www.conventionalcommits.org).\n+\n+Always try to include a test case! If it is not possible or not necessary,\n+please explain why in the pull request description.\n+\n+### Releasing\n+\n+Commits that would precipitate a SemVer change, as described in the Conventional\n+Commits Specification, will trigger [`release-please`](https://github.com/google-github-actions/release-please-action)\n+to create a release candidate pull request. Once submitted, `release-please`\n+will create a release.\n+\n+For tips on how to work with `release-please`, see its documentation.\n+\n ### Legal requirements\n \n In order to protect both you and ourselves, you will need to sign the"
    },
    {
      "sha": "3e9a61889de488f76a1812bd2f6cbba0f6c4f2aa",
      "filename": "backend/vendor/github.com/google/uuid/README.md",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2FREADME.md?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,6 +1,6 @@\n-# uuid ![build status](https://travis-ci.org/google/uuid.svg?branch=master)\n+# uuid\n The uuid package generates and inspects UUIDs based on\n-[RFC 4122](http://tools.ietf.org/html/rfc4122)\n+[RFC 4122](https://datatracker.ietf.org/doc/html/rfc4122)\n and DCE 1.1: Authentication and Security Services. \n \n This package is based on the github.com/pborman/uuid package (previously named\n@@ -9,10 +9,12 @@ a UUID is a 16 byte array rather than a byte slice.  One loss due to this\n change is the ability to represent an invalid UUID (vs a NIL UUID).\n \n ###### Install\n-`go get github.com/google/uuid`\n+```sh\n+go get github.com/google/uuid\n+```\n \n ###### Documentation \n-[![GoDoc](https://godoc.org/github.com/google/uuid?status.svg)](http://godoc.org/github.com/google/uuid)\n+[![Go Reference](https://pkg.go.dev/badge/github.com/google/uuid.svg)](https://pkg.go.dev/github.com/google/uuid)\n \n Full `go doc` style documentation for the package can be viewed online without\n installing this package by using the GoDoc site here: "
    },
    {
      "sha": "b2a0bc8711b3dcab80f2b96050b318b5748cff70",
      "filename": "backend/vendor/github.com/google/uuid/node_js.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Fnode_js.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Fnode_js.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Fnode_js.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -7,6 +7,6 @@\n package uuid\n \n // getHardwareInterface returns nil values for the JS version of the code.\n-// This remvoves the \"net\" dependency, because it is not used in the browser.\n+// This removes the \"net\" dependency, because it is not used in the browser.\n // Using the \"net\" library inflates the size of the transpiled JS code by 673k bytes.\n func getHardwareInterface(name string) (string, []byte) { return \"\", nil }"
    },
    {
      "sha": "c351129279f32127baf9415e3fdb018ac55f9760",
      "filename": "backend/vendor/github.com/google/uuid/time.go",
      "status": "modified",
      "additions": 16,
      "deletions": 5,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Ftime.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Ftime.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Ftime.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -108,12 +108,23 @@ func setClockSequence(seq int) {\n }\n \n // Time returns the time in 100s of nanoseconds since 15 Oct 1582 encoded in\n-// uuid.  The time is only defined for version 1 and 2 UUIDs.\n+// uuid.  The time is only defined for version 1, 2, 6 and 7 UUIDs.\n func (uuid UUID) Time() Time {\n-\ttime := int64(binary.BigEndian.Uint32(uuid[0:4]))\n-\ttime |= int64(binary.BigEndian.Uint16(uuid[4:6])) << 32\n-\ttime |= int64(binary.BigEndian.Uint16(uuid[6:8])&0xfff) << 48\n-\treturn Time(time)\n+\tvar t Time\n+\tswitch uuid.Version() {\n+\tcase 6:\n+\t\ttime := binary.BigEndian.Uint64(uuid[:8]) // Ignore uuid[6] version b0110\n+\t\tt = Time(time)\n+\tcase 7:\n+\t\ttime := binary.BigEndian.Uint64(uuid[:8])\n+\t\tt = Time((time>>16)*10000 + g1582ns100)\n+\tdefault: // forward compatible\n+\t\ttime := int64(binary.BigEndian.Uint32(uuid[0:4]))\n+\t\ttime |= int64(binary.BigEndian.Uint16(uuid[4:6])) << 32\n+\t\ttime |= int64(binary.BigEndian.Uint16(uuid[6:8])&0xfff) << 48\n+\t\tt = Time(time)\n+\t}\n+\treturn t\n }\n \n // ClockSequence returns the clock sequence encoded in uuid."
    },
    {
      "sha": "5232b486780d605d2c6bcc0b268bf93ba4e309c8",
      "filename": "backend/vendor/github.com/google/uuid/uuid.go",
      "status": "modified",
      "additions": 80,
      "deletions": 9,
      "changes": 89,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Fuuid.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Fuuid.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Fuuid.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -56,11 +56,15 @@ func IsInvalidLengthError(err error) bool {\n \treturn ok\n }\n \n-// Parse decodes s into a UUID or returns an error.  Both the standard UUID\n-// forms of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx and\n-// urn:uuid:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx are decoded as well as the\n-// Microsoft encoding {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx} and the raw hex\n-// encoding: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.\n+// Parse decodes s into a UUID or returns an error if it cannot be parsed.  Both\n+// the standard UUID forms defined in RFC 4122\n+// (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx and\n+// urn:uuid:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx) are decoded.  In addition,\n+// Parse accepts non-standard strings such as the raw hex encoding\n+// xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx and 38 byte \"Microsoft style\" encodings,\n+// e.g.  {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}.  Only the middle 36 bytes are\n+// examined in the latter case.  Parse should not be used to validate strings as\n+// it parses non-standard encodings as indicated above.\n func Parse(s string) (UUID, error) {\n \tvar uuid UUID\n \tswitch len(s) {\n@@ -69,7 +73,7 @@ func Parse(s string) (UUID, error) {\n \n \t// urn:uuid:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n \tcase 36 + 9:\n-\t\tif strings.ToLower(s[:9]) != \"urn:uuid:\" {\n+\t\tif !strings.EqualFold(s[:9], \"urn:uuid:\") {\n \t\t\treturn uuid, fmt.Errorf(\"invalid urn prefix: %q\", s[:9])\n \t\t}\n \t\ts = s[9:]\n@@ -101,7 +105,8 @@ func Parse(s string) (UUID, error) {\n \t\t9, 11,\n \t\t14, 16,\n \t\t19, 21,\n-\t\t24, 26, 28, 30, 32, 34} {\n+\t\t24, 26, 28, 30, 32, 34,\n+\t} {\n \t\tv, ok := xtob(s[x], s[x+1])\n \t\tif !ok {\n \t\t\treturn uuid, errors.New(\"invalid UUID format\")\n@@ -117,7 +122,7 @@ func ParseBytes(b []byte) (UUID, error) {\n \tswitch len(b) {\n \tcase 36: // xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n \tcase 36 + 9: // urn:uuid:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n-\t\tif !bytes.Equal(bytes.ToLower(b[:9]), []byte(\"urn:uuid:\")) {\n+\t\tif !bytes.EqualFold(b[:9], []byte(\"urn:uuid:\")) {\n \t\t\treturn uuid, fmt.Errorf(\"invalid urn prefix: %q\", b[:9])\n \t\t}\n \t\tb = b[9:]\n@@ -145,7 +150,8 @@ func ParseBytes(b []byte) (UUID, error) {\n \t\t9, 11,\n \t\t14, 16,\n \t\t19, 21,\n-\t\t24, 26, 28, 30, 32, 34} {\n+\t\t24, 26, 28, 30, 32, 34,\n+\t} {\n \t\tv, ok := xtob(b[x], b[x+1])\n \t\tif !ok {\n \t\t\treturn uuid, errors.New(\"invalid UUID format\")\n@@ -180,6 +186,59 @@ func Must(uuid UUID, err error) UUID {\n \treturn uuid\n }\n \n+// Validate returns an error if s is not a properly formatted UUID in one of the following formats:\n+//   xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+//   urn:uuid:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+//   xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n+//   {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}\n+// It returns an error if the format is invalid, otherwise nil.\n+func Validate(s string) error {\n+\tswitch len(s) {\n+\t// Standard UUID format\n+\tcase 36:\n+\n+\t// UUID with \"urn:uuid:\" prefix\n+\tcase 36 + 9:\n+\t\tif !strings.EqualFold(s[:9], \"urn:uuid:\") {\n+\t\t\treturn fmt.Errorf(\"invalid urn prefix: %q\", s[:9])\n+\t\t}\n+\t\ts = s[9:]\n+\n+\t// UUID enclosed in braces\n+\tcase 36 + 2:\n+\t\tif s[0] != '{' || s[len(s)-1] != '}' {\n+\t\t\treturn fmt.Errorf(\"invalid bracketed UUID format\")\n+\t\t}\n+\t\ts = s[1 : len(s)-1]\n+\n+\t// UUID without hyphens\n+\tcase 32:\n+\t\tfor i := 0; i < len(s); i += 2 {\n+\t\t\t_, ok := xtob(s[i], s[i+1])\n+\t\t\tif !ok {\n+\t\t\t\treturn errors.New(\"invalid UUID format\")\n+\t\t\t}\n+\t\t}\n+\n+\tdefault:\n+\t\treturn invalidLengthError{len(s)}\n+\t}\n+\n+\t// Check for standard UUID format\n+\tif len(s) == 36 {\n+\t\tif s[8] != '-' || s[13] != '-' || s[18] != '-' || s[23] != '-' {\n+\t\t\treturn errors.New(\"invalid UUID format\")\n+\t\t}\n+\t\tfor _, x := range []int{0, 2, 4, 6, 9, 11, 14, 16, 19, 21, 24, 26, 28, 30, 32, 34} {\n+\t\t\tif _, ok := xtob(s[x], s[x+1]); !ok {\n+\t\t\t\treturn errors.New(\"invalid UUID format\")\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\treturn nil\n+}\n+\n // String returns the string form of uuid, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n // , or \"\" if uuid is invalid.\n func (uuid UUID) String() string {\n@@ -292,3 +351,15 @@ func DisableRandPool() {\n \tpoolMu.Lock()\n \tpoolPos = randPoolSize\n }\n+\n+// UUIDs is a slice of UUID types.\n+type UUIDs []UUID\n+\n+// Strings returns a string slice containing the string form of each UUID in uuids.\n+func (uuids UUIDs) Strings() []string {\n+\tvar uuidStrs = make([]string, len(uuids))\n+\tfor i, uuid := range uuids {\n+\t\tuuidStrs[i] = uuid.String()\n+\t}\n+\treturn uuidStrs\n+}"
    },
    {
      "sha": "339a959a7a2629181683466d3bef1edc83c9db28",
      "filename": "backend/vendor/github.com/google/uuid/version6.go",
      "status": "added",
      "additions": 56,
      "deletions": 0,
      "changes": 56,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Fversion6.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Fversion6.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Fversion6.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,56 @@\n+// Copyright 2023 Google Inc.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package uuid\n+\n+import \"encoding/binary\"\n+\n+// UUID version 6 is a field-compatible version of UUIDv1, reordered for improved DB locality.\n+// It is expected that UUIDv6 will primarily be used in contexts where there are existing v1 UUIDs.\n+// Systems that do not involve legacy UUIDv1 SHOULD consider using UUIDv7 instead.\n+//\n+// see https://datatracker.ietf.org/doc/html/draft-peabody-dispatch-new-uuid-format-03#uuidv6\n+//\n+// NewV6 returns a Version 6 UUID based on the current NodeID and clock\n+// sequence, and the current time. If the NodeID has not been set by SetNodeID\n+// or SetNodeInterface then it will be set automatically. If the NodeID cannot\n+// be set NewV6 set NodeID is random bits automatically . If clock sequence has not been set by\n+// SetClockSequence then it will be set automatically. If GetTime fails to\n+// return the current NewV6 returns Nil and an error.\n+func NewV6() (UUID, error) {\n+\tvar uuid UUID\n+\tnow, seq, err := GetTime()\n+\tif err != nil {\n+\t\treturn uuid, err\n+\t}\n+\n+\t/*\n+\t    0                   1                   2                   3\n+\t    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+\t   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+\t   |                           time_high                           |\n+\t   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+\t   |           time_mid            |      time_low_and_version     |\n+\t   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+\t   |clk_seq_hi_res |  clk_seq_low  |         node (0-1)            |\n+\t   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+\t   |                         node (2-5)                            |\n+\t   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+\t*/\n+\n+\tbinary.BigEndian.PutUint64(uuid[0:], uint64(now))\n+\tbinary.BigEndian.PutUint16(uuid[8:], seq)\n+\n+\tuuid[6] = 0x60 | (uuid[6] & 0x0F)\n+\tuuid[8] = 0x80 | (uuid[8] & 0x3F)\n+\n+\tnodeMu.Lock()\n+\tif nodeID == zeroID {\n+\t\tsetNodeInterface(\"\")\n+\t}\n+\tcopy(uuid[10:], nodeID[:])\n+\tnodeMu.Unlock()\n+\n+\treturn uuid, nil\n+}"
    },
    {
      "sha": "ba9dd5eb689b9bd3f2e547ed19b79655eac20822",
      "filename": "backend/vendor/github.com/google/uuid/version7.go",
      "status": "added",
      "additions": 75,
      "deletions": 0,
      "changes": 75,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Fversion7.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Fversion7.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgoogle%2Fuuid%2Fversion7.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,75 @@\n+// Copyright 2023 Google Inc.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package uuid\n+\n+import (\n+\t\"io\"\n+)\n+\n+// UUID version 7 features a time-ordered value field derived from the widely\n+// implemented and well known Unix Epoch timestamp source,\n+// the number of milliseconds seconds since midnight 1 Jan 1970 UTC, leap seconds excluded.\n+// As well as improved entropy characteristics over versions 1 or 6.\n+//\n+// see https://datatracker.ietf.org/doc/html/draft-peabody-dispatch-new-uuid-format-03#name-uuid-version-7\n+//\n+// Implementations SHOULD utilize UUID version 7 over UUID version 1 and 6 if possible.\n+//\n+// NewV7 returns a Version 7 UUID based on the current time(Unix Epoch).\n+// Uses the randomness pool if it was enabled with EnableRandPool.\n+// On error, NewV7 returns Nil and an error\n+func NewV7() (UUID, error) {\n+\tuuid, err := NewRandom()\n+\tif err != nil {\n+\t\treturn uuid, err\n+\t}\n+\tmakeV7(uuid[:])\n+\treturn uuid, nil\n+}\n+\n+// NewV7FromReader returns a Version 7 UUID based on the current time(Unix Epoch).\n+// it use NewRandomFromReader fill random bits.\n+// On error, NewV7FromReader returns Nil and an error.\n+func NewV7FromReader(r io.Reader) (UUID, error) {\n+\tuuid, err := NewRandomFromReader(r)\n+\tif err != nil {\n+\t\treturn uuid, err\n+\t}\n+\n+\tmakeV7(uuid[:])\n+\treturn uuid, nil\n+}\n+\n+// makeV7 fill 48 bits time (uuid[0] - uuid[5]), set version b0111 (uuid[6])\n+// uuid[8] already has the right version number (Variant is 10)\n+// see function  NewV7 and NewV7FromReader\n+func makeV7(uuid []byte) {\n+\t/*\n+\t\t 0                   1                   2                   3\n+\t\t 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+\t\t+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+\t\t|                           unix_ts_ms                          |\n+\t\t+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+\t\t|          unix_ts_ms           |  ver  |       rand_a          |\n+\t\t+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+\t\t|var|                        rand_b                             |\n+\t\t+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+\t\t|                            rand_b                             |\n+\t\t+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+\t*/\n+\t_ = uuid[15] // bounds check\n+\n+\tt := timeNow().UnixMilli()\n+\n+\tuuid[0] = byte(t >> 40)\n+\tuuid[1] = byte(t >> 32)\n+\tuuid[2] = byte(t >> 24)\n+\tuuid[3] = byte(t >> 16)\n+\tuuid[4] = byte(t >> 8)\n+\tuuid[5] = byte(t)\n+\n+\tuuid[6] = 0x70 | (uuid[6] & 0x0F)\n+\t// uuid[8] has already has right version\n+}"
    },
    {
      "sha": "2940ec92ac2d4ffd06946bb5156be411fc0f8615",
      "filename": "backend/vendor/github.com/gorilla/feeds/.editorconfig",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2F.editorconfig",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2F.editorconfig",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2F.editorconfig?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,20 @@\n+; https://editorconfig.org/\n+\n+root = true\n+\n+[*]\n+insert_final_newline = true\n+charset = utf-8\n+trim_trailing_whitespace = true\n+indent_style = space\n+indent_size = 2\n+\n+[{Makefile,go.mod,go.sum,*.go,.gitmodules}]\n+indent_style = tab\n+indent_size = 4\n+\n+[*.md]\n+indent_size = 4\n+trim_trailing_whitespace = false\n+\n+eclint_indent_style = unset"
    },
    {
      "sha": "84039fec68771bc54be8f70617692068532536d2",
      "filename": "backend/vendor/github.com/gorilla/feeds/.gitignore",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2F.gitignore",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2F.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2F.gitignore?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1 @@\n+coverage.coverprofile"
    },
    {
      "sha": "7939a2186638da49e979fb7b5650014205cbd2a8",
      "filename": "backend/vendor/github.com/gorilla/feeds/.travis.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2F.travis.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2F.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2F.travis.yml?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,16 +0,0 @@\n-language: go\n-sudo: false\n-matrix:\n-  include:\n-    - go: 1.8\n-    - go: 1.9\n-    - go: \"1.10\"\n-    - go: 1.x\n-    - go: tip\n-  allow_failures:\n-    - go: tip\n-script:\n-  - go get -t -v ./...\n-  - diff -u <(echo -n) <(gofmt -d -s .)\n-  - go vet .\n-  - go test -v -race ./..."
    },
    {
      "sha": "2c28cf943ae98b061d3bb5840454f3703afbe03f",
      "filename": "backend/vendor/github.com/gorilla/feeds/AUTHORS",
      "status": "removed",
      "additions": 0,
      "deletions": 29,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2FAUTHORS",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2FAUTHORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2FAUTHORS?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,29 +0,0 @@\n-# This is the official list of gorilla/feeds authors for copyright purposes.\n-# Please keep the list sorted.\n-\n-Dmitry Chestnykh <dmitry@codingrobots.com>\n-Eddie Scholtz <eascholtz@gmail.com>\n-Gabriel Simmer <bladesimmer@gmail.com>\n-Google LLC (https://opensource.google.com/)\n-honky <honky@defendtheplanet.net>\n-James Gregory <james@jagregory.com>\n-Jason Hall <imjasonh@gmail.com>\n-Jason Moiron <jmoiron@jmoiron.net>\n-Kamil Kisiel <kamil@kamilkisiel.net>\n-Kevin Stock <kevinstock@tantalic.com>\n-Markus Zimmermann <markus.zimmermann@nethead.at>\n-Matt Silverlock <matt@eatsleeprepeat.net>\n-Matthew Dawson <matthew@mjdsystems.ca>\n-Milan Aleksic <milanaleksic@gmail.com>\n-Milan Aleksić <milanaleksic@gmail.com>\n-nlimpid <jshuangzl@gmail.com>\n-Paul Petring <paul@defendtheplanet.net>\n-Sean Enck <enckse@users.noreply.github.com>\n-Sue Spence <virtuallysue@gmail.com>\n-Supermighty <ukiah@faction.com>\n-Toru Fukui <fukuimone@gmail.com>\n-Vabd <vabd@anon.acme>\n-Volker <lists.volker@gmail.com>\n-ZhiFeng Hu <hufeng1987@gmail.com>\n-weberc2 <weberc2@gmail.com>\n-"
    },
    {
      "sha": "ee0d53ceff909ce443558a0dc5fd94e74dca1e2b",
      "filename": "backend/vendor/github.com/gorilla/feeds/LICENSE",
      "status": "modified",
      "additions": 23,
      "deletions": 17,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2FLICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2FLICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2FLICENSE?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,22 +1,28 @@\n-Copyright (c) 2013-2018 The Gorilla Feeds Authors. All rights reserved.\n+Copyright (c) 2023 The Gorilla Authors. All rights reserved.\n \n Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n+modification, are permitted provided that the following conditions are\n+met:\n \n-  Redistributions of source code must retain the above copyright notice, this\n-  list of conditions and the following disclaimer.\n+\t * Redistributions of source code must retain the above copyright\n+notice, this list of conditions and the following disclaimer.\n+\t * Redistributions in binary form must reproduce the above\n+copyright notice, this list of conditions and the following disclaimer\n+in the documentation and/or other materials provided with the\n+distribution.\n+\t * Neither the name of Google Inc. nor the names of its\n+contributors may be used to endorse or promote products derived from\n+this software without specific prior written permission.\n \n-  Redistributions in binary form must reproduce the above copyright notice,\n-  this list of conditions and the following disclaimer in the documentation\n-  and/or other materials provided with the distribution.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n-FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n-DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n-SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n-CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n-OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+"
    },
    {
      "sha": "ac37ffd329786c0933865b532951bd64b59218ae",
      "filename": "backend/vendor/github.com/gorilla/feeds/Makefile",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2FMakefile",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2FMakefile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2FMakefile?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,34 @@\n+GO_LINT=$(shell which golangci-lint 2> /dev/null || echo '')\n+GO_LINT_URI=github.com/golangci/golangci-lint/cmd/golangci-lint@latest\n+\n+GO_SEC=$(shell which gosec 2> /dev/null || echo '')\n+GO_SEC_URI=github.com/securego/gosec/v2/cmd/gosec@latest\n+\n+GO_VULNCHECK=$(shell which govulncheck 2> /dev/null || echo '')\n+GO_VULNCHECK_URI=golang.org/x/vuln/cmd/govulncheck@latest\n+\n+.PHONY: golangci-lint\n+golangci-lint:\n+\t$(if $(GO_LINT), ,go install $(GO_LINT_URI))\n+\t@echo \"##### Running golangci-lint\"\n+\tgolangci-lint run -v\n+\n+.PHONY: gosec\n+gosec:\n+\t$(if $(GO_SEC), ,go install $(GO_SEC_URI))\n+\t@echo \"##### Running gosec\"\n+\tgosec ./...\n+\n+.PHONY: govulncheck\n+govulncheck:\n+\t$(if $(GO_VULNCHECK), ,go install $(GO_VULNCHECK_URI))\n+\t@echo \"##### Running govulncheck\"\n+\tgovulncheck ./...\n+\n+.PHONY: verify\n+verify: golangci-lint gosec govulncheck\n+\n+.PHONY: test\n+test:\n+\t@echo \"##### Running tests\"\n+\tgo test -race -cover -coverprofile=coverage.coverprofile -covermode=atomic -v ./..."
    },
    {
      "sha": "7d7137b46d6838511dbed5678b22655eb68c3f18",
      "filename": "backend/vendor/github.com/gorilla/feeds/README.md",
      "status": "modified",
      "additions": 19,
      "deletions": 6,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2FREADME.md?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,6 +1,10 @@\n ## gorilla/feeds\n-[![GoDoc](https://godoc.org/github.com/gorilla/feeds?status.svg)](https://godoc.org/github.com/gorilla/feeds)\n-[![Build Status](https://travis-ci.org/gorilla/feeds.svg?branch=master)](https://travis-ci.org/gorilla/feeds)\n+![testing](https://github.com/gorilla/feeds/actions/workflows/test.yml/badge.svg)\n+[![codecov](https://codecov.io/github/gorilla/feeds/branch/main/graph/badge.svg)](https://codecov.io/github/gorilla/feeds)\n+[![godoc](https://godoc.org/github.com/gorilla/feeds?status.svg)](https://godoc.org/github.com/gorilla/feeds)\n+[![sourcegraph](https://sourcegraph.com/github.com/gorilla/feeds/-/badge.svg)](https://sourcegraph.com/github.com/gorilla/feeds?badge)\n+\n+![Gorilla Logo](https://github.com/gorilla/.github/assets/53367916/d92caabf-98e0-473e-bfbf-ab554ba435e5)\n \n feeds is a web feed generator library for generating RSS, Atom and JSON feeds from Go\n applications.\n@@ -13,7 +17,7 @@ applications.\n \n [atom]: https://tools.ietf.org/html/rfc4287\n [rss]: http://www.rssboard.org/rss-specification\n-[jsonfeed]: https://jsonfeed.org/version/1\n+[jsonfeed]: https://jsonfeed.org/version/1.1\n \n ### Usage\n \n@@ -147,13 +151,18 @@ Outputs:\n </rss>\n \n {\n-  \"version\": \"https://jsonfeed.org/version/1\",\n+  \"version\": \"https://jsonfeed.org/version/1.1\",\n   \"title\": \"jmoiron.net blog\",\n   \"home_page_url\": \"http://jmoiron.net/blog\",\n   \"description\": \"discussion about tech, footie, photos\",\n   \"author\": {\n     \"name\": \"Jason Moiron\"\n   },\n+  \"authors\": [\n+    {\n+      \"name\": \"Jason Moiron\"\n+    }\n+  ],\n   \"items\": [\n     {\n       \"id\": \"\",\n@@ -163,7 +172,12 @@ Outputs:\n       \"date_published\": \"2013-01-16T03:22:24.530817846-05:00\",\n       \"author\": {\n         \"name\": \"Jason Moiron\"\n-      }\n+      },\n+      \"authors\": [\n+        {\n+          \"name\": \"Jason Moiron\"\n+        }\n+      ]\n     },\n     {\n       \"id\": \"\",\n@@ -182,4 +196,3 @@ Outputs:\n   ]\n }\n ```\n-"
    },
    {
      "sha": "73de995c163ec9c093646bcab6afd770cce05c94",
      "filename": "backend/vendor/github.com/gorilla/feeds/atom.go",
      "status": "modified",
      "additions": 20,
      "deletions": 11,
      "changes": 31,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Fatom.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Fatom.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Fatom.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -89,15 +89,16 @@ type Atom struct {\n \n func newAtomEntry(i *Item) *AtomEntry {\n \tid := i.Id\n-\t// assume the description is html\n-\ts := &AtomSummary{Content: i.Description, Type: \"html\"}\n-\n+\tlink := i.Link\n+\tif link == nil {\n+\t\tlink = &Link{}\n+\t}\n \tif len(id) == 0 {\n \t\t// if there's no id set, try to create one, either from data or just a uuid\n-\t\tif len(i.Link.Href) > 0 && (!i.Created.IsZero() || !i.Updated.IsZero()) {\n+\t\tif len(link.Href) > 0 && (!i.Created.IsZero() || !i.Updated.IsZero()) {\n \t\t\tdateStr := anyTimeFormat(\"2006-01-02\", i.Updated, i.Created)\n-\t\t\thost, path := i.Link.Href, \"/invalid.html\"\n-\t\t\tif url, err := url.Parse(i.Link.Href); err == nil {\n+\t\t\thost, path := link.Href, \"/invalid.html\"\n+\t\t\tif url, err := url.Parse(link.Href); err == nil {\n \t\t\t\thost, path = url.Host, url.Path\n \t\t\t}\n \t\t\tid = fmt.Sprintf(\"tag:%s,%s:%s\", host, dateStr, path)\n@@ -110,16 +111,20 @@ func newAtomEntry(i *Item) *AtomEntry {\n \t\tname, email = i.Author.Name, i.Author.Email\n \t}\n \n-\tlink_rel := i.Link.Rel\n+\tlink_rel := link.Rel\n \tif link_rel == \"\" {\n \t\tlink_rel = \"alternate\"\n \t}\n \tx := &AtomEntry{\n \t\tTitle:   i.Title,\n-\t\tLinks:   []AtomLink{{Href: i.Link.Href, Rel: link_rel, Type: i.Link.Type}},\n+\t\tLinks:   []AtomLink{{Href: link.Href, Rel: link_rel, Type: link.Type}},\n \t\tId:      id,\n \t\tUpdated: anyTimeFormat(time.RFC3339, i.Updated, i.Created),\n-\t\tSummary: s,\n+\t}\n+\n+\t// if there's a description, assume it's html\n+\tif len(i.Description) > 0 {\n+\t\tx.Summary = &AtomSummary{Content: i.Description, Type: \"html\"}\n \t}\n \n \t// if there's a content, assume it's html\n@@ -140,12 +145,16 @@ func newAtomEntry(i *Item) *AtomEntry {\n // create a new AtomFeed with a generic Feed struct's data\n func (a *Atom) AtomFeed() *AtomFeed {\n \tupdated := anyTimeFormat(time.RFC3339, a.Updated, a.Created)\n+\tlink := a.Link\n+\tif link == nil {\n+\t\tlink = &Link{}\n+\t}\n \tfeed := &AtomFeed{\n \t\tXmlns:    ns,\n \t\tTitle:    a.Title,\n-\t\tLink:     &AtomLink{Href: a.Link.Href, Rel: a.Link.Rel},\n+\t\tLink:     &AtomLink{Href: link.Href, Rel: link.Rel},\n \t\tSubtitle: a.Description,\n-\t\tId:       a.Link.Href,\n+\t\tId:       link.Href,\n \t\tUpdated:  updated,\n \t\tRights:   a.Copyright,\n \t}"
    },
    {
      "sha": "ae5deb76d5a694a3e05347ec09a8c7a21c03e23f",
      "filename": "backend/vendor/github.com/gorilla/feeds/json.go",
      "status": "modified",
      "additions": 24,
      "deletions": 17,
      "changes": 41,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Fjson.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Fjson.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Fjson.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -6,7 +6,7 @@ import (\n \t\"time\"\n )\n \n-const jsonFeedVersion = \"https://jsonfeed.org/version/1\"\n+const jsonFeedVersion = \"https://jsonfeed.org/version/1.1\"\n \n // JSONAuthor represents the author of the feed or of an individual item\n // in the feed\n@@ -77,7 +77,8 @@ type JSONItem struct {\n \tBannerImage   string           `json:\"banner_,omitempty\"`\n \tPublishedDate *time.Time       `json:\"date_published,omitempty\"`\n \tModifiedDate  *time.Time       `json:\"date_modified,omitempty\"`\n-\tAuthor        *JSONAuthor      `json:\"author,omitempty\"`\n+\tAuthor        *JSONAuthor      `json:\"author,omitempty\"` // deprecated in JSON Feed v1.1, keeping for backwards compatibility\n+\tAuthors       []*JSONAuthor    `json:\"authors,omitempty\"`\n \tTags          []string         `json:\"tags,omitempty\"`\n \tAttachments   []JSONAttachment `json:\"attachments,omitempty\"`\n }\n@@ -92,19 +93,21 @@ type JSONHub struct {\n // JSONFeed represents a syndication feed in the JSON Feed Version 1 format.\n // Matching the specification found here: https://jsonfeed.org/version/1.\n type JSONFeed struct {\n-\tVersion     string      `json:\"version\"`\n-\tTitle       string      `json:\"title\"`\n-\tHomePageUrl string      `json:\"home_page_url,omitempty\"`\n-\tFeedUrl     string      `json:\"feed_url,omitempty\"`\n-\tDescription string      `json:\"description,omitempty\"`\n-\tUserComment string      `json:\"user_comment,omitempty\"`\n-\tNextUrl     string      `json:\"next_url,omitempty\"`\n-\tIcon        string      `json:\"icon,omitempty\"`\n-\tFavicon     string      `json:\"favicon,omitempty\"`\n-\tAuthor      *JSONAuthor `json:\"author,omitempty\"`\n-\tExpired     *bool       `json:\"expired,omitempty\"`\n-\tHubs        []*JSONItem `json:\"hubs,omitempty\"`\n-\tItems       []*JSONItem `json:\"items,omitempty\"`\n+\tVersion     string        `json:\"version\"`\n+\tTitle       string        `json:\"title\"`\n+\tLanguage    string        `json:\"language,omitempty\"`\n+\tHomePageUrl string        `json:\"home_page_url,omitempty\"`\n+\tFeedUrl     string        `json:\"feed_url,omitempty\"`\n+\tDescription string        `json:\"description,omitempty\"`\n+\tUserComment string        `json:\"user_comment,omitempty\"`\n+\tNextUrl     string        `json:\"next_url,omitempty\"`\n+\tIcon        string        `json:\"icon,omitempty\"`\n+\tFavicon     string        `json:\"favicon,omitempty\"`\n+\tAuthor      *JSONAuthor   `json:\"author,omitempty\"` // deprecated in JSON Feed v1.1, keeping for backwards compatibility\n+\tAuthors     []*JSONAuthor `json:\"authors,omitempty\"`\n+\tExpired     *bool         `json:\"expired,omitempty\"`\n+\tHubs        []*JSONHub    `json:\"hubs,omitempty\"`\n+\tItems       []*JSONItem   `json:\"items,omitempty\"`\n }\n \n // JSON is used to convert a generic Feed to a JSONFeed.\n@@ -139,9 +142,11 @@ func (f *JSON) JSONFeed() *JSONFeed {\n \t\tfeed.HomePageUrl = f.Link.Href\n \t}\n \tif f.Author != nil {\n-\t\tfeed.Author = &JSONAuthor{\n+\t\tauthor := &JSONAuthor{\n \t\t\tName: f.Author.Name,\n \t\t}\n+\t\tfeed.Author = author\n+\t\tfeed.Authors = []*JSONAuthor{author}\n \t}\n \tfor _, e := range f.Items {\n \t\tfeed.Items = append(feed.Items, newJSONItem(e))\n@@ -165,9 +170,11 @@ func newJSONItem(i *Item) *JSONItem {\n \t\titem.ExternalUrl = i.Source.Href\n \t}\n \tif i.Author != nil {\n-\t\titem.Author = &JSONAuthor{\n+\t\tauthor := &JSONAuthor{\n \t\t\tName: i.Author.Name,\n \t\t}\n+\t\titem.Author = author\n+\t\titem.Authors = []*JSONAuthor{author}\n \t}\n \tif !i.Created.IsZero() {\n \t\titem.PublishedDate = &i.Created"
    },
    {
      "sha": "8c227a8b7fe80922b24fd5409a16c1c89e1c9b00",
      "filename": "backend/vendor/github.com/gorilla/feeds/rss.go",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Frss.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Frss.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Frss.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -95,11 +95,13 @@ type Rss struct {\n func newRssItem(i *Item) *RssItem {\n \titem := &RssItem{\n \t\tTitle:       i.Title,\n-\t\tLink:        i.Link.Href,\n \t\tDescription: i.Description,\n \t\tGuid:        i.Id,\n \t\tPubDate:     anyTimeFormat(time.RFC1123Z, i.Created, i.Updated),\n \t}\n+\tif i.Link != nil {\n+\t\titem.Link = i.Link.Href\n+\t}\n \tif len(i.Content) > 0 {\n \t\titem.Content = &RssContent{Content: i.Content}\n \t}\n@@ -135,9 +137,13 @@ func (r *Rss) RssFeed() *RssFeed {\n \t\timage = &RssImage{Url: r.Image.Url, Title: r.Image.Title, Link: r.Image.Link, Width: r.Image.Width, Height: r.Image.Height}\n \t}\n \n+\tvar href string\n+\tif r.Link != nil {\n+\t\thref = r.Link.Href\n+\t}\n \tchannel := &RssFeed{\n \t\tTitle:          r.Title,\n-\t\tLink:           r.Link.Href,\n+\t\tLink:           href,\n \t\tDescription:    r.Description,\n \t\tManagingEditor: author,\n \t\tPubDate:        pub,"
    },
    {
      "sha": "49202fc41e645679a0f8d1088237b5b4aa22f49d",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/.golangci.yml",
      "status": "added",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2F.golangci.yml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,30 @@\n+linters:\n+  enable:\n+    - megacheck\n+    - revive\n+    - govet\n+    - unconvert\n+    - megacheck\n+    - gas\n+    - gocyclo\n+    - dupl\n+    - misspell\n+    - unparam\n+    - unused\n+    - typecheck\n+    - ineffassign\n+    - stylecheck\n+    - exportloopref\n+    - gocritic\n+    - nakedret\n+    - gosimple\n+    - prealloc\n+  fast: false\n+  disable-all: true\n+\n+issues:\n+  exclude-rules:\n+    - path: _test\\.go\n+      linters:\n+        - dupl\n+  exclude-use-default: false"
    },
    {
      "sha": "15fcad0306e36e91e5aee4fc59fe1b8e3925dff8",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/2q.go",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2F2q.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2F2q.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2F2q.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -44,7 +44,7 @@ func New2Q(size int) (*TwoQueueCache, error) {\n \n // New2QParams creates a new TwoQueueCache using the provided\n // parameter values.\n-func New2QParams(size int, recentRatio float64, ghostRatio float64) (*TwoQueueCache, error) {\n+func New2QParams(size int, recentRatio, ghostRatio float64) (*TwoQueueCache, error) {\n \tif size <= 0 {\n \t\treturn nil, fmt.Errorf(\"invalid size\")\n \t}\n@@ -138,7 +138,6 @@ func (c *TwoQueueCache) Add(key, value interface{}) {\n \t// Add to the recently seen list\n \tc.ensureSpace(false)\n \tc.recent.Add(key, value)\n-\treturn\n }\n \n // ensureSpace is used to ensure we have space in the cache"
    },
    {
      "sha": "0e5d580e0e9643a332da623d3b9976c8569b8c5e",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/LICENSE",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2FLICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2FLICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2FLICENSE?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,3 +1,5 @@\n+Copyright (c) 2014 HashiCorp, Inc.\n+\n Mozilla Public License, version 2.0\n \n 1. Definitions"
    },
    {
      "sha": "03bcfb5b76b60756c6464edb9a2d1d6893ef43f3",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/README.md",
      "status": "modified",
      "additions": 4,
      "deletions": 22,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2FREADME.md?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,25 +1,7 @@\n golang-lru\n ==========\n \n-This provides the `lru` package which implements a fixed-size\n-thread safe LRU cache. It is based on the cache in Groupcache.\n-\n-Documentation\n-=============\n-\n-Full docs are available on [Godoc](http://godoc.org/github.com/hashicorp/golang-lru)\n-\n-Example\n-=======\n-\n-Using the LRU is very simple:\n-\n-```go\n-l, _ := New(128)\n-for i := 0; i < 256; i++ {\n-    l.Add(i, nil)\n-}\n-if l.Len() != 128 {\n-    panic(fmt.Sprintf(\"bad len: %v\", l.Len()))\n-}\n-```\n+Please upgrade to github.com/hashicorp/golang-lru/v2 for all new code as v1 will\n+not be updated anymore. The v2 version supports generics and is faster; old code\n+can specify a specific tag, e.g. github.com/hashicorp/golang-lru/v1.0.2 for\n+backwards compatibility."
    },
    {
      "sha": "e396f8428aa3b0953d1442f6f5554fe08f837d60",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/arc.go",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Farc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Farc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Farc.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -173,7 +173,6 @@ func (c *ARCCache) Add(key, value interface{}) {\n \n \t// Add to the recently seen list\n \tc.t1.Add(key, value)\n-\treturn\n }\n \n // replace is used to adaptively evict from either T1 or T2"
    },
    {
      "sha": "895d8e3ea0c14949d41025d5cc8217bec260db73",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/lru.go",
      "status": "modified",
      "additions": 100,
      "deletions": 19,
      "changes": 119,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Flru.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Flru.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Flru.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -6,10 +6,17 @@ import (\n \t\"github.com/hashicorp/golang-lru/simplelru\"\n )\n \n+const (\n+\t// DefaultEvictedBufferSize defines the default buffer size to store evicted key/val\n+\tDefaultEvictedBufferSize = 16\n+)\n+\n // Cache is a thread-safe fixed size LRU cache.\n type Cache struct {\n-\tlru  simplelru.LRUCache\n-\tlock sync.RWMutex\n+\tlru                      *simplelru.LRU\n+\tevictedKeys, evictedVals []interface{}\n+\tonEvictedCB              func(k, v interface{})\n+\tlock                     sync.RWMutex\n }\n \n // New creates an LRU of the given size.\n@@ -19,30 +26,63 @@ func New(size int) (*Cache, error) {\n \n // NewWithEvict constructs a fixed size cache with the given eviction\n // callback.\n-func NewWithEvict(size int, onEvicted func(key interface{}, value interface{})) (*Cache, error) {\n-\tlru, err := simplelru.NewLRU(size, simplelru.EvictCallback(onEvicted))\n-\tif err != nil {\n-\t\treturn nil, err\n+func NewWithEvict(size int, onEvicted func(key, value interface{})) (c *Cache, err error) {\n+\t// create a cache with default settings\n+\tc = &Cache{\n+\t\tonEvictedCB: onEvicted,\n \t}\n-\tc := &Cache{\n-\t\tlru: lru,\n+\tif onEvicted != nil {\n+\t\tc.initEvictBuffers()\n+\t\tonEvicted = c.onEvicted\n \t}\n-\treturn c, nil\n+\tc.lru, err = simplelru.NewLRU(size, onEvicted)\n+\treturn\n+}\n+\n+func (c *Cache) initEvictBuffers() {\n+\tc.evictedKeys = make([]interface{}, 0, DefaultEvictedBufferSize)\n+\tc.evictedVals = make([]interface{}, 0, DefaultEvictedBufferSize)\n+}\n+\n+// onEvicted save evicted key/val and sent in externally registered callback\n+// outside of critical section\n+func (c *Cache) onEvicted(k, v interface{}) {\n+\tc.evictedKeys = append(c.evictedKeys, k)\n+\tc.evictedVals = append(c.evictedVals, v)\n }\n \n // Purge is used to completely clear the cache.\n func (c *Cache) Purge() {\n+\tvar ks, vs []interface{}\n \tc.lock.Lock()\n \tc.lru.Purge()\n+\tif c.onEvictedCB != nil && len(c.evictedKeys) > 0 {\n+\t\tks, vs = c.evictedKeys, c.evictedVals\n+\t\tc.initEvictBuffers()\n+\t}\n \tc.lock.Unlock()\n+\t// invoke callback outside of critical section\n+\tif c.onEvictedCB != nil {\n+\t\tfor i := 0; i < len(ks); i++ {\n+\t\t\tc.onEvictedCB(ks[i], vs[i])\n+\t\t}\n+\t}\n }\n \n // Add adds a value to the cache. Returns true if an eviction occurred.\n func (c *Cache) Add(key, value interface{}) (evicted bool) {\n+\tvar k, v interface{}\n \tc.lock.Lock()\n \tevicted = c.lru.Add(key, value)\n+\tif c.onEvictedCB != nil && evicted {\n+\t\tk, v = c.evictedKeys[0], c.evictedVals[0]\n+\t\tc.evictedKeys, c.evictedVals = c.evictedKeys[:0], c.evictedVals[:0]\n+\t}\n \tc.lock.Unlock()\n-\treturn evicted\n+\tif c.onEvictedCB != nil && evicted {\n+\t\tc.onEvictedCB(k, v)\n+\t}\n+\treturn\n }\n \n // Get looks up a key's value from the cache.\n@@ -75,61 +115,102 @@ func (c *Cache) Peek(key interface{}) (value interface{}, ok bool) {\n // recent-ness or deleting it for being stale, and if not, adds the value.\n // Returns whether found and whether an eviction occurred.\n func (c *Cache) ContainsOrAdd(key, value interface{}) (ok, evicted bool) {\n+\tvar k, v interface{}\n \tc.lock.Lock()\n-\tdefer c.lock.Unlock()\n-\n \tif c.lru.Contains(key) {\n+\t\tc.lock.Unlock()\n \t\treturn true, false\n \t}\n \tevicted = c.lru.Add(key, value)\n+\tif c.onEvictedCB != nil && evicted {\n+\t\tk, v = c.evictedKeys[0], c.evictedVals[0]\n+\t\tc.evictedKeys, c.evictedVals = c.evictedKeys[:0], c.evictedVals[:0]\n+\t}\n+\tc.lock.Unlock()\n+\tif c.onEvictedCB != nil && evicted {\n+\t\tc.onEvictedCB(k, v)\n+\t}\n \treturn false, evicted\n }\n \n // PeekOrAdd checks if a key is in the cache without updating the\n // recent-ness or deleting it for being stale, and if not, adds the value.\n // Returns whether found and whether an eviction occurred.\n func (c *Cache) PeekOrAdd(key, value interface{}) (previous interface{}, ok, evicted bool) {\n+\tvar k, v interface{}\n \tc.lock.Lock()\n-\tdefer c.lock.Unlock()\n-\n \tprevious, ok = c.lru.Peek(key)\n \tif ok {\n+\t\tc.lock.Unlock()\n \t\treturn previous, true, false\n \t}\n-\n \tevicted = c.lru.Add(key, value)\n+\tif c.onEvictedCB != nil && evicted {\n+\t\tk, v = c.evictedKeys[0], c.evictedVals[0]\n+\t\tc.evictedKeys, c.evictedVals = c.evictedKeys[:0], c.evictedVals[:0]\n+\t}\n+\tc.lock.Unlock()\n+\tif c.onEvictedCB != nil && evicted {\n+\t\tc.onEvictedCB(k, v)\n+\t}\n \treturn nil, false, evicted\n }\n \n // Remove removes the provided key from the cache.\n func (c *Cache) Remove(key interface{}) (present bool) {\n+\tvar k, v interface{}\n \tc.lock.Lock()\n \tpresent = c.lru.Remove(key)\n+\tif c.onEvictedCB != nil && present {\n+\t\tk, v = c.evictedKeys[0], c.evictedVals[0]\n+\t\tc.evictedKeys, c.evictedVals = c.evictedKeys[:0], c.evictedVals[:0]\n+\t}\n \tc.lock.Unlock()\n+\tif c.onEvictedCB != nil && present {\n+\t\tc.onEvictedCB(k, v)\n+\t}\n \treturn\n }\n \n // Resize changes the cache size.\n func (c *Cache) Resize(size int) (evicted int) {\n+\tvar ks, vs []interface{}\n \tc.lock.Lock()\n \tevicted = c.lru.Resize(size)\n+\tif c.onEvictedCB != nil && evicted > 0 {\n+\t\tks, vs = c.evictedKeys, c.evictedVals\n+\t\tc.initEvictBuffers()\n+\t}\n \tc.lock.Unlock()\n+\tif c.onEvictedCB != nil && evicted > 0 {\n+\t\tfor i := 0; i < len(ks); i++ {\n+\t\t\tc.onEvictedCB(ks[i], vs[i])\n+\t\t}\n+\t}\n \treturn evicted\n }\n \n // RemoveOldest removes the oldest item from the cache.\n-func (c *Cache) RemoveOldest() (key interface{}, value interface{}, ok bool) {\n+func (c *Cache) RemoveOldest() (key, value interface{}, ok bool) {\n+\tvar k, v interface{}\n \tc.lock.Lock()\n \tkey, value, ok = c.lru.RemoveOldest()\n+\tif c.onEvictedCB != nil && ok {\n+\t\tk, v = c.evictedKeys[0], c.evictedVals[0]\n+\t\tc.evictedKeys, c.evictedVals = c.evictedKeys[:0], c.evictedVals[:0]\n+\t}\n \tc.lock.Unlock()\n+\tif c.onEvictedCB != nil && ok {\n+\t\tc.onEvictedCB(k, v)\n+\t}\n \treturn\n }\n \n // GetOldest returns the oldest entry\n-func (c *Cache) GetOldest() (key interface{}, value interface{}, ok bool) {\n-\tc.lock.Lock()\n+func (c *Cache) GetOldest() (key, value interface{}, ok bool) {\n+\tc.lock.RLock()\n \tkey, value, ok = c.lru.GetOldest()\n-\tc.lock.Unlock()\n+\tc.lock.RUnlock()\n \treturn\n }\n "
    },
    {
      "sha": "9233583c91c1d7f769d288c4d509238c23fe8d72",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/simplelru/lru.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Fsimplelru%2Flru.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Fsimplelru%2Flru.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Fsimplelru%2Flru.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -25,7 +25,7 @@ type entry struct {\n // NewLRU constructs an LRU of the given size\n func NewLRU(size int, onEvict EvictCallback) (*LRU, error) {\n \tif size <= 0 {\n-\t\treturn nil, errors.New(\"Must provide a positive size\")\n+\t\treturn nil, errors.New(\"must provide a positive size\")\n \t}\n \tc := &LRU{\n \t\tsize:      size,\n@@ -109,7 +109,7 @@ func (c *LRU) Remove(key interface{}) (present bool) {\n }\n \n // RemoveOldest removes the oldest item from the cache.\n-func (c *LRU) RemoveOldest() (key interface{}, value interface{}, ok bool) {\n+func (c *LRU) RemoveOldest() (key, value interface{}, ok bool) {\n \tent := c.evictList.Back()\n \tif ent != nil {\n \t\tc.removeElement(ent)\n@@ -120,7 +120,7 @@ func (c *LRU) RemoveOldest() (key interface{}, value interface{}, ok bool) {\n }\n \n // GetOldest returns the oldest entry\n-func (c *LRU) GetOldest() (key interface{}, value interface{}, ok bool) {\n+func (c *LRU) GetOldest() (key, value interface{}, ok bool) {\n \tent := c.evictList.Back()\n \tif ent != nil {\n \t\tkv := ent.Value.(*entry)"
    },
    {
      "sha": "cb7f8caf03d6c823e8c3047b14a4bd8f35886a1b",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/simplelru/lru_interface.go",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Fsimplelru%2Flru_interface.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Fsimplelru%2Flru_interface.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Fsimplelru%2Flru_interface.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,3 +1,4 @@\n+// Package simplelru provides simple LRU implementation based on build-in container/list.\n package simplelru\n \n // LRUCache is the interface for simple LRU cache.\n@@ -34,6 +35,6 @@ type LRUCache interface {\n \t// Clears all cache entries.\n \tPurge()\n \n-  // Resizes cache, returning number evicted\n-  Resize(int) int\n+\t// Resizes cache, returning number evicted\n+\tResize(int) int\n }"
    },
    {
      "sha": "492760782c5eafdbec94dbd31ae7a9580346feb6",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/testing.go",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Ftesting.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Ftesting.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fhashicorp%2Fgolang-lru%2Ftesting.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,16 @@\n+package lru\n+\n+import (\n+\t\"crypto/rand\"\n+\t\"math\"\n+\t\"math/big\"\n+\t\"testing\"\n+)\n+\n+func getRand(tb testing.TB) int64 {\n+\tout, err := rand.Int(rand.Reader, big.NewInt(math.MaxInt64))\n+\tif err != nil {\n+\t\ttb.Fatal(err)\n+\t}\n+\treturn out.Int64()\n+}"
    },
    {
      "sha": "f84e6da8bc86c0bbc0862082f08cdf8f0830734a",
      "filename": "backend/vendor/go.uber.org/goleak/.golangci.yml",
      "status": "added",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2F.golangci.yml?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,28 @@\n+output:\n+  # Make output more digestible with quickfix in vim/emacs/etc.\n+  sort-results: true\n+  print-issued-lines: false\n+\n+linters:\n+  enable:\n+    - gofumpt\n+    - nolintlint\n+    - revive\n+\n+linters-settings:\n+  govet:\n+    # These govet checks are disabled by default, but they're useful.\n+    enable:\n+      - niliness\n+      - reflectvaluecompare\n+      - sortslice\n+      - unusedwrite\n+\n+issues:\n+  # Print all issues reported by all linters.\n+  max-issues-per-linter: 0\n+  max-same-issues: 0\n+\n+  # Don't ignore some of the issues that golangci-lint considers okay.\n+  # This includes documenting all exported entities.\n+  exclude-use-default: false"
    },
    {
      "sha": "5cd3f88a587d7e16a98bb36c0b78e81408d27da2",
      "filename": "backend/vendor/go.uber.org/goleak/CHANGELOG.md",
      "status": "modified",
      "additions": 16,
      "deletions": 1,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FCHANGELOG.md",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FCHANGELOG.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FCHANGELOG.md?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -4,6 +4,21 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\n and this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n \n+## [1.3.0]\n+### Fixed\n+- Built-in ignores now match function names more accurately.\n+  They will no longer ignore stacks because of file names\n+  that look similar to function names. (#112)\n+### Added\n+- Add an `IgnoreAnyFunction` option to ignore stack traces\n+  that have the provided function anywhere in the stack. (#113)\n+- Ignore `testing.runFuzzing` and `testing.runFuzzTests` alongside\n+  other already-ignored test functions (`testing.RunTests`, etc). (#105)\n+### Changed\n+- Miscellaneous CI-related fixes. (#103, #108, #114)\n+\n+[1.3.0]: https://github.com/uber-go/goleak/compare/v1.2.1...v1.3.0\n+\n ## [1.2.1]\n ### Changed\n - Drop golang/x/lint dependency.\n@@ -56,4 +71,4 @@ Thanks to @denis-tingajkin for their contributions to this release.\n ## [0.10.0]\n - Initial release.\n \n-[0.10.0]: https://github.com/uber-go/goleak/compare/v0.10.0...HEAD\n\\ No newline at end of file\n+[0.10.0]: https://github.com/uber-go/goleak/compare/v0.10.0...HEAD"
    },
    {
      "sha": "eb7154af3af73af19ecd93084fb29a55614a1f4b",
      "filename": "backend/vendor/go.uber.org/goleak/Makefile",
      "status": "modified",
      "additions": 27,
      "deletions": 23,
      "changes": 50,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FMakefile",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FMakefile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FMakefile?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,19 +1,26 @@\n-export GOBIN ?= $(shell pwd)/bin\n+# Directory containing the Makefile.\n+PROJECT_ROOT = $(dir $(abspath $(lastword $(MAKEFILE_LIST))))\n \n-REVIVE = $(GOBIN)/revive\n+export GOBIN = $(PROJECT_ROOT)/bin\n+export PATH := $(GOBIN):$(PATH)\n \n-GO_FILES := $(shell \\\n-\tfind . '(' -path '*/.*' -o -path './vendor' ')' -prune \\\n-\t-o -name '*.go' -print | cut -b3-)\n+GO_FILES = $(shell find . \\\n+\t   -path '*/.*' -prune -o \\\n+\t   '(' -type f -a -name '*.go' ')' -print)\n+\n+# Additional test flags.\n+TEST_FLAGS ?=\n+\n+.PHONY: all\n+all: lint build test\n+\n+.PHONY: lint\n+lint: golangci-lint tidy-lint\n \n .PHONY: build\n build:\n \tgo build ./...\n \n-.PHONY: install\n-install:\n-\tgo mod download\n-\n .PHONY: test\n test:\n \tgo test -v -race ./...\n@@ -24,18 +31,15 @@ cover:\n \tgo test -race -coverprofile=cover.out -coverpkg=./... ./...\n \tgo tool cover -html=cover.out -o cover.html\n \n-$(REVIVE):\n-\tcd tools && go install github.com/mgechev/revive\n+.PHONY: golangci-lint\n+golangci-lint:\n+\tgolangci-lint run\n \n-.PHONY: lint\n-lint: $(REVIVE)\n-\t@rm -rf lint.log\n-\t@echo \"Checking formatting...\"\n-\t@gofmt -d -s $(GO_FILES) 2>&1 | tee lint.log\n-\t@echo \"Checking vet...\"\n-\t@go vet ./... 2>&1 | tee -a lint.log\n-\t@echo \"Checking lint...\"\n-\t@$(REVIVE) -set_exit_status ./... 2>&1 | tee -a lint.log\n-\t@echo \"Checking for unresolved FIXMEs...\"\n-\t@git grep -i fixme | grep -v -e '^vendor/' -e '^Makefile' | tee -a lint.log\n-\t@[ ! -s lint.log ]\n+.PHONY: tidy\n+tidy:\n+\tgo mod tidy\n+\n+.PHONY: tidy-lint\n+tidy-lint:\n+\tgo mod tidy\n+\tgit diff --exit-code -- go.mod go.sum"
    },
    {
      "sha": "de3d7d51df7a886587096d0e7008efe70150a99f",
      "filename": "backend/vendor/go.uber.org/goleak/README.md",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2FREADME.md?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -67,8 +67,8 @@ No breaking changes will be made to exported APIs before 2.0.\n \n [doc-img]: https://godoc.org/go.uber.org/goleak?status.svg\n [doc]: https://godoc.org/go.uber.org/goleak\n-[ci-img]: https://github.com/uber-go/goleak/actions/workflows/go.yml/badge.svg\n-[ci]: https://github.com/uber-go/goleak/actions/workflows/go.yml\n+[ci-img]: https://github.com/uber-go/goleak/actions/workflows/ci.yml/badge.svg\n+[ci]: https://github.com/uber-go/goleak/actions/workflows/ci.yml\n [cov-img]: https://codecov.io/gh/uber-go/goleak/branch/master/graph/badge.svg\n [cov]: https://codecov.io/gh/uber-go/goleak\n [release]: https://go.dev/doc/devel/release#policy"
    },
    {
      "sha": "c6e7a00a06d6cf3a02aa2c6949e89c2e317ced5e",
      "filename": "backend/vendor/go.uber.org/goleak/glide.yaml",
      "status": "removed",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Fglide.yaml",
      "raw_url": "https://github.com/umputun/remark42/raw/884b5685eba3a7e88c9b60378316fd346a4c3a42/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Fglide.yaml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Fglide.yaml?ref=884b5685eba3a7e88c9b60378316fd346a4c3a42",
      "patch": "@@ -1,8 +0,0 @@\n-package: go.uber.org/goleak\n-import: []\n-testImport:\n-- package: github.com/stretchr/testify\n-  version: ^1.1.4\n-  subpackages:\n-  - assert\n-  - require"
    },
    {
      "sha": "4b7ac8423e73db113a9c4d19878ad0bb4d442aa7",
      "filename": "backend/vendor/go.uber.org/goleak/internal/stack/scan.go",
      "status": "added",
      "additions": 56,
      "deletions": 0,
      "changes": 56,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Finternal%2Fstack%2Fscan.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Finternal%2Fstack%2Fscan.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Finternal%2Fstack%2Fscan.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,56 @@\n+// Copyright (c) 2023 Uber Technologies, Inc.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files (the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions:\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+\n+package stack\n+\n+import (\n+\t\"bufio\"\n+\t\"io\"\n+)\n+\n+// scanner provides a bufio.Scanner the ability to Unscan,\n+// which allows the current token to be read again\n+// after the next Scan.\n+type scanner struct {\n+\t*bufio.Scanner\n+\n+\tunscanned bool\n+}\n+\n+func newScanner(r io.Reader) *scanner {\n+\treturn &scanner{Scanner: bufio.NewScanner(r)}\n+}\n+\n+func (s *scanner) Scan() bool {\n+\tif s.unscanned {\n+\t\ts.unscanned = false\n+\t\treturn true\n+\t}\n+\treturn s.Scanner.Scan()\n+}\n+\n+// Unscan stops the scanner from advancing its position\n+// for the next Scan.\n+//\n+// Bytes and Text will return the same token after next Scan\n+// that they do right now.\n+func (s *scanner) Unscan() {\n+\ts.unscanned = true\n+}"
    },
    {
      "sha": "241a9b8448250d9d597b6b1dab10c95d486a037d",
      "filename": "backend/vendor/go.uber.org/goleak/internal/stack/stacks.go",
      "status": "modified",
      "additions": 187,
      "deletions": 44,
      "changes": 231,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Finternal%2Fstack%2Fstacks.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Finternal%2Fstack%2Fstacks.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Finternal%2Fstack%2Fstacks.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2017 Uber Technologies, Inc.\n+// Copyright (c) 2017-2023 Uber Technologies, Inc.\n //\n // Permission is hereby granted, free of charge, to any person obtaining a copy\n // of this software and associated documentation files (the \"Software\"), to deal\n@@ -21,8 +21,8 @@\n package stack\n \n import (\n-\t\"bufio\"\n \t\"bytes\"\n+\t\"errors\"\n \t\"fmt\"\n \t\"io\"\n \t\"runtime\"\n@@ -34,10 +34,17 @@ const _defaultBufferSize = 64 * 1024 // 64 KiB\n \n // Stack represents a single Goroutine's stack.\n type Stack struct {\n-\tid            int\n-\tstate         string\n+\tid    int\n+\tstate string // e.g. 'running', 'chan receive'\n+\n+\t// The first function on the stack.\n \tfirstFunction string\n-\tfullStack     *bytes.Buffer\n+\n+\t// A set of all functions in the stack,\n+\tallFunctions map[string]struct{}\n+\n+\t// Full, raw stack trace.\n+\tfullStack string\n }\n \n // ID returns the goroutine ID.\n@@ -52,60 +59,169 @@ func (s Stack) State() string {\n \n // Full returns the full stack trace for this goroutine.\n func (s Stack) Full() string {\n-\treturn s.fullStack.String()\n+\treturn s.fullStack\n }\n \n // FirstFunction returns the name of the first function on the stack.\n func (s Stack) FirstFunction() string {\n \treturn s.firstFunction\n }\n \n+// HasFunction reports whether the stack has the given function\n+// anywhere in it.\n+func (s Stack) HasFunction(name string) bool {\n+\t_, ok := s.allFunctions[name]\n+\treturn ok\n+}\n+\n func (s Stack) String() string {\n \treturn fmt.Sprintf(\n \t\t\"Goroutine %v in state %v, with %v on top of the stack:\\n%s\",\n \t\ts.id, s.state, s.firstFunction, s.Full())\n }\n \n func getStacks(all bool) []Stack {\n-\tvar stacks []Stack\n+\ttrace := getStackBuffer(all)\n+\tstacks, err := newStackParser(bytes.NewReader(trace)).Parse()\n+\tif err != nil {\n+\t\t// Well-formed stack traces should never fail to parse.\n+\t\t// If they do, it's a bug in this package.\n+\t\t// Panic so we can fix it.\n+\t\tpanic(fmt.Sprintf(\"Failed to parse stack trace: %v\\n%s\", err, trace))\n+\t}\n+\treturn stacks\n+}\n+\n+type stackParser struct {\n+\tscan   *scanner\n+\tstacks []Stack\n+\terrors []error\n+}\n+\n+func newStackParser(r io.Reader) *stackParser {\n+\treturn &stackParser{\n+\t\tscan: newScanner(r),\n+\t}\n+}\n+\n+func (p *stackParser) Parse() ([]Stack, error) {\n+\tfor p.scan.Scan() {\n+\t\tline := p.scan.Text()\n+\n+\t\t// If we see the goroutine header, start a new stack.\n+\t\tif strings.HasPrefix(line, \"goroutine \") {\n+\t\t\tstack, err := p.parseStack(line)\n+\t\t\tif err != nil {\n+\t\t\t\tp.errors = append(p.errors, err)\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tp.stacks = append(p.stacks, stack)\n+\t\t}\n+\t}\n+\n+\tp.errors = append(p.errors, p.scan.Err())\n+\treturn p.stacks, errors.Join(p.errors...)\n+}\n+\n+// parseStack parses a single stack trace from the given scanner.\n+// line is the first line of the stack trace, which should look like:\n+//\n+//\tgoroutine 123 [runnable]:\n+func (p *stackParser) parseStack(line string) (Stack, error) {\n+\tid, state, err := parseGoStackHeader(line)\n+\tif err != nil {\n+\t\treturn Stack{}, fmt.Errorf(\"parse header: %w\", err)\n+\t}\n \n-\tvar curStack *Stack\n-\tstackReader := bufio.NewReader(bytes.NewReader(getStackBuffer(all)))\n-\tfor {\n-\t\tline, err := stackReader.ReadString('\\n')\n-\t\tif err == io.EOF {\n+\t// Read the rest of the stack trace.\n+\tvar (\n+\t\tfirstFunction string\n+\t\tfullStack     bytes.Buffer\n+\t)\n+\tfuncs := make(map[string]struct{})\n+\tfor p.scan.Scan() {\n+\t\tline := p.scan.Text()\n+\t\tif strings.HasPrefix(line, \"goroutine \") {\n+\t\t\t// If we see the goroutine header,\n+\t\t\t// it's the end of this stack.\n+\t\t\t// Unscan so the next Scan sees the same line.\n+\t\t\tp.scan.Unscan()\n \t\t\tbreak\n \t\t}\n-\t\tif err != nil {\n-\t\t\t// We're reading using bytes.NewReader which should never fail.\n-\t\t\tpanic(\"bufio.NewReader failed on a fixed string\")\n+\n+\t\tfullStack.WriteString(line)\n+\t\tfullStack.WriteByte('\\n') // scanner trims the newline\n+\n+\t\tif len(line) == 0 {\n+\t\t\t// Empty line usually marks the end of the stack\n+\t\t\t// but we don't want to have to rely on that.\n+\t\t\t// Just skip it.\n+\t\t\tcontinue\n \t\t}\n \n-\t\t// If we see the goroutine header, start a new stack.\n-\t\tisFirstLine := false\n-\t\tif strings.HasPrefix(line, \"goroutine \") {\n-\t\t\t// flush any previous stack\n-\t\t\tif curStack != nil {\n-\t\t\t\tstacks = append(stacks, *curStack)\n+\t\tfuncName, creator, err := parseFuncName(line)\n+\t\tif err != nil {\n+\t\t\treturn Stack{}, fmt.Errorf(\"parse function: %w\", err)\n+\t\t}\n+\t\tif !creator {\n+\t\t\t// A function is part of a goroutine's stack\n+\t\t\t// only if it's not a \"created by\" function.\n+\t\t\t//\n+\t\t\t// The creator function is part of a different stack.\n+\t\t\t// We don't care about it right now.\n+\t\t\tfuncs[funcName] = struct{}{}\n+\t\t\tif firstFunction == \"\" {\n+\t\t\t\tfirstFunction = funcName\n \t\t\t}\n-\t\t\tid, goState := parseGoStackHeader(line)\n-\t\t\tcurStack = &Stack{\n-\t\t\t\tid:        id,\n-\t\t\t\tstate:     goState,\n-\t\t\t\tfullStack: &bytes.Buffer{},\n+\n+\t\t}\n+\n+\t\t// The function name followed by a line in the form:\n+\t\t//\n+\t\t//\t<tab>example.com/path/to/package/file.go:123 +0x123\n+\t\t//\n+\t\t// We don't care about the position so we can skip this line.\n+\t\tif p.scan.Scan() {\n+\t\t\t// Be defensive:\n+\t\t\t// Skip the line only if it starts with a tab.\n+\t\t\tbs := p.scan.Bytes()\n+\t\t\tif len(bs) > 0 && bs[0] == '\\t' {\n+\t\t\t\tfullStack.Write(bs)\n+\t\t\t\tfullStack.WriteByte('\\n')\n+\t\t\t} else {\n+\t\t\t\t// Put it back and let the next iteration handle it\n+\t\t\t\t// if it doesn't start with a tab.\n+\t\t\t\tp.scan.Unscan()\n \t\t\t}\n-\t\t\tisFirstLine = true\n \t\t}\n-\t\tcurStack.fullStack.WriteString(line)\n-\t\tif !isFirstLine && curStack.firstFunction == \"\" {\n-\t\t\tcurStack.firstFunction = parseFirstFunc(line)\n+\n+\t\tif creator {\n+\t\t\t// The \"created by\" line is the last line of the stack.\n+\t\t\t// We can stop parsing now.\n+\t\t\t//\n+\t\t\t// Note that if tracebackancestors=N is set,\n+\t\t\t// there may be more a traceback of the creator function\n+\t\t\t// following the \"created by\" line,\n+\t\t\t// but it should not be considered part of this stack.\n+\t\t\t// e.g.,\n+\t\t\t//\n+\t\t\t// created by testing.(*T).Run in goroutine 1\n+\t\t\t//         /usr/lib/go/src/testing/testing.go:1648 +0x3ad\n+\t\t\t// [originating from goroutine 1]:\n+\t\t\t// testing.(*T).Run(...)\n+\t\t\t//         /usr/lib/go/src/testing/testing.go:1649 +0x3ad\n+\t\t\t//\n+\t\t\tbreak\n \t\t}\n \t}\n \n-\tif curStack != nil {\n-\t\tstacks = append(stacks, *curStack)\n-\t}\n-\treturn stacks\n+\treturn Stack{\n+\t\tid:            id,\n+\t\tstate:         state,\n+\t\tfirstFunction: firstFunction,\n+\t\tallFunctions:  funcs,\n+\t\tfullStack:     fullStack.String(),\n+\t}, nil\n }\n \n // All returns the stacks for all running goroutines.\n@@ -127,29 +243,56 @@ func getStackBuffer(all bool) []byte {\n \t}\n }\n \n-func parseFirstFunc(line string) string {\n-\tline = strings.TrimSpace(line)\n-\tif idx := strings.LastIndex(line, \"(\"); idx > 0 {\n-\t\treturn line[:idx]\n+// Parses a single function from the given line.\n+// The line is in one of these formats:\n+//\n+//\texample.com/path/to/package.funcName(args...)\n+//\texample.com/path/to/package.(*typeName).funcName(args...)\n+//\tcreated by example.com/path/to/package.funcName\n+//\tcreated by example.com/path/to/package.funcName in goroutine [...]\n+//\n+// Also reports whether the line was a \"created by\" line.\n+func parseFuncName(line string) (name string, creator bool, err error) {\n+\tif after, ok := strings.CutPrefix(line, \"created by \"); ok {\n+\t\t// The function name is the part after \"created by \"\n+\t\t// and before \" in goroutine [...]\".\n+\t\tidx := strings.Index(after, \" in goroutine\")\n+\t\tif idx >= 0 {\n+\t\t\tafter = after[:idx]\n+\t\t}\n+\t\tname = after\n+\t\tcreator = true\n+\t} else if idx := strings.LastIndexByte(line, '('); idx >= 0 {\n+\t\t// The function name is the part before the last '('.\n+\t\tname = line[:idx]\n \t}\n-\tpanic(fmt.Sprintf(\"function calls missing parents: %q\", line))\n+\n+\tif name == \"\" {\n+\t\treturn \"\", false, fmt.Errorf(\"no function found: %q\", line)\n+\t}\n+\n+\treturn name, creator, nil\n }\n \n // parseGoStackHeader parses a stack header that looks like:\n // goroutine 643 [runnable]:\\n\n // And returns the goroutine ID, and the state.\n-func parseGoStackHeader(line string) (goroutineID int, state string) {\n-\tline = strings.TrimSuffix(line, \":\\n\")\n+func parseGoStackHeader(line string) (goroutineID int, state string, err error) {\n+\t// The scanner will have already trimmed the \"\\n\",\n+\t// but we'll guard against it just in case.\n+\t//\n+\t// Trimming them separately makes them both optional.\n+\tline = strings.TrimSuffix(strings.TrimSuffix(line, \":\"), \"\\n\")\n \tparts := strings.SplitN(line, \" \", 3)\n \tif len(parts) != 3 {\n-\t\tpanic(fmt.Sprintf(\"unexpected stack header format: %q\", line))\n+\t\treturn 0, \"\", fmt.Errorf(\"unexpected format: %q\", line)\n \t}\n \n \tid, err := strconv.Atoi(parts[1])\n \tif err != nil {\n-\t\tpanic(fmt.Sprintf(\"failed to parse goroutine ID: %v in line %q\", parts[1], line))\n+\t\treturn 0, \"\", fmt.Errorf(\"bad goroutine ID %q in line %q\", parts[1], line)\n \t}\n \n \tstate = strings.TrimSuffix(strings.TrimPrefix(parts[2], \"[\"), \"]\")\n-\treturn id, state\n+\treturn id, state, nil\n }"
    },
    {
      "sha": "cc206f1815b5b745a39d4709e5f50c322b7d29fa",
      "filename": "backend/vendor/go.uber.org/goleak/leaks.go",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Fleaks.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Fleaks.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Fleaks.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -82,6 +82,12 @@ type testHelper interface {\n // tests by doing:\n //\n //\tdefer VerifyNone(t)\n+//\n+// VerifyNone is currently incompatible with t.Parallel because it cannot\n+// associate specific goroutines with specific tests. Thus, non-leaking\n+// goroutines from other tests running in parallel could fail this check.\n+// If you need to run tests in parallel, use [VerifyTestMain] instead,\n+// which will verify that no leaking goroutines exist after ALL tests finish.\n func VerifyNone(t TestingT, options ...Option) {\n \topts := buildOpts(options...)\n \tvar cleanup func(int)"
    },
    {
      "sha": "53fc0a1decc6d8adb65b4d3bfa5d64cbe9b3c1a5",
      "filename": "backend/vendor/go.uber.org/goleak/options.go",
      "status": "modified",
      "additions": 24,
      "deletions": 4,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Foptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Foptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Foptions.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2017 Uber Technologies, Inc.\n+// Copyright (c) 2017-2023 Uber Technologies, Inc.\n //\n // Permission is hereby granted, free of charge, to any person obtaining a copy\n // of this software and associated documentation files (the \"Software\"), to deal\n@@ -67,6 +67,22 @@ func IgnoreTopFunction(f string) Option {\n \t})\n }\n \n+// IgnoreAnyFunction ignores goroutines where the specified function\n+// is present anywhere in the stack.\n+//\n+// The function name must be fully qualified, e.g.,\n+//\n+//\tgo.uber.org/goleak.IgnoreAnyFunction\n+//\n+// For methods, the fully qualified form looks like:\n+//\n+//\tgo.uber.org/goleak.(*MyType).MyMethod\n+func IgnoreAnyFunction(f string) Option {\n+\treturn addFilter(func(s stack.Stack) bool {\n+\t\treturn s.HasFunction(f)\n+\t})\n+}\n+\n // Cleanup sets up a cleanup function that will be executed at the\n // end of the leak check.\n // When passed to [VerifyTestMain], the exit code passed to cleanupFunc\n@@ -151,8 +167,12 @@ func isTestStack(s stack.Stack) bool {\n \t// Since go1.7, a separate goroutine is started to wait for signals.\n \t// T.Parallel is for parallel tests, which are blocked until all serial\n \t// tests have run with T.Parallel at the top of the stack.\n+\t// testing.runFuzzTests is for fuzz testing, it's blocked until the test\n+\t// function with all seed corpus have run.\n+\t// testing.runFuzzing is for fuzz testing, it's blocked until a failing\n+\t// input is found.\n \tswitch s.FirstFunction() {\n-\tcase \"testing.RunTests\", \"testing.(*T).Run\", \"testing.(*T).Parallel\":\n+\tcase \"testing.RunTests\", \"testing.(*T).Run\", \"testing.(*T).Parallel\", \"testing.runFuzzing\", \"testing.runFuzzTests\":\n \t\t// In pre1.7 and post-1.7, background goroutines started by the testing\n \t\t// package are blocked waiting on a channel.\n \t\treturn strings.HasPrefix(s.State(), \"chan receive\")\n@@ -163,7 +183,7 @@ func isTestStack(s stack.Stack) bool {\n func isSyscallStack(s stack.Stack) bool {\n \t// Typically runs in the background when code uses CGo:\n \t// https://github.com/golang/go/issues/16714\n-\treturn s.FirstFunction() == \"runtime.goexit\" && strings.HasPrefix(s.State(), \"syscall\")\n+\treturn s.HasFunction(\"runtime.goexit\") && strings.HasPrefix(s.State(), \"syscall\")\n }\n \n func isStdLibStack(s stack.Stack) bool {\n@@ -174,5 +194,5 @@ func isStdLibStack(s stack.Stack) bool {\n \t}\n \n \t// Using signal.Notify will start a runtime goroutine.\n-\treturn strings.Contains(s.Full(), \"runtime.ensureSigM\")\n+\treturn s.HasFunction(\"runtime.ensureSigM\")\n }"
    },
    {
      "sha": "4fc6cefcea90cd885a9fc0fa19e1e9c63618d088",
      "filename": "backend/vendor/go.uber.org/goleak/tracestack_new.go",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Ftracestack_new.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Ftracestack_new.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.uber.org%2Fgoleak%2Ftracestack_new.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2021 Uber Technologies, Inc.\n+// Copyright (c) 2021-2023 Uber Technologies, Inc.\n //\n // Permission is hereby granted, free of charge, to any person obtaining a copy\n // of this software and associated documentation files (the \"Software\"), to deal\n@@ -23,12 +23,8 @@\n \n package goleak\n \n-import (\n-\t\"strings\"\n-\n-\t\"go.uber.org/goleak/internal/stack\"\n-)\n+import \"go.uber.org/goleak/internal/stack\"\n \n func isTraceStack(s stack.Stack) bool {\n-\treturn strings.Contains(s.Full(), \"runtime.ReadTrace\")\n+\treturn s.HasFunction(\"runtime.ReadTrace\")\n }"
    },
    {
      "sha": "02ccd08a770a70d71c8f4f9cf416cc64ff29b189",
      "filename": "backend/vendor/golang.org/x/oauth2/google/default.go",
      "status": "modified",
      "additions": 70,
      "deletions": 2,
      "changes": 72,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -12,6 +12,7 @@ import (\n \t\"os\"\n \t\"path/filepath\"\n \t\"runtime\"\n+\t\"sync\"\n \t\"time\"\n \n \t\"cloud.google.com/go/compute/metadata\"\n@@ -41,19 +42,76 @@ type Credentials struct {\n \t// running on Google Cloud Platform.\n \tJSON []byte\n \n+\tudMu sync.Mutex // guards universeDomain\n \t// universeDomain is the default service domain for a given Cloud universe.\n \tuniverseDomain string\n }\n \n // UniverseDomain returns the default service domain for a given Cloud universe.\n+//\n // The default value is \"googleapis.com\".\n+//\n+// Deprecated: Use instead (*Credentials).GetUniverseDomain(), which supports\n+// obtaining the universe domain when authenticating via the GCE metadata server.\n+// Unlike GetUniverseDomain, this method, UniverseDomain, will always return the\n+// default value when authenticating via the GCE metadata server.\n+// See also [The attached service account](https://cloud.google.com/docs/authentication/application-default-credentials#attached-sa).\n func (c *Credentials) UniverseDomain() string {\n \tif c.universeDomain == \"\" {\n \t\treturn universeDomainDefault\n \t}\n \treturn c.universeDomain\n }\n \n+// GetUniverseDomain returns the default service domain for a given Cloud\n+// universe.\n+//\n+// The default value is \"googleapis.com\".\n+//\n+// It obtains the universe domain from the attached service account on GCE when\n+// authenticating via the GCE metadata server. See also [The attached service\n+// account](https://cloud.google.com/docs/authentication/application-default-credentials#attached-sa).\n+// If the GCE metadata server returns a 404 error, the default value is\n+// returned. If the GCE metadata server returns an error other than 404, the\n+// error is returned.\n+func (c *Credentials) GetUniverseDomain() (string, error) {\n+\tc.udMu.Lock()\n+\tdefer c.udMu.Unlock()\n+\tif c.universeDomain == \"\" && metadata.OnGCE() {\n+\t\t// If we're on Google Compute Engine, an App Engine standard second\n+\t\t// generation runtime, or App Engine flexible, use the metadata server.\n+\t\terr := c.computeUniverseDomain()\n+\t\tif err != nil {\n+\t\t\treturn \"\", err\n+\t\t}\n+\t}\n+\t// If not on Google Compute Engine, or in case of any non-error path in\n+\t// computeUniverseDomain that did not set universeDomain, set the default\n+\t// universe domain.\n+\tif c.universeDomain == \"\" {\n+\t\tc.universeDomain = universeDomainDefault\n+\t}\n+\treturn c.universeDomain, nil\n+}\n+\n+// computeUniverseDomain fetches the default service domain for a given Cloud\n+// universe from Google Compute Engine (GCE)'s metadata server. It's only valid\n+// to use this method if your program is running on a GCE instance.\n+func (c *Credentials) computeUniverseDomain() error {\n+\tvar err error\n+\tc.universeDomain, err = metadata.Get(\"universe/universe_domain\")\n+\tif err != nil {\n+\t\tif _, ok := err.(metadata.NotDefinedError); ok {\n+\t\t\t// http.StatusNotFound (404)\n+\t\t\tc.universeDomain = universeDomainDefault\n+\t\t\treturn nil\n+\t\t} else {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n // DefaultCredentials is the old name of Credentials.\n //\n // Deprecated: use Credentials instead.\n@@ -91,6 +149,12 @@ type CredentialsParams struct {\n \t// Note: This option is currently only respected when using credentials\n \t// fetched from the GCE metadata server.\n \tEarlyTokenRefresh time.Duration\n+\n+\t// UniverseDomain is the default service domain for a given Cloud universe.\n+\t// Only supported in authentication flows that support universe domains.\n+\t// This value takes precedence over a universe domain explicitly specified\n+\t// in a credentials config file or by the GCE metadata server. Optional.\n+\tUniverseDomain string\n }\n \n func (params CredentialsParams) deepCopy() CredentialsParams {\n@@ -175,8 +239,9 @@ func FindDefaultCredentialsWithParams(ctx context.Context, params CredentialsPar\n \tif metadata.OnGCE() {\n \t\tid, _ := metadata.ProjectID()\n \t\treturn &Credentials{\n-\t\t\tProjectID:   id,\n-\t\t\tTokenSource: computeTokenSource(\"\", params.EarlyTokenRefresh, params.Scopes...),\n+\t\t\tProjectID:      id,\n+\t\t\tTokenSource:    computeTokenSource(\"\", params.EarlyTokenRefresh, params.Scopes...),\n+\t\t\tuniverseDomain: params.UniverseDomain,\n \t\t}, nil\n \t}\n \n@@ -217,6 +282,9 @@ func CredentialsFromJSONWithParams(ctx context.Context, jsonData []byte, params\n \t}\n \n \tuniverseDomain := f.UniverseDomain\n+\tif params.UniverseDomain != \"\" {\n+\t\tuniverseDomain = params.UniverseDomain\n+\t}\n \t// Authorized user credentials are only supported in the googleapis.com universe.\n \tif f.Type == userCredentialsKey {\n \t\tuniverseDomain = universeDomainDefault"
    },
    {
      "sha": "948a3ee63d4ffe370a795e2233634309646d69b9",
      "filename": "backend/vendor/golang.org/x/sync/errgroup/errgroup.go",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2Ferrgroup%2Ferrgroup.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2Ferrgroup%2Ferrgroup.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2Ferrgroup%2Ferrgroup.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -4,6 +4,9 @@\n \n // Package errgroup provides synchronization, error propagation, and Context\n // cancelation for groups of goroutines working on subtasks of a common task.\n+//\n+// [errgroup.Group] is related to [sync.WaitGroup] but adds handling of tasks\n+// returning errors.\n package errgroup\n \n import ("
    },
    {
      "sha": "c6492020ec79c752e910d2ccda84b1b03a8bb19e",
      "filename": "backend/vendor/golang.org/x/sys/unix/mkerrors.sh",
      "status": "modified",
      "additions": 21,
      "deletions": 16,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkerrors.sh",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkerrors.sh",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkerrors.sh?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -248,6 +248,7 @@ struct ltchars {\n #include <linux/module.h>\n #include <linux/mount.h>\n #include <linux/netfilter/nfnetlink.h>\n+#include <linux/netfilter/nf_tables.h>\n #include <linux/netlink.h>\n #include <linux/net_namespace.h>\n #include <linux/nfc.h>\n@@ -283,10 +284,6 @@ struct ltchars {\n #include <asm/termbits.h>\n #endif\n \n-#ifndef MSG_FASTOPEN\n-#define MSG_FASTOPEN    0x20000000\n-#endif\n-\n #ifndef PTRACE_GETREGS\n #define PTRACE_GETREGS\t0xc\n #endif\n@@ -295,14 +292,6 @@ struct ltchars {\n #define PTRACE_SETREGS\t0xd\n #endif\n \n-#ifndef SOL_NETLINK\n-#define SOL_NETLINK\t270\n-#endif\n-\n-#ifndef SOL_SMC\n-#define SOL_SMC 286\n-#endif\n-\n #ifdef SOL_BLUETOOTH\n // SPARC includes this in /usr/include/sparc64-linux-gnu/bits/socket.h\n // but it is already in bluetooth_linux.go\n@@ -319,10 +308,23 @@ struct ltchars {\n #undef TIPC_WAIT_FOREVER\n #define TIPC_WAIT_FOREVER 0xffffffff\n \n-// Copied from linux/l2tp.h\n-// Including linux/l2tp.h here causes conflicts between linux/in.h\n-// and netinet/in.h included via net/route.h above.\n-#define IPPROTO_L2TP\t\t115\n+// Copied from linux/netfilter/nf_nat.h\n+// Including linux/netfilter/nf_nat.h here causes conflicts between linux/in.h\n+// and netinet/in.h.\n+#define NF_NAT_RANGE_MAP_IPS\t\t\t(1 << 0)\n+#define NF_NAT_RANGE_PROTO_SPECIFIED\t\t(1 << 1)\n+#define NF_NAT_RANGE_PROTO_RANDOM\t\t(1 << 2)\n+#define NF_NAT_RANGE_PERSISTENT\t\t\t(1 << 3)\n+#define NF_NAT_RANGE_PROTO_RANDOM_FULLY\t\t(1 << 4)\n+#define NF_NAT_RANGE_PROTO_OFFSET\t\t(1 << 5)\n+#define NF_NAT_RANGE_NETMAP\t\t\t(1 << 6)\n+#define NF_NAT_RANGE_PROTO_RANDOM_ALL\t\t\\\n+\t(NF_NAT_RANGE_PROTO_RANDOM | NF_NAT_RANGE_PROTO_RANDOM_FULLY)\n+#define NF_NAT_RANGE_MASK\t\t\t\t\t\\\n+\t(NF_NAT_RANGE_MAP_IPS | NF_NAT_RANGE_PROTO_SPECIFIED |\t\\\n+\t NF_NAT_RANGE_PROTO_RANDOM | NF_NAT_RANGE_PERSISTENT |\t\\\n+\t NF_NAT_RANGE_PROTO_RANDOM_FULLY | NF_NAT_RANGE_PROTO_OFFSET | \\\n+\t NF_NAT_RANGE_NETMAP)\n \n // Copied from linux/hid.h.\n // Keep in sync with the size of the referenced fields.\n@@ -603,6 +605,9 @@ ccflags=\"$@\"\n \t\t$2 ~ /^FSOPT_/ ||\n \t\t$2 ~ /^WDIO[CFS]_/ ||\n \t\t$2 ~ /^NFN/ ||\n+\t\t$2 !~ /^NFT_META_IIFTYPE/ &&\n+\t\t$2 ~ /^NFT_/ ||\n+\t\t$2 ~ /^NF_NAT_/ ||\n \t\t$2 ~ /^XDP_/ ||\n \t\t$2 ~ /^RWF_/ ||\n \t\t$2 ~ /^(HDIO|WIN|SMART)_/ ||"
    },
    {
      "sha": "a5d3ff8df95e78a021e91d2ff312b1ac95c65b19",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux.go",
      "status": "modified",
      "additions": 54,
      "deletions": 0,
      "changes": 54,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2127,6 +2127,60 @@ const (\n \tNFNL_SUBSYS_QUEUE                           = 0x3\n \tNFNL_SUBSYS_ULOG                            = 0x4\n \tNFS_SUPER_MAGIC                             = 0x6969\n+\tNFT_CHAIN_FLAGS                             = 0x7\n+\tNFT_CHAIN_MAXNAMELEN                        = 0x100\n+\tNFT_CT_MAX                                  = 0x17\n+\tNFT_DATA_RESERVED_MASK                      = 0xffffff00\n+\tNFT_DATA_VALUE_MAXLEN                       = 0x40\n+\tNFT_EXTHDR_OP_MAX                           = 0x4\n+\tNFT_FIB_RESULT_MAX                          = 0x3\n+\tNFT_INNER_MASK                              = 0xf\n+\tNFT_LOGLEVEL_MAX                            = 0x8\n+\tNFT_NAME_MAXLEN                             = 0x100\n+\tNFT_NG_MAX                                  = 0x1\n+\tNFT_OBJECT_CONNLIMIT                        = 0x5\n+\tNFT_OBJECT_COUNTER                          = 0x1\n+\tNFT_OBJECT_CT_EXPECT                        = 0x9\n+\tNFT_OBJECT_CT_HELPER                        = 0x3\n+\tNFT_OBJECT_CT_TIMEOUT                       = 0x7\n+\tNFT_OBJECT_LIMIT                            = 0x4\n+\tNFT_OBJECT_MAX                              = 0xa\n+\tNFT_OBJECT_QUOTA                            = 0x2\n+\tNFT_OBJECT_SECMARK                          = 0x8\n+\tNFT_OBJECT_SYNPROXY                         = 0xa\n+\tNFT_OBJECT_TUNNEL                           = 0x6\n+\tNFT_OBJECT_UNSPEC                           = 0x0\n+\tNFT_OBJ_MAXNAMELEN                          = 0x100\n+\tNFT_OSF_MAXGENRELEN                         = 0x10\n+\tNFT_QUEUE_FLAG_BYPASS                       = 0x1\n+\tNFT_QUEUE_FLAG_CPU_FANOUT                   = 0x2\n+\tNFT_QUEUE_FLAG_MASK                         = 0x3\n+\tNFT_REG32_COUNT                             = 0x10\n+\tNFT_REG32_SIZE                              = 0x4\n+\tNFT_REG_MAX                                 = 0x4\n+\tNFT_REG_SIZE                                = 0x10\n+\tNFT_REJECT_ICMPX_MAX                        = 0x3\n+\tNFT_RT_MAX                                  = 0x4\n+\tNFT_SECMARK_CTX_MAXLEN                      = 0x100\n+\tNFT_SET_MAXNAMELEN                          = 0x100\n+\tNFT_SOCKET_MAX                              = 0x3\n+\tNFT_TABLE_F_MASK                            = 0x3\n+\tNFT_TABLE_MAXNAMELEN                        = 0x100\n+\tNFT_TRACETYPE_MAX                           = 0x3\n+\tNFT_TUNNEL_F_MASK                           = 0x7\n+\tNFT_TUNNEL_MAX                              = 0x1\n+\tNFT_TUNNEL_MODE_MAX                         = 0x2\n+\tNFT_USERDATA_MAXLEN                         = 0x100\n+\tNFT_XFRM_KEY_MAX                            = 0x6\n+\tNF_NAT_RANGE_MAP_IPS                        = 0x1\n+\tNF_NAT_RANGE_MASK                           = 0x7f\n+\tNF_NAT_RANGE_NETMAP                         = 0x40\n+\tNF_NAT_RANGE_PERSISTENT                     = 0x8\n+\tNF_NAT_RANGE_PROTO_OFFSET                   = 0x20\n+\tNF_NAT_RANGE_PROTO_RANDOM                   = 0x4\n+\tNF_NAT_RANGE_PROTO_RANDOM_ALL               = 0x14\n+\tNF_NAT_RANGE_PROTO_RANDOM_FULLY             = 0x10\n+\tNF_NAT_RANGE_PROTO_SPECIFIED                = 0x2\n \tNILFS_SUPER_MAGIC                           = 0x3434\n \tNL0                                         = 0x0\n \tNL1                                         = 0x100"
    },
    {
      "sha": "9dc42410b78b13852c9fbc564ea11447a64f17c9",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_386.go",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_386.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_386.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2297,5 +2297,3 @@ func unveil(path *byte, flags *byte) (err error) {\n var libc_unveil_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_unveil unveil \"libc.so\"\n-\n-"
    },
    {
      "sha": "0d3a0751cd435adb1703bdf992d78d6c06300f27",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_amd64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_amd64.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2297,5 +2297,3 @@ func unveil(path *byte, flags *byte) (err error) {\n var libc_unveil_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_unveil unveil \"libc.so\"\n-\n-"
    },
    {
      "sha": "c39f7776db33ff5c56def7d3c2914a4384390d55",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm.go",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_arm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_arm.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2297,5 +2297,3 @@ func unveil(path *byte, flags *byte) (err error) {\n var libc_unveil_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_unveil unveil \"libc.so\"\n-\n-"
    },
    {
      "sha": "57571d072fe6ec7112439e9993668965dceaf604",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_arm64.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2297,5 +2297,3 @@ func unveil(path *byte, flags *byte) (err error) {\n var libc_unveil_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_unveil unveil \"libc.so\"\n-\n-"
    },
    {
      "sha": "e62963e67e204a7350d12d6639d399e9a78b51a7",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_mips64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_mips64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_mips64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_mips64.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2297,5 +2297,3 @@ func unveil(path *byte, flags *byte) (err error) {\n var libc_unveil_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_unveil unveil \"libc.so\"\n-\n-"
    },
    {
      "sha": "00831354c82f49b2b736978fa64c61514b0f0921",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_ppc64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_ppc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_ppc64.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2297,5 +2297,3 @@ func unveil(path *byte, flags *byte) (err error) {\n var libc_unveil_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_unveil unveil \"libc.so\"\n-\n-"
    },
    {
      "sha": "79029ed584825f1fe31af52feaaaec2277b7be23",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_riscv64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_riscv64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_openbsd_riscv64.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2297,5 +2297,3 @@ func unveil(path *byte, flags *byte) (err error) {\n var libc_unveil_trampoline_addr uintptr\n \n //go:cgo_import_dynamic libc_unveil unveil \"libc.so\"\n-\n-"
    },
    {
      "sha": "ffb8708ccf8afdced32baa2666954056e4de316d",
      "filename": "backend/vendor/golang.org/x/sys/windows/syscall_windows.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall_windows.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -194,6 +194,7 @@ func NewCallbackCDecl(fn interface{}) uintptr {\n //sys\tGetComputerName(buf *uint16, n *uint32) (err error) = GetComputerNameW\n //sys\tGetComputerNameEx(nametype uint32, buf *uint16, n *uint32) (err error) = GetComputerNameExW\n //sys\tSetEndOfFile(handle Handle) (err error)\n+//sys\tSetFileValidData(handle Handle, validDataLength int64) (err error)\n //sys\tGetSystemTimeAsFileTime(time *Filetime)\n //sys\tGetSystemTimePreciseAsFileTime(time *Filetime)\n //sys\tGetTimeZoneInformation(tzi *Timezoneinformation) (rc uint32, err error) [failretval==0xffffffff]"
    },
    {
      "sha": "e8791c82c30f445a0a8ff95b01462140ff183171",
      "filename": "backend/vendor/golang.org/x/sys/windows/zsyscall_windows.go",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fzsyscall_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fzsyscall_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fzsyscall_windows.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -342,6 +342,7 @@ var (\n \tprocSetDefaultDllDirectories                             = modkernel32.NewProc(\"SetDefaultDllDirectories\")\n \tprocSetDllDirectoryW                                     = modkernel32.NewProc(\"SetDllDirectoryW\")\n \tprocSetEndOfFile                                         = modkernel32.NewProc(\"SetEndOfFile\")\n+\tprocSetFileValidData                                     = modkernel32.NewProc(\"SetFileValidData\")\n \tprocSetEnvironmentVariableW                              = modkernel32.NewProc(\"SetEnvironmentVariableW\")\n \tprocSetErrorMode                                         = modkernel32.NewProc(\"SetErrorMode\")\n \tprocSetEvent                                             = modkernel32.NewProc(\"SetEvent\")\n@@ -2988,6 +2989,14 @@ func SetEndOfFile(handle Handle) (err error) {\n \treturn\n }\n \n+func SetFileValidData(handle Handle, validDataLength int64) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procSetFileValidData.Addr(), 2, uintptr(handle), uintptr(validDataLength), 0)\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n func SetEnvironmentVariable(name *uint16, value *uint16) (err error) {\n \tr1, _, e1 := syscall.Syscall(procSetEnvironmentVariableW.Addr(), 2, uintptr(unsafe.Pointer(name)), uintptr(unsafe.Pointer(value)), 0)\n \tif r1 == 0 {"
    },
    {
      "sha": "a45f112bce304bb05f41375fcbe1408abd8418c4",
      "filename": "backend/vendor/google.golang.org/protobuf/encoding/prototext/decode.go",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fdecode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fdecode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fdecode.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -21,7 +21,7 @@ import (\n \t\"google.golang.org/protobuf/reflect/protoregistry\"\n )\n \n-// Unmarshal reads the given []byte into the given proto.Message.\n+// Unmarshal reads the given []byte into the given [proto.Message].\n // The provided message must be mutable (e.g., a non-nil pointer to a message).\n func Unmarshal(b []byte, m proto.Message) error {\n \treturn UnmarshalOptions{}.Unmarshal(b, m)\n@@ -51,7 +51,7 @@ type UnmarshalOptions struct {\n \t}\n }\n \n-// Unmarshal reads the given []byte and populates the given proto.Message\n+// Unmarshal reads the given []byte and populates the given [proto.Message]\n // using options in the UnmarshalOptions object.\n // The provided message must be mutable (e.g., a non-nil pointer to a message).\n func (o UnmarshalOptions) Unmarshal(b []byte, m proto.Message) error {\n@@ -739,7 +739,9 @@ func (d decoder) skipValue() error {\n \t\t\tcase text.ListClose:\n \t\t\t\treturn nil\n \t\t\tcase text.MessageOpen:\n-\t\t\t\treturn d.skipMessageValue()\n+\t\t\t\tif err := d.skipMessageValue(); err != nil {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n \t\t\tdefault:\n \t\t\t\t// Skip items. This will not validate whether skipped values are\n \t\t\t\t// of the same type or not, same behavior as C++"
    },
    {
      "sha": "95967e8112a7c2050d039568010f9daebbb72987",
      "filename": "backend/vendor/google.golang.org/protobuf/encoding/prototext/encode.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fencode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fencode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fencode.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -33,7 +33,7 @@ func Format(m proto.Message) string {\n \treturn MarshalOptions{Multiline: true}.Format(m)\n }\n \n-// Marshal writes the given proto.Message in textproto format using default\n+// Marshal writes the given [proto.Message] in textproto format using default\n // options. Do not depend on the output being stable. It may change over time\n // across different versions of the program.\n func Marshal(m proto.Message) ([]byte, error) {\n@@ -97,7 +97,7 @@ func (o MarshalOptions) Format(m proto.Message) string {\n \treturn string(b)\n }\n \n-// Marshal writes the given proto.Message in textproto format using options in\n+// Marshal writes the given [proto.Message] in textproto format using options in\n // MarshalOptions object. Do not depend on the output being stable. It may\n // change over time across different versions of the program.\n func (o MarshalOptions) Marshal(m proto.Message) ([]byte, error) {"
    },
    {
      "sha": "e942bc983eedf0198e542d99b4abb8e22b75c718",
      "filename": "backend/vendor/google.golang.org/protobuf/encoding/protowire/wire.go",
      "status": "modified",
      "additions": 14,
      "deletions": 14,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprotowire%2Fwire.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprotowire%2Fwire.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprotowire%2Fwire.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -6,7 +6,7 @@\n // See https://protobuf.dev/programming-guides/encoding.\n //\n // For marshaling and unmarshaling entire protobuf messages,\n-// use the \"google.golang.org/protobuf/proto\" package instead.\n+// use the [google.golang.org/protobuf/proto] package instead.\n package protowire\n \n import (\n@@ -87,7 +87,7 @@ func ParseError(n int) error {\n \n // ConsumeField parses an entire field record (both tag and value) and returns\n // the field number, the wire type, and the total length.\n-// This returns a negative length upon an error (see ParseError).\n+// This returns a negative length upon an error (see [ParseError]).\n //\n // The total length includes the tag header and the end group marker (if the\n // field is a group).\n@@ -104,8 +104,8 @@ func ConsumeField(b []byte) (Number, Type, int) {\n }\n \n // ConsumeFieldValue parses a field value and returns its length.\n-// This assumes that the field Number and wire Type have already been parsed.\n-// This returns a negative length upon an error (see ParseError).\n+// This assumes that the field [Number] and wire [Type] have already been parsed.\n+// This returns a negative length upon an error (see [ParseError]).\n //\n // When parsing a group, the length includes the end group marker and\n // the end group is verified to match the starting field number.\n@@ -164,7 +164,7 @@ func AppendTag(b []byte, num Number, typ Type) []byte {\n }\n \n // ConsumeTag parses b as a varint-encoded tag, reporting its length.\n-// This returns a negative length upon an error (see ParseError).\n+// This returns a negative length upon an error (see [ParseError]).\n func ConsumeTag(b []byte) (Number, Type, int) {\n \tv, n := ConsumeVarint(b)\n \tif n < 0 {\n@@ -263,7 +263,7 @@ func AppendVarint(b []byte, v uint64) []byte {\n }\n \n // ConsumeVarint parses b as a varint-encoded uint64, reporting its length.\n-// This returns a negative length upon an error (see ParseError).\n+// This returns a negative length upon an error (see [ParseError]).\n func ConsumeVarint(b []byte) (v uint64, n int) {\n \tvar y uint64\n \tif len(b) <= 0 {\n@@ -384,7 +384,7 @@ func AppendFixed32(b []byte, v uint32) []byte {\n }\n \n // ConsumeFixed32 parses b as a little-endian uint32, reporting its length.\n-// This returns a negative length upon an error (see ParseError).\n+// This returns a negative length upon an error (see [ParseError]).\n func ConsumeFixed32(b []byte) (v uint32, n int) {\n \tif len(b) < 4 {\n \t\treturn 0, errCodeTruncated\n@@ -412,7 +412,7 @@ func AppendFixed64(b []byte, v uint64) []byte {\n }\n \n // ConsumeFixed64 parses b as a little-endian uint64, reporting its length.\n-// This returns a negative length upon an error (see ParseError).\n+// This returns a negative length upon an error (see [ParseError]).\n func ConsumeFixed64(b []byte) (v uint64, n int) {\n \tif len(b) < 8 {\n \t\treturn 0, errCodeTruncated\n@@ -432,7 +432,7 @@ func AppendBytes(b []byte, v []byte) []byte {\n }\n \n // ConsumeBytes parses b as a length-prefixed bytes value, reporting its length.\n-// This returns a negative length upon an error (see ParseError).\n+// This returns a negative length upon an error (see [ParseError]).\n func ConsumeBytes(b []byte) (v []byte, n int) {\n \tm, n := ConsumeVarint(b)\n \tif n < 0 {\n@@ -456,7 +456,7 @@ func AppendString(b []byte, v string) []byte {\n }\n \n // ConsumeString parses b as a length-prefixed bytes value, reporting its length.\n-// This returns a negative length upon an error (see ParseError).\n+// This returns a negative length upon an error (see [ParseError]).\n func ConsumeString(b []byte) (v string, n int) {\n \tbb, n := ConsumeBytes(b)\n \treturn string(bb), n\n@@ -471,7 +471,7 @@ func AppendGroup(b []byte, num Number, v []byte) []byte {\n // ConsumeGroup parses b as a group value until the trailing end group marker,\n // and verifies that the end marker matches the provided num. The value v\n // does not contain the end marker, while the length does contain the end marker.\n-// This returns a negative length upon an error (see ParseError).\n+// This returns a negative length upon an error (see [ParseError]).\n func ConsumeGroup(num Number, b []byte) (v []byte, n int) {\n \tn = ConsumeFieldValue(num, StartGroupType, b)\n \tif n < 0 {\n@@ -495,8 +495,8 @@ func SizeGroup(num Number, n int) int {\n \treturn n + SizeTag(num)\n }\n \n-// DecodeTag decodes the field Number and wire Type from its unified form.\n-// The Number is -1 if the decoded field number overflows int32.\n+// DecodeTag decodes the field [Number] and wire [Type] from its unified form.\n+// The [Number] is -1 if the decoded field number overflows int32.\n // Other than overflow, this does not check for field number validity.\n func DecodeTag(x uint64) (Number, Type) {\n \t// NOTE: MessageSet allows for larger field numbers than normal.\n@@ -506,7 +506,7 @@ func DecodeTag(x uint64) (Number, Type) {\n \treturn Number(x >> 3), Type(x & 7)\n }\n \n-// EncodeTag encodes the field Number and wire Type into its unified form.\n+// EncodeTag encodes the field [Number] and wire [Type] into its unified form.\n func EncodeTag(num Number, typ Type) uint64 {\n \treturn uint64(num)<<3 | uint64(typ&7)\n }"
    },
    {
      "sha": "a45625c8d1f4105b40f7fb902b65f66eac5094c1",
      "filename": "backend/vendor/google.golang.org/protobuf/internal/descfmt/stringer.go",
      "status": "modified",
      "additions": 139,
      "deletions": 44,
      "changes": 183,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fdescfmt%2Fstringer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fdescfmt%2Fstringer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fdescfmt%2Fstringer.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -83,7 +83,13 @@ func formatListOpt(vs list, isRoot, allowMulti bool) string {\n \tcase protoreflect.FileImports:\n \t\tfor i := 0; i < vs.Len(); i++ {\n \t\t\tvar rs records\n-\t\t\trs.Append(reflect.ValueOf(vs.Get(i)), \"Path\", \"Package\", \"IsPublic\", \"IsWeak\")\n+\t\t\trv := reflect.ValueOf(vs.Get(i))\n+\t\t\trs.Append(rv, []methodAndName{\n+\t\t\t\t{rv.MethodByName(\"Path\"), \"Path\"},\n+\t\t\t\t{rv.MethodByName(\"Package\"), \"Package\"},\n+\t\t\t\t{rv.MethodByName(\"IsPublic\"), \"IsPublic\"},\n+\t\t\t\t{rv.MethodByName(\"IsWeak\"), \"IsWeak\"},\n+\t\t\t}...)\n \t\t\tss = append(ss, \"{\"+rs.Join()+\"}\")\n \t\t}\n \t\treturn start + joinStrings(ss, allowMulti) + end\n@@ -92,34 +98,26 @@ func formatListOpt(vs list, isRoot, allowMulti bool) string {\n \t\tfor i := 0; i < vs.Len(); i++ {\n \t\t\tm := reflect.ValueOf(vs).MethodByName(\"Get\")\n \t\t\tv := m.Call([]reflect.Value{reflect.ValueOf(i)})[0].Interface()\n-\t\t\tss = append(ss, formatDescOpt(v.(protoreflect.Descriptor), false, allowMulti && !isEnumValue))\n+\t\t\tss = append(ss, formatDescOpt(v.(protoreflect.Descriptor), false, allowMulti && !isEnumValue, nil))\n \t\t}\n \t\treturn start + joinStrings(ss, allowMulti && isEnumValue) + end\n \t}\n }\n \n-// descriptorAccessors is a list of accessors to print for each descriptor.\n-//\n-// Do not print all accessors since some contain redundant information,\n-// while others are pointers that we do not want to follow since the descriptor\n-// is actually a cyclic graph.\n-//\n-// Using a list allows us to print the accessors in a sensible order.\n-var descriptorAccessors = map[reflect.Type][]string{\n-\treflect.TypeOf((*protoreflect.FileDescriptor)(nil)).Elem():      {\"Path\", \"Package\", \"Imports\", \"Messages\", \"Enums\", \"Extensions\", \"Services\"},\n-\treflect.TypeOf((*protoreflect.MessageDescriptor)(nil)).Elem():   {\"IsMapEntry\", \"Fields\", \"Oneofs\", \"ReservedNames\", \"ReservedRanges\", \"RequiredNumbers\", \"ExtensionRanges\", \"Messages\", \"Enums\", \"Extensions\"},\n-\treflect.TypeOf((*protoreflect.FieldDescriptor)(nil)).Elem():     {\"Number\", \"Cardinality\", \"Kind\", \"HasJSONName\", \"JSONName\", \"HasPresence\", \"IsExtension\", \"IsPacked\", \"IsWeak\", \"IsList\", \"IsMap\", \"MapKey\", \"MapValue\", \"HasDefault\", \"Default\", \"ContainingOneof\", \"ContainingMessage\", \"Message\", \"Enum\"},\n-\treflect.TypeOf((*protoreflect.OneofDescriptor)(nil)).Elem():     {\"Fields\"}, // not directly used; must keep in sync with formatDescOpt\n-\treflect.TypeOf((*protoreflect.EnumDescriptor)(nil)).Elem():      {\"Values\", \"ReservedNames\", \"ReservedRanges\"},\n-\treflect.TypeOf((*protoreflect.EnumValueDescriptor)(nil)).Elem(): {\"Number\"},\n-\treflect.TypeOf((*protoreflect.ServiceDescriptor)(nil)).Elem():   {\"Methods\"},\n-\treflect.TypeOf((*protoreflect.MethodDescriptor)(nil)).Elem():    {\"Input\", \"Output\", \"IsStreamingClient\", \"IsStreamingServer\"},\n+type methodAndName struct {\n+\tmethod reflect.Value\n+\tname   string\n }\n \n func FormatDesc(s fmt.State, r rune, t protoreflect.Descriptor) {\n-\tio.WriteString(s, formatDescOpt(t, true, r == 'v' && (s.Flag('+') || s.Flag('#'))))\n+\tio.WriteString(s, formatDescOpt(t, true, r == 'v' && (s.Flag('+') || s.Flag('#')), nil))\n }\n-func formatDescOpt(t protoreflect.Descriptor, isRoot, allowMulti bool) string {\n+\n+func InternalFormatDescOptForTesting(t protoreflect.Descriptor, isRoot, allowMulti bool, record func(string)) string {\n+\treturn formatDescOpt(t, isRoot, allowMulti, record)\n+}\n+\n+func formatDescOpt(t protoreflect.Descriptor, isRoot, allowMulti bool, record func(string)) string {\n \trv := reflect.ValueOf(t)\n \trt := rv.MethodByName(\"ProtoType\").Type().In(0)\n \n@@ -129,26 +127,60 @@ func formatDescOpt(t protoreflect.Descriptor, isRoot, allowMulti bool) string {\n \t}\n \n \t_, isFile := t.(protoreflect.FileDescriptor)\n-\trs := records{allowMulti: allowMulti}\n+\trs := records{\n+\t\tallowMulti: allowMulti,\n+\t\trecord:     record,\n+\t}\n \tif t.IsPlaceholder() {\n \t\tif isFile {\n-\t\t\trs.Append(rv, \"Path\", \"Package\", \"IsPlaceholder\")\n+\t\t\trs.Append(rv, []methodAndName{\n+\t\t\t\t{rv.MethodByName(\"Path\"), \"Path\"},\n+\t\t\t\t{rv.MethodByName(\"Package\"), \"Package\"},\n+\t\t\t\t{rv.MethodByName(\"IsPlaceholder\"), \"IsPlaceholder\"},\n+\t\t\t}...)\n \t\t} else {\n-\t\t\trs.Append(rv, \"FullName\", \"IsPlaceholder\")\n+\t\t\trs.Append(rv, []methodAndName{\n+\t\t\t\t{rv.MethodByName(\"FullName\"), \"FullName\"},\n+\t\t\t\t{rv.MethodByName(\"IsPlaceholder\"), \"IsPlaceholder\"},\n+\t\t\t}...)\n \t\t}\n \t} else {\n \t\tswitch {\n \t\tcase isFile:\n-\t\t\trs.Append(rv, \"Syntax\")\n+\t\t\trs.Append(rv, methodAndName{rv.MethodByName(\"Syntax\"), \"Syntax\"})\n \t\tcase isRoot:\n-\t\t\trs.Append(rv, \"Syntax\", \"FullName\")\n+\t\t\trs.Append(rv, []methodAndName{\n+\t\t\t\t{rv.MethodByName(\"Syntax\"), \"Syntax\"},\n+\t\t\t\t{rv.MethodByName(\"FullName\"), \"FullName\"},\n+\t\t\t}...)\n \t\tdefault:\n-\t\t\trs.Append(rv, \"Name\")\n+\t\t\trs.Append(rv, methodAndName{rv.MethodByName(\"Name\"), \"Name\"})\n \t\t}\n \t\tswitch t := t.(type) {\n \t\tcase protoreflect.FieldDescriptor:\n-\t\t\tfor _, s := range descriptorAccessors[rt] {\n-\t\t\t\tswitch s {\n+\t\t\taccessors := []methodAndName{\n+\t\t\t\t{rv.MethodByName(\"Number\"), \"Number\"},\n+\t\t\t\t{rv.MethodByName(\"Cardinality\"), \"Cardinality\"},\n+\t\t\t\t{rv.MethodByName(\"Kind\"), \"Kind\"},\n+\t\t\t\t{rv.MethodByName(\"HasJSONName\"), \"HasJSONName\"},\n+\t\t\t\t{rv.MethodByName(\"JSONName\"), \"JSONName\"},\n+\t\t\t\t{rv.MethodByName(\"HasPresence\"), \"HasPresence\"},\n+\t\t\t\t{rv.MethodByName(\"IsExtension\"), \"IsExtension\"},\n+\t\t\t\t{rv.MethodByName(\"IsPacked\"), \"IsPacked\"},\n+\t\t\t\t{rv.MethodByName(\"IsWeak\"), \"IsWeak\"},\n+\t\t\t\t{rv.MethodByName(\"IsList\"), \"IsList\"},\n+\t\t\t\t{rv.MethodByName(\"IsMap\"), \"IsMap\"},\n+\t\t\t\t{rv.MethodByName(\"MapKey\"), \"MapKey\"},\n+\t\t\t\t{rv.MethodByName(\"MapValue\"), \"MapValue\"},\n+\t\t\t\t{rv.MethodByName(\"HasDefault\"), \"HasDefault\"},\n+\t\t\t\t{rv.MethodByName(\"Default\"), \"Default\"},\n+\t\t\t\t{rv.MethodByName(\"ContainingOneof\"), \"ContainingOneof\"},\n+\t\t\t\t{rv.MethodByName(\"ContainingMessage\"), \"ContainingMessage\"},\n+\t\t\t\t{rv.MethodByName(\"Message\"), \"Message\"},\n+\t\t\t\t{rv.MethodByName(\"Enum\"), \"Enum\"},\n+\t\t\t}\n+\t\t\tfor _, s := range accessors {\n+\t\t\t\tswitch s.name {\n \t\t\t\tcase \"MapKey\":\n \t\t\t\t\tif k := t.MapKey(); k != nil {\n \t\t\t\t\t\trs.recs = append(rs.recs, [2]string{\"MapKey\", k.Kind().String()})\n@@ -157,20 +189,20 @@ func formatDescOpt(t protoreflect.Descriptor, isRoot, allowMulti bool) string {\n \t\t\t\t\tif v := t.MapValue(); v != nil {\n \t\t\t\t\t\tswitch v.Kind() {\n \t\t\t\t\t\tcase protoreflect.EnumKind:\n-\t\t\t\t\t\t\trs.recs = append(rs.recs, [2]string{\"MapValue\", string(v.Enum().FullName())})\n+\t\t\t\t\t\t\trs.AppendRecs(\"MapValue\", [2]string{\"MapValue\", string(v.Enum().FullName())})\n \t\t\t\t\t\tcase protoreflect.MessageKind, protoreflect.GroupKind:\n-\t\t\t\t\t\t\trs.recs = append(rs.recs, [2]string{\"MapValue\", string(v.Message().FullName())})\n+\t\t\t\t\t\t\trs.AppendRecs(\"MapValue\", [2]string{\"MapValue\", string(v.Message().FullName())})\n \t\t\t\t\t\tdefault:\n-\t\t\t\t\t\t\trs.recs = append(rs.recs, [2]string{\"MapValue\", v.Kind().String()})\n+\t\t\t\t\t\t\trs.AppendRecs(\"MapValue\", [2]string{\"MapValue\", v.Kind().String()})\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\tcase \"ContainingOneof\":\n \t\t\t\t\tif od := t.ContainingOneof(); od != nil {\n-\t\t\t\t\t\trs.recs = append(rs.recs, [2]string{\"Oneof\", string(od.Name())})\n+\t\t\t\t\t\trs.AppendRecs(\"ContainingOneof\", [2]string{\"Oneof\", string(od.Name())})\n \t\t\t\t\t}\n \t\t\t\tcase \"ContainingMessage\":\n \t\t\t\t\tif t.IsExtension() {\n-\t\t\t\t\t\trs.recs = append(rs.recs, [2]string{\"Extendee\", string(t.ContainingMessage().FullName())})\n+\t\t\t\t\t\trs.AppendRecs(\"ContainingMessage\", [2]string{\"Extendee\", string(t.ContainingMessage().FullName())})\n \t\t\t\t\t}\n \t\t\t\tcase \"Message\":\n \t\t\t\t\tif !t.IsMap() {\n@@ -187,13 +219,61 @@ func formatDescOpt(t protoreflect.Descriptor, isRoot, allowMulti bool) string {\n \t\t\t\tss = append(ss, string(fs.Get(i).Name()))\n \t\t\t}\n \t\t\tif len(ss) > 0 {\n-\t\t\t\trs.recs = append(rs.recs, [2]string{\"Fields\", \"[\" + joinStrings(ss, false) + \"]\"})\n+\t\t\t\trs.AppendRecs(\"Fields\", [2]string{\"Fields\", \"[\" + joinStrings(ss, false) + \"]\"})\n \t\t\t}\n-\t\tdefault:\n-\t\t\trs.Append(rv, descriptorAccessors[rt]...)\n+\n+\t\tcase protoreflect.FileDescriptor:\n+\t\t\trs.Append(rv, []methodAndName{\n+\t\t\t\t{rv.MethodByName(\"Path\"), \"Path\"},\n+\t\t\t\t{rv.MethodByName(\"Package\"), \"Package\"},\n+\t\t\t\t{rv.MethodByName(\"Imports\"), \"Imports\"},\n+\t\t\t\t{rv.MethodByName(\"Messages\"), \"Messages\"},\n+\t\t\t\t{rv.MethodByName(\"Enums\"), \"Enums\"},\n+\t\t\t\t{rv.MethodByName(\"Extensions\"), \"Extensions\"},\n+\t\t\t\t{rv.MethodByName(\"Services\"), \"Services\"},\n+\t\t\t}...)\n+\n+\t\tcase protoreflect.MessageDescriptor:\n+\t\t\trs.Append(rv, []methodAndName{\n+\t\t\t\t{rv.MethodByName(\"IsMapEntry\"), \"IsMapEntry\"},\n+\t\t\t\t{rv.MethodByName(\"Fields\"), \"Fields\"},\n+\t\t\t\t{rv.MethodByName(\"Oneofs\"), \"Oneofs\"},\n+\t\t\t\t{rv.MethodByName(\"ReservedNames\"), \"ReservedNames\"},\n+\t\t\t\t{rv.MethodByName(\"ReservedRanges\"), \"ReservedRanges\"},\n+\t\t\t\t{rv.MethodByName(\"RequiredNumbers\"), \"RequiredNumbers\"},\n+\t\t\t\t{rv.MethodByName(\"ExtensionRanges\"), \"ExtensionRanges\"},\n+\t\t\t\t{rv.MethodByName(\"Messages\"), \"Messages\"},\n+\t\t\t\t{rv.MethodByName(\"Enums\"), \"Enums\"},\n+\t\t\t\t{rv.MethodByName(\"Extensions\"), \"Extensions\"},\n+\t\t\t}...)\n+\n+\t\tcase protoreflect.EnumDescriptor:\n+\t\t\trs.Append(rv, []methodAndName{\n+\t\t\t\t{rv.MethodByName(\"Values\"), \"Values\"},\n+\t\t\t\t{rv.MethodByName(\"ReservedNames\"), \"ReservedNames\"},\n+\t\t\t\t{rv.MethodByName(\"ReservedRanges\"), \"ReservedRanges\"},\n+\t\t\t}...)\n+\n+\t\tcase protoreflect.EnumValueDescriptor:\n+\t\t\trs.Append(rv, []methodAndName{\n+\t\t\t\t{rv.MethodByName(\"Number\"), \"Number\"},\n+\t\t\t}...)\n+\n+\t\tcase protoreflect.ServiceDescriptor:\n+\t\t\trs.Append(rv, []methodAndName{\n+\t\t\t\t{rv.MethodByName(\"Methods\"), \"Methods\"},\n+\t\t\t}...)\n+\n+\t\tcase protoreflect.MethodDescriptor:\n+\t\t\trs.Append(rv, []methodAndName{\n+\t\t\t\t{rv.MethodByName(\"Input\"), \"Input\"},\n+\t\t\t\t{rv.MethodByName(\"Output\"), \"Output\"},\n+\t\t\t\t{rv.MethodByName(\"IsStreamingClient\"), \"IsStreamingClient\"},\n+\t\t\t\t{rv.MethodByName(\"IsStreamingServer\"), \"IsStreamingServer\"},\n+\t\t\t}...)\n \t\t}\n-\t\tif rv.MethodByName(\"GoType\").IsValid() {\n-\t\t\trs.Append(rv, \"GoType\")\n+\t\tif m := rv.MethodByName(\"GoType\"); m.IsValid() {\n+\t\t\trs.Append(rv, methodAndName{m, \"GoType\"})\n \t\t}\n \t}\n \treturn start + rs.Join() + end\n@@ -202,19 +282,34 @@ func formatDescOpt(t protoreflect.Descriptor, isRoot, allowMulti bool) string {\n type records struct {\n \trecs       [][2]string\n \tallowMulti bool\n+\n+\t// record is a function that will be called for every Append() or\n+\t// AppendRecs() call, to be used for testing with the\n+\t// InternalFormatDescOptForTesting function.\n+\trecord func(string)\n }\n \n-func (rs *records) Append(v reflect.Value, accessors ...string) {\n+func (rs *records) AppendRecs(fieldName string, newRecs [2]string) {\n+\tif rs.record != nil {\n+\t\trs.record(fieldName)\n+\t}\n+\trs.recs = append(rs.recs, newRecs)\n+}\n+\n+func (rs *records) Append(v reflect.Value, accessors ...methodAndName) {\n \tfor _, a := range accessors {\n+\t\tif rs.record != nil {\n+\t\t\trs.record(a.name)\n+\t\t}\n \t\tvar rv reflect.Value\n-\t\tif m := v.MethodByName(a); m.IsValid() {\n-\t\t\trv = m.Call(nil)[0]\n+\t\tif a.method.IsValid() {\n+\t\t\trv = a.method.Call(nil)[0]\n \t\t}\n \t\tif v.Kind() == reflect.Struct && !rv.IsValid() {\n-\t\t\trv = v.FieldByName(a)\n+\t\t\trv = v.FieldByName(a.name)\n \t\t}\n \t\tif !rv.IsValid() {\n-\t\t\tpanic(fmt.Sprintf(\"unknown accessor: %v.%s\", v.Type(), a))\n+\t\t\tpanic(fmt.Sprintf(\"unknown accessor: %v.%s\", v.Type(), a.name))\n \t\t}\n \t\tif _, ok := rv.Interface().(protoreflect.Value); ok {\n \t\t\trv = rv.MethodByName(\"Interface\").Call(nil)[0]\n@@ -261,7 +356,7 @@ func (rs *records) Append(v reflect.Value, accessors ...string) {\n \t\tdefault:\n \t\t\ts = fmt.Sprint(v)\n \t\t}\n-\t\trs.recs = append(rs.recs, [2]string{a, s})\n+\t\trs.recs = append(rs.recs, [2]string{a.name, s})\n \t}\n }\n "
    },
    {
      "sha": "193c68e8f91fabeb07da30b82bab7a865128c0a2",
      "filename": "backend/vendor/google.golang.org/protobuf/internal/filedesc/desc.go",
      "status": "modified",
      "additions": 46,
      "deletions": 1,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Ffiledesc%2Fdesc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Ffiledesc%2Fdesc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Ffiledesc%2Fdesc.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -21,11 +21,26 @@ import (\n \t\"google.golang.org/protobuf/reflect/protoregistry\"\n )\n \n+// Edition is an Enum for proto2.Edition\n+type Edition int32\n+\n+// These values align with the value of Enum in descriptor.proto which allows\n+// direct conversion between the proto enum and this enum.\n+const (\n+\tEditionUnknown     Edition = 0\n+\tEditionProto2      Edition = 998\n+\tEditionProto3      Edition = 999\n+\tEdition2023        Edition = 1000\n+\tEditionUnsupported Edition = 100000\n+)\n+\n // The types in this file may have a suffix:\n //\t• L0: Contains fields common to all descriptors (except File) and\n //\tmust be initialized up front.\n //\t• L1: Contains fields specific to a descriptor and\n-//\tmust be initialized up front.\n+//\tmust be initialized up front. If the associated proto uses Editions, the\n+//  Editions features must always be resolved. If not explicitly set, the\n+//  appropriate default must be resolved and set.\n //\t• L2: Contains fields that are lazily initialized when constructing\n //\tfrom the raw file descriptor. When constructing as a literal, the L2\n //\tfields must be initialized up front.\n@@ -44,19 +59,43 @@ type (\n \t}\n \tFileL1 struct {\n \t\tSyntax  protoreflect.Syntax\n+\t\tEdition Edition // Only used if Syntax == Editions\n \t\tPath    string\n \t\tPackage protoreflect.FullName\n \n \t\tEnums      Enums\n \t\tMessages   Messages\n \t\tExtensions Extensions\n \t\tServices   Services\n+\n+\t\tEditionFeatures FileEditionFeatures\n \t}\n \tFileL2 struct {\n \t\tOptions   func() protoreflect.ProtoMessage\n \t\tImports   FileImports\n \t\tLocations SourceLocations\n \t}\n+\n+\tFileEditionFeatures struct {\n+\t\t// IsFieldPresence is true if field_presence is EXPLICIT\n+\t\t// https://protobuf.dev/editions/features/#field_presence\n+\t\tIsFieldPresence bool\n+\t\t// IsOpenEnum is true if enum_type is OPEN\n+\t\t// https://protobuf.dev/editions/features/#enum_type\n+\t\tIsOpenEnum bool\n+\t\t// IsPacked is true if repeated_field_encoding is PACKED\n+\t\t// https://protobuf.dev/editions/features/#repeated_field_encoding\n+\t\tIsPacked bool\n+\t\t// IsUTF8Validated is true if utf_validation is VERIFY\n+\t\t// https://protobuf.dev/editions/features/#utf8_validation\n+\t\tIsUTF8Validated bool\n+\t\t// IsDelimitedEncoded is true if message_encoding is DELIMITED\n+\t\t// https://protobuf.dev/editions/features/#message_encoding\n+\t\tIsDelimitedEncoded bool\n+\t\t// IsJSONCompliant is true if json_format is ALLOW\n+\t\t// https://protobuf.dev/editions/features/#json_format\n+\t\tIsJSONCompliant bool\n+\t}\n )\n \n func (fd *File) ParentFile() protoreflect.FileDescriptor { return fd }\n@@ -210,6 +249,9 @@ type (\n \t\tContainingOneof  protoreflect.OneofDescriptor // must be consistent with Message.Oneofs.Fields\n \t\tEnum             protoreflect.EnumDescriptor\n \t\tMessage          protoreflect.MessageDescriptor\n+\n+\t\t// Edition features.\n+\t\tPresence bool\n \t}\n \n \tOneof struct {\n@@ -273,6 +315,9 @@ func (fd *Field) HasJSONName() bool                     { return fd.L1.StringNam\n func (fd *Field) JSONName() string                      { return fd.L1.StringName.getJSON(fd) }\n func (fd *Field) TextName() string                      { return fd.L1.StringName.getText(fd) }\n func (fd *Field) HasPresence() bool {\n+\tif fd.L0.ParentFile.L1.Syntax == protoreflect.Editions {\n+\t\treturn fd.L1.Presence || fd.L1.Message != nil || fd.L1.ContainingOneof != nil\n+\t}\n \treturn fd.L1.Cardinality != protoreflect.Repeated && (fd.L0.ParentFile.L1.Syntax == protoreflect.Proto2 || fd.L1.Message != nil || fd.L1.ContainingOneof != nil)\n }\n func (fd *Field) HasOptionalKeyword() bool {"
    },
    {
      "sha": "8f94230ea1c8e835ce292812454e547e9d8d1104",
      "filename": "backend/vendor/google.golang.org/protobuf/internal/genid/descriptor_gen.go",
      "status": "modified",
      "additions": 190,
      "deletions": 22,
      "changes": 212,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fgenid%2Fdescriptor_gen.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fgenid%2Fdescriptor_gen.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fgenid%2Fdescriptor_gen.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -12,6 +12,12 @@ import (\n \n const File_google_protobuf_descriptor_proto = \"google/protobuf/descriptor.proto\"\n \n+// Full and short names for google.protobuf.Edition.\n+const (\n+\tEdition_enum_fullname = \"google.protobuf.Edition\"\n+\tEdition_enum_name     = \"Edition\"\n+)\n+\n // Names for google.protobuf.FileDescriptorSet.\n const (\n \tFileDescriptorSet_message_name     protoreflect.Name     = \"FileDescriptorSet\"\n@@ -81,7 +87,7 @@ const (\n \tFileDescriptorProto_Options_field_number          protoreflect.FieldNumber = 8\n \tFileDescriptorProto_SourceCodeInfo_field_number   protoreflect.FieldNumber = 9\n \tFileDescriptorProto_Syntax_field_number           protoreflect.FieldNumber = 12\n-\tFileDescriptorProto_Edition_field_number          protoreflect.FieldNumber = 13\n+\tFileDescriptorProto_Edition_field_number          protoreflect.FieldNumber = 14\n )\n \n // Names for google.protobuf.DescriptorProto.\n@@ -184,17 +190,20 @@ const (\n const (\n \tExtensionRangeOptions_UninterpretedOption_field_name protoreflect.Name = \"uninterpreted_option\"\n \tExtensionRangeOptions_Declaration_field_name         protoreflect.Name = \"declaration\"\n+\tExtensionRangeOptions_Features_field_name            protoreflect.Name = \"features\"\n \tExtensionRangeOptions_Verification_field_name        protoreflect.Name = \"verification\"\n \n \tExtensionRangeOptions_UninterpretedOption_field_fullname protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.uninterpreted_option\"\n \tExtensionRangeOptions_Declaration_field_fullname         protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.declaration\"\n+\tExtensionRangeOptions_Features_field_fullname            protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.features\"\n \tExtensionRangeOptions_Verification_field_fullname        protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.verification\"\n )\n \n // Field numbers for google.protobuf.ExtensionRangeOptions.\n const (\n \tExtensionRangeOptions_UninterpretedOption_field_number protoreflect.FieldNumber = 999\n \tExtensionRangeOptions_Declaration_field_number         protoreflect.FieldNumber = 2\n+\tExtensionRangeOptions_Features_field_number            protoreflect.FieldNumber = 50\n \tExtensionRangeOptions_Verification_field_number        protoreflect.FieldNumber = 3\n )\n \n@@ -212,29 +221,26 @@ const (\n \n // Field names for google.protobuf.ExtensionRangeOptions.Declaration.\n const (\n-\tExtensionRangeOptions_Declaration_Number_field_name     protoreflect.Name = \"number\"\n-\tExtensionRangeOptions_Declaration_FullName_field_name   protoreflect.Name = \"full_name\"\n-\tExtensionRangeOptions_Declaration_Type_field_name       protoreflect.Name = \"type\"\n-\tExtensionRangeOptions_Declaration_IsRepeated_field_name protoreflect.Name = \"is_repeated\"\n-\tExtensionRangeOptions_Declaration_Reserved_field_name   protoreflect.Name = \"reserved\"\n-\tExtensionRangeOptions_Declaration_Repeated_field_name   protoreflect.Name = \"repeated\"\n+\tExtensionRangeOptions_Declaration_Number_field_name   protoreflect.Name = \"number\"\n+\tExtensionRangeOptions_Declaration_FullName_field_name protoreflect.Name = \"full_name\"\n+\tExtensionRangeOptions_Declaration_Type_field_name     protoreflect.Name = \"type\"\n+\tExtensionRangeOptions_Declaration_Reserved_field_name protoreflect.Name = \"reserved\"\n+\tExtensionRangeOptions_Declaration_Repeated_field_name protoreflect.Name = \"repeated\"\n \n-\tExtensionRangeOptions_Declaration_Number_field_fullname     protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.Declaration.number\"\n-\tExtensionRangeOptions_Declaration_FullName_field_fullname   protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.Declaration.full_name\"\n-\tExtensionRangeOptions_Declaration_Type_field_fullname       protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.Declaration.type\"\n-\tExtensionRangeOptions_Declaration_IsRepeated_field_fullname protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.Declaration.is_repeated\"\n-\tExtensionRangeOptions_Declaration_Reserved_field_fullname   protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.Declaration.reserved\"\n-\tExtensionRangeOptions_Declaration_Repeated_field_fullname   protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.Declaration.repeated\"\n+\tExtensionRangeOptions_Declaration_Number_field_fullname   protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.Declaration.number\"\n+\tExtensionRangeOptions_Declaration_FullName_field_fullname protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.Declaration.full_name\"\n+\tExtensionRangeOptions_Declaration_Type_field_fullname     protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.Declaration.type\"\n+\tExtensionRangeOptions_Declaration_Reserved_field_fullname protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.Declaration.reserved\"\n+\tExtensionRangeOptions_Declaration_Repeated_field_fullname protoreflect.FullName = \"google.protobuf.ExtensionRangeOptions.Declaration.repeated\"\n )\n \n // Field numbers for google.protobuf.ExtensionRangeOptions.Declaration.\n const (\n-\tExtensionRangeOptions_Declaration_Number_field_number     protoreflect.FieldNumber = 1\n-\tExtensionRangeOptions_Declaration_FullName_field_number   protoreflect.FieldNumber = 2\n-\tExtensionRangeOptions_Declaration_Type_field_number       protoreflect.FieldNumber = 3\n-\tExtensionRangeOptions_Declaration_IsRepeated_field_number protoreflect.FieldNumber = 4\n-\tExtensionRangeOptions_Declaration_Reserved_field_number   protoreflect.FieldNumber = 5\n-\tExtensionRangeOptions_Declaration_Repeated_field_number   protoreflect.FieldNumber = 6\n+\tExtensionRangeOptions_Declaration_Number_field_number   protoreflect.FieldNumber = 1\n+\tExtensionRangeOptions_Declaration_FullName_field_number protoreflect.FieldNumber = 2\n+\tExtensionRangeOptions_Declaration_Type_field_number     protoreflect.FieldNumber = 3\n+\tExtensionRangeOptions_Declaration_Reserved_field_number protoreflect.FieldNumber = 5\n+\tExtensionRangeOptions_Declaration_Repeated_field_number protoreflect.FieldNumber = 6\n )\n \n // Names for google.protobuf.FieldDescriptorProto.\n@@ -478,6 +484,7 @@ const (\n \tFileOptions_PhpNamespace_field_name              protoreflect.Name = \"php_namespace\"\n \tFileOptions_PhpMetadataNamespace_field_name      protoreflect.Name = \"php_metadata_namespace\"\n \tFileOptions_RubyPackage_field_name               protoreflect.Name = \"ruby_package\"\n+\tFileOptions_Features_field_name                  protoreflect.Name = \"features\"\n \tFileOptions_UninterpretedOption_field_name       protoreflect.Name = \"uninterpreted_option\"\n \n \tFileOptions_JavaPackage_field_fullname               protoreflect.FullName = \"google.protobuf.FileOptions.java_package\"\n@@ -500,6 +507,7 @@ const (\n \tFileOptions_PhpNamespace_field_fullname              protoreflect.FullName = \"google.protobuf.FileOptions.php_namespace\"\n \tFileOptions_PhpMetadataNamespace_field_fullname      protoreflect.FullName = \"google.protobuf.FileOptions.php_metadata_namespace\"\n \tFileOptions_RubyPackage_field_fullname               protoreflect.FullName = \"google.protobuf.FileOptions.ruby_package\"\n+\tFileOptions_Features_field_fullname                  protoreflect.FullName = \"google.protobuf.FileOptions.features\"\n \tFileOptions_UninterpretedOption_field_fullname       protoreflect.FullName = \"google.protobuf.FileOptions.uninterpreted_option\"\n )\n \n@@ -525,6 +533,7 @@ const (\n \tFileOptions_PhpNamespace_field_number              protoreflect.FieldNumber = 41\n \tFileOptions_PhpMetadataNamespace_field_number      protoreflect.FieldNumber = 44\n \tFileOptions_RubyPackage_field_number               protoreflect.FieldNumber = 45\n+\tFileOptions_Features_field_number                  protoreflect.FieldNumber = 50\n \tFileOptions_UninterpretedOption_field_number       protoreflect.FieldNumber = 999\n )\n \n@@ -547,13 +556,15 @@ const (\n \tMessageOptions_Deprecated_field_name                         protoreflect.Name = \"deprecated\"\n \tMessageOptions_MapEntry_field_name                           protoreflect.Name = \"map_entry\"\n \tMessageOptions_DeprecatedLegacyJsonFieldConflicts_field_name protoreflect.Name = \"deprecated_legacy_json_field_conflicts\"\n+\tMessageOptions_Features_field_name                           protoreflect.Name = \"features\"\n \tMessageOptions_UninterpretedOption_field_name                protoreflect.Name = \"uninterpreted_option\"\n \n \tMessageOptions_MessageSetWireFormat_field_fullname               protoreflect.FullName = \"google.protobuf.MessageOptions.message_set_wire_format\"\n \tMessageOptions_NoStandardDescriptorAccessor_field_fullname       protoreflect.FullName = \"google.protobuf.MessageOptions.no_standard_descriptor_accessor\"\n \tMessageOptions_Deprecated_field_fullname                         protoreflect.FullName = \"google.protobuf.MessageOptions.deprecated\"\n \tMessageOptions_MapEntry_field_fullname                           protoreflect.FullName = \"google.protobuf.MessageOptions.map_entry\"\n \tMessageOptions_DeprecatedLegacyJsonFieldConflicts_field_fullname protoreflect.FullName = \"google.protobuf.MessageOptions.deprecated_legacy_json_field_conflicts\"\n+\tMessageOptions_Features_field_fullname                           protoreflect.FullName = \"google.protobuf.MessageOptions.features\"\n \tMessageOptions_UninterpretedOption_field_fullname                protoreflect.FullName = \"google.protobuf.MessageOptions.uninterpreted_option\"\n )\n \n@@ -564,6 +575,7 @@ const (\n \tMessageOptions_Deprecated_field_number                         protoreflect.FieldNumber = 3\n \tMessageOptions_MapEntry_field_number                           protoreflect.FieldNumber = 7\n \tMessageOptions_DeprecatedLegacyJsonFieldConflicts_field_number protoreflect.FieldNumber = 11\n+\tMessageOptions_Features_field_number                           protoreflect.FieldNumber = 12\n \tMessageOptions_UninterpretedOption_field_number                protoreflect.FieldNumber = 999\n )\n \n@@ -584,8 +596,9 @@ const (\n \tFieldOptions_Weak_field_name                protoreflect.Name = \"weak\"\n \tFieldOptions_DebugRedact_field_name         protoreflect.Name = \"debug_redact\"\n \tFieldOptions_Retention_field_name           protoreflect.Name = \"retention\"\n-\tFieldOptions_Target_field_name              protoreflect.Name = \"target\"\n \tFieldOptions_Targets_field_name             protoreflect.Name = \"targets\"\n+\tFieldOptions_EditionDefaults_field_name     protoreflect.Name = \"edition_defaults\"\n+\tFieldOptions_Features_field_name            protoreflect.Name = \"features\"\n \tFieldOptions_UninterpretedOption_field_name protoreflect.Name = \"uninterpreted_option\"\n \n \tFieldOptions_Ctype_field_fullname               protoreflect.FullName = \"google.protobuf.FieldOptions.ctype\"\n@@ -597,8 +610,9 @@ const (\n \tFieldOptions_Weak_field_fullname                protoreflect.FullName = \"google.protobuf.FieldOptions.weak\"\n \tFieldOptions_DebugRedact_field_fullname         protoreflect.FullName = \"google.protobuf.FieldOptions.debug_redact\"\n \tFieldOptions_Retention_field_fullname           protoreflect.FullName = \"google.protobuf.FieldOptions.retention\"\n-\tFieldOptions_Target_field_fullname              protoreflect.FullName = \"google.protobuf.FieldOptions.target\"\n \tFieldOptions_Targets_field_fullname             protoreflect.FullName = \"google.protobuf.FieldOptions.targets\"\n+\tFieldOptions_EditionDefaults_field_fullname     protoreflect.FullName = \"google.protobuf.FieldOptions.edition_defaults\"\n+\tFieldOptions_Features_field_fullname            protoreflect.FullName = \"google.protobuf.FieldOptions.features\"\n \tFieldOptions_UninterpretedOption_field_fullname protoreflect.FullName = \"google.protobuf.FieldOptions.uninterpreted_option\"\n )\n \n@@ -613,8 +627,9 @@ const (\n \tFieldOptions_Weak_field_number                protoreflect.FieldNumber = 10\n \tFieldOptions_DebugRedact_field_number         protoreflect.FieldNumber = 16\n \tFieldOptions_Retention_field_number           protoreflect.FieldNumber = 17\n-\tFieldOptions_Target_field_number              protoreflect.FieldNumber = 18\n \tFieldOptions_Targets_field_number             protoreflect.FieldNumber = 19\n+\tFieldOptions_EditionDefaults_field_number     protoreflect.FieldNumber = 20\n+\tFieldOptions_Features_field_number            protoreflect.FieldNumber = 21\n \tFieldOptions_UninterpretedOption_field_number protoreflect.FieldNumber = 999\n )\n \n@@ -642,6 +657,27 @@ const (\n \tFieldOptions_OptionTargetType_enum_name     = \"OptionTargetType\"\n )\n \n+// Names for google.protobuf.FieldOptions.EditionDefault.\n+const (\n+\tFieldOptions_EditionDefault_message_name     protoreflect.Name     = \"EditionDefault\"\n+\tFieldOptions_EditionDefault_message_fullname protoreflect.FullName = \"google.protobuf.FieldOptions.EditionDefault\"\n+)\n+\n+// Field names for google.protobuf.FieldOptions.EditionDefault.\n+const (\n+\tFieldOptions_EditionDefault_Edition_field_name protoreflect.Name = \"edition\"\n+\tFieldOptions_EditionDefault_Value_field_name   protoreflect.Name = \"value\"\n+\n+\tFieldOptions_EditionDefault_Edition_field_fullname protoreflect.FullName = \"google.protobuf.FieldOptions.EditionDefault.edition\"\n+\tFieldOptions_EditionDefault_Value_field_fullname   protoreflect.FullName = \"google.protobuf.FieldOptions.EditionDefault.value\"\n+)\n+\n+// Field numbers for google.protobuf.FieldOptions.EditionDefault.\n+const (\n+\tFieldOptions_EditionDefault_Edition_field_number protoreflect.FieldNumber = 3\n+\tFieldOptions_EditionDefault_Value_field_number   protoreflect.FieldNumber = 2\n+)\n+\n // Names for google.protobuf.OneofOptions.\n const (\n \tOneofOptions_message_name     protoreflect.Name     = \"OneofOptions\"\n@@ -650,13 +686,16 @@ const (\n \n // Field names for google.protobuf.OneofOptions.\n const (\n+\tOneofOptions_Features_field_name            protoreflect.Name = \"features\"\n \tOneofOptions_UninterpretedOption_field_name protoreflect.Name = \"uninterpreted_option\"\n \n+\tOneofOptions_Features_field_fullname            protoreflect.FullName = \"google.protobuf.OneofOptions.features\"\n \tOneofOptions_UninterpretedOption_field_fullname protoreflect.FullName = \"google.protobuf.OneofOptions.uninterpreted_option\"\n )\n \n // Field numbers for google.protobuf.OneofOptions.\n const (\n+\tOneofOptions_Features_field_number            protoreflect.FieldNumber = 1\n \tOneofOptions_UninterpretedOption_field_number protoreflect.FieldNumber = 999\n )\n \n@@ -671,11 +710,13 @@ const (\n \tEnumOptions_AllowAlias_field_name                         protoreflect.Name = \"allow_alias\"\n \tEnumOptions_Deprecated_field_name                         protoreflect.Name = \"deprecated\"\n \tEnumOptions_DeprecatedLegacyJsonFieldConflicts_field_name protoreflect.Name = \"deprecated_legacy_json_field_conflicts\"\n+\tEnumOptions_Features_field_name                           protoreflect.Name = \"features\"\n \tEnumOptions_UninterpretedOption_field_name                protoreflect.Name = \"uninterpreted_option\"\n \n \tEnumOptions_AllowAlias_field_fullname                         protoreflect.FullName = \"google.protobuf.EnumOptions.allow_alias\"\n \tEnumOptions_Deprecated_field_fullname                         protoreflect.FullName = \"google.protobuf.EnumOptions.deprecated\"\n \tEnumOptions_DeprecatedLegacyJsonFieldConflicts_field_fullname protoreflect.FullName = \"google.protobuf.EnumOptions.deprecated_legacy_json_field_conflicts\"\n+\tEnumOptions_Features_field_fullname                           protoreflect.FullName = \"google.protobuf.EnumOptions.features\"\n \tEnumOptions_UninterpretedOption_field_fullname                protoreflect.FullName = \"google.protobuf.EnumOptions.uninterpreted_option\"\n )\n \n@@ -684,6 +725,7 @@ const (\n \tEnumOptions_AllowAlias_field_number                         protoreflect.FieldNumber = 2\n \tEnumOptions_Deprecated_field_number                         protoreflect.FieldNumber = 3\n \tEnumOptions_DeprecatedLegacyJsonFieldConflicts_field_number protoreflect.FieldNumber = 6\n+\tEnumOptions_Features_field_number                           protoreflect.FieldNumber = 7\n \tEnumOptions_UninterpretedOption_field_number                protoreflect.FieldNumber = 999\n )\n \n@@ -696,15 +738,21 @@ const (\n // Field names for google.protobuf.EnumValueOptions.\n const (\n \tEnumValueOptions_Deprecated_field_name          protoreflect.Name = \"deprecated\"\n+\tEnumValueOptions_Features_field_name            protoreflect.Name = \"features\"\n+\tEnumValueOptions_DebugRedact_field_name         protoreflect.Name = \"debug_redact\"\n \tEnumValueOptions_UninterpretedOption_field_name protoreflect.Name = \"uninterpreted_option\"\n \n \tEnumValueOptions_Deprecated_field_fullname          protoreflect.FullName = \"google.protobuf.EnumValueOptions.deprecated\"\n+\tEnumValueOptions_Features_field_fullname            protoreflect.FullName = \"google.protobuf.EnumValueOptions.features\"\n+\tEnumValueOptions_DebugRedact_field_fullname         protoreflect.FullName = \"google.protobuf.EnumValueOptions.debug_redact\"\n \tEnumValueOptions_UninterpretedOption_field_fullname protoreflect.FullName = \"google.protobuf.EnumValueOptions.uninterpreted_option\"\n )\n \n // Field numbers for google.protobuf.EnumValueOptions.\n const (\n \tEnumValueOptions_Deprecated_field_number          protoreflect.FieldNumber = 1\n+\tEnumValueOptions_Features_field_number            protoreflect.FieldNumber = 2\n+\tEnumValueOptions_DebugRedact_field_number         protoreflect.FieldNumber = 3\n \tEnumValueOptions_UninterpretedOption_field_number protoreflect.FieldNumber = 999\n )\n \n@@ -716,15 +764,18 @@ const (\n \n // Field names for google.protobuf.ServiceOptions.\n const (\n+\tServiceOptions_Features_field_name            protoreflect.Name = \"features\"\n \tServiceOptions_Deprecated_field_name          protoreflect.Name = \"deprecated\"\n \tServiceOptions_UninterpretedOption_field_name protoreflect.Name = \"uninterpreted_option\"\n \n+\tServiceOptions_Features_field_fullname            protoreflect.FullName = \"google.protobuf.ServiceOptions.features\"\n \tServiceOptions_Deprecated_field_fullname          protoreflect.FullName = \"google.protobuf.ServiceOptions.deprecated\"\n \tServiceOptions_UninterpretedOption_field_fullname protoreflect.FullName = \"google.protobuf.ServiceOptions.uninterpreted_option\"\n )\n \n // Field numbers for google.protobuf.ServiceOptions.\n const (\n+\tServiceOptions_Features_field_number            protoreflect.FieldNumber = 34\n \tServiceOptions_Deprecated_field_number          protoreflect.FieldNumber = 33\n \tServiceOptions_UninterpretedOption_field_number protoreflect.FieldNumber = 999\n )\n@@ -739,17 +790,20 @@ const (\n const (\n \tMethodOptions_Deprecated_field_name          protoreflect.Name = \"deprecated\"\n \tMethodOptions_IdempotencyLevel_field_name    protoreflect.Name = \"idempotency_level\"\n+\tMethodOptions_Features_field_name            protoreflect.Name = \"features\"\n \tMethodOptions_UninterpretedOption_field_name protoreflect.Name = \"uninterpreted_option\"\n \n \tMethodOptions_Deprecated_field_fullname          protoreflect.FullName = \"google.protobuf.MethodOptions.deprecated\"\n \tMethodOptions_IdempotencyLevel_field_fullname    protoreflect.FullName = \"google.protobuf.MethodOptions.idempotency_level\"\n+\tMethodOptions_Features_field_fullname            protoreflect.FullName = \"google.protobuf.MethodOptions.features\"\n \tMethodOptions_UninterpretedOption_field_fullname protoreflect.FullName = \"google.protobuf.MethodOptions.uninterpreted_option\"\n )\n \n // Field numbers for google.protobuf.MethodOptions.\n const (\n \tMethodOptions_Deprecated_field_number          protoreflect.FieldNumber = 33\n \tMethodOptions_IdempotencyLevel_field_number    protoreflect.FieldNumber = 34\n+\tMethodOptions_Features_field_number            protoreflect.FieldNumber = 35\n \tMethodOptions_UninterpretedOption_field_number protoreflect.FieldNumber = 999\n )\n \n@@ -816,6 +870,120 @@ const (\n \tUninterpretedOption_NamePart_IsExtension_field_number protoreflect.FieldNumber = 2\n )\n \n+// Names for google.protobuf.FeatureSet.\n+const (\n+\tFeatureSet_message_name     protoreflect.Name     = \"FeatureSet\"\n+\tFeatureSet_message_fullname protoreflect.FullName = \"google.protobuf.FeatureSet\"\n+)\n+\n+// Field names for google.protobuf.FeatureSet.\n+const (\n+\tFeatureSet_FieldPresence_field_name         protoreflect.Name = \"field_presence\"\n+\tFeatureSet_EnumType_field_name              protoreflect.Name = \"enum_type\"\n+\tFeatureSet_RepeatedFieldEncoding_field_name protoreflect.Name = \"repeated_field_encoding\"\n+\tFeatureSet_Utf8Validation_field_name        protoreflect.Name = \"utf8_validation\"\n+\tFeatureSet_MessageEncoding_field_name       protoreflect.Name = \"message_encoding\"\n+\tFeatureSet_JsonFormat_field_name            protoreflect.Name = \"json_format\"\n+\n+\tFeatureSet_FieldPresence_field_fullname         protoreflect.FullName = \"google.protobuf.FeatureSet.field_presence\"\n+\tFeatureSet_EnumType_field_fullname              protoreflect.FullName = \"google.protobuf.FeatureSet.enum_type\"\n+\tFeatureSet_RepeatedFieldEncoding_field_fullname protoreflect.FullName = \"google.protobuf.FeatureSet.repeated_field_encoding\"\n+\tFeatureSet_Utf8Validation_field_fullname        protoreflect.FullName = \"google.protobuf.FeatureSet.utf8_validation\"\n+\tFeatureSet_MessageEncoding_field_fullname       protoreflect.FullName = \"google.protobuf.FeatureSet.message_encoding\"\n+\tFeatureSet_JsonFormat_field_fullname            protoreflect.FullName = \"google.protobuf.FeatureSet.json_format\"\n+)\n+\n+// Field numbers for google.protobuf.FeatureSet.\n+const (\n+\tFeatureSet_FieldPresence_field_number         protoreflect.FieldNumber = 1\n+\tFeatureSet_EnumType_field_number              protoreflect.FieldNumber = 2\n+\tFeatureSet_RepeatedFieldEncoding_field_number protoreflect.FieldNumber = 3\n+\tFeatureSet_Utf8Validation_field_number        protoreflect.FieldNumber = 4\n+\tFeatureSet_MessageEncoding_field_number       protoreflect.FieldNumber = 5\n+\tFeatureSet_JsonFormat_field_number            protoreflect.FieldNumber = 6\n+)\n+\n+// Full and short names for google.protobuf.FeatureSet.FieldPresence.\n+const (\n+\tFeatureSet_FieldPresence_enum_fullname = \"google.protobuf.FeatureSet.FieldPresence\"\n+\tFeatureSet_FieldPresence_enum_name     = \"FieldPresence\"\n+)\n+\n+// Full and short names for google.protobuf.FeatureSet.EnumType.\n+const (\n+\tFeatureSet_EnumType_enum_fullname = \"google.protobuf.FeatureSet.EnumType\"\n+\tFeatureSet_EnumType_enum_name     = \"EnumType\"\n+)\n+\n+// Full and short names for google.protobuf.FeatureSet.RepeatedFieldEncoding.\n+const (\n+\tFeatureSet_RepeatedFieldEncoding_enum_fullname = \"google.protobuf.FeatureSet.RepeatedFieldEncoding\"\n+\tFeatureSet_RepeatedFieldEncoding_enum_name     = \"RepeatedFieldEncoding\"\n+)\n+\n+// Full and short names for google.protobuf.FeatureSet.Utf8Validation.\n+const (\n+\tFeatureSet_Utf8Validation_enum_fullname = \"google.protobuf.FeatureSet.Utf8Validation\"\n+\tFeatureSet_Utf8Validation_enum_name     = \"Utf8Validation\"\n+)\n+\n+// Full and short names for google.protobuf.FeatureSet.MessageEncoding.\n+const (\n+\tFeatureSet_MessageEncoding_enum_fullname = \"google.protobuf.FeatureSet.MessageEncoding\"\n+\tFeatureSet_MessageEncoding_enum_name     = \"MessageEncoding\"\n+)\n+\n+// Full and short names for google.protobuf.FeatureSet.JsonFormat.\n+const (\n+\tFeatureSet_JsonFormat_enum_fullname = \"google.protobuf.FeatureSet.JsonFormat\"\n+\tFeatureSet_JsonFormat_enum_name     = \"JsonFormat\"\n+)\n+\n+// Names for google.protobuf.FeatureSetDefaults.\n+const (\n+\tFeatureSetDefaults_message_name     protoreflect.Name     = \"FeatureSetDefaults\"\n+\tFeatureSetDefaults_message_fullname protoreflect.FullName = \"google.protobuf.FeatureSetDefaults\"\n+)\n+\n+// Field names for google.protobuf.FeatureSetDefaults.\n+const (\n+\tFeatureSetDefaults_Defaults_field_name       protoreflect.Name = \"defaults\"\n+\tFeatureSetDefaults_MinimumEdition_field_name protoreflect.Name = \"minimum_edition\"\n+\tFeatureSetDefaults_MaximumEdition_field_name protoreflect.Name = \"maximum_edition\"\n+\n+\tFeatureSetDefaults_Defaults_field_fullname       protoreflect.FullName = \"google.protobuf.FeatureSetDefaults.defaults\"\n+\tFeatureSetDefaults_MinimumEdition_field_fullname protoreflect.FullName = \"google.protobuf.FeatureSetDefaults.minimum_edition\"\n+\tFeatureSetDefaults_MaximumEdition_field_fullname protoreflect.FullName = \"google.protobuf.FeatureSetDefaults.maximum_edition\"\n+)\n+\n+// Field numbers for google.protobuf.FeatureSetDefaults.\n+const (\n+\tFeatureSetDefaults_Defaults_field_number       protoreflect.FieldNumber = 1\n+\tFeatureSetDefaults_MinimumEdition_field_number protoreflect.FieldNumber = 4\n+\tFeatureSetDefaults_MaximumEdition_field_number protoreflect.FieldNumber = 5\n+)\n+\n+// Names for google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.\n+const (\n+\tFeatureSetDefaults_FeatureSetEditionDefault_message_name     protoreflect.Name     = \"FeatureSetEditionDefault\"\n+\tFeatureSetDefaults_FeatureSetEditionDefault_message_fullname protoreflect.FullName = \"google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault\"\n+)\n+\n+// Field names for google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.\n+const (\n+\tFeatureSetDefaults_FeatureSetEditionDefault_Edition_field_name  protoreflect.Name = \"edition\"\n+\tFeatureSetDefaults_FeatureSetEditionDefault_Features_field_name protoreflect.Name = \"features\"\n+\n+\tFeatureSetDefaults_FeatureSetEditionDefault_Edition_field_fullname  protoreflect.FullName = \"google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.edition\"\n+\tFeatureSetDefaults_FeatureSetEditionDefault_Features_field_fullname protoreflect.FullName = \"google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.features\"\n+)\n+\n+// Field numbers for google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.\n+const (\n+\tFeatureSetDefaults_FeatureSetEditionDefault_Edition_field_number  protoreflect.FieldNumber = 3\n+\tFeatureSetDefaults_FeatureSetEditionDefault_Features_field_number protoreflect.FieldNumber = 2\n+)\n+\n // Names for google.protobuf.SourceCodeInfo.\n const (\n \tSourceCodeInfo_message_name     protoreflect.Name     = \"SourceCodeInfo\""
    },
    {
      "sha": "f55dc01e3a926b915db48f240ec320c6b4a2d966",
      "filename": "backend/vendor/google.golang.org/protobuf/internal/impl/codec_gen.go",
      "status": "modified",
      "additions": 100,
      "deletions": 13,
      "changes": 113,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Fcodec_gen.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Fcodec_gen.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Fcodec_gen.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -162,11 +162,20 @@ func appendBoolSlice(b []byte, p pointer, f *coderFieldInfo, opts marshalOptions\n func consumeBoolSlice(b []byte, p pointer, wtyp protowire.Type, f *coderFieldInfo, opts unmarshalOptions) (out unmarshalOutput, err error) {\n \tsp := p.BoolSlice()\n \tif wtyp == protowire.BytesType {\n-\t\ts := *sp\n \t\tb, n := protowire.ConsumeBytes(b)\n \t\tif n < 0 {\n \t\t\treturn out, errDecode\n \t\t}\n+\t\tcount := 0\n+\t\tfor _, v := range b {\n+\t\t\tif v < 0x80 {\n+\t\t\t\tcount++\n+\t\t\t}\n+\t\t}\n+\t\tif count > 0 {\n+\t\t\tp.growBoolSlice(count)\n+\t\t}\n+\t\ts := *sp\n \t\tfor len(b) > 0 {\n \t\t\tvar v uint64\n \t\t\tvar n int\n@@ -732,11 +741,20 @@ func appendInt32Slice(b []byte, p pointer, f *coderFieldInfo, opts marshalOption\n func consumeInt32Slice(b []byte, p pointer, wtyp protowire.Type, f *coderFieldInfo, opts unmarshalOptions) (out unmarshalOutput, err error) {\n \tsp := p.Int32Slice()\n \tif wtyp == protowire.BytesType {\n-\t\ts := *sp\n \t\tb, n := protowire.ConsumeBytes(b)\n \t\tif n < 0 {\n \t\t\treturn out, errDecode\n \t\t}\n+\t\tcount := 0\n+\t\tfor _, v := range b {\n+\t\t\tif v < 0x80 {\n+\t\t\t\tcount++\n+\t\t\t}\n+\t\t}\n+\t\tif count > 0 {\n+\t\t\tp.growInt32Slice(count)\n+\t\t}\n+\t\ts := *sp\n \t\tfor len(b) > 0 {\n \t\t\tvar v uint64\n \t\t\tvar n int\n@@ -1138,11 +1156,20 @@ func appendSint32Slice(b []byte, p pointer, f *coderFieldInfo, opts marshalOptio\n func consumeSint32Slice(b []byte, p pointer, wtyp protowire.Type, f *coderFieldInfo, opts unmarshalOptions) (out unmarshalOutput, err error) {\n \tsp := p.Int32Slice()\n \tif wtyp == protowire.BytesType {\n-\t\ts := *sp\n \t\tb, n := protowire.ConsumeBytes(b)\n \t\tif n < 0 {\n \t\t\treturn out, errDecode\n \t\t}\n+\t\tcount := 0\n+\t\tfor _, v := range b {\n+\t\t\tif v < 0x80 {\n+\t\t\t\tcount++\n+\t\t\t}\n+\t\t}\n+\t\tif count > 0 {\n+\t\t\tp.growInt32Slice(count)\n+\t\t}\n+\t\ts := *sp\n \t\tfor len(b) > 0 {\n \t\t\tvar v uint64\n \t\t\tvar n int\n@@ -1544,11 +1571,20 @@ func appendUint32Slice(b []byte, p pointer, f *coderFieldInfo, opts marshalOptio\n func consumeUint32Slice(b []byte, p pointer, wtyp protowire.Type, f *coderFieldInfo, opts unmarshalOptions) (out unmarshalOutput, err error) {\n \tsp := p.Uint32Slice()\n \tif wtyp == protowire.BytesType {\n-\t\ts := *sp\n \t\tb, n := protowire.ConsumeBytes(b)\n \t\tif n < 0 {\n \t\t\treturn out, errDecode\n \t\t}\n+\t\tcount := 0\n+\t\tfor _, v := range b {\n+\t\t\tif v < 0x80 {\n+\t\t\t\tcount++\n+\t\t\t}\n+\t\t}\n+\t\tif count > 0 {\n+\t\t\tp.growUint32Slice(count)\n+\t\t}\n+\t\ts := *sp\n \t\tfor len(b) > 0 {\n \t\t\tvar v uint64\n \t\t\tvar n int\n@@ -1950,11 +1986,20 @@ func appendInt64Slice(b []byte, p pointer, f *coderFieldInfo, opts marshalOption\n func consumeInt64Slice(b []byte, p pointer, wtyp protowire.Type, f *coderFieldInfo, opts unmarshalOptions) (out unmarshalOutput, err error) {\n \tsp := p.Int64Slice()\n \tif wtyp == protowire.BytesType {\n-\t\ts := *sp\n \t\tb, n := protowire.ConsumeBytes(b)\n \t\tif n < 0 {\n \t\t\treturn out, errDecode\n \t\t}\n+\t\tcount := 0\n+\t\tfor _, v := range b {\n+\t\t\tif v < 0x80 {\n+\t\t\t\tcount++\n+\t\t\t}\n+\t\t}\n+\t\tif count > 0 {\n+\t\t\tp.growInt64Slice(count)\n+\t\t}\n+\t\ts := *sp\n \t\tfor len(b) > 0 {\n \t\t\tvar v uint64\n \t\t\tvar n int\n@@ -2356,11 +2401,20 @@ func appendSint64Slice(b []byte, p pointer, f *coderFieldInfo, opts marshalOptio\n func consumeSint64Slice(b []byte, p pointer, wtyp protowire.Type, f *coderFieldInfo, opts unmarshalOptions) (out unmarshalOutput, err error) {\n \tsp := p.Int64Slice()\n \tif wtyp == protowire.BytesType {\n-\t\ts := *sp\n \t\tb, n := protowire.ConsumeBytes(b)\n \t\tif n < 0 {\n \t\t\treturn out, errDecode\n \t\t}\n+\t\tcount := 0\n+\t\tfor _, v := range b {\n+\t\t\tif v < 0x80 {\n+\t\t\t\tcount++\n+\t\t\t}\n+\t\t}\n+\t\tif count > 0 {\n+\t\t\tp.growInt64Slice(count)\n+\t\t}\n+\t\ts := *sp\n \t\tfor len(b) > 0 {\n \t\t\tvar v uint64\n \t\t\tvar n int\n@@ -2762,11 +2816,20 @@ func appendUint64Slice(b []byte, p pointer, f *coderFieldInfo, opts marshalOptio\n func consumeUint64Slice(b []byte, p pointer, wtyp protowire.Type, f *coderFieldInfo, opts unmarshalOptions) (out unmarshalOutput, err error) {\n \tsp := p.Uint64Slice()\n \tif wtyp == protowire.BytesType {\n-\t\ts := *sp\n \t\tb, n := protowire.ConsumeBytes(b)\n \t\tif n < 0 {\n \t\t\treturn out, errDecode\n \t\t}\n+\t\tcount := 0\n+\t\tfor _, v := range b {\n+\t\t\tif v < 0x80 {\n+\t\t\t\tcount++\n+\t\t\t}\n+\t\t}\n+\t\tif count > 0 {\n+\t\t\tp.growUint64Slice(count)\n+\t\t}\n+\t\ts := *sp\n \t\tfor len(b) > 0 {\n \t\t\tvar v uint64\n \t\t\tvar n int\n@@ -3145,11 +3208,15 @@ func appendSfixed32Slice(b []byte, p pointer, f *coderFieldInfo, opts marshalOpt\n func consumeSfixed32Slice(b []byte, p pointer, wtyp protowire.Type, f *coderFieldInfo, opts unmarshalOptions) (out unmarshalOutput, err error) {\n \tsp := p.Int32Slice()\n \tif wtyp == protowire.BytesType {\n-\t\ts := *sp\n \t\tb, n := protowire.ConsumeBytes(b)\n \t\tif n < 0 {\n \t\t\treturn out, errDecode\n \t\t}\n+\t\tcount := len(b) / protowire.SizeFixed32()\n+\t\tif count > 0 {\n+\t\t\tp.growInt32Slice(count)\n+\t\t}\n+\t\ts := *sp\n \t\tfor len(b) > 0 {\n \t\t\tv, n := protowire.ConsumeFixed32(b)\n \t\t\tif n < 0 {\n@@ -3461,11 +3528,15 @@ func appendFixed32Slice(b []byte, p pointer, f *coderFieldInfo, opts marshalOpti\n func consumeFixed32Slice(b []byte, p pointer, wtyp protowire.Type, f *coderFieldInfo, opts unmarshalOptions) (out unmarshalOutput, err error) {\n \tsp := p.Uint32Slice()\n \tif wtyp == protowire.BytesType {\n-\t\ts := *sp\n \t\tb, n := protowire.ConsumeBytes(b)\n \t\tif n < 0 {\n \t\t\treturn out, errDecode\n \t\t}\n+\t\tcount := len(b) / protowire.SizeFixed32()\n+\t\tif count > 0 {\n+\t\t\tp.growUint32Slice(count)\n+\t\t}\n+\t\ts := *sp\n \t\tfor len(b) > 0 {\n \t\t\tv, n := protowire.ConsumeFixed32(b)\n \t\t\tif n < 0 {\n@@ -3777,11 +3848,15 @@ func appendFloatSlice(b []byte, p pointer, f *coderFieldInfo, opts marshalOption\n func consumeFloatSlice(b []byte, p pointer, wtyp protowire.Type, f *coderFieldInfo, opts unmarshalOptions) (out unmarshalOutput, err error) {\n \tsp := p.Float32Slice()\n \tif wtyp == protowire.BytesType {\n-\t\ts := *sp\n \t\tb, n := protowire.ConsumeBytes(b)\n \t\tif n < 0 {\n \t\t\treturn out, errDecode\n \t\t}\n+\t\tcount := len(b) / protowire.SizeFixed32()\n+\t\tif count > 0 {\n+\t\t\tp.growFloat32Slice(count)\n+\t\t}\n+\t\ts := *sp\n \t\tfor len(b) > 0 {\n \t\t\tv, n := protowire.ConsumeFixed32(b)\n \t\t\tif n < 0 {\n@@ -4093,11 +4168,15 @@ func appendSfixed64Slice(b []byte, p pointer, f *coderFieldInfo, opts marshalOpt\n func consumeSfixed64Slice(b []byte, p pointer, wtyp protowire.Type, f *coderFieldInfo, opts unmarshalOptions) (out unmarshalOutput, err error) {\n \tsp := p.Int64Slice()\n \tif wtyp == protowire.BytesType {\n-\t\ts := *sp\n \t\tb, n := protowire.ConsumeBytes(b)\n \t\tif n < 0 {\n \t\t\treturn out, errDecode\n \t\t}\n+\t\tcount := len(b) / protowire.SizeFixed64()\n+\t\tif count > 0 {\n+\t\t\tp.growInt64Slice(count)\n+\t\t}\n+\t\ts := *sp\n \t\tfor len(b) > 0 {\n \t\t\tv, n := protowire.ConsumeFixed64(b)\n \t\t\tif n < 0 {\n@@ -4409,11 +4488,15 @@ func appendFixed64Slice(b []byte, p pointer, f *coderFieldInfo, opts marshalOpti\n func consumeFixed64Slice(b []byte, p pointer, wtyp protowire.Type, f *coderFieldInfo, opts unmarshalOptions) (out unmarshalOutput, err error) {\n \tsp := p.Uint64Slice()\n \tif wtyp == protowire.BytesType {\n-\t\ts := *sp\n \t\tb, n := protowire.ConsumeBytes(b)\n \t\tif n < 0 {\n \t\t\treturn out, errDecode\n \t\t}\n+\t\tcount := len(b) / protowire.SizeFixed64()\n+\t\tif count > 0 {\n+\t\t\tp.growUint64Slice(count)\n+\t\t}\n+\t\ts := *sp\n \t\tfor len(b) > 0 {\n \t\t\tv, n := protowire.ConsumeFixed64(b)\n \t\t\tif n < 0 {\n@@ -4725,11 +4808,15 @@ func appendDoubleSlice(b []byte, p pointer, f *coderFieldInfo, opts marshalOptio\n func consumeDoubleSlice(b []byte, p pointer, wtyp protowire.Type, f *coderFieldInfo, opts unmarshalOptions) (out unmarshalOutput, err error) {\n \tsp := p.Float64Slice()\n \tif wtyp == protowire.BytesType {\n-\t\ts := *sp\n \t\tb, n := protowire.ConsumeBytes(b)\n \t\tif n < 0 {\n \t\t\treturn out, errDecode\n \t\t}\n+\t\tcount := len(b) / protowire.SizeFixed64()\n+\t\tif count > 0 {\n+\t\t\tp.growFloat64Slice(count)\n+\t\t}\n+\t\ts := *sp\n \t\tfor len(b) > 0 {\n \t\t\tv, n := protowire.ConsumeFixed64(b)\n \t\t\tif n < 0 {"
    },
    {
      "sha": "2ab2c629784cf7663568392c7c811bf85e9dee59",
      "filename": "backend/vendor/google.golang.org/protobuf/internal/impl/legacy_message.go",
      "status": "modified",
      "additions": 12,
      "deletions": 7,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Flegacy_message.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Flegacy_message.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Flegacy_message.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -206,13 +206,18 @@ func aberrantLoadMessageDescReentrant(t reflect.Type, name protoreflect.FullName\n \n \t// Obtain a list of oneof wrapper types.\n \tvar oneofWrappers []reflect.Type\n-\tfor _, method := range []string{\"XXX_OneofFuncs\", \"XXX_OneofWrappers\"} {\n-\t\tif fn, ok := t.MethodByName(method); ok {\n-\t\t\tfor _, v := range fn.Func.Call([]reflect.Value{reflect.Zero(fn.Type.In(0))}) {\n-\t\t\t\tif vs, ok := v.Interface().([]interface{}); ok {\n-\t\t\t\t\tfor _, v := range vs {\n-\t\t\t\t\t\toneofWrappers = append(oneofWrappers, reflect.TypeOf(v))\n-\t\t\t\t\t}\n+\tmethods := make([]reflect.Method, 0, 2)\n+\tif m, ok := t.MethodByName(\"XXX_OneofFuncs\"); ok {\n+\t\tmethods = append(methods, m)\n+\t}\n+\tif m, ok := t.MethodByName(\"XXX_OneofWrappers\"); ok {\n+\t\tmethods = append(methods, m)\n+\t}\n+\tfor _, fn := range methods {\n+\t\tfor _, v := range fn.Func.Call([]reflect.Value{reflect.Zero(fn.Type.In(0))}) {\n+\t\t\tif vs, ok := v.Interface().([]interface{}); ok {\n+\t\t\t\tfor _, v := range vs {\n+\t\t\t\t\toneofWrappers = append(oneofWrappers, reflect.TypeOf(v))\n \t\t\t\t}\n \t\t\t}\n \t\t}"
    },
    {
      "sha": "629bacdcedd35757cda72bfac32a840bd0d0f30e",
      "filename": "backend/vendor/google.golang.org/protobuf/internal/impl/message.go",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Fmessage.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Fmessage.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Fmessage.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -192,12 +192,17 @@ fieldLoop:\n \n \t// Derive a mapping of oneof wrappers to fields.\n \toneofWrappers := mi.OneofWrappers\n-\tfor _, method := range []string{\"XXX_OneofFuncs\", \"XXX_OneofWrappers\"} {\n-\t\tif fn, ok := reflect.PtrTo(t).MethodByName(method); ok {\n-\t\t\tfor _, v := range fn.Func.Call([]reflect.Value{reflect.Zero(fn.Type.In(0))}) {\n-\t\t\t\tif vs, ok := v.Interface().([]interface{}); ok {\n-\t\t\t\t\toneofWrappers = vs\n-\t\t\t\t}\n+\tmethods := make([]reflect.Method, 0, 2)\n+\tif m, ok := reflect.PtrTo(t).MethodByName(\"XXX_OneofFuncs\"); ok {\n+\t\tmethods = append(methods, m)\n+\t}\n+\tif m, ok := reflect.PtrTo(t).MethodByName(\"XXX_OneofWrappers\"); ok {\n+\t\tmethods = append(methods, m)\n+\t}\n+\tfor _, fn := range methods {\n+\t\tfor _, v := range fn.Func.Call([]reflect.Value{reflect.Zero(fn.Type.In(0))}) {\n+\t\t\tif vs, ok := v.Interface().([]interface{}); ok {\n+\t\t\t\toneofWrappers = vs\n \t\t\t}\n \t\t}\n \t}"
    },
    {
      "sha": "517e94434c732ff4881fcf7984f9aea74f0b08d0",
      "filename": "backend/vendor/google.golang.org/protobuf/internal/impl/pointer_reflect.go",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Fpointer_reflect.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Fpointer_reflect.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Fpointer_reflect.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -159,6 +159,42 @@ func (p pointer) SetPointer(v pointer) {\n \tp.v.Elem().Set(v.v)\n }\n \n+func growSlice(p pointer, addCap int) {\n+\t// TODO: Once we only support Go 1.20 and newer, use reflect.Grow.\n+\tin := p.v.Elem()\n+\tout := reflect.MakeSlice(in.Type(), in.Len(), in.Len()+addCap)\n+\treflect.Copy(out, in)\n+\tp.v.Elem().Set(out)\n+}\n+\n+func (p pointer) growBoolSlice(addCap int) {\n+\tgrowSlice(p, addCap)\n+}\n+\n+func (p pointer) growInt32Slice(addCap int) {\n+\tgrowSlice(p, addCap)\n+}\n+\n+func (p pointer) growUint32Slice(addCap int) {\n+\tgrowSlice(p, addCap)\n+}\n+\n+func (p pointer) growInt64Slice(addCap int) {\n+\tgrowSlice(p, addCap)\n+}\n+\n+func (p pointer) growUint64Slice(addCap int) {\n+\tgrowSlice(p, addCap)\n+}\n+\n+func (p pointer) growFloat64Slice(addCap int) {\n+\tgrowSlice(p, addCap)\n+}\n+\n+func (p pointer) growFloat32Slice(addCap int) {\n+\tgrowSlice(p, addCap)\n+}\n+\n func (Export) MessageStateOf(p Pointer) *messageState     { panic(\"not supported\") }\n func (ms *messageState) pointer() pointer                 { panic(\"not supported\") }\n func (ms *messageState) messageInfo() *MessageInfo        { panic(\"not supported\") }"
    },
    {
      "sha": "4b020e31164402d26b8ef70251136ce2bf08a4d6",
      "filename": "backend/vendor/google.golang.org/protobuf/internal/impl/pointer_unsafe.go",
      "status": "modified",
      "additions": 40,
      "deletions": 0,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Fpointer_unsafe.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Fpointer_unsafe.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fimpl%2Fpointer_unsafe.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -138,6 +138,46 @@ func (p pointer) SetPointer(v pointer) {\n \t*(*unsafe.Pointer)(p.p) = (unsafe.Pointer)(v.p)\n }\n \n+func (p pointer) growBoolSlice(addCap int) {\n+\tsp := p.BoolSlice()\n+\ts := make([]bool, 0, addCap+len(*sp))\n+\ts = s[:len(*sp)]\n+\tcopy(s, *sp)\n+\t*sp = s\n+}\n+\n+func (p pointer) growInt32Slice(addCap int) {\n+\tsp := p.Int32Slice()\n+\ts := make([]int32, 0, addCap+len(*sp))\n+\ts = s[:len(*sp)]\n+\tcopy(s, *sp)\n+\t*sp = s\n+}\n+\n+func (p pointer) growUint32Slice(addCap int) {\n+\tp.growInt32Slice(addCap)\n+}\n+\n+func (p pointer) growFloat32Slice(addCap int) {\n+\tp.growInt32Slice(addCap)\n+}\n+\n+func (p pointer) growInt64Slice(addCap int) {\n+\tsp := p.Int64Slice()\n+\ts := make([]int64, 0, addCap+len(*sp))\n+\ts = s[:len(*sp)]\n+\tcopy(s, *sp)\n+\t*sp = s\n+}\n+\n+func (p pointer) growUint64Slice(addCap int) {\n+\tp.growInt64Slice(addCap)\n+}\n+\n+func (p pointer) growFloat64Slice(addCap int) {\n+\tp.growInt64Slice(addCap)\n+}\n+\n // Static check that MessageState does not exceed the size of a pointer.\n const _ = uint(unsafe.Sizeof(unsafe.Pointer(nil)) - unsafe.Sizeof(MessageState{}))\n "
    },
    {
      "sha": "a008acd09082ae2a278fdb826b5d450346cd2b68",
      "filename": "backend/vendor/google.golang.org/protobuf/internal/strs/strings_unsafe_go120.go",
      "status": "renamed",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fstrs%2Fstrings_unsafe_go120.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fstrs%2Fstrings_unsafe_go120.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fstrs%2Fstrings_unsafe_go120.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2,8 +2,8 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build !purego && !appengine\n-// +build !purego,!appengine\n+//go:build !purego && !appengine && !go1.21\n+// +build !purego,!appengine,!go1.21\n \n package strs\n ",
      "previous_filename": "backend/vendor/google.golang.org/protobuf/internal/strs/strings_unsafe.go"
    },
    {
      "sha": "60166f2ba3cfff54b8949dcbf5afe58531523400",
      "filename": "backend/vendor/google.golang.org/protobuf/internal/strs/strings_unsafe_go121.go",
      "status": "added",
      "additions": 74,
      "deletions": 0,
      "changes": 74,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fstrs%2Fstrings_unsafe_go121.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fstrs%2Fstrings_unsafe_go121.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fstrs%2Fstrings_unsafe_go121.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,74 @@\n+// Copyright 2018 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build !purego && !appengine && go1.21\n+// +build !purego,!appengine,go1.21\n+\n+package strs\n+\n+import (\n+\t\"unsafe\"\n+\n+\t\"google.golang.org/protobuf/reflect/protoreflect\"\n+)\n+\n+// UnsafeString returns an unsafe string reference of b.\n+// The caller must treat the input slice as immutable.\n+//\n+// WARNING: Use carefully. The returned result must not leak to the end user\n+// unless the input slice is provably immutable.\n+func UnsafeString(b []byte) string {\n+\treturn unsafe.String(unsafe.SliceData(b), len(b))\n+}\n+\n+// UnsafeBytes returns an unsafe bytes slice reference of s.\n+// The caller must treat returned slice as immutable.\n+//\n+// WARNING: Use carefully. The returned result must not leak to the end user.\n+func UnsafeBytes(s string) []byte {\n+\treturn unsafe.Slice(unsafe.StringData(s), len(s))\n+}\n+\n+// Builder builds a set of strings with shared lifetime.\n+// This differs from strings.Builder, which is for building a single string.\n+type Builder struct {\n+\tbuf []byte\n+}\n+\n+// AppendFullName is equivalent to protoreflect.FullName.Append,\n+// but optimized for large batches where each name has a shared lifetime.\n+func (sb *Builder) AppendFullName(prefix protoreflect.FullName, name protoreflect.Name) protoreflect.FullName {\n+\tn := len(prefix) + len(\".\") + len(name)\n+\tif len(prefix) == 0 {\n+\t\tn -= len(\".\")\n+\t}\n+\tsb.grow(n)\n+\tsb.buf = append(sb.buf, prefix...)\n+\tsb.buf = append(sb.buf, '.')\n+\tsb.buf = append(sb.buf, name...)\n+\treturn protoreflect.FullName(sb.last(n))\n+}\n+\n+// MakeString is equivalent to string(b), but optimized for large batches\n+// with a shared lifetime.\n+func (sb *Builder) MakeString(b []byte) string {\n+\tsb.grow(len(b))\n+\tsb.buf = append(sb.buf, b...)\n+\treturn sb.last(len(b))\n+}\n+\n+func (sb *Builder) grow(n int) {\n+\tif cap(sb.buf)-len(sb.buf) >= n {\n+\t\treturn\n+\t}\n+\n+\t// Unlike strings.Builder, we do not need to copy over the contents\n+\t// of the old buffer since our builder provides no API for\n+\t// retrieving previously created strings.\n+\tsb.buf = make([]byte, 0, 2*(cap(sb.buf)+n))\n+}\n+\n+func (sb *Builder) last(n int) string {\n+\treturn UnsafeString(sb.buf[len(sb.buf)-n:])\n+}"
    },
    {
      "sha": "d8f48faffac8f73afa40293c56a4e2b59efb31c1",
      "filename": "backend/vendor/google.golang.org/protobuf/internal/version/version.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fversion%2Fversion.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fversion%2Fversion.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Finternal%2Fversion%2Fversion.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -51,7 +51,7 @@ import (\n //  10. Send out the CL for review and submit it.\n const (\n \tMajor      = 1\n-\tMinor      = 31\n+\tMinor      = 32\n \tPatch      = 0\n \tPreRelease = \"\"\n )"
    },
    {
      "sha": "e5b03b567719d4c86437a428bc02427d2edc0b4d",
      "filename": "backend/vendor/google.golang.org/protobuf/proto/decode.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fdecode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fdecode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fdecode.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -69,7 +69,7 @@ func (o UnmarshalOptions) Unmarshal(b []byte, m Message) error {\n // UnmarshalState parses a wire-format message and places the result in m.\n //\n // This method permits fine-grained control over the unmarshaler.\n-// Most users should use Unmarshal instead.\n+// Most users should use [Unmarshal] instead.\n func (o UnmarshalOptions) UnmarshalState(in protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {\n \tif o.RecursionLimit == 0 {\n \t\to.RecursionLimit = protowire.DefaultRecursionLimit"
    },
    {
      "sha": "80ed16a0c295452592bea7bc8a22f2dc2ffc4b67",
      "filename": "backend/vendor/google.golang.org/protobuf/proto/doc.go",
      "status": "modified",
      "additions": 29,
      "deletions": 29,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fdoc.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -18,37 +18,37 @@\n // This package contains functions to convert to and from the wire format,\n // an efficient binary serialization of protocol buffers.\n //\n-// • Size reports the size of a message in the wire format.\n+//   - [Size] reports the size of a message in the wire format.\n //\n-// • Marshal converts a message to the wire format.\n-// The MarshalOptions type provides more control over wire marshaling.\n+//   - [Marshal] converts a message to the wire format.\n+//     The [MarshalOptions] type provides more control over wire marshaling.\n //\n-// • Unmarshal converts a message from the wire format.\n-// The UnmarshalOptions type provides more control over wire unmarshaling.\n+//   - [Unmarshal] converts a message from the wire format.\n+//     The [UnmarshalOptions] type provides more control over wire unmarshaling.\n //\n // # Basic message operations\n //\n-// • Clone makes a deep copy of a message.\n+//   - [Clone] makes a deep copy of a message.\n //\n-// • Merge merges the content of a message into another.\n+//   - [Merge] merges the content of a message into another.\n //\n-// • Equal compares two messages. For more control over comparisons\n-// and detailed reporting of differences, see package\n-// \"google.golang.org/protobuf/testing/protocmp\".\n+//   - [Equal] compares two messages. For more control over comparisons\n+//     and detailed reporting of differences, see package\n+//     [google.golang.org/protobuf/testing/protocmp].\n //\n-// • Reset clears the content of a message.\n+//   - [Reset] clears the content of a message.\n //\n-// • CheckInitialized reports whether all required fields in a message are set.\n+//   - [CheckInitialized] reports whether all required fields in a message are set.\n //\n // # Optional scalar constructors\n //\n // The API for some generated messages represents optional scalar fields\n // as pointers to a value. For example, an optional string field has the\n // Go type *string.\n //\n-// • Bool, Int32, Int64, Uint32, Uint64, Float32, Float64, and String\n-// take a value and return a pointer to a new instance of it,\n-// to simplify construction of optional field values.\n+//   - [Bool], [Int32], [Int64], [Uint32], [Uint64], [Float32], [Float64], and [String]\n+//     take a value and return a pointer to a new instance of it,\n+//     to simplify construction of optional field values.\n //\n // Generated enum types usually have an Enum method which performs the\n // same operation.\n@@ -57,29 +57,29 @@\n //\n // # Extension accessors\n //\n-// • HasExtension, GetExtension, SetExtension, and ClearExtension\n-// access extension field values in a protocol buffer message.\n+//   - [HasExtension], [GetExtension], [SetExtension], and [ClearExtension]\n+//     access extension field values in a protocol buffer message.\n //\n // Extension fields are only supported in proto2.\n //\n // # Related packages\n //\n-// • Package \"google.golang.org/protobuf/encoding/protojson\" converts messages to\n-// and from JSON.\n+//   - Package [google.golang.org/protobuf/encoding/protojson] converts messages to\n+//     and from JSON.\n //\n-// • Package \"google.golang.org/protobuf/encoding/prototext\" converts messages to\n-// and from the text format.\n+//   - Package [google.golang.org/protobuf/encoding/prototext] converts messages to\n+//     and from the text format.\n //\n-// • Package \"google.golang.org/protobuf/reflect/protoreflect\" provides a\n-// reflection interface for protocol buffer data types.\n+//   - Package [google.golang.org/protobuf/reflect/protoreflect] provides a\n+//     reflection interface for protocol buffer data types.\n //\n-// • Package \"google.golang.org/protobuf/testing/protocmp\" provides features\n-// to compare protocol buffer messages with the \"github.com/google/go-cmp/cmp\"\n-// package.\n+//   - Package [google.golang.org/protobuf/testing/protocmp] provides features\n+//     to compare protocol buffer messages with the [github.com/google/go-cmp/cmp]\n+//     package.\n //\n-// • Package \"google.golang.org/protobuf/types/dynamicpb\" provides a dynamic\n-// message type, suitable for working with messages where the protocol buffer\n-// type is only known at runtime.\n+//   - Package [google.golang.org/protobuf/types/dynamicpb] provides a dynamic\n+//     message type, suitable for working with messages where the protocol buffer\n+//     type is only known at runtime.\n //\n // This module contains additional packages for more specialized use cases.\n // Consult the individual package documentation for details."
    },
    {
      "sha": "4fed202f9fc41cc0627f82dc3aded961749c4f66",
      "filename": "backend/vendor/google.golang.org/protobuf/proto/encode.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fencode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fencode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fencode.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -129,7 +129,7 @@ func (o MarshalOptions) MarshalAppend(b []byte, m Message) ([]byte, error) {\n // MarshalState returns the wire-format encoding of a message.\n //\n // This method permits fine-grained control over the marshaler.\n-// Most users should use Marshal instead.\n+// Most users should use [Marshal] instead.\n func (o MarshalOptions) MarshalState(in protoiface.MarshalInput) (protoiface.MarshalOutput, error) {\n \treturn o.marshal(in.Buf, in.Message)\n }"
    },
    {
      "sha": "17899a3a767f1356021873ded39cb268b44ab513",
      "filename": "backend/vendor/google.golang.org/protobuf/proto/extension.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fextension.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fextension.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fextension.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -26,7 +26,7 @@ func HasExtension(m Message, xt protoreflect.ExtensionType) bool {\n }\n \n // ClearExtension clears an extension field such that subsequent\n-// HasExtension calls return false.\n+// [HasExtension] calls return false.\n // It panics if m is invalid or if xt does not extend m.\n func ClearExtension(m Message, xt protoreflect.ExtensionType) {\n \tm.ProtoReflect().Clear(xt.TypeDescriptor())"
    },
    {
      "sha": "3c6fe57807bf02d6267d810182acc339aa4db6df",
      "filename": "backend/vendor/google.golang.org/protobuf/proto/merge.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fmerge.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fmerge.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fmerge.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -21,7 +21,7 @@ import (\n // The unknown fields of src are appended to the unknown fields of dst.\n //\n // It is semantically equivalent to unmarshaling the encoded form of src\n-// into dst with the UnmarshalOptions.Merge option specified.\n+// into dst with the [UnmarshalOptions.Merge] option specified.\n func Merge(dst, src Message) {\n \t// TODO: Should nil src be treated as semantically equivalent to a\n \t// untyped, read-only, empty message? What about a nil dst?"
    },
    {
      "sha": "7543ee6b255d828c96e95c81dd91e6e911bf5a58",
      "filename": "backend/vendor/google.golang.org/protobuf/proto/proto.go",
      "status": "modified",
      "additions": 10,
      "deletions": 8,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fproto.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fproto.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fproto%2Fproto.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -15,18 +15,20 @@ import (\n // protobuf module that accept a Message, except where otherwise specified.\n //\n // This is the v2 interface definition for protobuf messages.\n-// The v1 interface definition is \"github.com/golang/protobuf/proto\".Message.\n+// The v1 interface definition is [github.com/golang/protobuf/proto.Message].\n //\n-// To convert a v1 message to a v2 message,\n-// use \"github.com/golang/protobuf/proto\".MessageV2.\n-// To convert a v2 message to a v1 message,\n-// use \"github.com/golang/protobuf/proto\".MessageV1.\n+//   - To convert a v1 message to a v2 message,\n+//     use [google.golang.org/protobuf/protoadapt.MessageV2Of].\n+//   - To convert a v2 message to a v1 message,\n+//     use [google.golang.org/protobuf/protoadapt.MessageV1Of].\n type Message = protoreflect.ProtoMessage\n \n-// Error matches all errors produced by packages in the protobuf module.\n+// Error matches all errors produced by packages in the protobuf module\n+// according to [errors.Is].\n //\n-// That is, errors.Is(err, Error) reports whether an error is produced\n-// by this module.\n+// Example usage:\n+//\n+//\tif errors.Is(err, proto.Error) { ... }\n var Error error\n \n func init() {"
    },
    {
      "sha": "baa0cc6218fb4ca19ed38e565b4f320db721898f",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protodesc/desc.go",
      "status": "modified",
      "additions": 19,
      "deletions": 10,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Fdesc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Fdesc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Fdesc.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -3,11 +3,11 @@\n // license that can be found in the LICENSE file.\n \n // Package protodesc provides functionality for converting\n-// FileDescriptorProto messages to/from protoreflect.FileDescriptor values.\n+// FileDescriptorProto messages to/from [protoreflect.FileDescriptor] values.\n //\n // The google.protobuf.FileDescriptorProto is a protobuf message that describes\n // the type information for a .proto file in a form that is easily serializable.\n-// The protoreflect.FileDescriptor is a more structured representation of\n+// The [protoreflect.FileDescriptor] is a more structured representation of\n // the FileDescriptorProto message where references and remote dependencies\n // can be directly followed.\n package protodesc\n@@ -24,11 +24,11 @@ import (\n \t\"google.golang.org/protobuf/types/descriptorpb\"\n )\n \n-// Resolver is the resolver used by NewFile to resolve dependencies.\n+// Resolver is the resolver used by [NewFile] to resolve dependencies.\n // The enums and messages provided must belong to some parent file,\n // which is also registered.\n //\n-// It is implemented by protoregistry.Files.\n+// It is implemented by [protoregistry.Files].\n type Resolver interface {\n \tFindFileByPath(string) (protoreflect.FileDescriptor, error)\n \tFindDescriptorByName(protoreflect.FullName) (protoreflect.Descriptor, error)\n@@ -61,19 +61,19 @@ type FileOptions struct {\n \tAllowUnresolvable bool\n }\n \n-// NewFile creates a new protoreflect.FileDescriptor from the provided\n-// file descriptor message. See FileOptions.New for more information.\n+// NewFile creates a new [protoreflect.FileDescriptor] from the provided\n+// file descriptor message. See [FileOptions.New] for more information.\n func NewFile(fd *descriptorpb.FileDescriptorProto, r Resolver) (protoreflect.FileDescriptor, error) {\n \treturn FileOptions{}.New(fd, r)\n }\n \n-// NewFiles creates a new protoregistry.Files from the provided\n-// FileDescriptorSet message. See FileOptions.NewFiles for more information.\n+// NewFiles creates a new [protoregistry.Files] from the provided\n+// FileDescriptorSet message. See [FileOptions.NewFiles] for more information.\n func NewFiles(fd *descriptorpb.FileDescriptorSet) (*protoregistry.Files, error) {\n \treturn FileOptions{}.NewFiles(fd)\n }\n \n-// New creates a new protoreflect.FileDescriptor from the provided\n+// New creates a new [protoreflect.FileDescriptor] from the provided\n // file descriptor message. The file must represent a valid proto file according\n // to protobuf semantics. The returned descriptor is a deep copy of the input.\n //\n@@ -93,9 +93,15 @@ func (o FileOptions) New(fd *descriptorpb.FileDescriptorProto, r Resolver) (prot\n \t\tf.L1.Syntax = protoreflect.Proto2\n \tcase \"proto3\":\n \t\tf.L1.Syntax = protoreflect.Proto3\n+\tcase \"editions\":\n+\t\tf.L1.Syntax = protoreflect.Editions\n+\t\tf.L1.Edition = fromEditionProto(fd.GetEdition())\n \tdefault:\n \t\treturn nil, errors.New(\"invalid syntax: %q\", fd.GetSyntax())\n \t}\n+\tif f.L1.Syntax == protoreflect.Editions && (fd.GetEdition() < SupportedEditionsMinimum || fd.GetEdition() > SupportedEditionsMaximum) {\n+\t\treturn nil, errors.New(\"use of edition %v not yet supported by the Go Protobuf runtime\", fd.GetEdition())\n+\t}\n \tf.L1.Path = fd.GetName()\n \tif f.L1.Path == \"\" {\n \t\treturn nil, errors.New(\"file path must be populated\")\n@@ -108,6 +114,9 @@ func (o FileOptions) New(fd *descriptorpb.FileDescriptorProto, r Resolver) (prot\n \t\topts = proto.Clone(opts).(*descriptorpb.FileOptions)\n \t\tf.L2.Options = func() protoreflect.ProtoMessage { return opts }\n \t}\n+\tif f.L1.Syntax == protoreflect.Editions {\n+\t\tinitFileDescFromFeatureSet(f, fd.GetOptions().GetFeatures())\n+\t}\n \n \tf.L2.Imports = make(filedesc.FileImports, len(fd.GetDependency()))\n \tfor _, i := range fd.GetPublicDependency() {\n@@ -231,7 +240,7 @@ func (is importSet) importPublic(imps protoreflect.FileImports) {\n \t}\n }\n \n-// NewFiles creates a new protoregistry.Files from the provided\n+// NewFiles creates a new [protoregistry.Files] from the provided\n // FileDescriptorSet message. The descriptor set must include only\n // valid files according to protobuf semantics. The returned descriptors\n // are a deep copy of the input."
    },
    {
      "sha": "aff6fd4900eb149feaf01d9d6b12d17992d1a131",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protodesc/desc_init.go",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Fdesc_init.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Fdesc_init.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Fdesc_init.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -137,6 +137,30 @@ func (r descsByName) initFieldsFromDescriptorProto(fds []*descriptorpb.FieldDesc\n \t\tif fd.JsonName != nil {\n \t\t\tf.L1.StringName.InitJSON(fd.GetJsonName())\n \t\t}\n+\n+\t\tif f.Base.L0.ParentFile.Syntax() == protoreflect.Editions {\n+\t\t\tf.L1.Presence = resolveFeatureHasFieldPresence(f.Base.L0.ParentFile, fd)\n+\t\t\t// We reuse the existing field because the old option `[packed =\n+\t\t\t// true]` is mutually exclusive with the editions feature.\n+\t\t\tif fd.GetLabel() == descriptorpb.FieldDescriptorProto_LABEL_REPEATED {\n+\t\t\t\tf.L1.HasPacked = true\n+\t\t\t\tf.L1.IsPacked = resolveFeatureRepeatedFieldEncodingPacked(f.Base.L0.ParentFile, fd)\n+\t\t\t}\n+\n+\t\t\t// We pretend this option is always explicitly set because the only\n+\t\t\t// use of HasEnforceUTF8 is to determine whether to use EnforceUTF8\n+\t\t\t// or to return the appropriate default.\n+\t\t\t// When using editions we either parse the option or resolve the\n+\t\t\t// appropriate default here (instead of later when this option is\n+\t\t\t// requested from the descriptor).\n+\t\t\t// In proto2/proto3 syntax HasEnforceUTF8 might be false.\n+\t\t\tf.L1.HasEnforceUTF8 = true\n+\t\t\tf.L1.EnforceUTF8 = resolveFeatureEnforceUTF8(f.Base.L0.ParentFile, fd)\n+\n+\t\t\tif f.L1.Kind == protoreflect.MessageKind && resolveFeatureDelimitedEncoding(f.Base.L0.ParentFile, fd) {\n+\t\t\t\tf.L1.Kind = protoreflect.GroupKind\n+\t\t\t}\n+\t\t}\n \t}\n \treturn fs, nil\n }"
    },
    {
      "sha": "7352926cab472f9ade24ee8e9f1a8929477a6525",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protodesc/editions.go",
      "status": "added",
      "additions": 177,
      "deletions": 0,
      "changes": 177,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Feditions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Feditions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Feditions.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,177 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package protodesc\n+\n+import (\n+\t_ \"embed\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"sync\"\n+\n+\t\"google.golang.org/protobuf/internal/filedesc\"\n+\t\"google.golang.org/protobuf/proto\"\n+\t\"google.golang.org/protobuf/types/descriptorpb\"\n+)\n+\n+const (\n+\tSupportedEditionsMinimum = descriptorpb.Edition_EDITION_PROTO2\n+\tSupportedEditionsMaximum = descriptorpb.Edition_EDITION_2023\n+)\n+\n+//go:embed editions_defaults.binpb\n+var binaryEditionDefaults []byte\n+var defaults = &descriptorpb.FeatureSetDefaults{}\n+var defaultsCacheMu sync.Mutex\n+var defaultsCache = make(map[filedesc.Edition]*descriptorpb.FeatureSet)\n+\n+func init() {\n+\terr := proto.Unmarshal(binaryEditionDefaults, defaults)\n+\tif err != nil {\n+\t\tfmt.Fprintf(os.Stderr, \"unmarshal editions defaults: %v\\n\", err)\n+\t\tos.Exit(1)\n+\t}\n+}\n+\n+func fromEditionProto(epb descriptorpb.Edition) filedesc.Edition {\n+\treturn filedesc.Edition(epb)\n+}\n+\n+func toEditionProto(ed filedesc.Edition) descriptorpb.Edition {\n+\tswitch ed {\n+\tcase filedesc.EditionUnknown:\n+\t\treturn descriptorpb.Edition_EDITION_UNKNOWN\n+\tcase filedesc.EditionProto2:\n+\t\treturn descriptorpb.Edition_EDITION_PROTO2\n+\tcase filedesc.EditionProto3:\n+\t\treturn descriptorpb.Edition_EDITION_PROTO3\n+\tcase filedesc.Edition2023:\n+\t\treturn descriptorpb.Edition_EDITION_2023\n+\tdefault:\n+\t\tpanic(fmt.Sprintf(\"unknown value for edition: %v\", ed))\n+\t}\n+}\n+\n+func getFeatureSetFor(ed filedesc.Edition) *descriptorpb.FeatureSet {\n+\tdefaultsCacheMu.Lock()\n+\tdefer defaultsCacheMu.Unlock()\n+\tif def, ok := defaultsCache[ed]; ok {\n+\t\treturn def\n+\t}\n+\tedpb := toEditionProto(ed)\n+\tif defaults.GetMinimumEdition() > edpb || defaults.GetMaximumEdition() < edpb {\n+\t\t// This should never happen protodesc.(FileOptions).New would fail when\n+\t\t// initializing the file descriptor.\n+\t\t// This most likely means the embedded defaults were not updated.\n+\t\tfmt.Fprintf(os.Stderr, \"internal error: unsupported edition %v (did you forget to update the embedded defaults (i.e. the bootstrap descriptor proto)?)\\n\", edpb)\n+\t\tos.Exit(1)\n+\t}\n+\tfs := defaults.GetDefaults()[0].GetFeatures()\n+\t// Using a linear search for now.\n+\t// Editions are guaranteed to be sorted and thus we could use a binary search.\n+\t// Given that there are only a handful of editions (with one more per year)\n+\t// there is not much reason to use a binary search.\n+\tfor _, def := range defaults.GetDefaults() {\n+\t\tif def.GetEdition() <= edpb {\n+\t\t\tfs = def.GetFeatures()\n+\t\t} else {\n+\t\t\tbreak\n+\t\t}\n+\t}\n+\tdefaultsCache[ed] = fs\n+\treturn fs\n+}\n+\n+func resolveFeatureHasFieldPresence(fileDesc *filedesc.File, fieldDesc *descriptorpb.FieldDescriptorProto) bool {\n+\tfs := fieldDesc.GetOptions().GetFeatures()\n+\tif fs == nil || fs.FieldPresence == nil {\n+\t\treturn fileDesc.L1.EditionFeatures.IsFieldPresence\n+\t}\n+\treturn fs.GetFieldPresence() == descriptorpb.FeatureSet_LEGACY_REQUIRED ||\n+\t\tfs.GetFieldPresence() == descriptorpb.FeatureSet_EXPLICIT\n+}\n+\n+func resolveFeatureRepeatedFieldEncodingPacked(fileDesc *filedesc.File, fieldDesc *descriptorpb.FieldDescriptorProto) bool {\n+\tfs := fieldDesc.GetOptions().GetFeatures()\n+\tif fs == nil || fs.RepeatedFieldEncoding == nil {\n+\t\treturn fileDesc.L1.EditionFeatures.IsPacked\n+\t}\n+\treturn fs.GetRepeatedFieldEncoding() == descriptorpb.FeatureSet_PACKED\n+}\n+\n+func resolveFeatureEnforceUTF8(fileDesc *filedesc.File, fieldDesc *descriptorpb.FieldDescriptorProto) bool {\n+\tfs := fieldDesc.GetOptions().GetFeatures()\n+\tif fs == nil || fs.Utf8Validation == nil {\n+\t\treturn fileDesc.L1.EditionFeatures.IsUTF8Validated\n+\t}\n+\treturn fs.GetUtf8Validation() == descriptorpb.FeatureSet_VERIFY\n+}\n+\n+func resolveFeatureDelimitedEncoding(fileDesc *filedesc.File, fieldDesc *descriptorpb.FieldDescriptorProto) bool {\n+\tfs := fieldDesc.GetOptions().GetFeatures()\n+\tif fs == nil || fs.MessageEncoding == nil {\n+\t\treturn fileDesc.L1.EditionFeatures.IsDelimitedEncoded\n+\t}\n+\treturn fs.GetMessageEncoding() == descriptorpb.FeatureSet_DELIMITED\n+}\n+\n+// initFileDescFromFeatureSet initializes editions related fields in fd based\n+// on fs. If fs is nil it is assumed to be an empty featureset and all fields\n+// will be initialized with the appropriate default. fd.L1.Edition must be set\n+// before calling this function.\n+func initFileDescFromFeatureSet(fd *filedesc.File, fs *descriptorpb.FeatureSet) {\n+\tdfs := getFeatureSetFor(fd.L1.Edition)\n+\tif fs == nil {\n+\t\tfs = &descriptorpb.FeatureSet{}\n+\t}\n+\n+\tvar fieldPresence descriptorpb.FeatureSet_FieldPresence\n+\tif fp := fs.FieldPresence; fp != nil {\n+\t\tfieldPresence = *fp\n+\t} else {\n+\t\tfieldPresence = *dfs.FieldPresence\n+\t}\n+\tfd.L1.EditionFeatures.IsFieldPresence = fieldPresence == descriptorpb.FeatureSet_LEGACY_REQUIRED ||\n+\t\tfieldPresence == descriptorpb.FeatureSet_EXPLICIT\n+\n+\tvar enumType descriptorpb.FeatureSet_EnumType\n+\tif et := fs.EnumType; et != nil {\n+\t\tenumType = *et\n+\t} else {\n+\t\tenumType = *dfs.EnumType\n+\t}\n+\tfd.L1.EditionFeatures.IsOpenEnum = enumType == descriptorpb.FeatureSet_OPEN\n+\n+\tvar respeatedFieldEncoding descriptorpb.FeatureSet_RepeatedFieldEncoding\n+\tif rfe := fs.RepeatedFieldEncoding; rfe != nil {\n+\t\trespeatedFieldEncoding = *rfe\n+\t} else {\n+\t\trespeatedFieldEncoding = *dfs.RepeatedFieldEncoding\n+\t}\n+\tfd.L1.EditionFeatures.IsPacked = respeatedFieldEncoding == descriptorpb.FeatureSet_PACKED\n+\n+\tvar isUTF8Validated descriptorpb.FeatureSet_Utf8Validation\n+\tif utf8val := fs.Utf8Validation; utf8val != nil {\n+\t\tisUTF8Validated = *utf8val\n+\t} else {\n+\t\tisUTF8Validated = *dfs.Utf8Validation\n+\t}\n+\tfd.L1.EditionFeatures.IsUTF8Validated = isUTF8Validated == descriptorpb.FeatureSet_VERIFY\n+\n+\tvar messageEncoding descriptorpb.FeatureSet_MessageEncoding\n+\tif me := fs.MessageEncoding; me != nil {\n+\t\tmessageEncoding = *me\n+\t} else {\n+\t\tmessageEncoding = *dfs.MessageEncoding\n+\t}\n+\tfd.L1.EditionFeatures.IsDelimitedEncoded = messageEncoding == descriptorpb.FeatureSet_DELIMITED\n+\n+\tvar jsonFormat descriptorpb.FeatureSet_JsonFormat\n+\tif jf := fs.JsonFormat; jf != nil {\n+\t\tjsonFormat = *jf\n+\t} else {\n+\t\tjsonFormat = *dfs.JsonFormat\n+\t}\n+\tfd.L1.EditionFeatures.IsJSONCompliant = jsonFormat == descriptorpb.FeatureSet_ALLOW\n+}"
    },
    {
      "sha": "1a8610a8439cb4a89f4d4ee96560459aaec342f7",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protodesc/editions_defaults.binpb",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Feditions_defaults.binpb",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Feditions_defaults.binpb",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Feditions_defaults.binpb?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,4 @@\n+\n+\u0011\u0012\f\b\u0001\u0010\u0002\u0018\u0002 \u0001(\u00010\u0002\u0018�\u0007\n+\u0011\u0012\f\b\u0002\u0010\u0001\u0018\u0001 \u0002(\u00010\u0001\u0018�\u0007\n+\u0011\u0012\f\b\u0001\u0010\u0001\u0018\u0001 \u0002(\u00010\u0001\u0018�\u0007 �\u0007(�\u0007\n\\ No newline at end of file"
    },
    {
      "sha": "9d6e05420f7668ca614abf92ccef526555c3d121",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protodesc/proto.go",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Fproto.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Fproto.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotodesc%2Fproto.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -16,7 +16,7 @@ import (\n \t\"google.golang.org/protobuf/types/descriptorpb\"\n )\n \n-// ToFileDescriptorProto copies a protoreflect.FileDescriptor into a\n+// ToFileDescriptorProto copies a [protoreflect.FileDescriptor] into a\n // google.protobuf.FileDescriptorProto message.\n func ToFileDescriptorProto(file protoreflect.FileDescriptor) *descriptorpb.FileDescriptorProto {\n \tp := &descriptorpb.FileDescriptorProto{\n@@ -70,13 +70,13 @@ func ToFileDescriptorProto(file protoreflect.FileDescriptor) *descriptorpb.FileD\n \tfor i, exts := 0, file.Extensions(); i < exts.Len(); i++ {\n \t\tp.Extension = append(p.Extension, ToFieldDescriptorProto(exts.Get(i)))\n \t}\n-\tif syntax := file.Syntax(); syntax != protoreflect.Proto2 {\n+\tif syntax := file.Syntax(); syntax != protoreflect.Proto2 && syntax.IsValid() {\n \t\tp.Syntax = proto.String(file.Syntax().String())\n \t}\n \treturn p\n }\n \n-// ToDescriptorProto copies a protoreflect.MessageDescriptor into a\n+// ToDescriptorProto copies a [protoreflect.MessageDescriptor] into a\n // google.protobuf.DescriptorProto message.\n func ToDescriptorProto(message protoreflect.MessageDescriptor) *descriptorpb.DescriptorProto {\n \tp := &descriptorpb.DescriptorProto{\n@@ -119,7 +119,7 @@ func ToDescriptorProto(message protoreflect.MessageDescriptor) *descriptorpb.Des\n \treturn p\n }\n \n-// ToFieldDescriptorProto copies a protoreflect.FieldDescriptor into a\n+// ToFieldDescriptorProto copies a [protoreflect.FieldDescriptor] into a\n // google.protobuf.FieldDescriptorProto message.\n func ToFieldDescriptorProto(field protoreflect.FieldDescriptor) *descriptorpb.FieldDescriptorProto {\n \tp := &descriptorpb.FieldDescriptorProto{\n@@ -168,7 +168,7 @@ func ToFieldDescriptorProto(field protoreflect.FieldDescriptor) *descriptorpb.Fi\n \treturn p\n }\n \n-// ToOneofDescriptorProto copies a protoreflect.OneofDescriptor into a\n+// ToOneofDescriptorProto copies a [protoreflect.OneofDescriptor] into a\n // google.protobuf.OneofDescriptorProto message.\n func ToOneofDescriptorProto(oneof protoreflect.OneofDescriptor) *descriptorpb.OneofDescriptorProto {\n \treturn &descriptorpb.OneofDescriptorProto{\n@@ -177,7 +177,7 @@ func ToOneofDescriptorProto(oneof protoreflect.OneofDescriptor) *descriptorpb.On\n \t}\n }\n \n-// ToEnumDescriptorProto copies a protoreflect.EnumDescriptor into a\n+// ToEnumDescriptorProto copies a [protoreflect.EnumDescriptor] into a\n // google.protobuf.EnumDescriptorProto message.\n func ToEnumDescriptorProto(enum protoreflect.EnumDescriptor) *descriptorpb.EnumDescriptorProto {\n \tp := &descriptorpb.EnumDescriptorProto{\n@@ -200,7 +200,7 @@ func ToEnumDescriptorProto(enum protoreflect.EnumDescriptor) *descriptorpb.EnumD\n \treturn p\n }\n \n-// ToEnumValueDescriptorProto copies a protoreflect.EnumValueDescriptor into a\n+// ToEnumValueDescriptorProto copies a [protoreflect.EnumValueDescriptor] into a\n // google.protobuf.EnumValueDescriptorProto message.\n func ToEnumValueDescriptorProto(value protoreflect.EnumValueDescriptor) *descriptorpb.EnumValueDescriptorProto {\n \treturn &descriptorpb.EnumValueDescriptorProto{\n@@ -210,7 +210,7 @@ func ToEnumValueDescriptorProto(value protoreflect.EnumValueDescriptor) *descrip\n \t}\n }\n \n-// ToServiceDescriptorProto copies a protoreflect.ServiceDescriptor into a\n+// ToServiceDescriptorProto copies a [protoreflect.ServiceDescriptor] into a\n // google.protobuf.ServiceDescriptorProto message.\n func ToServiceDescriptorProto(service protoreflect.ServiceDescriptor) *descriptorpb.ServiceDescriptorProto {\n \tp := &descriptorpb.ServiceDescriptorProto{\n@@ -223,7 +223,7 @@ func ToServiceDescriptorProto(service protoreflect.ServiceDescriptor) *descripto\n \treturn p\n }\n \n-// ToMethodDescriptorProto copies a protoreflect.MethodDescriptor into a\n+// ToMethodDescriptorProto copies a [protoreflect.MethodDescriptor] into a\n // google.protobuf.MethodDescriptorProto message.\n func ToMethodDescriptorProto(method protoreflect.MethodDescriptor) *descriptorpb.MethodDescriptorProto {\n \tp := &descriptorpb.MethodDescriptorProto{"
    },
    {
      "sha": "ec6572dfda957d84e22a93687b89fe38af3f5e1d",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protoreflect/proto.go",
      "status": "modified",
      "additions": 43,
      "deletions": 40,
      "changes": 83,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fproto.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fproto.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fproto.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -10,46 +10,46 @@\n //\n // # Protocol Buffer Descriptors\n //\n-// Protobuf descriptors (e.g., EnumDescriptor or MessageDescriptor)\n+// Protobuf descriptors (e.g., [EnumDescriptor] or [MessageDescriptor])\n // are immutable objects that represent protobuf type information.\n // They are wrappers around the messages declared in descriptor.proto.\n // Protobuf descriptors alone lack any information regarding Go types.\n //\n-// Enums and messages generated by this module implement Enum and ProtoMessage,\n+// Enums and messages generated by this module implement [Enum] and [ProtoMessage],\n // where the Descriptor and ProtoReflect.Descriptor accessors respectively\n // return the protobuf descriptor for the values.\n //\n // The protobuf descriptor interfaces are not meant to be implemented by\n // user code since they might need to be extended in the future to support\n // additions to the protobuf language.\n-// The \"google.golang.org/protobuf/reflect/protodesc\" package converts between\n+// The [google.golang.org/protobuf/reflect/protodesc] package converts between\n // google.protobuf.DescriptorProto messages and protobuf descriptors.\n //\n // # Go Type Descriptors\n //\n-// A type descriptor (e.g., EnumType or MessageType) is a constructor for\n+// A type descriptor (e.g., [EnumType] or [MessageType]) is a constructor for\n // a concrete Go type that represents the associated protobuf descriptor.\n // There is commonly a one-to-one relationship between protobuf descriptors and\n // Go type descriptors, but it can potentially be a one-to-many relationship.\n //\n-// Enums and messages generated by this module implement Enum and ProtoMessage,\n+// Enums and messages generated by this module implement [Enum] and [ProtoMessage],\n // where the Type and ProtoReflect.Type accessors respectively\n // return the protobuf descriptor for the values.\n //\n-// The \"google.golang.org/protobuf/types/dynamicpb\" package can be used to\n+// The [google.golang.org/protobuf/types/dynamicpb] package can be used to\n // create Go type descriptors from protobuf descriptors.\n //\n // # Value Interfaces\n //\n-// The Enum and Message interfaces provide a reflective view over an\n+// The [Enum] and [Message] interfaces provide a reflective view over an\n // enum or message instance. For enums, it provides the ability to retrieve\n // the enum value number for any concrete enum type. For messages, it provides\n // the ability to access or manipulate fields of the message.\n //\n-// To convert a proto.Message to a protoreflect.Message, use the\n+// To convert a [google.golang.org/protobuf/proto.Message] to a [protoreflect.Message], use the\n // former's ProtoReflect method. Since the ProtoReflect method is new to the\n // v2 message interface, it may not be present on older message implementations.\n-// The \"github.com/golang/protobuf/proto\".MessageReflect function can be used\n+// The [github.com/golang/protobuf/proto.MessageReflect] function can be used\n // to obtain a reflective view on older messages.\n //\n // # Relationships\n@@ -71,12 +71,12 @@\n //\t      │                                 │\n //\t      └────────────────── Type() ───────┘\n //\n-// • An EnumType describes a concrete Go enum type.\n+// • An [EnumType] describes a concrete Go enum type.\n // It has an EnumDescriptor and can construct an Enum instance.\n //\n-// • An EnumDescriptor describes an abstract protobuf enum type.\n+// • An [EnumDescriptor] describes an abstract protobuf enum type.\n //\n-// • An Enum is a concrete enum instance. Generated enums implement Enum.\n+// • An [Enum] is a concrete enum instance. Generated enums implement Enum.\n //\n //\t  ┌──────────────── New() ─────────────────┐\n //\t  │                                        │\n@@ -90,24 +90,26 @@\n //\t       │                                    │\n //\t       └─────────────────── Type() ─────────┘\n //\n-// • A MessageType describes a concrete Go message type.\n-// It has a MessageDescriptor and can construct a Message instance.\n-// Just as how Go's reflect.Type is a reflective description of a Go type,\n-// a MessageType is a reflective description of a Go type for a protobuf message.\n+// • A [MessageType] describes a concrete Go message type.\n+// It has a [MessageDescriptor] and can construct a [Message] instance.\n+// Just as how Go's [reflect.Type] is a reflective description of a Go type,\n+// a [MessageType] is a reflective description of a Go type for a protobuf message.\n //\n-// • A MessageDescriptor describes an abstract protobuf message type.\n-// It has no understanding of Go types. In order to construct a MessageType\n-// from just a MessageDescriptor, you can consider looking up the message type\n-// in the global registry using protoregistry.GlobalTypes.FindMessageByName\n-// or constructing a dynamic MessageType using dynamicpb.NewMessageType.\n+// • A [MessageDescriptor] describes an abstract protobuf message type.\n+// It has no understanding of Go types. In order to construct a [MessageType]\n+// from just a [MessageDescriptor], you can consider looking up the message type\n+// in the global registry using the FindMessageByName method on\n+// [google.golang.org/protobuf/reflect/protoregistry.GlobalTypes]\n+// or constructing a dynamic [MessageType] using\n+// [google.golang.org/protobuf/types/dynamicpb.NewMessageType].\n //\n-// • A Message is a reflective view over a concrete message instance.\n-// Generated messages implement ProtoMessage, which can convert to a Message.\n-// Just as how Go's reflect.Value is a reflective view over a Go value,\n-// a Message is a reflective view over a concrete protobuf message instance.\n-// Using Go reflection as an analogy, the ProtoReflect method is similar to\n-// calling reflect.ValueOf, and the Message.Interface method is similar to\n-// calling reflect.Value.Interface.\n+// • A [Message] is a reflective view over a concrete message instance.\n+// Generated messages implement [ProtoMessage], which can convert to a [Message].\n+// Just as how Go's [reflect.Value] is a reflective view over a Go value,\n+// a [Message] is a reflective view over a concrete protobuf message instance.\n+// Using Go reflection as an analogy, the [ProtoMessage.ProtoReflect] method is similar to\n+// calling [reflect.ValueOf], and the [Message.Interface] method is similar to\n+// calling [reflect.Value.Interface].\n //\n //\t      ┌── TypeDescriptor() ──┐    ┌───── Descriptor() ─────┐\n //\t      │                      V    │                        V\n@@ -119,15 +121,15 @@\n //\t                                 │                          │\n //\t                                 └────── implements ────────┘\n //\n-// • An ExtensionType describes a concrete Go implementation of an extension.\n-// It has an ExtensionTypeDescriptor and can convert to/from\n-// abstract Values and Go values.\n+// • An [ExtensionType] describes a concrete Go implementation of an extension.\n+// It has an [ExtensionTypeDescriptor] and can convert to/from\n+// an abstract [Value] and a Go value.\n //\n-// • An ExtensionTypeDescriptor is an ExtensionDescriptor\n-// which also has an ExtensionType.\n+// • An [ExtensionTypeDescriptor] is an [ExtensionDescriptor]\n+// which also has an [ExtensionType].\n //\n-// • An ExtensionDescriptor describes an abstract protobuf extension field and\n-// may not always be an ExtensionTypeDescriptor.\n+// • An [ExtensionDescriptor] describes an abstract protobuf extension field and\n+// may not always be an [ExtensionTypeDescriptor].\n package protoreflect\n \n import (\n@@ -142,7 +144,7 @@ type doNotImplement pragma.DoNotImplement\n \n // ProtoMessage is the top-level interface that all proto messages implement.\n // This is declared in the protoreflect package to avoid a cyclic dependency;\n-// use the proto.Message type instead, which aliases this type.\n+// use the [google.golang.org/protobuf/proto.Message] type instead, which aliases this type.\n type ProtoMessage interface{ ProtoReflect() Message }\n \n // Syntax is the language version of the proto file.\n@@ -151,8 +153,9 @@ type Syntax syntax\n type syntax int8 // keep exact type opaque as the int type may change\n \n const (\n-\tProto2 Syntax = 2\n-\tProto3 Syntax = 3\n+\tProto2   Syntax = 2\n+\tProto3   Syntax = 3\n+\tEditions Syntax = 4\n )\n \n // IsValid reports whether the syntax is valid.\n@@ -436,7 +439,7 @@ type Names interface {\n // FullName is a qualified name that uniquely identifies a proto declaration.\n // A qualified name is the concatenation of the proto package along with the\n // fully-declared name (i.e., name of parent preceding the name of the child),\n-// with a '.' delimiter placed between each Name.\n+// with a '.' delimiter placed between each [Name].\n //\n // This should not have any leading or trailing dots.\n type FullName string // e.g., \"google.protobuf.Field.Kind\"\n@@ -480,7 +483,7 @@ func isLetterDigit(c byte) bool {\n }\n \n // Name returns the short name, which is the last identifier segment.\n-// A single segment FullName is the Name itself.\n+// A single segment FullName is the [Name] itself.\n func (n FullName) Name() Name {\n \tif i := strings.LastIndexByte(string(n), '.'); i >= 0 {\n \t\treturn Name(n[i+1:])"
    },
    {
      "sha": "0c045db6ab6a701a0080a68fe648c1750f962278",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protoreflect/source_gen.go",
      "status": "modified",
      "additions": 57,
      "deletions": 5,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fsource_gen.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fsource_gen.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fsource_gen.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -35,7 +35,7 @@ func (p *SourcePath) appendFileDescriptorProto(b []byte) []byte {\n \t\tb = p.appendSingularField(b, \"source_code_info\", (*SourcePath).appendSourceCodeInfo)\n \tcase 12:\n \t\tb = p.appendSingularField(b, \"syntax\", nil)\n-\tcase 13:\n+\tcase 14:\n \t\tb = p.appendSingularField(b, \"edition\", nil)\n \t}\n \treturn b\n@@ -180,6 +180,8 @@ func (p *SourcePath) appendFileOptions(b []byte) []byte {\n \t\tb = p.appendSingularField(b, \"php_metadata_namespace\", nil)\n \tcase 45:\n \t\tb = p.appendSingularField(b, \"ruby_package\", nil)\n+\tcase 50:\n+\t\tb = p.appendSingularField(b, \"features\", (*SourcePath).appendFeatureSet)\n \tcase 999:\n \t\tb = p.appendRepeatedField(b, \"uninterpreted_option\", (*SourcePath).appendUninterpretedOption)\n \t}\n@@ -240,6 +242,8 @@ func (p *SourcePath) appendMessageOptions(b []byte) []byte {\n \t\tb = p.appendSingularField(b, \"map_entry\", nil)\n \tcase 11:\n \t\tb = p.appendSingularField(b, \"deprecated_legacy_json_field_conflicts\", nil)\n+\tcase 12:\n+\t\tb = p.appendSingularField(b, \"features\", (*SourcePath).appendFeatureSet)\n \tcase 999:\n \t\tb = p.appendRepeatedField(b, \"uninterpreted_option\", (*SourcePath).appendUninterpretedOption)\n \t}\n@@ -285,6 +289,8 @@ func (p *SourcePath) appendEnumOptions(b []byte) []byte {\n \t\tb = p.appendSingularField(b, \"deprecated\", nil)\n \tcase 6:\n \t\tb = p.appendSingularField(b, \"deprecated_legacy_json_field_conflicts\", nil)\n+\tcase 7:\n+\t\tb = p.appendSingularField(b, \"features\", (*SourcePath).appendFeatureSet)\n \tcase 999:\n \t\tb = p.appendRepeatedField(b, \"uninterpreted_option\", (*SourcePath).appendUninterpretedOption)\n \t}\n@@ -330,6 +336,8 @@ func (p *SourcePath) appendServiceOptions(b []byte) []byte {\n \t\treturn b\n \t}\n \tswitch (*p)[0] {\n+\tcase 34:\n+\t\tb = p.appendSingularField(b, \"features\", (*SourcePath).appendFeatureSet)\n \tcase 33:\n \t\tb = p.appendSingularField(b, \"deprecated\", nil)\n \tcase 999:\n@@ -361,16 +369,39 @@ func (p *SourcePath) appendFieldOptions(b []byte) []byte {\n \t\tb = p.appendSingularField(b, \"debug_redact\", nil)\n \tcase 17:\n \t\tb = p.appendSingularField(b, \"retention\", nil)\n-\tcase 18:\n-\t\tb = p.appendSingularField(b, \"target\", nil)\n \tcase 19:\n \t\tb = p.appendRepeatedField(b, \"targets\", nil)\n+\tcase 20:\n+\t\tb = p.appendRepeatedField(b, \"edition_defaults\", (*SourcePath).appendFieldOptions_EditionDefault)\n+\tcase 21:\n+\t\tb = p.appendSingularField(b, \"features\", (*SourcePath).appendFeatureSet)\n \tcase 999:\n \t\tb = p.appendRepeatedField(b, \"uninterpreted_option\", (*SourcePath).appendUninterpretedOption)\n \t}\n \treturn b\n }\n \n+func (p *SourcePath) appendFeatureSet(b []byte) []byte {\n+\tif len(*p) == 0 {\n+\t\treturn b\n+\t}\n+\tswitch (*p)[0] {\n+\tcase 1:\n+\t\tb = p.appendSingularField(b, \"field_presence\", nil)\n+\tcase 2:\n+\t\tb = p.appendSingularField(b, \"enum_type\", nil)\n+\tcase 3:\n+\t\tb = p.appendSingularField(b, \"repeated_field_encoding\", nil)\n+\tcase 4:\n+\t\tb = p.appendSingularField(b, \"utf8_validation\", nil)\n+\tcase 5:\n+\t\tb = p.appendSingularField(b, \"message_encoding\", nil)\n+\tcase 6:\n+\t\tb = p.appendSingularField(b, \"json_format\", nil)\n+\t}\n+\treturn b\n+}\n+\n func (p *SourcePath) appendUninterpretedOption(b []byte) []byte {\n \tif len(*p) == 0 {\n \t\treturn b\n@@ -422,6 +453,8 @@ func (p *SourcePath) appendExtensionRangeOptions(b []byte) []byte {\n \t\tb = p.appendRepeatedField(b, \"uninterpreted_option\", (*SourcePath).appendUninterpretedOption)\n \tcase 2:\n \t\tb = p.appendRepeatedField(b, \"declaration\", (*SourcePath).appendExtensionRangeOptions_Declaration)\n+\tcase 50:\n+\t\tb = p.appendSingularField(b, \"features\", (*SourcePath).appendFeatureSet)\n \tcase 3:\n \t\tb = p.appendSingularField(b, \"verification\", nil)\n \t}\n@@ -433,6 +466,8 @@ func (p *SourcePath) appendOneofOptions(b []byte) []byte {\n \t\treturn b\n \t}\n \tswitch (*p)[0] {\n+\tcase 1:\n+\t\tb = p.appendSingularField(b, \"features\", (*SourcePath).appendFeatureSet)\n \tcase 999:\n \t\tb = p.appendRepeatedField(b, \"uninterpreted_option\", (*SourcePath).appendUninterpretedOption)\n \t}\n@@ -446,6 +481,10 @@ func (p *SourcePath) appendEnumValueOptions(b []byte) []byte {\n \tswitch (*p)[0] {\n \tcase 1:\n \t\tb = p.appendSingularField(b, \"deprecated\", nil)\n+\tcase 2:\n+\t\tb = p.appendSingularField(b, \"features\", (*SourcePath).appendFeatureSet)\n+\tcase 3:\n+\t\tb = p.appendSingularField(b, \"debug_redact\", nil)\n \tcase 999:\n \t\tb = p.appendRepeatedField(b, \"uninterpreted_option\", (*SourcePath).appendUninterpretedOption)\n \t}\n@@ -461,12 +500,27 @@ func (p *SourcePath) appendMethodOptions(b []byte) []byte {\n \t\tb = p.appendSingularField(b, \"deprecated\", nil)\n \tcase 34:\n \t\tb = p.appendSingularField(b, \"idempotency_level\", nil)\n+\tcase 35:\n+\t\tb = p.appendSingularField(b, \"features\", (*SourcePath).appendFeatureSet)\n \tcase 999:\n \t\tb = p.appendRepeatedField(b, \"uninterpreted_option\", (*SourcePath).appendUninterpretedOption)\n \t}\n \treturn b\n }\n \n+func (p *SourcePath) appendFieldOptions_EditionDefault(b []byte) []byte {\n+\tif len(*p) == 0 {\n+\t\treturn b\n+\t}\n+\tswitch (*p)[0] {\n+\tcase 3:\n+\t\tb = p.appendSingularField(b, \"edition\", nil)\n+\tcase 2:\n+\t\tb = p.appendSingularField(b, \"value\", nil)\n+\t}\n+\treturn b\n+}\n+\n func (p *SourcePath) appendUninterpretedOption_NamePart(b []byte) []byte {\n \tif len(*p) == 0 {\n \t\treturn b\n@@ -491,8 +545,6 @@ func (p *SourcePath) appendExtensionRangeOptions_Declaration(b []byte) []byte {\n \t\tb = p.appendSingularField(b, \"full_name\", nil)\n \tcase 3:\n \t\tb = p.appendSingularField(b, \"type\", nil)\n-\tcase 4:\n-\t\tb = p.appendSingularField(b, \"is_repeated\", nil)\n \tcase 5:\n \t\tb = p.appendSingularField(b, \"reserved\", nil)\n \tcase 6:"
    },
    {
      "sha": "60ff62b4c8524c81efbea322e77e040699d53b7d",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protoreflect/type.go",
      "status": "modified",
      "additions": 22,
      "deletions": 22,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Ftype.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Ftype.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Ftype.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -12,7 +12,7 @@ package protoreflect\n // exactly identical. However, it is possible for the same semantically\n // identical proto type to be represented by multiple type descriptors.\n //\n-// For example, suppose we have t1 and t2 which are both MessageDescriptors.\n+// For example, suppose we have t1 and t2 which are both an [MessageDescriptor].\n // If t1 == t2, then the types are definitely equal and all accessors return\n // the same information. However, if t1 != t2, then it is still possible that\n // they still represent the same proto type (e.g., t1.FullName == t2.FullName).\n@@ -115,7 +115,7 @@ type Descriptor interface {\n // corresponds with the google.protobuf.FileDescriptorProto message.\n //\n // Top-level declarations:\n-// EnumDescriptor, MessageDescriptor, FieldDescriptor, and/or ServiceDescriptor.\n+// [EnumDescriptor], [MessageDescriptor], [FieldDescriptor], and/or [ServiceDescriptor].\n type FileDescriptor interface {\n \tDescriptor // Descriptor.FullName is identical to Package\n \n@@ -180,8 +180,8 @@ type FileImport struct {\n // corresponds with the google.protobuf.DescriptorProto message.\n //\n // Nested declarations:\n-// FieldDescriptor, OneofDescriptor, FieldDescriptor, EnumDescriptor,\n-// and/or MessageDescriptor.\n+// [FieldDescriptor], [OneofDescriptor], [FieldDescriptor], [EnumDescriptor],\n+// and/or [MessageDescriptor].\n type MessageDescriptor interface {\n \tDescriptor\n \n@@ -214,7 +214,7 @@ type MessageDescriptor interface {\n \tExtensionRanges() FieldRanges\n \t// ExtensionRangeOptions returns the ith extension range options.\n \t//\n-\t// To avoid a dependency cycle, this method returns a proto.Message value,\n+\t// To avoid a dependency cycle, this method returns a proto.Message] value,\n \t// which always contains a google.protobuf.ExtensionRangeOptions message.\n \t// This method returns a typed nil-pointer if no options are present.\n \t// The caller must import the descriptorpb package to use this.\n@@ -231,9 +231,9 @@ type MessageDescriptor interface {\n }\n type isMessageDescriptor interface{ ProtoType(MessageDescriptor) }\n \n-// MessageType encapsulates a MessageDescriptor with a concrete Go implementation.\n+// MessageType encapsulates a [MessageDescriptor] with a concrete Go implementation.\n // It is recommended that implementations of this interface also implement the\n-// MessageFieldTypes interface.\n+// [MessageFieldTypes] interface.\n type MessageType interface {\n \t// New returns a newly allocated empty message.\n \t// It may return nil for synthetic messages representing a map entry.\n@@ -249,19 +249,19 @@ type MessageType interface {\n \tDescriptor() MessageDescriptor\n }\n \n-// MessageFieldTypes extends a MessageType by providing type information\n+// MessageFieldTypes extends a [MessageType] by providing type information\n // regarding enums and messages referenced by the message fields.\n type MessageFieldTypes interface {\n \tMessageType\n \n-\t// Enum returns the EnumType for the ith field in Descriptor.Fields.\n+\t// Enum returns the EnumType for the ith field in MessageDescriptor.Fields.\n \t// It returns nil if the ith field is not an enum kind.\n \t// It panics if out of bounds.\n \t//\n \t// Invariant: mt.Enum(i).Descriptor() == mt.Descriptor().Fields(i).Enum()\n \tEnum(i int) EnumType\n \n-\t// Message returns the MessageType for the ith field in Descriptor.Fields.\n+\t// Message returns the MessageType for the ith field in MessageDescriptor.Fields.\n \t// It returns nil if the ith field is not a message or group kind.\n \t// It panics if out of bounds.\n \t//\n@@ -286,8 +286,8 @@ type MessageDescriptors interface {\n // corresponds with the google.protobuf.FieldDescriptorProto message.\n //\n // It is used for both normal fields defined within the parent message\n-// (e.g., MessageDescriptor.Fields) and fields that extend some remote message\n-// (e.g., FileDescriptor.Extensions or MessageDescriptor.Extensions).\n+// (e.g., [MessageDescriptor.Fields]) and fields that extend some remote message\n+// (e.g., [FileDescriptor.Extensions] or [MessageDescriptor.Extensions]).\n type FieldDescriptor interface {\n \tDescriptor\n \n@@ -344,7 +344,7 @@ type FieldDescriptor interface {\n \t// IsMap reports whether this field represents a map,\n \t// where the value type for the associated field is a Map.\n \t// It is equivalent to checking whether Cardinality is Repeated,\n-\t// that the Kind is MessageKind, and that Message.IsMapEntry reports true.\n+\t// that the Kind is MessageKind, and that MessageDescriptor.IsMapEntry reports true.\n \tIsMap() bool\n \n \t// MapKey returns the field descriptor for the key in the map entry.\n@@ -419,7 +419,7 @@ type OneofDescriptor interface {\n \n \t// IsSynthetic reports whether this is a synthetic oneof created to support\n \t// proto3 optional semantics. If true, Fields contains exactly one field\n-\t// with HasOptionalKeyword specified.\n+\t// with FieldDescriptor.HasOptionalKeyword specified.\n \tIsSynthetic() bool\n \n \t// Fields is a list of fields belonging to this oneof.\n@@ -442,10 +442,10 @@ type OneofDescriptors interface {\n \tdoNotImplement\n }\n \n-// ExtensionDescriptor is an alias of FieldDescriptor for documentation.\n+// ExtensionDescriptor is an alias of [FieldDescriptor] for documentation.\n type ExtensionDescriptor = FieldDescriptor\n \n-// ExtensionTypeDescriptor is an ExtensionDescriptor with an associated ExtensionType.\n+// ExtensionTypeDescriptor is an [ExtensionDescriptor] with an associated [ExtensionType].\n type ExtensionTypeDescriptor interface {\n \tExtensionDescriptor\n \n@@ -470,12 +470,12 @@ type ExtensionDescriptors interface {\n \tdoNotImplement\n }\n \n-// ExtensionType encapsulates an ExtensionDescriptor with a concrete\n+// ExtensionType encapsulates an [ExtensionDescriptor] with a concrete\n // Go implementation. The nested field descriptor must be for a extension field.\n //\n // While a normal field is a member of the parent message that it is declared\n-// within (see Descriptor.Parent), an extension field is a member of some other\n-// target message (see ExtensionDescriptor.Extendee) and may have no\n+// within (see [Descriptor.Parent]), an extension field is a member of some other\n+// target message (see [FieldDescriptor.ContainingMessage]) and may have no\n // relationship with the parent. However, the full name of an extension field is\n // relative to the parent that it is declared within.\n //\n@@ -532,7 +532,7 @@ type ExtensionType interface {\n // corresponds with the google.protobuf.EnumDescriptorProto message.\n //\n // Nested declarations:\n-// EnumValueDescriptor.\n+// [EnumValueDescriptor].\n type EnumDescriptor interface {\n \tDescriptor\n \n@@ -548,7 +548,7 @@ type EnumDescriptor interface {\n }\n type isEnumDescriptor interface{ ProtoType(EnumDescriptor) }\n \n-// EnumType encapsulates an EnumDescriptor with a concrete Go implementation.\n+// EnumType encapsulates an [EnumDescriptor] with a concrete Go implementation.\n type EnumType interface {\n \t// New returns an instance of this enum type with its value set to n.\n \tNew(n EnumNumber) Enum\n@@ -610,7 +610,7 @@ type EnumValueDescriptors interface {\n // ServiceDescriptor describes a service and\n // corresponds with the google.protobuf.ServiceDescriptorProto message.\n //\n-// Nested declarations: MethodDescriptor.\n+// Nested declarations: [MethodDescriptor].\n type ServiceDescriptor interface {\n \tDescriptor\n "
    },
    {
      "sha": "a7b0d06ff328015f77b432537a118893eab9d433",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protoreflect/value.go",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -27,16 +27,16 @@ type Enum interface {\n // Message is a reflective interface for a concrete message value,\n // encapsulating both type and value information for the message.\n //\n-// Accessor/mutators for individual fields are keyed by FieldDescriptor.\n+// Accessor/mutators for individual fields are keyed by [FieldDescriptor].\n // For non-extension fields, the descriptor must exactly match the\n // field known by the parent message.\n-// For extension fields, the descriptor must implement ExtensionTypeDescriptor,\n-// extend the parent message (i.e., have the same message FullName), and\n+// For extension fields, the descriptor must implement [ExtensionTypeDescriptor],\n+// extend the parent message (i.e., have the same message [FullName]), and\n // be within the parent's extension range.\n //\n-// Each field Value can be a scalar or a composite type (Message, List, or Map).\n-// See Value for the Go types associated with a FieldDescriptor.\n-// Providing a Value that is invalid or of an incorrect type panics.\n+// Each field [Value] can be a scalar or a composite type ([Message], [List], or [Map]).\n+// See [Value] for the Go types associated with a [FieldDescriptor].\n+// Providing a [Value] that is invalid or of an incorrect type panics.\n type Message interface {\n \t// Descriptor returns message descriptor, which contains only the protobuf\n \t// type information for the message.\n@@ -152,7 +152,7 @@ type Message interface {\n \t// This method may return nil.\n \t//\n \t// The returned methods type is identical to\n-\t// \"google.golang.org/protobuf/runtime/protoiface\".Methods.\n+\t// google.golang.org/protobuf/runtime/protoiface.Methods.\n \t// Consult the protoiface package documentation for details.\n \tProtoMethods() *methods\n }\n@@ -175,8 +175,8 @@ func (b RawFields) IsValid() bool {\n }\n \n // List is a zero-indexed, ordered list.\n-// The element Value type is determined by FieldDescriptor.Kind.\n-// Providing a Value that is invalid or of an incorrect type panics.\n+// The element [Value] type is determined by [FieldDescriptor.Kind].\n+// Providing a [Value] that is invalid or of an incorrect type panics.\n type List interface {\n \t// Len reports the number of entries in the List.\n \t// Get, Set, and Truncate panic with out of bound indexes.\n@@ -226,9 +226,9 @@ type List interface {\n }\n \n // Map is an unordered, associative map.\n-// The entry MapKey type is determined by FieldDescriptor.MapKey.Kind.\n-// The entry Value type is determined by FieldDescriptor.MapValue.Kind.\n-// Providing a MapKey or Value that is invalid or of an incorrect type panics.\n+// The entry [MapKey] type is determined by [FieldDescriptor.MapKey].Kind.\n+// The entry [Value] type is determined by [FieldDescriptor.MapValue].Kind.\n+// Providing a [MapKey] or [Value] that is invalid or of an incorrect type panics.\n type Map interface {\n \t// Len reports the number of elements in the map.\n \tLen() int"
    },
    {
      "sha": "654599d4493e8f4ac46701700fd3ff8d8af352e0",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protoreflect/value_equal.go",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue_equal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue_equal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue_equal.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -24,19 +24,19 @@ import (\n //     Unlike the == operator, a NaN is equal to another NaN.\n //\n //   - Enums are equal if they contain the same number.\n-//     Since Value does not contain an enum descriptor,\n+//     Since [Value] does not contain an enum descriptor,\n //     enum values do not consider the type of the enum.\n //\n //   - Other scalar values are equal if they contain the same value.\n //\n-//   - Message values are equal if they belong to the same message descriptor,\n+//   - [Message] values are equal if they belong to the same message descriptor,\n //     have the same set of populated known and extension field values,\n //     and the same set of unknown fields values.\n //\n-//   - Lists are equal if they are the same length and\n+//   - [List] values are equal if they are the same length and\n //     each corresponding element is equal.\n //\n-//   - Maps are equal if they have the same set of keys and\n+//   - [Map] values are equal if they have the same set of keys and\n //     the corresponding value for each key is equal.\n func (v1 Value) Equal(v2 Value) bool {\n \treturn equalValue(v1, v2)"
    },
    {
      "sha": "1603097311e9606dc84392dfe6401e893024c857",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protoreflect/value_union.go",
      "status": "modified",
      "additions": 22,
      "deletions": 22,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue_union.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue_union.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue_union.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -11,7 +11,7 @@ import (\n \n // Value is a union where only one Go type may be set at a time.\n // The Value is used to represent all possible values a field may take.\n-// The following shows which Go type is used to represent each proto Kind:\n+// The following shows which Go type is used to represent each proto [Kind]:\n //\n //\t╔════════════╤═════════════════════════════════════╗\n //\t║ Go type    │ Protobuf kind                       ║\n@@ -31,22 +31,22 @@ import (\n //\n // Multiple protobuf Kinds may be represented by a single Go type if the type\n // can losslessly represent the information for the proto kind. For example,\n-// Int64Kind, Sint64Kind, and Sfixed64Kind are all represented by int64,\n+// [Int64Kind], [Sint64Kind], and [Sfixed64Kind] are all represented by int64,\n // but use different integer encoding methods.\n //\n-// The List or Map types are used if the field cardinality is repeated.\n-// A field is a List if FieldDescriptor.IsList reports true.\n-// A field is a Map if FieldDescriptor.IsMap reports true.\n+// The [List] or [Map] types are used if the field cardinality is repeated.\n+// A field is a [List] if [FieldDescriptor.IsList] reports true.\n+// A field is a [Map] if [FieldDescriptor.IsMap] reports true.\n //\n // Converting to/from a Value and a concrete Go value panics on type mismatch.\n-// For example, ValueOf(\"hello\").Int() panics because this attempts to\n+// For example, [ValueOf](\"hello\").Int() panics because this attempts to\n // retrieve an int64 from a string.\n //\n-// List, Map, and Message Values are called \"composite\" values.\n+// [List], [Map], and [Message] Values are called \"composite\" values.\n //\n // A composite Value may alias (reference) memory at some location,\n // such that changes to the Value updates the that location.\n-// A composite value acquired with a Mutable method, such as Message.Mutable,\n+// A composite value acquired with a Mutable method, such as [Message.Mutable],\n // always references the source object.\n //\n // For example:\n@@ -65,7 +65,7 @@ import (\n //\t// appending to the List here may or may not modify the message.\n //\tlist.Append(protoreflect.ValueOfInt32(0))\n //\n-// Some operations, such as Message.Get, may return an \"empty, read-only\"\n+// Some operations, such as [Message.Get], may return an \"empty, read-only\"\n // composite Value. Modifying an empty, read-only value panics.\n type Value value\n \n@@ -306,7 +306,7 @@ func (v Value) Float() float64 {\n \t}\n }\n \n-// String returns v as a string. Since this method implements fmt.Stringer,\n+// String returns v as a string. Since this method implements [fmt.Stringer],\n // this returns the formatted string value for any non-string type.\n func (v Value) String() string {\n \tswitch v.typ {\n@@ -327,7 +327,7 @@ func (v Value) Bytes() []byte {\n \t}\n }\n \n-// Enum returns v as a EnumNumber and panics if the type is not a EnumNumber.\n+// Enum returns v as a [EnumNumber] and panics if the type is not a [EnumNumber].\n func (v Value) Enum() EnumNumber {\n \tswitch v.typ {\n \tcase enumType:\n@@ -337,7 +337,7 @@ func (v Value) Enum() EnumNumber {\n \t}\n }\n \n-// Message returns v as a Message and panics if the type is not a Message.\n+// Message returns v as a [Message] and panics if the type is not a [Message].\n func (v Value) Message() Message {\n \tswitch vi := v.getIface().(type) {\n \tcase Message:\n@@ -347,7 +347,7 @@ func (v Value) Message() Message {\n \t}\n }\n \n-// List returns v as a List and panics if the type is not a List.\n+// List returns v as a [List] and panics if the type is not a [List].\n func (v Value) List() List {\n \tswitch vi := v.getIface().(type) {\n \tcase List:\n@@ -357,7 +357,7 @@ func (v Value) List() List {\n \t}\n }\n \n-// Map returns v as a Map and panics if the type is not a Map.\n+// Map returns v as a [Map] and panics if the type is not a [Map].\n func (v Value) Map() Map {\n \tswitch vi := v.getIface().(type) {\n \tcase Map:\n@@ -367,7 +367,7 @@ func (v Value) Map() Map {\n \t}\n }\n \n-// MapKey returns v as a MapKey and panics for invalid MapKey types.\n+// MapKey returns v as a [MapKey] and panics for invalid [MapKey] types.\n func (v Value) MapKey() MapKey {\n \tswitch v.typ {\n \tcase boolType, int32Type, int64Type, uint32Type, uint64Type, stringType:\n@@ -378,8 +378,8 @@ func (v Value) MapKey() MapKey {\n }\n \n // MapKey is used to index maps, where the Go type of the MapKey must match\n-// the specified key Kind (see MessageDescriptor.IsMapEntry).\n-// The following shows what Go type is used to represent each proto Kind:\n+// the specified key [Kind] (see [MessageDescriptor.IsMapEntry]).\n+// The following shows what Go type is used to represent each proto [Kind]:\n //\n //\t╔═════════╤═════════════════════════════════════╗\n //\t║ Go type │ Protobuf kind                       ║\n@@ -392,13 +392,13 @@ func (v Value) MapKey() MapKey {\n //\t║ string  │ StringKind                          ║\n //\t╚═════════╧═════════════════════════════════════╝\n //\n-// A MapKey is constructed and accessed through a Value:\n+// A MapKey is constructed and accessed through a [Value]:\n //\n //\tk := ValueOf(\"hash\").MapKey() // convert string to MapKey\n //\ts := k.String()               // convert MapKey to string\n //\n-// The MapKey is a strict subset of valid types used in Value;\n-// converting a Value to a MapKey with an invalid type panics.\n+// The MapKey is a strict subset of valid types used in [Value];\n+// converting a [Value] to a MapKey with an invalid type panics.\n type MapKey value\n \n // IsValid reports whether k is populated with a value.\n@@ -426,13 +426,13 @@ func (k MapKey) Uint() uint64 {\n \treturn Value(k).Uint()\n }\n \n-// String returns k as a string. Since this method implements fmt.Stringer,\n+// String returns k as a string. Since this method implements [fmt.Stringer],\n // this returns the formatted string value for any non-string type.\n func (k MapKey) String() string {\n \treturn Value(k).String()\n }\n \n-// Value returns k as a Value.\n+// Value returns k as a [Value].\n func (k MapKey) Value() Value {\n \treturn Value(k)\n }"
    },
    {
      "sha": "b1fdbe3e8e17c97cc24349db796d7d3f0a2effce",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protoreflect/value_unsafe_go120.go",
      "status": "renamed",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue_unsafe_go120.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue_unsafe_go120.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue_unsafe_go120.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -2,8 +2,8 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build !purego && !appengine\n-// +build !purego,!appengine\n+//go:build !purego && !appengine && !go1.21\n+// +build !purego,!appengine,!go1.21\n \n package protoreflect\n ",
      "previous_filename": "backend/vendor/google.golang.org/protobuf/reflect/protoreflect/value_unsafe.go"
    },
    {
      "sha": "43547011173a2ed5a2bc6d4475bb7c5aa4361f43",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protoreflect/value_unsafe_go121.go",
      "status": "added",
      "additions": 87,
      "deletions": 0,
      "changes": 87,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue_unsafe_go121.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue_unsafe_go121.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoreflect%2Fvalue_unsafe_go121.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -0,0 +1,87 @@\n+// Copyright 2018 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build !purego && !appengine && go1.21\n+// +build !purego,!appengine,go1.21\n+\n+package protoreflect\n+\n+import (\n+\t\"unsafe\"\n+\n+\t\"google.golang.org/protobuf/internal/pragma\"\n+)\n+\n+type (\n+\tifaceHeader struct {\n+\t\t_    [0]interface{} // if interfaces have greater alignment than unsafe.Pointer, this will enforce it.\n+\t\tType unsafe.Pointer\n+\t\tData unsafe.Pointer\n+\t}\n+)\n+\n+var (\n+\tnilType     = typeOf(nil)\n+\tboolType    = typeOf(*new(bool))\n+\tint32Type   = typeOf(*new(int32))\n+\tint64Type   = typeOf(*new(int64))\n+\tuint32Type  = typeOf(*new(uint32))\n+\tuint64Type  = typeOf(*new(uint64))\n+\tfloat32Type = typeOf(*new(float32))\n+\tfloat64Type = typeOf(*new(float64))\n+\tstringType  = typeOf(*new(string))\n+\tbytesType   = typeOf(*new([]byte))\n+\tenumType    = typeOf(*new(EnumNumber))\n+)\n+\n+// typeOf returns a pointer to the Go type information.\n+// The pointer is comparable and equal if and only if the types are identical.\n+func typeOf(t interface{}) unsafe.Pointer {\n+\treturn (*ifaceHeader)(unsafe.Pointer(&t)).Type\n+}\n+\n+// value is a union where only one type can be represented at a time.\n+// The struct is 24B large on 64-bit systems and requires the minimum storage\n+// necessary to represent each possible type.\n+//\n+// The Go GC needs to be able to scan variables containing pointers.\n+// As such, pointers and non-pointers cannot be intermixed.\n+type value struct {\n+\tpragma.DoNotCompare // 0B\n+\n+\t// typ stores the type of the value as a pointer to the Go type.\n+\ttyp unsafe.Pointer // 8B\n+\n+\t// ptr stores the data pointer for a String, Bytes, or interface value.\n+\tptr unsafe.Pointer // 8B\n+\n+\t// num stores a Bool, Int32, Int64, Uint32, Uint64, Float32, Float64, or\n+\t// Enum value as a raw uint64.\n+\t//\n+\t// It is also used to store the length of a String or Bytes value;\n+\t// the capacity is ignored.\n+\tnum uint64 // 8B\n+}\n+\n+func valueOfString(v string) Value {\n+\treturn Value{typ: stringType, ptr: unsafe.Pointer(unsafe.StringData(v)), num: uint64(len(v))}\n+}\n+func valueOfBytes(v []byte) Value {\n+\treturn Value{typ: bytesType, ptr: unsafe.Pointer(unsafe.SliceData(v)), num: uint64(len(v))}\n+}\n+func valueOfIface(v interface{}) Value {\n+\tp := (*ifaceHeader)(unsafe.Pointer(&v))\n+\treturn Value{typ: p.Type, ptr: p.Data}\n+}\n+\n+func (v Value) getString() string {\n+\treturn unsafe.String((*byte)(v.ptr), v.num)\n+}\n+func (v Value) getBytes() []byte {\n+\treturn unsafe.Slice((*byte)(v.ptr), v.num)\n+}\n+func (v Value) getIface() (x interface{}) {\n+\t*(*ifaceHeader)(unsafe.Pointer(&x)) = ifaceHeader{Type: v.typ, Data: v.ptr}\n+\treturn x\n+}"
    },
    {
      "sha": "6267dc52a67a0a557a0260680ea5ed5e1bb9c179",
      "filename": "backend/vendor/google.golang.org/protobuf/reflect/protoregistry/registry.go",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoregistry%2Fregistry.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoregistry%2Fregistry.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Freflect%2Fprotoregistry%2Fregistry.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -5,12 +5,12 @@\n // Package protoregistry provides data structures to register and lookup\n // protobuf descriptor types.\n //\n-// The Files registry contains file descriptors and provides the ability\n+// The [Files] registry contains file descriptors and provides the ability\n // to iterate over the files or lookup a specific descriptor within the files.\n-// Files only contains protobuf descriptors and has no understanding of Go\n+// [Files] only contains protobuf descriptors and has no understanding of Go\n // type information that may be associated with each descriptor.\n //\n-// The Types registry contains descriptor types for which there is a known\n+// The [Types] registry contains descriptor types for which there is a known\n // Go type associated with that descriptor. It provides the ability to iterate\n // over the registered types or lookup a type by name.\n package protoregistry\n@@ -218,7 +218,7 @@ func (r *Files) checkGenProtoConflict(path string) {\n \n // FindDescriptorByName looks up a descriptor by the full name.\n //\n-// This returns (nil, NotFound) if not found.\n+// This returns (nil, [NotFound]) if not found.\n func (r *Files) FindDescriptorByName(name protoreflect.FullName) (protoreflect.Descriptor, error) {\n \tif r == nil {\n \t\treturn nil, NotFound\n@@ -310,7 +310,7 @@ func (s *nameSuffix) Pop() (name protoreflect.Name) {\n \n // FindFileByPath looks up a file by the path.\n //\n-// This returns (nil, NotFound) if not found.\n+// This returns (nil, [NotFound]) if not found.\n // This returns an error if multiple files have the same path.\n func (r *Files) FindFileByPath(path string) (protoreflect.FileDescriptor, error) {\n \tif r == nil {\n@@ -431,7 +431,7 @@ func rangeTopLevelDescriptors(fd protoreflect.FileDescriptor, f func(protoreflec\n // A compliant implementation must deterministically return the same type\n // if no error is encountered.\n //\n-// The Types type implements this interface.\n+// The [Types] type implements this interface.\n type MessageTypeResolver interface {\n \t// FindMessageByName looks up a message by its full name.\n \t// E.g., \"google.protobuf.Any\"\n@@ -451,7 +451,7 @@ type MessageTypeResolver interface {\n // A compliant implementation must deterministically return the same type\n // if no error is encountered.\n //\n-// The Types type implements this interface.\n+// The [Types] type implements this interface.\n type ExtensionTypeResolver interface {\n \t// FindExtensionByName looks up a extension field by the field's full name.\n \t// Note that this is the full name of the field as determined by\n@@ -590,7 +590,7 @@ func (r *Types) register(kind string, desc protoreflect.Descriptor, typ interfac\n // FindEnumByName looks up an enum by its full name.\n // E.g., \"google.protobuf.Field.Kind\".\n //\n-// This returns (nil, NotFound) if not found.\n+// This returns (nil, [NotFound]) if not found.\n func (r *Types) FindEnumByName(enum protoreflect.FullName) (protoreflect.EnumType, error) {\n \tif r == nil {\n \t\treturn nil, NotFound\n@@ -611,7 +611,7 @@ func (r *Types) FindEnumByName(enum protoreflect.FullName) (protoreflect.EnumTyp\n // FindMessageByName looks up a message by its full name,\n // e.g. \"google.protobuf.Any\".\n //\n-// This returns (nil, NotFound) if not found.\n+// This returns (nil, [NotFound]) if not found.\n func (r *Types) FindMessageByName(message protoreflect.FullName) (protoreflect.MessageType, error) {\n \tif r == nil {\n \t\treturn nil, NotFound\n@@ -632,7 +632,7 @@ func (r *Types) FindMessageByName(message protoreflect.FullName) (protoreflect.M\n // FindMessageByURL looks up a message by a URL identifier.\n // See documentation on google.protobuf.Any.type_url for the URL format.\n //\n-// This returns (nil, NotFound) if not found.\n+// This returns (nil, [NotFound]) if not found.\n func (r *Types) FindMessageByURL(url string) (protoreflect.MessageType, error) {\n \t// This function is similar to FindMessageByName but\n \t// truncates anything before and including '/' in the URL.\n@@ -662,7 +662,7 @@ func (r *Types) FindMessageByURL(url string) (protoreflect.MessageType, error) {\n // where the extension is declared and is unrelated to the full name of the\n // message being extended.\n //\n-// This returns (nil, NotFound) if not found.\n+// This returns (nil, [NotFound]) if not found.\n func (r *Types) FindExtensionByName(field protoreflect.FullName) (protoreflect.ExtensionType, error) {\n \tif r == nil {\n \t\treturn nil, NotFound\n@@ -703,7 +703,7 @@ func (r *Types) FindExtensionByName(field protoreflect.FullName) (protoreflect.E\n // FindExtensionByNumber looks up a extension field by the field number\n // within some parent message, identified by full name.\n //\n-// This returns (nil, NotFound) if not found.\n+// This returns (nil, [NotFound]) if not found.\n func (r *Types) FindExtensionByNumber(message protoreflect.FullName, field protoreflect.FieldNumber) (protoreflect.ExtensionType, error) {\n \tif r == nil {\n \t\treturn nil, NotFound"
    },
    {
      "sha": "38daa858d07e01ee376a7c0039c24efebae42425",
      "filename": "backend/vendor/google.golang.org/protobuf/types/descriptorpb/descriptor.pb.go",
      "status": "modified",
      "additions": 1759,
      "deletions": 708,
      "changes": 2467,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Ftypes%2Fdescriptorpb%2Fdescriptor.pb.go",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Ftypes%2Fdescriptorpb%2Fdescriptor.pb.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Ftypes%2Fdescriptorpb%2Fdescriptor.pb.go?ref=cbd73865bd106deaa6f2fd3338799eece352caf9"
    },
    {
      "sha": "e1669982035ea3d6e3358fafb1251f1e1278f8c3",
      "filename": "backend/vendor/modules.txt",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/umputun/remark42/blob/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fmodules.txt",
      "raw_url": "https://github.com/umputun/remark42/raw/cbd73865bd106deaa6f2fd3338799eece352caf9/backend%2Fvendor%2Fmodules.txt",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fmodules.txt?ref=cbd73865bd106deaa6f2fd3338799eece352caf9",
      "patch": "@@ -13,7 +13,7 @@ github.com/PuerkitoBio/goquery\n # github.com/ajg/form v1.5.1\n ## explicit\n github.com/ajg/form\n-# github.com/alecthomas/chroma/v2 v2.8.0\n+# github.com/alecthomas/chroma/v2 v2.12.0\n ## explicit; go 1.19\n github.com/alecthomas/chroma/v2\n github.com/alecthomas/chroma/v2/formatters/html\n@@ -53,7 +53,7 @@ github.com/didip/tollbooth_chi\n ## explicit; go 1.13\n github.com/dlclark/regexp2\n github.com/dlclark/regexp2/syntax\n-# github.com/go-chi/chi/v5 v5.0.10\n+# github.com/go-chi/chi/v5 v5.0.11\n ## explicit; go 1.14\n github.com/go-chi/chi/v5\n github.com/go-chi/chi/v5/middleware\n@@ -68,7 +68,7 @@ github.com/go-chi/render\n github.com/go-oauth2/oauth2/v4\n github.com/go-oauth2/oauth2/v4/errors\n github.com/go-oauth2/oauth2/v4/server\n-# github.com/go-pkgz/auth v1.22.1-0.20231219172726-eb8671b06587\n+# github.com/go-pkgz/auth v1.22.2-0.20240110230548-7a3db006ab6e\n ## explicit; go 1.21\n github.com/go-pkgz/auth\n github.com/go-pkgz/auth/avatar\n@@ -128,14 +128,14 @@ github.com/golang/protobuf/proto\n # github.com/golang/snappy v0.0.4\n ## explicit\n github.com/golang/snappy\n-# github.com/google/uuid v1.3.0\n+# github.com/google/uuid v1.5.0\n ## explicit\n github.com/google/uuid\n # github.com/gorilla/css v1.0.1\n ## explicit; go 1.20\n github.com/gorilla/css/scanner\n-# github.com/gorilla/feeds v1.1.1\n-## explicit\n+# github.com/gorilla/feeds v1.1.2\n+## explicit; go 1.20\n github.com/gorilla/feeds\n # github.com/gorilla/websocket v1.5.1\n ## explicit; go 1.20\n@@ -146,7 +146,7 @@ github.com/hashicorp/errwrap\n # github.com/hashicorp/go-multierror v1.1.1\n ## explicit; go 1.13\n github.com/hashicorp/go-multierror\n-# github.com/hashicorp/golang-lru v0.5.4\n+# github.com/hashicorp/golang-lru v1.0.2\n ## explicit; go 1.12\n github.com/hashicorp/golang-lru\n github.com/hashicorp/golang-lru/simplelru\n@@ -265,29 +265,29 @@ go.mongodb.org/mongo-driver/x/mongo/driver/operation\n go.mongodb.org/mongo-driver/x/mongo/driver/session\n go.mongodb.org/mongo-driver/x/mongo/driver/topology\n go.mongodb.org/mongo-driver/x/mongo/driver/wiremessage\n-# go.uber.org/goleak v1.2.1\n-## explicit; go 1.18\n+# go.uber.org/goleak v1.3.0\n+## explicit; go 1.20\n go.uber.org/goleak\n go.uber.org/goleak/internal/stack\n-# golang.org/x/crypto v0.17.0\n+# golang.org/x/crypto v0.18.0\n ## explicit; go 1.18\n golang.org/x/crypto/acme\n golang.org/x/crypto/acme/autocert\n golang.org/x/crypto/ocsp\n golang.org/x/crypto/pbkdf2\n golang.org/x/crypto/scrypt\n-# golang.org/x/image v0.14.0\n+# golang.org/x/image v0.15.0\n ## explicit; go 1.18\n golang.org/x/image/draw\n golang.org/x/image/math/f64\n-# golang.org/x/net v0.19.0\n+# golang.org/x/net v0.20.0\n ## explicit; go 1.18\n golang.org/x/net/html\n golang.org/x/net/html/atom\n golang.org/x/net/idna\n golang.org/x/net/internal/socks\n golang.org/x/net/proxy\n-# golang.org/x/oauth2 v0.15.0\n+# golang.org/x/oauth2 v0.16.0\n ## explicit; go 1.18\n golang.org/x/oauth2\n golang.org/x/oauth2/authhandler\n@@ -303,11 +303,11 @@ golang.org/x/oauth2/jws\n golang.org/x/oauth2/jwt\n golang.org/x/oauth2/microsoft\n golang.org/x/oauth2/yandex\n-# golang.org/x/sync v0.5.0\n+# golang.org/x/sync v0.6.0\n ## explicit; go 1.18\n golang.org/x/sync/errgroup\n golang.org/x/sync/singleflight\n-# golang.org/x/sys v0.15.0\n+# golang.org/x/sys v0.16.0\n ## explicit; go 1.18\n golang.org/x/sys/unix\n golang.org/x/sys/windows\n@@ -329,8 +329,8 @@ google.golang.org/appengine/internal/modules\n google.golang.org/appengine/internal/remote_api\n google.golang.org/appengine/internal/urlfetch\n google.golang.org/appengine/urlfetch\n-# google.golang.org/protobuf v1.31.0\n-## explicit; go 1.11\n+# google.golang.org/protobuf v1.32.0\n+## explicit; go 1.17\n google.golang.org/protobuf/encoding/prototext\n google.golang.org/protobuf/encoding/protowire\n google.golang.org/protobuf/internal/descfmt"
    }
  ]
}
