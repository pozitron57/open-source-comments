{
  "sha": "1d5811a59c54dbf624de86c9cb239ef02b82f91a",
  "node_id": "C_kwDOCQOkhNoAKDFkNTgxMWE1OWM1NGRiZjYyNGRlODZjOWNiMjM5ZWYwMmI4MmY5MWE",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "22412567+qwqcode@users.noreply.github.com",
      "date": "2024-10-03T07:04:42Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2024-10-03T07:04:42Z"
    },
    "message": "feat(config): enhance config file and data dir retrieval (#992)\n\n* feat(config): enhance config file and data dir retrieval\r\n\r\n- Add xdg package for XDG base directory support\r\n- Update RetrieveConfigFile to search in XDG_CONFIG_HOME and /etc\r\n- Add RetrieveDataDir to find data directory in XDG_DATA_HOME and /var/lib\r\n- Improve comments for better understanding of search order\r\n\r\n* add unit tests",
    "tree": {
      "sha": "583da3c402088f032a65e22138d266da56e42ae2",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/583da3c402088f032a65e22138d266da56e42ae2"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/1d5811a59c54dbf624de86c9cb239ef02b82f91a",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJm/kIKCRC1aQ7uu5UhlAAApQ8QAJZLji6Nods1XzWxtR5ZXhVM\nBo1NeHjGBSjPYauD4CLip1gKt18qshUgSzbyaqg1Wcmoh9GfxoBCIPf7o8pQ5HG5\n+QG8+A9hbntkfS4reLtj9gmTDxQ/AXQnpy1ELVt18oOlRgGQNgxf78OMFbcHWgde\nJHisw8HD8fA6ZMnV6b8tOCQKfXSkZBn2lU9IoQ1fomnX6WSVNg4bPwxv8QJu1b8Y\n80Yz4x6ThFiReePteBikJIwwLYGlVbQ8F5EqxF8LAliXaKJlaI8DGIMbfWv6x/rH\nvkZc4PxppU78vWAyKrCWT+TmxdhHc96dfaGszfjh0LE0JHZAmOand2OqJgbKJhjb\nSmhS/Y6fffjA9hThLpEmexswNsvxEw4Kv6kssGhSEVXtIkFvaAheJ2Gw1bqIE/jP\nhozMn5h7xzZThdWOXKH1/EaczUm3pj1wNmYrs+OFAs5hMRA3acU3tyuuYprs1G/W\n/2dsrNgIeTU5LTiipOARbBAERYekbmu9wZZMQxR84UFTjfzzWAwmLkDfYUYt+Khg\noNkH7DXBIiD3XCt0XYhi+XFVwC4SYFmv/o9fL69jv5BfJGcBhkF0Wjy5m+Lv1nKY\n1sj0J6kJlbn6XdYU4Bfr8uc3hcgYUWw+q2HCJ230H4BaYR4IAKvrnWqQbK9bMtbl\nD2Xq2QjRaGLLeW9wpdob\n=OWJ1\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 583da3c402088f032a65e22138d266da56e42ae2\nparent ea9c5d9ecb89ed460837b37013c0483b1b070179\nauthor qwqcode <22412567+qwqcode@users.noreply.github.com> 1727939082 +0800\ncommitter GitHub <noreply@github.com> 1727939082 +0800\n\nfeat(config): enhance config file and data dir retrieval (#992)\n\n* feat(config): enhance config file and data dir retrieval\r\n\r\n- Add xdg package for XDG base directory support\r\n- Update RetrieveConfigFile to search in XDG_CONFIG_HOME and /etc\r\n- Add RetrieveDataDir to find data directory in XDG_DATA_HOME and /var/lib\r\n- Improve comments for better understanding of search order\r\n\r\n* add unit tests"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/1d5811a59c54dbf624de86c9cb239ef02b82f91a",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/1d5811a59c54dbf624de86c9cb239ef02b82f91a",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/1d5811a59c54dbf624de86c9cb239ef02b82f91a/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ea9c5d9ecb89ed460837b37013c0483b1b070179",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/ea9c5d9ecb89ed460837b37013c0483b1b070179",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/ea9c5d9ecb89ed460837b37013c0483b1b070179"
    }
  ],
  "stats": {
    "total": 249,
    "additions": 235,
    "deletions": 14
  },
  "files": [
    {
      "sha": "acd2519cf05d05e446ddf1961b62698b9a821b0b",
      "filename": "cmd/base.go",
      "status": "modified",
      "additions": 45,
      "deletions": 8,
      "changes": 53,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/1d5811a59c54dbf624de86c9cb239ef02b82f91a/cmd%2Fbase.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/1d5811a59c54dbf624de86c9cb239ef02b82f91a/cmd%2Fbase.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/cmd%2Fbase.go?ref=1d5811a59c54dbf624de86c9cb239ef02b82f91a",
      "patch": "@@ -4,11 +4,14 @@ import (\n \t\"fmt\"\n \t\"os\"\n \t\"os/signal\"\n+\t\"path\"\n \t\"syscall\"\n \n+\t\"github.com/adrg/xdg\"\n \t\"github.com/artalkjs/artalk/v2/internal/config\"\n \t\"github.com/artalkjs/artalk/v2/internal/core\"\n \t\"github.com/artalkjs/artalk/v2/internal/log\"\n+\t\"github.com/artalkjs/artalk/v2/internal/utils\"\n \t\"github.com/fatih/color\"\n \t\"github.com/spf13/cobra\"\n )\n@@ -64,11 +67,11 @@ func New() *ArtalkCmd {\n \t// Parse base flags\n \tcmd.eagerParseFlags()\n \n-\t// Change work directory\n-\tif cmd.workDir != \"\" {\n-\t\tif err := os.Chdir(cmd.workDir); err != nil {\n-\t\t\tlog.Fatal(\"Working directory change error: \", err)\n-\t\t}\n+\t// Init data directory (work directory)\n+\tif workDir, err := initDataDir(cmd.workDir); err == nil {\n+\t\tcmd.workDir = workDir\n+\t} else {\n+\t\tlog.Fatal(\"Data directory fail: \", err)\n \t}\n \n \treturn cmd\n@@ -167,16 +170,50 @@ func (atk *ArtalkCmd) Launch() error {\n \treturn nil\n }\n \n+func initDataDir(workDir string) (string, error) {\n+\t// If work directory is not specified, try to find it\n+\tif workDir == \"\" {\n+\t\t// If `data` in current directory exists, not change work directory\n+\t\tif utils.CheckDirExist(\"./data\") {\n+\t\t\t// log.Warn(\"[DEPRECATED] The `data` directory is deprecated, please move to `~/.local/share/artalk/data`\")\n+\t\t\treturn \"\", nil\n+\t\t}\n+\n+\t\t// Retrieve data directory assuming it's already exists\n+\t\tworkDir = config.RetrieveDataDir()\n+\t}\n+\n+\t// Create new data directory if not exists\n+\tif workDir == \"\" {\n+\t\t// default data path is `~/.local/share/artalk`\n+\t\tworkDir = path.Join(xdg.DataHome, \"artalk\")\n+\t\tif err := utils.EnsureDir(workDir); err != nil {\n+\t\t\treturn \"\", fmt.Errorf(\"data directory creation error: %v\", err)\n+\t\t}\n+\t}\n+\n+\t// Change work directory\n+\tif workDir != \"\" {\n+\t\tif err := os.Chdir(workDir); err != nil {\n+\t\t\treturn \"\", fmt.Errorf(\"working directory change error: %v\", err)\n+\t\t}\n+\t}\n+\n+\treturn workDir, nil\n+}\n+\n // Create new config instance by specific config filename\n func getConfig(cfgFile string) (*config.Config, error) {\n-\t// Retrieve config file by default names when specific filename is empty\n+\t// If config file is not specified, try to find it\n \tif cfgFile == \"\" {\n+\t\t// Retrieve config file assuming it's already exists\n \t\tcfgFile = config.RetrieveConfigFile()\n \t}\n \n-\t// Generate new config file when retrieve failed\n+\t// Generate new config file if not exists\n \tif cfgFile == \"\" {\n-\t\tcfgFile = config.CONF_DEFAULT_FILENAMES[0]\n+\t\t// default config path is `~/.config/artalk/artalk.yml`\n+\t\tcfgFile = path.Join(xdg.ConfigHome, \"artalk\", config.CONF_DEFAULT_FILENAMES[0])\n \t\tcore.Gen(\"config\", cfgFile, false)\n \t}\n "
    },
    {
      "sha": "a56d0f6e9d6cbe7d930c07dd5c35c130e384527c",
      "filename": "go.mod",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/1d5811a59c54dbf624de86c9cb239ef02b82f91a/go.mod",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/1d5811a59c54dbf624de86c9cb239ef02b82f91a/go.mod",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/go.mod?ref=1d5811a59c54dbf624de86c9cb239ef02b82f91a",
      "patch": "@@ -62,6 +62,7 @@ require (\n \tgithub.com/ClickHouse/clickhouse-go/v2 v2.28.3 // indirect\n \tgithub.com/KyleBanks/depth v1.2.1 // indirect\n \tgithub.com/VividCortex/ewma v1.2.0 // indirect\n+\tgithub.com/adrg/xdg v0.5.0 // indirect\n \tgithub.com/andybalholm/brotli v1.1.0 // indirect\n \tgithub.com/aymerick/douceur v0.2.0 // indirect\n \tgithub.com/beorn7/perks v1.0.1 // indirect"
    },
    {
      "sha": "f7ec0f502af335e6681ec95f7d8615692fd0fadd",
      "filename": "go.sum",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/1d5811a59c54dbf624de86c9cb239ef02b82f91a/go.sum",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/1d5811a59c54dbf624de86c9cb239ef02b82f91a/go.sum",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/go.sum?ref=1d5811a59c54dbf624de86c9cb239ef02b82f91a",
      "patch": "@@ -37,6 +37,8 @@ github.com/KyleBanks/depth v1.2.1 h1:5h8fQADFrWtarTdtDudMmGsC7GPbOAu6RVB3ffsVFHc\n github.com/KyleBanks/depth v1.2.1/go.mod h1:jzSb9d0L43HxTQfT+oSA1EEp2q+ne2uh6XgeJcm8brE=\n github.com/VividCortex/ewma v1.2.0 h1:f58SaIzcDXrSy3kWaHNvuJgJ3Nmz59Zji6XoJR/q1ow=\n github.com/VividCortex/ewma v1.2.0/go.mod h1:nz4BbCtbLyFDeC9SUHbtcT5644juEuWfUAUnGx7j5l4=\n+github.com/adrg/xdg v0.5.0 h1:dDaZvhMXatArP1NPHhnfaQUqWBLBsmx1h1HXQdMoFCY=\n+github.com/adrg/xdg v0.5.0/go.mod h1:dDdY4M4DF9Rjy4kHPeNL+ilVF+p2lK8IdM9/rTSGcI4=\n github.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\n github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\n github.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0="
    },
    {
      "sha": "292207a34a43ffba08a3bcffcd802eaff423d676",
      "filename": "internal/config/base.go",
      "status": "modified",
      "additions": 39,
      "deletions": 4,
      "changes": 43,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/1d5811a59c54dbf624de86c9cb239ef02b82f91a/internal%2Fconfig%2Fbase.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/1d5811a59c54dbf624de86c9cb239ef02b82f91a/internal%2Fconfig%2Fbase.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fconfig%2Fbase.go?ref=1d5811a59c54dbf624de86c9cb239ef02b82f91a",
      "patch": "@@ -5,10 +5,12 @@ package config\n import (\n \t\"fmt\"\n \t\"os\"\n+\t\"path\"\n \t\"strconv\"\n \t\"strings\"\n \t\"unicode\"\n \n+\t\"github.com/adrg/xdg\"\n \t\"github.com/artalkjs/artalk/v2/internal/config/env_provider\"\n \t\"github.com/artalkjs/artalk/v2/internal/log\"\n \t\"github.com/artalkjs/artalk/v2/internal/utils\"\n@@ -242,11 +244,44 @@ func (conf *Config) historyPatch() {\n \t}\n }\n \n-// 尝试查找配置文件\n+// Try to find the configuration file\n+//\n+// The order of the search is:\n+//  1. Current directory (./artalk.yml)\n+//  2. Current subdirectory (./data/artalk.yml)\n+//  3. XDG_CONFIG_HOME (~/.config/artalk.yml)\n+//  4. /etc/artalk.yml (for linux packing version)\n func RetrieveConfigFile() string {\n-\tfor _, v := range CONF_DEFAULT_FILENAMES {\n-\t\tif utils.CheckFileExist(v) {\n-\t\t\treturn v\n+\tlookupDirs := []string{\"\", \"data\", xdg.ConfigHome, \"/etc\"}\n+\tpaths := []string{}\n+\tfor _, dir := range lookupDirs {\n+\t\tfor _, name := range CONF_DEFAULT_FILENAMES {\n+\t\t\tif dir == \"\" || dir == \"data\" {\n+\t\t\t\tpaths = append(paths, path.Join(dir, name))\n+\t\t\t} else {\n+\t\t\t\tpaths = append(paths, path.Join(dir, \"artalk\", name))\n+\t\t\t}\n+\t\t}\n+\t}\n+\tfor _, path := range paths {\n+\t\tif utils.CheckFileExist(path) {\n+\t\t\treturn path\n+\t\t}\n+\t}\n+\treturn \"\"\n+}\n+\n+// Try to find the data directory (work directory)\n+//\n+// The order of the search is:\n+//  1. XDG_DATA_HOME (~/.local/share)\n+//  2. /var/lib (for linux packing version)\n+func RetrieveDataDir() string {\n+\tlookupDirs := []string{xdg.DataHome, \"/var/lib\"}\n+\tfor _, dir := range lookupDirs {\n+\t\tdir = path.Join(dir, \"artalk\")\n+\t\tif utils.CheckDirExist(dir) {\n+\t\t\treturn dir\n \t\t}\n \t}\n \treturn \"\""
    },
    {
      "sha": "f5bf037e226f971793bbff7137377de2dd8a408e",
      "filename": "internal/config/base_test.go",
      "status": "modified",
      "additions": 126,
      "deletions": 0,
      "changes": 126,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/1d5811a59c54dbf624de86c9cb239ef02b82f91a/internal%2Fconfig%2Fbase_test.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/1d5811a59c54dbf624de86c9cb239ef02b82f91a/internal%2Fconfig%2Fbase_test.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fconfig%2Fbase_test.go?ref=1d5811a59c54dbf624de86c9cb239ef02b82f91a",
      "patch": "@@ -1,8 +1,12 @@\n package config\n \n import (\n+\t\"cmp\"\n+\t\"path/filepath\"\n \t\"testing\"\n \n+\t\"github.com/adrg/xdg\"\n+\t\"github.com/artalkjs/artalk/v2/internal/utils\"\n \t\"github.com/stretchr/testify/assert\"\n )\n \n@@ -29,3 +33,125 @@ func TestI18nPatch(t *testing.T) {\n \t\ttest(\"EN\", \"en\")\n \t})\n }\n+\n+func mockCheckFileExist(mockFiles map[string]bool) func(string) bool {\n+\treturn func(filename string) bool {\n+\t\treturn mockFiles[filename]\n+\t}\n+}\n+\n+func TestRetrieveConfigFile(t *testing.T) {\n+\torgCheckFileExist := utils.CheckFileExist\n+\torgConfDefaultFilenames := CONF_DEFAULT_FILENAMES\n+\torgXDGConfigHome := xdg.ConfigHome\n+\tdefer func() {\n+\t\tutils.CheckFileExist = orgCheckFileExist\n+\t\tCONF_DEFAULT_FILENAMES = orgConfDefaultFilenames\n+\t\txdg.ConfigHome = orgXDGConfigHome\n+\t}()\n+\n+\ttests := []struct {\n+\t\tname          string\n+\t\talias         []string\n+\t\tmockFiles     map[string]bool\n+\t\txdgConfigHome string\n+\t\texpectedFile  string\n+\t}{\n+\t\t{\n+\t\t\tname:  \"work dir config\",\n+\t\t\talias: []string{\"artalk.yml\"},\n+\t\t\tmockFiles: map[string]bool{\n+\t\t\t\t\"artalk.yml\":                    true,\n+\t\t\t\t\"data/artalk.yml\":               true,\n+\t\t\t\t\"/home/user/.config/artalk.yml\": true,\n+\t\t\t\t\"/etc/artalk/artalk.yml\":        true,\n+\t\t\t},\n+\t\t\texpectedFile: \"./artalk.yml\",\n+\t\t},\n+\t\t{\n+\t\t\tname:  \"xdg config home\",\n+\t\t\talias: []string{\"artalk.yml\"},\n+\t\t\tmockFiles: map[string]bool{\n+\t\t\t\t\"/home/user/.config/artalk/artalk.yml\": true,\n+\t\t\t\t\"/etc/artalk/artalk.yml\":               true,\n+\t\t\t},\n+\t\t\txdgConfigHome: \"/home/user/.config\",\n+\t\t\texpectedFile:  \"/home/user/.config/artalk/artalk.yml\",\n+\t\t},\n+\t\t{\n+\t\t\tname:  \"linux packing version config (/etc/artalk/artalk.yml)\",\n+\t\t\talias: []string{\"artalk.yml\"},\n+\t\t\tmockFiles: map[string]bool{\n+\t\t\t\t\"/etc/artalk/artalk.yml\": true,\n+\t\t\t},\n+\t\t\texpectedFile: \"/etc/artalk/artalk.yml\",\n+\t\t},\n+\t\t{\n+\t\t\tname:  \"multiple config files\",\n+\t\t\talias: []string{\"artalk.yml\", \"artalk.yaml\"},\n+\t\t\tmockFiles: map[string]bool{\n+\t\t\t\t\"artalk.yml\":  false,\n+\t\t\t\t\"artalk.yaml\": true,\n+\t\t\t},\n+\t\t\texpectedFile: \"./artalk.yaml\",\n+\t\t},\n+\t}\n+\n+\tfor _, tt := range tests {\n+\t\tt.Run(tt.name, func(t *testing.T) {\n+\t\t\tCONF_DEFAULT_FILENAMES = tt.alias\n+\t\t\tutils.CheckFileExist = mockCheckFileExist(tt.mockFiles)\n+\t\t\txdg.ConfigHome = cmp.Or(tt.xdgConfigHome, orgXDGConfigHome)\n+\n+\t\t\tresult, _ := filepath.Abs(RetrieveConfigFile())\n+\t\t\texpected, _ := filepath.Abs(tt.expectedFile)\n+\t\t\tassert.Equal(t, expected, result, \"Expected to find the config file in %s\", tt.expectedFile)\n+\t\t})\n+\t}\n+}\n+\n+func TestRetrieveDataDir(t *testing.T) {\n+\torgCheckDirExist := utils.CheckDirExist\n+\torgXDGDataHome := xdg.DataHome\n+\tdefer func() {\n+\t\tutils.CheckDirExist = orgCheckDirExist\n+\t\txdg.DataHome = orgXDGDataHome\n+\t}()\n+\n+\ttests := []struct {\n+\t\tname        string\n+\t\tmockDirs    map[string]bool\n+\t\txdgDataHome string\n+\t\texpectedDir string\n+\t}{\n+\t\t{\n+\t\t\tname: \"xdg data home\",\n+\t\t\tmockDirs: map[string]bool{\n+\t\t\t\t\"/home/user/.local/share/artalk\": true,\n+\t\t\t},\n+\t\t\txdgDataHome: \"/home/user/.local/share\",\n+\t\t\texpectedDir: \"/home/user/.local/share/artalk\",\n+\t\t},\n+\t\t{\n+\t\t\tname: \"linux packing version data (/var/lib/artalk)\",\n+\t\t\tmockDirs: map[string]bool{\n+\t\t\t\t\"/home/user/.local/share/artalk\": false,\n+\t\t\t\t\"/var/lib/artalk\":                true,\n+\t\t\t},\n+\t\t\texpectedDir: \"/var/lib/artalk\",\n+\t\t},\n+\t}\n+\n+\tfor _, tt := range tests {\n+\t\tt.Run(tt.name, func(t *testing.T) {\n+\t\t\tutils.CheckDirExist = func(dir string) bool {\n+\t\t\t\treturn tt.mockDirs[dir]\n+\t\t\t}\n+\t\t\txdg.DataHome = cmp.Or(tt.xdgDataHome, orgXDGDataHome)\n+\n+\t\t\tresult, _ := filepath.Abs(RetrieveDataDir())\n+\t\t\texpected, _ := filepath.Abs(tt.expectedDir)\n+\t\t\tassert.Equal(t, expected, result, \"Expected to find the data dir in %s\", tt.expectedDir)\n+\t\t})\n+\t}\n+}"
    },
    {
      "sha": "df2282af6f348aa8edc1c707aaa3c493ac9397ae",
      "filename": "internal/config/const.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/1d5811a59c54dbf624de86c9cb239ef02b82f91a/internal%2Fconfig%2Fconst.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/1d5811a59c54dbf624de86c9cb239ef02b82f91a/internal%2Fconfig%2Fconst.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fconfig%2Fconst.go?ref=1d5811a59c54dbf624de86c9cb239ef02b82f91a",
      "patch": "@@ -1,7 +1,7 @@\n package config\n \n // 默认配置文件名\n-var CONF_DEFAULT_FILENAMES = [...]string{\n+var CONF_DEFAULT_FILENAMES = []string{\n \t\"artalk.yml\",\n \t\"artalk-go.yml\", // for 向下兼容\n \t\"config.yml\","
    },
    {
      "sha": "9b3378ed67ed2ee83995a471a9dce8c946c0d5b7",
      "filename": "internal/utils/fs.go",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/1d5811a59c54dbf624de86c9cb239ef02b82f91a/internal%2Futils%2Ffs.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/1d5811a59c54dbf624de86c9cb239ef02b82f91a/internal%2Futils%2Ffs.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Futils%2Ffs.go?ref=1d5811a59c54dbf624de86c9cb239ef02b82f91a",
      "patch": "@@ -7,7 +7,11 @@ func EnsureDir(dir string) error {\n \treturn os.MkdirAll(dir, 0700)\n }\n \n-func CheckFileExist(path string) bool {\n+var CheckFileExist = func(path string) bool {\n \t_, err := os.Stat(path)\n \treturn err == nil\n }\n+\n+var CheckDirExist = func(path string) bool {\n+\treturn CheckFileExist(path)\n+}"
    },
    {
      "sha": "e2de8e6e29faef7f9d2e24bcc069478bd726a2ee",
      "filename": "internal/utils/fs_test.go",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/1d5811a59c54dbf624de86c9cb239ef02b82f91a/internal%2Futils%2Ffs_test.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/1d5811a59c54dbf624de86c9cb239ef02b82f91a/internal%2Futils%2Ffs_test.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Futils%2Ffs_test.go?ref=1d5811a59c54dbf624de86c9cb239ef02b82f91a",
      "patch": "@@ -40,3 +40,19 @@ func TestCheckFileExist(t *testing.T) {\n \texists = CheckFileExist(nonExistingFile)\n \tassert.False(t, exists, \"Expected file to not exist, but it does\")\n }\n+\n+func TestCheckDirExist(t *testing.T) {\n+\t// Test existing directory\n+\texistingDir := \"test_dir_exist\"\n+\terr := os.Mkdir(existingDir, 0700)\n+\tassert.NoError(t, err, \"Error creating test directory\")\n+\tdefer os.Remove(existingDir)\n+\n+\texists := CheckDirExist(existingDir)\n+\tassert.True(t, exists, \"Expected directory to exist, but it doesn't\")\n+\n+\t// Test non-existing directory\n+\tnonExistingDir := \"non_existing\"\n+\texists = CheckDirExist(nonExistingDir)\n+\tassert.False(t, exists, \"Expected directory to not exist, but it does\")\n+}"
    }
  ]
}
