{
  "sha": "1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
  "node_id": "C_kwDOAKEu-toAKDFiZjJkY2ExYTkyZDVmMTNiNmIwMWYyNDlmODBlNzI3MzA4ZjNlZjQ",
  "commit": {
    "author": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2024-01-18T02:22:18Z"
    },
    "committer": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2024-01-18T02:22:18Z"
    },
    "message": "Merge v0.2024.002 into 'release'.",
    "tree": {
      "sha": "ca6d133e5ca6cd0e691f8cf04cf3e66bb86ae265",
      "url": "https://api.github.com/repos/debiki/talkyard/git/trees/ca6d133e5ca6cd0e691f8cf04cf3e66bb86ae265"
    },
    "url": "https://api.github.com/repos/debiki/talkyard/git/commits/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/debiki/talkyard/commits/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
  "html_url": "https://github.com/debiki/talkyard/commit/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
  "comments_url": "https://api.github.com/repos/debiki/talkyard/commits/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/comments",
  "author": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d2be9c10baf3424ac5046c26c0c59e3b33142afd",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/d2be9c10baf3424ac5046c26c0c59e3b33142afd",
      "html_url": "https://github.com/debiki/talkyard/commit/d2be9c10baf3424ac5046c26c0c59e3b33142afd"
    },
    {
      "sha": "1f702009a8bd386ffc464182000c3c5efe37c297",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/1f702009a8bd386ffc464182000c3c5efe37c297",
      "html_url": "https://github.com/debiki/talkyard/commit/1f702009a8bd386ffc464182000c3c5efe37c297"
    }
  ],
  "stats": {
    "total": 133,
    "additions": 87,
    "deletions": 46
  },
  "files": [
    {
      "sha": "d4ae10dc4d9a16a7b94d8c51cb735299e502c899",
      "filename": "Makefile",
      "status": "modified",
      "additions": 18,
      "deletions": 15,
      "changes": 33,
      "blob_url": "https://github.com/debiki/talkyard/blob/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/Makefile",
      "raw_url": "https://github.com/debiki/talkyard/raw/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/Makefile",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/Makefile?ref=1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
      "patch": "@@ -686,10 +686,10 @@ _print_push_git_tag_command:\n \n \n # [bash2deno]\n-push-tag-to-git:\n+push_tag_to_dev_rel_branch:\n \t@echo\n-\t@echo \"Publishing to GitHub, version tag: $(tag)\"\n-\t@echo \"                   release branch: $(DEV_RELEASE_CHANNEL)...\"\n+\t@echo \"Publishing version tag:  $(tag)\"\n+\t@echo \"     to release branch:  $(DEV_RELEASE_CHANNEL)  ...\"\n \t@echo\n \n \t@$(call die_unless_tag_specified, Push)\n@@ -706,10 +706,19 @@ push-tag-to-git:\n \t  git add version-tags.log  ;\\\n \t  git commit -m \"Release $(tag), channel $(DEV_RELEASE_CHANNEL).\"  ;\\\n \t  git push origin $(DEV_RELEASE_CHANNEL)\n-\n+\t\n \t@# Later, this message instead:\n \t@# git commit -m \"Release tyse-$(tag)-$(DEV_RELEASE_CHANNEL_SUFFIX).\"\n \t\n+\t@echo \"Look, the dev release branch, now afterwards:\"\n+\t@cd relchans/$(DEV_RELEASE_CHANNEL)/  ;\\\n+\t  set -x  ;\\\n+\t  pwd  ;\\\n+\t  git log --oneline -n5  ;\\\n+\t  tail -n5 version-tags.log\n+\n+\n+push_tag_to_dev_repo:\n \t@# Note that this version might not be included in all release channels.\n \t@# Example: If this new version includes some not-well-tested things â€” then,\n \t@# we'd want to push it only to tyse-v0-dev, fix bugs, and later, push a more\n@@ -723,21 +732,15 @@ push-tag-to-git:\n \t@# same version nr and Git revision hash, but different -dev/-regular suffix.\n \t@#\n \t@echo \"\"\n-\t@echo \"Tagging main repo with: tyse-$(tag)-$(DEV_RELEASE_CHANNEL_SUFFIX) ...\"\n-\t@git tag tyse-$(tag)-$(DEV_RELEASE_CHANNEL_SUFFIX)\n-\t@git push origin tyse-$(tag)-$(DEV_RELEASE_CHANNEL_SUFFIX)\n+\t@echo \"Pushing tag: tyse-$(tag)-$(DEV_RELEASE_CHANNEL_SUFFIX)\"\n+\t@echo \"    to repo: $(repo)  ...\"\n+\t@git tag tyse-$(tag)-$(DEV_RELEASE_CHANNEL_SUFFIX) ;\\\n+\t\tgit push $(repo) tyse-$(tag)-$(DEV_RELEASE_CHANNEL_SUFFIX)\n \t\n-\t@echo \"Look, the dev channel, now afterwards:\"\n-\t@cd relchans/$(DEV_RELEASE_CHANNEL)/  ;\\\n-\t  set -x  ;\\\n-\t  pwd  ;\\\n-\t  git log --oneline -n5  ;\\\n-\t  tail -n5 version-tags.log\n-\n \t@echo \"\"\n \t@echo \"Done. Now, push 'release' and bump the version number:\"\n \t@echo \"\"\n-\t@echo \"    git push origin release\"\n+\t@echo \"    git push $(repo) release\"\n \t@echo \"    git checkout -B main\"\n \t@echo \"    s/bump-versions.sh\"\n \t@echo \"    git add version.txt relchans/tyse-v0-dev\""
    },
    {
      "sha": "bb1b277330bc7dc853de43166bcad976990e5f12",
      "filename": "appsv/model/src/main/scala/com/debiki/core/PagePath.scala",
      "status": "modified",
      "additions": 17,
      "deletions": 3,
      "changes": 20,
      "blob_url": "https://github.com/debiki/talkyard/blob/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/appsv%2Fmodel%2Fsrc%2Fmain%2Fscala%2Fcom%2Fdebiki%2Fcore%2FPagePath.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/appsv%2Fmodel%2Fsrc%2Fmain%2Fscala%2Fcom%2Fdebiki%2Fcore%2FPagePath.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/appsv%2Fmodel%2Fsrc%2Fmain%2Fscala%2Fcom%2Fdebiki%2Fcore%2FPagePath.scala?ref=1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
      "patch": "@@ -407,7 +407,14 @@ object PagePath {\n       case _PageGuidRegex(guid) => (guid, \"\")  // can result in an empty guid\n       case _PageSlugRegex(name) => (\"\", name)\n       case _PageIdHyphenSlugRegex(id, slug) =>\n-        return Parsed.Corrected(PagePath(siteId, folder = folder, Some(id), showId = true, slug).value)\n+        val okPath = try PagePath(siteId, folder = folder, Some(id), showId = true, slug).value\n+        catch {\n+          // An invalid slug can throw this. See: _BadPunctSlug  Bit dupl code, _see_here_too.\n+          case ex: PagePathException =>\n+            return Parsed.Bad(ex.getMessage)\n+        }\n+        return Parsed.Corrected(okPath)\n+\n       case idSlugSlash if idSlugSlash.endsWith(\"/\") =>\n         return Parsed.Corrected(s\"$folder${idSlugSlash dropRight 1}\")\n       case _BadIdPerhapsOkSlug(id) => return Parsed.Bad(\"Bad page id: \"+ id)\n@@ -433,8 +440,15 @@ object PagePath {\n     if (folder.intersect(_BadPunctFolder).nonEmpty)\n       return Parsed.Bad(\"Bad characters in page folder\")\n \n-    val pagePath = PagePath(siteId, folder = folder,\n-      pageId = pageId, showId = showId, pageSlug = pageSlug)\n+    val pagePath =\n+          try PagePath(siteId, folder = folder,\n+                  pageId = pageId, showId = showId, pageSlug = pageSlug)\n+          catch {\n+            // Bit dupl code, _see_here_too.\n+            case ex: PagePathException =>\n+              return Parsed.Bad(ex.getMessage)\n+          }\n+\n     Parsed.Good(pagePath)\n   }\n "
    },
    {
      "sha": "5726783d7f9dec5a7e5a671d1d72ec212f806fc4",
      "filename": "appsv/server/controllers/ImpersonateController.scala",
      "status": "modified",
      "additions": 22,
      "deletions": 15,
      "changes": 37,
      "blob_url": "https://github.com/debiki/talkyard/blob/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/appsv%2Fserver%2Fcontrollers%2FImpersonateController.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/appsv%2Fserver%2Fcontrollers%2FImpersonateController.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/appsv%2Fserver%2Fcontrollers%2FImpersonateController.scala?ref=1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
      "patch": "@@ -168,8 +168,8 @@ class ImpersonateController @Inject()(cc: ControllerComponents, edContext: TyCon\n       currentUserId: UserId) = {\n     val randomString = nextRandomString()\n     val unixSeconds = globals.now().numSeconds\n-    val cookieValue = concatAndHash(currentUserId, viewAsGroupOnly = viewAsGroupOnly,\n-      unixSeconds, randomString)\n+    val cookieValue = concatAndHash(siteId = siteId, userId = currentUserId,\n+          viewAsGroupOnly = viewAsGroupOnly, unixSecs = unixSeconds, randomString)\n     val impersonatingCookie = SecureCookie(name = ImpersonationCookieName,\n       value = cookieValue, maxAgeSeconds = Some(MaxBecomeOldUserSeconds))\n     impersonatingCookie\n@@ -186,7 +186,7 @@ class ImpersonateController @Inject()(cc: ControllerComponents, edContext: TyCon\n               wasImpersonating = true)\n       case Some(cookieValue) =>\n         val response =\n-          checkHashElseGetAgeAndUserId(cookieValue) match {\n+          checkHashElseGetAgeAndUserId(cookieValue, mustBeSiteId = request.siteId) match {\n             case Bad(r) => r\n             case Good((secondsAgo, oldUserId)) =>\n                 // Ignore old impersonation cookies, in case they're leaked somehow.\n@@ -207,35 +207,42 @@ class ImpersonateController @Inject()(cc: ControllerComponents, edContext: TyCon\n   }\n \n \n-  private def concatAndHash(userId: UserId, viewAsGroupOnly: Boolean, unixSeconds: Long,\n-        randomString: String) = {\n+  private def concatAndHash(siteId: SiteId, userId: UserId, viewAsGroupOnly: Bo, unixSecs: i64,\n+        randomString: St) = {\n     val CFS = FieldSeparator\n     val viewOnlyString = viewAsGroupOnly ? ViewAsGroupOnly | ImpersonateRealUser\n-    val toHash = s\"$userId$CFS$viewOnlyString$CFS$unixSeconds$CFS$randomString\"\n+    val toHash = s\"$siteId$CFS$userId$CFS$viewOnlyString$CFS$unixSecs$CFS$randomString\"\n     val theHash = hashSha1Base64UrlSafe(toHash + CFS + globals.applicationSecret)\n     s\"$toHash$CFS$theHash\"\n   }\n \n \n-  private def checkHashElseGetAgeAndUserId(value: String): (Long, UserId) Or mvc.Result = {\n+  private def checkHashElseGetAgeAndUserId(value: St, mustBeSiteId: SiteId)\n+          : (i64, UserId) Or mvc.Result = {\n     val parts = value.split(FieldSeparator)\n-    if (parts.length != 5)\n+    if (parts.length != 6)\n       return Bad(ForbiddenResult(\n-        \"EsE4YK82\", s\"Bad $ImpersonationCookieName cookie: ${parts.length} parts, not 4\"))\n+        \"EsE4YK82\", s\"Bad $ImpersonationCookieName cookie: ${parts.length} parts, not 5\"))\n \n-    val oldUserId = parts(0).toIntOrThrow(\"EsE8IKPW2\", \"Old user id is not a number\")\n-    val viewAsGroupOnly = parts(1) match {\n+    val siteId = parts(0).toIntOrThrow(\"TyE8IKPG1\", \"Site id is not a number\")\n+    if (siteId != mustBeSiteId) {\n+      AUDIT_LOG // This'd be suspicious.\n+      return Bad(ForbiddenResult(\"TyEIMPSITID\", s\"Bad cookie value\"))\n+    }\n+    val oldUserId = parts(1).toIntOrThrow(\"EsE8IKPW2\", \"Old user id is not a number\")\n+    val viewAsGroupOnly = parts(2) match {\n       case ViewAsGroupOnly => true\n       case ImpersonateRealUser => false\n       case bad => return Bad(ForbiddenResult(\"EdE2WK6PX\", s\"Bad view-only field\"))\n     }\n-    val unixSeconds = parts(2).toLongOrThrow(\"EsE4YK0W2\", \"Unix seconds is not a number\")\n-    val randomString = parts(3)\n-    val correctCookieValue = concatAndHash(oldUserId, viewAsGroupOnly, unixSeconds, randomString)\n+    val unixSecs = parts(3).toLongOrThrow(\"EsE4YK0W2\", \"Unix seconds is not a number\")\n+    val randomString = parts(4)\n+    val correctCookieValue = concatAndHash(\n+          siteId = mustBeSiteId, oldUserId, viewAsGroupOnly, unixSecs, randomString)\n     if (value != correctCookieValue)\n       return Bad(ForbiddenResult(\"TyE6YKP2JW3\", s\"Bad hash\"))\n \n-    val ageSeconds = globals.now().numSeconds - unixSeconds\n+    val ageSeconds = globals.now().numSeconds - unixSecs\n     Good((ageSeconds, oldUserId))\n   }\n "
    },
    {
      "sha": "cb1026e274a9b0e527e673c88ce5bd566d8b9091",
      "filename": "client/app-staff/create-site/create-site.staff.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/debiki/talkyard/blob/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/client%2Fapp-staff%2Fcreate-site%2Fcreate-site.staff.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/client%2Fapp-staff%2Fcreate-site%2Fcreate-site.staff.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client%2Fapp-staff%2Fcreate-site%2Fcreate-site.staff.ts?ref=1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
      "patch": "@@ -176,8 +176,8 @@ const CreateWebsiteComponent = createFactory<any, any>({\n                   \"Shall people on the Internet see the discussions in the forum? \",\n                   r.small({}, \"(For example, an online community, or customer support.)\")),\n               r.p({},\n-                  \"Or shall everything be private, not visible unless logged in? \" +\n-                  r.small({}, \"(For example, only for your coworkers.)\")),\n+                  \"Or shall everything be private, not visible unless logged in? \",\n+                  r.small({}, \"(For example, a company internal forum.)\")),\n               Input({ type: 'radio', name: 'pubPriv', id: 'e_MkPub', tabIndex: 30,\n                   label: rFr({}, \"Public â€‰ (except for private categories)\"),\n                   checked: state.makePublic,"
    },
    {
      "sha": "97da316d80c0f1d5bedfe7e3d9ca2a55f679a2d2",
      "filename": "images/web/Dockerfile.or",
      "status": "modified",
      "additions": 15,
      "deletions": 5,
      "changes": 20,
      "blob_url": "https://github.com/debiki/talkyard/blob/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/images%2Fweb%2FDockerfile.or",
      "raw_url": "https://github.com/debiki/talkyard/raw/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/images%2Fweb%2FDockerfile.or",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/images%2Fweb%2FDockerfile.or?ref=1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
      "patch": "@@ -7,11 +7,7 @@\n \n # COULD_OPTIMIZE smaller image: Copy just what's needed from openresty_build\n # (and would need to 'apk add' some things too, to the final image).\n-FROM alpine:3.13 AS openresty_build\n-# No:\n-# FROM alpine:3.14 AS openresty_build\n-# results in an error \"make: uname: Operation not permitted\"\n-# when building Lua and Make does:   HOST_SYS:= $(shell uname -s)\n+FROM alpine:3.19 AS openresty_build\n \n \n # '--virtual .build_deps' lets one uninstall all these build dependencies,\n@@ -116,6 +112,9 @@ ARG CONFIG=\"\\\n   # Or maybe works now with OpenResty?\n   --with-http_v2_module \\\n   \\\n+  # Let's wait? DO_AFTER 2024-07-01:\n+  # --with-http_v3_module \\\n+  \\\n   # --with-ipv6 \\\n   # --with-mail \\\n   # --with-mail_ssl_module \\\n@@ -497,3 +496,14 @@ EXPOSE 80 443\n \n \n CMD /etc/nginx/run-envsubst-gen-keys.sh && nginx\n+\n+\n+# Tell Docker to send SIGQUIT instead of default SIGTERM, when stopping this container\n+# gracefully â€” then Nginx will drain requests, instead of terminating all immediately.\n+# See https://github.com/openresty/docker-openresty/blob/master/README.md#tips--pitfalls\n+#\n+# But let's wait â€” what if there's some long running request that makes Nginx then take\n+# long to restart?  It can be enough to upgrade to OpenResty 1.25 for now.\n+# DO_AFTER 2024-07-01 try enabling this.\n+# STOPSIGNAL SIGQUIT\n+"
    },
    {
      "sha": "d4d4186ad3c4545a82c5da4372c5c8037ef96b31",
      "filename": "images/web/openresty",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/images%2Fweb%2Fopenresty?ref=1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
      "patch": "@@ -1 +1 @@\n-Subproject commit 84fd554259994b6ffa57ad10f37fb866c8781d60\n+Subproject commit d4d4186ad3c4545a82c5da4372c5c8037ef96b31"
    },
    {
      "sha": "a828993cc7bcaa6eda16cfeaa0da3dbd31642e26",
      "filename": "images/web/openresty-pkgs",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/images%2Fweb%2Fopenresty-pkgs?ref=1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
      "patch": "@@ -1 +1 @@\n-Subproject commit e0074194a07cf125f2243f64eefe7c3ca5eb24ad\n+Subproject commit a828993cc7bcaa6eda16cfeaa0da3dbd31642e26"
    },
    {
      "sha": "f0dc970015f1719c0f6cbeee8df02af2b450287a",
      "filename": "relchans/tyse-v0-dev",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/relchans%2Ftyse-v0-dev?ref=1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
      "patch": "@@ -1 +1 @@\n-Subproject commit ef400e1ba2d24e73ddd9afedd261a73b93c893e3\n+Subproject commit f0dc970015f1719c0f6cbeee8df02af2b450287a"
    },
    {
      "sha": "39303ca94de8c2001d2598fc7eca020b1b4ed7ca",
      "filename": "s/build-prod-images.sh",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/debiki/talkyard/blob/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/s%2Fbuild-prod-images.sh",
      "raw_url": "https://github.com/debiki/talkyard/raw/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/s%2Fbuild-prod-images.sh",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/s%2Fbuild-prod-images.sh?ref=1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
      "patch": "@@ -225,7 +225,13 @@ echo 'Buid completed.'\n echo \"You can now tag and publish the images to the '$REPO' Docker repository:\"\n echo \"\"\n echo \"    make  tag-and-push-latest-images  tag=$version_tag\"\n-echo \"    make  push-tag-to-git  tag=$version_tag\"\n+echo \"    make  push_tag_to_dev_rel_branch  tag=$version_tag\"\n+echo\n+echo \"And push a version tag to the development repo:\"\n+echo\n+echo \"    make  push_tag_to_dev_repo  repo=$REPO  tag=$version_tag\"\n+echo\n+echo \"Lastly:\"\n echo \"    s/bump-versions.sh\"\n echo \"\"\n "
    },
    {
      "sha": "1e5309b1609f90746338c0b07fd0a0dbb0ced8cf",
      "filename": "tests/e2e-wdio7/specs/create-private-site-gmail-invite-only.2br.f.e2e.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/tests%2Fe2e-wdio7%2Fspecs%2Fcreate-private-site-gmail-invite-only.2br.f.e2e.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/tests%2Fe2e-wdio7%2Fspecs%2Fcreate-private-site-gmail-invite-only.2br.f.e2e.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests%2Fe2e-wdio7%2Fspecs%2Fcreate-private-site-gmail-invite-only.2br.f.e2e.ts?ref=1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
      "patch": "@@ -5,6 +5,7 @@ import assert from '../utils/ty-assert';\n import * as utils from '../utils/utils';\n import { TyE2eTestBrowser } from '../utils/ty-e2e-test-browser';\n import { NewSiteOwnerType } from '../test-constants';\n+import settings from '../utils/settings';\n \n let owen_brA: TyE2eTestBrowser;\n let jane_brB: TyE2eTestBrowser;"
    },
    {
      "sha": "d4ce8b20c276767cbb3f5494aaf22ef46d7e0e55",
      "filename": "tests/e2e/specs/embedded-comments-uploads-origin.test.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/tests%2Fe2e%2Fspecs%2Fembedded-comments-uploads-origin.test.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/tests%2Fe2e%2Fspecs%2Fembedded-comments-uploads-origin.test.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests%2Fe2e%2Fspecs%2Fembedded-comments-uploads-origin.test.ts?ref=1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
      "patch": "@@ -30,7 +30,7 @@ const uplFileLinkTwo = (origin: string, sitePubId: string) =>\n   `${origin}/-/u/${sitePubId ? sitePubId + '/' : ''}dummyfilepathtwo.pdf`;\n \n const extImgHttp  = 'http://elsewhere.example.com/ext-img.jpg'\n-const extImgHttps  = extImgHttp.replace('http:', 'https');\n+const extImgHttps  = extImgHttp.replace('http:', 'https:');\n const extImgHttpsMaybe = settings.secure ? extImgHttps : extImgHttp; // https iff server https\n const extFileLink = 'https://elsewhere.example.com/document.pdf';\n const extFile2Link = 'https://galaxytwo.example.com/doctwo.odf';"
    },
    {
      "sha": "3c0760e1b8b50aa5664271b253e812a44ab68b87",
      "filename": "version.txt",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/version.txt",
      "raw_url": "https://github.com/debiki/talkyard/raw/1bf2dca1a92d5f13b6b01f249f80e727308f3ef4/version.txt",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/version.txt?ref=1bf2dca1a92d5f13b6b01f249f80e727308f3ef4",
      "patch": "@@ -1 +1 @@\n-v0.2024.001\n+v0.2024.002"
    }
  ]
}
