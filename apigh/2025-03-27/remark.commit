{
  "sha": "61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
  "node_id": "C_kwDOBtgov9oAKDYxZGJmNmIxZjI4YWZmMmVlZjM5OWVlMGE5MzVhNmY4YTJjZTlkYjY",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2025-03-25T02:51:56Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2025-03-25T02:51:56Z"
    },
    "message": "Merge pull request #1915 from umputun/dependabot/go_modules/backend/github.com/redis/go-redis/v9-9.7.3\n\nBump github.com/redis/go-redis/v9 from 9.7.0 to 9.7.3 in /backend",
    "tree": {
      "sha": "87d725e950c4b5070be83b1cc0cd0e8ee1fceb4f",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/87d725e950c4b5070be83b1cc0cd0e8ee1fceb4f"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJn4hpMCRC1aQ7uu5UhlAAAyBIQACKy9Z2c4iqdEFqJA47/OZnj\n3EYYY8SVuNGTjPphQMjlT74lw9OyTJkuUCFn6hdv+9H4+WpQ5qu6zy7wOaq5uxpw\nenQmnZlN5fpjRGSG6sI0k+J3OVHiRIgd1CFaFAUGrk+5Q4TxaS3DLUzinWKevGDQ\nbHrlhJEdK5KF4ufXmjyRJu4xyUR6zeWjJkk31OG7GZOUvw6MS6KbjNhMPIVfVe6S\nLYpwnQlSH4QIdGIbFnXbBPX4//bQf2DOyaFzBgN2bZ3Y9bkwp3/Bm5cgAZomSwe1\n6PivRGb+i9YiqGZsspwWE20fnF0gGg9CIWyL9diyZEz2gTB+63phHqJ0Yuw4cJUj\nthpzyVThx2SnyMkL2zYhjljfQUAMcGjM9ZE+//vTQhiEPWsG+QcuSMbPYtEnW9BS\nPLpIPIIypUONGw4lqu3vmkvdi1iAz2Tat0H/FwCb4G9jNHUUolGrQ341/NR5js60\nb2aXCNcWgG0S/N8WpOoc6oNurShJ8NwK7lzSPGZTTA6ENga2nuyqdxySK2eZnyQd\nNZ2xWkHnc5YBjARZf1FKMfOJX1rrLKLrw3AXI1MdZLbF3rqTsaQ27XmpMdokEJXh\npJcZ4d7nbi4TO/bQsN8zhu8qF+Bx9qQ01wHDOLgi+KWaCLcf6c+kmrZxVBF5fLgy\n4zahNSAYP4/EKuch50r7\n=PiVr\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 87d725e950c4b5070be83b1cc0cd0e8ee1fceb4f\nparent 4a3c73db31740fded5fc025abf84ffd31b34a6da\nparent bbcba5487eaaeb66fc4e035b7ec4db944c926294\nauthor Umputun <umputun@gmail.com> 1742871116 -0500\ncommitter GitHub <noreply@github.com> 1742871116 -0500\n\nMerge pull request #1915 from umputun/dependabot/go_modules/backend/github.com/redis/go-redis/v9-9.7.3\n\nBump github.com/redis/go-redis/v9 from 9.7.0 to 9.7.3 in /backend",
      "verified_at": "2025-03-25T02:52:00Z"
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
  "html_url": "https://github.com/umputun/remark42/commit/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4a3c73db31740fded5fc025abf84ffd31b34a6da",
      "url": "https://api.github.com/repos/umputun/remark42/commits/4a3c73db31740fded5fc025abf84ffd31b34a6da",
      "html_url": "https://github.com/umputun/remark42/commit/4a3c73db31740fded5fc025abf84ffd31b34a6da"
    },
    {
      "sha": "bbcba5487eaaeb66fc4e035b7ec4db944c926294",
      "url": "https://api.github.com/repos/umputun/remark42/commits/bbcba5487eaaeb66fc4e035b7ec4db944c926294",
      "html_url": "https://github.com/umputun/remark42/commit/bbcba5487eaaeb66fc4e035b7ec4db944c926294"
    }
  ],
  "stats": {
    "total": 284,
    "additions": 205,
    "deletions": 79
  },
  "files": [
    {
      "sha": "1338ac810f9981f76b33114c0bed0e9d99541124",
      "filename": "backend/go.mod",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.mod?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -60,7 +60,7 @@ require (\n \tgithub.com/klauspost/compress v1.17.11 // indirect\n \tgithub.com/montanaflynn/stats v0.7.1 // indirect\n \tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n-\tgithub.com/redis/go-redis/v9 v9.7.0 // indirect\n+\tgithub.com/redis/go-redis/v9 v9.7.3 // indirect\n \tgithub.com/rrivera/identicon v0.0.0-20240116195454-d5ba35832c0d // indirect\n \tgithub.com/slack-go/slack v0.15.0 // indirect\n \tgithub.com/xdg-go/pbkdf2 v1.0.0 // indirect"
    },
    {
      "sha": "33439165599b54c87b9461f034130dc54243b55e",
      "filename": "backend/go.sum",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.sum?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -162,8 +162,8 @@ github.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7J\n github.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n-github.com/redis/go-redis/v9 v9.7.0 h1:HhLSs+B6O021gwzl+locl0zEDnyNkxMtf/Z3NNBMa9E=\n-github.com/redis/go-redis/v9 v9.7.0/go.mod h1:f6zhXITC7JUJIlPEiBOTXxJgPLdZcA93GewI7inzyWw=\n+github.com/redis/go-redis/v9 v9.7.3 h1:YpPyAayJV+XErNsatSElgRZZVCwXX9QzkKYNvO7x0wM=\n+github.com/redis/go-redis/v9 v9.7.3/go.mod h1:bGUrSggJ9X9GUmZpZNEOQKaANxSGgOEBRltRTZHSvrA=\n github.com/rogpeppe/go-internal v1.9.0 h1:73kH8U+JUqXU8lRuOHeVHaa/SZPifC7BkcraZVejAe8=\n github.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\n github.com/rrivera/identicon v0.0.0-20240116195454-d5ba35832c0d h1:l3+2LWCbVxn5itfvXAfH9n4YL9jh8l1g5zcncbIc1cs="
    },
    {
      "sha": "285aca6b3a51f94459d2a5896688abdd227e3307",
      "filename": "backend/vendor/github.com/redis/go-redis/v9/.golangci.yml",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2F.golangci.yml?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -1,4 +1,3 @@\n run:\n-  concurrency: 8\n-  deadline: 5m\n+  timeout: 5m\n   tests: false"
    },
    {
      "sha": "9395c652f1198dbe2739907263ca78ca37dc17d7",
      "filename": "backend/vendor/github.com/redis/go-redis/v9/README.md",
      "status": "modified",
      "additions": 20,
      "deletions": 3,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2FREADME.md?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -170,22 +170,39 @@ By default, go-redis automatically sends the client library name and version dur\n \n #### Disabling Identity Verification\n \n-When connection identity verification is not required or needs to be explicitly disabled, a `DisableIndentity` configuration option exists. In V10 of this library, `DisableIndentity` will become `DisableIdentity` in order to fix the associated typo.\n+When connection identity verification is not required or needs to be explicitly disabled, a `DisableIdentity` configuration option exists.\n+Initially there was a typo and the option was named `DisableIndentity` instead of `DisableIdentity`. The misspelled option is marked as Deprecated and will be removed in V10 of this library.\n+Although both options will work at the moment, the correct option is `DisableIdentity`. The deprecated option will be removed in V10 of this library, so please use the correct option name to avoid any issues.\n \n-To disable verification, set the `DisableIndentity` option to `true` in the Redis client options:\n+To disable verification, set the `DisableIdentity` option to `true` in the Redis client options:\n \n ```go\n rdb := redis.NewClient(&redis.Options{\n     Addr:            \"localhost:6379\",\n     Password:        \"\",\n     DB:              0,\n-    DisableIndentity: true, // Disable set-info on connect\n+    DisableIdentity: true, // Disable set-info on connect\n })\n ```\n \n #### Unstable RESP3 Structures for RediSearch Commands\n When integrating Redis with application functionalities using RESP3, it's important to note that some response structures aren't final yet. This is especially true for more complex structures like search and query results. We recommend using RESP2 when using the search and query capabilities, but we plan to stabilize the RESP3-based API-s in the coming versions. You can find more guidance in the upcoming release notes.\n \n+To enable unstable RESP3, set the option in your client configuration:\n+\n+```go\n+redis.NewClient(&redis.Options{\n+\t\t\tUnstableResp3: true,\n+\t\t})\n+```\n+**Note:** When UnstableResp3 mode is enabled, it's necessary to use RawResult() and RawVal() to retrieve a raw data.\n+          Since, raw response is the only option for unstable search commands Val() and Result() calls wouldn't have any affect on them:\n+\n+```go\n+res1, err := client.FTSearchWithArgs(ctx, \"txt\", \"foo bar\", &redis.FTSearchOptions{}).RawResult()\n+val1 := client.FTSearchWithArgs(ctx, \"txt\", \"foo bar\", &redis.FTSearchOptions{}).RawVal()\n+```\n+\n ## Contributing\n \n Please see [out contributing guidelines](CONTRIBUTING.md) to help us improve this library!"
    },
    {
      "sha": "f3d0e49b799e4ca50b29156c99d583884c86fab0",
      "filename": "backend/vendor/github.com/redis/go-redis/v9/command.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fcommand.go",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fcommand.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fcommand.go?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -167,6 +167,8 @@ func (cmd *baseCmd) stringArg(pos int) string {\n \tswitch v := arg.(type) {\n \tcase string:\n \t\treturn v\n+\tcase []byte:\n+\t\treturn string(v)\n \tdefault:\n \t\t// TODO: consider using appendArg\n \t\treturn fmt.Sprint(v)"
    },
    {
      "sha": "6596c6f5f7502240e991d9067fcd75e2367242be",
      "filename": "backend/vendor/github.com/redis/go-redis/v9/hash_commands.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fhash_commands.go",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fhash_commands.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fhash_commands.go?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -225,7 +225,7 @@ func (c cmdable) HExpire(ctx context.Context, key string, expiration time.Durati\n \treturn cmd\n }\n \n-// HExpire - Sets the expiration time for specified fields in a hash in seconds.\n+// HExpireWithArgs - Sets the expiration time for specified fields in a hash in seconds.\n // It requires a key, an expiration duration, a struct with boolean flags for conditional expiration settings (NX, XX, GT, LT), and a list of fields.\n // The command constructs an argument list starting with \"HEXPIRE\", followed by the key, duration, any conditional flags, and the specified fields.\n // For more information - https://redis.io/commands/hexpire/"
    },
    {
      "sha": "53991dc9d954db549c1c7620cb13e99569a61712",
      "filename": "backend/vendor/github.com/redis/go-redis/v9/options.go",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Foptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Foptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Foptions.go?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -148,13 +148,22 @@ type Options struct {\n \t// Enables read only queries on slave/follower nodes.\n \treadOnly bool\n \n-\t// Disable set-lib on connect. Default is false.\n+\t// DisableIndentity - Disable set-lib on connect.\n+\t//\n+\t// default: false\n+\t//\n+\t// Deprecated: Use DisableIdentity instead.\n \tDisableIndentity bool\n \n+\t// DisableIdentity is used to disable CLIENT SETINFO command on connect.\n+\t//\n+\t// default: false\n+\tDisableIdentity bool\n+\n \t// Add suffix to client name. Default is empty.\n \tIdentitySuffix string\n \n-\t// Enable Unstable mode for Redis Search module with RESP3.\n+\t// UnstableResp3 enables Unstable mode for Redis Search module with RESP3.\n \tUnstableResp3 bool\n }\n "
    },
    {
      "sha": "f5a576842125ca2aefc391459ed093747df3cf36",
      "filename": "backend/vendor/github.com/redis/go-redis/v9/osscluster.go",
      "status": "modified",
      "additions": 24,
      "deletions": 6,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fosscluster.go",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fosscluster.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fosscluster.go?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -86,10 +86,24 @@ type ClusterOptions struct {\n \tConnMaxIdleTime time.Duration\n \tConnMaxLifetime time.Duration\n \n-\tTLSConfig        *tls.Config\n-\tDisableIndentity bool // Disable set-lib on connect. Default is false.\n+\tTLSConfig *tls.Config\n+\n+\t// DisableIndentity - Disable set-lib on connect.\n+\t//\n+\t// default: false\n+\t//\n+\t// Deprecated: Use DisableIdentity instead.\n+\tDisableIndentity bool\n+\n+\t// DisableIdentity is used to disable CLIENT SETINFO command on connect.\n+\t//\n+\t// default: false\n+\tDisableIdentity bool\n \n \tIdentitySuffix string // Add suffix to client name. Default is empty.\n+\n+\t// UnstableResp3 enables Unstable mode for Redis Search module with RESP3.\n+\tUnstableResp3 bool\n }\n \n func (opt *ClusterOptions) init() {\n@@ -296,15 +310,17 @@ func (opt *ClusterOptions) clientOptions() *Options {\n \t\tMaxActiveConns:   opt.MaxActiveConns,\n \t\tConnMaxIdleTime:  opt.ConnMaxIdleTime,\n \t\tConnMaxLifetime:  opt.ConnMaxLifetime,\n-\t\tDisableIndentity: opt.DisableIndentity,\n+\t\tDisableIdentity:  opt.DisableIdentity,\n+\t\tDisableIndentity: opt.DisableIdentity,\n \t\tIdentitySuffix:   opt.IdentitySuffix,\n \t\tTLSConfig:        opt.TLSConfig,\n \t\t// If ClusterSlots is populated, then we probably have an artificial\n \t\t// cluster whose nodes are not in clustering mode (otherwise there isn't\n \t\t// much use for ClusterSlots config).  This means we cannot execute the\n \t\t// READONLY command against that node -- setting readOnly to false in such\n \t\t// situations in the options below will prevent that from happening.\n-\t\treadOnly: opt.ReadOnly && opt.ClusterSlots == nil,\n+\t\treadOnly:      opt.ReadOnly && opt.ClusterSlots == nil,\n+\t\tUnstableResp3: opt.UnstableResp3,\n \t}\n }\n \n@@ -465,9 +481,11 @@ func (c *clusterNodes) Addrs() ([]string, error) {\n \tclosed := c.closed //nolint:ifshort\n \tif !closed {\n \t\tif len(c.activeAddrs) > 0 {\n-\t\t\taddrs = c.activeAddrs\n+\t\t\taddrs = make([]string, len(c.activeAddrs))\n+\t\t\tcopy(addrs, c.activeAddrs)\n \t\t} else {\n-\t\t\taddrs = c.addrs\n+\t\t\taddrs = make([]string, len(c.addrs))\n+\t\t\tcopy(addrs, c.addrs)\n \t\t}\n \t}\n \tc.mu.RUnlock()"
    },
    {
      "sha": "7304305154f12b677cf95dd7b9c9af02fac4f20b",
      "filename": "backend/vendor/github.com/redis/go-redis/v9/redis.go",
      "status": "modified",
      "additions": 17,
      "deletions": 8,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fredis.go",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fredis.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fredis.go?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -41,15 +41,15 @@ type (\n )\n \n type hooksMixin struct {\n-\thooksMu *sync.Mutex\n+\thooksMu *sync.RWMutex\n \n \tslice   []Hook\n \tinitial hooks\n \tcurrent hooks\n }\n \n func (hs *hooksMixin) initHooks(hooks hooks) {\n-\ths.hooksMu = new(sync.Mutex)\n+\ths.hooksMu = new(sync.RWMutex)\n \ths.initial = hooks\n \ths.chain()\n }\n@@ -151,7 +151,7 @@ func (hs *hooksMixin) clone() hooksMixin {\n \tclone := *hs\n \tl := len(clone.slice)\n \tclone.slice = clone.slice[:l:l]\n-\tclone.hooksMu = new(sync.Mutex)\n+\tclone.hooksMu = new(sync.RWMutex)\n \treturn clone\n }\n \n@@ -176,9 +176,14 @@ func (hs *hooksMixin) withProcessPipelineHook(\n }\n \n func (hs *hooksMixin) dialHook(ctx context.Context, network, addr string) (net.Conn, error) {\n-\ths.hooksMu.Lock()\n-\tdefer hs.hooksMu.Unlock()\n-\treturn hs.current.dial(ctx, network, addr)\n+\t// Access to hs.current is guarded by a read-only lock since it may be mutated by AddHook(...)\n+\t// while this dialer is concurrently accessed by the background connection pool population\n+\t// routine when MinIdleConns > 0.\n+\ths.hooksMu.RLock()\n+\tcurrent := hs.current\n+\ths.hooksMu.RUnlock()\n+\n+\treturn current.dial(ctx, network, addr)\n }\n \n func (hs *hooksMixin) processHook(ctx context.Context, cmd Cmder) error {\n@@ -345,7 +350,7 @@ func (c *baseClient) initConn(ctx context.Context, cn *pool.Conn) error {\n \t\treturn err\n \t}\n \n-\tif !c.opt.DisableIndentity {\n+\tif !c.opt.DisableIdentity && !c.opt.DisableIndentity {\n \t\tlibName := \"\"\n \t\tlibVer := Version()\n \t\tif c.opt.IdentitySuffix != \"\" {\n@@ -354,7 +359,11 @@ func (c *baseClient) initConn(ctx context.Context, cn *pool.Conn) error {\n \t\tp := conn.Pipeline()\n \t\tp.ClientSetInfo(ctx, WithLibraryName(libName))\n \t\tp.ClientSetInfo(ctx, WithLibraryVersion(libVer))\n-\t\t_, _ = p.Exec(ctx)\n+\t\t// Handle network errors (e.g. timeouts) in CLIENT SETINFO to avoid\n+\t\t// out of order responses later on.\n+\t\tif _, err = p.Exec(ctx); err != nil && !isRedisError(err) {\n+\t\t\treturn err\n+\t\t}\n \t}\n \n \tif c.opt.OnConnect != nil {"
    },
    {
      "sha": "990a4c88724fab1de24500ad8f60a6a5aa344e80",
      "filename": "backend/vendor/github.com/redis/go-redis/v9/ring.go",
      "status": "modified",
      "additions": 16,
      "deletions": 4,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fring.go",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fring.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fring.go?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -98,9 +98,19 @@ type RingOptions struct {\n \tTLSConfig *tls.Config\n \tLimiter   Limiter\n \n+\t// DisableIndentity - Disable set-lib on connect.\n+\t//\n+\t// default: false\n+\t//\n+\t// Deprecated: Use DisableIdentity instead.\n \tDisableIndentity bool\n-\tIdentitySuffix   string\n-\tUnstableResp3    bool\n+\n+\t// DisableIdentity is used to disable CLIENT SETINFO command on connect.\n+\t//\n+\t// default: false\n+\tDisableIdentity bool\n+\tIdentitySuffix  string\n+\tUnstableResp3   bool\n }\n \n func (opt *RingOptions) init() {\n@@ -167,9 +177,11 @@ func (opt *RingOptions) clientOptions() *Options {\n \t\tTLSConfig: opt.TLSConfig,\n \t\tLimiter:   opt.Limiter,\n \n+\t\tDisableIdentity:  opt.DisableIdentity,\n \t\tDisableIndentity: opt.DisableIndentity,\n-\t\tIdentitySuffix:   opt.IdentitySuffix,\n-\t\tUnstableResp3:    opt.UnstableResp3,\n+\n+\t\tIdentitySuffix: opt.IdentitySuffix,\n+\t\tUnstableResp3:  opt.UnstableResp3,\n \t}\n }\n "
    },
    {
      "sha": "9359a723e9695744c6a03fbd53d52f15f28ad291",
      "filename": "backend/vendor/github.com/redis/go-redis/v9/search_commands.go",
      "status": "modified",
      "additions": 64,
      "deletions": 36,
      "changes": 100,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fsearch_commands.go",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fsearch_commands.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fsearch_commands.go?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -247,6 +247,8 @@ type FTAggregateOptions struct {\n \tGroupBy           []FTAggregateGroupBy\n \tSortBy            []FTAggregateSortBy\n \tSortByMax         int\n+\tScorer            string\n+\tAddScores         bool\n \tApply             []FTAggregateApply\n \tLimitOffset       int\n \tLimit             int\n@@ -483,6 +485,15 @@ func FTAggregateQuery(query string, options *FTAggregateOptions) AggregateQuery\n \t\tif options.Verbatim {\n \t\t\tqueryArgs = append(queryArgs, \"VERBATIM\")\n \t\t}\n+\n+\t\tif options.Scorer != \"\" {\n+\t\t\tqueryArgs = append(queryArgs, \"SCORER\", options.Scorer)\n+\t\t}\n+\n+\t\tif options.AddScores {\n+\t\t\tqueryArgs = append(queryArgs, \"ADDSCORES\")\n+\t\t}\n+\n \t\tif options.LoadAll && options.Load != nil {\n \t\t\tpanic(\"FT.AGGREGATE: LOADALL and LOAD are mutually exclusive\")\n \t\t}\n@@ -491,16 +502,29 @@ func FTAggregateQuery(query string, options *FTAggregateOptions) AggregateQuery\n \t\t}\n \t\tif options.Load != nil {\n \t\t\tqueryArgs = append(queryArgs, \"LOAD\", len(options.Load))\n+\t\t\tindex, count := len(queryArgs)-1, 0\n \t\t\tfor _, load := range options.Load {\n \t\t\t\tqueryArgs = append(queryArgs, load.Field)\n+\t\t\t\tcount++\n \t\t\t\tif load.As != \"\" {\n \t\t\t\t\tqueryArgs = append(queryArgs, \"AS\", load.As)\n+\t\t\t\t\tcount += 2\n \t\t\t\t}\n \t\t\t}\n+\t\t\tqueryArgs[index] = count\n \t\t}\n+\n \t\tif options.Timeout > 0 {\n \t\t\tqueryArgs = append(queryArgs, \"TIMEOUT\", options.Timeout)\n \t\t}\n+\n+\t\tfor _, apply := range options.Apply {\n+\t\t\tqueryArgs = append(queryArgs, \"APPLY\", apply.Field)\n+\t\t\tif apply.As != \"\" {\n+\t\t\t\tqueryArgs = append(queryArgs, \"AS\", apply.As)\n+\t\t\t}\n+\t\t}\n+\n \t\tif options.GroupBy != nil {\n \t\t\tfor _, groupBy := range options.GroupBy {\n \t\t\t\tqueryArgs = append(queryArgs, \"GROUPBY\", len(groupBy.Fields))\n@@ -542,17 +566,8 @@ func FTAggregateQuery(query string, options *FTAggregateOptions) AggregateQuery\n \t\tif options.SortByMax > 0 {\n \t\t\tqueryArgs = append(queryArgs, \"MAX\", options.SortByMax)\n \t\t}\n-\t\tfor _, apply := range options.Apply {\n-\t\t\tqueryArgs = append(queryArgs, \"APPLY\", apply.Field)\n-\t\t\tif apply.As != \"\" {\n-\t\t\t\tqueryArgs = append(queryArgs, \"AS\", apply.As)\n-\t\t\t}\n-\t\t}\n-\t\tif options.LimitOffset > 0 {\n-\t\t\tqueryArgs = append(queryArgs, \"LIMIT\", options.LimitOffset)\n-\t\t}\n-\t\tif options.Limit > 0 {\n-\t\t\tqueryArgs = append(queryArgs, options.Limit)\n+\t\tif options.LimitOffset >= 0 && options.Limit > 0 {\n+\t\t\tqueryArgs = append(queryArgs, \"LIMIT\", options.LimitOffset, options.Limit)\n \t\t}\n \t\tif options.Filter != \"\" {\n \t\t\tqueryArgs = append(queryArgs, \"FILTER\", options.Filter)\n@@ -574,6 +589,7 @@ func FTAggregateQuery(query string, options *FTAggregateOptions) AggregateQuery\n \t\t\t\tqueryArgs = append(queryArgs, key, value)\n \t\t\t}\n \t\t}\n+\n \t\tif options.DialectVersion > 0 {\n \t\t\tqueryArgs = append(queryArgs, \"DIALECT\", options.DialectVersion)\n \t\t}\n@@ -653,12 +669,11 @@ func (cmd *AggregateCmd) String() string {\n func (cmd *AggregateCmd) readReply(rd *proto.Reader) (err error) {\n \tdata, err := rd.ReadSlice()\n \tif err != nil {\n-\t\tcmd.err = err\n-\t\treturn nil\n+\t\treturn err\n \t}\n \tcmd.val, err = ProcessAggregateResult(data)\n \tif err != nil {\n-\t\tcmd.err = err\n+\t\treturn err\n \t}\n \treturn nil\n }\n@@ -674,6 +689,12 @@ func (c cmdable) FTAggregateWithArgs(ctx context.Context, index string, query st\n \t\tif options.Verbatim {\n \t\t\targs = append(args, \"VERBATIM\")\n \t\t}\n+\t\tif options.Scorer != \"\" {\n+\t\t\targs = append(args, \"SCORER\", options.Scorer)\n+\t\t}\n+\t\tif options.AddScores {\n+\t\t\targs = append(args, \"ADDSCORES\")\n+\t\t}\n \t\tif options.LoadAll && options.Load != nil {\n \t\t\tpanic(\"FT.AGGREGATE: LOADALL and LOAD are mutually exclusive\")\n \t\t}\n@@ -682,16 +703,26 @@ func (c cmdable) FTAggregateWithArgs(ctx context.Context, index string, query st\n \t\t}\n \t\tif options.Load != nil {\n \t\t\targs = append(args, \"LOAD\", len(options.Load))\n+\t\t\tindex, count := len(args)-1, 0\n \t\t\tfor _, load := range options.Load {\n \t\t\t\targs = append(args, load.Field)\n+\t\t\t\tcount++\n \t\t\t\tif load.As != \"\" {\n \t\t\t\t\targs = append(args, \"AS\", load.As)\n+\t\t\t\t\tcount += 2\n \t\t\t\t}\n \t\t\t}\n+\t\t\targs[index] = count\n \t\t}\n \t\tif options.Timeout > 0 {\n \t\t\targs = append(args, \"TIMEOUT\", options.Timeout)\n \t\t}\n+\t\tfor _, apply := range options.Apply {\n+\t\t\targs = append(args, \"APPLY\", apply.Field)\n+\t\t\tif apply.As != \"\" {\n+\t\t\t\targs = append(args, \"AS\", apply.As)\n+\t\t\t}\n+\t\t}\n \t\tif options.GroupBy != nil {\n \t\t\tfor _, groupBy := range options.GroupBy {\n \t\t\t\targs = append(args, \"GROUPBY\", len(groupBy.Fields))\n@@ -733,17 +764,8 @@ func (c cmdable) FTAggregateWithArgs(ctx context.Context, index string, query st\n \t\tif options.SortByMax > 0 {\n \t\t\targs = append(args, \"MAX\", options.SortByMax)\n \t\t}\n-\t\tfor _, apply := range options.Apply {\n-\t\t\targs = append(args, \"APPLY\", apply.Field)\n-\t\t\tif apply.As != \"\" {\n-\t\t\t\targs = append(args, \"AS\", apply.As)\n-\t\t\t}\n-\t\t}\n-\t\tif options.LimitOffset > 0 {\n-\t\t\targs = append(args, \"LIMIT\", options.LimitOffset)\n-\t\t}\n-\t\tif options.Limit > 0 {\n-\t\t\targs = append(args, options.Limit)\n+\t\tif options.LimitOffset >= 0 && options.Limit > 0 {\n+\t\t\targs = append(args, \"LIMIT\", options.LimitOffset, options.Limit)\n \t\t}\n \t\tif options.Filter != \"\" {\n \t\t\targs = append(args, \"FILTER\", options.Filter)\n@@ -1380,7 +1402,7 @@ func (cmd *FTInfoCmd) readReply(rd *proto.Reader) (err error) {\n \t}\n \tcmd.val, err = parseFTInfo(data)\n \tif err != nil {\n-\t\tcmd.err = err\n+\t\treturn err\n \t}\n \n \treturn nil\n@@ -1473,12 +1495,11 @@ func (cmd *FTSpellCheckCmd) RawResult() (interface{}, error) {\n func (cmd *FTSpellCheckCmd) readReply(rd *proto.Reader) (err error) {\n \tdata, err := rd.ReadSlice()\n \tif err != nil {\n-\t\tcmd.err = err\n-\t\treturn nil\n+\t\treturn err\n \t}\n \tcmd.val, err = parseFTSpellCheck(data)\n \tif err != nil {\n-\t\tcmd.err = err\n+\t\treturn err\n \t}\n \treturn nil\n }\n@@ -1662,19 +1683,19 @@ func (cmd *FTSearchCmd) RawResult() (interface{}, error) {\n func (cmd *FTSearchCmd) readReply(rd *proto.Reader) (err error) {\n \tdata, err := rd.ReadSlice()\n \tif err != nil {\n-\t\tcmd.err = err\n-\t\treturn nil\n+\t\treturn err\n \t}\n \tcmd.val, err = parseFTSearch(data, cmd.options.NoContent, cmd.options.WithScores, cmd.options.WithPayloads, cmd.options.WithSortKeys)\n \tif err != nil {\n-\t\tcmd.err = err\n+\t\treturn err\n \t}\n \treturn nil\n }\n \n // FTSearch - Executes a search query on an index.\n // The 'index' parameter specifies the index to search, and the 'query' parameter specifies the search query.\n-// For more information, please refer to the Redis documentation:\n+// For more information, please refer to the Redis documentation about [FT.SEARCH].\n+//\n // [FT.SEARCH]: (https://redis.io/commands/ft.search/)\n func (c cmdable) FTSearch(ctx context.Context, index string, query string) *FTSearchCmd {\n \targs := []interface{}{\"FT.SEARCH\", index, query}\n@@ -1685,6 +1706,12 @@ func (c cmdable) FTSearch(ctx context.Context, index string, query string) *FTSe\n \n type SearchQuery []interface{}\n \n+// FTSearchQuery - Executes a search query on an index with additional options.\n+// The 'index' parameter specifies the index to search, the 'query' parameter specifies the search query,\n+// and the 'options' parameter specifies additional options for the search.\n+// For more information, please refer to the Redis documentation about [FT.SEARCH].\n+//\n+// [FT.SEARCH]: (https://redis.io/commands/ft.search/)\n func FTSearchQuery(query string, options *FTSearchOptions) SearchQuery {\n \tqueryArgs := []interface{}{query}\n \tif options != nil {\n@@ -1775,7 +1802,7 @@ func FTSearchQuery(query string, options *FTSearchOptions) SearchQuery {\n \t\t\t\t}\n \t\t\t}\n \t\t\tif options.SortByWithCount {\n-\t\t\t\tqueryArgs = append(queryArgs, \"WITHCOUT\")\n+\t\t\t\tqueryArgs = append(queryArgs, \"WITHCOUNT\")\n \t\t\t}\n \t\t}\n \t\tif options.LimitOffset >= 0 && options.Limit > 0 {\n@@ -1797,7 +1824,8 @@ func FTSearchQuery(query string, options *FTSearchOptions) SearchQuery {\n // FTSearchWithArgs - Executes a search query on an index with additional options.\n // The 'index' parameter specifies the index to search, the 'query' parameter specifies the search query,\n // and the 'options' parameter specifies additional options for the search.\n-// For more information, please refer to the Redis documentation:\n+// For more information, please refer to the Redis documentation about [FT.SEARCH].\n+//\n // [FT.SEARCH]: (https://redis.io/commands/ft.search/)\n func (c cmdable) FTSearchWithArgs(ctx context.Context, index string, query string, options *FTSearchOptions) *FTSearchCmd {\n \targs := []interface{}{\"FT.SEARCH\", index, query}\n@@ -1889,7 +1917,7 @@ func (c cmdable) FTSearchWithArgs(ctx context.Context, index string, query strin\n \t\t\t\t}\n \t\t\t}\n \t\t\tif options.SortByWithCount {\n-\t\t\t\targs = append(args, \"WITHCOUT\")\n+\t\t\t\targs = append(args, \"WITHCOUNT\")\n \t\t\t}\n \t\t}\n \t\tif options.LimitOffset >= 0 && options.Limit > 0 {"
    },
    {
      "sha": "a4c9f53c4053ad1d4e44140559ed49a04c26bbcf",
      "filename": "backend/vendor/github.com/redis/go-redis/v9/sentinel.go",
      "status": "modified",
      "additions": 24,
      "deletions": 7,
      "changes": 31,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fsentinel.go",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fsentinel.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fsentinel.go?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -80,9 +80,20 @@ type FailoverOptions struct {\n \n \tTLSConfig *tls.Config\n \n+\t// DisableIndentity - Disable set-lib on connect.\n+\t//\n+\t// default: false\n+\t//\n+\t// Deprecated: Use DisableIdentity instead.\n \tDisableIndentity bool\n-\tIdentitySuffix   string\n-\tUnstableResp3    bool\n+\n+\t// DisableIdentity is used to disable CLIENT SETINFO command on connect.\n+\t//\n+\t// default: false\n+\tDisableIdentity bool\n+\n+\tIdentitySuffix string\n+\tUnstableResp3  bool\n }\n \n func (opt *FailoverOptions) clientOptions() *Options {\n@@ -118,9 +129,11 @@ func (opt *FailoverOptions) clientOptions() *Options {\n \n \t\tTLSConfig: opt.TLSConfig,\n \n+\t\tDisableIdentity:  opt.DisableIdentity,\n \t\tDisableIndentity: opt.DisableIndentity,\n-\t\tIdentitySuffix:   opt.IdentitySuffix,\n-\t\tUnstableResp3:    opt.UnstableResp3,\n+\n+\t\tIdentitySuffix: opt.IdentitySuffix,\n+\t\tUnstableResp3:  opt.UnstableResp3,\n \t}\n }\n \n@@ -156,9 +169,11 @@ func (opt *FailoverOptions) sentinelOptions(addr string) *Options {\n \n \t\tTLSConfig: opt.TLSConfig,\n \n+\t\tDisableIdentity:  opt.DisableIdentity,\n \t\tDisableIndentity: opt.DisableIndentity,\n-\t\tIdentitySuffix:   opt.IdentitySuffix,\n-\t\tUnstableResp3:    opt.UnstableResp3,\n+\n+\t\tIdentitySuffix: opt.IdentitySuffix,\n+\t\tUnstableResp3:  opt.UnstableResp3,\n \t}\n }\n \n@@ -197,8 +212,10 @@ func (opt *FailoverOptions) clusterOptions() *ClusterOptions {\n \n \t\tTLSConfig: opt.TLSConfig,\n \n+\t\tDisableIdentity:  opt.DisableIdentity,\n \t\tDisableIndentity: opt.DisableIndentity,\n-\t\tIdentitySuffix:   opt.IdentitySuffix,\n+\n+\t\tIdentitySuffix: opt.IdentitySuffix,\n \t}\n }\n "
    },
    {
      "sha": "483c81127af8e4f4dabec696654cb760376631aa",
      "filename": "backend/vendor/github.com/redis/go-redis/v9/universal.go",
      "status": "modified",
      "additions": 20,
      "deletions": 5,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Funiversal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Funiversal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Funiversal.go?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -61,14 +61,25 @@ type UniversalOptions struct {\n \tRouteByLatency bool\n \tRouteRandomly  bool\n \n-\t// The sentinel master name.\n-\t// Only failover clients.\n-\n+\t// MasterName is the sentinel master name.\n+\t// Only for failover clients.\n \tMasterName string\n \n+\t// DisableIndentity - Disable set-lib on connect.\n+\t//\n+\t// default: false\n+\t//\n+\t// Deprecated: Use DisableIdentity instead.\n \tDisableIndentity bool\n-\tIdentitySuffix   string\n-\tUnstableResp3    bool\n+\n+\t// DisableIdentity is used to disable CLIENT SETINFO command on connect.\n+\t//\n+\t// default: false\n+\tDisableIdentity bool\n+\n+\tIdentitySuffix string\n+\tUnstableResp3  bool\n+\n }\n \n // Cluster returns cluster options created from the universal options.\n@@ -113,8 +124,10 @@ func (o *UniversalOptions) Cluster() *ClusterOptions {\n \n \t\tTLSConfig: o.TLSConfig,\n \n+\t\tDisableIdentity:  o.DisableIdentity,\n \t\tDisableIndentity: o.DisableIndentity,\n \t\tIdentitySuffix:   o.IdentitySuffix,\n+\t\tUnstableResp3:    o.UnstableResp3,\n \t}\n }\n \n@@ -159,6 +172,7 @@ func (o *UniversalOptions) Failover() *FailoverOptions {\n \n \t\tTLSConfig: o.TLSConfig,\n \n+\t\tDisableIdentity:  o.DisableIdentity,\n \t\tDisableIndentity: o.DisableIndentity,\n \t\tIdentitySuffix:   o.IdentitySuffix,\n \t\tUnstableResp3:    o.UnstableResp3,\n@@ -203,6 +217,7 @@ func (o *UniversalOptions) Simple() *Options {\n \n \t\tTLSConfig: o.TLSConfig,\n \n+\t\tDisableIdentity:  o.DisableIdentity,\n \t\tDisableIndentity: o.DisableIndentity,\n \t\tIdentitySuffix:   o.IdentitySuffix,\n \t\tUnstableResp3:    o.UnstableResp3,"
    },
    {
      "sha": "a4832fc1e09fb6c3c66102a5f63837da8b7c2483",
      "filename": "backend/vendor/github.com/redis/go-redis/v9/version.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fversion.go",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fversion.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fredis%2Fgo-redis%2Fv9%2Fversion.go?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -2,5 +2,5 @@ package redis\n \n // Version is the current release version.\n func Version() string {\n-\treturn \"9.7.0\"\n+\treturn \"9.7.3\"\n }"
    },
    {
      "sha": "cae208899ef014b950da7708a619df4270346c56",
      "filename": "backend/vendor/modules.txt",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fmodules.txt",
      "raw_url": "https://github.com/umputun/remark42/raw/61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6/backend%2Fvendor%2Fmodules.txt",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fmodules.txt?ref=61dbf6b1f28aff2eef399ee0a935a6f8a2ce9db6",
      "patch": "@@ -167,7 +167,7 @@ github.com/montanaflynn/stats\n # github.com/pmezard/go-difflib v1.0.0\n ## explicit\n github.com/pmezard/go-difflib/difflib\n-# github.com/redis/go-redis/v9 v9.7.0\n+# github.com/redis/go-redis/v9 v9.7.3\n ## explicit; go 1.18\n github.com/redis/go-redis/v9\n github.com/redis/go-redis/v9/internal"
    }
  ]
}
