{
  "sha": "f3e356e450c7a64f4324617ffa48d39501e162ca",
  "node_id": "C_kwDOCQOkhNoAKGYzZTM1NmU0NTBjN2E2NGY0MzI0NjE3ZmZhNDhkMzk1MDFlMTYyY2E",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-05-02T09:19:32Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-05-02T09:19:40Z"
    },
    "message": "chore(template): tidy up template pkg naming",
    "tree": {
      "sha": "a70e4a6a65d8560d90a1500337e5ed92860412aa",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/a70e4a6a65d8560d90a1500337e5ed92860412aa"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/f3e356e450c7a64f4324617ffa48d39501e162ca",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZjNatQAKCRDUbg8O6nwT\navtRAP0VN9yh0Hp9qKpw8staxopexn5VcvIYX9Lp7CHTClA3yQD/Q6tTymlHEaH2\n21zEZwwpcfEpmQFZPEFsIUe/78oMMA4=\n=8Teg\n-----END PGP SIGNATURE-----",
      "payload": "tree a70e4a6a65d8560d90a1500337e5ed92860412aa\nparent 170db0fc2a20e45fff201256e57150c447ba2c1f\nauthor qwqcode <qwqcode@gmail.com> 1714641572 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1714641580 +0800\n\nchore(template): tidy up template pkg naming\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/f3e356e450c7a64f4324617ffa48d39501e162ca",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/f3e356e450c7a64f4324617ffa48d39501e162ca",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/f3e356e450c7a64f4324617ffa48d39501e162ca/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "170db0fc2a20e45fff201256e57150c447ba2c1f",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/170db0fc2a20e45fff201256e57150c447ba2c1f",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/170db0fc2a20e45fff201256e57150c447ba2c1f"
    }
  ],
  "stats": {
    "total": 86,
    "additions": 45,
    "deletions": 41
  },
  "files": [
    {
      "sha": "d3b95d4d0b2af17d0247ec50936b859a3fc7a1fe",
      "filename": "internal/template/render.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/f3e356e450c7a64f4324617ffa48d39501e162ca/internal%2Ftemplate%2Frender.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/f3e356e450c7a64f4324617ffa48d39501e162ca/internal%2Ftemplate%2Frender.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Ftemplate%2Frender.go?ref=f3e356e450c7a64f4324617ffa48d39501e162ca",
      "patch": "@@ -49,7 +49,7 @@ func NewRenderer(dao *dao.Dao, renderType RenderType, defaultTemplateLoader Temp\n \t// Render type\n \tvar renderStrategies = map[RenderType]func() RenderStrategy{\n \t\tTYPE_EMAIL: func() RenderStrategy {\n-\t\t\treturn NewEmailRenderStrategy()\n+\t\t\treturn NewEmailRenderer()\n \t\t},\n \t\tTYPE_NOTIFY: func() RenderStrategy {\n \t\t\treturn NewNotifyRenderer()\n@@ -60,7 +60,7 @@ func NewRenderer(dao *dao.Dao, renderType RenderType, defaultTemplateLoader Temp\n \tif strategyFunc, ok := renderStrategies[renderType]; ok {\n \t\tr.strategy = strategyFunc()\n \t} else {\n-\t\tr.strategy = NewEmailRenderStrategy() // Default\n+\t\tr.strategy = NewEmailRenderer() // Default\n \t}\n \n \treturn r"
    },
    {
      "sha": "85c7734a8a21f4ba4665708afde0d730d3faf023",
      "filename": "internal/template/render_email.go",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/f3e356e450c7a64f4324617ffa48d39501e162ca/internal%2Ftemplate%2Frender_email.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/f3e356e450c7a64f4324617ffa48d39501e162ca/internal%2Ftemplate%2Frender_email.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Ftemplate%2Frender_email.go?ref=f3e356e450c7a64f4324617ffa48d39501e162ca",
      "patch": "@@ -0,0 +1,18 @@\n+package template\n+\n+import (\n+\t\"github.com/ArtalkJS/Artalk/internal/entity\"\n+)\n+\n+var _ RenderStrategy = (*EmailRender)(nil)\n+\n+type EmailRender struct {\n+}\n+\n+func NewEmailRenderer() *EmailRender {\n+\treturn &EmailRender{}\n+}\n+\n+func (r *EmailRender) Render(tpl string, p tplParams, notify *entity.Notify, extra notifyExtraData) string {\n+\treturn renderCommon(tpl, p)\n+}"
    },
    {
      "sha": "825ac7d416303732e0d385f64c05d7d89cfe32cb",
      "filename": "internal/template/render_notify.go",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/f3e356e450c7a64f4324617ffa48d39501e162ca/internal%2Ftemplate%2Frender_notify.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/f3e356e450c7a64f4324617ffa48d39501e162ca/internal%2Ftemplate%2Frender_notify.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Ftemplate%2Frender_notify.go?ref=f3e356e450c7a64f4324617ffa48d39501e162ca",
      "patch": "@@ -0,0 +1,21 @@\n+package template\n+\n+import (\n+\t\"github.com/ArtalkJS/Artalk/internal/entity\"\n+)\n+\n+var _ RenderStrategy = (*NotifyRender)(nil)\n+\n+type NotifyRender struct {\n+}\n+\n+func NewNotifyRenderer() *NotifyRender {\n+\treturn &NotifyRender{}\n+}\n+\n+func (r *NotifyRender) Render(tpl string, p tplParams, notify *entity.Notify, extra notifyExtraData) string {\n+\tp.Content = handleEmoticonsImgTagsForNotify(extra.to.ContentRaw)\n+\tp.ReplyContent = handleEmoticonsImgTagsForNotify(extra.from.ContentRaw)\n+\n+\treturn renderCommon(tpl, p)\n+}"
    },
    {
      "sha": "aadbc81a02990d7ee185c319bf919200d70340a0",
      "filename": "internal/template/strategy_email.go",
      "status": "removed",
      "additions": 0,
      "deletions": 18,
      "changes": 18,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/170db0fc2a20e45fff201256e57150c447ba2c1f/internal%2Ftemplate%2Fstrategy_email.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/170db0fc2a20e45fff201256e57150c447ba2c1f/internal%2Ftemplate%2Fstrategy_email.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Ftemplate%2Fstrategy_email.go?ref=170db0fc2a20e45fff201256e57150c447ba2c1f",
      "patch": "@@ -1,18 +0,0 @@\n-package template\n-\n-import (\n-\t\"github.com/ArtalkJS/Artalk/internal/entity\"\n-)\n-\n-var _ RenderStrategy = (*EmailRenderStrategy)(nil)\n-\n-type EmailRenderStrategy struct {\n-}\n-\n-func NewEmailRenderStrategy() *EmailRenderStrategy {\n-\treturn &EmailRenderStrategy{}\n-}\n-\n-func (r *EmailRenderStrategy) Render(tpl string, p tplParams, notify *entity.Notify, extra notifyExtraData) string {\n-\treturn renderCommon(tpl, p)\n-}"
    },
    {
      "sha": "84741da74fa0d9e6fe46c2ef50c9aa1e4845d458",
      "filename": "internal/template/strategy_notify.go",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/170db0fc2a20e45fff201256e57150c447ba2c1f/internal%2Ftemplate%2Fstrategy_notify.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/170db0fc2a20e45fff201256e57150c447ba2c1f/internal%2Ftemplate%2Fstrategy_notify.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Ftemplate%2Fstrategy_notify.go?ref=170db0fc2a20e45fff201256e57150c447ba2c1f",
      "patch": "@@ -1,21 +0,0 @@\n-package template\n-\n-import (\n-\t\"github.com/ArtalkJS/Artalk/internal/entity\"\n-)\n-\n-var _ RenderStrategy = (*NotifyRenderStrategy)(nil)\n-\n-type NotifyRenderStrategy struct {\n-}\n-\n-func NewNotifyRenderer() *NotifyRenderStrategy {\n-\treturn &NotifyRenderStrategy{}\n-}\n-\n-func (r *NotifyRenderStrategy) Render(tpl string, p tplParams, notify *entity.Notify, extra notifyExtraData) string {\n-\tp.Content = handleEmoticonsImgTagsForNotify(extra.to.ContentRaw)\n-\tp.ReplyContent = handleEmoticonsImgTagsForNotify(extra.from.ContentRaw)\n-\n-\treturn renderCommon(tpl, p)\n-}"
    },
    {
      "sha": "4485894bda3f733fd183a0f952f32eb4b82f3130",
      "filename": "server/handler/comment_create.go",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/f3e356e450c7a64f4324617ffa48d39501e162ca/server%2Fhandler%2Fcomment_create.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/f3e356e450c7a64f4324617ffa48d39501e162ca/server%2Fhandler%2Fcomment_create.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/server%2Fhandler%2Fcomment_create.go?ref=f3e356e450c7a64f4324617ffa48d39501e162ca",
      "patch": "@@ -82,6 +82,10 @@ func CommentCreate(app *core.App, router fiber.Router) {\n \n \t\t// find page\n \t\tpage := app.Dao().FindCreatePage(p.PageKey, p.PageTitle, p.SiteName)\n+\t\tif page.Key == \"\" {\n+\t\t\tlog.Error(\"[CommentCreate] FindCreatePage error\")\n+\t\t\treturn common.RespError(c, 500, i18n.T(\"Comment failed\"))\n+\t\t}\n \n \t\t// check if the user is allowed to comment\n \t\tif isAllowed, resp := isAllowComment(app, c, p.Name, p.Email, page.AdminOnly); !isAllowed {"
    }
  ]
}
