{
  "sha": "2b4445223419d1b77b46e226dea9de9df36c9672",
  "node_id": "C_kwDOCQOkhNoAKDJiNDQ0NTIyMzQxOWQxYjc3YjQ2ZTIyNmRlYTlkZTlkZjM2Yzk2NzI",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-01-31T10:23:39Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-01-31T11:44:40Z"
    },
    "message": "refactor(ui): optimize init and update lifecycle events",
    "tree": {
      "sha": "07329516b2df0fe46578a95f39ac542181798ce7",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/07329516b2df0fe46578a95f39ac542181798ce7"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/2b4445223419d1b77b46e226dea9de9df36c9672",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZboyqAAKCRDUbg8O6nwT\nauppAP9sTzrVasFU+2/0lSaTa3OERWlxSoCE+D52hmAm0JbJEQD/Q0gdhzAwiNIE\neZU9hZch17WxWAqnxe2AHWViC/hziAQ=\n=kcoV\n-----END PGP SIGNATURE-----",
      "payload": "tree 07329516b2df0fe46578a95f39ac542181798ce7\nparent 0e0b53fe9e1d997dd4f81f2d98387f18875015f3\nauthor qwqcode <qwqcode@gmail.com> 1706696619 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1706701480 +0800\n\nrefactor(ui): optimize init and update lifecycle events\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/2b4445223419d1b77b46e226dea9de9df36c9672",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/2b4445223419d1b77b46e226dea9de9df36c9672",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/2b4445223419d1b77b46e226dea9de9df36c9672/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0e0b53fe9e1d997dd4f81f2d98387f18875015f3",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/0e0b53fe9e1d997dd4f81f2d98387f18875015f3",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/0e0b53fe9e1d997dd4f81f2d98387f18875015f3"
    }
  ],
  "stats": {
    "total": 136,
    "additions": 75,
    "deletions": 61
  },
  "files": [
    {
      "sha": "1069068b6c3e114a19ebdb335d7f7f080cc41190",
      "filename": "docs/docs/develop/event.md",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/docs%2Fdocs%2Fdevelop%2Fevent.md",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/docs%2Fdocs%2Fdevelop%2Fevent.md",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/docs%2Fdocs%2Fdevelop%2Fevent.md?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -4,31 +4,30 @@\n \n |事件名|描述|\n |-|-|\n-| `inited` | 初始化后 |\n-| `destroy` | 实例销毁时 |\n+| `created` | 初始化后 |\n+| `mounted` | 数据加载后 |\n+| `updated` | 数据更新后 |\n+| `unmounted` | 销毁后 |\n | `list-fetch` | 评论列表请求时 |\n | `list-fetched` | 评论列表请求后 |\n | `list-load` | 评论装载前 |\n | `list-loaded` | 评论装载后 |\n-| `list-error` | 评论加载错误时 |\n+| `list-failed` | 评论加载错误时 |\n | `list-goto-first` | 评论列表归位时 |\n | `list-reach-bottom` | 评论列表滚动到底部时 |\n-| `list-reach-bottom` | 评论列表滚动到底部时 |\n | `comment-inserted`   | 评论插入后           |\n | `comment-updated`    | 评论更新后           |\n | `comment-deleted`    | 评论删除后           |\n | `comment-rendered`   | 评论节点渲染后       |\n-| `unreads-updated`    | 未读消息变更时       |\n+| `notifies-updated`    | 未读消息变更时       |\n | `list-goto`          | 评论跳转时           |\n | `page-loaded`        | 页面数据更新后       |\n | `editor-submit`      | 编辑器提交时         |\n | `editor-submitted`   | 编辑器提交后         |\n | `user-changed`       | 本地用户数据变更时   |\n-| `conf-loaded`        | 配置变更时           |\n-| `dark-mode-changed`  | 深色模式变更时       |\n | `sidebar-show`       | 侧边栏显示          |\n | `sidebar-hide`       | 侧边栏隐藏          |\n- \n+\n \n 事件声明代码：[@ArtalkJS/Artalk - src/types/event.ts](https://github.com/ArtalkJS/Artalk/blob/master/ui/artalk/src/types/event.ts)\n "
    },
    {
      "sha": "c8ccb5ee44c6928293b29a966cb094e6a51f4cfe",
      "filename": "docs/docs/develop/plugs.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/docs%2Fdocs%2Fdevelop%2Fplugs.md",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/docs%2Fdocs%2Fdevelop%2Fplugs.md",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/docs%2Fdocs%2Fdevelop%2Fplugs.md?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -6,7 +6,7 @@\n import Artalk from 'artalk'\n \n Artalk.use((ctx) => {\n-  ctx.on('inited', () => {\n+  ctx.on('mounted', () => {\n     ctx.get('editor').setContent(\"Hello World\")\n   })\n "
    },
    {
      "sha": "1f43aee7c243d2e23f1a728f9beab6b9e2985b22",
      "filename": "ui/artalk-sidebar/src/App.vue",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk-sidebar%2Fsrc%2FApp.vue",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk-sidebar%2Fsrc%2FApp.vue",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk-sidebar%2Fsrc%2FApp.vue?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -19,7 +19,7 @@ onBeforeMount(() => {\n     throw new Error('Artalk instance not initialized')\n   }\n \n-  artalk.on('conf-loaded', () => {\n+  artalk.on('mounted', () => {\n     if (artalkLoaded.value) return\n     artalkLoaded.value = true\n "
    },
    {
      "sha": "fc6a88d2b9bda0d419348aac172ac163b3069f10",
      "filename": "ui/artalk/src/artalk.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fartalk.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fartalk.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fartalk.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -42,8 +42,8 @@ export default class Artalk {\n       if (typeof plugin === 'function') plugin(this.ctx)\n     })\n \n-    // Trigger inited event\n-    this.ctx.trigger('inited')\n+    // Trigger created event\n+    this.ctx.trigger('created')\n   }\n \n   /** Get the config of Artalk */\n@@ -69,7 +69,7 @@ export default class Artalk {\n \n   /** Destroy instance of Artalk */\n   public destroy() {\n-    this.ctx.trigger('destroy')\n+    this.ctx.trigger('unmounted')\n     this.ctx.$root.remove()\n   }\n "
    },
    {
      "sha": "db5c3340e2f0c5ec82aeb73d32c0041589e4a792",
      "filename": "ui/artalk/src/context.ts",
      "status": "modified",
      "additions": 8,
      "deletions": 18,
      "changes": 26,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fcontext.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fcontext.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fcontext.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -11,6 +11,7 @@ import * as I18n from './i18n'\n \n import EventManager from './lib/event-manager'\n import { convertApiOptions, handelCustomConf } from './config'\n+import { watchConf } from './lib/watch-conf'\n \n // Auto dependency injection\n interface Context extends TInjectedServices { }\n@@ -26,6 +27,7 @@ class Context implements ContextApi {\n \n   /* Event Manager */\n   private events = new EventManager<EventPayloadMap>()\n+  private mounted = false\n \n   constructor(conf: ArtalkConfig) {\n     this.conf = conf\n@@ -35,6 +37,10 @@ class Context implements ContextApi {\n     this.$root.innerHTML = ''\n \n     this.data = new DataManager(this.events)\n+\n+    this.on('mounted', () => {\n+      this.mounted = true\n+    })\n   }\n \n   inject(depName: string, obj: any) {\n@@ -144,7 +150,7 @@ class Context implements ContextApi {\n \n   updateConf(nConf: Partial<ArtalkConfig>): void {\n     this.conf = mergeDeep(this.conf, handelCustomConf(nConf, false))\n-    this.events.trigger('conf-loaded', this.conf)\n+    this.mounted && this.events.trigger('updated', this.conf)\n   }\n \n   getConf(): ArtalkConfig {\n@@ -160,23 +166,7 @@ class Context implements ContextApi {\n   }\n \n   watchConf<T extends (keyof ArtalkConfig)[]>(keys: T, effect: (conf: Pick<ArtalkConfig, T[number]>) => void): void {\n-    const deepEqual = (a: any, b: any) => JSON.stringify(a) === JSON.stringify(b)\n-    const val = () => {\n-      const conf = this.getConf()\n-      const res: any = {}\n-      keys.forEach((key) => { res[key] = conf[key] })\n-      return res\n-    }\n-    let lastVal = {}\n-    this.on('conf-loaded', () => {\n-      const newVal = val()\n-      const isDiff = !deepEqual(lastVal, newVal)\n-      // only trigger when specific keys changed\n-      if (isDiff) {\n-        lastVal = newVal\n-        effect(newVal)\n-      }\n-    })\n+    watchConf(this, keys, effect)\n   }\n }\n "
    },
    {
      "sha": "a75bd664b128d8c17498d25b004bfd0e3222efa2",
      "filename": "ui/artalk/src/layer/layer-manager.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Flayer%2Flayer-manager.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Flayer%2Flayer-manager.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Flayer%2Flayer-manager.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -9,7 +9,7 @@ export class LayerManager {\n     this.wrap = new LayerWrap()\n     document.body.appendChild(this.wrap.getWrap())\n \n-    ctx.on('destroy', () => {\n+    ctx.on('unmounted', () => {\n       this.wrap.getWrap().remove()\n     })\n "
    },
    {
      "sha": "0d819877809300c63ec9a35a94e4f327800674ef",
      "filename": "ui/artalk/src/lib/watch-conf.ts",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Flib%2Fwatch-conf.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Flib%2Fwatch-conf.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Flib%2Fwatch-conf.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -0,0 +1,23 @@\n+import type { ArtalkConfig, ContextApi } from '@/types'\n+\n+export function watchConf<T extends (keyof ArtalkConfig)[]>(ctx: ContextApi, keys: T, effect: (conf: Pick<ArtalkConfig, T[number]>) => void): void {\n+  const deepEqual = (a: any, b: any) => JSON.stringify(a) === JSON.stringify(b)\n+  const val = () => {\n+    const conf = ctx.getConf()\n+    const res: any = {}\n+    keys.forEach((key) => { res[key] = conf[key] })\n+    return res\n+  }\n+  let lastVal: any = null\n+  const handler = () => {\n+    const newVal = val()\n+    const isDiff = lastVal == null || !deepEqual(lastVal, newVal)\n+    // only trigger when specific keys changed\n+    if (isDiff) {\n+      lastVal = newVal\n+      effect(newVal)\n+    }\n+  }\n+  ctx.on('mounted', handler)\n+  ctx.on('updated', handler)\n+}"
    },
    {
      "sha": "8f16a924732ee10d1eb4aa14c713114ac1b6b300",
      "filename": "ui/artalk/src/list/page.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Flist%2Fpage.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Flist%2Fpage.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Flist%2Fpage.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -63,7 +63,7 @@ export const initListPaginatorFunc = (ctx: ContextApi) => {\n   })\n \n   // When list error\n-  ctx.on('list-error', () => {\n+  ctx.on('list-failed', () => {\n     paginator?.showErr?.($t('loadFail'))\n   })\n "
    },
    {
      "sha": "078b0778440e3470a562f88a87f657be1068941d",
      "filename": "ui/artalk/src/plugins/conf-remoter.ts",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Fconf-remoter.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Fconf-remoter.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Fconf-remoter.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -3,9 +3,9 @@ import { handleConfFormServer } from '@/config'\n import { showErrorDialog } from '../components/error-dialog'\n \n export const ConfRemoter: ArtalkPlugin = (ctx) => {\n-  ctx.on('inited', () => {\n-    if (ctx.conf.immediateFetch === false) return\n-    ctx.trigger('conf-fetch')\n+  ctx.on('created', () => {\n+    if (ctx.conf.immediateFetch !== false)\n+      ctx.trigger('conf-fetch')\n   })\n \n   ctx.on('conf-fetch', () => {\n@@ -52,6 +52,9 @@ function loadConf(ctx: ContextApi) {\n \n     console.error(err)\n     throw err\n+  }).then(() => {\n+    // Trigger mounted event\n+    ctx.trigger('mounted')\n   }).then(() => {\n     // 评论获取\n     if (ctx.conf.remoteConfModifier) return // only auto fetch when no remoteConfModifier"
    },
    {
      "sha": "064e698fe9567a655bf47f040398d34466fb9dc7",
      "filename": "ui/artalk/src/plugins/dark-mode.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Fdark-mode.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Fdark-mode.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Fdark-mode.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -49,8 +49,8 @@ export const DarkMode: ArtalkPlugin = (ctx) => {\n   }\n \n   ctx.watchConf(['darkMode'], (conf) => sync(conf.darkMode))\n-  ctx.on('inited', () => sync(ctx.conf.darkMode))\n-  ctx.on('destroy', () => {\n+  ctx.on('created', () => sync(ctx.conf.darkMode))\n+  ctx.on('unmounted', () => {\n     // if handler exists, don't forget to remove it, or it will cause memory leak\n     darkModeAutoHandler && darkModeMedia?.removeEventListener('change', darkModeAutoHandler)\n     darkModeAutoHandler = undefined"
    },
    {
      "sha": "2206e4811f8a39a1677ce842ffc8e34655531c88",
      "filename": "ui/artalk/src/plugins/list/copyright.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fcopyright.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fcopyright.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fcopyright.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -2,7 +2,7 @@ import type { ArtalkPlugin } from '@/types'\n import { version as ARTALK_VERSION } from '~/package.json'\n \n export const Copyright: ArtalkPlugin = (ctx) => {\n-  ctx.on('inited', () => {\n+  ctx.on('mounted', () => {\n     const list = ctx.get('list')\n \n     const $copyright = list.$el.querySelector<HTMLElement>('.atk-copyright')"
    },
    {
      "sha": "cbc5ca7735dfbd6e4f5cc46c16e6e47623b985a9",
      "filename": "ui/artalk/src/plugins/list/error-dialog.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ferror-dialog.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ferror-dialog.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ferror-dialog.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -10,7 +10,7 @@ export const ErrorDialog: ArtalkPlugin = (ctx) => {\n     Ui.setError(list.$el, null)\n   })\n \n-  ctx.on('list-error', (err) => {\n+  ctx.on('list-failed', (err) => {\n     showErrorDialog({\n       $err: ctx.get('list').$el,\n       errMsg: err.msg,"
    },
    {
      "sha": "b3115ddfe6a9cc611b37300bdaa1ef0629009ed8",
      "filename": "ui/artalk/src/plugins/list/fetch.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ffetch.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ffetch.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ffetch.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -65,7 +65,7 @@ export const Fetch: ArtalkPlugin = (ctx) => {\n         params.onError && params.onError(error)\n \n         // trigger events when error\n-        ctx.trigger('list-error', error)\n+        ctx.trigger('list-failed', error)\n         ctx.trigger('list-fetched', { params, error })\n \n         throw e"
    },
    {
      "sha": "e8410728c4b8788277fc8cb3d13f1ff4c161aedb",
      "filename": "ui/artalk/src/plugins/list/goto-first.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fgoto-first.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fgoto-first.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fgoto-first.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -13,11 +13,11 @@ export const GotoFirst: ArtalkPlugin = (ctx) => {\n     })\n   }\n \n-  ctx.on('inited', () => {\n+  ctx.on('mounted', () => {\n     ctx.on('list-goto-first', handler)\n   })\n \n-  ctx.on('destroy', () => {\n+  ctx.on('unmounted', () => {\n     ctx.off('list-goto-first', handler)\n   })\n }"
    },
    {
      "sha": "e90b412f153f012caac1ca559203541a330c4715",
      "filename": "ui/artalk/src/plugins/list/goto.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fgoto.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fgoto.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fgoto.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -20,11 +20,11 @@ export const Goto: ArtalkPlugin = (ctx) => {\n     delayGoto = false\n     check()\n   }\n-  ctx.on('inited', () => {\n+  ctx.on('mounted', () => {\n     window.addEventListener('hashchange', hashChangeHandler)\n     ctx.on('list-loaded', check)\n   })\n-  ctx.on('destroy', () => {\n+  ctx.on('unmounted', () => {\n     window.removeEventListener('hashchange', hashChangeHandler)\n     ctx.off('list-loaded', check)\n   })"
    },
    {
      "sha": "47abfe3c75ff296d42199e625c7fe535a20d99d9",
      "filename": "ui/artalk/src/plugins/list/reach-bottom.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Freach-bottom.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Freach-bottom.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Freach-bottom.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -50,7 +50,7 @@ export const ReachBottom: ArtalkPlugin = (ctx) => {\n     setupObserver($target)\n   })\n \n-  ctx.on('destroy', () => {\n+  ctx.on('unmounted', () => {\n     clearObserver()\n   })\n }"
    },
    {
      "sha": "b3aa55ebe54a33446ba72f60ef885c2353de3fcf",
      "filename": "ui/artalk/src/plugins/list/time-ticking.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ftime-ticking.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ftime-ticking.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ftime-ticking.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -5,7 +5,7 @@ import * as Utils from '@/lib/utils'\n export const TimeTicking: ArtalkPlugin = (ctx) => {\n   let timer: number|null = null\n \n-  ctx.on('inited', () => {\n+  ctx.on('mounted', () => {\n     timer = window.setInterval(() => {\n       const list = ctx.get('list')\n \n@@ -16,7 +16,7 @@ export const TimeTicking: ArtalkPlugin = (ctx) => {\n     }, 30 * 1000) // 30s 更新一次\n   })\n \n-  ctx.on('destroy', () => {\n+  ctx.on('unmounted', () => {\n     timer && window.clearInterval(timer)\n   })\n }"
    },
    {
      "sha": "0ea21b439412ec77c4697979c68a92669b3795f5",
      "filename": "ui/artalk/src/plugins/list/unread-badge.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Funread-badge.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Funread-badge.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Funread-badge.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -14,7 +14,7 @@ export const UnreadBadge: ArtalkPlugin = (ctx) => {\n     }\n   }\n \n-  ctx.on('inited', () => {\n+  ctx.on('mounted', () => {\n     const list = ctx.get('list')\n \n     $unreadBadge = list.$el.querySelector<HTMLElement>('.atk-unread-badge')"
    },
    {
      "sha": "c7caccea850c9b037ae89e3ba0ad41685be5fd55",
      "filename": "ui/artalk/src/plugins/list/with-editor.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fwith-editor.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fwith-editor.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fwith-editor.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -4,9 +4,9 @@ import $t from '@/i18n'\n export const WithEditor: ArtalkPlugin = (ctx) => {\n   let $closeCommentBtn: HTMLElement|undefined\n \n-  // on Artalk inited\n+  // on Artalk mounted\n   // (after all components had mounted)\n-  ctx.on('inited', () => {\n+  ctx.on('mounted', () => {\n     const list = ctx.get('list')\n \n     $closeCommentBtn = list.$el.querySelector<HTMLElement>('[data-action=\"admin-close-comment\"]')!"
    },
    {
      "sha": "f37de6c54df27b6918d13c6de8234a9c8867f9a7",
      "filename": "ui/artalk/src/plugins/markdown.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Fmarkdown.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Fplugins%2Fmarkdown.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Fmarkdown.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -4,7 +4,7 @@ import * as marked from '@/lib/marked'\n export const Markdown: ArtalkPlugin = (ctx) => {\n   marked.initMarked()\n \n-  ctx.on('conf-loaded', (conf) => {\n+  ctx.on('updated', (conf) => {\n     if (conf.markedReplacers) marked.setReplacers(conf.markedReplacers)\n   })\n }"
    },
    {
      "sha": "84461465816cc730f273e609c9723cf032fd1e44",
      "filename": "ui/artalk/src/types/event.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Ftypes%2Fevent.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Fsrc%2Ftypes%2Fevent.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Ftypes%2Fevent.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -7,19 +7,19 @@ interface ListFetchedArgs { params: Partial<ListFetchParams>, data?: ListData, e\n \n /** EventName to EventPayload Type */\n export interface EventPayloadMap {\n-  'inited': undefined              // Artalk 初始化后\n-  'destroy': undefined             // Artalk 销毁时\n+  // Basic lifecycle\n+  'created': undefined\n+  'mounted': undefined\n+  'updated': ArtalkConfig\n+  'unmounted': undefined\n+\n   'conf-fetch': undefined          // 配置请求时\n   'list-fetch': Partial<ListFetchParams>    // 评论列表请求时\n   'list-fetched': ListFetchedArgs           // 评论列表请求后\n   'list-load': CommentData[]     // 评论装载前\n \n-  // TODO merge 'list-loaded' and 'list-error', for purpose of `once` 'list-loaded' and simplify\n-  // example need bind 'list-loaded' and 'list-error' to same handler\n-  // consider name it to 'list-fetched': { data: CommentData[], error?: { msg: string, data?: any } }\n-  // and remove `list-load`\n   'list-loaded': CommentData[]     // 评论装载后\n-  'list-error': ErrorData          // 评论加载错误时\n+  'list-failed': ErrorData          // 评论加载错误时\n \n   'list-goto-first': undefined    // 评论列表归位时\n   'list-reach-bottom': undefined  // 评论列表滚动到底部时\n@@ -34,7 +34,6 @@ export interface EventPayloadMap {\n   'editor-submit': undefined       // 编辑器提交时\n   'editor-submitted': undefined    // 编辑器提交后\n   'user-changed': LocalUser        // 本地用户数据变更时\n-  'conf-loaded': ArtalkConfig      // Artalk 配置变更时\n   'sidebar-show': undefined        // 侧边栏显示\n   'sidebar-hide': undefined        // 侧边栏隐藏\n }"
    },
    {
      "sha": "f52219ef577e99129a84a87376c7f7d209cb47bb",
      "filename": "ui/artalk/tests/ui-api.test.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Ftests%2Fui-api.test.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/2b4445223419d1b77b46e226dea9de9df36c9672/ui%2Fartalk%2Ftests%2Fui-api.test.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Ftests%2Fui-api.test.ts?ref=2b4445223419d1b77b46e226dea9de9df36c9672",
      "patch": "@@ -92,7 +92,7 @@ describe('Artalk instance', () => {\n     const fn = vi.fn()\n \n     await new Promise(resolve => {\n-      artalk.on('conf-loaded', (conf) => {\n+      artalk.on('mounted', (conf) => {\n         resolve(null)\n         fn()\n       })"
    }
  ]
}
