{
  "sha": "95966f6407241adc3bfe7eda1bc5b291f30d9d7c",
  "node_id": "C_kwDOBtgov9oAKDk1OTY2ZjY0MDcyNDFhZGMzYmZlN2VkYTFiYzViMjkxZjMwZDlkN2M",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2024-06-30T13:14:24Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2024-07-02T04:41:50Z"
    },
    "message": "add escaping of comment text in webhook default JSON template",
    "tree": {
      "sha": "f5cc846c51545a5d596b6f9646b2239b1848786d",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/f5cc846c51545a5d596b6f9646b2239b1848786d"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/95966f6407241adc3bfe7eda1bc5b291f30d9d7c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/95966f6407241adc3bfe7eda1bc5b291f30d9d7c",
  "html_url": "https://github.com/umputun/remark42/commit/95966f6407241adc3bfe7eda1bc5b291f30d9d7c",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/95966f6407241adc3bfe7eda1bc5b291f30d9d7c/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8df986e70ad394812cc45b0487ad9dfd40ca2677",
      "url": "https://api.github.com/repos/umputun/remark42/commits/8df986e70ad394812cc45b0487ad9dfd40ca2677",
      "html_url": "https://github.com/umputun/remark42/commit/8df986e70ad394812cc45b0487ad9dfd40ca2677"
    }
  ],
  "stats": {
    "total": 307,
    "additions": 173,
    "deletions": 134
  },
  "files": [
    {
      "sha": "8f3f8974e998a82947664906438dc275e8d791d8",
      "filename": "backend/app/notify/webhook.go",
      "status": "modified",
      "additions": 12,
      "deletions": 2,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/95966f6407241adc3bfe7eda1bc5b291f30d9d7c/backend%2Fapp%2Fnotify%2Fwebhook.go",
      "raw_url": "https://github.com/umputun/remark42/raw/95966f6407241adc3bfe7eda1bc5b291f30d9d7c/backend%2Fapp%2Fnotify%2Fwebhook.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Fnotify%2Fwebhook.go?ref=95966f6407241adc3bfe7eda1bc5b291f30d9d7c",
      "patch": "@@ -3,6 +3,7 @@ package notify\n import (\n \t\"bytes\"\n \t\"context\"\n+\t\"encoding/json\"\n \t\"fmt\"\n \t\"text/template\"\n \t\"time\"\n@@ -12,7 +13,7 @@ import (\n )\n \n const (\n-\twebhookDefaultTemplate = `{\"text\": \"{{.Text}}\"}`\n+\twebhookDefaultTemplate = `{\"text\": {{.Text | escapeJSONString}}}`\n )\n \n // WebhookParams contain settings for webhook notifications\n@@ -49,7 +50,7 @@ func NewWebhook(params WebhookParams) (*Webhook, error) {\n \t\tparams.Template = webhookDefaultTemplate\n \t}\n \n-\tpayloadTmpl, err := template.New(\"webhook\").Parse(params.Template)\n+\tpayloadTmpl, err := template.New(\"webhook\").Funcs(template.FuncMap{\"escapeJSONString\": escapeJSONString}).Parse(params.Template)\n \tif err != nil {\n \t\treturn nil, fmt.Errorf(\"unable to parse webhook template: %w\", err)\n \t}\n@@ -82,3 +83,12 @@ func (w *Webhook) SendVerification(_ context.Context, _ VerificationRequest) err\n func (w *Webhook) String() string {\n \treturn fmt.Sprintf(\"%s to %s\", w.Webhook.String(), w.url)\n }\n+\n+// escapeJSONString escapes string for JSON\n+func escapeJSONString(s string) (string, error) {\n+\tb, err := json.Marshal(s)\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\treturn string(b), nil\n+}"
    },
    {
      "sha": "dcd43f88b6d4cd644397900cdf7ee1ea2ffee764",
      "filename": "backend/app/notify/webhook_test.go",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/95966f6407241adc3bfe7eda1bc5b291f30d9d7c/backend%2Fapp%2Fnotify%2Fwebhook_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/95966f6407241adc3bfe7eda1bc5b291f30d9d7c/backend%2Fapp%2Fnotify%2Fwebhook_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Fnotify%2Fwebhook_test.go?ref=95966f6407241adc3bfe7eda1bc5b291f30d9d7c",
      "patch": "@@ -2,6 +2,9 @@ package notify\n \n import (\n \t\"context\"\n+\t\"io\"\n+\t\"net/http\"\n+\t\"net/http/httptest\"\n \t\"testing\"\n \t\"time\"\n \n@@ -34,6 +37,32 @@ func TestWebhook_NewWebhook(t *testing.T) {\n \tassert.Contains(t, err.Error(), \"unable to parse webhook template\")\n }\n \n+// https://github.com/umputun/remark42/issues/1791\n+func TestWebhook_ReceiveValidJSON(t *testing.T) {\n+\tts := httptest.NewServer(http.HandlerFunc(func(_ http.ResponseWriter, r *http.Request) {\n+\t\tassert.Equal(t, r.URL.Path, \"/webhook-notify\")\n+\t\tassert.Equal(t, \"POST\", r.Method)\n+\t\tbody, err := io.ReadAll(r.Body)\n+\t\tassert.NoError(t, err)\n+\t\tt.Log(\"received body\", string(body))\n+\t\tassert.JSONEq(t, `{\"text\": \"<p>testme</p>\\n\"}`, string(body))\n+\t}))\n+\tdefer ts.Close()\n+\n+\twh, err := NewWebhook(WebhookParams{\n+\t\tURL:     ts.URL + \"/webhook-notify\",\n+\t\tHeaders: []string{\"Content-Type:application/json,text/plain\"},\n+\t})\n+\tassert.NoError(t, err)\n+\tassert.NotNil(t, wh)\n+\n+\tf := store.NewCommentFormatter()\n+\tc := store.Comment{Text: f.FormatText(\"testme\", false), ParentID: \"1\", ID: \"999\"}\n+\n+\terr = wh.Send(context.Background(), Request{Comment: c})\n+\tassert.NoError(t, err)\n+}\n+\n func TestWebhook_Send(t *testing.T) {\n \twh, err := NewWebhook(WebhookParams{\n \t\tURL:     \"bad-url\","
    },
    {
      "sha": "530b6018d76c2c5d0541008c66ab19651fca22b8",
      "filename": "site/src/docs/configuration/notifications/index.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/95966f6407241adc3bfe7eda1bc5b291f30d9d7c/site%2Fsrc%2Fdocs%2Fconfiguration%2Fnotifications%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/95966f6407241adc3bfe7eda1bc5b291f30d9d7c/site%2Fsrc%2Fdocs%2Fconfiguration%2Fnotifications%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fconfiguration%2Fnotifications%2Findex.md?ref=95966f6407241adc3bfe7eda1bc5b291f30d9d7c",
      "patch": "@@ -46,4 +46,4 @@ If all goes fine, you should be able to see the following message on your Slack\n \n You need to set `NOTIFY_ADMINS=webhook` to enable WebHook notifications on all new comments and set at least `NOTIFY_WEBHOOK_URL` for them to start working.\n \n-Additionally, you might want to set `NOTIFY_WEBHOOK_TEMPLATE` (which is Go Template, `{\"text\": \"{{.Text}}\"}` by default) and `NOTIFY_WEBHOOK_HEADERS`, which is HTTP header(s) in format `Header1:Value1,Header2:Value2,...`.\n+Additionally, you might want to set `NOTIFY_WEBHOOK_TEMPLATE` (which is Go Template, `{\"text\": {{.Text | escapeJSONString}}}` by default) and `NOTIFY_WEBHOOK_HEADERS`, which is HTTP header(s) in format `Header1:Value1,Header2:Value2,...`."
    },
    {
      "sha": "e54c5c84b5b0912a1bfda752ab87cb95987a6c7c",
      "filename": "site/src/docs/configuration/parameters/index.md",
      "status": "modified",
      "additions": 131,
      "deletions": 131,
      "changes": 262,
      "blob_url": "https://github.com/umputun/remark42/blob/95966f6407241adc3bfe7eda1bc5b291f30d9d7c/site%2Fsrc%2Fdocs%2Fconfiguration%2Fparameters%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/95966f6407241adc3bfe7eda1bc5b291f30d9d7c/site%2Fsrc%2Fdocs%2Fconfiguration%2Fparameters%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fconfiguration%2Fparameters%2Findex.md?ref=95966f6407241adc3bfe7eda1bc5b291f30d9d7c",
      "patch": "@@ -33,137 +33,137 @@ services:\n \n ### Complete parameters list\n \n-| Command line                   | Environment                    | Default                  | Description                                               |\n-|--------------------------------|--------------------------------|--------------------------|-----------------------------------------------------------|\n-| url                            | REMARK_URL                     |                          | URL to Remark42 server, _required_                        |\n-| secret                         | SECRET                         |                          | the shared secret key used to sign JWT, should be a random, long, hard-to-guess string, _required_ |\n-| site                           | SITE                           | `remark`                 | site name(s), _multi_                                     |\n-| store.type                     | STORE_TYPE                     | `bolt`                   | type of storage, `bolt` or `rpc`                          |\n-| store.bolt.path                | STORE_BOLT_PATH                | `./var`                  | parent directory for the bolt files                       |\n-| store.bolt.timeout             | STORE_BOLT_TIMEOUT             | `30s`                    | boltdb access timeout                                     |\n-| store.rpc.api                  | STORE_RPC_API                  |                          | rpc extension api url                                     |\n-| store.rpc.timeout              | STORE_RPC_TIMEOUT              |                          | http timeout (default: 5s)                                |\n-| store.rpc.auth_user            | STORE_RPC_AUTH_USER            |                          | basic auth user name                                      |\n-| store.rpc.auth_passwd          | STORE_RPC_AUTH_PASSWD          |                          | basic auth user password                                  |\n-| admin.type                     | ADMIN_TYPE                     | `shared`                 | type of admin store, `shared` or `rpc`                    |\n-| admin.rpc.api                  | ADMIN_RPC_API                  |                          | rpc extension api url                                     |\n-| admin.rpc.timeout              | ADMIN_RPC_TIMEOUT              |                          | http timeout (default: 5s)                                |\n-| admin.rpc.auth_user            | ADMIN_RPC_AUTH_USER            |                          | basic auth user name                                      |\n-| admin.rpc.auth_passwd          | ADMIN_RPC_AUTH_PASSWD          |                          | basic auth user password                                  |\n-| admin.rpc.secret_per_site      | ADMIN_RPC_SECRET_PER_SITE      |                          | enable JWT secret retrieval per aud, which is site_id in this case |\n-| admin.shared.id                | ADMIN_SHARED_ID                |                          | admin IDs (list of user IDs), _multi_                     |\n-| admin.shared.email             | ADMIN_SHARED_EMAIL             | `admin@${REMARK_URL}`    | admin emails, _multi_                                     |\n-| backup                         | BACKUP_PATH                    | `./var/backup`           | backups location                                          |\n-| max-back                       | MAX_BACKUP_FILES               | `10`                     | max backup files to keep                                  |\n-| cache.type                     | CACHE_TYPE                     | `mem`                    | type of cache, `redis_pub_sub` or `mem` or `none`         |\n-| cache.redis_addr               | CACHE_REDIS_ADDR               | `127.0.0.1:6379`         | address of Redis PubSub instance, turn `redis_pub_sub` cache on for distributed cache |\n-| cache.max.items                | CACHE_MAX_ITEMS                | `1000`                   | max number of cached items, `0` - unlimited               |\n-| cache.max.value                | CACHE_MAX_VALUE                | `65536`                  | max size of the cached value, `0` - unlimited             |\n-| cache.max.size                 | CACHE_MAX_SIZE                 | `50000000`               | max size of all cached values, `0` - unlimited            |\n-| avatar.type                    | AVATAR_TYPE                    | `fs`                     | type of avatar storage, `fs`, `bolt`, or `uri`            |\n-| avatar.fs.path                 | AVATAR_FS_PATH                 | `./var/avatars`          | avatars location for `fs` store                           |\n-| avatar.bolt.file               | AVATAR_BOLT_FILE               | `./var/avatars.db`       | avatars `bolt` file location                              |\n-| avatar.uri                     | AVATAR_URI                     | `./var/avatars`          | avatars store URI                                         |\n-| avatar.rsz-lmt                 | AVATAR_RESIZE                  | `0` (disabled)           | max image size for resizing avatars on save               |\n-| image.type                     | IMAGE_TYPE                     | `fs`                     | type of image storage, `fs`, `bolt` or `rpc`              |\n-| image.fs.path                  | IMAGE_FS_PATH                  | `./var/pictures`         | permanent location of images                              |\n-| image.fs.staging               | IMAGE_FS_STAGING               | `./var/pictures.staging` | staging location of images                                |\n-| image.fs.partitions            | IMAGE_FS_PARTITIONS            | `100`                    | number of image partitions                                |\n-| image.bolt.file                | IMAGE_BOLT_FILE                | `/var/pictures.db`       | images bolt file location                                 |\n-| image.rpc.api                  | IMAGE_RPC_API                  |                          | rpc extension api url                                     |\n-| image.rpc.timeout              | IMAGE_RPC_TIMEOUT              |                          | http timeout (default: 5s)                                |\n-| image.rpc.auth_user            | IMAGE_RPC_AUTH_USER            |                          | basic auth user name                                      |\n-| image.rpc.auth_passwd          | IMAGE_RPC_AUTH_PASSWD          |                          | basic auth user password                                  |\n-| image.max-size                 | IMAGE_MAX_SIZE                 | `5000000`                | max size of image file                                    |\n-| image.resize-width             | IMAGE_RESIZE_WIDTH             | `2400`                   | width of a resized image                                  |\n-| image.resize-height            | IMAGE_RESIZE_HEIGHT            | `900`                    | height of a resized image                                 |\n-| auth.ttl.jwt                   | AUTH_TTL_JWT                   | `5m`                     | JWT TTL                                                   |\n-| auth.ttl.cookie                | AUTH_TTL_COOKIE                | `200h`                   | cookie TTL                                                |\n-| auth.send-jwt-header           | AUTH_SEND_JWT_HEADER           | `false`                  | send JWT as a header instead of a cookie                  |\n-| auth.same-site                 | AUTH_SAME_SITE                 | `default`                | set same site policy for cookies (`default`, `none`, `lax` or `strict`) |\n-| auth.apple.cid                 | AUTH_APPLE_CID                 |                          | Apple client ID                                           |\n-| auth.apple.tid                 | AUTH_APPLE_TID                 |                          | Apple service ID                                          |\n-| auth.apple.kid                 | AUTH_APPLE_KID                 |                          | Private key ID                                            |\n-| auth.apple.private-key-filepath | AUTH_APPLE_PRIVATE_KEY_FILEPATH | `/srv/var/apple.p8`        | Private key file location                                 |\n-| auth.google.cid                | AUTH_GOOGLE_CID                |                          | Google OAuth client ID                                    |\n-| auth.google.csec               | AUTH_GOOGLE_CSEC               |                          | Google OAuth client secret                                |\n-| auth.facebook.cid              | AUTH_FACEBOOK_CID              |                          | Facebook OAuth client ID                                  |\n-| auth.facebook.csec             | AUTH_FACEBOOK_CSEC             |                          | Facebook OAuth client secret                              |\n-| auth.microsoft.cid             | AUTH_MICROSOFT_CID             |                          | Microsoft OAuth client ID                                 |\n-| auth.microsoft.csec            | AUTH_MICROSOFT_CSEC            |                          | Microsoft OAuth client secret                             |\n-| auth.github.cid                | AUTH_GITHUB_CID                |                          | GitHub OAuth client ID                                    |\n-| auth.github.csec               | AUTH_GITHUB_CSEC               |                          | GitHub OAuth client secret                                |\n-| auth.twitter.cid               | AUTH_TWITTER_CID               |                          | Twitter Consumer API Key                                  |\n-| auth.twitter.csec              | AUTH_TWITTER_CSEC              |                          | Twitter Consumer API Secret key                           |\n-| auth.patreon.cid               | AUTH_PATREON_CID               |                          | Patreon OAuth Client ID                                   |\n-| auth.patreon.csec              | AUTH_PATREON_CSEC              |                          | Patreon OAuth Client Secret                               |\n-| auth.telegram                  | AUTH_TELEGRAM                  | `false`                  | Enable Telegram auth (telegram.token must be present)     |\n-| auth.yandex.cid                | AUTH_YANDEX_CID                |                          | Yandex OAuth client ID                                    |\n-| auth.yandex.csec               | AUTH_YANDEX_CSEC               |                          | Yandex OAuth client secret                                |\n-| auth.dev                       | AUTH_DEV                       | `false`                  | local OAuth2 server, development mode only                |\n-| auth.anon                      | AUTH_ANON                      | `false`                  | enable anonymous login                                    |\n-| auth.email.enable              | AUTH_EMAIL_ENABLE              | `false`                  | enable auth via email                                     |\n-| auth.email.from                | AUTH_EMAIL_FROM                |                          | email from (e.g. `john.doe@example.com` or `\"John Doe\"<john.doe@example.com>`) |\n-| auth.email.subj                | AUTH_EMAIL_SUBJ                | `remark42 confirmation`  | email subject                                             |\n-| auth.email.content-type        | AUTH_EMAIL_CONTENT_TYPE        | `text/html`              | email content type                                        |\n-| notify.users                   | NOTIFY_USERS                   | none                     | type of user notifications (`telegram`, `email`), _multi_ |\n-| notify.admins                  | NOTIFY_ADMINS                  | none                     | type of admin notifications (`telegram`, `slack`, `webhook` and/or `email`), _multi_ |\n-| notify.queue                   | NOTIFY_QUEUE                   | `100`                    | size of notification queue                                |\n-| notify.telegram.chan           | NOTIFY_TELEGRAM_CHAN           |                          | the ID of telegram channel for admin notifications        |\n-| notify.slack.token             | NOTIFY_SLACK_TOKEN             |                          | Slack token                                               |\n-| notify.slack.chan              | NOTIFY_SLACK_CHAN              | `general`                | Slack channel for admin notifications                     |\n-| notify.webhook.url             | NOTIFY_WEBHOOK_URL             |                          | Webhook notification URL for admin notifications          |\n-| notify.webhook.template        | NOTIFY_WEBHOOK_TEMPLATE        | `{\"text\": \"{{.Text}}\"}`  | Webhook payload template                                  |\n-| notify.webhook.headers         | NOTIFY_WEBHOOK_HEADERS         |                          | HTTP header in format Header1:Value1,Header2:Value2,...   |\n-| notify.webhook.timeout         | NOTIFY_WEBHOOK_TIMEOUT         | `5s`                     | Webhook connection timeout                                |\n-| notify.email.from_address      | NOTIFY_EMAIL_FROM              |                          | from email address (e.g. `john.doe@example.com` or `\"John Doe\"<john.doe@example.com>`) |\n-| notify.email.verification_subj | NOTIFY_EMAIL_VERIFICATION_SUBJ | `Email verification`     | verification message subject                              |\n-| telegram.token                 | TELEGRAM_TOKEN                 |                          | Telegram token (used for auth and Telegram notifications) |\n-| telegram.timeout               | TELEGRAM_TIMEOUT               | `5s`                     | Telegram connection timeout                               |\n-| smtp.host                      | SMTP_HOST                      |                          | SMTP host                                                 |\n-| smtp.port                      | SMTP_PORT                      |                          | SMTP port                                                 |\n-| smtp.username                  | SMTP_USERNAME                  |                          | SMTP user name                                            |\n-| smtp.password                  | SMTP_PASSWORD                  |                          | SMTP password                                             |\n-| smtp.login_auth                | SMTP_LOGIN_AUTH                | `false                   | enable LOGIN auth instead of PLAIN                        |\n-| smtp.tls                       | SMTP_TLS                       | `false`                  | enable TLS for SMTP                                       |\n-| smtp.starttls                  | SMTP_STARTTLS                  | `false`                  | enable StartTLS for SMTP                                  |\n-| smtp.insecure_skip_verify      | SMTP_INSECURE_SKIP_VERIFY      | `false`                  | skip certificate verification for SMTP                    |\n-| smtp.timeout                   | SMTP_TIMEOUT                   | `10s`                    | SMTP TCP connection timeout                               |\n-| ssl.type                       | SSL_TYPE                       | none                     | `none`-HTTP, `static`-HTTPS, `auto`-HTTPS + le            |\n-| ssl.port                       | SSL_PORT                       | `8443`                   | port for HTTPS server                                     |\n-| ssl.cert                       | SSL_CERT                       |                          | path to the cert.pem file                                 |\n-| ssl.key                        | SSL_KEY                        |                          | path to the key.pem file                                  |\n-| ssl.acme-location              | SSL_ACME_LOCATION              | `./var/acme`             | dir where obtained le-certs will be stored                |\n-| ssl.acme-email                 | SSL_ACME_EMAIL                 |                          | admin email for receiving notifications from LE           |\n-| max-comment                    | MAX_COMMENT_SIZE               | `2048`                   | comment's size limit                                      |\n-| min-comment                    | MIN_COMMENT_SIZE               | `0`                      | comment's minimal size limit, `0` - unlimited             |\n-| max-votes                      | MAX_VOTES                      | `-1`                     | votes limit per comment, `-1` - unlimited                 |\n-| votes-ip                       | VOTES_IP                       | `false`                  | restrict votes from the same IP                           |\n-| anon-vote                      | ANON_VOTE                      | `false`                  | allow voting for anonymous users, require VOTES_IP to be enabled as well |\n-| votes-ip-time                  | VOTES_IP_TIME                  | `5m`                     | same IP vote restriction time, `0s` - unlimited           |\n-| low-score                      | LOW_SCORE                      | `-5`                     | low score threshold                                       |\n-| critical-score                 | CRITICAL_SCORE                 | `-10`                    | critical score threshold                                  |\n-| positive-score                 | POSITIVE_SCORE                 | `false`                  | restricts comment's score to be only positive             |\n-| restricted-words               | RESTRICTED_WORDS               |                          | words banned in comments (can use `*`), _multi_           |\n-| restricted-names               | RESTRICTED_NAMES               |                          | names prohibited to use by the user, _multi_              |\n-| edit-time                      | EDIT_TIME                      | `5m`                     | edit window                                               |\n-| admin-edit                     | ADMIN_EDIT                     | `false`                  | unlimited edit for admins                                 |\n-| read-age                       | READONLY_AGE                   |                          | read-only age of comments, days                           |\n-| image-proxy.http2https         | IMAGE_PROXY_HTTP2HTTPS         | `false`                  | enable HTTP->HTTPS proxy for images                       |\n-| image-proxy.cache-external     | IMAGE_PROXY_CACHE_EXTERNAL     | `false`                  | enable caching external images to current image storage   |\n-| emoji                          | EMOJI                          | `false`                  | enable emoji support                                      |\n-| simple-view                    | SIMPLE_VIEW                    | `false`                  | minimized UI with basic info only                         |\n-| proxy-cors                     | PROXY_CORS                     | `false`                  | disable internal CORS and delegate it to proxy            |\n-| allowed-hosts                  | ALLOWED_HOSTS                  | enable all               | limit hosts/sources allowed to embed comments             |\n-| address                        | REMARK_ADDRESS                 | all interfaces           | web server listening address                              |\n-| port                           | REMARK_PORT                    | `8080`                   | web server port                                           |\n-| web-root                       | REMARK_WEB_ROOT                | `./web`                  | web server root directory                                 |\n-| update-limit                   | UPDATE_LIMIT                   | `0.5`                    | updates/sec limit                                         |\n-| subscribers-only               | SUBSCRIBERS_ONLY               | `false`                  | enable commenting only for Patreon subscribers            |\n-| disable-signature              | DISABLE_SIGNATURE              | `false`                  | disable server signature in headers                       |\n-| disable-fancy-text-formatting  | DISABLE_FANCY_HTML_FORMATTING  | `false`                  | disable fancy comments text formatting (replacement of quotes, dashes, fractions, etc) |\n-| admin-passwd                   | ADMIN_PASSWD                   | none (disabled)          | password for `admin` basic auth                           |\n-| dbg                            | DEBUG                          | `false`                  | debug mode                                                |\n+| Command line                   | Environment                    | Default                 | Description                                              |\n+|--------------------------------|--------------------------------|-------------------------|----------------------------------------------------------|\n+| url                            | REMARK_URL                     |                         | URL to Remark42 server, _required_                       |\n+| secret                         | SECRET                         |                         | the shared secret key used to sign JWT, should be a random, long, hard-to-guess string, _required_ |\n+| site                           | SITE                           | `remark`                | site name(s), _multi_                                    |\n+| store.type                     | STORE_TYPE                     | `bolt`                  | type of storage, `bolt` or `rpc`                         |\n+| store.bolt.path                | STORE_BOLT_PATH                | `./var`                 | parent directory for the bolt files                      |\n+| store.bolt.timeout             | STORE_BOLT_TIMEOUT             | `30s`                   | boltdb access timeout                                    |\n+| store.rpc.api                  | STORE_RPC_API                  |                         | rpc extension api url                                    |\n+| store.rpc.timeout              | STORE_RPC_TIMEOUT              |                         | http timeout (default: 5s)                               |\n+| store.rpc.auth_user            | STORE_RPC_AUTH_USER            |                         | basic auth user name                                     |\n+| store.rpc.auth_passwd          | STORE_RPC_AUTH_PASSWD          |                         | basic auth user password                                 |\n+| admin.type                     | ADMIN_TYPE                     | `shared`                | type of admin store, `shared` or `rpc`                   |\n+| admin.rpc.api                  | ADMIN_RPC_API                  |                         | rpc extension api url                                    |\n+| admin.rpc.timeout              | ADMIN_RPC_TIMEOUT              |                         | http timeout (default: 5s)                               |\n+| admin.rpc.auth_user            | ADMIN_RPC_AUTH_USER            |                         | basic auth user name                                     |\n+| admin.rpc.auth_passwd          | ADMIN_RPC_AUTH_PASSWD          |                         | basic auth user password                                 |\n+| admin.rpc.secret_per_site      | ADMIN_RPC_SECRET_PER_SITE      |                         | enable JWT secret retrieval per aud, which is site_id in this case |\n+| admin.shared.id                | ADMIN_SHARED_ID                |                         | admin IDs (list of user IDs), _multi_                    |\n+| admin.shared.email             | ADMIN_SHARED_EMAIL             | `admin@${REMARK_URL}`   | admin emails, _multi_                                    |\n+| backup                         | BACKUP_PATH                    | `./var/backup`          | backups location                                         |\n+| max-back                       | MAX_BACKUP_FILES               | `10`                    | max backup files to keep                                 |\n+| cache.type                     | CACHE_TYPE                     | `mem`                   | type of cache, `redis_pub_sub` or `mem` or `none`        |\n+| cache.redis_addr               | CACHE_REDIS_ADDR               | `127.0.0.1:6379`        | address of Redis PubSub instance, turn `redis_pub_sub` cache on for distributed cache |\n+| cache.max.items                | CACHE_MAX_ITEMS                | `1000`                  | max number of cached items, `0` - unlimited              |\n+| cache.max.value                | CACHE_MAX_VALUE                | `65536`                 | max size of the cached value, `0` - unlimited            |\n+| cache.max.size                 | CACHE_MAX_SIZE                 | `50000000`              | max size of all cached values, `0` - unlimited           |\n+| avatar.type                    | AVATAR_TYPE                    | `fs`                    | type of avatar storage, `fs`, `bolt`, or `uri`           |\n+| avatar.fs.path                 | AVATAR_FS_PATH                 | `./var/avatars`         | avatars location for `fs` store                          |\n+| avatar.bolt.file               | AVATAR_BOLT_FILE               | `./var/avatars.db`      | avatars `bolt` file location                             |\n+| avatar.uri                     | AVATAR_URI                     | `./var/avatars`         | avatars store URI                                        |\n+| avatar.rsz-lmt                 | AVATAR_RESIZE                  | `0` (disabled)          | max image size for resizing avatars on save              |\n+| image.type                     | IMAGE_TYPE                     | `fs`                    | type of image storage, `fs`, `bolt` or `rpc`             |\n+| image.fs.path                  | IMAGE_FS_PATH                  | `./var/pictures`        | permanent location of images                             |\n+| image.fs.staging               | IMAGE_FS_STAGING               | `./var/pictures.staging` | staging location of images                               |\n+| image.fs.partitions            | IMAGE_FS_PARTITIONS            | `100`                   | number of image partitions                               |\n+| image.bolt.file                | IMAGE_BOLT_FILE                | `/var/pictures.db`      | images bolt file location                                |\n+| image.rpc.api                  | IMAGE_RPC_API                  |                         | rpc extension api url                                    |\n+| image.rpc.timeout              | IMAGE_RPC_TIMEOUT              |                         | http timeout (default: 5s)                               |\n+| image.rpc.auth_user            | IMAGE_RPC_AUTH_USER            |                         | basic auth user name                                     |\n+| image.rpc.auth_passwd          | IMAGE_RPC_AUTH_PASSWD          |                         | basic auth user password                                 |\n+| image.max-size                 | IMAGE_MAX_SIZE                 | `5000000`               | max size of image file                                   |\n+| image.resize-width             | IMAGE_RESIZE_WIDTH             | `2400`                  | width of a resized image                                 |\n+| image.resize-height            | IMAGE_RESIZE_HEIGHT            | `900`                   | height of a resized image                                |\n+| auth.ttl.jwt                   | AUTH_TTL_JWT                   | `5m`                    | JWT TTL                                                  |\n+| auth.ttl.cookie                | AUTH_TTL_COOKIE                | `200h`                  | cookie TTL                                               |\n+| auth.send-jwt-header           | AUTH_SEND_JWT_HEADER           | `false`                 | send JWT as a header instead of a cookie                 |\n+| auth.same-site                 | AUTH_SAME_SITE                 | `default`               | set same site policy for cookies (`default`, `none`, `lax` or `strict`) |\n+| auth.apple.cid                 | AUTH_APPLE_CID                 |                         | Apple client ID                                          |\n+| auth.apple.tid                 | AUTH_APPLE_TID                 |                         | Apple service ID                                         |\n+| auth.apple.kid                 | AUTH_APPLE_KID                 |                         | Private key ID                                           |\n+| auth.apple.private-key-filepath | AUTH_APPLE_PRIVATE_KEY_FILEPATH | `/srv/var/apple.p8`       | Private key file location                                |\n+| auth.google.cid                | AUTH_GOOGLE_CID                |                         | Google OAuth client ID                                   |\n+| auth.google.csec               | AUTH_GOOGLE_CSEC               |                         | Google OAuth client secret                               |\n+| auth.facebook.cid              | AUTH_FACEBOOK_CID              |                         | Facebook OAuth client ID                                 |\n+| auth.facebook.csec             | AUTH_FACEBOOK_CSEC             |                         | Facebook OAuth client secret                             |\n+| auth.microsoft.cid             | AUTH_MICROSOFT_CID             |                         | Microsoft OAuth client ID                                |\n+| auth.microsoft.csec            | AUTH_MICROSOFT_CSEC            |                         | Microsoft OAuth client secret                            |\n+| auth.github.cid                | AUTH_GITHUB_CID                |                         | GitHub OAuth client ID                                   |\n+| auth.github.csec               | AUTH_GITHUB_CSEC               |                         | GitHub OAuth client secret                               |\n+| auth.twitter.cid               | AUTH_TWITTER_CID               |                         | Twitter Consumer API Key                                 |\n+| auth.twitter.csec              | AUTH_TWITTER_CSEC              |                         | Twitter Consumer API Secret key                          |\n+| auth.patreon.cid               | AUTH_PATREON_CID               |                         | Patreon OAuth Client ID                                  |\n+| auth.patreon.csec              | AUTH_PATREON_CSEC              |                         | Patreon OAuth Client Secret                              |\n+| auth.telegram                  | AUTH_TELEGRAM                  | `false`                 | Enable Telegram auth (telegram.token must be present)    |\n+| auth.yandex.cid                | AUTH_YANDEX_CID                |                         | Yandex OAuth client ID                                   |\n+| auth.yandex.csec               | AUTH_YANDEX_CSEC               |                         | Yandex OAuth client secret                               |\n+| auth.dev                       | AUTH_DEV                       | `false`                 | local OAuth2 server, development mode only               |\n+| auth.anon                      | AUTH_ANON                      | `false`                 | enable anonymous login                                   |\n+| auth.email.enable              | AUTH_EMAIL_ENABLE              | `false`                 | enable auth via email                                    |\n+| auth.email.from                | AUTH_EMAIL_FROM                |                         | email from (e.g. `john.doe@example.com` or `\"John Doe\"<john.doe@example.com>`) |\n+| auth.email.subj                | AUTH_EMAIL_SUBJ                | `remark42 confirmation` | email subject                                            |\n+| auth.email.content-type        | AUTH_EMAIL_CONTENT_TYPE        | `text/html`             | email content type                                       |\n+| notify.users                   | NOTIFY_USERS                   | none                    | type of user notifications (`telegram`, `email`), _multi_ |\n+| notify.admins                  | NOTIFY_ADMINS                  | none                    | type of admin notifications (`telegram`, `slack`, `webhook` and/or `email`), _multi_ |\n+| notify.queue                   | NOTIFY_QUEUE                   | `100`                   | size of notification queue                               |\n+| notify.telegram.chan           | NOTIFY_TELEGRAM_CHAN           |                         | the ID of telegram channel for admin notifications       |\n+| notify.slack.token             | NOTIFY_SLACK_TOKEN             |                         | Slack token                                              |\n+| notify.slack.chan              | NOTIFY_SLACK_CHAN              | `general`               | Slack channel for admin notifications                    |\n+| notify.webhook.url             | NOTIFY_WEBHOOK_URL             |                         | Webhook notification URL for admin notifications         |\n+| notify.webhook.template        | NOTIFY_WEBHOOK_TEMPLATE        | `{\"text\": {{.Text | escapeJSONString}}}`  | Webhook payload template                 |\n+| notify.webhook.headers         | NOTIFY_WEBHOOK_HEADERS         |                         | HTTP header in format Header1:Value1,Header2:Value2,...  |\n+| notify.webhook.timeout         | NOTIFY_WEBHOOK_TIMEOUT         | `5s`                    | Webhook connection timeout                               |\n+| notify.email.from_address      | NOTIFY_EMAIL_FROM              |                         | from email address (e.g. `john.doe@example.com` or `\"John Doe\"<john.doe@example.com>`) |\n+| notify.email.verification_subj | NOTIFY_EMAIL_VERIFICATION_SUBJ | `Email verification`    | verification message subject                             |\n+| telegram.token                 | TELEGRAM_TOKEN                 |                         | Telegram token (used for auth and Telegram notifications) |\n+| telegram.timeout               | TELEGRAM_TIMEOUT               | `5s`                    | Telegram connection timeout                              |\n+| smtp.host                      | SMTP_HOST                      |                         | SMTP host                                                |\n+| smtp.port                      | SMTP_PORT                      |                         | SMTP port                                                |\n+| smtp.username                  | SMTP_USERNAME                  |                         | SMTP user name                                           |\n+| smtp.password                  | SMTP_PASSWORD                  |                         | SMTP password                                            |\n+| smtp.login_auth                | SMTP_LOGIN_AUTH                | `false                  | enable LOGIN auth instead of PLAIN                       |\n+| smtp.tls                       | SMTP_TLS                       | `false`                 | enable TLS for SMTP                                      |\n+| smtp.starttls                  | SMTP_STARTTLS                  | `false`                 | enable StartTLS for SMTP                                 |\n+| smtp.insecure_skip_verify      | SMTP_INSECURE_SKIP_VERIFY      | `false`                 | skip certificate verification for SMTP                   |\n+| smtp.timeout                   | SMTP_TIMEOUT                   | `10s`                   | SMTP TCP connection timeout                              |\n+| ssl.type                       | SSL_TYPE                       | none                    | `none`-HTTP, `static`-HTTPS, `auto`-HTTPS + le           |\n+| ssl.port                       | SSL_PORT                       | `8443`                  | port for HTTPS server                                    |\n+| ssl.cert                       | SSL_CERT                       |                         | path to the cert.pem file                                |\n+| ssl.key                        | SSL_KEY                        |                         | path to the key.pem file                                 |\n+| ssl.acme-location              | SSL_ACME_LOCATION              | `./var/acme`            | dir where obtained le-certs will be stored               |\n+| ssl.acme-email                 | SSL_ACME_EMAIL                 |                         | admin email for receiving notifications from LE          |\n+| max-comment                    | MAX_COMMENT_SIZE               | `2048`                  | comment's size limit                                     |\n+| min-comment                    | MIN_COMMENT_SIZE               | `0`                     | comment's minimal size limit, `0` - unlimited            |\n+| max-votes                      | MAX_VOTES                      | `-1`                    | votes limit per comment, `-1` - unlimited                |\n+| votes-ip                       | VOTES_IP                       | `false`                 | restrict votes from the same IP                          |\n+| anon-vote                      | ANON_VOTE                      | `false`                 | allow voting for anonymous users, require VOTES_IP to be enabled as well |\n+| votes-ip-time                  | VOTES_IP_TIME                  | `5m`                    | same IP vote restriction time, `0s` - unlimited          |\n+| low-score                      | LOW_SCORE                      | `-5`                    | low score threshold                                      |\n+| critical-score                 | CRITICAL_SCORE                 | `-10`                   | critical score threshold                                 |\n+| positive-score                 | POSITIVE_SCORE                 | `false`                 | restricts comment's score to be only positive            |\n+| restricted-words               | RESTRICTED_WORDS               |                         | words banned in comments (can use `*`), _multi_          |\n+| restricted-names               | RESTRICTED_NAMES               |                         | names prohibited to use by the user, _multi_             |\n+| edit-time                      | EDIT_TIME                      | `5m`                    | edit window                                              |\n+| admin-edit                     | ADMIN_EDIT                     | `false`                 | unlimited edit for admins                                |\n+| read-age                       | READONLY_AGE                   |                         | read-only age of comments, days                          |\n+| image-proxy.http2https         | IMAGE_PROXY_HTTP2HTTPS         | `false`                 | enable HTTP->HTTPS proxy for images                      |\n+| image-proxy.cache-external     | IMAGE_PROXY_CACHE_EXTERNAL     | `false`                 | enable caching external images to current image storage  |\n+| emoji                          | EMOJI                          | `false`                 | enable emoji support                                     |\n+| simple-view                    | SIMPLE_VIEW                    | `false`                 | minimized UI with basic info only                        |\n+| proxy-cors                     | PROXY_CORS                     | `false`                 | disable internal CORS and delegate it to proxy           |\n+| allowed-hosts                  | ALLOWED_HOSTS                  | enable all              | limit hosts/sources allowed to embed comments            |\n+| address                        | REMARK_ADDRESS                 | all interfaces          | web server listening address                             |\n+| port                           | REMARK_PORT                    | `8080`                  | web server port                                          |\n+| web-root                       | REMARK_WEB_ROOT                | `./web`                 | web server root directory                                |\n+| update-limit                   | UPDATE_LIMIT                   | `0.5`                   | updates/sec limit                                        |\n+| subscribers-only               | SUBSCRIBERS_ONLY               | `false`                 | enable commenting only for Patreon subscribers           |\n+| disable-signature              | DISABLE_SIGNATURE              | `false`                 | disable server signature in headers                      |\n+| disable-fancy-text-formatting  | DISABLE_FANCY_HTML_FORMATTING  | `false`                 | disable fancy comments text formatting (replacement of quotes, dashes, fractions, etc) |\n+| admin-passwd                   | ADMIN_PASSWD                   | none (disabled)         | password for `admin` basic auth                          |\n+| dbg                            | DEBUG                          | `false`                 | debug mode                                               |\n \n - command-line parameters are long-form `--<key>=value`, i.e., `--site=https://demo.remark42.com`\n - _multi_ parameters separated by `,` in the environment or repeated with command-line keys, like `--site=s1 --site=s2 ...`"
    }
  ]
}
