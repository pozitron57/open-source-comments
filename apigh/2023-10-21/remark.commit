{
  "sha": "69b18d3536d8b55f2806d90bfacd4c6a92fdbffa",
  "node_id": "C_kwDOBtgov9oAKDY5YjE4ZDM1MzZkOGI1NWYyODA2ZDkwYmZhY2Q0YzZhOTJmZGJmZmE",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2023-10-10T23:40:18Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2023-10-11T04:36:04Z"
    },
    "message": "fix wrapped errors checks\n\nAs errors can be wrapped in recent versions of Go, the proper way\nto check the error types are `errors.As` and `errors.Is`.",
    "tree": {
      "sha": "eb3de1b4771010bc50f7f73bccaa9ed9ddc4f7d5",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/eb3de1b4771010bc50f7f73bccaa9ed9ddc4f7d5"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/69b18d3536d8b55f2806d90bfacd4c6a92fdbffa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/69b18d3536d8b55f2806d90bfacd4c6a92fdbffa",
  "html_url": "https://github.com/umputun/remark42/commit/69b18d3536d8b55f2806d90bfacd4c6a92fdbffa",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/69b18d3536d8b55f2806d90bfacd4c6a92fdbffa/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "efceed6f68b763029ccfac12b642693a5b0f1f75",
      "url": "https://api.github.com/repos/umputun/remark42/commits/efceed6f68b763029ccfac12b642693a5b0f1f75",
      "html_url": "https://github.com/umputun/remark42/commit/efceed6f68b763029ccfac12b642693a5b0f1f75"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 6,
    "deletions": 3
  },
  "files": [
    {
      "sha": "87bdff7be6d899aa05671ec9c21ebbe305e3a060",
      "filename": "backend/app/main.go",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/69b18d3536d8b55f2806d90bfacd4c6a92fdbffa/backend%2Fapp%2Fmain.go",
      "raw_url": "https://github.com/umputun/remark42/raw/69b18d3536d8b55f2806d90bfacd4c6a92fdbffa/backend%2Fapp%2Fmain.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Fmain.go?ref=69b18d3536d8b55f2806d90bfacd4c6a92fdbffa",
      "patch": "@@ -1,6 +1,7 @@\n package main\n \n import (\n+\t\"errors\"\n \t\"fmt\"\n \t\"os\"\n \t\"os/signal\"\n@@ -55,7 +56,8 @@ func main() {\n \t}\n \n \tif _, err := p.Parse(); err != nil {\n-\t\tif flagsErr, ok := err.(*flags.Error); ok && flagsErr.Type == flags.ErrHelp {\n+\t\tvar flagsErr *flags.Error\n+\t\tif errors.As(err, &flagsErr) && flagsErr.Type == flags.ErrHelp {\n \t\t\tos.Exit(0)\n \t\t}\n \t\tos.Exit(1)"
    },
    {
      "sha": "1b974406422552f291f34b96d4f6078241efffb9",
      "filename": "backend/app/rest/api/rest_private.go",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/69b18d3536d8b55f2806d90bfacd4c6a92fdbffa/backend%2Fapp%2Frest%2Fapi%2Frest_private.go",
      "raw_url": "https://github.com/umputun/remark42/raw/69b18d3536d8b55f2806d90bfacd4c6a92fdbffa/backend%2Fapp%2Frest%2Fapi%2Frest_private.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Frest%2Fapi%2Frest_private.go?ref=69b18d3536d8b55f2806d90bfacd4c6a92fdbffa",
      "patch": "@@ -6,6 +6,7 @@ import (\n \t\"crypto/rand\"\n \t\"crypto/sha1\" //nolint:gosec //not used for security\n \t\"encoding/json\"\n+\t\"errors\"\n \t\"fmt\"\n \t\"html/template\"\n \t\"io\"\n@@ -150,7 +151,7 @@ func (s *private) createCommentCtrl(w http.ResponseWriter, r *http.Request) {\n \t}\n \n \tid, err := s.dataService.Create(comment)\n-\tif err == service.ErrRestrictedWordsFound {\n+\tif errors.Is(err, service.ErrRestrictedWordsFound) {\n \t\trest.SendErrorJSON(w, r, http.StatusBadRequest, err, \"invalid comment\", rest.ErrCommentRestrictWords)\n \t\treturn\n \t}\n@@ -219,7 +220,7 @@ func (s *private) updateCommentCtrl(w http.ResponseWriter, r *http.Request) {\n \t}\n \n \tres, err := s.dataService.EditComment(locator, id, editReq)\n-\tif err == service.ErrRestrictedWordsFound {\n+\tif errors.Is(err, service.ErrRestrictedWordsFound) {\n \t\trest.SendErrorJSON(w, r, http.StatusBadRequest, err, \"invalid comment\", rest.ErrCommentValidation)\n \t\treturn\n \t}"
    }
  ]
}
