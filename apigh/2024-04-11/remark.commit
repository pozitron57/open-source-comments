{
  "sha": "4bb0017060540a8364675762345c93426981fd29",
  "node_id": "C_kwDOBtgov9oAKDRiYjAwMTcwNjA1NDBhODM2NDY3NTc2MjM0NWM5MzQyNjk4MWZkMjk",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2024-04-10T21:48:47Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2024-04-11T00:33:20Z"
    },
    "message": "update go modules",
    "tree": {
      "sha": "a90a79181ca9b37f756a97e68e32991969769711",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/a90a79181ca9b37f756a97e68e32991969769711"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/4bb0017060540a8364675762345c93426981fd29",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/4bb0017060540a8364675762345c93426981fd29",
  "html_url": "https://github.com/umputun/remark42/commit/4bb0017060540a8364675762345c93426981fd29",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/4bb0017060540a8364675762345c93426981fd29/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e0423b8683d7d5a1f6817af22193fb3f9ba9348d",
      "url": "https://api.github.com/repos/umputun/remark42/commits/e0423b8683d7d5a1f6817af22193fb3f9ba9348d",
      "html_url": "https://github.com/umputun/remark42/commit/e0423b8683d7d5a1f6817af22193fb3f9ba9348d"
    }
  ],
  "stats": {
    "total": 5719,
    "additions": 3710,
    "deletions": 2009
  },
  "files": [
    {
      "sha": "33d67406459eea0eb1cd012320271676b6e895df",
      "filename": "backend/_example/memory_store/go.mod",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.mod?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -6,21 +6,21 @@ require (\n \tgithub.com/go-pkgz/jrpc v0.3.0\n \tgithub.com/go-pkgz/lgr v0.11.1\n \tgithub.com/jessevdk/go-flags v1.5.0\n-\tgithub.com/stretchr/testify v1.8.4\n+\tgithub.com/stretchr/testify v1.9.0\n \tgithub.com/umputun/remark42/backend v1.1000.0\n )\n \n require (\n \tgithub.com/Depado/bfchroma/v2 v2.0.0 // indirect\n-\tgithub.com/PuerkitoBio/goquery v1.8.1 // indirect\n+\tgithub.com/PuerkitoBio/goquery v1.9.1 // indirect\n \tgithub.com/ajg/form v1.5.1 // indirect\n-\tgithub.com/alecthomas/chroma/v2 v2.12.0 // indirect\n+\tgithub.com/alecthomas/chroma/v2 v2.13.0 // indirect\n \tgithub.com/andybalholm/cascadia v1.3.2 // indirect\n \tgithub.com/aymerick/douceur v0.2.0 // indirect\n \tgithub.com/davecgh/go-spew v1.1.1 // indirect\n \tgithub.com/didip/tollbooth/v7 v7.0.1 // indirect\n \tgithub.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f // indirect\n-\tgithub.com/dlclark/regexp2 v1.10.0 // indirect\n+\tgithub.com/dlclark/regexp2 v1.11.0 // indirect\n \tgithub.com/go-chi/chi/v5 v5.0.12 // indirect\n \tgithub.com/go-chi/render v1.0.3 // indirect\n \tgithub.com/go-pkgz/expirable-cache v1.0.0 // indirect\n@@ -32,10 +32,10 @@ require (\n \tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n \tgithub.com/rs/xid v1.5.0 // indirect\n \tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n-\tgo.etcd.io/bbolt v1.3.8 // indirect\n+\tgo.etcd.io/bbolt v1.3.9 // indirect\n \tgolang.org/x/image v0.15.0 // indirect\n-\tgolang.org/x/net v0.21.0 // indirect\n-\tgolang.org/x/sys v0.17.0 // indirect\n+\tgolang.org/x/net v0.24.0 // indirect\n+\tgolang.org/x/sys v0.19.0 // indirect\n \tgopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15 // indirect\n \tgopkg.in/yaml.v3 v3.0.1 // indirect\n )"
    },
    {
      "sha": "9d685b7fc6e643ac4ae1df3fff6b01eaee8146fb",
      "filename": "backend/_example/memory_store/go.sum",
      "status": "modified",
      "additions": 20,
      "deletions": 23,
      "changes": 43,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.sum?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -1,16 +1,15 @@\n github.com/Depado/bfchroma/v2 v2.0.0 h1:IRpN9BPkNwEpR6w1ectIcNWOuhDSLx+8f1pn83fzxx8=\n github.com/Depado/bfchroma/v2 v2.0.0/go.mod h1:wFwW/Pw8Tnd0irzgO9Zxtxgzp3aPS8qBWlyadxujxmw=\n-github.com/PuerkitoBio/goquery v1.8.1 h1:uQxhNlArOIdbrH1tr0UXwdVFgDcZDrZVdcpygAcwmWM=\n-github.com/PuerkitoBio/goquery v1.8.1/go.mod h1:Q8ICL1kNUJ2sXGoAhPGUdYDJvgQgHzJsnnd3H7Ho5jQ=\n+github.com/PuerkitoBio/goquery v1.9.1 h1:mTL6XjbJTZdpfL+Gwl5U2h1l9yEkJjhmlTeV9VPW7UI=\n+github.com/PuerkitoBio/goquery v1.9.1/go.mod h1:cW1n6TmIMDoORQU5IU/P1T3tGFunOeXEpGP2WHRwkbY=\n github.com/ajg/form v1.5.1 h1:t9c7v8JUKu/XxOGBU0yjNpaMloxGEJhUkqFRq0ibGeU=\n github.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\n-github.com/alecthomas/assert/v2 v2.2.1 h1:XivOgYcduV98QCahG8T5XTezV5bylXe+lBxLG2K2ink=\n-github.com/alecthomas/assert/v2 v2.2.1/go.mod h1:pXcQ2Asjp247dahGEmsZ6ru0UVwnkhktn7S0bBDLxvQ=\n-github.com/alecthomas/chroma/v2 v2.12.0 h1:Wh8qLEgMMsN7mgyG8/qIpegky2Hvzr4By6gEF7cmWgw=\n-github.com/alecthomas/chroma/v2 v2.12.0/go.mod h1:4TQu7gdfuPjSh76j78ietmqh9LiurGF0EpseFXdKMBw=\n-github.com/alecthomas/repr v0.2.0 h1:HAzS41CIzNW5syS8Mf9UwXhNH1J9aix/BvDRf1Ml2Yk=\n-github.com/alecthomas/repr v0.2.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\n-github.com/andybalholm/cascadia v1.3.1/go.mod h1:R4bJ1UQfqADjvDa4P6HZHLh/3OxWWEqc0Sk8XGwHqvA=\n+github.com/alecthomas/assert/v2 v2.6.0 h1:o3WJwILtexrEUk3cUVal3oiQY2tfgr/FHWiz/v2n4FU=\n+github.com/alecthomas/assert/v2 v2.6.0/go.mod h1:Bze95FyfUr7x34QZrjL+XP+0qgp/zg8yS+TtBj1WA3k=\n+github.com/alecthomas/chroma/v2 v2.13.0 h1:VP72+99Fb2zEcYM0MeaWJmV+xQvz5v5cxRHd+ooU1lI=\n+github.com/alecthomas/chroma/v2 v2.13.0/go.mod h1:BUGjjsD+ndS6eX37YgTchSEG+Jg9Jv1GiZs9sqPqztk=\n+github.com/alecthomas/repr v0.4.0 h1:GhI2A8MACjfegCPVq9f1FLvIBS+DrQ2KQBFZP1iFzXc=\n+github.com/alecthomas/repr v0.4.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\n github.com/andybalholm/cascadia v1.3.2 h1:3Xi6Dw5lHF15JtdcmAHD3i1+T8plmv7BQ/nsViSLyss=\n github.com/andybalholm/cascadia v1.3.2/go.mod h1:7gtRlve5FxPPgIgX36uWBX58OdBsSS6lUvCFb+h7KvU=\n github.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=\n@@ -23,8 +22,8 @@ github.com/didip/tollbooth/v7 v7.0.1 h1:TkT4sBKoQoHQFPf7blQ54iHrZiTDnr8TceU+MulV\n github.com/didip/tollbooth/v7 v7.0.1/go.mod h1:VZhDSGl5bDSPj4wPsih3PFa4Uh9Ghv8hgacaTm5PRT4=\n github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f h1:jtKwihcLmUC9BAhoJ9adCUqdSSZcOdH2KL7mPTUm2aw=\n github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f/go.mod h1:q9C80dnsuVRP2dAskjnXRNWdUJqtGgwG9wNrzt0019s=\n-github.com/dlclark/regexp2 v1.10.0 h1:+/GIL799phkJqYW+3YbOd8LCcbHzT0Pbo8zl70MHsq0=\n-github.com/dlclark/regexp2 v1.10.0/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\n+github.com/dlclark/regexp2 v1.11.0 h1:G/nrcoOa7ZXlpoa/91N3X7mM3r8eIlMBBJZvsz/mxKI=\n+github.com/dlclark/regexp2 v1.11.0/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\n github.com/go-chi/chi/v5 v5.0.7/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n github.com/go-chi/chi/v5 v5.0.12 h1:9euLV5sTrTNTRUU9POmDUvfxyj6LAABLUcEWO+JJb4s=\n github.com/go-chi/chi/v5 v5.0.12/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n@@ -71,11 +70,11 @@ github.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSS\n github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\n-github.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\n-github.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\n+github.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\n+github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\n github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\n-go.etcd.io/bbolt v1.3.8 h1:xs88BrvEv273UsB79e0hcVrlUWmS0a8upikMFhSyAtA=\n-go.etcd.io/bbolt v1.3.8/go.mod h1:N9Mkw9X8x5fupy0IKsmuqVtoGDyxsaDlbk4Rd05IAQw=\n+go.etcd.io/bbolt v1.3.9 h1:8x7aARPEXiXbHmtUwAIv7eV2fQFHrLLavdiJ3uzJXoI=\n+go.etcd.io/bbolt v1.3.9/go.mod h1:zaO32+Ti0PK1ivdPtgMESzuzL2VPoIG1PCQNvOdo/dE=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\n golang.org/x/image v0.15.0 h1:kOELfmgrmJlw4Cdb7g/QGuB3CvDrXbqEIww/pNtNBm8=\n@@ -84,34 +83,32 @@ golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91\n golang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\n golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\n-golang.org/x/net v0.0.0-20210916014120-12bc252f5db8/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\n golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\n golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n-golang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n golang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=\n-golang.org/x/net v0.21.0 h1:AQyQV4dYCvJ7vGmJyKki9+PBdyvhkSd8EIx/qb0AYv4=\n-golang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=\n+golang.org/x/net v0.24.0 h1:1PcaxkF854Fu3+lvBIx5SYn9wRlBzzcnHZSiaFFAb0w=\n+golang.org/x/net v0.24.0/go.mod h1:2Q7sJY5mzlzWjKtYUEXSlBWCdyaioyXzRB2RtU8KVE8=\n golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n+golang.org/x/sync v0.6.0 h1:5BMeUDZ7vkXGfEr1x9B4bRcTH4lpkTkpdh0T/J+qjbQ=\n+golang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\n golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.17.0 h1:25cE3gD+tdBA7lp7QfhuV+rJiE9YXTcS3VG1SqssI/Y=\n-golang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n+golang.org/x/sys v0.19.0 h1:q5f1RH2jigJ1MoAWp2KTp3gm5zAGFUTarQZ5U386+4o=\n+golang.org/x/sys v0.19.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\n golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\n golang.org/x/term v0.7.0/go.mod h1:P32HKFT3hSsZrRxla30E9HqToFYAQPCMs/zFMBUFqPY=\n golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\n-golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\n golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\n golang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\n golang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8="
    },
    {
      "sha": "696baf83de4601ea736b22108c38f22a550d8b12",
      "filename": "backend/go.mod",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.mod?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -4,14 +4,14 @@ go 1.21\n \n require (\n \tgithub.com/Depado/bfchroma/v2 v2.0.0\n-\tgithub.com/PuerkitoBio/goquery v1.8.1\n-\tgithub.com/alecthomas/chroma/v2 v2.12.0\n+\tgithub.com/PuerkitoBio/goquery v1.9.1\n+\tgithub.com/alecthomas/chroma/v2 v2.13.0\n \tgithub.com/didip/tollbooth/v7 v7.0.1\n \tgithub.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f\n \tgithub.com/go-chi/chi/v5 v5.0.12\n \tgithub.com/go-chi/cors v1.2.1\n \tgithub.com/go-chi/render v1.0.3\n-\tgithub.com/go-pkgz/auth v1.22.2-0.20240117071454-f721b8c33b05\n+\tgithub.com/go-pkgz/auth v1.23.0\n \tgithub.com/go-pkgz/jrpc v0.3.0\n \tgithub.com/go-pkgz/lcw/v2 v2.0.0\n \tgithub.com/go-pkgz/lgr v0.11.1\n@@ -29,35 +29,35 @@ require (\n \tgithub.com/rs/xid v1.5.0\n \tgithub.com/russross/blackfriday/v2 v2.1.0\n \tgithub.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e\n-\tgithub.com/stretchr/testify v1.8.4\n-\tgo.etcd.io/bbolt v1.3.8\n+\tgithub.com/stretchr/testify v1.9.0\n+\tgo.etcd.io/bbolt v1.3.9\n \tgo.uber.org/goleak v1.3.0\n-\tgolang.org/x/crypto v0.19.0\n+\tgolang.org/x/crypto v0.22.0\n \tgolang.org/x/image v0.15.0\n-\tgolang.org/x/net v0.21.0\n+\tgolang.org/x/net v0.24.0\n )\n \n require (\n-\tcloud.google.com/go/compute v1.23.3 // indirect\n+\tcloud.google.com/go/compute v1.25.1 // indirect\n \tcloud.google.com/go/compute/metadata v0.2.3 // indirect\n \tgithub.com/ajg/form v1.5.1 // indirect\n \tgithub.com/andybalholm/cascadia v1.3.2 // indirect\n \tgithub.com/aymerick/douceur v0.2.0 // indirect\n \tgithub.com/cespare/xxhash/v2 v2.2.0 // indirect\n \tgithub.com/davecgh/go-spew v1.1.1 // indirect\n-\tgithub.com/dghubble/oauth1 v0.7.2 // indirect\n+\tgithub.com/dghubble/oauth1 v0.7.3 // indirect\n \tgithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f // indirect\n-\tgithub.com/dlclark/regexp2 v1.10.0 // indirect\n+\tgithub.com/dlclark/regexp2 v1.11.0 // indirect\n \tgithub.com/go-oauth2/oauth2/v4 v4.5.2 // indirect\n \tgithub.com/go-pkgz/email v0.5.0 // indirect\n \tgithub.com/go-pkgz/expirable-cache v1.0.0 // indirect\n-\tgithub.com/golang/protobuf v1.5.3 // indirect\n+\tgithub.com/golang/protobuf v1.5.4 // indirect\n \tgithub.com/golang/snappy v0.0.4 // indirect\n \tgithub.com/gorilla/css v1.0.1 // indirect\n \tgithub.com/gorilla/websocket v1.5.1 // indirect\n \tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n \tgithub.com/hashicorp/golang-lru/v2 v2.0.7 // indirect\n-\tgithub.com/klauspost/compress v1.17.4 // indirect\n+\tgithub.com/klauspost/compress v1.17.7 // indirect\n \tgithub.com/montanaflynn/stats v0.7.1 // indirect\n \tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n \tgithub.com/redis/go-redis/v9 v9.4.0 // indirect\n@@ -67,10 +67,10 @@ require (\n \tgithub.com/xdg-go/scram v1.1.2 // indirect\n \tgithub.com/xdg-go/stringprep v1.0.4 // indirect\n \tgithub.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a // indirect\n-\tgo.mongodb.org/mongo-driver v1.13.1 // indirect\n-\tgolang.org/x/oauth2 v0.17.0 // indirect\n+\tgo.mongodb.org/mongo-driver v1.14.0 // indirect\n+\tgolang.org/x/oauth2 v0.18.0 // indirect\n \tgolang.org/x/sync v0.6.0 // indirect\n-\tgolang.org/x/sys v0.17.0 // indirect\n+\tgolang.org/x/sys v0.19.0 // indirect\n \tgolang.org/x/text v0.14.0 // indirect\n \tgoogle.golang.org/appengine v1.6.8 // indirect\n \tgoogle.golang.org/protobuf v1.33.0 // indirect"
    },
    {
      "sha": "3b24a1786f30e4db35af732e83ad05acfc7ed8c7",
      "filename": "backend/go.sum",
      "status": "modified",
      "additions": 48,
      "deletions": 50,
      "changes": 98,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.sum?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -1,27 +1,26 @@\n cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\n-cloud.google.com/go/compute v1.23.3 h1:6sVlXXBmbd7jNX0Ipq0trII3e4n1/MsADLK6a+aiVlk=\n-cloud.google.com/go/compute v1.23.3/go.mod h1:VCgBUoMnIVIR0CscqQiPJLAG25E3ZRZMzcFZeQ+h8CI=\n+cloud.google.com/go/compute v1.25.1 h1:ZRpHJedLtTpKgr3RV1Fx23NuaAEN1Zfx9hw1u4aJdjU=\n+cloud.google.com/go/compute v1.25.1/go.mod h1:oopOIR53ly6viBYxaDhBfJwzUAxf1zE//uf3IB011ls=\n cloud.google.com/go/compute/metadata v0.2.3 h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=\n cloud.google.com/go/compute/metadata v0.2.3/go.mod h1:VAV5nSsACxMJvgaAuX6Pk2AawlZn8kiOGuCv6gTkwuA=\n github.com/Depado/bfchroma/v2 v2.0.0 h1:IRpN9BPkNwEpR6w1ectIcNWOuhDSLx+8f1pn83fzxx8=\n github.com/Depado/bfchroma/v2 v2.0.0/go.mod h1:wFwW/Pw8Tnd0irzgO9Zxtxgzp3aPS8qBWlyadxujxmw=\n-github.com/PuerkitoBio/goquery v1.8.1 h1:uQxhNlArOIdbrH1tr0UXwdVFgDcZDrZVdcpygAcwmWM=\n-github.com/PuerkitoBio/goquery v1.8.1/go.mod h1:Q8ICL1kNUJ2sXGoAhPGUdYDJvgQgHzJsnnd3H7Ho5jQ=\n+github.com/PuerkitoBio/goquery v1.9.1 h1:mTL6XjbJTZdpfL+Gwl5U2h1l9yEkJjhmlTeV9VPW7UI=\n+github.com/PuerkitoBio/goquery v1.9.1/go.mod h1:cW1n6TmIMDoORQU5IU/P1T3tGFunOeXEpGP2WHRwkbY=\n github.com/ajg/form v1.5.1 h1:t9c7v8JUKu/XxOGBU0yjNpaMloxGEJhUkqFRq0ibGeU=\n github.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\n-github.com/alecthomas/assert/v2 v2.2.1 h1:XivOgYcduV98QCahG8T5XTezV5bylXe+lBxLG2K2ink=\n-github.com/alecthomas/assert/v2 v2.2.1/go.mod h1:pXcQ2Asjp247dahGEmsZ6ru0UVwnkhktn7S0bBDLxvQ=\n-github.com/alecthomas/chroma/v2 v2.12.0 h1:Wh8qLEgMMsN7mgyG8/qIpegky2Hvzr4By6gEF7cmWgw=\n-github.com/alecthomas/chroma/v2 v2.12.0/go.mod h1:4TQu7gdfuPjSh76j78ietmqh9LiurGF0EpseFXdKMBw=\n-github.com/alecthomas/repr v0.2.0 h1:HAzS41CIzNW5syS8Mf9UwXhNH1J9aix/BvDRf1Ml2Yk=\n-github.com/alecthomas/repr v0.2.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\n+github.com/alecthomas/assert/v2 v2.6.0 h1:o3WJwILtexrEUk3cUVal3oiQY2tfgr/FHWiz/v2n4FU=\n+github.com/alecthomas/assert/v2 v2.6.0/go.mod h1:Bze95FyfUr7x34QZrjL+XP+0qgp/zg8yS+TtBj1WA3k=\n+github.com/alecthomas/chroma/v2 v2.13.0 h1:VP72+99Fb2zEcYM0MeaWJmV+xQvz5v5cxRHd+ooU1lI=\n+github.com/alecthomas/chroma/v2 v2.13.0/go.mod h1:BUGjjsD+ndS6eX37YgTchSEG+Jg9Jv1GiZs9sqPqztk=\n+github.com/alecthomas/repr v0.4.0 h1:GhI2A8MACjfegCPVq9f1FLvIBS+DrQ2KQBFZP1iFzXc=\n+github.com/alecthomas/repr v0.4.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\n github.com/alicebob/gopher-json v0.0.0-20230218143504-906a9b012302 h1:uvdUDbHQHO85qeSydJtItA4T55Pw6BtAejd0APRJOCE=\n github.com/alicebob/gopher-json v0.0.0-20230218143504-906a9b012302/go.mod h1:SGnFV6hVsYE877CKEZ6tDNTjaSXYUk6QqoIK6PrAtcc=\n github.com/alicebob/miniredis/v2 v2.31.1 h1:7XAt0uUg3DtwEKW5ZAGa+K7FZV2DdKQo5K/6TTnfX8Y=\n github.com/alicebob/miniredis/v2 v2.31.1/go.mod h1:UB/T2Uztp7MlFSDakaX1sTXUv5CASoprx0wulRT6HBg=\n github.com/andybalholm/brotli v1.0.4 h1:V7DdXeJtZscaqfNuAdSRuRFzuiKlHSC/Zh3zl9qY3JY=\n github.com/andybalholm/brotli v1.0.4/go.mod h1:fO7iG3H7G2nSZ7m0zPUDn85XEX2GTukHGRSepvi9Eig=\n-github.com/andybalholm/cascadia v1.3.1/go.mod h1:R4bJ1UQfqADjvDa4P6HZHLh/3OxWWEqc0Sk8XGwHqvA=\n github.com/andybalholm/cascadia v1.3.2 h1:3Xi6Dw5lHF15JtdcmAHD3i1+T8plmv7BQ/nsViSLyss=\n github.com/andybalholm/cascadia v1.3.2/go.mod h1:7gtRlve5FxPPgIgX36uWBX58OdBsSS6lUvCFb+h7KvU=\n github.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=\n@@ -35,17 +34,17 @@ github.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XL\n github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\n github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n-github.com/dghubble/oauth1 v0.7.2 h1:pwcinOZy8z6XkNxvPmUDY52M7RDPxt0Xw1zgZ6Cl5JA=\n-github.com/dghubble/oauth1 v0.7.2/go.mod h1:9erQdIhqhOHG/7K9s/tgh9Ks/AfoyrO5mW/43Lu2+kE=\n+github.com/dghubble/oauth1 v0.7.3 h1:EkEM/zMDMp3zOsX2DC/ZQ2vnEX3ELK0/l9kb+vs4ptE=\n+github.com/dghubble/oauth1 v0.7.3/go.mod h1:oxTe+az9NSMIucDPDCCtzJGsPhciJV33xocHfcR2sVY=\n github.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f h1:lO4WD4F/rVNCu3HqELle0jiPLLBs70cWOduZpkS1E78=\n github.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f/go.mod h1:cuUVRXasLTGF7a8hSLbxyZXjz+1KgoB3wDUb6vlszIc=\n github.com/didip/tollbooth/v7 v7.0.0/go.mod h1:VZhDSGl5bDSPj4wPsih3PFa4Uh9Ghv8hgacaTm5PRT4=\n github.com/didip/tollbooth/v7 v7.0.1 h1:TkT4sBKoQoHQFPf7blQ54iHrZiTDnr8TceU+MulVAog=\n github.com/didip/tollbooth/v7 v7.0.1/go.mod h1:VZhDSGl5bDSPj4wPsih3PFa4Uh9Ghv8hgacaTm5PRT4=\n github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f h1:jtKwihcLmUC9BAhoJ9adCUqdSSZcOdH2KL7mPTUm2aw=\n github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f/go.mod h1:q9C80dnsuVRP2dAskjnXRNWdUJqtGgwG9wNrzt0019s=\n-github.com/dlclark/regexp2 v1.10.0 h1:+/GIL799phkJqYW+3YbOd8LCcbHzT0Pbo8zl70MHsq0=\n-github.com/dlclark/regexp2 v1.10.0/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\n+github.com/dlclark/regexp2 v1.11.0 h1:G/nrcoOa7ZXlpoa/91N3X7mM3r8eIlMBBJZvsz/mxKI=\n+github.com/dlclark/regexp2 v1.11.0/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\n github.com/fasthttp-contrib/websocket v0.0.0-20160511215533-1f3b11f56072/go.mod h1:duJ4Jxv5lDcvg4QuQr0oowTf7dz4/CR8NtyCooz9HL8=\n github.com/fatih/structs v1.1.0 h1:Q7juDM0QtcnhCpeyLGQKyg4TOIghuNXrkL32pHAUMxo=\n github.com/fatih/structs v1.1.0/go.mod h1:9NiDSp5zOcgEDl+j00MP/WkGVPOlPRLejGD8Ga6PJ7M=\n@@ -63,8 +62,8 @@ github.com/go-chi/render v1.0.3 h1:AsXqd2a1/INaIfUSKq3G5uA8weYx20FOsM7uSoCyyt4=\n github.com/go-chi/render v1.0.3/go.mod h1:/gr3hVkmYR0YlEy3LxCuVRFzEu9Ruok+gFqbIofjao0=\n github.com/go-oauth2/oauth2/v4 v4.5.2 h1:CuZhD3lhGuI6aNLyUbRHXsgG2RwGRBOuCBfd4WQKqBQ=\n github.com/go-oauth2/oauth2/v4 v4.5.2/go.mod h1:wk/2uLImWIa9VVQDgxz99H2GDbhmfi/9/Xr+GvkSUSQ=\n-github.com/go-pkgz/auth v1.22.2-0.20240117071454-f721b8c33b05 h1:oe9D1WzmKgG27i9PtDhxpDm+2n7KR431XHBGKLaQDLs=\n-github.com/go-pkgz/auth v1.22.2-0.20240117071454-f721b8c33b05/go.mod h1:/ceyBqZEjBsjP8evrd25LnNM2zMNqj0vc5PIKYJmi0U=\n+github.com/go-pkgz/auth v1.23.0 h1:jv/HaXKPL31p+SpEXYaGmROAEUWl5nWt/mQ31DCs7Y4=\n+github.com/go-pkgz/auth v1.23.0/go.mod h1:2j8ln0c2TbCuhVCvcqh8mZC7ap5r1brNXkbF/VHi0F4=\n github.com/go-pkgz/email v0.5.0 h1:fdtMDGJ8NwyBACLR0LYHaCIK/OeUwZHMhH7Q0+oty9U=\n github.com/go-pkgz/email v0.5.0/go.mod h1:BdxglsQnymzhfdbnncEE72a6DrucZHy6I+42LK2jLEc=\n github.com/go-pkgz/expirable-cache v0.1.0/go.mod h1:GTrEl0X+q0mPNqN6dtcQXksACnzCBQ5k/k1SwXJsZKs=\n@@ -101,15 +100,13 @@ github.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvq\n github.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\n github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\n github.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\n-github.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=\n-github.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\n-github.com/golang/snappy v0.0.1/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\n+github.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\n+github.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\n github.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\n github.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\n github.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\n github.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\n github.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n-github.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n github.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=\n github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\n@@ -143,10 +140,9 @@ github.com/jessevdk/go-flags v1.5.0 h1:1jKYvbxEjfUl0fmqTCOfonvskHHXMjBySTLW4y9LF\n github.com/jessevdk/go-flags v1.5.0/go.mod h1:Fw0T6WPc1dYxT4mKEZRfG5kJhaTDP9pj1c2EWnYs/m4=\n github.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\n github.com/k0kubun/colorstring v0.0.0-20150214042306-9440f1994b88/go.mod h1:3w7q1U84EfirKl04SVQ/s7nPm1ZPhiXd34z40TNz36k=\n-github.com/klauspost/compress v1.13.6/go.mod h1:/3/Vjq9QcHkK5uEr5lBEmyoZ1iFhe47etQ6QUkpK6sk=\n github.com/klauspost/compress v1.15.0/go.mod h1:/3/Vjq9QcHkK5uEr5lBEmyoZ1iFhe47etQ6QUkpK6sk=\n-github.com/klauspost/compress v1.17.4 h1:Ej5ixsIri7BrIjBkRZLTo6ghwrEtHFk7ijlczPW4fZ4=\n-github.com/klauspost/compress v1.17.4/go.mod h1:/dCuZOvVtNoHsyb+cuJD3itjs3NbnF6KH9zAO4BDxPM=\n+github.com/klauspost/compress v1.17.7 h1:ehO88t2UGzQK66LMdE8tibEd1ErmzZjNEqWkjLAKQQg=\n+github.com/klauspost/compress v1.17.7/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\n github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\n github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\n github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\n@@ -160,7 +156,6 @@ github.com/mattn/go-colorable v0.1.7/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope\n github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\n github.com/microcosm-cc/bluemonday v1.0.26 h1:xbqSvqzQMeEHCqMi64VAs4d8uy6Mequs3rQ0k/Khz58=\n github.com/microcosm-cc/bluemonday v1.0.26/go.mod h1:JyzOCs9gkyQyjs+6h10UEVSe02CGwkhd72Xdqh78TWs=\n-github.com/montanaflynn/stats v0.0.0-20171201202039-1bf9dbcd8cbe/go.mod h1:wL8QJuTMNUDYhXwkmfOly8iTdp5TEcJFWZD2D7SIkUc=\n github.com/montanaflynn/stats v0.7.1 h1:etflOAAHORrCC44V+aR6Ftzort912ZU+YLiSTuV8eaE=\n github.com/montanaflynn/stats v0.7.1/go.mod h1:etXPPgVO6n31NxCd9KQUMvCM+ve0ruNzt6R8Bnaayow=\n github.com/moul/http2curl v1.0.0 h1:dRMWoAtb+ePxMlLkrCbAqh4TlPHXvoGUSQ323/9Zahs=\n@@ -202,27 +197,34 @@ github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/\n github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\n-github.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\n-github.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\n-github.com/tidwall/btree v0.0.0-20191029221954-400434d76274 h1:G6Z6HvJuPjG6XfNGi/feOATzeJrfgTNJY+rGrHbA04E=\n+github.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\n+github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\n github.com/tidwall/btree v0.0.0-20191029221954-400434d76274/go.mod h1:huei1BkDWJ3/sLXmO+bsCNELL+Bp2Kks9OLyQFkzvA8=\n-github.com/tidwall/buntdb v1.1.2 h1:noCrqQXL9EKMtcdwJcmuVKSEjqu1ua99RHHgbLTEHRo=\n+github.com/tidwall/btree v1.7.0 h1:L1fkJH/AuEh5zBnnBbmTwQ5Lt+bRJ5A8EWecslvo9iI=\n+github.com/tidwall/btree v1.7.0/go.mod h1:twD9XRA5jj9VUQGELzDO4HPQTNJsoWWfYEL+EUQ2cKY=\n github.com/tidwall/buntdb v1.1.2/go.mod h1:xAzi36Hir4FarpSHyfuZ6JzPJdjRZ8QlLZSntE2mqlI=\n+github.com/tidwall/buntdb v1.3.0 h1:gdhWO+/YwoB2qZMeAU9JcWWsHSYU3OvcieYgFRS0zwA=\n+github.com/tidwall/buntdb v1.3.0/go.mod h1:lZZrZUWzlyDJKlLQ6DKAy53LnG7m5kHyrEHvvcDmBpU=\n github.com/tidwall/gjson v1.3.4/go.mod h1:P256ACg0Mn+j1RXIDXoss50DeIABTYK1PULOJHhxOls=\n-github.com/tidwall/gjson v1.12.1 h1:ikuZsLdhr8Ws0IdROXUS1Gi4v9Z4pGqpX/CvJkxvfpo=\n github.com/tidwall/gjson v1.12.1/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=\n-github.com/tidwall/grect v0.0.0-20161006141115-ba9a043346eb h1:5NSYaAdrnblKByzd7XByQEJVT8+9v0W/tIY0Oo4OwrE=\n+github.com/tidwall/gjson v1.17.1 h1:wlYEnwqAHgzmhNUFfw7Xalt2JzQvsMx2Se4PcoFCT/U=\n+github.com/tidwall/gjson v1.17.1/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=\n github.com/tidwall/grect v0.0.0-20161006141115-ba9a043346eb/go.mod h1:lKYYLFIr9OIgdgrtgkZ9zgRxRdvPYsExnYBsEAd8W5M=\n+github.com/tidwall/grect v0.1.4 h1:dA3oIgNgWdSspFzn1kS4S/RDpZFLrIxAZOdJKjYapOg=\n+github.com/tidwall/grect v0.1.4/go.mod h1:9FBsaYRaR0Tcy4UwefBX/UDcDcDy9V5jUcxHzv2jd5Q=\n github.com/tidwall/match v1.0.1/go.mod h1:LujAq0jyVjBy028G1WhWfIzbpQfMO8bBZ6Tyb0+pL9E=\n github.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=\n github.com/tidwall/match v1.1.1/go.mod h1:eRSPERbgtNPcGhD8UCthc6PmLEQXEWd3PRB5JTxsfmM=\n github.com/tidwall/pretty v1.0.0/go.mod h1:XNkn88O1ChpSDQmQeStsy+sBenx6DDtFZJxhVysOjyk=\n-github.com/tidwall/pretty v1.2.0 h1:RWIZEg2iJ8/g6fDDYzMpobmaoGh5OLl4AXtGUGPcqCs=\n github.com/tidwall/pretty v1.2.0/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=\n-github.com/tidwall/rtree v0.0.0-20180113144539-6cd427091e0e h1:+NL1GDIUOKxVfbp2KoJQD9cTQ6dyP2co9q4yzmT9FZo=\n+github.com/tidwall/pretty v1.2.1 h1:qjsOFOWWQl+N3RsoF5/ssm1pHmJJwhjlSbZ51I6wMl4=\n+github.com/tidwall/pretty v1.2.1/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=\n+github.com/tidwall/rtred v0.1.2 h1:exmoQtOLvDoO8ud++6LwVsAMTu0KPzLTUrMln8u1yu8=\n+github.com/tidwall/rtred v0.1.2/go.mod h1:hd69WNXQ5RP9vHd7dqekAz+RIdtfBogmglkZSRxCHFQ=\n github.com/tidwall/rtree v0.0.0-20180113144539-6cd427091e0e/go.mod h1:/h+UnNGt0IhNNJLkGikcdcJqm66zGD/uJGMRxK/9+Ao=\n-github.com/tidwall/tinyqueue v0.0.0-20180302190814-1e39f5511563 h1:Otn9S136ELckZ3KKDyCkxapfufrqDqwmGjcHfAyXRrE=\n github.com/tidwall/tinyqueue v0.0.0-20180302190814-1e39f5511563/go.mod h1:mLqSmt7Dv/CNneF2wfcChfN1rvapyQr01LGKnKex0DQ=\n+github.com/tidwall/tinyqueue v0.1.1 h1:SpNEvEggbpyN5DIReaJ2/1ndroY8iyEGxPYxoSaymYE=\n+github.com/tidwall/tinyqueue v0.1.1/go.mod h1:O/QNHwrnjqr6IHItYrzoHAKYhBkLI67Q096fQP5zMYw=\n github.com/valyala/bytebufferpool v1.0.0 h1:GqA5TC/0021Y/b9FG4Oi9Mr3q7XYx6KllzawFIhcdPw=\n github.com/valyala/bytebufferpool v1.0.0/go.mod h1:6bBcMArwyJ5K/AmCkWv1jt77kVWyCJ6HpOuEn7z0Csc=\n github.com/valyala/fasthttp v1.34.0 h1:d3AAQJ2DRcxJYHm7OXNXtXt2as1vMDfxeIcFvhmGGm4=\n@@ -242,7 +244,6 @@ github.com/xeipuuv/gojsonschema v1.2.0 h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17\n github.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=\n github.com/yalp/jsonpath v0.0.0-20180802001716-5cc68e5049a0 h1:6fRhSjgLCkTD3JnJxvaJ4Sj+TYblw757bqYgZaOq5ZY=\n github.com/yalp/jsonpath v0.0.0-20180802001716-5cc68e5049a0/go.mod h1:/LWChgwKmvncFJFHJ7Gvn9wZArjbV5/FppcK2fKk/tI=\n-github.com/youmark/pkcs8 v0.0.0-20181117223130-1be2e3e5546d/go.mod h1:rHwXgn7JulP+udvsHwJoVG1YGAP6VLg4y9I5dyZdqmA=\n github.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a h1:fZHgsYlfvtyqToslyjUt3VOPF4J7aK/3MPcK7xp3PDk=\n github.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a/go.mod h1:ul22v+Nro/R083muKhosV54bj5niojjWZvU8xrevuH4=\n github.com/yudai/gojsondiff v1.0.0 h1:27cbfqXLVEJ1o8I6v3y9lg8Ydm53EKqHXAOMxEGlCOA=\n@@ -253,19 +254,18 @@ github.com/yudai/pp v2.0.1+incompatible/go.mod h1:PuxR/8QJ7cyCkFp/aUDS+JY727OFEZ\n github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\n github.com/yuin/gopher-lua v1.1.1 h1:kYKnWBjvbNP4XLT3+bPEwAXJx262OhaHDWDVOPjL46M=\n github.com/yuin/gopher-lua v1.1.1/go.mod h1:GBR0iDaNXjAgGg9zfCvksxSRnQx76gclCIb7kdAd1Pw=\n-go.etcd.io/bbolt v1.3.8 h1:xs88BrvEv273UsB79e0hcVrlUWmS0a8upikMFhSyAtA=\n-go.etcd.io/bbolt v1.3.8/go.mod h1:N9Mkw9X8x5fupy0IKsmuqVtoGDyxsaDlbk4Rd05IAQw=\n-go.mongodb.org/mongo-driver v1.13.1 h1:YIc7HTYsKndGK4RFzJ3covLz1byri52x0IoMB0Pt/vk=\n-go.mongodb.org/mongo-driver v1.13.1/go.mod h1:wcDf1JBCXy2mOW0bWHwO/IOYqdca1MPCwDtFu/Z9+eo=\n+go.etcd.io/bbolt v1.3.9 h1:8x7aARPEXiXbHmtUwAIv7eV2fQFHrLLavdiJ3uzJXoI=\n+go.etcd.io/bbolt v1.3.9/go.mod h1:zaO32+Ti0PK1ivdPtgMESzuzL2VPoIG1PCQNvOdo/dE=\n+go.mongodb.org/mongo-driver v1.14.0 h1:P98w8egYRjYe3XDjxhYJagTokP/H6HzlsnojRgZRd80=\n+go.mongodb.org/mongo-driver v1.14.0/go.mod h1:Vzb0Mk/pa7e6cWw85R4F/endUC3u0U9jGcNU603k65c=\n go.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\n go.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n golang.org/x/crypto v0.0.0-20200302210943-78000ba7a073/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\n golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\n golang.org/x/crypto v0.0.0-20220214200702-86341886e292/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\n-golang.org/x/crypto v0.0.0-20220622213112-05595931fe9d/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\n-golang.org/x/crypto v0.19.0 h1:ENy+Az/9Y1vSrlrvBSyna3PITt4tiZLf7sgCjZBX7Wo=\n-golang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=\n+golang.org/x/crypto v0.22.0 h1:g1v0xeRhjcugydODzvb3mEM9SQ0HGp9s/nh3COQ/C30=\n+golang.org/x/crypto v0.22.0/go.mod h1:vr6Su+7cTlO45qkww3VDJlzDn0ctJvRgYbC2NvXHt+M=\n golang.org/x/image v0.15.0 h1:kOELfmgrmJlw4Cdb7g/QGuB3CvDrXbqEIww/pNtNBm8=\n golang.org/x/image v0.15.0/go.mod h1:HUYqC05R2ZcZ3ejNQsIHQDQiwWM4JBqmm6MKANTp4LE=\n golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\n@@ -279,18 +279,16 @@ golang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR\n golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n golang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\n golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\n-golang.org/x/net v0.0.0-20210916014120-12bc252f5db8/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\n golang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\n golang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\n golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\n golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n-golang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n golang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=\n-golang.org/x/net v0.21.0 h1:AQyQV4dYCvJ7vGmJyKki9+PBdyvhkSd8EIx/qb0AYv4=\n-golang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=\n+golang.org/x/net v0.24.0 h1:1PcaxkF854Fu3+lvBIx5SYn9wRlBzzcnHZSiaFFAb0w=\n+golang.org/x/net v0.24.0/go.mod h1:2Q7sJY5mzlzWjKtYUEXSlBWCdyaioyXzRB2RtU8KVE8=\n golang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n-golang.org/x/oauth2 v0.17.0 h1:6m3ZPmLEFdVxKKWnKq4VqZ60gutO35zm+zrAHVmHyDQ=\n-golang.org/x/oauth2 v0.17.0/go.mod h1:OzPDGQiuQMguemayvdylqddI7qcD9lnSDb+1FiwQ5HA=\n+golang.org/x/oauth2 v0.18.0 h1:09qnuIAgzdx1XplqJvW6CQqMCtGZykZWcXzPMPUusvI=\n+golang.org/x/oauth2 v0.18.0/go.mod h1:Wf7knwG0MPoWIMMBgFlEaSUDaKskp0dCfrlJRJXbBi8=\n golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n@@ -318,8 +316,8 @@ golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBc\n golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.17.0 h1:25cE3gD+tdBA7lp7QfhuV+rJiE9YXTcS3VG1SqssI/Y=\n-golang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n+golang.org/x/sys v0.19.0 h1:q5f1RH2jigJ1MoAWp2KTp3gm5zAGFUTarQZ5U386+4o=\n+golang.org/x/sys v0.19.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\n golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k="
    },
    {
      "sha": "40d1a89160571d42d50750607c745fad6d66ea8d",
      "filename": "backend/vendor/cloud.google.com/go/compute/internal/version.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Finternal%2Fversion.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Finternal%2Fversion.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Finternal%2Fversion.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -15,4 +15,4 @@\n package internal\n \n // Version is the current tagged release of the library.\n-const Version = \"1.23.3\"\n+const Version = \"1.25.1\""
    },
    {
      "sha": "96a8d48be063d425fe1b343ac162daf59bd9ec00",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/README.md",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2FREADME.md?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -22,7 +22,7 @@ Syntax-wise, it is as close as possible to jQuery, with the same function names\n \n ## Installation\n \n-Please note that because of the net/html dependency, goquery requires Go1.1+ and is tested on Go1.7+.\n+Please note that starting with version `v1.9.0` of goquery, Go 1.18+ is required due to the use of generics. For previous goquery versions, a Go version of 1.1+ was required because of the `net/html` dependency. Ongoing goquery development is tested on the latest 2 versions of Go.\n \n     $ go get github.com/PuerkitoBio/goquery\n \n@@ -40,6 +40,8 @@ Please note that because of the net/html dependency, goquery requires Go1.1+ and\n \n **Note that goquery's API is now stable, and will not break.**\n \n+*    **2024-02-29 (v1.9.1)** : Improve allocation and performance of the `Map` function and `Selection.Map` method, better document the cascadia differences (thanks [@jwilsson](https://github.com/jwilsson)).\n+*    **2024-02-22 (v1.9.0)** : Add a generic `Map` function, **goquery now requires Go version 1.18+** (thanks [@Fesaa](https://github.com/Fesaa)).\n *    **2023-02-18 (v1.8.1)** : Update `go.mod` dependencies, update CI workflow.\n *    **2021-10-25 (v1.8.0)** : Add `Render` function to render a `Selection` to an `io.Writer` (thanks [@anthonygedeon](https://github.com/anthonygedeon)).\n *    **2021-07-11 (v1.7.1)** : Update go.mod dependencies and add dependabot config (thanks [@jauderho](https://github.com/jauderho)).\n@@ -88,7 +90,7 @@ Utility functions that are not in jQuery but are useful in Go are implemented as\n \n The complete [package reference documentation can be found here][doc].\n \n-Please note that Cascadia's selectors do not necessarily match all supported selectors of jQuery (Sizzle). See the [cascadia project][cascadia] for details. Invalid selector strings compile to a `Matcher` that fails to match any node. Behaviour of the various functions that take a selector string as argument follows from that fact, e.g. (where `~` is an invalid selector string):\n+Please note that Cascadia's selectors do not necessarily match all supported selectors of jQuery (Sizzle). See the [cascadia project][cascadia] for details. Also, the selectors work more like the DOM's `querySelectorAll`, than jQuery's matchers - they have no concept of contextual matching (for some concrete examples of what that means, see [this ticket](https://github.com/andybalholm/cascadia/issues/61)). In practice, it doesn't matter very often but it's something worth mentioning. Invalid selector strings compile to a `Matcher` that fails to match any node. Behaviour of the various functions that take a selector string as argument follows from that fact, e.g. (where `~` is an invalid selector string):\n \n * `Find(\"~\")` returns an empty selection because the selector string doesn't match anything.\n * `Add(\"~\")` returns a new selection that holds the same nodes as the original selection, because it didn't add any node (selector string didn't match anything).\n@@ -157,6 +159,7 @@ func main() {\n - [stitcherd](https://github.com/vhodges/stitcherd), A server for doing server side includes using css selectors and DOM updates.\n - [goskyr](https://github.com/jakopako/goskyr), an easily configurable command-line scraper written in Go.\n - [goGetJS](https://github.com/davemolk/goGetJS), a tool for extracting, searching, and saving JavaScript files (with optional headless browser).\n+- [fitter](https://github.com/PxyUp/fitter), a tool for selecting values from JSON, XML, HTML and XPath formatted pages.\n \n ## Support\n \n@@ -165,7 +168,7 @@ There are a number of ways you can support the project:\n * Use it, star it, build something with it, spread the word!\n   - If you do build something open-source or otherwise publicly-visible, let me know so I can add it to the [Related Projects](#related-projects) section!\n * Raise issues to improve the project (note: doc typos and clarifications are issues too!)\n-  - Please search existing issues before opening a new one - it may have already been adressed.\n+  - Please search existing issues before opening a new one - it may have already been addressed.\n * Pull requests: please discuss new code in an issue first, unless the fix is really trivial.\n   - Make sure new code is tested.\n   - Be mindful of existing code - PRs that break existing code have a high probability of being declined, unless it fixes a serious issue."
    },
    {
      "sha": "1c98158bffcdbee04504ce754b144842e221b496",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/iteration.go",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2Fiteration.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2Fiteration.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2Fiteration.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -31,8 +31,16 @@ func (s *Selection) EachWithBreak(f func(int, *Selection) bool) *Selection {\n // element in that selection starting at 0, and a *Selection that contains\n // only that element.\n func (s *Selection) Map(f func(int, *Selection) string) (result []string) {\n+\treturn Map(s, f)\n+}\n+\n+// Map is the generic version of Selection.Map, allowing any type to be\n+// returned.\n+func Map[E any](s *Selection, f func(int, *Selection) E) (result []E) {\n+\tresult = make([]E, len(s.Nodes))\n+\n \tfor i, n := range s.Nodes {\n-\t\tresult = append(result, f(i, newSingleSelection(n, s.document)))\n+\t\tresult[i] = f(i, newSingleSelection(n, s.document))\n \t}\n \n \treturn result"
    },
    {
      "sha": "c45fa5db788f382d5f996651eaab03c7db576abc",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/traversal.go",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2Ftraversal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2Ftraversal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2Ftraversal.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -20,6 +20,12 @@ const (\n // Find gets the descendants of each element in the current set of matched\n // elements, filtered by a selector. It returns a new Selection object\n // containing these matched elements.\n+//\n+// Note that as for all methods accepting a selector string, the selector is\n+// compiled and applied by the cascadia package and inherits its behavior and\n+// constraints regarding supported selectors. See the note on cascadia in\n+// the goquery documentation here:\n+// https://github.com/PuerkitoBio/goquery?tab=readme-ov-file#api\n func (s *Selection) Find(selector string) *Selection {\n \treturn pushStack(s, findWithMatcher(s.Nodes, compileMatcher(selector)))\n }"
    },
    {
      "sha": "cfb2c669e7c460f1cbf1c2bee6ac88224f829aff",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/.editorconfig",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.editorconfig",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.editorconfig",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.editorconfig?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -11,3 +11,7 @@ insert_final_newline = true\n indent_style = space\n indent_size = 2\n insert_final_newline = false\n+\n+[*.yml]\n+indent_style = space\n+indent_size = 2"
    },
    {
      "sha": "668be374ab99edff98161fa02dca6c60ac34b951",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/.golangci.yml",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.golangci.yml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -49,6 +49,8 @@ linters:\n     - nosnakecase\n     - testableexamples\n     - musttag\n+    - depguard\n+    - goconst\n \n linters-settings:\n   govet:"
    },
    {
      "sha": "775d3af2f840d774a5df1604cf0621c2e5b32e1a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/README.md",
      "status": "modified",
      "additions": 40,
      "deletions": 65,
      "changes": 105,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -8,75 +8,72 @@ highlighted HTML, ANSI-coloured text, etc.\n Chroma is based heavily on [Pygments](http://pygments.org/), and includes\n translators for Pygments lexers and styles.\n \n-<a id=\"markdown-table-of-contents\" name=\"table-of-contents\"></a>\n-\n ## Table of Contents\n \n <!-- TOC -->\n \n-1. [Table of Contents](#table-of-contents)\n-2. [Supported languages](#supported-languages)\n-3. [Try it](#try-it)\n-4. [Using the library](#using-the-library)\n+1. [Supported languages](#supported-languages)\n+2. [Try it](#try-it)\n+3. [Using the library](#using-the-library)\n    1. [Quick start](#quick-start)\n    2. [Identifying the language](#identifying-the-language)\n    3. [Formatting the output](#formatting-the-output)\n    4. [The HTML formatter](#the-html-formatter)\n-5. [More detail](#more-detail)\n+4. [More detail](#more-detail)\n    1. [Lexers](#lexers)\n    2. [Formatters](#formatters)\n    3. [Styles](#styles)\n-6. [Command-line interface](#command-line-interface)\n-7. [Testing lexers](#testing-lexers)\n-8. [What's missing compared to Pygments?](#whats-missing-compared-to-pygments)\n+5. [Command-line interface](#command-line-interface)\n+6. [Testing lexers](#testing-lexers)\n+7. [What's missing compared to Pygments?](#whats-missing-compared-to-pygments)\n \n <!-- /TOC -->\n \n-<a id=\"markdown-supported-languages\" name=\"supported-languages\"></a>\n-\n ## Supported languages\n \n-| Prefix | Language                                                                                                                                                                                                                             |\n-| :----: | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n-|   A    | ABAP, ABNF, ActionScript, ActionScript 3, Ada, Agda, AL, Alloy, Angular2, ANTLR, ApacheConf, APL, AppleScript, ArangoDB AQL, Arduino, ArmAsm, AutoHotkey, AutoIt, Awk                                                                             |\n-|   B    | Ballerina, Bash, Bash Session, Batchfile, BibTeX, Bicep, BlitzBasic, BNF, BQN, Brainfuck                                                                                                                                             |\n-|   C    | C, C#, C++, Caddyfile, Caddyfile Directives, Cap'n Proto, Cassandra CQL, Ceylon, CFEngine3, cfstatement, ChaiScript, Chapel, Cheetah, Clojure, CMake, COBOL, CoffeeScript, Common Lisp, Coq, Crystal, CSS, Cython                    |\n-|   D    | D, Dart, Dax, Diff, Django/Jinja, dns, Docker, DTD, Dylan                                                                                                                                                                                 |\n-|   E    | EBNF, Elixir, Elm, EmacsLisp, Erlang                                                                                                                                                                                                 |\n-|   F    | Factor, Fennel, Fish, Forth, Fortran, FortranFixed, FSharp                                                                                                                                                                           |\n-|   G    | GAS, GDScript, Genshi, Genshi HTML, Genshi Text, Gherkin, GLSL, Gnuplot, Go, Go HTML Template, Go Text Template, GraphQL, Groff, Groovy                                                                                              |\n-|   H    | Handlebars, Hare, Haskell, Haxe, HCL, Hexdump, HLB, HLSL, HolyC, HTML, HTTP, Hy                                                                                                                                                      |\n-|   I    | Idris, Igor, INI, Io, ISCdhcpd                                                                                                                                                                                                       |\n-|   J    | J, Java, JavaScript, JSON, Julia, Jungle                                                                                                                                                                                             |\n-|   K    | Kotlin                                                                                                                                                                                                                               |\n-|   L    | Lighttpd configuration file, LLVM, Lua                                                                                                                                                                                               |\n-|   M    | Makefile, Mako, markdown, Mason, Mathematica, Matlab, mcfunction, Meson, Metal, MiniZinc, MLIR, Modula-2, MonkeyC, MorrowindScript, Myghty, MySQL                                                                                    |\n-|   N    | NASM, Natural, Newspeak, Nginx configuration file, Nim, Nix                                                                                                                                                                          |\n-|   O    | Objective-C, OCaml, Octave, Odin, OnesEnterprise, OpenEdge ABL, OpenSCAD, Org Mode                                                                                                                                                   |\n-|   P    | PacmanConf, Perl, PHP, PHTML, Pig, PkgConfig, PL/pgSQL, plaintext, Plutus Core, Pony, PostgreSQL SQL dialect, PostScript, POVRay, PowerQuery, PowerShell, Prolog, PromQL, properties, Protocol Buffer, PRQL, PSL, Puppet, Python, Python 2 |\n-|   Q    | QBasic, QML                                                                                                                                                                                                                          |\n-|   R    | R, Racket, Ragel, Raku, react, ReasonML, reg, reStructuredText, Rexx, Ruby, Rust                                                                                                                                                     |\n-|   S    | SAS, Sass, Scala, Scheme, Scilab, SCSS, Sed, Sieve, Smali, Smalltalk, Smarty, Snobol, Solidity, SourcePawn, SPARQL, SQL, SquidConf, Standard ML, stas, Stylus, Svelte, Swift, SYSTEMD, systemverilog                                 |\n-|   T    | TableGen, Tal, TASM, Tcl, Tcsh, Termcap, Terminfo, Terraform, TeX, Thrift, TOML, TradingView, Transact-SQL, Turing, Turtle, Twig, TypeScript, TypoScript, TypoScriptCssData, TypoScriptHtmlData                                      |\n-|   V    | V, V shell, Vala, VB.net, verilog, VHDL, VHS, VimL, vue                                                                                                                                                                              |\n-|   W    | WDTE, WebGPU Shading Language, Whiley                                                                                                                                                                                                |\n-|   X    | XML, Xorg                                                                                                                                                                                                                            |\n-|   Y    | YAML, YANG                                                                                                                                                                                                                           |\n-|   Z    | Z80 Assembly, Zed, Zig                                                                                                                                                                                                               |\n+| Prefix | Language                                                                                                                                                                                                                                            |\n+| :----: | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+|   A    | ABAP, ABNF, ActionScript, ActionScript 3, Ada, Agda, AL, Alloy, Angular2, ANTLR, ApacheConf, APL, AppleScript, ArangoDB AQL, Arduino, ArmAsm, AutoHotkey, AutoIt, Awk                                                                               |\n+|   B    | Ballerina, Bash, Bash Session, Batchfile, BibTeX, Bicep, BlitzBasic, BNF, BQN, Brainfuck                                                                                                                                                            |\n+|   C    | C, C#, C++, Caddyfile, Caddyfile Directives, Cap'n Proto, Cassandra CQL, Ceylon, CFEngine3, cfstatement, ChaiScript, Chapel, Cheetah, Clojure, CMake, COBOL, CoffeeScript, Common Lisp, Coq, Crystal, CSS, Cython                                   |\n+|   D    | D, Dart, Dax, Desktop Entry, Diff, Django/Jinja, dns, Docker, DTD, Dylan                                                                                                                                                                            |\n+|   E    | EBNF, Elixir, Elm, EmacsLisp, Erlang                                                                                                                                                                                                                |\n+|   F    | Factor, Fennel, Fish, Forth, Fortran, FortranFixed, FSharp                                                                                                                                                                                          |\n+|   G    | GAS, GDScript, Genshi, Genshi HTML, Genshi Text, Gherkin, GLSL, Gnuplot, Go, Go HTML Template, Go Text Template, GraphQL, Groff, Groovy                                                                                                             |\n+|   H    | Handlebars, Hare, Haskell, Haxe, HCL, Hexdump, HLB, HLSL, HolyC, HTML, HTTP, Hy                                                                                                                                                                     |\n+|   I    | Idris, Igor, INI, Io, ISCdhcpd                                                                                                                                                                                                                      |\n+|   J    | J, Java, JavaScript, JSON, Julia, Jungle                                                                                                                                                                                                            |\n+|   K    | Kotlin                                                                                                                                                                                                                                              |\n+|   L    | Lighttpd configuration file, LLVM, Lua                                                                                                                                                                                                              |\n+|   M    | Makefile, Mako, markdown, Mason, Materialize SQL dialect, Mathematica, Matlab, mcfunction, Meson, Metal, MiniZinc, MLIR, Modula-2, MonkeyC, MorrowindScript, Myghty, MySQL                                                                          |\n+|   N    | NASM, Natural, Newspeak, Nginx configuration file, Nim, Nix                                                                                                                                                                                         |\n+|   O    | Objective-C, OCaml, Octave, Odin, OnesEnterprise, OpenEdge ABL, OpenSCAD, Org Mode                                                                                                                                                                  |\n+|   P    | PacmanConf, Perl, PHP, PHTML, Pig, PkgConfig, PL/pgSQL, plaintext, Plutus Core, Pony, PostgreSQL SQL dialect, PostScript, POVRay, PowerQuery, PowerShell, Prolog, PromQL, Promela, properties, Protocol Buffer, PRQL, PSL, Puppet, Python, Python 2 |\n+|   Q    | QBasic, QML                                                                                                                                                                                                                                         |\n+|   R    | R, Racket, Ragel, Raku, react, ReasonML, reg, Rego, reStructuredText, Rexx, RPMSpec, Ruby, Rust                                                                                                                                                     |\n+|   S    | SAS, Sass, Scala, Scheme, Scilab, SCSS, Sed, Sieve, Smali, Smalltalk, Smarty, Snobol, Solidity, SourcePawn, SPARQL, SQL, SquidConf, Standard ML, stas, Stylus, Svelte, Swift, SYSTEMD, systemverilog                                                |\n+|   T    | TableGen, Tal, TASM, Tcl, Tcsh, Termcap, Terminfo, Terraform, TeX, Thrift, TOML, TradingView, Transact-SQL, Turing, Turtle, Twig, TypeScript, TypoScript, TypoScriptCssData, TypoScriptHtmlData                                                     |\n+|   V    | V, V shell, Vala, VB.net, verilog, VHDL, VHS, VimL, vue                                                                                                                                                                                             |\n+|   W    | WDTE, WebGPU Shading Language, Whiley                                                                                                                                                                                                               |\n+|   X    | XML, Xorg                                                                                                                                                                                                                                           |\n+|   Y    | YAML, YANG                                                                                                                                                                                                                                          |\n+|   Z    | Z80 Assembly, Zed, Zig                                                                                                                                                                                                                              |\n \n _I will attempt to keep this section up to date, but an authoritative list can be\n displayed with `chroma --list`._\n \n-<a id=\"markdown-try-it\" name=\"try-it\"></a>\n-\n ## Try it\n \n Try out various languages and styles on the [Chroma Playground](https://swapoff.org/chroma/playground/).\n \n-<a id=\"markdown-using-the-library\" name=\"using-the-library\"></a>\n-\n ## Using the library\n \n+This is version 2 of Chroma, use the import path:\n+\n+```go\n+import \"github.com/alecthomas/chroma/v2\"\n+```\n+\n Chroma, like Pygments, has the concepts of\n [lexers](https://github.com/alecthomas/chroma/tree/master/lexers),\n [formatters](https://github.com/alecthomas/chroma/tree/master/formatters) and\n@@ -95,8 +92,6 @@ In all cases, if a lexer, formatter or style can not be determined, `nil` will\n be returned. In this situation you may want to default to the `Fallback`\n value in each respective package, which provides sane defaults.\n \n-<a id=\"markdown-quick-start\" name=\"quick-start\"></a>\n-\n ### Quick start\n \n A convenience function exists that can be used to simply format some source\n@@ -106,8 +101,6 @@ text, without any effort:\n err := quick.Highlight(os.Stdout, someSourceCode, \"go\", \"html\", \"monokai\")\n ```\n \n-<a id=\"markdown-identifying-the-language\" name=\"identifying-the-language\"></a>\n-\n ### Identifying the language\n \n To highlight code, you'll first have to identify what language the code is\n@@ -147,8 +140,6 @@ token types into a single token:\n lexer = chroma.Coalesce(lexer)\n ```\n \n-<a id=\"markdown-formatting-the-output\" name=\"formatting-the-output\"></a>\n-\n ### Formatting the output\n \n Once a language is identified you will need to pick a formatter and a style (theme).\n@@ -177,8 +168,6 @@ And finally, format the tokens from the iterator:\n err := formatter.Format(w, style, iterator)\n ```\n \n-<a id=\"markdown-the-html-formatter\" name=\"the-html-formatter\"></a>\n-\n ### The HTML formatter\n \n By default the `html` registered formatter generates standalone HTML with\n@@ -203,12 +192,8 @@ formatter := html.New(html.WithClasses(true))\n err := formatter.WriteCSS(w, style)\n ```\n \n-<a id=\"markdown-more-detail\" name=\"more-detail\"></a>\n-\n ## More detail\n \n-<a id=\"markdown-lexers\" name=\"lexers\"></a>\n-\n ### Lexers\n \n See the [Pygments documentation](http://pygments.org/docs/lexerdevelopment/)\n@@ -228,17 +213,13 @@ python3 _tools/pygments2chroma_xml.py \\\n See notes in [pygments-lexers.txt](https://github.com/alecthomas/chroma/blob/master/pygments-lexers.txt)\n for a list of lexers, and notes on some of the issues importing them.\n \n-<a id=\"markdown-formatters\" name=\"formatters\"></a>\n-\n ### Formatters\n \n Chroma supports HTML output, as well as terminal output in 8 colour, 256 colour, and true-colour.\n \n A `noop` formatter is included that outputs the token text only, and a `tokens`\n formatter outputs raw tokens. The latter is useful for debugging lexers.\n \n-<a id=\"markdown-styles\" name=\"styles\"></a>\n-\n ### Styles\n \n Chroma styles are defined in XML. The style entries use the\n@@ -262,8 +243,6 @@ Also, token types in a style file are hierarchical. For instance, when `CommentS\n \n For a quick overview of the available styles and how they look, check out the [Chroma Style Gallery](https://xyproto.github.io/splash/docs/).\n \n-<a id=\"markdown-command-line-interface\" name=\"command-line-interface\"></a>\n-\n ## Command-line interface\n \n A command-line interface to Chroma is included.\n@@ -288,10 +267,6 @@ on under the hood for easy integration with [lesspipe shipping with\n Debian and derivatives](https://manpages.debian.org/lesspipe#USER_DEFINED_FILTERS);\n for that setup the `chroma` executable can be just symlinked to `~/.lessfilter`.\n \n-<a id=\"markdown-whats-missing-compared-to-pygments\" name=\"whats-missing-compared-to-pygments\"></a>\n-\n-<a id=\"markdown-testing-lexers\" name=\"testing-lexers\"></a>\n-\n ## Testing lexers\n \n If you edit some lexers and want to try it, open a shell in `cmd/chromad` and run:"
    },
    {
      "sha": "92d784c2454bd51f066c70f3339cfd113661abcd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/formatters/html/html.go",
      "status": "modified",
      "additions": 70,
      "deletions": 11,
      "changes": 81,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatters%2Fhtml%2Fhtml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatters%2Fhtml%2Fhtml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatters%2Fhtml%2Fhtml.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -5,7 +5,9 @@ import (\n \t\"html\"\n \t\"io\"\n \t\"sort\"\n+\t\"strconv\"\n \t\"strings\"\n+\t\"sync\"\n \n \t\"github.com/alecthomas/chroma/v2\"\n )\n@@ -132,6 +134,7 @@ func New(options ...Option) *Formatter {\n \t\tbaseLineNumber: 1,\n \t\tpreWrapper:     defaultPreWrapper,\n \t}\n+\tf.styleCache = newStyleCache(f)\n \tfor _, option := range options {\n \t\toption(f)\n \t}\n@@ -188,6 +191,7 @@ var (\n \n // Formatter that generates HTML.\n type Formatter struct {\n+\tstyleCache            *styleCache\n \tstandalone            bool\n \tprefix                string\n \tClasses               bool // Exported field to detect when classes are being used\n@@ -220,12 +224,7 @@ func (f *Formatter) Format(w io.Writer, style *chroma.Style, iterator chroma.Ite\n //\n // OTOH we need to be super careful about correct escaping...\n func (f *Formatter) writeHTML(w io.Writer, style *chroma.Style, tokens []chroma.Token) (err error) { // nolint: gocyclo\n-\tcss := f.styleToCSS(style)\n-\tif !f.Classes {\n-\t\tfor t, style := range css {\n-\t\t\tcss[t] = compressStyle(style)\n-\t\t}\n-\t}\n+\tcss := f.styleCache.get(style, true)\n \tif f.standalone {\n \t\tfmt.Fprint(w, \"<html>\\n\")\n \t\tif f.Classes {\n@@ -243,15 +242,15 @@ func (f *Formatter) writeHTML(w io.Writer, style *chroma.Style, tokens []chroma.\n \twrapInTable := f.lineNumbers && f.lineNumbersInTable\n \n \tlines := chroma.SplitTokensIntoLines(tokens)\n-\tlineDigits := len(fmt.Sprintf(\"%d\", f.baseLineNumber+len(lines)-1))\n+\tlineDigits := len(strconv.Itoa(f.baseLineNumber + len(lines) - 1))\n \thighlightIndex := 0\n \n \tif wrapInTable {\n \t\t// List line numbers in its own <td>\n \t\tfmt.Fprintf(w, \"<div%s>\\n\", f.styleAttr(css, chroma.PreWrapper))\n \t\tfmt.Fprintf(w, \"<table%s><tr>\", f.styleAttr(css, chroma.LineTable))\n \t\tfmt.Fprintf(w, \"<td%s>\\n\", f.styleAttr(css, chroma.LineTableTD))\n-\t\tfmt.Fprintf(w, f.preWrapper.Start(false, f.styleAttr(css, chroma.PreWrapper)))\n+\t\tfmt.Fprintf(w, \"%s\", f.preWrapper.Start(false, f.styleAttr(css, chroma.PreWrapper)))\n \t\tfor index := range lines {\n \t\t\tline := f.baseLineNumber + index\n \t\t\thighlight, next := f.shouldHighlight(highlightIndex, line)\n@@ -273,7 +272,7 @@ func (f *Formatter) writeHTML(w io.Writer, style *chroma.Style, tokens []chroma.\n \t\tfmt.Fprintf(w, \"<td%s>\\n\", f.styleAttr(css, chroma.LineTableTD, \"width:100%\"))\n \t}\n \n-\tfmt.Fprintf(w, f.preWrapper.Start(true, f.styleAttr(css, chroma.PreWrapper)))\n+\tfmt.Fprintf(w, \"%s\", f.preWrapper.Start(true, f.styleAttr(css, chroma.PreWrapper)))\n \n \thighlightIndex = 0\n \tfor index, tokens := range lines {\n@@ -323,7 +322,7 @@ func (f *Formatter) writeHTML(w io.Writer, style *chroma.Style, tokens []chroma.\n \t\t\tfmt.Fprint(w, `</span>`) // End of Line\n \t\t}\n \t}\n-\tfmt.Fprintf(w, f.preWrapper.End(true))\n+\tfmt.Fprintf(w, \"%s\", f.preWrapper.End(true))\n \n \tif wrapInTable {\n \t\tfmt.Fprint(w, \"</td></tr></table>\\n\")\n@@ -419,7 +418,7 @@ func (f *Formatter) tabWidthStyle() string {\n \n // WriteCSS writes CSS style definitions (without any surrounding HTML).\n func (f *Formatter) WriteCSS(w io.Writer, style *chroma.Style) error {\n-\tcss := f.styleToCSS(style)\n+\tcss := f.styleCache.get(style, false)\n \t// Special-case background as it is mapped to the outer \".chroma\" class.\n \tif _, err := fmt.Fprintf(w, \"/* %s */ .%sbg { %s }\\n\", chroma.Background, f.prefix, css[chroma.Background]); err != nil {\n \t\treturn err\n@@ -562,3 +561,63 @@ func compressStyle(s string) string {\n \t}\n \treturn strings.Join(out, \";\")\n }\n+\n+const styleCacheLimit = 32\n+\n+type styleCacheEntry struct {\n+\tstyle      *chroma.Style\n+\tcompressed bool\n+\tcache      map[chroma.TokenType]string\n+}\n+\n+type styleCache struct {\n+\tmu sync.Mutex\n+\t// LRU cache of compiled (and possibly compressed) styles. This is a slice\n+\t// because the cache size is small, and a slice is sufficiently fast for\n+\t// small N.\n+\tcache []styleCacheEntry\n+\tf     *Formatter\n+}\n+\n+func newStyleCache(f *Formatter) *styleCache {\n+\treturn &styleCache{f: f}\n+}\n+\n+func (l *styleCache) get(style *chroma.Style, compress bool) map[chroma.TokenType]string {\n+\tl.mu.Lock()\n+\tdefer l.mu.Unlock()\n+\n+\t// Look for an existing entry.\n+\tfor i := len(l.cache) - 1; i >= 0; i-- {\n+\t\tentry := l.cache[i]\n+\t\tif entry.style == style && entry.compressed == compress {\n+\t\t\t// Top of the cache, no need to adjust the order.\n+\t\t\tif i == len(l.cache)-1 {\n+\t\t\t\treturn entry.cache\n+\t\t\t}\n+\t\t\t// Move this entry to the end of the LRU\n+\t\t\tcopy(l.cache[i:], l.cache[i+1:])\n+\t\t\tl.cache[len(l.cache)-1] = entry\n+\t\t\treturn entry.cache\n+\t\t}\n+\t}\n+\n+\t// No entry, create one.\n+\tcached := l.f.styleToCSS(style)\n+\tif !l.f.Classes {\n+\t\tfor t, style := range cached {\n+\t\t\tcached[t] = compressStyle(style)\n+\t\t}\n+\t}\n+\tif compress {\n+\t\tfor t, style := range cached {\n+\t\t\tcached[t] = compressStyle(style)\n+\t\t}\n+\t}\n+\t// Evict the oldest entry.\n+\tif len(l.cache) >= styleCacheLimit {\n+\t\tl.cache = l.cache[0:copy(l.cache, l.cache[1:])]\n+\t}\n+\tl.cache = append(l.cache, styleCacheEntry{style: style, cache: cached, compressed: compress})\n+\treturn cached\n+}"
    },
    {
      "sha": "82a7efa487872ea36bd4a1f81e88ff108ba4d42b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/caddyfile.go",
      "status": "modified",
      "additions": 120,
      "deletions": 60,
      "changes": 180,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcaddyfile.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcaddyfile.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcaddyfile.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -4,52 +4,82 @@ import (\n \t. \"github.com/alecthomas/chroma/v2\" // nolint\n )\n \n+// Matcher token stub for docs, or\n+// Named matcher: @name, or\n+// Path matcher: /foo, or\n+// Wildcard path matcher: *\n+// nolint: gosec\n+var caddyfileMatcherTokenRegexp = `(\\[\\<matcher\\>\\]|@[^\\s]+|/[^\\s]+|\\*)`\n+\n+// Comment at start of line, or\n+// Comment preceded by whitespace\n+var caddyfileCommentRegexp = `(^|\\s+)#.*\\n`\n+\n // caddyfileCommon are the rules common to both of the lexer variants\n func caddyfileCommonRules() Rules {\n \treturn Rules{\n \t\t\"site_block_common\": {\n+\t\t\tInclude(\"site_body\"),\n+\t\t\t// Any other directive\n+\t\t\t{`[^\\s#]+`, Keyword, Push(\"directive\")},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"site_body\": {\n \t\t\t// Import keyword\n-\t\t\t{`(import)(\\s+)([^\\s]+)`, ByGroups(Keyword, Text, NameVariableMagic), nil},\n+\t\t\t{`\\b(import|invoke)\\b( [^\\s#]+)`, ByGroups(Keyword, Text), Push(\"subdirective\")},\n \t\t\t// Matcher definition\n \t\t\t{`@[^\\s]+(?=\\s)`, NameDecorator, Push(\"matcher\")},\n \t\t\t// Matcher token stub for docs\n \t\t\t{`\\[\\<matcher\\>\\]`, NameDecorator, Push(\"matcher\")},\n \t\t\t// These cannot have matchers but may have things that look like\n \t\t\t// matchers in their arguments, so we just parse as a subdirective.\n-\t\t\t{`try_files`, Keyword, Push(\"subdirective\")},\n+\t\t\t{`\\b(try_files|tls|log|bind)\\b`, Keyword, Push(\"subdirective\")},\n \t\t\t// These are special, they can nest more directives\n-\t\t\t{`handle_errors|handle|route|handle_path|not`, Keyword, Push(\"nested_directive\")},\n-\t\t\t// Any other directive\n-\t\t\t{`[^\\s#]+`, Keyword, Push(\"directive\")},\n-\t\t\tInclude(\"base\"),\n+\t\t\t{`\\b(handle_errors|handle_path|handle_response|replace_status|handle|route)\\b`, Keyword, Push(\"nested_directive\")},\n+\t\t\t// uri directive has special syntax\n+\t\t\t{`\\b(uri)\\b`, Keyword, Push(\"uri_directive\")},\n \t\t},\n \t\t\"matcher\": {\n \t\t\t{`\\{`, Punctuation, Push(\"block\")},\n \t\t\t// Not can be one-liner\n \t\t\t{`not`, Keyword, Push(\"deep_not_matcher\")},\n+\t\t\t// Heredoc for CEL expression\n+\t\t\tInclude(\"heredoc\"),\n+\t\t\t// Backtick for CEL expression\n+\t\t\t{\"`\", StringBacktick, Push(\"backticks\")},\n \t\t\t// Any other same-line matcher\n \t\t\t{`[^\\s#]+`, Keyword, Push(\"arguments\")},\n \t\t\t// Terminators\n-\t\t\t{`\\n`, Text, Pop(1)},\n+\t\t\t{`\\s*\\n`, Text, Pop(1)},\n \t\t\t{`\\}`, Punctuation, Pop(1)},\n \t\t\tInclude(\"base\"),\n \t\t},\n \t\t\"block\": {\n \t\t\t{`\\}`, Punctuation, Pop(2)},\n+\t\t\t// Using double quotes doesn't stop at spaces\n+\t\t\t{`\"`, StringDouble, Push(\"double_quotes\")},\n+\t\t\t// Using backticks doesn't stop at spaces\n+\t\t\t{\"`\", StringBacktick, Push(\"backticks\")},\n \t\t\t// Not can be one-liner\n \t\t\t{`not`, Keyword, Push(\"not_matcher\")},\n-\t\t\t// Any other subdirective\n+\t\t\t// Directives & matcher definitions\n+\t\t\tInclude(\"site_body\"),\n+\t\t\t// Any directive\n \t\t\t{`[^\\s#]+`, Keyword, Push(\"subdirective\")},\n \t\t\tInclude(\"base\"),\n \t\t},\n \t\t\"nested_block\": {\n \t\t\t{`\\}`, Punctuation, Pop(2)},\n-\t\t\t// Matcher definition\n-\t\t\t{`@[^\\s]+(?=\\s)`, NameDecorator, Push(\"matcher\")},\n-\t\t\t// Something that starts with literally < is probably a docs stub\n-\t\t\t{`\\<[^#]+\\>`, Keyword, Push(\"nested_directive\")},\n-\t\t\t// Any other directive\n-\t\t\t{`[^\\s#]+`, Keyword, Push(\"nested_directive\")},\n+\t\t\t// Using double quotes doesn't stop at spaces\n+\t\t\t{`\"`, StringDouble, Push(\"double_quotes\")},\n+\t\t\t// Using backticks doesn't stop at spaces\n+\t\t\t{\"`\", StringBacktick, Push(\"backticks\")},\n+\t\t\t// Not can be one-liner\n+\t\t\t{`not`, Keyword, Push(\"not_matcher\")},\n+\t\t\t// Directives & matcher definitions\n+\t\t\tInclude(\"site_body\"),\n+\t\t\t// Any other subdirective\n+\t\t\t{`[^\\s#]+`, Keyword, Push(\"directive\")},\n \t\t\tInclude(\"base\"),\n \t\t},\n \t\t\"not_matcher\": {\n@@ -66,69 +96,97 @@ func caddyfileCommonRules() Rules {\n \t\t},\n \t\t\"directive\": {\n \t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"block\")},\n-\t\t\tInclude(\"matcher_token\"),\n-\t\t\tInclude(\"comments_pop_1\"),\n-\t\t\t{`\\n`, Text, Pop(1)},\n+\t\t\t{caddyfileMatcherTokenRegexp, NameDecorator, Push(\"arguments\")},\n+\t\t\t{caddyfileCommentRegexp, CommentSingle, Pop(1)},\n+\t\t\t{`\\s*\\n`, Text, Pop(1)},\n \t\t\tInclude(\"base\"),\n \t\t},\n \t\t\"nested_directive\": {\n \t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"nested_block\")},\n-\t\t\tInclude(\"matcher_token\"),\n-\t\t\tInclude(\"comments_pop_1\"),\n-\t\t\t{`\\n`, Text, Pop(1)},\n+\t\t\t{caddyfileMatcherTokenRegexp, NameDecorator, Push(\"nested_arguments\")},\n+\t\t\t{caddyfileCommentRegexp, CommentSingle, Pop(1)},\n+\t\t\t{`\\s*\\n`, Text, Pop(1)},\n \t\t\tInclude(\"base\"),\n \t\t},\n \t\t\"subdirective\": {\n \t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"block\")},\n-\t\t\tInclude(\"comments_pop_1\"),\n-\t\t\t{`\\n`, Text, Pop(1)},\n+\t\t\t{caddyfileCommentRegexp, CommentSingle, Pop(1)},\n+\t\t\t{`\\s*\\n`, Text, Pop(1)},\n \t\t\tInclude(\"base\"),\n \t\t},\n \t\t\"arguments\": {\n \t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"block\")},\n-\t\t\tInclude(\"comments_pop_2\"),\n+\t\t\t{caddyfileCommentRegexp, CommentSingle, Pop(2)},\n \t\t\t{`\\\\\\n`, Text, nil}, // Skip escaped newlines\n-\t\t\t{`\\n`, Text, Pop(2)},\n+\t\t\t{`\\s*\\n`, Text, Pop(2)},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"nested_arguments\": {\n+\t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"nested_block\")},\n+\t\t\t{caddyfileCommentRegexp, CommentSingle, Pop(2)},\n+\t\t\t{`\\\\\\n`, Text, nil}, // Skip escaped newlines\n+\t\t\t{`\\s*\\n`, Text, Pop(2)},\n \t\t\tInclude(\"base\"),\n \t\t},\n \t\t\"deep_subdirective\": {\n \t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"block\")},\n-\t\t\tInclude(\"comments_pop_3\"),\n-\t\t\t{`\\n`, Text, Pop(3)},\n+\t\t\t{caddyfileCommentRegexp, CommentSingle, Pop(3)},\n+\t\t\t{`\\s*\\n`, Text, Pop(3)},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"uri_directive\": {\n+\t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"block\")},\n+\t\t\t{caddyfileMatcherTokenRegexp, NameDecorator, nil},\n+\t\t\t{`(strip_prefix|strip_suffix|replace|path_regexp)`, NameConstant, Push(\"arguments\")},\n+\t\t\t{caddyfileCommentRegexp, CommentSingle, Pop(1)},\n+\t\t\t{`\\s*\\n`, Text, Pop(1)},\n \t\t\tInclude(\"base\"),\n \t\t},\n-\t\t\"matcher_token\": {\n-\t\t\t{`@[^\\s]+`, NameDecorator, Push(\"arguments\")},         // Named matcher\n-\t\t\t{`/[^\\s]+`, NameDecorator, Push(\"arguments\")},         // Path matcher\n-\t\t\t{`\\*`, NameDecorator, Push(\"arguments\")},              // Wildcard path matcher\n-\t\t\t{`\\[\\<matcher\\>\\]`, NameDecorator, Push(\"arguments\")}, // Matcher token stub for docs\n+\t\t\"double_quotes\": {\n+\t\t\tInclude(\"placeholder\"),\n+\t\t\t{`\\\\\"`, StringDouble, nil},\n+\t\t\t{`[^\"]`, StringDouble, nil},\n+\t\t\t{`\"`, StringDouble, Pop(1)},\n \t\t},\n-\t\t\"comments\": {\n-\t\t\t{`^#.*\\n`, CommentSingle, nil},   // Comment at start of line\n-\t\t\t{`\\s+#.*\\n`, CommentSingle, nil}, // Comment preceded by whitespace\n+\t\t\"backticks\": {\n+\t\t\tInclude(\"placeholder\"),\n+\t\t\t{\"\\\\\\\\`\", StringBacktick, nil},\n+\t\t\t{\"[^`]\", StringBacktick, nil},\n+\t\t\t{\"`\", StringBacktick, Pop(1)},\n \t\t},\n-\t\t\"comments_pop_1\": {\n-\t\t\t{`^#.*\\n`, CommentSingle, Pop(1)},   // Comment at start of line\n-\t\t\t{`\\s+#.*\\n`, CommentSingle, Pop(1)}, // Comment preceded by whitespace\n+\t\t\"optional\": {\n+\t\t\t// Docs syntax for showing optional parts with [ ]\n+\t\t\t{`\\[`, Punctuation, Push(\"optional\")},\n+\t\t\tInclude(\"name_constants\"),\n+\t\t\t{`\\|`, Punctuation, nil},\n+\t\t\t{`[^\\[\\]\\|]+`, String, nil},\n+\t\t\t{`\\]`, Punctuation, Pop(1)},\n \t\t},\n-\t\t\"comments_pop_2\": {\n-\t\t\t{`^#.*\\n`, CommentSingle, Pop(2)},   // Comment at start of line\n-\t\t\t{`\\s+#.*\\n`, CommentSingle, Pop(2)}, // Comment preceded by whitespace\n+\t\t\"heredoc\": {\n+\t\t\t{`(<<([a-zA-Z0-9_-]+))(\\n(.*|\\n)*)(\\s*)(\\2)`, ByGroups(StringHeredoc, nil, String, String, String, StringHeredoc), nil},\n \t\t},\n-\t\t\"comments_pop_3\": {\n-\t\t\t{`^#.*\\n`, CommentSingle, Pop(3)},   // Comment at start of line\n-\t\t\t{`\\s+#.*\\n`, CommentSingle, Pop(3)}, // Comment preceded by whitespace\n+\t\t\"name_constants\": {\n+\t\t\t{`\\b(most_recently_modified|largest_size|smallest_size|first_exist|internal|disable_redirects|ignore_loaded_certs|disable_certs|private_ranges|first|last|before|after|on|off)\\b(\\||(?=\\]|\\s|$))`, ByGroups(NameConstant, Punctuation), nil},\n+\t\t},\n+\t\t\"placeholder\": {\n+\t\t\t// Placeholder with dots, colon for default value, brackets for args[0:]\n+\t\t\t{`\\{[\\w+.\\[\\]\\:\\$-]+\\}`, StringEscape, nil},\n+\t\t\t// Handle opening brackets with no matching closing one\n+\t\t\t{`\\{[^\\}\\s]*\\b`, String, nil},\n \t\t},\n \t\t\"base\": {\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`(on|off|first|last|before|after|internal|strip_prefix|strip_suffix|replace)\\b`, NameConstant, nil},\n-\t\t\t{`(https?://)?([a-z0-9.-]+)(:)([0-9]+)`, ByGroups(Name, Name, Punctuation, LiteralNumberInteger), nil},\n-\t\t\t{`[a-z-]+/[a-z-+]+`, LiteralString, nil},\n-\t\t\t{`[0-9]+[km]?\\b`, LiteralNumberInteger, nil},\n-\t\t\t{`\\{[\\w+.\\$-]+\\}`, LiteralStringEscape, nil}, // Placeholder\n-\t\t\t{`\\[(?=[^#{}$]+\\])`, Punctuation, nil},\n-\t\t\t{`\\]|\\|`, Punctuation, nil},\n-\t\t\t{`[^\\s#{}$\\]]+`, LiteralString, nil},\n+\t\t\t{caddyfileCommentRegexp, CommentSingle, nil},\n+\t\t\t{`\\[\\<matcher\\>\\]`, NameDecorator, nil},\n+\t\t\tInclude(\"name_constants\"),\n+\t\t\tInclude(\"heredoc\"),\n+\t\t\t{`(https?://)?([a-z0-9.-]+)(:)([0-9]+)([^\\s]*)`, ByGroups(Name, Name, Punctuation, NumberInteger, Name), nil},\n+\t\t\t{`\\[`, Punctuation, Push(\"optional\")},\n+\t\t\t{\"`\", StringBacktick, Push(\"backticks\")},\n+\t\t\t{`\"`, StringDouble, Push(\"double_quotes\")},\n+\t\t\tInclude(\"placeholder\"),\n+\t\t\t{`[a-z-]+/[a-z-+]+`, String, nil},\n+\t\t\t{`[0-9]+([smhdk]|ns|us|µs|ms)?\\b`, NumberInteger, nil},\n+\t\t\t{`[^\\s\\n#\\{]+`, String, nil},\n \t\t\t{`/[^\\s#]*`, Name, nil},\n \t\t\t{`\\s+`, Text, nil},\n \t\t},\n@@ -149,27 +207,29 @@ var Caddyfile = Register(MustNewLexer(\n func caddyfileRules() Rules {\n \treturn Rules{\n \t\t\"root\": {\n-\t\t\tInclude(\"comments\"),\n+\t\t\t{caddyfileCommentRegexp, CommentSingle, nil},\n \t\t\t// Global options block\n \t\t\t{`^\\s*(\\{)\\s*$`, ByGroups(Punctuation), Push(\"globals\")},\n+\t\t\t// Top level import\n+\t\t\t{`(import)(\\s+)([^\\s]+)`, ByGroups(Keyword, Text, NameVariableMagic), nil},\n \t\t\t// Snippets\n-\t\t\t{`(\\([^\\s#]+\\))(\\s*)(\\{)`, ByGroups(NameVariableAnonymous, Text, Punctuation), Push(\"snippet\")},\n+\t\t\t{`(&?\\([^\\s#]+\\))(\\s*)(\\{)`, ByGroups(NameVariableAnonymous, Text, Punctuation), Push(\"snippet\")},\n \t\t\t// Site label\n \t\t\t{`[^#{(\\s,]+`, GenericHeading, Push(\"label\")},\n \t\t\t// Site label with placeholder\n-\t\t\t{`\\{[\\w+.\\$-]+\\}`, LiteralStringEscape, Push(\"label\")},\n+\t\t\t{`\\{[\\w+.\\[\\]\\:\\$-]+\\}`, StringEscape, Push(\"label\")},\n \t\t\t{`\\s+`, Text, nil},\n \t\t},\n \t\t\"globals\": {\n \t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t\t{`[^\\s#]+`, Keyword, Push(\"directive\")},\n+\t\t\t// Global options are parsed as subdirectives (no matcher)\n+\t\t\t{`[^\\s#]+`, Keyword, Push(\"subdirective\")},\n \t\t\tInclude(\"base\"),\n \t\t},\n \t\t\"snippet\": {\n \t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t\t// Matcher definition\n-\t\t\t{`@[^\\s]+(?=\\s)`, NameDecorator, Push(\"matcher\")},\n-\t\t\t// Any directive\n+\t\t\tInclude(\"site_body\"),\n+\t\t\t// Any other directive\n \t\t\t{`[^\\s#]+`, Keyword, Push(\"directive\")},\n \t\t\tInclude(\"base\"),\n \t\t},\n@@ -179,7 +239,7 @@ func caddyfileRules() Rules {\n \t\t\t{`,\\s*\\n?`, Text, nil},\n \t\t\t{` `, Text, nil},\n \t\t\t// Site label with placeholder\n-\t\t\t{`\\{[\\w+.\\$-]+\\}`, LiteralStringEscape, nil},\n+\t\t\tInclude(\"placeholder\"),\n \t\t\t// Site label\n \t\t\t{`[^#{(\\s,]+`, GenericHeading, nil},\n \t\t\t// Comment after non-block label (hack because comments end in \\n)"
    },
    {
      "sha": "f1e21db03f05a76010a10e0e25342854f7f6ae57",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/c#.xml",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc%23.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc%23.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc%23.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -19,10 +19,10 @@\n       <rule pattern=\"\\\\\\n\">\n         <token type=\"Text\"/>\n       </rule>\n-      <rule pattern=\"///[^\\n\\r]+\">\n+      <rule pattern=\"///[^\\n\\r]*\">\n         <token type=\"CommentSpecial\"/>\n       </rule>\n-      <rule pattern=\"//[^\\n\\r]+\">\n+      <rule pattern=\"//[^\\n\\r]*\">\n         <token type=\"CommentSingle\"/>\n       </rule>\n       <rule pattern=\"/[*].*?[*]/\">"
    },
    {
      "sha": "d6c3ea71bfdb7d7551b30677970d39a930fb36cf",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/cue.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcue.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcue.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcue.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -49,7 +49,7 @@\n       <rule pattern=\"(true|false|null|_)\\b\">\n         <token type=\"KeywordConstant\"/>\n       </rule>\n-      <rule pattern=\"[_a-zA-Z]\\w*\">\n+      <rule pattern=\"#?[_a-zA-Z$]\\w*\">\n         <token type=\"Name\"/>\n       </rule>\n     </state>"
    },
    {
      "sha": "ad71ad471513900931fddecf287efcf68267b5fd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/desktop_entry.xml",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdesktop_entry.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdesktop_entry.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdesktop_entry.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -0,0 +1,17 @@\n+<lexer>\n+  <config>\n+    <name>Desktop file</name>\n+    <alias>desktop</alias>\n+    <alias>desktop_entry</alias>\n+    <filename>*.desktop</filename>\n+    <mime_type>application/x-desktop</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"^[ \\t]*\\n\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\"^(#.*)(\\n)\"><bygroups><token type=\"CommentSingle\"/><token type=\"TextWhitespace\"/></bygroups></rule>\n+      <rule pattern=\"(\\[[^\\]\\n]+\\])(\\n)\"><bygroups><token type=\"Keyword\"/><token type=\"TextWhitespace\"/></bygroups></rule>\n+      <rule pattern=\"([-A-Za-z0-9]+)(\\[[^\\] \\t=]+\\])?([ \\t]*)(=)([ \\t]*)([^\\n]*)([ \\t\\n]*\\n)\"><bygroups><token type=\"NameAttribute\"/><token type=\"NameNamespace\"/><token type=\"TextWhitespace\"/><token type=\"Operator\"/><token type=\"TextWhitespace\"/><token type=\"LiteralString\"/><token type=\"TextWhitespace\"/></bygroups></rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "5f805d6da0cbae57ad21fe2d0dd667e391d19ad7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/haskell.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhaskell.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhaskell.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhaskell.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -86,7 +86,7 @@\n       <rule pattern=\"\\\\(?![:!#$%&amp;*+.\\\\/&lt;=&gt;?@^|~-]+)\">\n         <token type=\"NameFunction\"/>\n       </rule>\n-      <rule pattern=\"(&lt;-|::|-&gt;|=&gt;|=)(?![:!#$%&amp;*+.\\\\/&lt;=&gt;?@^|~-]+)\">\n+      <rule pattern=\"(&lt;-|::|-&gt;|=&gt;|=|'([:!#$%&amp;*+.\\\\/&lt;=&gt;?@^|~-]+))(?![:!#$%&amp;*+.\\\\/&lt;=&gt;?@^|~-]+)\">\n         <token type=\"OperatorWord\"/>\n       </rule>\n       <rule pattern=\":[:!#$%&amp;*+.\\\\/&lt;=&gt;?@^|~-]*\">"
    },
    {
      "sha": "3473cfd14f49e9612fef50ed2470aaf512719cb1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/json.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjson.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjson.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjson.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -3,6 +3,7 @@\n     <name>JSON</name>\n     <alias>json</alias>\n     <filename>*.json</filename>\n+    <filename>*.avsc</filename>\n     <mime_type>application/json</mime_type>\n     <dot_all>true</dot_all>\n     <not_multiline>true</not_multiline>"
    },
    {
      "sha": "7b22a46c609c7b44fe125a37f58e38b5ff9cb877",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/materialize_sql_dialect.xml",
      "status": "added",
      "additions": 155,
      "deletions": 0,
      "changes": 155,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmaterialize_sql_dialect.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmaterialize_sql_dialect.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fmaterialize_sql_dialect.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -0,0 +1,155 @@\n+<lexer>\n+  <config>\n+    <name>Materialize SQL dialect</name>\n+    <alias>materialize</alias>\n+    <alias>mzsql</alias>\n+    <mime_type>text/x-materializesql</mime_type>\n+    <case_insensitive>true</case_insensitive>\n+    <not_multiline>true</not_multiline>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"--.*\\n?\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/\\*\">\n+        <token type=\"CommentMultiline\"/>\n+        <push state=\"multiline-comments\"/>\n+      </rule>\n+      <rule pattern=\"(bigint|bigserial|bit|bit\\s+varying|bool|boolean|box|bytea|char|character|character\\s+varying|cidr|circle|date|decimal|double\\s+precision|float4|float8|inet|int|int2|int4|int8|integer|interval|json|jsonb|line|lseg|macaddr|money|numeric|path|pg_lsn|point|polygon|real|serial|serial2|serial4|serial8|smallint|smallserial|text|time|timestamp|timestamptz|timetz|tsquery|tsvector|txid_snapshot|uuid|varbit|varchar|with\\s+time\\s+zone|without\\s+time\\s+zone|xml|anyarray|anyelement|anyenum|anynonarray|anyrange|cstring|fdw_handler|internal|language_handler|opaque|record|void)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"(?s)(DO)(\\s+)(?:(LANGUAGE)?(\\s+)(&#39;?)(\\w+)?(&#39;?)(\\s+))?(\\$)([^$]*)(\\$)(.*?)(\\$)(\\10)(\\$)\">\n+        <usingbygroup>\n+          <sublexer_name_group>6</sublexer_name_group>\n+          <code_group>12</code_group>\n+          <emitters>\n+            <token type=\"Keyword\"/>\n+            <token type=\"Text\"/>\n+            <token type=\"Keyword\"/>\n+            <token type=\"Text\"/>\n+            <token type=\"LiteralStringSingle\"/>\n+            <token type=\"LiteralStringSingle\"/>\n+            <token type=\"LiteralStringSingle\"/>\n+            <token type=\"Text\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+          </emitters>\n+        </usingbygroup>\n+      </rule>\n+      <rule pattern=\"(ACCESS|ACKS|ADD|ADDRESSES|AGGREGATE|ALL|ALTER|AND|ANY|ARN|ARRANGEMENT|ARRAY|AS|ASC|ASSERT|AT|AUCTION|AUTHORITY|AVAILABILITY|AVRO|AWS|BEGIN|BETWEEN|BIGINT|BILLED|BODY|BOOLEAN|BOTH|BPCHAR|BROKEN|BROKER|BROKERS|BY|BYTES|CARDINALITY|CASCADE|CASE|CAST|CERTIFICATE|CHAIN|CHAR|CHARACTER|CHARACTERISTICS|CHECK|CLIENT|CLOSE|CLUSTER|CLUSTERS|COALESCE|COLLATE|COLUMN|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPACTION|COMPRESSION|COMPUTE|COMPUTECTL|CONFLUENT|CONNECTION|CONNECTIONS|CONSTRAINT|COPY|COUNT|COUNTER|CREATE|CREATECLUSTER|CREATEDB|CREATEROLE|CROSS|CSV|CURRENT|CURSOR|DATABASE|DATABASES|DATUMS|DAY|DAYS|DEALLOCATE|DEBEZIUM|DEBUG|DEBUGGING|DEC|DECIMAL|DECLARE|DECORRELATED|DEFAULT|DEFAULTS|DELETE|DELIMITED|DELIMITER|DESC|DETAILS|DISCARD|DISK|DISTINCT|DOC|DOT|DOUBLE|DROP|EFFORT|ELEMENT|ELSE|ENABLE|END|ENDPOINT|ENFORCED|ENVELOPE|ERROR|ESCAPE|EXCEPT|EXECUTE|EXISTS|EXPECTED|EXPLAIN|EXPOSE|EXTRACT|FACTOR|FALSE|FETCH|FIELDS|FILTER|FIRST|FLOAT|FOLLOWING|FOR|FOREIGN|FORMAT|FORWARD|FROM|FULL|FULLNAME|FUNCTION|GENERATOR|GRANT|GREATEST|GROUP|GROUPS|HAVING|HEADER|HEADERS|HOLD|HOST|HOUR|HOURS|ID|IDEMPOTENCE|IDLE|IF|IGNORE|ILIKE|IN|INCLUDE|INDEX|INDEXES|INFO|INHERIT|INLINE|INNER|INPUT|INSERT|INSPECT|INT|INTEGER|INTERNAL|INTERSECT|INTERVAL|INTO|INTROSPECTION|IS|ISNULL|ISOLATION|JOIN|JSON|KAFKA|KEY|KEYS|LAST|LATERAL|LATEST|LEADING|LEAST|LEFT|LEVEL|LIKE|LIMIT|LIST|LOAD|LOCAL|LOG|LOGICAL|LOGIN|MANAGED|MAP|MARKETING|MATERIALIZE|MATERIALIZED|MAX|MECHANISMS|MEMBERSHIP|MERGE|MESSAGE|METADATA|MINUTE|MINUTES|MODE|MONTH|MONTHS|MS|MUTUALLY|NAME|NAMES|NATURAL|NEXT|NO|NOCREATECLUSTER|NOCREATEDB|NOCREATEROLE|NOINHERIT|NOLOGIN|NONE|NOSUPERUSER|NOT|NOTICE|NULL|NULLIF|NULLS|OBJECTS|OF|OFFSET|ON|ONLY|OPERATOR|OPTIMIZED|OPTIMIZER|OPTIONS|OR|ORDER|ORDINALITY|OUTER|OVER|OWNED|OWNER|PARTITION|PASSWORD|PHYSICAL|PLAN|PLANS|PORT|POSITION|POSTGRES|PRECEDING|PRECISION|PREFIX|PREPARE|PRIMARY|PRIVATELINK|PRIVILEGES|PROGRESS|PROTOBUF|PROTOCOL|PUBLICATION|QUERY|QUOTE|RAISE|RANGE|RAW|READ|REAL|REASSIGN|RECURSION|RECURSIVE|REFERENCES|REFRESH|REGEX|REGION|REGISTRY|RENAME|REPEATABLE|REPLACE|REPLICA|REPLICAS|REPLICATION|RESET|RESPECT|RESTRICT|RETENTION|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLES|ROLLBACK|ROTATE|ROW|ROWS|SASL|SCALE|SCHEMA|SCHEMAS|SCRIPT|SECOND|SECONDS|SECRET|SECRETS|SECURITY|SEED|SELECT|SEQUENCES|SERIALIZABLE|SERVICE|SESSION|SET|SHARD|SHOW|SINK|SINKS|SIZE|SMALLINT|SNAPSHOT|SOME|SOURCE|SOURCES|SSH|SSL|START|STDIN|STDOUT|STORAGE|STORAGECTL|STRATEGY|STRICT|STRING|SUBSCRIBE|SUBSOURCE|SUBSOURCES|SUBSTRING|SUPERUSER|SWAP|SYSTEM|TABLE|TABLES|TAIL|TEMP|TEMPORARY|TEST|TEXT|THEN|TICK|TIES|TIME|TIMELINE|TIMEOUT|TIMESTAMP|TIMESTAMPTZ|TO|TOKEN|TOPIC|TPCH|TRACE|TRAILING|TRANSACTION|TRIM|TRUE|TUNNEL|TYPE|TYPES|UNBOUNDED|UNCOMMITTED|UNION|UNIQUE|UNKNOWN|UP|UPDATE|UPSERT|URL|USAGE|USER|USERNAME|USERS|USING|VALIDATE|VALUE|VALUES|VARCHAR|VARYING|VIEW|VIEWS|WARNING|WEBHOOK|WHEN|WHERE|WINDOW|WIRE|WITH|WITHIN|WITHOUT|WORK|WORKERS|WRITE|YEAR|YEARS|ZONE|ZONES)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"[+*/&lt;&gt;=~!@#%^&amp;|`?-]+\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"::\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"\\$\\d+\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+      <rule pattern=\"([0-9]*\\.[0-9]*|[0-9]+)(e[+-]?[0-9]+)?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"((?:E|U&amp;)?)(&#39;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringSingle\"/>\n+        </bygroups>\n+        <push state=\"string\"/>\n+      </rule>\n+      <rule pattern=\"((?:U&amp;)?)(&#34;)\">\n+        <bygroups>\n+          <token type=\"LiteralStringAffix\"/>\n+          <token type=\"LiteralStringName\"/>\n+        </bygroups>\n+        <push state=\"quoted-ident\"/>\n+      </rule>\n+      <rule pattern=\"(?s)(\\$)([^$]*)(\\$)(.*?)(\\$)(\\2)(\\$)(\\s+)(LANGUAGE)?(\\s+)(&#39;?)(\\w+)?(&#39;?)\">\n+        <usingbygroup>\n+          <sublexer_name_group>12</sublexer_name_group>\n+          <code_group>4</code_group>\n+          <emitters>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"LiteralStringHeredoc\"/>\n+            <token type=\"Text\"/>\n+            <token type=\"Keyword\"/>\n+            <token type=\"Text\"/>\n+            <token type=\"LiteralStringSingle\"/>\n+            <token type=\"LiteralStringSingle\"/>\n+            <token type=\"LiteralStringSingle\"/>\n+          </emitters>\n+        </usingbygroup>\n+      </rule>\n+      <rule pattern=\"(?s)(\\$)([^$]*)(\\$)(.*?)(\\$)(\\2)(\\$)\">\n+        <token type=\"LiteralStringHeredoc\"/>\n+      </rule>\n+      <rule pattern=\"[a-z_]\\w*\">\n+        <token type=\"Name\"/>\n+      </rule>\n+      <rule pattern=\":([&#39;&#34;]?)[a-z]\\w*\\b\\1\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+      <rule pattern=\"[;:()\\[\\]{},.]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+    </state>\n+    <state name=\"multiline-comments\">\n+      <rule pattern=\"/\\*\">\n+        <token type=\"CommentMultiline\"/>\n+        <push state=\"multiline-comments\"/>\n+      </rule>\n+      <rule pattern=\"\\*/\">\n+        <token type=\"CommentMultiline\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"[^/*]+\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"[/*]\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"[^&#39;]+\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"&#39;&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"quoted-ident\">\n+      <rule pattern=\"[^&#34;]+\">\n+        <token type=\"LiteralStringName\"/>\n+      </rule>\n+      <rule pattern=\"&#34;&#34;\">\n+        <token type=\"LiteralStringName\"/>\n+      </rule>\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralStringName\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "74d443b649780b0b67a8ff9ec4a32c26076b817a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/ndisasm.xml",
      "status": "added",
      "additions": 123,
      "deletions": 0,
      "changes": 123,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fndisasm.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fndisasm.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fndisasm.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -0,0 +1,123 @@\n+<lexer>\n+  <config>\n+    <name>NDISASM</name>\n+    <alias>ndisasm</alias>\n+    <mime_type>text/x-disasm</mime_type>\n+    <case_insensitive>true</case_insensitive>\n+    <priority>0.5</priority> <!-- Lower than NASM -->\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+        <rule pattern=\"^[0-9A-Za-z]+\">\n+            <token type=\"CommentSpecial\"/>\n+            <push state=\"offset\"/>\n+        </rule>\n+    </state>\n+    <state name=\"offset\">\n+        <rule pattern=\"[0-9A-Za-z]+\">\n+            <token type=\"CommentSpecial\"/>\n+            <push state=\"assembly\"/>\n+        </rule>\n+        <rule>\n+            <include state=\"whitespace\"/>\n+        </rule>\n+    </state>\n+    <state name=\"punctuation\">\n+      <rule pattern=\"[,():\\[\\]]+\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"[&amp;|^&lt;&gt;+*/%~-]+\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[$]+\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"seg|wrt|strict\">\n+        <token type=\"OperatorWord\"/>\n+      </rule>\n+      <rule pattern=\"byte|[dq]?word\">\n+        <token type=\"KeywordType\"/>\n+      </rule>\n+    </state>\n+    <state name=\"assembly\">\n+      <rule>\n+        <include state=\"whitespace\"/>\n+      </rule>\n+      <rule pattern=\"[a-z$._?][\\w$.?#@~]*:\">\n+        <token type=\"NameLabel\"/>\n+      </rule>\n+      <rule pattern=\"([a-z$._?][\\w$.?#@~]*)(\\s+)(equ)\">\n+        <bygroups>\n+          <token type=\"NameConstant\"/>\n+          <token type=\"KeywordDeclaration\"/>\n+          <token type=\"KeywordDeclaration\"/>\n+        </bygroups>\n+        <push state=\"instruction-args\"/>\n+      </rule>\n+      <rule pattern=\"BITS|USE16|USE32|SECTION|SEGMENT|ABSOLUTE|EXTERN|GLOBAL|ORG|ALIGN|STRUC|ENDSTRUC|COMMON|CPU|GROUP|UPPERCASE|IMPORT|EXPORT|LIBRARY|MODULE\">\n+        <token type=\"Keyword\"/>\n+        <push state=\"instruction-args\"/>\n+      </rule>\n+      <rule pattern=\"(?:res|d)[bwdqt]|times\">\n+        <token type=\"KeywordDeclaration\"/>\n+        <push state=\"instruction-args\"/>\n+      </rule>\n+      <rule pattern=\"[a-z$._?][\\w$.?#@~]*\">\n+        <token type=\"NameFunction\"/>\n+        <push state=\"instruction-args\"/>\n+      </rule>\n+      <rule pattern=\"[\\r\\n]+\">\n+        <token type=\"Text\"/>\n+        <pop depth=\"2\"/>\n+      </rule>\n+    </state>\n+    <state name=\"instruction-args\">\n+      <rule pattern=\"&#34;(\\\\&#34;|[^&#34;\\n])*&#34;|&#39;(\\\\&#39;|[^&#39;\\n])*&#39;|`(\\\\`|[^`\\n])*`\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"(?:0x[0-9a-f]+|$0[0-9a-f]*|[0-9]+[0-9a-f]*h)\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"[0-7]+q\">\n+        <token type=\"LiteralNumberOct\"/>\n+      </rule>\n+      <rule pattern=\"[01]+b\">\n+        <token type=\"LiteralNumberBin\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+\\.e?[0-9]+\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"punctuation\"/>\n+      </rule>\n+      <rule pattern=\"r[0-9][0-5]?[bwd]|[a-d][lh]|[er]?[a-d]x|[er]?[sb]p|[er]?[sd]i|[c-gs]s|st[0-7]|mm[0-7]|cr[0-4]|dr[0-367]|tr[3-7]\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"[a-z$._?][\\w$.?#@~]*\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+      <rule pattern=\"[\\r\\n]+\">\n+        <token type=\"Text\"/>\n+        <pop depth=\"3\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"whitespace\"/>\n+      </rule>\n+    </state>\n+    <state name=\"whitespace\">\n+      <rule pattern=\"\\n\">\n+        <token type=\"Text\"/>\n+        <pop depth=\"2\"/>\n+      </rule>\n+      <rule pattern=\"[ \\t]+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\";.*\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "84558c3b65d5d87d2b8ea23b804de780302b560a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/promela.xml",
      "status": "added",
      "additions": 119,
      "deletions": 0,
      "changes": 119,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpromela.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpromela.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpromela.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -0,0 +1,119 @@\n+\n+<lexer>\n+  <config>\n+    <name>Promela</name>\n+    <alias>promela</alias>\n+    <filename>*.pml</filename>\n+    <filename>*.prom</filename>\n+    <filename>*.prm</filename>\n+    <filename>*.promela</filename>\n+    <filename>*.pr</filename>\n+    <filename>*.pm</filename>\n+    <mime_type>text/x-promela</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"statements\">\n+      <rule pattern=\"(\\[\\]|&lt;&gt;|/\\\\|\\\\/)|(U|W|V)\\b\"><token type=\"Operator\"/></rule>\n+      <rule pattern=\"@\"><token type=\"Punctuation\"/></rule>\n+      <rule pattern=\"(\\.)([a-zA-Z_]\\w*)\"><bygroups><token type=\"Operator\"/><token type=\"NameAttribute\"/></bygroups></rule>\n+      <rule><include state=\"keywords\"/></rule>\n+      <rule><include state=\"types\"/></rule>\n+      <rule pattern=\"([LuU]|u8)?(&quot;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralString\"/></bygroups><push state=\"string\"/></rule>\n+      <rule pattern=\"([LuU]|u8)?(&#x27;)(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,2}|[^\\\\\\&#x27;\\n])(&#x27;)\"><bygroups><token type=\"LiteralStringAffix\"/><token type=\"LiteralStringChar\"/><token type=\"LiteralStringChar\"/><token type=\"LiteralStringChar\"/></bygroups></rule>\n+      <rule pattern=\"0[xX]([0-9a-fA-F](\\&#x27;?[0-9a-fA-F])*\\.[0-9a-fA-F](\\&#x27;?[0-9a-fA-F])*|\\.[0-9a-fA-F](\\&#x27;?[0-9a-fA-F])*|[0-9a-fA-F](\\&#x27;?[0-9a-fA-F])*)[pP][+-]?[0-9a-fA-F](\\&#x27;?[0-9a-fA-F])*[lL]?\"><token type=\"LiteralNumberFloat\"/></rule>\n+      <rule pattern=\"(-)?(\\d(\\&#x27;?\\d)*\\.\\d(\\&#x27;?\\d)*|\\.\\d(\\&#x27;?\\d)*|\\d(\\&#x27;?\\d)*)[eE][+-]?\\d(\\&#x27;?\\d)*[fFlL]?\"><token type=\"LiteralNumberFloat\"/></rule>\n+      <rule pattern=\"(-)?((\\d(\\&#x27;?\\d)*\\.(\\d(\\&#x27;?\\d)*)?|\\.\\d(\\&#x27;?\\d)*)[fFlL]?)|(\\d(\\&#x27;?\\d)*[fFlL])\"><token type=\"LiteralNumberFloat\"/></rule>\n+      <rule pattern=\"(-)?0[xX][0-9a-fA-F](\\&#x27;?[0-9a-fA-F])*(([uU][lL]{0,2})|[lL]{1,2}[uU]?)?\"><token type=\"LiteralNumberHex\"/></rule>\n+      <rule pattern=\"(-)?0[bB][01](\\&#x27;?[01])*(([uU][lL]{0,2})|[lL]{1,2}[uU]?)?\"><token type=\"LiteralNumberBin\"/></rule>\n+      <rule pattern=\"(-)?0(\\&#x27;?[0-7])+(([uU][lL]{0,2})|[lL]{1,2}[uU]?)?\"><token type=\"LiteralNumberOct\"/></rule>\n+      <rule pattern=\"(-)?\\d(\\&#x27;?\\d)*(([uU][lL]{0,2})|[lL]{1,2}[uU]?)?\"><token type=\"LiteralNumberInteger\"/></rule>\n+      <rule pattern=\"[~!%^&amp;*+=|?:&lt;&gt;/-]\"><token type=\"Operator\"/></rule>\n+      <rule pattern=\"[()\\[\\],.]\"><token type=\"Punctuation\"/></rule>\n+      <rule pattern=\"(true|false|NULL)\\b\"><token type=\"NameBuiltin\"/></rule>\n+      <rule pattern=\"(?!\\d)(?:[\\w$]|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8})+\"><token type=\"Name\"/></rule>\n+    </state>\n+    <state name=\"types\">\n+      <rule pattern=\"(bit|bool|byte|pid|short|int|unsigned)\\b\"><token type=\"KeywordType\"/></rule>\n+    </state>\n+    <state name=\"keywords\">\n+      <rule pattern=\"(atomic|break|d_step|do|od|for|in|goto|if|fi|unless)\\b\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"(assert|get_priority|printf|printm|set_priority)\\b\"><token type=\"NameFunction\"/></rule>\n+      <rule pattern=\"(c_code|c_decl|c_expr|c_state|c_track)\\b\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"(_|_last|_nr_pr|_pid|_priority|else|np_|STDIN)\\b\"><token type=\"NameBuiltin\"/></rule>\n+      <rule pattern=\"(empty|enabled|eval|full|len|nempty|nfull|pc_value)\\b\"><token type=\"NameFunction\"/></rule>\n+      <rule pattern=\"run\\b\"><token type=\"OperatorWord\"/></rule>\n+      <rule pattern=\"(active|chan|D_proctype|hidden|init|local|mtype|never|notrace|proctype|show|trace|typedef|xr|xs)\\b\"><token type=\"KeywordDeclaration\"/></rule>\n+      <rule pattern=\"(priority|provided)\\b\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"(inline|ltl|select)\\b\"><token type=\"KeywordDeclaration\"/></rule>\n+      <rule pattern=\"skip\\b\"><token type=\"Keyword\"/></rule>\n+    </state>\n+    <state name=\"whitespace\">\n+      <rule pattern=\"^#if\\s+0\"><token type=\"CommentPreproc\"/><push state=\"if0\"/></rule>\n+      <rule pattern=\"^#\"><token type=\"CommentPreproc\"/><push state=\"macro\"/></rule>\n+      <rule pattern=\"^(\\s*(?:/[*].*?[*]/\\s*)?)(#if\\s+0)\"><bygroups><usingself state=\"root\"/><token type=\"CommentPreproc\"/></bygroups><push state=\"if0\"/></rule>\n+      <rule pattern=\"^(\\s*(?:/[*].*?[*]/\\s*)?)(#)\"><bygroups><usingself state=\"root\"/><token type=\"CommentPreproc\"/></bygroups><push state=\"macro\"/></rule>\n+      <rule pattern=\"(^[ \\t]*)(?!(?:public|private|protected|default)\\b)((?!\\d)(?:[\\w$]|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8})+)(\\s*)(:)(?!:)\"><bygroups><token type=\"TextWhitespace\"/><token type=\"NameLabel\"/><token type=\"TextWhitespace\"/><token type=\"Punctuation\"/></bygroups></rule>\n+      <rule pattern=\"\\n\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\"[^\\S\\n]+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\"\\\\\\n\"><token type=\"Text\"/></rule>\n+      <rule pattern=\"//(?:.|(?&lt;=\\\\)\\n)*\\n\"><token type=\"CommentSingle\"/></rule>\n+      <rule pattern=\"/(?:\\\\\\n)?[*](?:[^*]|[*](?!(?:\\\\\\n)?/))*[*](?:\\\\\\n)?/\"><token type=\"CommentMultiline\"/></rule>\n+      <rule pattern=\"/(\\\\\\n)?[*][\\w\\W]*\"><token type=\"CommentMultiline\"/></rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule><include state=\"whitespace\"/></rule>\n+      <rule><include state=\"keywords\"/></rule>\n+      <rule pattern=\"((?!\\d)(?:[\\w$]|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}|::)+(?:[&amp;*\\s])+)(\\s*(?:(?:(?://(?:.|(?&lt;=\\\\)\\n)*\\n)|(?:/(?:\\\\\\n)?[*](?:[^*]|[*](?!(?:\\\\\\n)?/))*[*](?:\\\\\\n)?/))\\s*)*)((?!\\d)(?:[\\w$]|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}|::)+)(\\s*(?:(?:(?://(?:.|(?&lt;=\\\\)\\n)*\\n)|(?:/(?:\\\\\\n)?[*](?:[^*]|[*](?!(?:\\\\\\n)?/))*[*](?:\\\\\\n)?/))\\s*)*)(\\([^;&quot;\\&#x27;)]*?\\))(\\s*(?:(?:(?://(?:.|(?&lt;=\\\\)\\n)*\\n)|(?:/(?:\\\\\\n)?[*](?:[^*]|[*](?!(?:\\\\\\n)?/))*[*](?:\\\\\\n)?/))\\s*)*)([^;{/&quot;\\&#x27;]*)(\\{)\"><bygroups><usingself state=\"root\"/><usingself state=\"whitespace\"/><token type=\"NameFunction\"/><usingself state=\"whitespace\"/><usingself state=\"root\"/><usingself state=\"whitespace\"/><usingself state=\"root\"/><token type=\"Punctuation\"/></bygroups><push state=\"function\"/></rule>\n+      <rule pattern=\"((?!\\d)(?:[\\w$]|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}|::)+(?:[&amp;*\\s])+)(\\s*(?:(?:(?://(?:.|(?&lt;=\\\\)\\n)*\\n)|(?:/(?:\\\\\\n)?[*](?:[^*]|[*](?!(?:\\\\\\n)?/))*[*](?:\\\\\\n)?/))\\s*)*)((?!\\d)(?:[\\w$]|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}|::)+)(\\s*(?:(?:(?://(?:.|(?&lt;=\\\\)\\n)*\\n)|(?:/(?:\\\\\\n)?[*](?:[^*]|[*](?!(?:\\\\\\n)?/))*[*](?:\\\\\\n)?/))\\s*)*)(\\([^;&quot;\\&#x27;)]*?\\))(\\s*(?:(?:(?://(?:.|(?&lt;=\\\\)\\n)*\\n)|(?:/(?:\\\\\\n)?[*](?:[^*]|[*](?!(?:\\\\\\n)?/))*[*](?:\\\\\\n)?/))\\s*)*)([^;/&quot;\\&#x27;]*)(;)\"><bygroups><usingself state=\"root\"/><usingself state=\"whitespace\"/><token type=\"NameFunction\"/><usingself state=\"whitespace\"/><usingself state=\"root\"/><usingself state=\"whitespace\"/><usingself state=\"root\"/><token type=\"Punctuation\"/></bygroups></rule>\n+      <rule><include state=\"types\"/></rule>\n+      <rule><push state=\"statement\"/></rule>\n+    </state>\n+    <state name=\"statement\">\n+      <rule><include state=\"whitespace\"/></rule>\n+      <rule><include state=\"statements\"/></rule>\n+      <rule pattern=\"\\}\"><token type=\"Punctuation\"/></rule>\n+      <rule pattern=\"[{;]\"><token type=\"Punctuation\"/><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"function\">\n+      <rule><include state=\"whitespace\"/></rule>\n+      <rule><include state=\"statements\"/></rule>\n+      <rule pattern=\";\"><token type=\"Punctuation\"/></rule>\n+      <rule pattern=\"\\{\"><token type=\"Punctuation\"/><push/></rule>\n+      <rule pattern=\"\\}\"><token type=\"Punctuation\"/><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"&quot;\"><token type=\"LiteralString\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\\\([\\\\abfnrtv&quot;\\&#x27;]|x[a-fA-F0-9]{2,4}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|[0-7]{1,3})\"><token type=\"LiteralStringEscape\"/></rule>\n+      <rule pattern=\"[^\\\\&quot;\\n]+\"><token type=\"LiteralString\"/></rule>\n+      <rule pattern=\"\\\\\\n\"><token type=\"LiteralString\"/></rule>\n+      <rule pattern=\"\\\\\"><token type=\"LiteralString\"/></rule>\n+    </state>\n+    <state name=\"macro\">\n+      <rule pattern=\"(\\s*(?:/[*].*?[*]/\\s*)?)(include)(\\s*(?:/[*].*?[*]/\\s*)?)(&quot;[^&quot;]+&quot;)([^\\n]*)\"><bygroups><usingself state=\"root\"/><token type=\"CommentPreproc\"/><usingself state=\"root\"/><token type=\"CommentPreprocFile\"/><token type=\"CommentSingle\"/></bygroups></rule>\n+      <rule pattern=\"(\\s*(?:/[*].*?[*]/\\s*)?)(include)(\\s*(?:/[*].*?[*]/\\s*)?)(&lt;[^&gt;]+&gt;)([^\\n]*)\"><bygroups><usingself state=\"root\"/><token type=\"CommentPreproc\"/><usingself state=\"root\"/><token type=\"CommentPreprocFile\"/><token type=\"CommentSingle\"/></bygroups></rule>\n+      <rule pattern=\"[^/\\n]+\"><token type=\"CommentPreproc\"/></rule>\n+      <rule pattern=\"/[*](.|\\n)*?[*]/\"><token type=\"CommentMultiline\"/></rule>\n+      <rule pattern=\"//.*?\\n\"><token type=\"CommentSingle\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"/\"><token type=\"CommentPreproc\"/></rule>\n+      <rule pattern=\"(?&lt;=\\\\)\\n\"><token type=\"CommentPreproc\"/></rule>\n+      <rule pattern=\"\\n\"><token type=\"CommentPreproc\"/><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"if0\">\n+      <rule pattern=\"^\\s*#if.*?(?&lt;!\\\\)\\n\"><token type=\"CommentPreproc\"/><push/></rule>\n+      <rule pattern=\"^\\s*#el(?:se|if).*\\n\"><token type=\"CommentPreproc\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"^\\s*#endif.*?(?&lt;!\\\\)\\n\"><token type=\"CommentPreproc\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\".*?\\n\"><token type=\"Comment\"/></rule>\n+    </state>\n+    <state name=\"classname\">\n+      <rule pattern=\"(?!\\d)(?:[\\w$]|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8})+\"><token type=\"NameClass\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\s*(?=&gt;)\"><token type=\"Text\"/><pop depth=\"1\"/></rule>\n+      <rule><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"case-value\">\n+      <rule pattern=\"(?&lt;!:)(:)(?!:)\"><token type=\"Punctuation\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"(?!\\d)(?:[\\w$]|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8})+\"><token type=\"NameConstant\"/></rule>\n+      <rule><include state=\"whitespace\"/></rule>\n+      <rule><include state=\"statements\"/></rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "517b7133b06b484502885d9e6d285da894523ae5",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/rego.xml",
      "status": "added",
      "additions": 94,
      "deletions": 0,
      "changes": 94,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Frego.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Frego.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Frego.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -0,0 +1,94 @@\n+<lexer>\n+  <config>\n+    <name>Rego</name>\n+    <alias>rego</alias>\n+    <filename>*.rego</filename>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"(package|import|as|not|with|default|else|some|in|if|contains)\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <!-- importing keywords should then show up as keywords -->\n+      <rule pattern=\"(import)( future.keywords.)(\\w+)\">\n+        <bygroups>\n+          <token type=\"KeywordDeclaration\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"KeywordDeclaration\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"#[^\\r\\n]*\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"(FIXME|TODO|XXX)\\b( .*)$\">\n+        <bygroups>\n+          <token type=\"Error\"/>\n+          <token type=\"CommentSpecial\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(true|false|null)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"\\d+i\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"\\d+\\.\\d*([Ee][-+]\\d+)?i\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"\\.\\d+([Ee][-+]\\d+)?i\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"\\d+[Ee][-+]\\d+i\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"\\d+(\\.\\d+[eE][+\\-]?\\d+|\\.\\d*|[eE][+\\-]?\\d+)\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"\\.\\d+([eE][+\\-]?\\d+)?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"(0|[1-9][0-9]*)\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"&#34;&#34;&#34;.*?&#34;&#34;&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"&#34;(\\\\\\\\|\\\\&#34;|[^&#34;])*&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"\\$/((?!/\\$).)*/\\$\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"/(\\\\\\\\|\\\\&#34;|[^/])*/\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"^(\\w+)\">\n+        <token type=\"Name\"/>\n+      </rule>\n+      <rule pattern=\"[a-z_-][\\w-]*(?=\\()\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"[\\r\\n\\s]+\">\n+        <token type=\"TextWhitespace\"/>\n+      </rule>\n+      <rule pattern=\"(package|import)(\\s+)\">\n+        <bygroups>\n+          <token type=\"KeywordDeclaration\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"[=&lt;&gt;!+-/*&amp;|]\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\":=\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[[\\]{}():;]+\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"[$a-zA-Z_]\\w*\">\n+        <token type=\"NameOther\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "8362772a6fbe9037bc1a13205aae3ebbd485da7a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/rpm_spec.xml",
      "status": "added",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Frpm_spec.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Frpm_spec.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Frpm_spec.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -0,0 +1,58 @@\n+\n+<lexer>\n+  <config>\n+    <name>RPMSpec</name>\n+    <alias>spec</alias>\n+    <filename>*.spec</filename>\n+    <mime_type>text/x-rpm-spec</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"#.*$\"><token type=\"Comment\"/></rule>\n+      <rule><include state=\"basic\"/></rule>\n+    </state>\n+    <state name=\"description\">\n+      <rule pattern=\"^(%(?:package|prep|build|install|clean|check|pre[a-z]*|post[a-z]*|trigger[a-z]*|files))(.*)$\"><bygroups><token type=\"NameDecorator\"/><token type=\"Text\"/></bygroups><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\s+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\".\"><token type=\"Text\"/></rule>\n+    </state>\n+    <state name=\"changelog\">\n+      <rule pattern=\"\\*.*$\"><token type=\"GenericSubheading\"/></rule>\n+      <rule pattern=\"^(%(?:package|prep|build|install|clean|check|pre[a-z]*|post[a-z]*|trigger[a-z]*|files))(.*)$\"><bygroups><token type=\"NameDecorator\"/><token type=\"Text\"/></bygroups><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\s+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\".\"><token type=\"Text\"/></rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"&quot;\"><token type=\"LiteralStringDouble\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\\\([\\\\abfnrtv&quot;\\&#x27;]|x[a-fA-F0-9]{2,4}|[0-7]{1,3})\"><token type=\"LiteralStringEscape\"/></rule>\n+      <rule><include state=\"interpol\"/></rule>\n+      <rule pattern=\".\"><token type=\"LiteralStringDouble\"/></rule>\n+    </state>\n+    <state name=\"basic\">\n+      <rule><include state=\"macro\"/></rule>\n+      <rule pattern=\"(?i)^(Name|Version|Release|Epoch|Summary|Group|License|Packager|Vendor|Icon|URL|Distribution|Prefix|Patch[0-9]*|Source[0-9]*|Requires\\(?[a-z]*\\)?|[a-z]+Req|Obsoletes|Suggests|Provides|Conflicts|Build[a-z]+|[a-z]+Arch|Auto[a-z]+)(:)(.*)$\"><bygroups><token type=\"GenericHeading\"/><token type=\"Punctuation\"/><usingself state=\"root\"/></bygroups></rule>\n+      <rule pattern=\"^%description\"><token type=\"NameDecorator\"/><push state=\"description\"/></rule>\n+      <rule pattern=\"^%changelog\"><token type=\"NameDecorator\"/><push state=\"changelog\"/></rule>\n+      <rule pattern=\"^(%(?:package|prep|build|install|clean|check|pre[a-z]*|post[a-z]*|trigger[a-z]*|files))(.*)$\"><bygroups><token type=\"NameDecorator\"/><token type=\"Text\"/></bygroups></rule>\n+      <rule pattern=\"%(attr|defattr|dir|doc(?:dir)?|setup|config(?:ure)?|make(?:install)|ghost|patch[0-9]+|find_lang|exclude|verify)\"><token type=\"Keyword\"/></rule>\n+      <rule><include state=\"interpol\"/></rule>\n+      <rule pattern=\"&#x27;.*?&#x27;\"><token type=\"LiteralStringSingle\"/></rule>\n+      <rule pattern=\"&quot;\"><token type=\"LiteralStringDouble\"/><push state=\"string\"/></rule>\n+      <rule pattern=\"\\s+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\".\"><token type=\"Text\"/></rule>\n+    </state>\n+    <state name=\"macro\">\n+      <rule pattern=\"%define.*$\"><token type=\"CommentPreproc\"/></rule>\n+      <rule pattern=\"%\\{\\!\\?.*%define.*\\}\"><token type=\"CommentPreproc\"/></rule>\n+      <rule pattern=\"(%(?:if(?:n?arch)?|else(?:if)?|endif))(.*)$\"><bygroups><token type=\"CommentPreproc\"/><token type=\"Text\"/></bygroups></rule>\n+    </state>\n+    <state name=\"interpol\">\n+      <rule pattern=\"%\\{?__[a-z_]+\\}?\"><token type=\"NameFunction\"/></rule>\n+      <rule pattern=\"%\\{?_([a-z_]+dir|[a-z_]+path|prefix)\\}?\"><token type=\"KeywordPseudo\"/></rule>\n+      <rule pattern=\"%\\{\\?\\w+\\}\"><token type=\"NameVariable\"/></rule>\n+      <rule pattern=\"\\$\\{?RPM_[A-Z0-9_]+\\}?\"><token type=\"NameVariableGlobal\"/></rule>\n+      <rule pattern=\"%\\{[a-zA-Z]\\w+\\}\"><token type=\"KeywordConstant\"/></rule>\n+    </state>\n+  </rules>\n+</lexer>\n+"
    },
    {
      "sha": "266289b7c73e10a5cbb3aea6aacdbad76efd6de6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/go.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fgo.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fgo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fgo.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -55,7 +55,7 @@ func goRules() Rules {\n \t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n \t\t\t{`(<<=|>>=|<<|>>|<=|>=|&\\^=|&\\^|\\+=|-=|\\*=|/=|%=|&=|\\|=|&&|\\|\\||<-|\\+\\+|--|==|!=|:=|\\.\\.\\.|[+\\-*/%&])`, Operator, nil},\n \t\t\t{`([a-zA-Z_]\\w*)(\\s*)(\\()`, ByGroups(NameFunction, UsingSelf(\"root\"), Punctuation), nil},\n-\t\t\t{`[|^<>=!()\\[\\]{}.,;:]`, Punctuation, nil},\n+\t\t\t{`[|^<>=!()\\[\\]{}.,;:~]`, Punctuation, nil},\n \t\t\t{`[^\\W\\d]\\w*`, NameOther, nil},\n \t\t},\n \t}"
    },
    {
      "sha": "77c7b016ccd486a2584ae3031b58e56d5a53f7ff",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/renovate.json5",
      "status": "modified",
      "additions": 16,
      "deletions": 9,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Frenovate.json5",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Frenovate.json5",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Frenovate.json5?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -1,11 +1,18 @@\n {\n-  $schema: \"https://docs.renovatebot.com/renovate-schema.json\",\n-  extends: [\n-    \"config:recommended\",\n-    \":semanticCommits\",\n-    \":semanticCommitTypeAll(chore)\",\n-    \":semanticCommitScope(deps)\",\n-    \"group:allNonMajor\",\n-    \"schedule:earlyMondays\", // Run once a week.\n-  ],\n+\t$schema: \"https://docs.renovatebot.com/renovate-schema.json\",\n+\textends: [\n+\t\t\"config:recommended\",\n+\t\t\":semanticCommits\",\n+\t\t\":semanticCommitTypeAll(chore)\",\n+\t\t\":semanticCommitScope(deps)\",\n+\t\t\"group:allNonMajor\",\n+\t\t\"schedule:earlyMondays\", // Run once a week.\n+\t],\n+\tpackageRules: [\n+\t\t{\n+\t\t\tmatchPackageNames: [\"golangci-lint\"],\n+\t\t\tmatchManagers: [\"hermit\"],\n+\t\t\tenabled: false,\n+\t\t},\n+\t],\n }"
    },
    {
      "sha": "0adf1ba9e34e9348c20fd5b5ea07dc29ba3fc3af",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/catppuccin-frappe.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-frappe.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-frappe.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-frappe.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -5,7 +5,7 @@\n   <entry type=\"Other\" style=\"#c6d0f5\"/>\n   <entry type=\"LineTableTD\" style=\"\"/>\n   <entry type=\"LineTable\" style=\"\"/>\n-  <entry type=\"LineHighlight\" style=\"#51576d\"/>\n+  <entry type=\"LineHighlight\" style=\"bg:#51576d\"/>\n   <entry type=\"LineNumbersTable\" style=\"#838ba7\"/>\n   <entry type=\"LineNumbers\" style=\"#838ba7\"/>\n   <entry type=\"Keyword\" style=\"#ca9ee6\"/>"
    },
    {
      "sha": "3ea767fd4a32b93429ea65f7f5b29ea75378fd2c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/catppuccin-latte.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-latte.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-latte.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-latte.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -5,7 +5,7 @@\n   <entry type=\"Other\" style=\"#4c4f69\"/>\n   <entry type=\"LineTableTD\" style=\"\"/>\n   <entry type=\"LineTable\" style=\"\"/>\n-  <entry type=\"LineHighlight\" style=\"#bcc0cc\"/>\n+  <entry type=\"LineHighlight\" style=\"bg:#bcc0cc\"/>\n   <entry type=\"LineNumbersTable\" style=\"#8c8fa1\"/>\n   <entry type=\"LineNumbers\" style=\"#8c8fa1\"/>\n   <entry type=\"Keyword\" style=\"#8839ef\"/>"
    },
    {
      "sha": "6b5002848708d3db7bf7fd80fd90f7277958d680",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/catppuccin-macchiato.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-macchiato.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-macchiato.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-macchiato.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -5,7 +5,7 @@\n   <entry type=\"Other\" style=\"#cad3f5\"/>\n   <entry type=\"LineTableTD\" style=\"\"/>\n   <entry type=\"LineTable\" style=\"\"/>\n-  <entry type=\"LineHighlight\" style=\"#494d64\"/>\n+  <entry type=\"LineHighlight\" style=\"bg:#494d64\"/>\n   <entry type=\"LineNumbersTable\" style=\"#8087a2\"/>\n   <entry type=\"LineNumbers\" style=\"#8087a2\"/>\n   <entry type=\"Keyword\" style=\"#c6a0f6\"/>"
    },
    {
      "sha": "9a401912f36b53c14adca9163d378c7409addb71",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/catppuccin-mocha.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-mocha.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-mocha.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-mocha.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -5,7 +5,7 @@\n   <entry type=\"Other\" style=\"#cdd6f4\"/>\n   <entry type=\"LineTableTD\" style=\"\"/>\n   <entry type=\"LineTable\" style=\"\"/>\n-  <entry type=\"LineHighlight\" style=\"#45475a\"/>\n+  <entry type=\"LineHighlight\" style=\"bg:#45475a\"/>\n   <entry type=\"LineNumbersTable\" style=\"#7f849c\"/>\n   <entry type=\"LineNumbers\" style=\"#7f849c\"/>\n   <entry type=\"Keyword\" style=\"#cba6f7\"/>"
    },
    {
      "sha": "711aeafc4ab5fbb1e5f823285f4e551dff82f770",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/github-dark.xml",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub-dark.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub-dark.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub-dark.xml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -1,6 +1,6 @@\n <style name=\"github-dark\">\n   <entry type=\"Error\" style=\"#f85149\"/>\n-  <entry type=\"LineHighlight\" style=\"#6e7681\"/>\n+  <entry type=\"LineHighlight\" style=\"bg:#6e7681\"/>\n   <entry type=\"LineNumbers\" style=\"#6e7681\"/>\n   <entry type=\"Background\" style=\"#e6edf3 bg:#0d1117\"/>\n   <entry type=\"Keyword\" style=\"#ff7b72\"/>\n@@ -42,4 +42,4 @@\n   <entry type=\"GenericTraceback\" style=\"#ff7b72\"/>\n   <entry type=\"GenericUnderline\" style=\"underline\"/>\n   <entry type=\"TextWhitespace\" style=\"#6e7681\"/>\n-</style>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "75bd3f5ce07eae412205f0dcc1acc10997d65766",
      "filename": "backend/vendor/github.com/dghubble/oauth1/CHANGES.md",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FCHANGES.md",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FCHANGES.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FCHANGES.md?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -4,6 +4,12 @@ Notable changes between releases.\n \n ## Latest\n \n+## v0.7.3\n+\n+* Percent encode special characters in HMAC-SHA1 secrets ([#72](https://github.com/dghubble/oauth1/pull/72))\n+* Strip whitespace from request token body ([#56](https://github.com/dghubble/oauth1/pull/56))\n+* Update Go module dependencies\n+\n ## v0.7.2\n \n * Update minimum Go version from v1.17 to v1.18 ([#66](https://github.com/dghubble/oauth1/pull/66))"
    },
    {
      "sha": "c4badbf99f1c6fdab60ec6a4aa927bb50f27d153",
      "filename": "backend/vendor/github.com/dghubble/oauth1/README.md",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FREADME.md?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -1,4 +1,8 @@\n-# OAuth1 [![GoDoc](https://pkg.go.dev/badge/github.com/dghubble/oauth1.svg)](https://pkg.go.dev/github.com/dghubble/oauth1) [![Workflow](https://github.com/dghubble/oauth1/actions/workflows/test.yaml/badge.svg)](https://github.com/dghubble/oauth1/actions/workflows/test.yaml?query=branch%3Amain) [![Sponsors](https://img.shields.io/github/sponsors/dghubble?logo=github)](https://github.com/sponsors/dghubble) [![Mastodon](https://img.shields.io/badge/follow-news-6364ff?logo=mastodon)](https://fosstodon.org/@typhoon)\n+# OAuth1\n+[![GoDoc](https://pkg.go.dev/badge/github.com/dghubble/oauth1.svg)](https://pkg.go.dev/github.com/dghubble/oauth1)\n+[![Workflow](https://github.com/dghubble/oauth1/actions/workflows/test.yaml/badge.svg)](https://github.com/dghubble/oauth1/actions/workflows/test.yaml?query=branch%3Amain)\n+[![Sponsors](https://img.shields.io/github/sponsors/dghubble?logo=github)](https://github.com/sponsors/dghubble)\n+[![Mastodon](https://img.shields.io/badge/follow-news-6364ff?logo=mastodon)](https://fosstodon.org/@typhoon)\n \n <img align=\"right\" src=\"https://storage.googleapis.com/dghubble/oauth1.png\">\n "
    },
    {
      "sha": "e47de195d53952627605c2e04b841e9364f74158",
      "filename": "backend/vendor/github.com/dghubble/oauth1/config.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2Fconfig.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2Fconfig.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2Fconfig.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -7,6 +7,7 @@ import (\n \t\"io/ioutil\"\n \t\"net/http\"\n \t\"net/url\"\n+\t\"strings\"\n )\n \n const (\n@@ -89,7 +90,7 @@ func (c *Config) RequestToken() (requestToken, requestSecret string, err error)\n \t}\n \n \t// ParseQuery to decode URL-encoded application/x-www-form-urlencoded body\n-\tvalues, err := url.ParseQuery(string(body))\n+\tvalues, err := url.ParseQuery(strings.TrimSpace(string(body)))\n \tif err != nil {\n \t\treturn \"\", \"\", err\n \t}"
    },
    {
      "sha": "963aa5a96d535f6c0fd0180a7d01535f36f53d76",
      "filename": "backend/vendor/github.com/dghubble/oauth1/signer.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2Fsigner.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2Fsigner.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2Fsigner.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -32,7 +32,7 @@ func (s *HMACSigner) Name() string {\n }\n \n func hmacSign(consumerSecret, tokenSecret, message string, algo func() hash.Hash) (string, error) {\n-\tsigningKey := strings.Join([]string{consumerSecret, tokenSecret}, \"&\")\n+\tsigningKey := strings.Join([]string{PercentEncode(consumerSecret), PercentEncode(tokenSecret)}, \"&\")\n \tmac := hmac.New(algo, []byte(signingKey))\n \tmac.Write([]byte(message))\n \tsignatureBytes := mac.Sum(nil)"
    },
    {
      "sha": "a7ddbaf35877b0680220e10cc79463603f3120a4",
      "filename": "backend/vendor/github.com/dlclark/regexp2/regexp.go",
      "status": "modified",
      "additions": 25,
      "deletions": 3,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fdlclark%2Fregexp2%2Fregexp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fdlclark%2Fregexp2%2Fregexp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fdlclark%2Fregexp2%2Fregexp.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -18,8 +18,12 @@ import (\n \t\"github.com/dlclark/regexp2/syntax\"\n )\n \n-// Default timeout used when running regexp matches -- \"forever\"\n-var DefaultMatchTimeout = time.Duration(math.MaxInt64)\n+var (\n+\t// DefaultMatchTimeout used when running regexp matches -- \"forever\"\n+\tDefaultMatchTimeout = time.Duration(math.MaxInt64)\n+\t// DefaultUnmarshalOptions used when unmarshaling a regex from text\n+\tDefaultUnmarshalOptions = None\n+)\n \n // Regexp is the representation of a compiled regular expression.\n // A Regexp is safe for concurrent use by multiple goroutines.\n@@ -43,7 +47,7 @@ type Regexp struct {\n \tcode *syntax.Code // compiled program\n \n \t// cache of machines for running regexp\n-\tmuRun  sync.Mutex\n+\tmuRun  *sync.Mutex\n \trunner []*runner\n }\n \n@@ -72,6 +76,7 @@ func Compile(expr string, opt RegexOptions) (*Regexp, error) {\n \t\tcapsize:      code.Capsize,\n \t\tcode:         code,\n \t\tMatchTimeout: DefaultMatchTimeout,\n+\t\tmuRun:        &sync.Mutex{},\n \t}, nil\n }\n \n@@ -371,3 +376,20 @@ func (re *Regexp) GroupNumberFromName(name string) int {\n \n \treturn -1\n }\n+\n+// MarshalText implements [encoding.TextMarshaler]. The output\n+// matches that of calling the [Regexp.String] method.\n+func (re *Regexp) MarshalText() ([]byte, error) {\n+\treturn []byte(re.String()), nil\n+}\n+\n+// UnmarshalText implements [encoding.TextUnmarshaler] by calling\n+// [Compile] on the encoded value.\n+func (re *Regexp) UnmarshalText(text []byte) error {\n+\tnewRE, err := Compile(string(text), DefaultUnmarshalOptions)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\t*re = *newRE\n+\treturn nil\n+}"
    },
    {
      "sha": "eab781a1a3ddcc470ef702bd4d94c3bd85f00afd",
      "filename": "backend/vendor/github.com/go-pkgz/auth/.golangci.yml",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2F.golangci.yml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -80,4 +80,10 @@ issues:\n     - text: 'Deferring unsafe method \"Close\" on type \"io.ReadCloser\"'\n       linters:\n         - gosec\n+    - linters:\n+        - unparam\n+        - unused\n+        - revive\n+      path: _test\\.go$\n+      text: \"unused-parameter\"\n   exclude-use-default: false"
    },
    {
      "sha": "ee4828c0c097034aa49925b2a59dcf08e6cb3c00",
      "filename": "backend/vendor/github.com/go-pkgz/auth/avatar/localfs.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Favatar%2Flocalfs.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Favatar%2Flocalfs.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Favatar%2Flocalfs.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -89,7 +89,7 @@ func (fs *LocalFS) Remove(avatar string) error {\n // note: id includes .image suffix\n func (fs *LocalFS) List() (ids []string, err error) {\n \terr = filepath.Walk(fs.storePath,\n-\t\tfunc(path string, info os.FileInfo, err error) error {\n+\t\tfunc(_ string, info os.FileInfo, err error) error {\n \t\t\tif err != nil {\n \t\t\t\treturn err\n \t\t\t}"
    },
    {
      "sha": "857243184e6203e9c47238a0e3798c015d3e8b1e",
      "filename": "backend/vendor/github.com/go-pkgz/auth/logger/interface.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Flogger%2Finterface.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Flogger%2Finterface.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Flogger%2Finterface.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -16,7 +16,7 @@ type Func func(format string, args ...interface{})\n func (f Func) Logf(format string, args ...interface{}) { f(format, args...) }\n \n // NoOp logger\n-var NoOp = Func(func(format string, args ...interface{}) {})\n+var NoOp = Func(func(string, ...interface{}) {})\n \n // Std logger sends to std default logger directly\n var Std = Func(func(format string, args ...interface{}) { log.Printf(format, args...) })"
    },
    {
      "sha": "4487b4cb0301594c6be3c9443f05e8f1beaca755",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/providers.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fproviders.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fproviders.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fproviders.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -199,7 +199,7 @@ func NewMicrosoft(p Params) Oauth2Handler {\n \t\tinfoURL:  \"https://graph.microsoft.com/v1.0/me\",\n \t\t// non-beta doesn't provide photo for consumers yet\n \t\t// see https://github.com/microsoftgraph/microsoft-graph-docs/issues/3990\n-\t\tmapUser: func(data UserData, b []byte) token.User {\n+\t\tmapUser: func(data UserData, _ []byte) token.User {\n \t\t\tuserInfo := token.User{\n \t\t\t\tID:      \"microsoft_\" + token.HashID(sha1.New(), data.Value(\"id\")),\n \t\t\t\tName:    data.Value(\"displayName\"),"
    },
    {
      "sha": "a22953805c63392d7904ad0a6963a2dd73833a83",
      "filename": "backend/vendor/github.com/klauspost/compress/.goreleaser.yml",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2F.goreleaser.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2F.goreleaser.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2F.goreleaser.yml?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -3,7 +3,6 @@\n before:\n   hooks:\n     - ./gen.sh\n-    - go install mvdan.cc/garble@v0.10.1\n \n builds:\n   -\n@@ -32,7 +31,6 @@ builds:\n       - mips64le\n     goarm:\n       - 7\n-    gobinary: garble\n   -\n     id: \"s2d\"\n     binary: s2d\n@@ -59,7 +57,6 @@ builds:\n       - mips64le\n     goarm:\n       - 7\n-    gobinary: garble\n   -\n     id: \"s2sx\"\n     binary: s2sx\n@@ -87,7 +84,6 @@ builds:\n       - mips64le\n     goarm:\n       - 7\n-    gobinary: garble\n \n archives:\n   -"
    },
    {
      "sha": "1f72cdde1875e6d8b3f516c0969cda55cdd17f49",
      "filename": "backend/vendor/github.com/klauspost/compress/README.md",
      "status": "modified",
      "additions": 25,
      "deletions": 1,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2FREADME.md?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -16,6 +16,30 @@ This package provides various compression algorithms.\n \r\n # changelog\r\n \r\n+* Feb 5th, 2024 - [1.17.6](https://github.com/klauspost/compress/releases/tag/v1.17.6)\r\n+\t* zstd: Fix incorrect repeat coding in best mode https://github.com/klauspost/compress/pull/923\r\n+\t* s2: Fix DecodeConcurrent deadlock on errors https://github.com/klauspost/compress/pull/925\r\n+  \r\n+* Jan 26th, 2024 - [v1.17.5](https://github.com/klauspost/compress/releases/tag/v1.17.5)\r\n+\t* flate: Fix reset with dictionary on custom window encodes https://github.com/klauspost/compress/pull/912\r\n+\t* zstd: Add Frame header encoding and stripping https://github.com/klauspost/compress/pull/908\r\n+\t* zstd: Limit better/best default window to 8MB https://github.com/klauspost/compress/pull/913\r\n+\t* zstd: Speed improvements by @greatroar in https://github.com/klauspost/compress/pull/896 https://github.com/klauspost/compress/pull/910\r\n+\t* s2: Fix callbacks for skippable blocks and disallow 0xfe (Padding) by @Jille in https://github.com/klauspost/compress/pull/916 https://github.com/klauspost/compress/pull/917\r\n+https://github.com/klauspost/compress/pull/919 https://github.com/klauspost/compress/pull/918\r\n+\r\n+* Dec 1st, 2023 - [v1.17.4](https://github.com/klauspost/compress/releases/tag/v1.17.4)\r\n+\t* huff0: Speed up symbol counting by @greatroar in https://github.com/klauspost/compress/pull/887\r\n+\t* huff0: Remove byteReader by @greatroar in https://github.com/klauspost/compress/pull/886\r\n+\t* gzhttp: Allow overriding decompression on transport https://github.com/klauspost/compress/pull/892\r\n+\t* gzhttp: Clamp compression level https://github.com/klauspost/compress/pull/890\r\n+\t* gzip: Error out if reserved bits are set https://github.com/klauspost/compress/pull/891\r\n+\r\n+* Nov 15th, 2023 - [v1.17.3](https://github.com/klauspost/compress/releases/tag/v1.17.3)\r\n+\t* fse: Fix max header size https://github.com/klauspost/compress/pull/881\r\n+\t* zstd: Improve better/best compression https://github.com/klauspost/compress/pull/877\r\n+\t* gzhttp: Fix missing content type on Close https://github.com/klauspost/compress/pull/883\r\n+\r\n * Oct 22nd, 2023 - [v1.17.2](https://github.com/klauspost/compress/releases/tag/v1.17.2)\r\n \t* zstd: Fix rare *CORRUPTION* output in \"best\" mode. See https://github.com/klauspost/compress/pull/876\r\n \r\n@@ -554,7 +578,7 @@ For direct deflate use, NewStatelessWriter and StatelessDeflate are available. S\n \r\n A `bufio.Writer` can of course be used to control write sizes. For example, to use a 4KB buffer:\r\n \r\n-```\r\n+```go\r\n \t// replace 'ioutil.Discard' with your output.\r\n \tgzw, err := gzip.NewWriterLevel(ioutil.Discard, gzip.StatelessCompression)\r\n \tif err != nil {\r"
    },
    {
      "sha": "5a4412f90701a053dc527994fc05f3dece94c4e7",
      "filename": "backend/vendor/github.com/klauspost/compress/s2sx.mod",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fs2sx.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fs2sx.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fs2sx.mod?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -1,4 +1,4 @@\n module github.com/klauspost/compress\n \n-go 1.16\n+go 1.19\n "
    },
    {
      "sha": "6a5a2988b6f365ca40ff85485f8114be1f34dce8",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/decodeheader.go",
      "status": "modified",
      "additions": 44,
      "deletions": 12,
      "changes": 56,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdecodeheader.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdecodeheader.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdecodeheader.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -95,42 +95,54 @@ type Header struct {\n // If there isn't enough input, io.ErrUnexpectedEOF is returned.\n // The FirstBlock.OK will indicate if enough information was available to decode the first block header.\n func (h *Header) Decode(in []byte) error {\n+\t_, err := h.DecodeAndStrip(in)\n+\treturn err\n+}\n+\n+// DecodeAndStrip will decode the header from the beginning of the stream\n+// and on success return the remaining bytes.\n+// This will decode the frame header and the first block header if enough bytes are provided.\n+// It is recommended to provide at least HeaderMaxSize bytes.\n+// If the frame header cannot be read an error will be returned.\n+// If there isn't enough input, io.ErrUnexpectedEOF is returned.\n+// The FirstBlock.OK will indicate if enough information was available to decode the first block header.\n+func (h *Header) DecodeAndStrip(in []byte) (remain []byte, err error) {\n \t*h = Header{}\n \tif len(in) < 4 {\n-\t\treturn io.ErrUnexpectedEOF\n+\t\treturn nil, io.ErrUnexpectedEOF\n \t}\n \th.HeaderSize += 4\n \tb, in := in[:4], in[4:]\n \tif string(b) != frameMagic {\n \t\tif string(b[1:4]) != skippableFrameMagic || b[0]&0xf0 != 0x50 {\n-\t\t\treturn ErrMagicMismatch\n+\t\t\treturn nil, ErrMagicMismatch\n \t\t}\n \t\tif len(in) < 4 {\n-\t\t\treturn io.ErrUnexpectedEOF\n+\t\t\treturn nil, io.ErrUnexpectedEOF\n \t\t}\n \t\th.HeaderSize += 4\n \t\th.Skippable = true\n \t\th.SkippableID = int(b[0] & 0xf)\n \t\th.SkippableSize = binary.LittleEndian.Uint32(in)\n-\t\treturn nil\n+\t\treturn in[4:], nil\n \t}\n \n \t// Read Window_Descriptor\n \t// https://github.com/facebook/zstd/blob/dev/doc/zstd_compression_format.md#window_descriptor\n \tif len(in) < 1 {\n-\t\treturn io.ErrUnexpectedEOF\n+\t\treturn nil, io.ErrUnexpectedEOF\n \t}\n \tfhd, in := in[0], in[1:]\n \th.HeaderSize++\n \th.SingleSegment = fhd&(1<<5) != 0\n \th.HasCheckSum = fhd&(1<<2) != 0\n \tif fhd&(1<<3) != 0 {\n-\t\treturn errors.New(\"reserved bit set on frame header\")\n+\t\treturn nil, errors.New(\"reserved bit set on frame header\")\n \t}\n \n \tif !h.SingleSegment {\n \t\tif len(in) < 1 {\n-\t\t\treturn io.ErrUnexpectedEOF\n+\t\t\treturn nil, io.ErrUnexpectedEOF\n \t\t}\n \t\tvar wd byte\n \t\twd, in = in[0], in[1:]\n@@ -148,7 +160,7 @@ func (h *Header) Decode(in []byte) error {\n \t\t\tsize = 4\n \t\t}\n \t\tif len(in) < int(size) {\n-\t\t\treturn io.ErrUnexpectedEOF\n+\t\t\treturn nil, io.ErrUnexpectedEOF\n \t\t}\n \t\tb, in = in[:size], in[size:]\n \t\th.HeaderSize += int(size)\n@@ -178,7 +190,7 @@ func (h *Header) Decode(in []byte) error {\n \tif fcsSize > 0 {\n \t\th.HasFCS = true\n \t\tif len(in) < fcsSize {\n-\t\t\treturn io.ErrUnexpectedEOF\n+\t\t\treturn nil, io.ErrUnexpectedEOF\n \t\t}\n \t\tb, in = in[:fcsSize], in[fcsSize:]\n \t\th.HeaderSize += int(fcsSize)\n@@ -199,7 +211,7 @@ func (h *Header) Decode(in []byte) error {\n \n \t// Frame Header done, we will not fail from now on.\n \tif len(in) < 3 {\n-\t\treturn nil\n+\t\treturn in, nil\n \t}\n \ttmp := in[:3]\n \tbh := uint32(tmp[0]) | (uint32(tmp[1]) << 8) | (uint32(tmp[2]) << 16)\n@@ -209,7 +221,7 @@ func (h *Header) Decode(in []byte) error {\n \tcSize := int(bh >> 3)\n \tswitch blockType {\n \tcase blockTypeReserved:\n-\t\treturn nil\n+\t\treturn in, nil\n \tcase blockTypeRLE:\n \t\th.FirstBlock.Compressed = true\n \t\th.FirstBlock.DecompressedSize = cSize\n@@ -225,5 +237,25 @@ func (h *Header) Decode(in []byte) error {\n \t}\n \n \th.FirstBlock.OK = true\n-\treturn nil\n+\treturn in, nil\n+}\n+\n+// AppendTo will append the encoded header to the dst slice.\n+// There is no error checking performed on the header values.\n+func (h *Header) AppendTo(dst []byte) ([]byte, error) {\n+\tif h.Skippable {\n+\t\tmagic := [4]byte{0x50, 0x2a, 0x4d, 0x18}\n+\t\tmagic[0] |= byte(h.SkippableID & 0xf)\n+\t\tdst = append(dst, magic[:]...)\n+\t\tf := h.SkippableSize\n+\t\treturn append(dst, uint8(f), uint8(f>>8), uint8(f>>16), uint8(f>>24)), nil\n+\t}\n+\tf := frameHeader{\n+\t\tContentSize:   h.FrameContentSize,\n+\t\tWindowSize:    uint32(h.WindowSize),\n+\t\tSingleSegment: h.SingleSegment,\n+\t\tChecksum:      h.HasCheckSum,\n+\t\tDictID:        h.DictionaryID,\n+\t}\n+\treturn f.appendTo(dst), nil\n }"
    },
    {
      "sha": "87f42879a871ea60856f14cf1a757fc9fa33fea2",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/enc_best.go",
      "status": "modified",
      "additions": 22,
      "deletions": 15,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fenc_best.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fenc_best.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fenc_best.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -201,14 +201,6 @@ encodeLoop:\n \t\t\tif delta >= e.maxMatchOff || delta <= 0 || load3232(src, offset) != first {\n \t\t\t\treturn\n \t\t\t}\n-\t\t\tif debugAsserts {\n-\t\t\t\tif offset >= s {\n-\t\t\t\t\tpanic(fmt.Sprintf(\"offset: %d - s:%d - rep: %d - cur :%d - max: %d\", offset, s, rep, e.cur, e.maxMatchOff))\n-\t\t\t\t}\n-\t\t\t\tif !bytes.Equal(src[s:s+4], src[offset:offset+4]) {\n-\t\t\t\t\tpanic(fmt.Sprintf(\"first match mismatch: %v != %v, first: %08x\", src[s:s+4], src[offset:offset+4], first))\n-\t\t\t\t}\n-\t\t\t}\n \t\t\t// Try to quick reject if we already have a long match.\n \t\t\tif m.length > 16 {\n \t\t\t\tleft := len(src) - int(m.s+m.length)\n@@ -227,8 +219,10 @@ encodeLoop:\n \t\t\t\t}\n \t\t\t}\n \t\t\tl := 4 + e.matchlen(s+4, offset+4, src)\n-\t\t\tif true {\n+\t\t\tif m.rep <= 0 {\n \t\t\t\t// Extend candidate match backwards as far as possible.\n+\t\t\t\t// Do not extend repeats as we can assume they are optimal\n+\t\t\t\t// and offsets change if s == nextEmit.\n \t\t\t\ttMin := s - e.maxMatchOff\n \t\t\t\tif tMin < 0 {\n \t\t\t\t\ttMin = 0\n@@ -239,7 +233,14 @@ encodeLoop:\n \t\t\t\t\tl++\n \t\t\t\t}\n \t\t\t}\n-\n+\t\t\tif debugAsserts {\n+\t\t\t\tif offset >= s {\n+\t\t\t\t\tpanic(fmt.Sprintf(\"offset: %d - s:%d - rep: %d - cur :%d - max: %d\", offset, s, rep, e.cur, e.maxMatchOff))\n+\t\t\t\t}\n+\t\t\t\tif !bytes.Equal(src[s:s+l], src[offset:offset+l]) {\n+\t\t\t\t\tpanic(fmt.Sprintf(\"second match mismatch: %v != %v, first: %08x\", src[s:s+4], src[offset:offset+4], first))\n+\t\t\t\t}\n+\t\t\t}\n \t\t\tcand := match{offset: offset, s: s, length: l, rep: rep}\n \t\t\tcand.estBits(bitsPerByte)\n \t\t\tif m.est >= highScore || cand.est-m.est+(cand.s-m.s)*bitsPerByte>>10 < 0 {\n@@ -336,24 +337,31 @@ encodeLoop:\n \t\t}\n \n \t\tif debugAsserts {\n+\t\t\tif best.offset >= best.s {\n+\t\t\t\tpanic(fmt.Sprintf(\"best.offset > s: %d >= %d\", best.offset, best.s))\n+\t\t\t}\n+\t\t\tif best.s < nextEmit {\n+\t\t\t\tpanic(fmt.Sprintf(\"s %d < nextEmit %d\", best.s, nextEmit))\n+\t\t\t}\n+\t\t\tif best.offset < s-e.maxMatchOff {\n+\t\t\t\tpanic(fmt.Sprintf(\"best.offset < s-e.maxMatchOff: %d < %d\", best.offset, s-e.maxMatchOff))\n+\t\t\t}\n \t\t\tif !bytes.Equal(src[best.s:best.s+best.length], src[best.offset:best.offset+best.length]) {\n \t\t\t\tpanic(fmt.Sprintf(\"match mismatch: %v != %v\", src[best.s:best.s+best.length], src[best.offset:best.offset+best.length]))\n \t\t\t}\n \t\t}\n \n \t\t// We have a match, we can store the forward value\n+\t\ts = best.s\n \t\tif best.rep > 0 {\n \t\t\tvar seq seq\n \t\t\tseq.matchLen = uint32(best.length - zstdMinMatch)\n-\t\t\tif debugAsserts && s < nextEmit {\n-\t\t\t\tpanic(\"s < nextEmit\")\n-\t\t\t}\n \t\t\taddLiterals(&seq, best.s)\n \n \t\t\t// Repeat. If bit 4 is set, this is a non-lit repeat.\n \t\t\tseq.offset = uint32(best.rep & 3)\n \t\t\tif debugSequences {\n-\t\t\t\tprintln(\"repeat sequence\", seq, \"next s:\", s)\n+\t\t\t\tprintln(\"repeat sequence\", seq, \"next s:\", best.s, \"off:\", best.s-best.offset)\n \t\t\t}\n \t\t\tblk.sequences = append(blk.sequences, seq)\n \n@@ -396,7 +404,6 @@ encodeLoop:\n \n \t\t// A 4-byte match has been found. Update recent offsets.\n \t\t// We'll later see if more than 4 bytes.\n-\t\ts = best.s\n \t\tt := best.offset\n \t\toffset1, offset2, offset3 = s-t, offset1, offset2\n "
    },
    {
      "sha": "20671dcb91d9329216d7e36932b3374ee9d7c95b",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/encoder_options.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fencoder_options.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fencoder_options.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fencoder_options.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -94,7 +94,7 @@ func WithEncoderConcurrency(n int) EOption {\n // The value must be a power of two between MinWindowSize and MaxWindowSize.\n // A larger value will enable better compression but allocate more memory and,\n // for above-default values, take considerably longer.\n-// The default value is determined by the compression level.\n+// The default value is determined by the compression level and max 8MB.\n func WithWindowSize(n int) EOption {\n \treturn func(o *encoderOptions) error {\n \t\tswitch {\n@@ -232,9 +232,9 @@ func WithEncoderLevel(l EncoderLevel) EOption {\n \t\t\tcase SpeedDefault:\n \t\t\t\to.windowSize = 8 << 20\n \t\t\tcase SpeedBetterCompression:\n-\t\t\t\to.windowSize = 16 << 20\n+\t\t\t\to.windowSize = 8 << 20\n \t\t\tcase SpeedBestCompression:\n-\t\t\t\to.windowSize = 32 << 20\n+\t\t\t\to.windowSize = 8 << 20\n \t\t\t}\n \t\t}\n \t\tif !o.customALEntropy {"
    },
    {
      "sha": "667ca06794e2a7739b47fc6956afa69797f2ba7f",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/frameenc.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fframeenc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fframeenc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fframeenc.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -76,7 +76,7 @@ func (f frameHeader) appendTo(dst []byte) []byte {\n \t\tif f.SingleSegment {\n \t\t\tdst = append(dst, uint8(f.ContentSize))\n \t\t}\n-\t\t// Unless SingleSegment is set, framessizes < 256 are nto stored.\n+\t\t// Unless SingleSegment is set, framessizes < 256 are not stored.\n \tcase 1:\n \t\tf.ContentSize -= 256\n \t\tdst = append(dst, uint8(f.ContentSize), uint8(f.ContentSize>>8))"
    },
    {
      "sha": "8adfebb029798c99e0543d261d521d174db55d24",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/fse_decoder_generic.go",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Ffse_decoder_generic.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Ffse_decoder_generic.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Ffse_decoder_generic.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -20,10 +20,9 @@ func (s *fseDecoder) buildDtable() error {\n \t\t\tif v == -1 {\n \t\t\t\ts.dt[highThreshold].setAddBits(uint8(i))\n \t\t\t\thighThreshold--\n-\t\t\t\tsymbolNext[i] = 1\n-\t\t\t} else {\n-\t\t\t\tsymbolNext[i] = uint16(v)\n+\t\t\t\tv = 1\n \t\t\t}\n+\t\t\tsymbolNext[i] = uint16(v)\n \t\t}\n \t}\n \n@@ -35,10 +34,12 @@ func (s *fseDecoder) buildDtable() error {\n \t\tfor ss, v := range s.norm[:s.symbolLen] {\n \t\t\tfor i := 0; i < int(v); i++ {\n \t\t\t\ts.dt[position].setAddBits(uint8(ss))\n-\t\t\t\tposition = (position + step) & tableMask\n-\t\t\t\tfor position > highThreshold {\n+\t\t\t\tfor {\n \t\t\t\t\t// lowprob area\n \t\t\t\t\tposition = (position + step) & tableMask\n+\t\t\t\t\tif position <= highThreshold {\n+\t\t\t\t\t\tbreak\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}"
    },
    {
      "sha": "5b06174b8981953aaca02bbfab2d401bcd5d6aab",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/seqdec_amd64.s",
      "status": "modified",
      "additions": 56,
      "deletions": 80,
      "changes": 136,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec_amd64.s",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec_amd64.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fseqdec_amd64.s?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -157,8 +157,7 @@ sequenceDecs_decode_amd64_ll_update_zero:\n \n \t// Update Literal Length State\n \tMOVBQZX DI, R14\n-\tSHRQ    $0x10, DI\n-\tMOVWQZX DI, DI\n+\tSHRL    $0x10, DI\n \tLEAQ    (BX)(R14*1), CX\n \tMOVQ    DX, R15\n \tMOVQ    CX, BX\n@@ -177,8 +176,7 @@ sequenceDecs_decode_amd64_ll_update_zero:\n \n \t// Update Match Length State\n \tMOVBQZX R8, R14\n-\tSHRQ    $0x10, R8\n-\tMOVWQZX R8, R8\n+\tSHRL    $0x10, R8\n \tLEAQ    (BX)(R14*1), CX\n \tMOVQ    DX, R15\n \tMOVQ    CX, BX\n@@ -197,8 +195,7 @@ sequenceDecs_decode_amd64_ll_update_zero:\n \n \t// Update Offset State\n \tMOVBQZX R9, R14\n-\tSHRQ    $0x10, R9\n-\tMOVWQZX R9, R9\n+\tSHRL    $0x10, R9\n \tLEAQ    (BX)(R14*1), CX\n \tMOVQ    DX, R15\n \tMOVQ    CX, BX\n@@ -459,8 +456,7 @@ sequenceDecs_decode_56_amd64_ll_update_zero:\n \n \t// Update Literal Length State\n \tMOVBQZX DI, R14\n-\tSHRQ    $0x10, DI\n-\tMOVWQZX DI, DI\n+\tSHRL    $0x10, DI\n \tLEAQ    (BX)(R14*1), CX\n \tMOVQ    DX, R15\n \tMOVQ    CX, BX\n@@ -479,8 +475,7 @@ sequenceDecs_decode_56_amd64_ll_update_zero:\n \n \t// Update Match Length State\n \tMOVBQZX R8, R14\n-\tSHRQ    $0x10, R8\n-\tMOVWQZX R8, R8\n+\tSHRL    $0x10, R8\n \tLEAQ    (BX)(R14*1), CX\n \tMOVQ    DX, R15\n \tMOVQ    CX, BX\n@@ -499,8 +494,7 @@ sequenceDecs_decode_56_amd64_ll_update_zero:\n \n \t// Update Offset State\n \tMOVBQZX R9, R14\n-\tSHRQ    $0x10, R9\n-\tMOVWQZX R9, R9\n+\tSHRL    $0x10, R9\n \tLEAQ    (BX)(R14*1), CX\n \tMOVQ    DX, R15\n \tMOVQ    CX, BX\n@@ -772,34 +766,31 @@ sequenceDecs_decode_bmi2_fill_2_end:\n \tBZHIQ   R14, R15, R15\n \n \t// Update Offset State\n-\tBZHIQ  R8, R15, CX\n-\tSHRXQ  R8, R15, R15\n-\tMOVQ   $0x00001010, R14\n-\tBEXTRQ R14, R8, R8\n-\tADDQ   CX, R8\n+\tBZHIQ R8, R15, CX\n+\tSHRXQ R8, R15, R15\n+\tSHRL  $0x10, R8\n+\tADDQ  CX, R8\n \n \t// Load ctx.ofTable\n \tMOVQ ctx+16(FP), CX\n \tMOVQ 48(CX), CX\n \tMOVQ (CX)(R8*8), R8\n \n \t// Update Match Length State\n-\tBZHIQ  DI, R15, CX\n-\tSHRXQ  DI, R15, R15\n-\tMOVQ   $0x00001010, R14\n-\tBEXTRQ R14, DI, DI\n-\tADDQ   CX, DI\n+\tBZHIQ DI, R15, CX\n+\tSHRXQ DI, R15, R15\n+\tSHRL  $0x10, DI\n+\tADDQ  CX, DI\n \n \t// Load ctx.mlTable\n \tMOVQ ctx+16(FP), CX\n \tMOVQ 24(CX), CX\n \tMOVQ (CX)(DI*8), DI\n \n \t// Update Literal Length State\n-\tBZHIQ  SI, R15, CX\n-\tMOVQ   $0x00001010, R14\n-\tBEXTRQ R14, SI, SI\n-\tADDQ   CX, SI\n+\tBZHIQ SI, R15, CX\n+\tSHRL  $0x10, SI\n+\tADDQ  CX, SI\n \n \t// Load ctx.llTable\n \tMOVQ ctx+16(FP), CX\n@@ -1032,34 +1023,31 @@ sequenceDecs_decode_56_bmi2_fill_end:\n \tBZHIQ   R14, R15, R15\n \n \t// Update Offset State\n-\tBZHIQ  R8, R15, CX\n-\tSHRXQ  R8, R15, R15\n-\tMOVQ   $0x00001010, R14\n-\tBEXTRQ R14, R8, R8\n-\tADDQ   CX, R8\n+\tBZHIQ R8, R15, CX\n+\tSHRXQ R8, R15, R15\n+\tSHRL  $0x10, R8\n+\tADDQ  CX, R8\n \n \t// Load ctx.ofTable\n \tMOVQ ctx+16(FP), CX\n \tMOVQ 48(CX), CX\n \tMOVQ (CX)(R8*8), R8\n \n \t// Update Match Length State\n-\tBZHIQ  DI, R15, CX\n-\tSHRXQ  DI, R15, R15\n-\tMOVQ   $0x00001010, R14\n-\tBEXTRQ R14, DI, DI\n-\tADDQ   CX, DI\n+\tBZHIQ DI, R15, CX\n+\tSHRXQ DI, R15, R15\n+\tSHRL  $0x10, DI\n+\tADDQ  CX, DI\n \n \t// Load ctx.mlTable\n \tMOVQ ctx+16(FP), CX\n \tMOVQ 24(CX), CX\n \tMOVQ (CX)(DI*8), DI\n \n \t// Update Literal Length State\n-\tBZHIQ  SI, R15, CX\n-\tMOVQ   $0x00001010, R14\n-\tBEXTRQ R14, SI, SI\n-\tADDQ   CX, SI\n+\tBZHIQ SI, R15, CX\n+\tSHRL  $0x10, SI\n+\tADDQ  CX, SI\n \n \t// Load ctx.llTable\n \tMOVQ ctx+16(FP), CX\n@@ -1967,8 +1955,7 @@ sequenceDecs_decodeSync_amd64_ll_update_zero:\n \n \t// Update Literal Length State\n \tMOVBQZX DI, R13\n-\tSHRQ    $0x10, DI\n-\tMOVWQZX DI, DI\n+\tSHRL    $0x10, DI\n \tLEAQ    (BX)(R13*1), CX\n \tMOVQ    DX, R14\n \tMOVQ    CX, BX\n@@ -1987,8 +1974,7 @@ sequenceDecs_decodeSync_amd64_ll_update_zero:\n \n \t// Update Match Length State\n \tMOVBQZX R8, R13\n-\tSHRQ    $0x10, R8\n-\tMOVWQZX R8, R8\n+\tSHRL    $0x10, R8\n \tLEAQ    (BX)(R13*1), CX\n \tMOVQ    DX, R14\n \tMOVQ    CX, BX\n@@ -2007,8 +1993,7 @@ sequenceDecs_decodeSync_amd64_ll_update_zero:\n \n \t// Update Offset State\n \tMOVBQZX R9, R13\n-\tSHRQ    $0x10, R9\n-\tMOVWQZX R9, R9\n+\tSHRL    $0x10, R9\n \tLEAQ    (BX)(R13*1), CX\n \tMOVQ    DX, R14\n \tMOVQ    CX, BX\n@@ -2514,34 +2499,31 @@ sequenceDecs_decodeSync_bmi2_fill_2_end:\n \tBZHIQ   R13, R14, R14\n \n \t// Update Offset State\n-\tBZHIQ  R8, R14, CX\n-\tSHRXQ  R8, R14, R14\n-\tMOVQ   $0x00001010, R13\n-\tBEXTRQ R13, R8, R8\n-\tADDQ   CX, R8\n+\tBZHIQ R8, R14, CX\n+\tSHRXQ R8, R14, R14\n+\tSHRL  $0x10, R8\n+\tADDQ  CX, R8\n \n \t// Load ctx.ofTable\n \tMOVQ ctx+16(FP), CX\n \tMOVQ 48(CX), CX\n \tMOVQ (CX)(R8*8), R8\n \n \t// Update Match Length State\n-\tBZHIQ  DI, R14, CX\n-\tSHRXQ  DI, R14, R14\n-\tMOVQ   $0x00001010, R13\n-\tBEXTRQ R13, DI, DI\n-\tADDQ   CX, DI\n+\tBZHIQ DI, R14, CX\n+\tSHRXQ DI, R14, R14\n+\tSHRL  $0x10, DI\n+\tADDQ  CX, DI\n \n \t// Load ctx.mlTable\n \tMOVQ ctx+16(FP), CX\n \tMOVQ 24(CX), CX\n \tMOVQ (CX)(DI*8), DI\n \n \t// Update Literal Length State\n-\tBZHIQ  SI, R14, CX\n-\tMOVQ   $0x00001010, R13\n-\tBEXTRQ R13, SI, SI\n-\tADDQ   CX, SI\n+\tBZHIQ SI, R14, CX\n+\tSHRL  $0x10, SI\n+\tADDQ  CX, SI\n \n \t// Load ctx.llTable\n \tMOVQ ctx+16(FP), CX\n@@ -3055,8 +3037,7 @@ sequenceDecs_decodeSync_safe_amd64_ll_update_zero:\n \n \t// Update Literal Length State\n \tMOVBQZX DI, R13\n-\tSHRQ    $0x10, DI\n-\tMOVWQZX DI, DI\n+\tSHRL    $0x10, DI\n \tLEAQ    (BX)(R13*1), CX\n \tMOVQ    DX, R14\n \tMOVQ    CX, BX\n@@ -3075,8 +3056,7 @@ sequenceDecs_decodeSync_safe_amd64_ll_update_zero:\n \n \t// Update Match Length State\n \tMOVBQZX R8, R13\n-\tSHRQ    $0x10, R8\n-\tMOVWQZX R8, R8\n+\tSHRL    $0x10, R8\n \tLEAQ    (BX)(R13*1), CX\n \tMOVQ    DX, R14\n \tMOVQ    CX, BX\n@@ -3095,8 +3075,7 @@ sequenceDecs_decodeSync_safe_amd64_ll_update_zero:\n \n \t// Update Offset State\n \tMOVBQZX R9, R13\n-\tSHRQ    $0x10, R9\n-\tMOVWQZX R9, R9\n+\tSHRL    $0x10, R9\n \tLEAQ    (BX)(R13*1), CX\n \tMOVQ    DX, R14\n \tMOVQ    CX, BX\n@@ -3704,34 +3683,31 @@ sequenceDecs_decodeSync_safe_bmi2_fill_2_end:\n \tBZHIQ   R13, R14, R14\n \n \t// Update Offset State\n-\tBZHIQ  R8, R14, CX\n-\tSHRXQ  R8, R14, R14\n-\tMOVQ   $0x00001010, R13\n-\tBEXTRQ R13, R8, R8\n-\tADDQ   CX, R8\n+\tBZHIQ R8, R14, CX\n+\tSHRXQ R8, R14, R14\n+\tSHRL  $0x10, R8\n+\tADDQ  CX, R8\n \n \t// Load ctx.ofTable\n \tMOVQ ctx+16(FP), CX\n \tMOVQ 48(CX), CX\n \tMOVQ (CX)(R8*8), R8\n \n \t// Update Match Length State\n-\tBZHIQ  DI, R14, CX\n-\tSHRXQ  DI, R14, R14\n-\tMOVQ   $0x00001010, R13\n-\tBEXTRQ R13, DI, DI\n-\tADDQ   CX, DI\n+\tBZHIQ DI, R14, CX\n+\tSHRXQ DI, R14, R14\n+\tSHRL  $0x10, DI\n+\tADDQ  CX, DI\n \n \t// Load ctx.mlTable\n \tMOVQ ctx+16(FP), CX\n \tMOVQ 24(CX), CX\n \tMOVQ (CX)(DI*8), DI\n \n \t// Update Literal Length State\n-\tBZHIQ  SI, R14, CX\n-\tMOVQ   $0x00001010, R13\n-\tBEXTRQ R13, SI, SI\n-\tADDQ   CX, SI\n+\tBZHIQ SI, R14, CX\n+\tSHRL  $0x10, SI\n+\tADDQ  CX, SI\n \n \t// Load ctx.llTable\n \tMOVQ ctx+16(FP), CX"
    },
    {
      "sha": "4d4b4aad6fe88e01587e8f749727f648936d90ee",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/assertion_compare.go",
      "status": "modified",
      "additions": 25,
      "deletions": 3,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_compare.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_compare.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_compare.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -28,6 +28,8 @@ var (\n \tuint32Type = reflect.TypeOf(uint32(1))\n \tuint64Type = reflect.TypeOf(uint64(1))\n \n+\tuintptrType = reflect.TypeOf(uintptr(1))\n+\n \tfloat32Type = reflect.TypeOf(float32(1))\n \tfloat64Type = reflect.TypeOf(float64(1))\n \n@@ -308,11 +310,11 @@ func compare(obj1, obj2 interface{}, kind reflect.Kind) (CompareType, bool) {\n \tcase reflect.Struct:\n \t\t{\n \t\t\t// All structs enter here. We're not interested in most types.\n-\t\t\tif !canConvert(obj1Value, timeType) {\n+\t\t\tif !obj1Value.CanConvert(timeType) {\n \t\t\t\tbreak\n \t\t\t}\n \n-\t\t\t// time.Time can compared!\n+\t\t\t// time.Time can be compared!\n \t\t\ttimeObj1, ok := obj1.(time.Time)\n \t\t\tif !ok {\n \t\t\t\ttimeObj1 = obj1Value.Convert(timeType).Interface().(time.Time)\n@@ -328,7 +330,7 @@ func compare(obj1, obj2 interface{}, kind reflect.Kind) (CompareType, bool) {\n \tcase reflect.Slice:\n \t\t{\n \t\t\t// We only care about the []byte type.\n-\t\t\tif !canConvert(obj1Value, bytesType) {\n+\t\t\tif !obj1Value.CanConvert(bytesType) {\n \t\t\t\tbreak\n \t\t\t}\n \n@@ -345,6 +347,26 @@ func compare(obj1, obj2 interface{}, kind reflect.Kind) (CompareType, bool) {\n \n \t\t\treturn CompareType(bytes.Compare(bytesObj1, bytesObj2)), true\n \t\t}\n+\tcase reflect.Uintptr:\n+\t\t{\n+\t\t\tuintptrObj1, ok := obj1.(uintptr)\n+\t\t\tif !ok {\n+\t\t\t\tuintptrObj1 = obj1Value.Convert(uintptrType).Interface().(uintptr)\n+\t\t\t}\n+\t\t\tuintptrObj2, ok := obj2.(uintptr)\n+\t\t\tif !ok {\n+\t\t\t\tuintptrObj2 = obj2Value.Convert(uintptrType).Interface().(uintptr)\n+\t\t\t}\n+\t\t\tif uintptrObj1 > uintptrObj2 {\n+\t\t\t\treturn compareGreater, true\n+\t\t\t}\n+\t\t\tif uintptrObj1 == uintptrObj2 {\n+\t\t\t\treturn compareEqual, true\n+\t\t\t}\n+\t\t\tif uintptrObj1 < uintptrObj2 {\n+\t\t\t\treturn compareLess, true\n+\t\t\t}\n+\t\t}\n \t}\n \n \treturn compareEqual, false"
    },
    {
      "sha": "da867903e2fa8796c0d0b58adaee3465c0b2eb0f",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/assertion_compare_can_convert.go",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/e0423b8683d7d5a1f6817af22193fb3f9ba9348d/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_compare_can_convert.go",
      "raw_url": "https://github.com/umputun/remark42/raw/e0423b8683d7d5a1f6817af22193fb3f9ba9348d/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_compare_can_convert.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_compare_can_convert.go?ref=e0423b8683d7d5a1f6817af22193fb3f9ba9348d",
      "patch": "@@ -1,16 +0,0 @@\n-//go:build go1.17\n-// +build go1.17\n-\n-// TODO: once support for Go 1.16 is dropped, this file can be\n-//       merged/removed with assertion_compare_go1.17_test.go and\n-//       assertion_compare_legacy.go\n-\n-package assert\n-\n-import \"reflect\"\n-\n-// Wrapper around reflect.Value.CanConvert, for compatibility\n-// reasons.\n-func canConvert(value reflect.Value, to reflect.Type) bool {\n-\treturn value.CanConvert(to)\n-}"
    },
    {
      "sha": "1701af2a3c89c238c4e2af7d48af2abac0bf4f87",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/assertion_compare_legacy.go",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/e0423b8683d7d5a1f6817af22193fb3f9ba9348d/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_compare_legacy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/e0423b8683d7d5a1f6817af22193fb3f9ba9348d/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_compare_legacy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_compare_legacy.go?ref=e0423b8683d7d5a1f6817af22193fb3f9ba9348d",
      "patch": "@@ -1,16 +0,0 @@\n-//go:build !go1.17\n-// +build !go1.17\n-\n-// TODO: once support for Go 1.16 is dropped, this file can be\n-//       merged/removed with assertion_compare_go1.17_test.go and\n-//       assertion_compare_can_convert.go\n-\n-package assert\n-\n-import \"reflect\"\n-\n-// Older versions of Go does not have the reflect.Value.CanConvert\n-// method.\n-func canConvert(value reflect.Value, to reflect.Type) bool {\n-\treturn false\n-}"
    },
    {
      "sha": "3ddab109ad9ec6061eca508f8749996e5e5534a4",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/assertion_format.go",
      "status": "modified",
      "additions": 21,
      "deletions": 11,
      "changes": 32,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_format.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_format.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_format.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -1,7 +1,4 @@\n-/*\n-* CODE GENERATED AUTOMATICALLY WITH github.com/stretchr/testify/_codegen\n-* THIS FILE MUST NOT BE EDITED BY HAND\n- */\n+// Code generated with github.com/stretchr/testify/_codegen; DO NOT EDIT.\n \n package assert\n \n@@ -107,7 +104,7 @@ func EqualExportedValuesf(t TestingT, expected interface{}, actual interface{},\n \treturn EqualExportedValues(t, expected, actual, append([]interface{}{msg}, args...)...)\n }\n \n-// EqualValuesf asserts that two objects are equal or convertable to the same types\n+// EqualValuesf asserts that two objects are equal or convertible to the same types\n // and equal.\n //\n //\tassert.EqualValuesf(t, uint32(123), int32(123), \"error message %s\", \"formatted\")\n@@ -616,6 +613,16 @@ func NotErrorIsf(t TestingT, err error, target error, msg string, args ...interf\n \treturn NotErrorIs(t, err, target, append([]interface{}{msg}, args...)...)\n }\n \n+// NotImplementsf asserts that an object does not implement the specified interface.\n+//\n+//\tassert.NotImplementsf(t, (*MyInterface)(nil), new(MyObject), \"error message %s\", \"formatted\")\n+func NotImplementsf(t TestingT, interfaceObject interface{}, object interface{}, msg string, args ...interface{}) bool {\n+\tif h, ok := t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\treturn NotImplements(t, interfaceObject, object, append([]interface{}{msg}, args...)...)\n+}\n+\n // NotNilf asserts that the specified object is not nil.\n //\n //\tassert.NotNilf(t, err, \"error message %s\", \"formatted\")\n@@ -660,10 +667,12 @@ func NotSamef(t TestingT, expected interface{}, actual interface{}, msg string,\n \treturn NotSame(t, expected, actual, append([]interface{}{msg}, args...)...)\n }\n \n-// NotSubsetf asserts that the specified list(array, slice...) contains not all\n-// elements given in the specified subset(array, slice...).\n+// NotSubsetf asserts that the specified list(array, slice...) or map does NOT\n+// contain all elements given in the specified subset list(array, slice...) or\n+// map.\n //\n-//\tassert.NotSubsetf(t, [1, 3, 4], [1, 2], \"But [1, 3, 4] does not contain [1, 2]\", \"error message %s\", \"formatted\")\n+//\tassert.NotSubsetf(t, [1, 3, 4], [1, 2], \"error message %s\", \"formatted\")\n+//\tassert.NotSubsetf(t, {\"x\": 1, \"y\": 2}, {\"z\": 3}, \"error message %s\", \"formatted\")\n func NotSubsetf(t TestingT, list interface{}, subset interface{}, msg string, args ...interface{}) bool {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -747,10 +756,11 @@ func Samef(t TestingT, expected interface{}, actual interface{}, msg string, arg\n \treturn Same(t, expected, actual, append([]interface{}{msg}, args...)...)\n }\n \n-// Subsetf asserts that the specified list(array, slice...) contains all\n-// elements given in the specified subset(array, slice...).\n+// Subsetf asserts that the specified list(array, slice...) or map contains all\n+// elements given in the specified subset list(array, slice...) or map.\n //\n-//\tassert.Subsetf(t, [1, 2, 3], [1, 2], \"But [1, 2, 3] does contain [1, 2]\", \"error message %s\", \"formatted\")\n+//\tassert.Subsetf(t, [1, 2, 3], [1, 2], \"error message %s\", \"formatted\")\n+//\tassert.Subsetf(t, {\"x\": 1, \"y\": 2}, {\"x\": 1}, \"error message %s\", \"formatted\")\n func Subsetf(t TestingT, list interface{}, subset interface{}, msg string, args ...interface{}) bool {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()"
    },
    {
      "sha": "a84e09bd40908cb712e81647835bca97e782a286",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/assertion_forward.go",
      "status": "modified",
      "additions": 41,
      "deletions": 18,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_forward.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_forward.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_forward.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -1,7 +1,4 @@\n-/*\n-* CODE GENERATED AUTOMATICALLY WITH github.com/stretchr/testify/_codegen\n-* THIS FILE MUST NOT BE EDITED BY HAND\n- */\n+// Code generated with github.com/stretchr/testify/_codegen; DO NOT EDIT.\n \n package assert\n \n@@ -189,7 +186,7 @@ func (a *Assertions) EqualExportedValuesf(expected interface{}, actual interface\n \treturn EqualExportedValuesf(a.t, expected, actual, msg, args...)\n }\n \n-// EqualValues asserts that two objects are equal or convertable to the same types\n+// EqualValues asserts that two objects are equal or convertible to the same types\n // and equal.\n //\n //\ta.EqualValues(uint32(123), int32(123))\n@@ -200,7 +197,7 @@ func (a *Assertions) EqualValues(expected interface{}, actual interface{}, msgAn\n \treturn EqualValues(a.t, expected, actual, msgAndArgs...)\n }\n \n-// EqualValuesf asserts that two objects are equal or convertable to the same types\n+// EqualValuesf asserts that two objects are equal or convertible to the same types\n // and equal.\n //\n //\ta.EqualValuesf(uint32(123), int32(123), \"error message %s\", \"formatted\")\n@@ -1221,6 +1218,26 @@ func (a *Assertions) NotErrorIsf(err error, target error, msg string, args ...in\n \treturn NotErrorIsf(a.t, err, target, msg, args...)\n }\n \n+// NotImplements asserts that an object does not implement the specified interface.\n+//\n+//\ta.NotImplements((*MyInterface)(nil), new(MyObject))\n+func (a *Assertions) NotImplements(interfaceObject interface{}, object interface{}, msgAndArgs ...interface{}) bool {\n+\tif h, ok := a.t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\treturn NotImplements(a.t, interfaceObject, object, msgAndArgs...)\n+}\n+\n+// NotImplementsf asserts that an object does not implement the specified interface.\n+//\n+//\ta.NotImplementsf((*MyInterface)(nil), new(MyObject), \"error message %s\", \"formatted\")\n+func (a *Assertions) NotImplementsf(interfaceObject interface{}, object interface{}, msg string, args ...interface{}) bool {\n+\tif h, ok := a.t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\treturn NotImplementsf(a.t, interfaceObject, object, msg, args...)\n+}\n+\n // NotNil asserts that the specified object is not nil.\n //\n //\ta.NotNil(err)\n@@ -1309,21 +1326,25 @@ func (a *Assertions) NotSamef(expected interface{}, actual interface{}, msg stri\n \treturn NotSamef(a.t, expected, actual, msg, args...)\n }\n \n-// NotSubset asserts that the specified list(array, slice...) contains not all\n-// elements given in the specified subset(array, slice...).\n+// NotSubset asserts that the specified list(array, slice...) or map does NOT\n+// contain all elements given in the specified subset list(array, slice...) or\n+// map.\n //\n-//\ta.NotSubset([1, 3, 4], [1, 2], \"But [1, 3, 4] does not contain [1, 2]\")\n+//\ta.NotSubset([1, 3, 4], [1, 2])\n+//\ta.NotSubset({\"x\": 1, \"y\": 2}, {\"z\": 3})\n func (a *Assertions) NotSubset(list interface{}, subset interface{}, msgAndArgs ...interface{}) bool {\n \tif h, ok := a.t.(tHelper); ok {\n \t\th.Helper()\n \t}\n \treturn NotSubset(a.t, list, subset, msgAndArgs...)\n }\n \n-// NotSubsetf asserts that the specified list(array, slice...) contains not all\n-// elements given in the specified subset(array, slice...).\n+// NotSubsetf asserts that the specified list(array, slice...) or map does NOT\n+// contain all elements given in the specified subset list(array, slice...) or\n+// map.\n //\n-//\ta.NotSubsetf([1, 3, 4], [1, 2], \"But [1, 3, 4] does not contain [1, 2]\", \"error message %s\", \"formatted\")\n+//\ta.NotSubsetf([1, 3, 4], [1, 2], \"error message %s\", \"formatted\")\n+//\ta.NotSubsetf({\"x\": 1, \"y\": 2}, {\"z\": 3}, \"error message %s\", \"formatted\")\n func (a *Assertions) NotSubsetf(list interface{}, subset interface{}, msg string, args ...interface{}) bool {\n \tif h, ok := a.t.(tHelper); ok {\n \t\th.Helper()\n@@ -1483,21 +1504,23 @@ func (a *Assertions) Samef(expected interface{}, actual interface{}, msg string,\n \treturn Samef(a.t, expected, actual, msg, args...)\n }\n \n-// Subset asserts that the specified list(array, slice...) contains all\n-// elements given in the specified subset(array, slice...).\n+// Subset asserts that the specified list(array, slice...) or map contains all\n+// elements given in the specified subset list(array, slice...) or map.\n //\n-//\ta.Subset([1, 2, 3], [1, 2], \"But [1, 2, 3] does contain [1, 2]\")\n+//\ta.Subset([1, 2, 3], [1, 2])\n+//\ta.Subset({\"x\": 1, \"y\": 2}, {\"x\": 1})\n func (a *Assertions) Subset(list interface{}, subset interface{}, msgAndArgs ...interface{}) bool {\n \tif h, ok := a.t.(tHelper); ok {\n \t\th.Helper()\n \t}\n \treturn Subset(a.t, list, subset, msgAndArgs...)\n }\n \n-// Subsetf asserts that the specified list(array, slice...) contains all\n-// elements given in the specified subset(array, slice...).\n+// Subsetf asserts that the specified list(array, slice...) or map contains all\n+// elements given in the specified subset list(array, slice...) or map.\n //\n-//\ta.Subsetf([1, 2, 3], [1, 2], \"But [1, 2, 3] does contain [1, 2]\", \"error message %s\", \"formatted\")\n+//\ta.Subsetf([1, 2, 3], [1, 2], \"error message %s\", \"formatted\")\n+//\ta.Subsetf({\"x\": 1, \"y\": 2}, {\"x\": 1}, \"error message %s\", \"formatted\")\n func (a *Assertions) Subsetf(list interface{}, subset interface{}, msg string, args ...interface{}) bool {\n \tif h, ok := a.t.(tHelper); ok {\n \t\th.Helper()"
    },
    {
      "sha": "0b7570f21c631b5594aa5420c090c8c88c1a879d",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/assertions.go",
      "status": "modified",
      "additions": 129,
      "deletions": 78,
      "changes": 207,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertions.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -19,7 +19,7 @@ import (\n \n \t\"github.com/davecgh/go-spew/spew\"\n \t\"github.com/pmezard/go-difflib/difflib\"\n-\tyaml \"gopkg.in/yaml.v3\"\n+\t\"gopkg.in/yaml.v3\"\n )\n \n //go:generate sh -c \"cd ../_codegen && go build && cd - && ../_codegen/_codegen -output-package=assert -template=assertion_format.go.tmpl\"\n@@ -110,7 +110,12 @@ func copyExportedFields(expected interface{}) interface{} {\n \t\treturn result.Interface()\n \n \tcase reflect.Array, reflect.Slice:\n-\t\tresult := reflect.MakeSlice(expectedType, expectedValue.Len(), expectedValue.Len())\n+\t\tvar result reflect.Value\n+\t\tif expectedKind == reflect.Array {\n+\t\t\tresult = reflect.New(reflect.ArrayOf(expectedValue.Len(), expectedType.Elem())).Elem()\n+\t\t} else {\n+\t\t\tresult = reflect.MakeSlice(expectedType, expectedValue.Len(), expectedValue.Len())\n+\t\t}\n \t\tfor i := 0; i < expectedValue.Len(); i++ {\n \t\t\tindex := expectedValue.Index(i)\n \t\t\tif isNil(index) {\n@@ -140,6 +145,8 @@ func copyExportedFields(expected interface{}) interface{} {\n // structures.\n //\n // This function does no assertion of any kind.\n+//\n+// Deprecated: Use [EqualExportedValues] instead.\n func ObjectsExportedFieldsAreEqual(expected, actual interface{}) bool {\n \texpectedCleaned := copyExportedFields(expected)\n \tactualCleaned := copyExportedFields(actual)\n@@ -153,17 +160,40 @@ func ObjectsAreEqualValues(expected, actual interface{}) bool {\n \t\treturn true\n \t}\n \n-\tactualType := reflect.TypeOf(actual)\n-\tif actualType == nil {\n+\texpectedValue := reflect.ValueOf(expected)\n+\tactualValue := reflect.ValueOf(actual)\n+\tif !expectedValue.IsValid() || !actualValue.IsValid() {\n \t\treturn false\n \t}\n-\texpectedValue := reflect.ValueOf(expected)\n-\tif expectedValue.IsValid() && expectedValue.Type().ConvertibleTo(actualType) {\n+\n+\texpectedType := expectedValue.Type()\n+\tactualType := actualValue.Type()\n+\tif !expectedType.ConvertibleTo(actualType) {\n+\t\treturn false\n+\t}\n+\n+\tif !isNumericType(expectedType) || !isNumericType(actualType) {\n \t\t// Attempt comparison after type conversion\n-\t\treturn reflect.DeepEqual(expectedValue.Convert(actualType).Interface(), actual)\n+\t\treturn reflect.DeepEqual(\n+\t\t\texpectedValue.Convert(actualType).Interface(), actual,\n+\t\t)\n \t}\n \n-\treturn false\n+\t// If BOTH values are numeric, there are chances of false positives due\n+\t// to overflow or underflow. So, we need to make sure to always convert\n+\t// the smaller type to a larger type before comparing.\n+\tif expectedType.Size() >= actualType.Size() {\n+\t\treturn actualValue.Convert(expectedType).Interface() == expected\n+\t}\n+\n+\treturn expectedValue.Convert(actualType).Interface() == actual\n+}\n+\n+// isNumericType returns true if the type is one of:\n+// int, int8, int16, int32, int64, uint, uint8, uint16, uint32, uint64,\n+// float32, float64, complex64, complex128\n+func isNumericType(t reflect.Type) bool {\n+\treturn t.Kind() >= reflect.Int && t.Kind() <= reflect.Complex128\n }\n \n /* CallerInfo is necessary because the assert functions use the testing object\n@@ -266,7 +296,7 @@ func messageFromMsgAndArgs(msgAndArgs ...interface{}) string {\n \n // Aligns the provided message so that all lines after the first line start at the same location as the first line.\n // Assumes that the first line starts at the correct location (after carriage return, tab, label, spacer and tab).\n-// The longestLabelLen parameter specifies the length of the longest label in the output (required becaues this is the\n+// The longestLabelLen parameter specifies the length of the longest label in the output (required because this is the\n // basis on which the alignment occurs).\n func indentMessageLines(message string, longestLabelLen int) string {\n \toutBuf := new(bytes.Buffer)\n@@ -382,6 +412,25 @@ func Implements(t TestingT, interfaceObject interface{}, object interface{}, msg\n \treturn true\n }\n \n+// NotImplements asserts that an object does not implement the specified interface.\n+//\n+//\tassert.NotImplements(t, (*MyInterface)(nil), new(MyObject))\n+func NotImplements(t TestingT, interfaceObject interface{}, object interface{}, msgAndArgs ...interface{}) bool {\n+\tif h, ok := t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tinterfaceType := reflect.TypeOf(interfaceObject).Elem()\n+\n+\tif object == nil {\n+\t\treturn Fail(t, fmt.Sprintf(\"Cannot check if nil does not implement %v\", interfaceType), msgAndArgs...)\n+\t}\n+\tif reflect.TypeOf(object).Implements(interfaceType) {\n+\t\treturn Fail(t, fmt.Sprintf(\"%T implements %v\", object, interfaceType), msgAndArgs...)\n+\t}\n+\n+\treturn true\n+}\n+\n // IsType asserts that the specified objects are of the same type.\n func IsType(t TestingT, expectedType interface{}, object interface{}, msgAndArgs ...interface{}) bool {\n \tif h, ok := t.(tHelper); ok {\n@@ -496,7 +545,7 @@ func samePointers(first, second interface{}) bool {\n // representations appropriate to be presented to the user.\n //\n // If the values are not of like type, the returned strings will be prefixed\n-// with the type name, and the value will be enclosed in parenthesis similar\n+// with the type name, and the value will be enclosed in parentheses similar\n // to a type conversion in the Go grammar.\n func formatUnequalValues(expected, actual interface{}) (e string, a string) {\n \tif reflect.TypeOf(expected) != reflect.TypeOf(actual) {\n@@ -523,7 +572,7 @@ func truncatingFormat(data interface{}) string {\n \treturn value\n }\n \n-// EqualValues asserts that two objects are equal or convertable to the same types\n+// EqualValues asserts that two objects are equal or convertible to the same types\n // and equal.\n //\n //\tassert.EqualValues(t, uint32(123), int32(123))\n@@ -566,12 +615,19 @@ func EqualExportedValues(t TestingT, expected, actual interface{}, msgAndArgs ..\n \t\treturn Fail(t, fmt.Sprintf(\"Types expected to match exactly\\n\\t%v != %v\", aType, bType), msgAndArgs...)\n \t}\n \n+\tif aType.Kind() == reflect.Ptr {\n+\t\taType = aType.Elem()\n+\t}\n+\tif bType.Kind() == reflect.Ptr {\n+\t\tbType = bType.Elem()\n+\t}\n+\n \tif aType.Kind() != reflect.Struct {\n-\t\treturn Fail(t, fmt.Sprintf(\"Types expected to both be struct \\n\\t%v != %v\", aType.Kind(), reflect.Struct), msgAndArgs...)\n+\t\treturn Fail(t, fmt.Sprintf(\"Types expected to both be struct or pointer to struct \\n\\t%v != %v\", aType.Kind(), reflect.Struct), msgAndArgs...)\n \t}\n \n \tif bType.Kind() != reflect.Struct {\n-\t\treturn Fail(t, fmt.Sprintf(\"Types expected to both be struct \\n\\t%v != %v\", bType.Kind(), reflect.Struct), msgAndArgs...)\n+\t\treturn Fail(t, fmt.Sprintf(\"Types expected to both be struct or pointer to struct \\n\\t%v != %v\", bType.Kind(), reflect.Struct), msgAndArgs...)\n \t}\n \n \texpected = copyExportedFields(expected)\n@@ -620,34 +676,20 @@ func NotNil(t TestingT, object interface{}, msgAndArgs ...interface{}) bool {\n \treturn Fail(t, \"Expected value not to be nil.\", msgAndArgs...)\n }\n \n-// containsKind checks if a specified kind in the slice of kinds.\n-func containsKind(kinds []reflect.Kind, kind reflect.Kind) bool {\n-\tfor i := 0; i < len(kinds); i++ {\n-\t\tif kind == kinds[i] {\n-\t\t\treturn true\n-\t\t}\n-\t}\n-\n-\treturn false\n-}\n-\n // isNil checks if a specified object is nil or not, without Failing.\n func isNil(object interface{}) bool {\n \tif object == nil {\n \t\treturn true\n \t}\n \n \tvalue := reflect.ValueOf(object)\n-\tkind := value.Kind()\n-\tisNilableKind := containsKind(\n-\t\t[]reflect.Kind{\n-\t\t\treflect.Chan, reflect.Func,\n-\t\t\treflect.Interface, reflect.Map,\n-\t\t\treflect.Ptr, reflect.Slice, reflect.UnsafePointer},\n-\t\tkind)\n-\n-\tif isNilableKind && value.IsNil() {\n-\t\treturn true\n+\tswitch value.Kind() {\n+\tcase\n+\t\treflect.Chan, reflect.Func,\n+\t\treflect.Interface, reflect.Map,\n+\t\treflect.Ptr, reflect.Slice, reflect.UnsafePointer:\n+\n+\t\treturn value.IsNil()\n \t}\n \n \treturn false\n@@ -731,16 +773,14 @@ func NotEmpty(t TestingT, object interface{}, msgAndArgs ...interface{}) bool {\n \n }\n \n-// getLen try to get length of object.\n-// return (false, 0) if impossible.\n-func getLen(x interface{}) (ok bool, length int) {\n+// getLen tries to get the length of an object.\n+// It returns (0, false) if impossible.\n+func getLen(x interface{}) (length int, ok bool) {\n \tv := reflect.ValueOf(x)\n \tdefer func() {\n-\t\tif e := recover(); e != nil {\n-\t\t\tok = false\n-\t\t}\n+\t\tok = recover() == nil\n \t}()\n-\treturn true, v.Len()\n+\treturn v.Len(), true\n }\n \n // Len asserts that the specified object has specific length.\n@@ -751,13 +791,13 @@ func Len(t TestingT, object interface{}, length int, msgAndArgs ...interface{})\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n \t}\n-\tok, l := getLen(object)\n+\tl, ok := getLen(object)\n \tif !ok {\n-\t\treturn Fail(t, fmt.Sprintf(\"\\\"%s\\\" could not be applied builtin len()\", object), msgAndArgs...)\n+\t\treturn Fail(t, fmt.Sprintf(\"\\\"%v\\\" could not be applied builtin len()\", object), msgAndArgs...)\n \t}\n \n \tif l != length {\n-\t\treturn Fail(t, fmt.Sprintf(\"\\\"%s\\\" should have %d item(s), but has %d\", object, length, l), msgAndArgs...)\n+\t\treturn Fail(t, fmt.Sprintf(\"\\\"%v\\\" should have %d item(s), but has %d\", object, length, l), msgAndArgs...)\n \t}\n \treturn true\n }\n@@ -919,10 +959,11 @@ func NotContains(t TestingT, s, contains interface{}, msgAndArgs ...interface{})\n \n }\n \n-// Subset asserts that the specified list(array, slice...) contains all\n-// elements given in the specified subset(array, slice...).\n+// Subset asserts that the specified list(array, slice...) or map contains all\n+// elements given in the specified subset list(array, slice...) or map.\n //\n-//\tassert.Subset(t, [1, 2, 3], [1, 2], \"But [1, 2, 3] does contain [1, 2]\")\n+//\tassert.Subset(t, [1, 2, 3], [1, 2])\n+//\tassert.Subset(t, {\"x\": 1, \"y\": 2}, {\"x\": 1})\n func Subset(t TestingT, list, subset interface{}, msgAndArgs ...interface{}) (ok bool) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -975,10 +1016,12 @@ func Subset(t TestingT, list, subset interface{}, msgAndArgs ...interface{}) (ok\n \treturn true\n }\n \n-// NotSubset asserts that the specified list(array, slice...) contains not all\n-// elements given in the specified subset(array, slice...).\n+// NotSubset asserts that the specified list(array, slice...) or map does NOT\n+// contain all elements given in the specified subset list(array, slice...) or\n+// map.\n //\n-//\tassert.NotSubset(t, [1, 3, 4], [1, 2], \"But [1, 3, 4] does not contain [1, 2]\")\n+//\tassert.NotSubset(t, [1, 3, 4], [1, 2])\n+//\tassert.NotSubset(t, {\"x\": 1, \"y\": 2}, {\"z\": 3})\n func NotSubset(t TestingT, list, subset interface{}, msgAndArgs ...interface{}) (ok bool) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1439,7 +1482,7 @@ func InEpsilon(t TestingT, expected, actual interface{}, epsilon float64, msgAnd\n \t\th.Helper()\n \t}\n \tif math.IsNaN(epsilon) {\n-\t\treturn Fail(t, \"epsilon must not be NaN\")\n+\t\treturn Fail(t, \"epsilon must not be NaN\", msgAndArgs...)\n \t}\n \tactualEpsilon, err := calcRelativeError(expected, actual)\n \tif err != nil {\n@@ -1458,19 +1501,26 @@ func InEpsilonSlice(t TestingT, expected, actual interface{}, epsilon float64, m\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n \t}\n-\tif expected == nil || actual == nil ||\n-\t\treflect.TypeOf(actual).Kind() != reflect.Slice ||\n-\t\treflect.TypeOf(expected).Kind() != reflect.Slice {\n+\n+\tif expected == nil || actual == nil {\n \t\treturn Fail(t, \"Parameters must be slice\", msgAndArgs...)\n \t}\n \n-\tactualSlice := reflect.ValueOf(actual)\n \texpectedSlice := reflect.ValueOf(expected)\n+\tactualSlice := reflect.ValueOf(actual)\n \n-\tfor i := 0; i < actualSlice.Len(); i++ {\n-\t\tresult := InEpsilon(t, actualSlice.Index(i).Interface(), expectedSlice.Index(i).Interface(), epsilon)\n-\t\tif !result {\n-\t\t\treturn result\n+\tif expectedSlice.Type().Kind() != reflect.Slice {\n+\t\treturn Fail(t, \"Expected value must be slice\", msgAndArgs...)\n+\t}\n+\n+\texpectedLen := expectedSlice.Len()\n+\tif !IsType(t, expected, actual) || !Len(t, actual, expectedLen) {\n+\t\treturn false\n+\t}\n+\n+\tfor i := 0; i < expectedLen; i++ {\n+\t\tif !InEpsilon(t, expectedSlice.Index(i).Interface(), actualSlice.Index(i).Interface(), epsilon, \"at index %d\", i) {\n+\t\t\treturn false\n \t\t}\n \t}\n \n@@ -1870,23 +1920,18 @@ func (c *CollectT) Errorf(format string, args ...interface{}) {\n }\n \n // FailNow panics.\n-func (c *CollectT) FailNow() {\n+func (*CollectT) FailNow() {\n \tpanic(\"Assertion failed\")\n }\n \n-// Reset clears the collected errors.\n-func (c *CollectT) Reset() {\n-\tc.errors = nil\n+// Deprecated: That was a method for internal usage that should not have been published. Now just panics.\n+func (*CollectT) Reset() {\n+\tpanic(\"Reset() is deprecated\")\n }\n \n-// Copy copies the collected errors to the supplied t.\n-func (c *CollectT) Copy(t TestingT) {\n-\tif tt, ok := t.(tHelper); ok {\n-\t\ttt.Helper()\n-\t}\n-\tfor _, err := range c.errors {\n-\t\tt.Errorf(\"%v\", err)\n-\t}\n+// Deprecated: That was a method for internal usage that should not have been published. Now just panics.\n+func (*CollectT) Copy(TestingT) {\n+\tpanic(\"Copy() is deprecated\")\n }\n \n // EventuallyWithT asserts that given condition will be met in waitFor time,\n@@ -1912,8 +1957,8 @@ func EventuallyWithT(t TestingT, condition func(collect *CollectT), waitFor time\n \t\th.Helper()\n \t}\n \n-\tcollect := new(CollectT)\n-\tch := make(chan bool, 1)\n+\tvar lastFinishedTickErrs []error\n+\tch := make(chan []error, 1)\n \n \ttimer := time.NewTimer(waitFor)\n \tdefer timer.Stop()\n@@ -1924,19 +1969,25 @@ func EventuallyWithT(t TestingT, condition func(collect *CollectT), waitFor time\n \tfor tick := ticker.C; ; {\n \t\tselect {\n \t\tcase <-timer.C:\n-\t\t\tcollect.Copy(t)\n+\t\t\tfor _, err := range lastFinishedTickErrs {\n+\t\t\t\tt.Errorf(\"%v\", err)\n+\t\t\t}\n \t\t\treturn Fail(t, \"Condition never satisfied\", msgAndArgs...)\n \t\tcase <-tick:\n \t\t\ttick = nil\n-\t\t\tcollect.Reset()\n \t\t\tgo func() {\n+\t\t\t\tcollect := new(CollectT)\n+\t\t\t\tdefer func() {\n+\t\t\t\t\tch <- collect.errors\n+\t\t\t\t}()\n \t\t\t\tcondition(collect)\n-\t\t\t\tch <- len(collect.errors) == 0\n \t\t\t}()\n-\t\tcase v := <-ch:\n-\t\t\tif v {\n+\t\tcase errs := <-ch:\n+\t\t\tif len(errs) == 0 {\n \t\t\t\treturn true\n \t\t\t}\n+\t\t\t// Keep the errors from the last ended condition, so that they can be copied to t if timeout is reached.\n+\t\t\tlastFinishedTickErrs = errs\n \t\t\ttick = ticker.C\n \t\t}\n \t}"
    },
    {
      "sha": "861ed4b7ced0beb48e459a0cdcb960868ffc9fa2",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/http_assertions.go",
      "status": "modified",
      "additions": 15,
      "deletions": 12,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fhttp_assertions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fhttp_assertions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fhttp_assertions.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -12,7 +12,7 @@ import (\n // an error if building a new request fails.\n func httpCode(handler http.HandlerFunc, method, url string, values url.Values) (int, error) {\n \tw := httptest.NewRecorder()\n-\treq, err := http.NewRequest(method, url, nil)\n+\treq, err := http.NewRequest(method, url, http.NoBody)\n \tif err != nil {\n \t\treturn -1, err\n \t}\n@@ -32,12 +32,12 @@ func HTTPSuccess(t TestingT, handler http.HandlerFunc, method, url string, value\n \t}\n \tcode, err := httpCode(handler, method, url, values)\n \tif err != nil {\n-\t\tFail(t, fmt.Sprintf(\"Failed to build test request, got error: %s\", err))\n+\t\tFail(t, fmt.Sprintf(\"Failed to build test request, got error: %s\", err), msgAndArgs...)\n \t}\n \n \tisSuccessCode := code >= http.StatusOK && code <= http.StatusPartialContent\n \tif !isSuccessCode {\n-\t\tFail(t, fmt.Sprintf(\"Expected HTTP success status code for %q but received %d\", url+\"?\"+values.Encode(), code))\n+\t\tFail(t, fmt.Sprintf(\"Expected HTTP success status code for %q but received %d\", url+\"?\"+values.Encode(), code), msgAndArgs...)\n \t}\n \n \treturn isSuccessCode\n@@ -54,12 +54,12 @@ func HTTPRedirect(t TestingT, handler http.HandlerFunc, method, url string, valu\n \t}\n \tcode, err := httpCode(handler, method, url, values)\n \tif err != nil {\n-\t\tFail(t, fmt.Sprintf(\"Failed to build test request, got error: %s\", err))\n+\t\tFail(t, fmt.Sprintf(\"Failed to build test request, got error: %s\", err), msgAndArgs...)\n \t}\n \n \tisRedirectCode := code >= http.StatusMultipleChoices && code <= http.StatusTemporaryRedirect\n \tif !isRedirectCode {\n-\t\tFail(t, fmt.Sprintf(\"Expected HTTP redirect status code for %q but received %d\", url+\"?\"+values.Encode(), code))\n+\t\tFail(t, fmt.Sprintf(\"Expected HTTP redirect status code for %q but received %d\", url+\"?\"+values.Encode(), code), msgAndArgs...)\n \t}\n \n \treturn isRedirectCode\n@@ -76,12 +76,12 @@ func HTTPError(t TestingT, handler http.HandlerFunc, method, url string, values\n \t}\n \tcode, err := httpCode(handler, method, url, values)\n \tif err != nil {\n-\t\tFail(t, fmt.Sprintf(\"Failed to build test request, got error: %s\", err))\n+\t\tFail(t, fmt.Sprintf(\"Failed to build test request, got error: %s\", err), msgAndArgs...)\n \t}\n \n \tisErrorCode := code >= http.StatusBadRequest\n \tif !isErrorCode {\n-\t\tFail(t, fmt.Sprintf(\"Expected HTTP error status code for %q but received %d\", url+\"?\"+values.Encode(), code))\n+\t\tFail(t, fmt.Sprintf(\"Expected HTTP error status code for %q but received %d\", url+\"?\"+values.Encode(), code), msgAndArgs...)\n \t}\n \n \treturn isErrorCode\n@@ -98,12 +98,12 @@ func HTTPStatusCode(t TestingT, handler http.HandlerFunc, method, url string, va\n \t}\n \tcode, err := httpCode(handler, method, url, values)\n \tif err != nil {\n-\t\tFail(t, fmt.Sprintf(\"Failed to build test request, got error: %s\", err))\n+\t\tFail(t, fmt.Sprintf(\"Failed to build test request, got error: %s\", err), msgAndArgs...)\n \t}\n \n \tsuccessful := code == statuscode\n \tif !successful {\n-\t\tFail(t, fmt.Sprintf(\"Expected HTTP status code %d for %q but received %d\", statuscode, url+\"?\"+values.Encode(), code))\n+\t\tFail(t, fmt.Sprintf(\"Expected HTTP status code %d for %q but received %d\", statuscode, url+\"?\"+values.Encode(), code), msgAndArgs...)\n \t}\n \n \treturn successful\n@@ -113,7 +113,10 @@ func HTTPStatusCode(t TestingT, handler http.HandlerFunc, method, url string, va\n // empty string if building a new request fails.\n func HTTPBody(handler http.HandlerFunc, method, url string, values url.Values) string {\n \tw := httptest.NewRecorder()\n-\treq, err := http.NewRequest(method, url+\"?\"+values.Encode(), nil)\n+\tif len(values) > 0 {\n+\t\turl += \"?\" + values.Encode()\n+\t}\n+\treq, err := http.NewRequest(method, url, http.NoBody)\n \tif err != nil {\n \t\treturn \"\"\n \t}\n@@ -135,7 +138,7 @@ func HTTPBodyContains(t TestingT, handler http.HandlerFunc, method, url string,\n \n \tcontains := strings.Contains(body, fmt.Sprint(str))\n \tif !contains {\n-\t\tFail(t, fmt.Sprintf(\"Expected response body for \\\"%s\\\" to contain \\\"%s\\\" but found \\\"%s\\\"\", url+\"?\"+values.Encode(), str, body))\n+\t\tFail(t, fmt.Sprintf(\"Expected response body for \\\"%s\\\" to contain \\\"%s\\\" but found \\\"%s\\\"\", url+\"?\"+values.Encode(), str, body), msgAndArgs...)\n \t}\n \n \treturn contains\n@@ -155,7 +158,7 @@ func HTTPBodyNotContains(t TestingT, handler http.HandlerFunc, method, url strin\n \n \tcontains := strings.Contains(body, fmt.Sprint(str))\n \tif contains {\n-\t\tFail(t, fmt.Sprintf(\"Expected response body for \\\"%s\\\" to NOT contain \\\"%s\\\" but found \\\"%s\\\"\", url+\"?\"+values.Encode(), str, body))\n+\t\tFail(t, fmt.Sprintf(\"Expected response body for \\\"%s\\\" to NOT contain \\\"%s\\\" but found \\\"%s\\\"\", url+\"?\"+values.Encode(), str, body), msgAndArgs...)\n \t}\n \n \treturn !contains"
    },
    {
      "sha": "506a82f8077751bd86fb19e0adf0562834d88b9e",
      "filename": "backend/vendor/github.com/stretchr/testify/require/require.go",
      "status": "modified",
      "additions": 47,
      "deletions": 18,
      "changes": 65,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -1,7 +1,4 @@\n-/*\n-* CODE GENERATED AUTOMATICALLY WITH github.com/stretchr/testify/_codegen\n-* THIS FILE MUST NOT BE EDITED BY HAND\n- */\n+// Code generated with github.com/stretchr/testify/_codegen; DO NOT EDIT.\n \n package require\n \n@@ -235,7 +232,7 @@ func EqualExportedValuesf(t TestingT, expected interface{}, actual interface{},\n \tt.FailNow()\n }\n \n-// EqualValues asserts that two objects are equal or convertable to the same types\n+// EqualValues asserts that two objects are equal or convertible to the same types\n // and equal.\n //\n //\tassert.EqualValues(t, uint32(123), int32(123))\n@@ -249,7 +246,7 @@ func EqualValues(t TestingT, expected interface{}, actual interface{}, msgAndArg\n \tt.FailNow()\n }\n \n-// EqualValuesf asserts that two objects are equal or convertable to the same types\n+// EqualValuesf asserts that two objects are equal or convertible to the same types\n // and equal.\n //\n //\tassert.EqualValuesf(t, uint32(123), int32(123), \"error message %s\", \"formatted\")\n@@ -1546,6 +1543,32 @@ func NotErrorIsf(t TestingT, err error, target error, msg string, args ...interf\n \tt.FailNow()\n }\n \n+// NotImplements asserts that an object does not implement the specified interface.\n+//\n+//\tassert.NotImplements(t, (*MyInterface)(nil), new(MyObject))\n+func NotImplements(t TestingT, interfaceObject interface{}, object interface{}, msgAndArgs ...interface{}) {\n+\tif h, ok := t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tif assert.NotImplements(t, interfaceObject, object, msgAndArgs...) {\n+\t\treturn\n+\t}\n+\tt.FailNow()\n+}\n+\n+// NotImplementsf asserts that an object does not implement the specified interface.\n+//\n+//\tassert.NotImplementsf(t, (*MyInterface)(nil), new(MyObject), \"error message %s\", \"formatted\")\n+func NotImplementsf(t TestingT, interfaceObject interface{}, object interface{}, msg string, args ...interface{}) {\n+\tif h, ok := t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tif assert.NotImplementsf(t, interfaceObject, object, msg, args...) {\n+\t\treturn\n+\t}\n+\tt.FailNow()\n+}\n+\n // NotNil asserts that the specified object is not nil.\n //\n //\tassert.NotNil(t, err)\n@@ -1658,10 +1681,12 @@ func NotSamef(t TestingT, expected interface{}, actual interface{}, msg string,\n \tt.FailNow()\n }\n \n-// NotSubset asserts that the specified list(array, slice...) contains not all\n-// elements given in the specified subset(array, slice...).\n+// NotSubset asserts that the specified list(array, slice...) or map does NOT\n+// contain all elements given in the specified subset list(array, slice...) or\n+// map.\n //\n-//\tassert.NotSubset(t, [1, 3, 4], [1, 2], \"But [1, 3, 4] does not contain [1, 2]\")\n+//\tassert.NotSubset(t, [1, 3, 4], [1, 2])\n+//\tassert.NotSubset(t, {\"x\": 1, \"y\": 2}, {\"z\": 3})\n func NotSubset(t TestingT, list interface{}, subset interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1672,10 +1697,12 @@ func NotSubset(t TestingT, list interface{}, subset interface{}, msgAndArgs ...i\n \tt.FailNow()\n }\n \n-// NotSubsetf asserts that the specified list(array, slice...) contains not all\n-// elements given in the specified subset(array, slice...).\n+// NotSubsetf asserts that the specified list(array, slice...) or map does NOT\n+// contain all elements given in the specified subset list(array, slice...) or\n+// map.\n //\n-//\tassert.NotSubsetf(t, [1, 3, 4], [1, 2], \"But [1, 3, 4] does not contain [1, 2]\", \"error message %s\", \"formatted\")\n+//\tassert.NotSubsetf(t, [1, 3, 4], [1, 2], \"error message %s\", \"formatted\")\n+//\tassert.NotSubsetf(t, {\"x\": 1, \"y\": 2}, {\"z\": 3}, \"error message %s\", \"formatted\")\n func NotSubsetf(t TestingT, list interface{}, subset interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1880,10 +1907,11 @@ func Samef(t TestingT, expected interface{}, actual interface{}, msg string, arg\n \tt.FailNow()\n }\n \n-// Subset asserts that the specified list(array, slice...) contains all\n-// elements given in the specified subset(array, slice...).\n+// Subset asserts that the specified list(array, slice...) or map contains all\n+// elements given in the specified subset list(array, slice...) or map.\n //\n-//\tassert.Subset(t, [1, 2, 3], [1, 2], \"But [1, 2, 3] does contain [1, 2]\")\n+//\tassert.Subset(t, [1, 2, 3], [1, 2])\n+//\tassert.Subset(t, {\"x\": 1, \"y\": 2}, {\"x\": 1})\n func Subset(t TestingT, list interface{}, subset interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1894,10 +1922,11 @@ func Subset(t TestingT, list interface{}, subset interface{}, msgAndArgs ...inte\n \tt.FailNow()\n }\n \n-// Subsetf asserts that the specified list(array, slice...) contains all\n-// elements given in the specified subset(array, slice...).\n+// Subsetf asserts that the specified list(array, slice...) or map contains all\n+// elements given in the specified subset list(array, slice...) or map.\n //\n-//\tassert.Subsetf(t, [1, 2, 3], [1, 2], \"But [1, 2, 3] does contain [1, 2]\", \"error message %s\", \"formatted\")\n+//\tassert.Subsetf(t, [1, 2, 3], [1, 2], \"error message %s\", \"formatted\")\n+//\tassert.Subsetf(t, {\"x\": 1, \"y\": 2}, {\"x\": 1}, \"error message %s\", \"formatted\")\n func Subsetf(t TestingT, list interface{}, subset interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()"
    },
    {
      "sha": "eee8310a5fa91bc7f57f02cf899b194946671c3b",
      "filename": "backend/vendor/github.com/stretchr/testify/require/require_forward.go",
      "status": "modified",
      "additions": 41,
      "deletions": 18,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire_forward.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire_forward.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire_forward.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -1,7 +1,4 @@\n-/*\n-* CODE GENERATED AUTOMATICALLY WITH github.com/stretchr/testify/_codegen\n-* THIS FILE MUST NOT BE EDITED BY HAND\n- */\n+// Code generated with github.com/stretchr/testify/_codegen; DO NOT EDIT.\n \n package require\n \n@@ -190,7 +187,7 @@ func (a *Assertions) EqualExportedValuesf(expected interface{}, actual interface\n \tEqualExportedValuesf(a.t, expected, actual, msg, args...)\n }\n \n-// EqualValues asserts that two objects are equal or convertable to the same types\n+// EqualValues asserts that two objects are equal or convertible to the same types\n // and equal.\n //\n //\ta.EqualValues(uint32(123), int32(123))\n@@ -201,7 +198,7 @@ func (a *Assertions) EqualValues(expected interface{}, actual interface{}, msgAn\n \tEqualValues(a.t, expected, actual, msgAndArgs...)\n }\n \n-// EqualValuesf asserts that two objects are equal or convertable to the same types\n+// EqualValuesf asserts that two objects are equal or convertible to the same types\n // and equal.\n //\n //\ta.EqualValuesf(uint32(123), int32(123), \"error message %s\", \"formatted\")\n@@ -1222,6 +1219,26 @@ func (a *Assertions) NotErrorIsf(err error, target error, msg string, args ...in\n \tNotErrorIsf(a.t, err, target, msg, args...)\n }\n \n+// NotImplements asserts that an object does not implement the specified interface.\n+//\n+//\ta.NotImplements((*MyInterface)(nil), new(MyObject))\n+func (a *Assertions) NotImplements(interfaceObject interface{}, object interface{}, msgAndArgs ...interface{}) {\n+\tif h, ok := a.t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tNotImplements(a.t, interfaceObject, object, msgAndArgs...)\n+}\n+\n+// NotImplementsf asserts that an object does not implement the specified interface.\n+//\n+//\ta.NotImplementsf((*MyInterface)(nil), new(MyObject), \"error message %s\", \"formatted\")\n+func (a *Assertions) NotImplementsf(interfaceObject interface{}, object interface{}, msg string, args ...interface{}) {\n+\tif h, ok := a.t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tNotImplementsf(a.t, interfaceObject, object, msg, args...)\n+}\n+\n // NotNil asserts that the specified object is not nil.\n //\n //\ta.NotNil(err)\n@@ -1310,21 +1327,25 @@ func (a *Assertions) NotSamef(expected interface{}, actual interface{}, msg stri\n \tNotSamef(a.t, expected, actual, msg, args...)\n }\n \n-// NotSubset asserts that the specified list(array, slice...) contains not all\n-// elements given in the specified subset(array, slice...).\n+// NotSubset asserts that the specified list(array, slice...) or map does NOT\n+// contain all elements given in the specified subset list(array, slice...) or\n+// map.\n //\n-//\ta.NotSubset([1, 3, 4], [1, 2], \"But [1, 3, 4] does not contain [1, 2]\")\n+//\ta.NotSubset([1, 3, 4], [1, 2])\n+//\ta.NotSubset({\"x\": 1, \"y\": 2}, {\"z\": 3})\n func (a *Assertions) NotSubset(list interface{}, subset interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := a.t.(tHelper); ok {\n \t\th.Helper()\n \t}\n \tNotSubset(a.t, list, subset, msgAndArgs...)\n }\n \n-// NotSubsetf asserts that the specified list(array, slice...) contains not all\n-// elements given in the specified subset(array, slice...).\n+// NotSubsetf asserts that the specified list(array, slice...) or map does NOT\n+// contain all elements given in the specified subset list(array, slice...) or\n+// map.\n //\n-//\ta.NotSubsetf([1, 3, 4], [1, 2], \"But [1, 3, 4] does not contain [1, 2]\", \"error message %s\", \"formatted\")\n+//\ta.NotSubsetf([1, 3, 4], [1, 2], \"error message %s\", \"formatted\")\n+//\ta.NotSubsetf({\"x\": 1, \"y\": 2}, {\"z\": 3}, \"error message %s\", \"formatted\")\n func (a *Assertions) NotSubsetf(list interface{}, subset interface{}, msg string, args ...interface{}) {\n \tif h, ok := a.t.(tHelper); ok {\n \t\th.Helper()\n@@ -1484,21 +1505,23 @@ func (a *Assertions) Samef(expected interface{}, actual interface{}, msg string,\n \tSamef(a.t, expected, actual, msg, args...)\n }\n \n-// Subset asserts that the specified list(array, slice...) contains all\n-// elements given in the specified subset(array, slice...).\n+// Subset asserts that the specified list(array, slice...) or map contains all\n+// elements given in the specified subset list(array, slice...) or map.\n //\n-//\ta.Subset([1, 2, 3], [1, 2], \"But [1, 2, 3] does contain [1, 2]\")\n+//\ta.Subset([1, 2, 3], [1, 2])\n+//\ta.Subset({\"x\": 1, \"y\": 2}, {\"x\": 1})\n func (a *Assertions) Subset(list interface{}, subset interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := a.t.(tHelper); ok {\n \t\th.Helper()\n \t}\n \tSubset(a.t, list, subset, msgAndArgs...)\n }\n \n-// Subsetf asserts that the specified list(array, slice...) contains all\n-// elements given in the specified subset(array, slice...).\n+// Subsetf asserts that the specified list(array, slice...) or map contains all\n+// elements given in the specified subset list(array, slice...) or map.\n //\n-//\ta.Subsetf([1, 2, 3], [1, 2], \"But [1, 2, 3] does contain [1, 2]\", \"error message %s\", \"formatted\")\n+//\ta.Subsetf([1, 2, 3], [1, 2], \"error message %s\", \"formatted\")\n+//\ta.Subsetf({\"x\": 1, \"y\": 2}, {\"x\": 1}, \"error message %s\", \"formatted\")\n func (a *Assertions) Subsetf(list interface{}, subset interface{}, msg string, args ...interface{}) {\n \tif h, ok := a.t.(tHelper); ok {\n \t\th.Helper()"
    },
    {
      "sha": "f3533d3446b8d6fc505a1dc7011a3e14960b4cb0",
      "filename": "backend/vendor/go.etcd.io/bbolt/bucket.go",
      "status": "modified",
      "additions": 19,
      "deletions": 11,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbucket.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbucket.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fbucket.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -162,12 +162,17 @@ func (b *Bucket) CreateBucket(key []byte) (*Bucket, error) {\n \t\treturn nil, ErrBucketNameRequired\n \t}\n \n+\t// Insert into node.\n+\t// Tip: Use a new variable `newKey` instead of reusing the existing `key` to prevent\n+\t// it from being marked as leaking, and accordingly cannot be allocated on stack.\n+\tnewKey := cloneBytes(key)\n+\n \t// Move cursor to correct position.\n \tc := b.Cursor()\n-\tk, _, flags := c.seek(key)\n+\tk, _, flags := c.seek(newKey)\n \n \t// Return an error if there is an existing key.\n-\tif bytes.Equal(key, k) {\n+\tif bytes.Equal(newKey, k) {\n \t\tif (flags & bucketLeafFlag) != 0 {\n \t\t\treturn nil, ErrBucketExists\n \t\t}\n@@ -182,16 +187,14 @@ func (b *Bucket) CreateBucket(key []byte) (*Bucket, error) {\n \t}\n \tvar value = bucket.write()\n \n-\t// Insert into node.\n-\tkey = cloneBytes(key)\n-\tc.node().put(key, key, value, 0, bucketLeafFlag)\n+\tc.node().put(newKey, newKey, value, 0, bucketLeafFlag)\n \n \t// Since subbuckets are not allowed on inline buckets, we need to\n \t// dereference the inline page, if it exists. This will cause the bucket\n \t// to be treated as a regular, non-inline bucket for the rest of the tx.\n \tb.page = nil\n \n-\treturn b.Bucket(key), nil\n+\treturn b.Bucket(newKey), nil\n }\n \n // CreateBucketIfNotExists creates a new bucket if it doesn't already exist and returns a reference to it.\n@@ -288,18 +291,23 @@ func (b *Bucket) Put(key []byte, value []byte) error {\n \t\treturn ErrValueTooLarge\n \t}\n \n+\t// Insert into node.\n+\t// Tip: Use a new variable `newKey` instead of reusing the existing `key` to prevent\n+\t// it from being marked as leaking, and accordingly cannot be allocated on stack.\n+\tnewKey := cloneBytes(key)\n+\n \t// Move cursor to correct position.\n \tc := b.Cursor()\n-\tk, _, flags := c.seek(key)\n+\tk, _, flags := c.seek(newKey)\n \n \t// Return an error if there is an existing key with a bucket value.\n-\tif bytes.Equal(key, k) && (flags&bucketLeafFlag) != 0 {\n+\tif bytes.Equal(newKey, k) && (flags&bucketLeafFlag) != 0 {\n \t\treturn ErrIncompatibleValue\n \t}\n \n-\t// Insert into node.\n-\tkey = cloneBytes(key)\n-\tc.node().put(key, key, value, 0, 0)\n+\t// gofail: var beforeBucketPut struct{}\n+\n+\tc.node().put(newKey, newKey, value, 0, 0)\n \n \treturn nil\n }"
    },
    {
      "sha": "652aa48b8536612451c9d32a89d88265e948fbcd",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/array_codec.go",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Farray_codec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Farray_codec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Farray_codec.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -15,16 +15,15 @@ import (\n \n // ArrayCodec is the Codec used for bsoncore.Array values.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// ArrayCodec registered.\n+// Deprecated: ArrayCodec will not be directly accessible in Go Driver 2.0.\n type ArrayCodec struct{}\n \n var defaultArrayCodec = NewArrayCodec()\n \n // NewArrayCodec returns an ArrayCodec.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// ArrayCodec registered.\n+// Deprecated: NewArrayCodec will not be available in Go Driver 2.0. See\n+// [ArrayCodec] for more details.\n func NewArrayCodec() *ArrayCodec {\n \treturn &ArrayCodec{}\n }"
    },
    {
      "sha": "0134b5a94bec3dc1abd81b7cb2858c632213c517",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/byte_slice_codec.go",
      "status": "modified",
      "additions": 20,
      "deletions": 5,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fbyte_slice_codec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fbyte_slice_codec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fbyte_slice_codec.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -17,13 +17,28 @@ import (\n \n // ByteSliceCodec is the Codec used for []byte values.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// ByteSliceCodec registered.\n+// Deprecated: ByteSliceCodec will not be directly configurable in Go Driver\n+// 2.0. To configure the byte slice encode and decode behavior, use the\n+// configuration methods on a [go.mongodb.org/mongo-driver/bson.Encoder] or\n+// [go.mongodb.org/mongo-driver/bson.Decoder]. To configure the byte slice\n+// encode and decode behavior for a mongo.Client, use\n+// [go.mongodb.org/mongo-driver/mongo/options.ClientOptions.SetBSONOptions].\n+//\n+// For example, to configure a mongo.Client to encode nil byte slices as empty\n+// BSON binary values, use:\n+//\n+//\topt := options.Client().SetBSONOptions(&options.BSONOptions{\n+//\t    NilByteSliceAsEmpty: true,\n+//\t})\n+//\n+// See the deprecation notice for each field in ByteSliceCodec for the\n+// corresponding settings.\n type ByteSliceCodec struct {\n \t// EncodeNilAsEmpty causes EncodeValue to marshal nil Go byte slices as empty BSON binary values\n \t// instead of BSON null.\n \t//\n-\t// Deprecated: Use bson.Encoder.NilByteSliceAsEmpty instead.\n+\t// Deprecated: Use bson.Encoder.NilByteSliceAsEmpty or options.BSONOptions.NilByteSliceAsEmpty\n+\t// instead.\n \tEncodeNilAsEmpty bool\n }\n \n@@ -38,8 +53,8 @@ var (\n \n // NewByteSliceCodec returns a ByteSliceCodec with options opts.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// ByteSliceCodec registered.\n+// Deprecated: NewByteSliceCodec will not be available in Go Driver 2.0. See\n+// [ByteSliceCodec] for more details.\n func NewByteSliceCodec(opts ...*bsonoptions.ByteSliceCodecOptions) *ByteSliceCodec {\n \tbyteSliceOpt := bsonoptions.MergeByteSliceCodecOptions(opts...)\n \tcodec := ByteSliceCodec{}"
    },
    {
      "sha": "7e08aab35e709c1e38b39a720ea5672e6f3692d5",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/default_value_decoders.go",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fdefault_value_decoders.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fdefault_value_decoders.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fdefault_value_decoders.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -41,7 +41,7 @@ func newDefaultStructCodec() *StructCodec {\n \tif err != nil {\n \t\t// This function is called from the codec registration path, so errors can't be propagated. If there's an error\n \t\t// constructing the StructCodec, we panic to avoid losing it.\n-\t\tpanic(fmt.Errorf(\"error creating default StructCodec: %v\", err))\n+\t\tpanic(fmt.Errorf(\"error creating default StructCodec: %w\", err))\n \t}\n \treturn codec\n }\n@@ -178,7 +178,7 @@ func (dvd DefaultValueDecoders) DDecodeValue(dc DecodeContext, vr bsonrw.ValueRe\n \n \tfor {\n \t\tkey, elemVr, err := dr.ReadElement()\n-\t\tif err == bsonrw.ErrEOD {\n+\t\tif errors.Is(err, bsonrw.ErrEOD) {\n \t\t\tbreak\n \t\t} else if err != nil {\n \t\t\treturn err\n@@ -1379,7 +1379,7 @@ func (dvd DefaultValueDecoders) MapDecodeValue(dc DecodeContext, vr bsonrw.Value\n \tkeyType := val.Type().Key()\n \tfor {\n \t\tkey, vr, err := dr.ReadElement()\n-\t\tif err == bsonrw.ErrEOD {\n+\t\tif errors.Is(err, bsonrw.ErrEOD) {\n \t\t\tbreak\n \t\t}\n \t\tif err != nil {\n@@ -1675,7 +1675,7 @@ func (dvd DefaultValueDecoders) decodeDefault(dc DecodeContext, vr bsonrw.ValueR\n \tidx := 0\n \tfor {\n \t\tvr, err := ar.ReadValue()\n-\t\tif err == bsonrw.ErrEOA {\n+\t\tif errors.Is(err, bsonrw.ErrEOA) {\n \t\t\tbreak\n \t\t}\n \t\tif err != nil {\n@@ -1787,7 +1787,7 @@ func (DefaultValueDecoders) decodeElemsFromDocumentReader(dc DecodeContext, dr b\n \telems := make([]reflect.Value, 0)\n \tfor {\n \t\tkey, vr, err := dr.ReadElement()\n-\t\tif err == bsonrw.ErrEOD {\n+\t\tif errors.Is(err, bsonrw.ErrEOD) {\n \t\t\tbreak\n \t\t}\n \t\tif err != nil {"
    },
    {
      "sha": "4751ae995e7e3fed20527b6ae41ec0be84fe30e8",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/default_value_encoders.go",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fdefault_value_encoders.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fdefault_value_encoders.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fdefault_value_encoders.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -343,7 +343,7 @@ func (dve DefaultValueEncoders) mapEncodeValue(ec EncodeContext, dw bsonrw.Docum\n \t\t}\n \n \t\tcurrEncoder, currVal, lookupErr := dve.lookupElementEncoder(ec, encoder, val.MapIndex(key))\n-\t\tif lookupErr != nil && lookupErr != errInvalidValue {\n+\t\tif lookupErr != nil && !errors.Is(lookupErr, errInvalidValue) {\n \t\t\treturn lookupErr\n \t\t}\n \n@@ -352,7 +352,7 @@ func (dve DefaultValueEncoders) mapEncodeValue(ec EncodeContext, dw bsonrw.Docum\n \t\t\treturn err\n \t\t}\n \n-\t\tif lookupErr == errInvalidValue {\n+\t\tif errors.Is(lookupErr, errInvalidValue) {\n \t\t\terr = vw.WriteNull()\n \t\t\tif err != nil {\n \t\t\t\treturn err\n@@ -418,7 +418,7 @@ func (dve DefaultValueEncoders) ArrayEncodeValue(ec EncodeContext, vw bsonrw.Val\n \n \tfor idx := 0; idx < val.Len(); idx++ {\n \t\tcurrEncoder, currVal, lookupErr := dve.lookupElementEncoder(ec, encoder, val.Index(idx))\n-\t\tif lookupErr != nil && lookupErr != errInvalidValue {\n+\t\tif lookupErr != nil && !errors.Is(lookupErr, errInvalidValue) {\n \t\t\treturn lookupErr\n \t\t}\n \n@@ -427,7 +427,7 @@ func (dve DefaultValueEncoders) ArrayEncodeValue(ec EncodeContext, vw bsonrw.Val\n \t\t\treturn err\n \t\t}\n \n-\t\tif lookupErr == errInvalidValue {\n+\t\tif errors.Is(lookupErr, errInvalidValue) {\n \t\t\terr = vw.WriteNull()\n \t\t\tif err != nil {\n \t\t\t\treturn err\n@@ -487,7 +487,7 @@ func (dve DefaultValueEncoders) SliceEncodeValue(ec EncodeContext, vw bsonrw.Val\n \n \tfor idx := 0; idx < val.Len(); idx++ {\n \t\tcurrEncoder, currVal, lookupErr := dve.lookupElementEncoder(ec, encoder, val.Index(idx))\n-\t\tif lookupErr != nil && lookupErr != errInvalidValue {\n+\t\tif lookupErr != nil && !errors.Is(lookupErr, errInvalidValue) {\n \t\t\treturn lookupErr\n \t\t}\n \n@@ -496,7 +496,7 @@ func (dve DefaultValueEncoders) SliceEncodeValue(ec EncodeContext, vw bsonrw.Val\n \t\t\treturn err\n \t\t}\n \n-\t\tif lookupErr == errInvalidValue {\n+\t\tif errors.Is(lookupErr, errInvalidValue) {\n \t\t\terr = vw.WriteNull()\n \t\t\tif err != nil {\n \t\t\t\treturn err"
    },
    {
      "sha": "098368f0711f13119fded493a0d71dd350807b97",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/empty_interface_codec.go",
      "status": "modified",
      "additions": 19,
      "deletions": 5,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fempty_interface_codec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fempty_interface_codec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fempty_interface_codec.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -17,13 +17,27 @@ import (\n \n // EmptyInterfaceCodec is the Codec used for interface{} values.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// EmptyInterfaceCodec registered.\n+// Deprecated: EmptyInterfaceCodec will not be directly configurable in Go\n+// Driver 2.0. To configure the empty interface encode and decode behavior, use\n+// the configuration methods on a [go.mongodb.org/mongo-driver/bson.Encoder] or\n+// [go.mongodb.org/mongo-driver/bson.Decoder]. To configure the empty interface\n+// encode and decode behavior for a mongo.Client, use\n+// [go.mongodb.org/mongo-driver/mongo/options.ClientOptions.SetBSONOptions].\n+//\n+// For example, to configure a mongo.Client to unmarshal BSON binary field\n+// values as a Go byte slice, use:\n+//\n+//\topt := options.Client().SetBSONOptions(&options.BSONOptions{\n+//\t    BinaryAsSlice: true,\n+//\t})\n+//\n+// See the deprecation notice for each field in EmptyInterfaceCodec for the\n+// corresponding settings.\n type EmptyInterfaceCodec struct {\n \t// DecodeBinaryAsSlice causes DecodeValue to unmarshal BSON binary field values that are the\n \t// \"Generic\" or \"Old\" BSON binary subtype as a Go byte slice instead of a primitive.Binary.\n \t//\n-\t// Deprecated: Use bson.Decoder.BinaryAsSlice instead.\n+\t// Deprecated: Use bson.Decoder.BinaryAsSlice or options.BSONOptions.BinaryAsSlice instead.\n \tDecodeBinaryAsSlice bool\n }\n \n@@ -38,8 +52,8 @@ var (\n \n // NewEmptyInterfaceCodec returns a EmptyInterfaceCodec with options opts.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// EmptyInterfaceCodec registered.\n+// Deprecated: NewEmptyInterfaceCodec will not be available in Go Driver 2.0. See\n+// [EmptyInterfaceCodec] for more details.\n func NewEmptyInterfaceCodec(opts ...*bsonoptions.EmptyInterfaceCodecOptions) *EmptyInterfaceCodec {\n \tinterfaceOpt := bsonoptions.MergeEmptyInterfaceCodecOptions(opts...)\n "
    },
    {
      "sha": "d7e00ffa8d16cefd96bde94d0157d07856b39be2",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/map_codec.go",
      "status": "modified",
      "additions": 27,
      "deletions": 11,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fmap_codec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fmap_codec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fmap_codec.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -8,6 +8,7 @@ package bsoncodec\n \n import (\n \t\"encoding\"\n+\t\"errors\"\n \t\"fmt\"\n \t\"reflect\"\n \t\"strconv\"\n@@ -21,25 +22,40 @@ var defaultMapCodec = NewMapCodec()\n \n // MapCodec is the Codec used for map values.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// MapCodec registered.\n+// Deprecated: MapCodec will not be directly configurable in Go Driver 2.0. To\n+// configure the map encode and decode behavior, use the configuration methods\n+// on a [go.mongodb.org/mongo-driver/bson.Encoder] or\n+// [go.mongodb.org/mongo-driver/bson.Decoder]. To configure the map encode and\n+// decode behavior for a mongo.Client, use\n+// [go.mongodb.org/mongo-driver/mongo/options.ClientOptions.SetBSONOptions].\n+//\n+// For example, to configure a mongo.Client to marshal nil Go maps as empty BSON\n+// documents, use:\n+//\n+//\topt := options.Client().SetBSONOptions(&options.BSONOptions{\n+//\t    NilMapAsEmpty: true,\n+//\t})\n+//\n+// See the deprecation notice for each field in MapCodec for the corresponding\n+// settings.\n type MapCodec struct {\n \t// DecodeZerosMap causes DecodeValue to delete any existing values from Go maps in the destination\n \t// value passed to Decode before unmarshaling BSON documents into them.\n \t//\n-\t// Deprecated: Use bson.Decoder.ZeroMaps instead.\n+\t// Deprecated: Use bson.Decoder.ZeroMaps or options.BSONOptions.ZeroMaps instead.\n \tDecodeZerosMap bool\n \n \t// EncodeNilAsEmpty causes EncodeValue to marshal nil Go maps as empty BSON documents instead of\n \t// BSON null.\n \t//\n-\t// Deprecated: Use bson.Encoder.NilMapAsEmpty instead.\n+\t// Deprecated: Use bson.Encoder.NilMapAsEmpty or options.BSONOptions.NilMapAsEmpty instead.\n \tEncodeNilAsEmpty bool\n \n \t// EncodeKeysWithStringer causes the Encoder to convert Go map keys to BSON document field name\n \t// strings using fmt.Sprintf() instead of the default string conversion logic.\n \t//\n-\t// Deprecated: Use bson.Encoder.StringifyMapKeysWithFmt instead.\n+\t// Deprecated: Use bson.Encoder.StringifyMapKeysWithFmt or\n+\t// options.BSONOptions.StringifyMapKeysWithFmt instead.\n \tEncodeKeysWithStringer bool\n }\n \n@@ -61,8 +77,8 @@ type KeyUnmarshaler interface {\n \n // NewMapCodec returns a MapCodec with options opts.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// MapCodec registered.\n+// Deprecated: NewMapCodec will not be available in Go Driver 2.0. See\n+// [MapCodec] for more details.\n func NewMapCodec(opts ...*bsonoptions.MapCodecOptions) *MapCodec {\n \tmapOpt := bsonoptions.MergeMapCodecOptions(opts...)\n \n@@ -128,7 +144,7 @@ func (mc *MapCodec) mapEncodeValue(ec EncodeContext, dw bsonrw.DocumentWriter, v\n \t\t}\n \n \t\tcurrEncoder, currVal, lookupErr := defaultValueEncoders.lookupElementEncoder(ec, encoder, val.MapIndex(key))\n-\t\tif lookupErr != nil && lookupErr != errInvalidValue {\n+\t\tif lookupErr != nil && !errors.Is(lookupErr, errInvalidValue) {\n \t\t\treturn lookupErr\n \t\t}\n \n@@ -137,7 +153,7 @@ func (mc *MapCodec) mapEncodeValue(ec EncodeContext, dw bsonrw.DocumentWriter, v\n \t\t\treturn err\n \t\t}\n \n-\t\tif lookupErr == errInvalidValue {\n+\t\tif errors.Is(lookupErr, errInvalidValue) {\n \t\t\terr = vw.WriteNull()\n \t\t\tif err != nil {\n \t\t\t\treturn err\n@@ -200,7 +216,7 @@ func (mc *MapCodec) DecodeValue(dc DecodeContext, vr bsonrw.ValueReader, val ref\n \n \tfor {\n \t\tkey, vr, err := dr.ReadElement()\n-\t\tif err == bsonrw.ErrEOD {\n+\t\tif errors.Is(err, bsonrw.ErrEOD) {\n \t\t\tbreak\n \t\t}\n \t\tif err != nil {\n@@ -313,7 +329,7 @@ func (mc *MapCodec) decodeKey(key string, keyType reflect.Type) (reflect.Value,\n \t\t\tif mc.EncodeKeysWithStringer {\n \t\t\t\tparsed, err := strconv.ParseFloat(key, 64)\n \t\t\t\tif err != nil {\n-\t\t\t\t\treturn keyVal, fmt.Errorf(\"Map key is defined to be a decimal type (%v) but got error %v\", keyType.Kind(), err)\n+\t\t\t\t\treturn keyVal, fmt.Errorf(\"Map key is defined to be a decimal type (%v) but got error %w\", keyType.Kind(), err)\n \t\t\t\t}\n \t\t\t\tkeyVal = reflect.ValueOf(parsed)\n \t\t\t\tbreak"
    },
    {
      "sha": "ddfa4a33e180893f44fcf7ce2dcf583334e7fb97",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/pointer_codec.go",
      "status": "modified",
      "additions": 12,
      "deletions": 4,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fpointer_codec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fpointer_codec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fpointer_codec.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -18,17 +18,25 @@ var _ ValueDecoder = &PointerCodec{}\n \n // PointerCodec is the Codec used for pointers.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// PointerCodec registered.\n+// Deprecated: PointerCodec will not be directly accessible in Go Driver 2.0. To\n+// override the default pointer encode and decode behavior, create a new registry\n+// with [go.mongodb.org/mongo-driver/bson.NewRegistry] and register a new\n+// encoder and decoder for pointers.\n+//\n+// For example,\n+//\n+//\treg := bson.NewRegistry()\n+//\treg.RegisterKindEncoder(reflect.Ptr, myPointerEncoder)\n+//\treg.RegisterKindDecoder(reflect.Ptr, myPointerDecoder)\n type PointerCodec struct {\n \tecache typeEncoderCache\n \tdcache typeDecoderCache\n }\n \n // NewPointerCodec returns a PointerCodec that has been initialized.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// PointerCodec registered.\n+// Deprecated: NewPointerCodec will not be available in Go Driver 2.0. See\n+// [PointerCodec] for more details.\n func NewPointerCodec() *PointerCodec {\n \treturn &PointerCodec{}\n }"
    },
    {
      "sha": "14c9fd25646ed9d1d3ddda85c6914b686dc690b3",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/slice_codec.go",
      "status": "modified",
      "additions": 21,
      "deletions": 6,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fslice_codec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fslice_codec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fslice_codec.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -7,6 +7,7 @@\n package bsoncodec\n \n import (\n+\t\"errors\"\n \t\"fmt\"\n \t\"reflect\"\n \n@@ -20,8 +21,22 @@ var defaultSliceCodec = NewSliceCodec()\n \n // SliceCodec is the Codec used for slice values.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// SliceCodec registered.\n+// Deprecated: SliceCodec will not be directly configurable in Go Driver 2.0. To\n+// configure the slice encode and decode behavior, use the configuration methods\n+// on a [go.mongodb.org/mongo-driver/bson.Encoder] or\n+// [go.mongodb.org/mongo-driver/bson.Decoder]. To configure the slice encode and\n+// decode behavior for a mongo.Client, use\n+// [go.mongodb.org/mongo-driver/mongo/options.ClientOptions.SetBSONOptions].\n+//\n+// For example, to configure a mongo.Client to marshal nil Go slices as empty\n+// BSON arrays, use:\n+//\n+//\topt := options.Client().SetBSONOptions(&options.BSONOptions{\n+//\t    NilSliceAsEmpty: true,\n+//\t})\n+//\n+// See the deprecation notice for each field in SliceCodec for the corresponding\n+// settings.\n type SliceCodec struct {\n \t// EncodeNilAsEmpty causes EncodeValue to marshal nil Go slices as empty BSON arrays instead of\n \t// BSON null.\n@@ -32,8 +47,8 @@ type SliceCodec struct {\n \n // NewSliceCodec returns a MapCodec with options opts.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// SliceCodec registered.\n+// Deprecated: NewSliceCodec will not be available in Go Driver 2.0. See\n+// [SliceCodec] for more details.\n func NewSliceCodec(opts ...*bsonoptions.SliceCodecOptions) *SliceCodec {\n \tsliceOpt := bsonoptions.MergeSliceCodecOptions(opts...)\n \n@@ -93,7 +108,7 @@ func (sc SliceCodec) EncodeValue(ec EncodeContext, vw bsonrw.ValueWriter, val re\n \n \tfor idx := 0; idx < val.Len(); idx++ {\n \t\tcurrEncoder, currVal, lookupErr := defaultValueEncoders.lookupElementEncoder(ec, encoder, val.Index(idx))\n-\t\tif lookupErr != nil && lookupErr != errInvalidValue {\n+\t\tif lookupErr != nil && !errors.Is(lookupErr, errInvalidValue) {\n \t\t\treturn lookupErr\n \t\t}\n \n@@ -102,7 +117,7 @@ func (sc SliceCodec) EncodeValue(ec EncodeContext, vw bsonrw.ValueWriter, val re\n \t\t\treturn err\n \t\t}\n \n-\t\tif lookupErr == errInvalidValue {\n+\t\tif errors.Is(lookupErr, errInvalidValue) {\n \t\t\terr = vw.WriteNull()\n \t\t\tif err != nil {\n \t\t\t\treturn err"
    },
    {
      "sha": "a8f885a854f4d43b542375118e3befb5774ef4ab",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/string_codec.go",
      "status": "modified",
      "additions": 12,
      "deletions": 4,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fstring_codec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fstring_codec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fstring_codec.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -17,8 +17,16 @@ import (\n \n // StringCodec is the Codec used for string values.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// StringCodec registered.\n+// Deprecated: StringCodec will not be directly accessible in Go Driver 2.0. To\n+// override the default string encode and decode behavior, create a new registry\n+// with [go.mongodb.org/mongo-driver/bson.NewRegistry] and register a new\n+// encoder and decoder for strings.\n+//\n+// For example,\n+//\n+//\treg := bson.NewRegistry()\n+//\treg.RegisterKindEncoder(reflect.String, myStringEncoder)\n+//\treg.RegisterKindDecoder(reflect.String, myStringDecoder)\n type StringCodec struct {\n \t// DecodeObjectIDAsHex specifies if object IDs should be decoded as their hex representation.\n \t// If false, a string made from the raw object ID bytes will be used. Defaults to true.\n@@ -38,8 +46,8 @@ var (\n \n // NewStringCodec returns a StringCodec with options opts.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// StringCodec registered.\n+// Deprecated: NewStringCodec will not be available in Go Driver 2.0. See\n+// [StringCodec] for more details.\n func NewStringCodec(opts ...*bsonoptions.StringCodecOptions) *StringCodec {\n \tstringOpt := bsonoptions.MergeStringCodecOptions(opts...)\n \treturn &StringCodec{*stringOpt.DecodeObjectIDAsHex}"
    },
    {
      "sha": "f8d9690c139eb11f65cf6603fca6a1a380ea8e39",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/struct_codec.go",
      "status": "modified",
      "additions": 40,
      "deletions": 22,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fstruct_codec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fstruct_codec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fstruct_codec.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -60,16 +60,30 @@ type Zeroer interface {\n \n // StructCodec is the Codec used for struct values.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// StructCodec registered.\n+// Deprecated: StructCodec will not be directly configurable in Go Driver 2.0.\n+// To configure the struct encode and decode behavior, use the configuration\n+// methods on a [go.mongodb.org/mongo-driver/bson.Encoder] or\n+// [go.mongodb.org/mongo-driver/bson.Decoder]. To configure the struct encode\n+// and decode behavior for a mongo.Client, use\n+// [go.mongodb.org/mongo-driver/mongo/options.ClientOptions.SetBSONOptions].\n+//\n+// For example, to configure a mongo.Client to omit zero-value structs when\n+// using the \"omitempty\" struct tag, use:\n+//\n+//\topt := options.Client().SetBSONOptions(&options.BSONOptions{\n+//\t    OmitZeroStruct: true,\n+//\t})\n+//\n+// See the deprecation notice for each field in StructCodec for the corresponding\n+// settings.\n type StructCodec struct {\n \tcache  sync.Map // map[reflect.Type]*structDescription\n \tparser StructTagParser\n \n \t// DecodeZeroStruct causes DecodeValue to delete any existing values from Go structs in the\n \t// destination value passed to Decode before unmarshaling BSON documents into them.\n \t//\n-\t// Deprecated: Use bson.Decoder.ZeroStructs instead.\n+\t// Deprecated: Use bson.Decoder.ZeroStructs or options.BSONOptions.ZeroStructs instead.\n \tDecodeZeroStruct bool\n \n \t// DecodeDeepZeroInline causes DecodeValue to delete any existing values from Go structs in the\n@@ -82,7 +96,7 @@ type StructCodec struct {\n \t// MyStruct{}) as empty and omit it from the marshaled BSON when the \"omitempty\" struct tag\n \t// option is set.\n \t//\n-\t// Deprecated: Use bson.Encoder.OmitZeroStruct instead.\n+\t// Deprecated: Use bson.Encoder.OmitZeroStruct or options.BSONOptions.OmitZeroStruct instead.\n \tEncodeOmitDefaultStruct bool\n \n \t// AllowUnexportedFields allows encoding and decoding values from un-exported struct fields.\n@@ -95,7 +109,8 @@ type StructCodec struct {\n \t// a duplicate field in the marshaled BSON when the \"inline\" struct tag option is set. The\n \t// default value is true.\n \t//\n-\t// Deprecated: Use bson.Encoder.ErrorOnInlineDuplicates instead.\n+\t// Deprecated: Use bson.Encoder.ErrorOnInlineDuplicates or\n+\t// options.BSONOptions.ErrorOnInlineDuplicates instead.\n \tOverwriteDuplicatedInlinedFields bool\n }\n \n@@ -104,8 +119,8 @@ var _ ValueDecoder = &StructCodec{}\n \n // NewStructCodec returns a StructCodec that uses p for struct tag parsing.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// StructCodec registered.\n+// Deprecated: NewStructCodec will not be available in Go Driver 2.0. See\n+// [StructCodec] for more details.\n func NewStructCodec(p StructTagParser, opts ...*bsonoptions.StructCodecOptions) (*StructCodec, error) {\n \tif p == nil {\n \t\treturn nil, errors.New(\"a StructTagParser must be provided to NewStructCodec\")\n@@ -164,11 +179,11 @@ func (sc *StructCodec) EncodeValue(ec EncodeContext, vw bsonrw.ValueWriter, val\n \n \t\tdesc.encoder, rv, err = defaultValueEncoders.lookupElementEncoder(ec, desc.encoder, rv)\n \n-\t\tif err != nil && err != errInvalidValue {\n+\t\tif err != nil && !errors.Is(err, errInvalidValue) {\n \t\t\treturn err\n \t\t}\n \n-\t\tif err == errInvalidValue {\n+\t\tif errors.Is(err, errInvalidValue) {\n \t\t\tif desc.omitEmpty {\n \t\t\t\tcontinue\n \t\t\t}\n@@ -189,17 +204,17 @@ func (sc *StructCodec) EncodeValue(ec EncodeContext, vw bsonrw.ValueWriter, val\n \n \t\tencoder := desc.encoder\n \n-\t\tvar zero bool\n+\t\tvar empty bool\n \t\tif cz, ok := encoder.(CodecZeroer); ok {\n-\t\t\tzero = cz.IsTypeZero(rv.Interface())\n+\t\t\tempty = cz.IsTypeZero(rv.Interface())\n \t\t} else if rv.Kind() == reflect.Interface {\n-\t\t\t// isZero will not treat an interface rv as an interface, so we need to check for the\n-\t\t\t// zero interface separately.\n-\t\t\tzero = rv.IsNil()\n+\t\t\t// isEmpty will not treat an interface rv as an interface, so we need to check for the\n+\t\t\t// nil interface separately.\n+\t\t\tempty = rv.IsNil()\n \t\t} else {\n-\t\t\tzero = isZero(rv, sc.EncodeOmitDefaultStruct || ec.omitZeroStruct)\n+\t\t\tempty = isEmpty(rv, sc.EncodeOmitDefaultStruct || ec.omitZeroStruct)\n \t\t}\n-\t\tif desc.omitEmpty && zero {\n+\t\tif desc.omitEmpty && empty {\n \t\t\tcontinue\n \t\t}\n \n@@ -239,8 +254,8 @@ func (sc *StructCodec) EncodeValue(ec EncodeContext, vw bsonrw.ValueWriter, val\n }\n \n func newDecodeError(key string, original error) error {\n-\tde, ok := original.(*DecodeError)\n-\tif !ok {\n+\tvar de *DecodeError\n+\tif !errors.As(original, &de) {\n \t\treturn &DecodeError{\n \t\t\tkeys:    []string{key},\n \t\t\twrapped: original,\n@@ -308,7 +323,7 @@ func (sc *StructCodec) DecodeValue(dc DecodeContext, vr bsonrw.ValueReader, val\n \n \tfor {\n \t\tname, vr, err := dr.ReadElement()\n-\t\tif err == bsonrw.ErrEOD {\n+\t\tif errors.Is(err, bsonrw.ErrEOD) {\n \t\t\tbreak\n \t\t}\n \t\tif err != nil {\n@@ -391,12 +406,15 @@ func (sc *StructCodec) DecodeValue(dc DecodeContext, vr bsonrw.ValueReader, val\n \treturn nil\n }\n \n-func isZero(v reflect.Value, omitZeroStruct bool) bool {\n+func isEmpty(v reflect.Value, omitZeroStruct bool) bool {\n \tkind := v.Kind()\n \tif (kind != reflect.Ptr || !v.IsNil()) && v.Type().Implements(tZeroer) {\n \t\treturn v.Interface().(Zeroer).IsZero()\n \t}\n-\tif kind == reflect.Struct {\n+\tswitch kind {\n+\tcase reflect.Array, reflect.Map, reflect.Slice, reflect.String:\n+\t\treturn v.Len() == 0\n+\tcase reflect.Struct:\n \t\tif !omitZeroStruct {\n \t\t\treturn false\n \t\t}\n@@ -410,7 +428,7 @@ func isZero(v reflect.Value, omitZeroStruct bool) bool {\n \t\t\tif ff.PkgPath != \"\" && !ff.Anonymous {\n \t\t\t\tcontinue // Private field\n \t\t\t}\n-\t\t\tif !isZero(v.Field(i), omitZeroStruct) {\n+\t\t\tif !isEmpty(v.Field(i), omitZeroStruct) {\n \t\t\t\treturn false\n \t\t\t}\n \t\t}"
    },
    {
      "sha": "22fb762c415102cd8059ec781e6ea265a8c18940",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/time_codec.go",
      "status": "modified",
      "additions": 19,
      "deletions": 5,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Ftime_codec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Ftime_codec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Ftime_codec.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -23,12 +23,26 @@ const (\n \n // TimeCodec is the Codec used for time.Time values.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// TimeCodec registered.\n+// Deprecated: TimeCodec will not be directly configurable in Go Driver 2.0.\n+// To configure the time.Time encode and decode behavior, use the configuration\n+// methods on a [go.mongodb.org/mongo-driver/bson.Encoder] or\n+// [go.mongodb.org/mongo-driver/bson.Decoder]. To configure the time.Time encode\n+// and decode behavior for a mongo.Client, use\n+// [go.mongodb.org/mongo-driver/mongo/options.ClientOptions.SetBSONOptions].\n+//\n+// For example, to configure a mongo.Client to ..., use:\n+//\n+//\topt := options.Client().SetBSONOptions(&options.BSONOptions{\n+//\t    UseLocalTimeZone: true,\n+//\t})\n+//\n+// See the deprecation notice for each field in TimeCodec for the corresponding\n+// settings.\n type TimeCodec struct {\n \t// UseLocalTimeZone specifies if we should decode into the local time zone. Defaults to false.\n \t//\n-\t// Deprecated: Use bson.Decoder.UseLocalTimeZone instead.\n+\t// Deprecated: Use bson.Decoder.UseLocalTimeZone or options.BSONOptions.UseLocalTimeZone\n+\t// instead.\n \tUseLocalTimeZone bool\n }\n \n@@ -42,8 +56,8 @@ var (\n \n // NewTimeCodec returns a TimeCodec with options opts.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// TimeCodec registered.\n+// Deprecated: NewTimeCodec will not be available in Go Driver 2.0. See\n+// [TimeCodec] for more details.\n func NewTimeCodec(opts ...*bsonoptions.TimeCodecOptions) *TimeCodec {\n \ttimeOpt := bsonoptions.MergeTimeCodecOptions(opts...)\n "
    },
    {
      "sha": "85254727695946f2871ff895ee94eee546089175",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/uint_codec.go",
      "status": "modified",
      "additions": 19,
      "deletions": 5,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fuint_codec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fuint_codec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fuint_codec.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -18,13 +18,27 @@ import (\n \n // UIntCodec is the Codec used for uint values.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// UIntCodec registered.\n+// Deprecated: UIntCodec will not be directly configurable in Go Driver 2.0. To\n+// configure the uint encode and decode behavior, use the configuration methods\n+// on a [go.mongodb.org/mongo-driver/bson.Encoder] or\n+// [go.mongodb.org/mongo-driver/bson.Decoder]. To configure the uint encode and\n+// decode behavior for a mongo.Client, use\n+// [go.mongodb.org/mongo-driver/mongo/options.ClientOptions.SetBSONOptions].\n+//\n+// For example, to configure a mongo.Client to marshal Go uint values as the\n+// minimum BSON int size that can represent the value, use:\n+//\n+//\topt := options.Client().SetBSONOptions(&options.BSONOptions{\n+//\t    IntMinSize: true,\n+//\t})\n+//\n+// See the deprecation notice for each field in UIntCodec for the corresponding\n+// settings.\n type UIntCodec struct {\n \t// EncodeToMinSize causes EncodeValue to marshal Go uint values (excluding uint64) as the\n \t// minimum BSON int size (either 32-bit or 64-bit) that can represent the integer value.\n \t//\n-\t// Deprecated: Use bson.Encoder.IntMinSize instead.\n+\t// Deprecated: Use bson.Encoder.IntMinSize or options.BSONOptions.IntMinSize instead.\n \tEncodeToMinSize bool\n }\n \n@@ -38,8 +52,8 @@ var (\n \n // NewUIntCodec returns a UIntCodec with options opts.\n //\n-// Deprecated: Use [go.mongodb.org/mongo-driver/bson.NewRegistry] to get a registry with the\n-// UIntCodec registered.\n+// Deprecated: NewUIntCodec will not be available in Go Driver 2.0. See\n+// [UIntCodec] for more details.\n func NewUIntCodec(opts ...*bsonoptions.UIntCodecOptions) *UIntCodec {\n \tuintOpt := bsonoptions.MergeUIntCodecOptions(opts...)\n "
    },
    {
      "sha": "1e25570b8556350cdea66a0e23f3a0b6905730d4",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsonrw/copier.go",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fcopier.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fcopier.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fcopier.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -7,6 +7,7 @@\n package bsonrw\n \n import (\n+\t\"errors\"\n \t\"fmt\"\n \t\"io\"\n \n@@ -442,7 +443,7 @@ func (c Copier) copyArray(dst ValueWriter, src ValueReader) error {\n \n \tfor {\n \t\tvr, err := ar.ReadValue()\n-\t\tif err == ErrEOA {\n+\t\tif errors.Is(err, ErrEOA) {\n \t\t\tbreak\n \t\t}\n \t\tif err != nil {\n@@ -466,7 +467,7 @@ func (c Copier) copyArray(dst ValueWriter, src ValueReader) error {\n func (c Copier) copyDocumentCore(dw DocumentWriter, dr DocumentReader) error {\n \tfor {\n \t\tkey, vr, err := dr.ReadElement()\n-\t\tif err == ErrEOD {\n+\t\tif errors.Is(err, ErrEOD) {\n \t\t\tbreak\n \t\t}\n \t\tif err != nil {"
    },
    {
      "sha": "bb52a0ec3db4b4b69a5aa9369fdd9f26481a51b3",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsonrw/extjson_parser.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fextjson_parser.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fextjson_parser.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fextjson_parser.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -313,7 +313,7 @@ func (ejp *extJSONParser) readValue(t bsontype.Type) (*extJSONValue, error) {\n \t\t\t\t// convert hex to bytes\n \t\t\t\tbytes, err := hex.DecodeString(uuidNoHyphens)\n \t\t\t\tif err != nil {\n-\t\t\t\t\treturn nil, fmt.Errorf(\"$uuid value does not follow RFC 4122 format regarding hex bytes: %v\", err)\n+\t\t\t\t\treturn nil, fmt.Errorf(\"$uuid value does not follow RFC 4122 format regarding hex bytes: %w\", err)\n \t\t\t\t}\n \n \t\t\t\tejp.advanceState()"
    },
    {
      "sha": "59ddfc4485830ac68ecd0b0cf74a6a7b5fffbb1f",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsonrw/extjson_reader.go",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fextjson_reader.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fextjson_reader.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fextjson_reader.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -7,6 +7,7 @@\n package bsonrw\n \n import (\n+\t\"errors\"\n \t\"fmt\"\n \t\"io\"\n \t\"sync\"\n@@ -613,7 +614,7 @@ func (ejvr *extJSONValueReader) ReadElement() (string, ValueReader, error) {\n \tname, t, err := ejvr.p.readKey()\n \n \tif err != nil {\n-\t\tif err == ErrEOD {\n+\t\tif errors.Is(err, ErrEOD) {\n \t\t\tif ejvr.stack[ejvr.frame].mode == mCodeWithScope {\n \t\t\t\t_, err := ejvr.p.peekType()\n \t\t\t\tif err != nil {\n@@ -640,7 +641,7 @@ func (ejvr *extJSONValueReader) ReadValue() (ValueReader, error) {\n \n \tt, err := ejvr.p.peekType()\n \tif err != nil {\n-\t\tif err == ErrEOA {\n+\t\tif errors.Is(err, ErrEOA) {\n \t\t\tejvr.pop()\n \t\t}\n "
    },
    {
      "sha": "43f3e4f383aaf6250f3e0349b88dce41127d8596",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsonrw/json_scanner.go",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fjson_scanner.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fjson_scanner.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fjson_scanner.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -58,7 +58,7 @@ func (js *jsonScanner) nextToken() (*jsonToken, error) {\n \t\tc, err = js.readNextByte()\n \t}\n \n-\tif err == io.EOF {\n+\tif errors.Is(err, io.EOF) {\n \t\treturn &jsonToken{t: jttEOF}, nil\n \t} else if err != nil {\n \t\treturn nil, err\n@@ -198,7 +198,7 @@ func (js *jsonScanner) scanString() (*jsonToken, error) {\n \tfor {\n \t\tc, err = js.readNextByte()\n \t\tif err != nil {\n-\t\t\tif err == io.EOF {\n+\t\t\tif errors.Is(err, io.EOF) {\n \t\t\t\treturn nil, errors.New(\"end of input in JSON string\")\n \t\t\t}\n \t\t\treturn nil, err\n@@ -209,7 +209,7 @@ func (js *jsonScanner) scanString() (*jsonToken, error) {\n \t\tcase '\\\\':\n \t\t\tc, err = js.readNextByte()\n \t\t\tif err != nil {\n-\t\t\t\tif err == io.EOF {\n+\t\t\t\tif errors.Is(err, io.EOF) {\n \t\t\t\t\treturn nil, errors.New(\"end of input in JSON string\")\n \t\t\t\t}\n \t\t\t\treturn nil, err\n@@ -248,7 +248,7 @@ func (js *jsonScanner) scanString() (*jsonToken, error) {\n \t\t\t\tif utf16.IsSurrogate(rn) {\n \t\t\t\t\tc, err = js.readNextByte()\n \t\t\t\t\tif err != nil {\n-\t\t\t\t\t\tif err == io.EOF {\n+\t\t\t\t\t\tif errors.Is(err, io.EOF) {\n \t\t\t\t\t\t\treturn nil, errors.New(\"end of input in JSON string\")\n \t\t\t\t\t\t}\n \t\t\t\t\t\treturn nil, err\n@@ -264,7 +264,7 @@ func (js *jsonScanner) scanString() (*jsonToken, error) {\n \n \t\t\t\t\tc, err = js.readNextByte()\n \t\t\t\t\tif err != nil {\n-\t\t\t\t\t\tif err == io.EOF {\n+\t\t\t\t\t\tif errors.Is(err, io.EOF) {\n \t\t\t\t\t\t\treturn nil, errors.New(\"end of input in JSON string\")\n \t\t\t\t\t\t}\n \t\t\t\t\t\treturn nil, err\n@@ -325,17 +325,17 @@ func (js *jsonScanner) scanLiteral(first byte) (*jsonToken, error) {\n \n \tc5, err := js.readNextByte()\n \n-\tif bytes.Equal([]byte(\"true\"), lit) && (isValueTerminator(c5) || err == io.EOF) {\n+\tif bytes.Equal([]byte(\"true\"), lit) && (isValueTerminator(c5) || errors.Is(err, io.EOF)) {\n \t\tjs.pos = int(math.Max(0, float64(js.pos-1)))\n \t\treturn &jsonToken{t: jttBool, v: true, p: p}, nil\n-\t} else if bytes.Equal([]byte(\"null\"), lit) && (isValueTerminator(c5) || err == io.EOF) {\n+\t} else if bytes.Equal([]byte(\"null\"), lit) && (isValueTerminator(c5) || errors.Is(err, io.EOF)) {\n \t\tjs.pos = int(math.Max(0, float64(js.pos-1)))\n \t\treturn &jsonToken{t: jttNull, v: nil, p: p}, nil\n \t} else if bytes.Equal([]byte(\"fals\"), lit) {\n \t\tif c5 == 'e' {\n \t\t\tc5, err = js.readNextByte()\n \n-\t\t\tif isValueTerminator(c5) || err == io.EOF {\n+\t\t\tif isValueTerminator(c5) || errors.Is(err, io.EOF) {\n \t\t\t\tjs.pos = int(math.Max(0, float64(js.pos-1)))\n \t\t\t\treturn &jsonToken{t: jttBool, v: false, p: p}, nil\n \t\t\t}\n@@ -384,7 +384,7 @@ func (js *jsonScanner) scanNumber(first byte) (*jsonToken, error) {\n \tfor {\n \t\tc, err = js.readNextByte()\n \n-\t\tif err != nil && err != io.EOF {\n+\t\tif err != nil && !errors.Is(err, io.EOF) {\n \t\t\treturn nil, err\n \t\t}\n \n@@ -413,7 +413,7 @@ func (js *jsonScanner) scanNumber(first byte) (*jsonToken, error) {\n \t\t\tcase '}', ']', ',':\n \t\t\t\ts = nssDone\n \t\t\tdefault:\n-\t\t\t\tif isWhiteSpace(c) || err == io.EOF {\n+\t\t\t\tif isWhiteSpace(c) || errors.Is(err, io.EOF) {\n \t\t\t\t\ts = nssDone\n \t\t\t\t} else {\n \t\t\t\t\ts = nssInvalid\n@@ -430,7 +430,7 @@ func (js *jsonScanner) scanNumber(first byte) (*jsonToken, error) {\n \t\t\tcase '}', ']', ',':\n \t\t\t\ts = nssDone\n \t\t\tdefault:\n-\t\t\t\tif isWhiteSpace(c) || err == io.EOF {\n+\t\t\t\tif isWhiteSpace(c) || errors.Is(err, io.EOF) {\n \t\t\t\t\ts = nssDone\n \t\t\t\t} else if isDigit(c) {\n \t\t\t\t\ts = nssSawIntegerDigits\n@@ -455,7 +455,7 @@ func (js *jsonScanner) scanNumber(first byte) (*jsonToken, error) {\n \t\t\tcase '}', ']', ',':\n \t\t\t\ts = nssDone\n \t\t\tdefault:\n-\t\t\t\tif isWhiteSpace(c) || err == io.EOF {\n+\t\t\t\tif isWhiteSpace(c) || errors.Is(err, io.EOF) {\n \t\t\t\t\ts = nssDone\n \t\t\t\t} else if isDigit(c) {\n \t\t\t\t\ts = nssSawFractionDigits\n@@ -490,7 +490,7 @@ func (js *jsonScanner) scanNumber(first byte) (*jsonToken, error) {\n \t\t\tcase '}', ']', ',':\n \t\t\t\ts = nssDone\n \t\t\tdefault:\n-\t\t\t\tif isWhiteSpace(c) || err == io.EOF {\n+\t\t\t\tif isWhiteSpace(c) || errors.Is(err, io.EOF) {\n \t\t\t\t\ts = nssDone\n \t\t\t\t} else if isDigit(c) {\n \t\t\t\t\ts = nssSawExponentDigits"
    },
    {
      "sha": "af6098475e9de3eee222b2c327b5ed95bd246840",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/doc.go",
      "status": "modified",
      "additions": 42,
      "deletions": 47,
      "changes": 89,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fdoc.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -6,9 +6,9 @@\n \n // Package bson is a library for reading, writing, and manipulating BSON. BSON is a binary serialization format used to\n // store documents and make remote procedure calls in MongoDB. The BSON specification is located at https://bsonspec.org.\n-// The BSON library handles marshalling and unmarshalling of values through a configurable codec system. For a description\n-// of the codec system and examples of registering custom codecs, see the bsoncodec package. For additional information and\n-// usage examples, check out the [Work with BSON] page in the Go Driver docs site.\n+// The BSON library handles marshaling and unmarshaling of values through a configurable codec system. For a description\n+// of the codec system and examples of registering custom codecs, see the bsoncodec package. For additional information\n+// and usage examples, check out the [Work with BSON] page in the Go Driver docs site.\n //\n // # Raw BSON\n //\n@@ -38,7 +38,7 @@\n //\tbson.D{{\"foo\", \"bar\"}, {\"hello\", \"world\"}, {\"pi\", 3.14159}}\n //\tbson.M{\"foo\": \"bar\", \"hello\": \"world\", \"pi\": 3.14159}\n //\n-// When decoding BSON to a D or M, the following type mappings apply when unmarshalling:\n+// When decoding BSON to a D or M, the following type mappings apply when unmarshaling:\n //\n //  1. BSON int32 unmarshals to an int32.\n //  2. BSON int64 unmarshals to an int64.\n@@ -62,83 +62,78 @@\n //  20. BSON DBPointer unmarshals to a primitive.DBPointer.\n //  21. BSON symbol unmarshals to a primitive.Symbol.\n //\n-// The above mappings also apply when marshalling a D or M to BSON. Some other useful marshalling mappings are:\n+// The above mappings also apply when marshaling a D or M to BSON. Some other useful marshaling mappings are:\n //\n //  1. time.Time marshals to a BSON datetime.\n //  2. int8, int16, and int32 marshal to a BSON int32.\n //  3. int marshals to a BSON int32 if the value is between math.MinInt32 and math.MaxInt32, inclusive, and a BSON int64\n //     otherwise.\n-//  4. int64 marshals to BSON int64.\n+//  4. int64 marshals to BSON int64 (unless [Encoder.IntMinSize] is set).\n //  5. uint8 and uint16 marshal to a BSON int32.\n-//  6. uint, uint32, and uint64 marshal to a BSON int32 if the value is between math.MinInt32 and math.MaxInt32,\n-//     inclusive, and BSON int64 otherwise.\n-//  7. BSON null and undefined values will unmarshal into the zero value of a field (e.g. unmarshalling a BSON null or\n+//  6. uint, uint32, and uint64 marshal to a BSON int64 (unless [Encoder.IntMinSize] is set).\n+//  7. BSON null and undefined values will unmarshal into the zero value of a field (e.g. unmarshaling a BSON null or\n //     undefined value into a string will yield the empty string.).\n //\n // # Structs\n //\n-// Structs can be marshalled/unmarshalled to/from BSON or Extended JSON. When transforming structs to/from BSON or Extended\n+// Structs can be marshaled/unmarshaled to/from BSON or Extended JSON. When transforming structs to/from BSON or Extended\n // JSON, the following rules apply:\n //\n-//  1. Only exported fields in structs will be marshalled or unmarshalled.\n+//  1. Only exported fields in structs will be marshaled or unmarshaled.\n //\n-//  2. When marshalling a struct, each field will be lowercased to generate the key for the corresponding BSON element.\n+//  2. When marshaling a struct, each field will be lowercased to generate the key for the corresponding BSON element.\n //     For example, a struct field named \"Foo\" will generate key \"foo\". This can be overridden via a struct tag (e.g.\n //     `bson:\"fooField\"` to generate key \"fooField\" instead).\n //\n-//  3. An embedded struct field is marshalled as a subdocument. The key will be the lowercased name of the field's type.\n+//  3. An embedded struct field is marshaled as a subdocument. The key will be the lowercased name of the field's type.\n //\n-//  4. A pointer field is marshalled as the underlying type if the pointer is non-nil. If the pointer is nil, it is\n-//     marshalled as a BSON null value.\n+//  4. A pointer field is marshaled as the underlying type if the pointer is non-nil. If the pointer is nil, it is\n+//     marshaled as a BSON null value.\n //\n-//  5. When unmarshalling, a field of type interface{} will follow the D/M type mappings listed above. BSON documents\n-//     unmarshalled into an interface{} field will be unmarshalled as a D.\n+//  5. When unmarshaling, a field of type interface{} will follow the D/M type mappings listed above. BSON documents\n+//     unmarshaled into an interface{} field will be unmarshaled as a D.\n //\n // The encoding of each struct field can be customized by the \"bson\" struct tag.\n //\n // This tag behavior is configurable, and different struct tag behavior can be configured by initializing a new\n-// bsoncodec.StructCodec with the desired tag parser and registering that StructCodec onto the Registry. By default, JSON tags\n-// are not honored, but that can be enabled by creating a StructCodec with JSONFallbackStructTagParser, like below:\n+// bsoncodec.StructCodec with the desired tag parser and registering that StructCodec onto the Registry. By default, JSON\n+// tags are not honored, but that can be enabled by creating a StructCodec with JSONFallbackStructTagParser, like below:\n //\n // Example:\n //\n //\tstructcodec, _ := bsoncodec.NewStructCodec(bsoncodec.JSONFallbackStructTagParser)\n //\n // The bson tag gives the name of the field, possibly followed by a comma-separated list of options.\n-// The name may be empty in order to specify options without overriding the default field name. The following options can be used\n-// to configure behavior:\n-//\n-//  1. omitempty: If the omitempty struct tag is specified on a field, the field will not be marshalled if it is set to\n-//     the zero value. Fields with language primitive types such as integers, booleans, and strings are considered empty if\n-//     their value is equal to the zero value for the type (i.e. 0 for integers, false for booleans, and \"\" for strings).\n-//     Slices, maps, and arrays are considered empty if they are of length zero. Interfaces and pointers are considered\n-//     empty if their value is nil. By default, structs are only considered empty if the struct type implements the\n-//     bsoncodec.Zeroer interface and the IsZero method returns true. Struct fields whose types do not implement Zeroer are\n-//     never considered empty and will be marshalled as embedded documents.\n+// The name may be empty in order to specify options without overriding the default field name. The following options can\n+// be used to configure behavior:\n+//\n+//  1. omitempty: If the omitempty struct tag is specified on a field, the field will be omitted from the marshaling if\n+//     the field has an empty value, defined as false, 0, a nil pointer, a nil interface value, and any empty array,\n+//     slice, map, or string.\n //     NOTE: It is recommended that this tag be used for all slice and map fields.\n //\n //  2. minsize: If the minsize struct tag is specified on a field of type int64, uint, uint32, or uint64 and the value of\n-//     the field can fit in a signed int32, the field will be serialized as a BSON int32 rather than a BSON int64. For other\n-//     types, this tag is ignored.\n+//     the field can fit in a signed int32, the field will be serialized as a BSON int32 rather than a BSON int64. For\n+//     other types, this tag is ignored.\n //\n-//  3. truncate: If the truncate struct tag is specified on a field with a non-float numeric type, BSON doubles unmarshalled\n-//     into that field will be truncated at the decimal point. For example, if 3.14 is unmarshalled into a field of type int,\n-//     it will be unmarshalled as 3. If this tag is not specified, the decoder will throw an error if the value cannot be\n-//     decoded without losing precision. For float64 or non-numeric types, this tag is ignored.\n+//  3. truncate: If the truncate struct tag is specified on a field with a non-float numeric type, BSON doubles\n+//     unmarshaled into that field will be truncated at the decimal point. For example, if 3.14 is unmarshaled into a\n+//     field of type int, it will be unmarshaled as 3. If this tag is not specified, the decoder will throw an error if\n+//     the value cannot be decoded without losing precision. For float64 or non-numeric types, this tag is ignored.\n //\n //  4. inline: If the inline struct tag is specified for a struct or map field, the field will be \"flattened\" when\n-//     marshalling and \"un-flattened\" when unmarshalling. This means that all of the fields in that struct/map will be\n-//     pulled up one level and will become top-level fields rather than being fields in a nested document. For example, if a\n-//     map field named \"Map\" with value map[string]interface{}{\"foo\": \"bar\"} is inlined, the resulting document will be\n-//     {\"foo\": \"bar\"} instead of {\"map\": {\"foo\": \"bar\"}}. There can only be one inlined map field in a struct. If there are\n-//     duplicated fields in the resulting document when an inlined struct is marshalled, the inlined field will be overwritten.\n-//     If there are duplicated fields in the resulting document when an inlined map is marshalled, an error will be returned.\n-//     This tag can be used with fields that are pointers to structs. If an inlined pointer field is nil, it will not be\n-//     marshalled. For fields that are not maps or structs, this tag is ignored.\n-//\n-// # Marshalling and Unmarshalling\n-//\n-// Manually marshalling and unmarshalling can be done with the Marshal and Unmarshal family of functions.\n+//     marshaling and \"un-flattened\" when unmarshaling. This means that all of the fields in that struct/map will be\n+//     pulled up one level and will become top-level fields rather than being fields in a nested document. For example,\n+//     if a map field named \"Map\" with value map[string]interface{}{\"foo\": \"bar\"} is inlined, the resulting document will\n+//     be {\"foo\": \"bar\"} instead of {\"map\": {\"foo\": \"bar\"}}. There can only be one inlined map field in a struct. If\n+//     there are duplicated fields in the resulting document when an inlined struct is marshaled, the inlined field will\n+//     be overwritten. If there are duplicated fields in the resulting document when an inlined map is marshaled, an\n+//     error will be returned. This tag can be used with fields that are pointers to structs. If an inlined pointer field\n+//     is nil, it will not be marshaled. For fields that are not maps or structs, this tag is ignored.\n+//\n+// # Marshaling and Unmarshaling\n+//\n+// Manually marshaling and unmarshaling can be done with the Marshal and Unmarshal family of functions.\n //\n // [Work with BSON]: https://www.mongodb.com/docs/drivers/go/current/fundamentals/bson/\n package bson"
    },
    {
      "sha": "08c39514bea20a7b33dac0802344253a592646dc",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/primitive/decimal.go",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fdecimal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fdecimal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fdecimal.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -164,9 +164,6 @@ func (d Decimal128) BigInt() (*big.Int, int, error) {\n \n \t// Would be handled by the logic below, but that's trivial and common.\n \tif high == 0 && low == 0 && exp == 0 {\n-\t\tif posSign {\n-\t\t\treturn new(big.Int), 0, nil\n-\t\t}\n \t\treturn new(big.Int), 0, nil\n \t}\n "
    },
    {
      "sha": "c130e3ff195a06a1687a9960f27b06ae0e7332bb",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/primitive/objectid.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fobjectid.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fobjectid.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fobjectid.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -183,7 +183,7 @@ func processUniqueBytes() [5]byte {\n \tvar b [5]byte\n \t_, err := io.ReadFull(rand.Reader, b[:])\n \tif err != nil {\n-\t\tpanic(fmt.Errorf(\"cannot initialize objectid package with crypto.rand.Reader: %v\", err))\n+\t\tpanic(fmt.Errorf(\"cannot initialize objectid package with crypto.rand.Reader: %w\", err))\n \t}\n \n \treturn b\n@@ -193,7 +193,7 @@ func readRandomUint32() uint32 {\n \tvar b [4]byte\n \t_, err := io.ReadFull(rand.Reader, b[:])\n \tif err != nil {\n-\t\tpanic(fmt.Errorf(\"cannot initialize objectid package with crypto.rand.Reader: %v\", err))\n+\t\tpanic(fmt.Errorf(\"cannot initialize objectid package with crypto.rand.Reader: %w\", err))\n \t}\n \n \treturn (uint32(b[0]) << 0) | (uint32(b[1]) << 8) | (uint32(b[2]) << 16) | (uint32(b[3]) << 24)"
    },
    {
      "sha": "cc2c7a4e6cd90b155a0c319bbb5d91abb48dad8e",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/event/monitoring.go",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fevent%2Fmonitoring.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fevent%2Fmonitoring.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fevent%2Fmonitoring.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -120,8 +120,9 @@ type PoolEvent struct {\n \tReason       string              `json:\"reason\"`\n \t// ServiceID is only set if the Type is PoolCleared and the server is deployed behind a load balancer. This field\n \t// can be used to distinguish between individual servers in a load balanced deployment.\n-\tServiceID *primitive.ObjectID `json:\"serviceId\"`\n-\tError     error               `json:\"error\"`\n+\tServiceID    *primitive.ObjectID `json:\"serviceId\"`\n+\tInterruption bool                `json:\"interruptInUseConnections\"`\n+\tError        error               `json:\"error\"`\n }\n \n // PoolMonitor is a function that allows the user to gain access to events occurring in the pool"
    },
    {
      "sha": "20a6d43a0d64bd495c0af62855add40a78418506",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/internal/csfle/csfle.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Fcsfle%2Fcsfle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Fcsfle%2Fcsfle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Fcsfle%2Fcsfle.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -7,6 +7,7 @@\n package csfle\n \n import (\n+\t\"errors\"\n \t\"fmt\"\n \n \t\"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n@@ -23,7 +24,7 @@ func GetEncryptedStateCollectionName(efBSON bsoncore.Document, dataCollectionNam\n \tfieldName := stateCollection + \"Collection\"\n \tval, err := efBSON.LookupErr(fieldName)\n \tif err != nil {\n-\t\tif err != bsoncore.ErrElementNotFound {\n+\t\tif !errors.Is(err, bsoncore.ErrElementNotFound) {\n \t\t\treturn \"\", err\n \t\t}\n \t\t// Return default name."
    },
    {
      "sha": "2250286e4a0b42e91e8a18122f84e38cfba91386",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/internal/logger/logger.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Flogger%2Flogger.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Flogger%2Flogger.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Flogger%2Flogger.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -183,7 +183,7 @@ func selectLogSink(sink LogSink) (LogSink, *os.File, error) {\n \tif path != \"\" {\n \t\tlogFile, err := os.OpenFile(path, os.O_APPEND|os.O_CREATE|os.O_RDWR, 0666)\n \t\tif err != nil {\n-\t\t\treturn nil, nil, fmt.Errorf(\"unable to open log file: %v\", err)\n+\t\t\treturn nil, nil, fmt.Errorf(\"unable to open log file: %w\", err)\n \t\t}\n \n \t\treturn NewIOSink(logFile), logFile, nil"
    },
    {
      "sha": "3fdb67b9a2d9330b2f14f00d5182492307bb488c",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/bulk_write.go",
      "status": "modified",
      "additions": 9,
      "deletions": 8,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fbulk_write.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fbulk_write.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fbulk_write.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -8,6 +8,7 @@ package mongo\n \n import (\n \t\"context\"\n+\t\"errors\"\n \n \t\"go.mongodb.org/mongo-driver/bson/bsoncodec\"\n \t\"go.mongodb.org/mongo-driver/bson/primitive\"\n@@ -71,7 +72,7 @@ func (bw *bulkWrite) execute(ctx context.Context) error {\n \n \t\tbwErr.WriteErrors = append(bwErr.WriteErrors, batchErr.WriteErrors...)\n \n-\t\tcommandErrorOccurred := err != nil && err != driver.ErrUnacknowledgedWrite\n+\t\tcommandErrorOccurred := err != nil && !errors.Is(err, driver.ErrUnacknowledgedWrite)\n \t\twriteErrorOccurred := len(batchErr.WriteErrors) > 0 || batchErr.WriteConcernError != nil\n \t\tif !continueOnError && (commandErrorOccurred || writeErrorOccurred) {\n \t\t\tif err != nil {\n@@ -108,8 +109,8 @@ func (bw *bulkWrite) runBatch(ctx context.Context, batch bulkWriteBatch) (BulkWr\n \tcase *InsertOneModel:\n \t\tres, err := bw.runInsert(ctx, batch)\n \t\tif err != nil {\n-\t\t\twriteErr, ok := err.(driver.WriteCommandError)\n-\t\t\tif !ok {\n+\t\t\tvar writeErr driver.WriteCommandError\n+\t\t\tif !errors.As(err, &writeErr) {\n \t\t\t\treturn BulkWriteResult{}, batchErr, err\n \t\t\t}\n \t\t\twriteErrors = writeErr.WriteErrors\n@@ -120,8 +121,8 @@ func (bw *bulkWrite) runBatch(ctx context.Context, batch bulkWriteBatch) (BulkWr\n \tcase *DeleteOneModel, *DeleteManyModel:\n \t\tres, err := bw.runDelete(ctx, batch)\n \t\tif err != nil {\n-\t\t\twriteErr, ok := err.(driver.WriteCommandError)\n-\t\t\tif !ok {\n+\t\t\tvar writeErr driver.WriteCommandError\n+\t\t\tif !errors.As(err, &writeErr) {\n \t\t\t\treturn BulkWriteResult{}, batchErr, err\n \t\t\t}\n \t\t\twriteErrors = writeErr.WriteErrors\n@@ -132,8 +133,8 @@ func (bw *bulkWrite) runBatch(ctx context.Context, batch bulkWriteBatch) (BulkWr\n \tcase *ReplaceOneModel, *UpdateOneModel, *UpdateManyModel:\n \t\tres, err := bw.runUpdate(ctx, batch)\n \t\tif err != nil {\n-\t\t\twriteErr, ok := err.(driver.WriteCommandError)\n-\t\t\tif !ok {\n+\t\t\tvar writeErr driver.WriteCommandError\n+\t\t\tif !errors.As(err, &writeErr) {\n \t\t\t\treturn BulkWriteResult{}, batchErr, err\n \t\t\t}\n \t\t\twriteErrors = writeErr.WriteErrors\n@@ -170,7 +171,7 @@ func (bw *bulkWrite) runInsert(ctx context.Context, batch bulkWriteBatch) (opera\n \t\tif err != nil {\n \t\t\treturn operation.InsertResult{}, err\n \t\t}\n-\t\tdoc, _, err = ensureID(doc, primitive.NewObjectID(), bw.collection.bsonOpts, bw.collection.registry)\n+\t\tdoc, _, err = ensureID(doc, primitive.NilObjectID, bw.collection.bsonOpts, bw.collection.registry)\n \t\tif err != nil {\n \t\t\treturn operation.InsertResult{}, err\n \t\t}"
    },
    {
      "sha": "c4c2fb2590f8fd5aee138d4a720c9d275a90acd4",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/change_stream.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -689,8 +689,8 @@ func (cs *ChangeStream) loopNext(ctx context.Context, nonBlocking bool) {\n }\n \n func (cs *ChangeStream) isResumableError() bool {\n-\tcommandErr, ok := cs.err.(CommandError)\n-\tif !ok || commandErr.HasErrorLabel(networkErrorLabel) {\n+\tvar commandErr CommandError\n+\tif !errors.As(cs.err, &commandErr) || commandErr.HasErrorLabel(networkErrorLabel) {\n \t\t// All non-server errors or network errors are resumable.\n \t\treturn true\n \t}"
    },
    {
      "sha": "280749c7dd67e6cef5679017ee701c46f27ca922",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/client.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -555,7 +555,7 @@ func (c *Client) newMongoCrypt(opts *options.AutoEncryptionOptions) (*mongocrypt\n \n \tkmsProviders, err := marshal(opts.KmsProviders, c.bsonOpts, c.registry)\n \tif err != nil {\n-\t\treturn nil, fmt.Errorf(\"error creating KMS providers document: %v\", err)\n+\t\treturn nil, fmt.Errorf(\"error creating KMS providers document: %w\", err)\n \t}\n \n \t// Set the crypt_shared library override path from the \"cryptSharedLibPath\" extra option if one"
    },
    {
      "sha": "b51f57b473f1d885236e4d0f5e4b55f386b24fc2",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/client_encryption.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient_encryption.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient_encryption.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient_encryption.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -46,7 +46,7 @@ func NewClientEncryption(keyVaultClient *Client, opts ...*options.ClientEncrypti\n \n \tkmsProviders, err := marshal(ceo.KmsProviders, nil, nil)\n \tif err != nil {\n-\t\treturn nil, fmt.Errorf(\"error creating KMS providers map: %v\", err)\n+\t\treturn nil, fmt.Errorf(\"error creating KMS providers map: %w\", err)\n \t}\n \n \tmc, err := mongocrypt.NewMongoCrypt(mcopts.MongoCrypt()."
    },
    {
      "sha": "c7b2a8a113a5e443122d5d926e96a727736b0410",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/collection.go",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcollection.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcollection.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcollection.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -256,7 +256,7 @@ func (coll *Collection) insert(ctx context.Context, documents []interface{},\n \t\tif err != nil {\n \t\t\treturn nil, err\n \t\t}\n-\t\tbsoncoreDoc, id, err := ensureID(bsoncoreDoc, primitive.NewObjectID(), coll.bsonOpts, coll.registry)\n+\t\tbsoncoreDoc, id, err := ensureID(bsoncoreDoc, primitive.NilObjectID, coll.bsonOpts, coll.registry)\n \t\tif err != nil {\n \t\t\treturn nil, err\n \t\t}\n@@ -313,8 +313,8 @@ func (coll *Collection) insert(ctx context.Context, documents []interface{},\n \top = op.Retry(retry)\n \n \terr = op.Execute(ctx)\n-\twce, ok := err.(driver.WriteCommandError)\n-\tif !ok {\n+\tvar wce driver.WriteCommandError\n+\tif !errors.As(err, &wce) {\n \t\treturn result, err\n \t}\n \n@@ -388,8 +388,8 @@ func (coll *Collection) InsertMany(ctx context.Context, documents []interface{},\n \t}\n \n \timResult := &InsertManyResult{InsertedIDs: result}\n-\twriteException, ok := err.(WriteException)\n-\tif !ok {\n+\tvar writeException WriteException\n+\tif !errors.As(err, &writeException) {\n \t\treturn imResult, err\n \t}\n \n@@ -1806,7 +1806,7 @@ func (coll *Collection) Drop(ctx context.Context) error {\n func (coll *Collection) dropEncryptedCollection(ctx context.Context, ef interface{}) error {\n \tefBSON, err := marshal(ef, coll.bsonOpts, coll.registry)\n \tif err != nil {\n-\t\treturn fmt.Errorf(\"error transforming document: %v\", err)\n+\t\treturn fmt.Errorf(\"error transforming document: %w\", err)\n \t}\n \n \t// Drop the two encryption-related, associated collections: `escCollection` and `ecocCollection`."
    },
    {
      "sha": "c77d1109f49237948ef9b6773b6936125ae4f430",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/cursor.go",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcursor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcursor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcursor.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -160,13 +160,13 @@ func (c *Cursor) next(ctx context.Context, nonBlocking bool) bool {\n \t\tctx = context.Background()\n \t}\n \tdoc, err := c.batch.Next()\n-\tswitch err {\n-\tcase nil:\n+\tswitch {\n+\tcase err == nil:\n \t\t// Consume the next document in the current batch.\n \t\tc.batchLength--\n \t\tc.Current = bson.Raw(doc)\n \t\treturn true\n-\tcase io.EOF: // Need to do a getMore\n+\tcase errors.Is(err, io.EOF): // Need to do a getMore\n \tdefault:\n \t\tc.err = err\n \t\treturn false\n@@ -204,12 +204,12 @@ func (c *Cursor) next(ctx context.Context, nonBlocking bool) bool {\n \t\tc.batch = c.bc.Batch()\n \t\tc.batchLength = c.batch.DocumentCount()\n \t\tdoc, err = c.batch.Next()\n-\t\tswitch err {\n-\t\tcase nil:\n+\t\tswitch {\n+\t\tcase err == nil:\n \t\t\tc.batchLength--\n \t\t\tc.Current = bson.Raw(doc)\n \t\t\treturn true\n-\t\tcase io.EOF: // Empty batch so we continue\n+\t\tcase errors.Is(err, io.EOF): // Empty batch so we continue\n \t\tdefault:\n \t\t\tc.err = err\n \t\t\treturn false"
    },
    {
      "sha": "c5cda9e5bd337cd8aa7a9d14deae8cf2d97ede74",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/database.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdatabase.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdatabase.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdatabase.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -566,7 +566,7 @@ func (db *Database) getEncryptedFieldsFromServer(ctx context.Context, collection\n \t}\n \tcollSpec := collSpecs[0]\n \trawValue, err := collSpec.Options.LookupErr(\"encryptedFields\")\n-\tif err == bsoncore.ErrElementNotFound {\n+\tif errors.Is(err, bsoncore.ErrElementNotFound) {\n \t\treturn nil, nil\n \t} else if err != nil {\n \t\treturn nil, err\n@@ -602,7 +602,7 @@ func (db *Database) getEncryptedFieldsFromMap(collectionName string) interface{}\n func (db *Database) createCollectionWithEncryptedFields(ctx context.Context, name string, ef interface{}, opts ...*options.CreateCollectionOptions) error {\n \tefBSON, err := marshal(ef, db.bsonOpts, db.registry)\n \tif err != nil {\n-\t\treturn fmt.Errorf(\"error transforming document: %v\", err)\n+\t\treturn fmt.Errorf(\"error transforming document: %w\", err)\n \t}\n \n \t// Check the wire version to ensure server is 7.0.0 or newer.\n@@ -662,7 +662,7 @@ func (db *Database) createCollectionWithEncryptedFields(ctx context.Context, nam\n \n \t// Create an index on the __safeContent__ field in the collection @collectionName.\n \tif _, err := db.Collection(name).Indexes().CreateOne(ctx, IndexModel{Keys: bson.D{{\"__safeContent__\", 1}}}); err != nil {\n-\t\treturn fmt.Errorf(\"error creating safeContent index: %v\", err)\n+\t\treturn fmt.Errorf(\"error creating safeContent index: %w\", err)\n \t}\n \n \treturn nil"
    },
    {
      "sha": "176f0fb53a86d7d265f8c2dd07fda9ef0247c5ea",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/description/server_selector.go",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdescription%2Fserver_selector.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdescription%2Fserver_selector.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdescription%2Fserver_selector.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -182,7 +182,17 @@ func (writeServerSelector) SelectServer(t Topology, candidates []Server) ([]Serv\n \tcase Single, LoadBalanced:\n \t\treturn candidates, nil\n \tdefault:\n-\t\tresult := []Server{}\n+\t\t// Determine the capacity of the results slice.\n+\t\tselected := 0\n+\t\tfor _, candidate := range candidates {\n+\t\t\tswitch candidate.Kind {\n+\t\t\tcase Mongos, RSPrimary, Standalone:\n+\t\t\t\tselected++\n+\t\t\t}\n+\t\t}\n+\n+\t\t// Append candidates to the results slice.\n+\t\tresult := make([]Server, 0, selected)\n \t\tfor _, candidate := range candidates {\n \t\t\tswitch candidate.Kind {\n \t\t\tcase Mongos, RSPrimary, Standalone:"
    },
    {
      "sha": "d92c9ca9bd70b65e7de3f8fc4483a21cb9637c2f",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/errors.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Ferrors.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Ferrors.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Ferrors.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -52,7 +52,7 @@ func replaceErrors(err error) error {\n \t\treturn nil\n \t}\n \n-\tif err == topology.ErrTopologyClosed {\n+\tif errors.Is(err, topology.ErrTopologyClosed) {\n \t\treturn ErrClientDisconnected\n \t}\n \tif de, ok := err.(driver.Error); ok {\n@@ -630,7 +630,7 @@ const (\n // WriteConcernError will be returned over WriteErrors if both are present.\n func processWriteError(err error) (returnResult, error) {\n \tswitch {\n-\tcase err == driver.ErrUnacknowledgedWrite:\n+\tcase errors.Is(err, driver.ErrUnacknowledgedWrite):\n \t\treturn rrAll, ErrUnacknowledgedWrite\n \tcase err != nil:\n \t\tswitch tt := err.(type) {"
    },
    {
      "sha": "b231d1dd770b13df00c575d72347e2b8cb9bd3f3",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/gridfs/bucket.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fbucket.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fbucket.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fbucket.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -429,7 +429,7 @@ func (b *Bucket) openDownloadStream(filter interface{}, opts ...*options.FindOpt\n \t// in the File type. After parsing it, use RawValue.Unmarshal to ensure File.ID is set to the appropriate value.\n \tvar foundFile File\n \tif err = cursor.Decode(&foundFile); err != nil {\n-\t\treturn nil, fmt.Errorf(\"error decoding files collection document: %v\", err)\n+\t\treturn nil, fmt.Errorf(\"error decoding files collection document: %w\", err)\n \t}\n \n \tif foundFile.Length == 0 {\n@@ -594,7 +594,7 @@ func (b *Bucket) createIndexes(ctx context.Context) error {\n \tdocRes := cloned.FindOne(ctx, bson.D{}, options.FindOne().SetProjection(bson.D{{\"_id\", 1}}))\n \n \t_, err = docRes.Raw()\n-\tif err != mongo.ErrNoDocuments {\n+\tif !errors.Is(err, mongo.ErrNoDocuments) {\n \t\t// nil, or error that occurred during the FindOne operation\n \t\treturn err\n \t}"
    },
    {
      "sha": "7c75813f54746bf479e32ca1c17a933a3b2d7a24",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/gridfs/download_stream.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fdownload_stream.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fdownload_stream.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fdownload_stream.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -160,7 +160,7 @@ func (ds *DownloadStream) Read(p []byte) (int, error) {\n \t\t\t// Buffer is empty and can load in data from new chunk.\n \t\t\terr = ds.fillBuffer(ctx)\n \t\t\tif err != nil {\n-\t\t\t\tif err == errNoMoreChunks {\n+\t\t\t\tif errors.Is(err, errNoMoreChunks) {\n \t\t\t\t\tif bytesCopied == 0 {\n \t\t\t\t\t\tds.done = true\n \t\t\t\t\t\treturn 0, io.EOF\n@@ -203,7 +203,7 @@ func (ds *DownloadStream) Skip(skip int64) (int64, error) {\n \t\t\t// Buffer is empty and can load in data from new chunk.\n \t\t\terr = ds.fillBuffer(ctx)\n \t\t\tif err != nil {\n-\t\t\t\tif err == errNoMoreChunks {\n+\t\t\t\tif errors.Is(err, errNoMoreChunks) {\n \t\t\t\t\treturn skipped, nil\n \t\t\t\t}\n \t\t\t\treturn skipped, err"
    },
    {
      "sha": "ec8e817c7305158e7c054e0fc11b34d456158e0f",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/mongo.go",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fmongo.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fmongo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fmongo.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -177,8 +177,11 @@ func marshal(\n }\n \n // ensureID inserts the given ObjectID as an element named \"_id\" at the\n-// beginning of the given BSON document if there is not an \"_id\" already. If\n-// there is already an element named \"_id\", the document is not modified. It\n+// beginning of the given BSON document if there is not an \"_id\" already.\n+// If the given ObjectID is primitive.NilObjectID, a new object ID will be\n+// generated with time.Now().\n+//\n+// If there is already an element named \"_id\", the document is not modified. It\n // returns the resulting document and the decoded Go value of the \"_id\" element.\n func ensureID(\n \tdoc bsoncore.Document,\n@@ -219,6 +222,9 @@ func ensureID(\n \tconst extraSpace = 17\n \tdoc = make(bsoncore.Document, 0, len(olddoc)+extraSpace)\n \t_, doc = bsoncore.ReserveLength(doc)\n+\tif oid.IsZero() {\n+\t\toid = primitive.NewObjectID()\n+\t}\n \tdoc = bsoncore.AppendObjectIDElement(doc, \"_id\", oid)\n \n \t// Remove and re-write the BSON document length header."
    },
    {
      "sha": "db56745919fa4383448fc4475724d4d1807550f9",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/options/clientoptions.go",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fclientoptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fclientoptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fclientoptions.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -237,7 +237,6 @@ type ClientOptions struct {\n \tZstdLevel                *int\n \n \terr error\n-\turi string\n \tcs  *connstring.ConnString\n \n \t// AuthenticateToAnything skips server type checks when deciding if authentication is possible.\n@@ -338,7 +337,10 @@ func (c *ClientOptions) validate() error {\n // GetURI returns the original URI used to configure the ClientOptions instance. If ApplyURI was not called during\n // construction, this returns \"\".\n func (c *ClientOptions) GetURI() string {\n-\treturn c.uri\n+\tif c.cs == nil {\n+\t\treturn \"\"\n+\t}\n+\treturn c.cs.Original\n }\n \n // ApplyURI parses the given URI and sets options accordingly. The URI can contain host names, IPv4/IPv6 literals, or\n@@ -360,13 +362,12 @@ func (c *ClientOptions) ApplyURI(uri string) *ClientOptions {\n \t\treturn c\n \t}\n \n-\tc.uri = uri\n \tcs, err := connstring.ParseAndValidate(uri)\n \tif err != nil {\n \t\tc.err = err\n \t\treturn c\n \t}\n-\tc.cs = &cs\n+\tc.cs = cs\n \n \tif cs.AppName != \"\" {\n \t\tc.AppName = &cs.AppName\n@@ -1134,9 +1135,6 @@ func MergeClientOptions(opts ...*ClientOptions) *ClientOptions {\n \t\tif opt.err != nil {\n \t\t\tc.err = opt.err\n \t\t}\n-\t\tif opt.uri != \"\" {\n-\t\t\tc.uri = opt.uri\n-\t\t}\n \t\tif opt.cs != nil {\n \t\t\tc.cs = opt.cs\n \t\t}"
    },
    {
      "sha": "13c18479af5cf187dd3c6e14cb21d78f9eb4878b",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/version/version.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fversion%2Fversion.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fversion%2Fversion.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fversion%2Fversion.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -8,4 +8,4 @@\n package version // import \"go.mongodb.org/mongo-driver/version\"\n \n // Driver is the current version of the driver.\n-var Driver = \"v1.13.1\"\n+var Driver = \"v1.14.0\""
    },
    {
      "sha": "2a84b53a645ececf329ed50644b1a5f5c2addc0e",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/auth/sasl.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fsasl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fsasl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fsasl.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -102,7 +102,7 @@ func (sc *saslConversation) Finish(ctx context.Context, cfg *Config, firstRespon\n \tvar saslResp saslResponse\n \terr := bson.Unmarshal(firstResponse, &saslResp)\n \tif err != nil {\n-\t\tfullErr := fmt.Errorf(\"unmarshal error: %v\", err)\n+\t\tfullErr := fmt.Errorf(\"unmarshal error: %w\", err)\n \t\treturn newError(fullErr, sc.mechanism)\n \t}\n \n@@ -146,7 +146,7 @@ func (sc *saslConversation) Finish(ctx context.Context, cfg *Config, firstRespon\n \n \t\terr = bson.Unmarshal(rdr, &saslResp)\n \t\tif err != nil {\n-\t\t\tfullErr := fmt.Errorf(\"unmarshal error: %v\", err)\n+\t\t\tfullErr := fmt.Errorf(\"unmarshal error: %w\", err)\n \t\t\treturn newError(fullErr, sc.mechanism)\n \t\t}\n \t}"
    },
    {
      "sha": "c1238cd6a9dd02f175c8d1ffd03e4c48d23ce828",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/auth/scram.go",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fscram.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fscram.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fscram.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -14,7 +14,6 @@ package auth\n \n import (\n \t\"context\"\n-\t\"fmt\"\n \n \t\"github.com/xdg-go/scram\"\n \t\"github.com/xdg-go/stringprep\"\n@@ -53,7 +52,7 @@ func newScramSHA1Authenticator(cred *Cred) (Authenticator, error) {\n func newScramSHA256Authenticator(cred *Cred) (Authenticator, error) {\n \tpassprep, err := stringprep.SASLprep.Prepare(cred.Password)\n \tif err != nil {\n-\t\treturn nil, newAuthError(fmt.Sprintf(\"error SASLprepping password '%s'\", cred.Password), err)\n+\t\treturn nil, newAuthError(\"error SASLprepping password\", err)\n \t}\n \tclient, err := scram.SHA256.NewClientUnprepped(cred.Username, passprep, \"\")\n \tif err != nil {"
    },
    {
      "sha": "23b4a6539dc0d381674876a2aec53832718dd548",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/batch_cursor.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fbatch_cursor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fbatch_cursor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fbatch_cursor.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -79,7 +79,7 @@ type CursorResponse struct {\n func NewCursorResponse(info ResponseInfo) (CursorResponse, error) {\n \tresponse := info.ServerResponse\n \tcur, err := response.LookupErr(\"cursor\")\n-\tif err == bsoncore.ErrElementNotFound {\n+\tif errors.Is(err, bsoncore.ErrElementNotFound) {\n \t\treturn CursorResponse{}, ErrNoCursor\n \t}\n \tif err != nil {\n@@ -142,7 +142,7 @@ func NewCursorResponse(info ResponseInfo) (CursorResponse, error) {\n \t\t\treturn CursorResponse{}, fmt.Errorf(\"expected Connection used to establish a cursor to implement PinnedConnection, but got %T\", info.Connection)\n \t\t}\n \t\tif err := refConn.PinToCursor(); err != nil {\n-\t\t\treturn CursorResponse{}, fmt.Errorf(\"error incrementing connection reference count when creating a cursor: %v\", err)\n+\t\t\treturn CursorResponse{}, fmt.Errorf(\"error incrementing connection reference count when creating a cursor: %w\", err)\n \t\t}\n \t\tcurresp.Connection = refConn\n \t}"
    },
    {
      "sha": "52068b8ea83b10fefde745aac34cff86f6aa5326",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/connstring/connstring.go",
      "status": "modified",
      "additions": 635,
      "deletions": 632,
      "changes": 1267,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fconnstring%2Fconnstring.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fconnstring%2Fconnstring.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fconnstring%2Fconnstring.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -73,29 +73,28 @@ var random = randutil.NewLockedRand()\n \n // ParseAndValidate parses the provided URI into a ConnString object.\n // It check that all values are valid.\n-func ParseAndValidate(s string) (ConnString, error) {\n-\tp := parser{dnsResolver: dns.DefaultResolver}\n-\terr := p.parse(s)\n+func ParseAndValidate(s string) (*ConnString, error) {\n+\tconnStr, err := Parse(s)\n \tif err != nil {\n-\t\treturn p.ConnString, fmt.Errorf(\"error parsing uri: %w\", err)\n+\t\treturn nil, err\n \t}\n-\terr = p.ConnString.Validate()\n+\terr = connStr.Validate()\n \tif err != nil {\n-\t\treturn p.ConnString, fmt.Errorf(\"error validating uri: %w\", err)\n+\t\treturn nil, fmt.Errorf(\"error validating uri: %w\", err)\n \t}\n-\treturn p.ConnString, nil\n+\treturn connStr, nil\n }\n \n // Parse parses the provided URI into a ConnString object\n // but does not check that all values are valid. Use `ConnString.Validate()`\n // to run the validation checks separately.\n-func Parse(s string) (ConnString, error) {\n+func Parse(s string) (*ConnString, error) {\n \tp := parser{dnsResolver: dns.DefaultResolver}\n-\terr := p.parse(s)\n+\tconnStr, err := p.parse(s)\n \tif err != nil {\n-\t\terr = fmt.Errorf(\"error parsing uri: %w\", err)\n+\t\treturn nil, fmt.Errorf(\"error parsing uri: %w\", err)\n \t}\n-\treturn p.ConnString, err\n+\treturn connStr, err\n }\n \n // ConnString represents a connection string to mongodb.\n@@ -134,6 +133,7 @@ type ConnString struct {\n \tMaxConnectingSet                   bool\n \tPassword                           string\n \tPasswordSet                        bool\n+\tRawHosts                           []string\n \tReadConcernLevel                   string\n \tReadPreference                     string\n \tReadPreferenceTagSets              []map[string]string\n@@ -202,296 +202,105 @@ func (u *ConnString) HasAuthParameters() bool {\n \n // Validate checks that the Auth and SSL parameters are valid values.\n func (u *ConnString) Validate() error {\n-\tp := parser{\n-\t\tdnsResolver: dns.DefaultResolver,\n-\t\tConnString:  *u,\n-\t}\n-\treturn p.validate()\n-}\n-\n-// ConnectMode informs the driver on how to connect\n-// to the server.\n-type ConnectMode uint8\n-\n-var _ fmt.Stringer = ConnectMode(0)\n-\n-// ConnectMode constants.\n-const (\n-\tAutoConnect ConnectMode = iota\n-\tSingleConnect\n-)\n-\n-// String implements the fmt.Stringer interface.\n-func (c ConnectMode) String() string {\n-\tswitch c {\n-\tcase AutoConnect:\n-\t\treturn \"automatic\"\n-\tcase SingleConnect:\n-\t\treturn \"direct\"\n-\tdefault:\n-\t\treturn \"unknown\"\n-\t}\n-}\n-\n-// Scheme constants\n-const (\n-\tSchemeMongoDB    = \"mongodb\"\n-\tSchemeMongoDBSRV = \"mongodb+srv\"\n-)\n-\n-type parser struct {\n-\tConnString\n-\n-\tdnsResolver *dns.Resolver\n-\ttlsssl      *bool // used to determine if tls and ssl options are both specified and set differently.\n-}\n-\n-func (p *parser) parse(original string) error {\n-\tp.Original = original\n-\turi := original\n-\n \tvar err error\n-\tif strings.HasPrefix(uri, SchemeMongoDBSRV+\"://\") {\n-\t\tp.Scheme = SchemeMongoDBSRV\n-\t\t// remove the scheme\n-\t\turi = uri[len(SchemeMongoDBSRV)+3:]\n-\t} else if strings.HasPrefix(uri, SchemeMongoDB+\"://\") {\n-\t\tp.Scheme = SchemeMongoDB\n-\t\t// remove the scheme\n-\t\turi = uri[len(SchemeMongoDB)+3:]\n-\t} else {\n-\t\treturn errors.New(`scheme must be \"mongodb\" or \"mongodb+srv\"`)\n-\t}\n-\n-\tif idx := strings.Index(uri, \"@\"); idx != -1 {\n-\t\tuserInfo := uri[:idx]\n-\t\turi = uri[idx+1:]\n-\n-\t\tusername := userInfo\n-\t\tvar password string\n-\n-\t\tif idx := strings.Index(userInfo, \":\"); idx != -1 {\n-\t\t\tusername = userInfo[:idx]\n-\t\t\tpassword = userInfo[idx+1:]\n-\t\t\tp.PasswordSet = true\n-\t\t}\n-\n-\t\t// Validate and process the username.\n-\t\tif strings.Contains(username, \"/\") {\n-\t\t\treturn fmt.Errorf(\"unescaped slash in username\")\n-\t\t}\n-\t\tp.Username, err = url.PathUnescape(username)\n-\t\tif err != nil {\n-\t\t\treturn fmt.Errorf(\"invalid username: %w\", err)\n-\t\t}\n-\t\tp.UsernameSet = true\n-\n-\t\t// Validate and process the password.\n-\t\tif strings.Contains(password, \":\") {\n-\t\t\treturn fmt.Errorf(\"unescaped colon in password\")\n-\t\t}\n-\t\tif strings.Contains(password, \"/\") {\n-\t\t\treturn fmt.Errorf(\"unescaped slash in password\")\n-\t\t}\n-\t\tp.Password, err = url.PathUnescape(password)\n-\t\tif err != nil {\n-\t\t\treturn fmt.Errorf(\"invalid password: %w\", err)\n-\t\t}\n-\t}\n-\n-\t// fetch the hosts field\n-\thosts := uri\n-\tif idx := strings.IndexAny(uri, \"/?@\"); idx != -1 {\n-\t\tif uri[idx] == '@' {\n-\t\t\treturn fmt.Errorf(\"unescaped @ sign in user info\")\n-\t\t}\n-\t\tif uri[idx] == '?' {\n-\t\t\treturn fmt.Errorf(\"must have a / before the query ?\")\n-\t\t}\n-\t\thosts = uri[:idx]\n-\t}\n \n-\tparsedHosts := strings.Split(hosts, \",\")\n-\turi = uri[len(hosts):]\n-\textractedDatabase, err := extractDatabaseFromURI(uri)\n-\tif err != nil {\n+\tif err = u.validateAuth(); err != nil {\n \t\treturn err\n \t}\n \n-\turi = extractedDatabase.uri\n-\tp.Database = extractedDatabase.db\n-\n-\t// grab connection arguments from URI\n-\tconnectionArgsFromQueryString, err := extractQueryArgsFromURI(uri)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\n-\t// grab connection arguments from TXT record and enable SSL if \"mongodb+srv://\"\n-\tvar connectionArgsFromTXT []string\n-\tif p.Scheme == SchemeMongoDBSRV {\n-\t\tconnectionArgsFromTXT, err = p.dnsResolver.GetConnectionArgsFromTXT(hosts)\n-\t\tif err != nil {\n-\t\t\treturn err\n-\t\t}\n-\n-\t\t// SSL is enabled by default for SRV, but can be manually disabled with \"ssl=false\".\n-\t\tp.SSL = true\n-\t\tp.SSLSet = true\n-\t}\n-\n-\t// add connection arguments from URI and TXT records to connstring\n-\tconnectionArgPairs := make([]string, 0, len(connectionArgsFromTXT)+len(connectionArgsFromQueryString))\n-\tconnectionArgPairs = append(connectionArgPairs, connectionArgsFromTXT...)\n-\tconnectionArgPairs = append(connectionArgPairs, connectionArgsFromQueryString...)\n-\n-\tfor _, pair := range connectionArgPairs {\n-\t\terr := p.addOption(pair)\n-\t\tif err != nil {\n-\t\t\treturn err\n-\t\t}\n-\t}\n-\n-\t// do SRV lookup if \"mongodb+srv://\"\n-\tif p.Scheme == SchemeMongoDBSRV {\n-\t\tparsedHosts, err = p.dnsResolver.ParseHosts(hosts, p.SRVServiceName, true)\n-\t\tif err != nil {\n-\t\t\treturn err\n-\t\t}\n-\n-\t\t// If p.SRVMaxHosts is non-zero and is less than the number of hosts, randomly\n-\t\t// select SRVMaxHosts hosts from parsedHosts.\n-\t\tif p.SRVMaxHosts > 0 && p.SRVMaxHosts < len(parsedHosts) {\n-\t\t\trandom.Shuffle(len(parsedHosts), func(i, j int) {\n-\t\t\t\tparsedHosts[i], parsedHosts[j] = parsedHosts[j], parsedHosts[i]\n-\t\t\t})\n-\t\t\tparsedHosts = parsedHosts[:p.SRVMaxHosts]\n-\t\t}\n-\t}\n-\n-\tfor _, host := range parsedHosts {\n-\t\terr = p.addHost(host)\n-\t\tif err != nil {\n-\t\t\treturn fmt.Errorf(\"invalid host %q: %w\", host, err)\n-\t\t}\n-\t}\n-\tif len(p.Hosts) == 0 {\n-\t\treturn fmt.Errorf(\"must have at least 1 host\")\n-\t}\n-\n-\terr = p.setDefaultAuthParams(extractedDatabase.db)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\n-\t// If WTimeout was set from manual options passed in, set WTImeoutSet to true.\n-\tif p.WTimeoutSetFromOption {\n-\t\tp.WTimeoutSet = true\n-\t}\n-\n-\treturn nil\n-}\n-\n-func (p *parser) validate() error {\n-\tvar err error\n-\n-\terr = p.validateAuth()\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\n-\tif err = p.validateSSL(); err != nil {\n+\tif err = u.validateSSL(); err != nil {\n \t\treturn err\n \t}\n \n \t// Check for invalid write concern (i.e. w=0 and j=true)\n-\tif p.WNumberSet && p.WNumber == 0 && p.JSet && p.J {\n+\tif u.WNumberSet && u.WNumber == 0 && u.JSet && u.J {\n \t\treturn writeconcern.ErrInconsistent\n \t}\n \n \t// Check for invalid use of direct connections.\n-\tif (p.ConnectSet && p.Connect == SingleConnect) || (p.DirectConnectionSet && p.DirectConnection) {\n-\t\tif len(p.Hosts) > 1 {\n+\tif (u.ConnectSet && u.Connect == SingleConnect) ||\n+\t\t(u.DirectConnectionSet && u.DirectConnection) {\n+\t\tif len(u.Hosts) > 1 {\n \t\t\treturn errors.New(\"a direct connection cannot be made if multiple hosts are specified\")\n \t\t}\n-\t\tif p.Scheme == SchemeMongoDBSRV {\n+\t\tif u.Scheme == SchemeMongoDBSRV {\n \t\t\treturn errors.New(\"a direct connection cannot be made if an SRV URI is used\")\n \t\t}\n-\t\tif p.LoadBalancedSet && p.LoadBalanced {\n+\t\tif u.LoadBalancedSet && u.LoadBalanced {\n \t\t\treturn ErrLoadBalancedWithDirectConnection\n \t\t}\n \t}\n \n \t// Validation for load-balanced mode.\n-\tif p.LoadBalancedSet && p.LoadBalanced {\n-\t\tif len(p.Hosts) > 1 {\n+\tif u.LoadBalancedSet && u.LoadBalanced {\n+\t\tif len(u.Hosts) > 1 {\n \t\t\treturn ErrLoadBalancedWithMultipleHosts\n \t\t}\n-\t\tif p.ReplicaSet != \"\" {\n+\t\tif u.ReplicaSet != \"\" {\n \t\t\treturn ErrLoadBalancedWithReplicaSet\n \t\t}\n \t}\n \n \t// Check for invalid use of SRVMaxHosts.\n-\tif p.SRVMaxHosts > 0 {\n-\t\tif p.ReplicaSet != \"\" {\n+\tif u.SRVMaxHosts > 0 {\n+\t\tif u.ReplicaSet != \"\" {\n \t\t\treturn ErrSRVMaxHostsWithReplicaSet\n \t\t}\n-\t\tif p.LoadBalanced {\n+\t\tif u.LoadBalanced {\n \t\t\treturn ErrSRVMaxHostsWithLoadBalanced\n \t\t}\n \t}\n \n \treturn nil\n }\n \n-func (p *parser) setDefaultAuthParams(dbName string) error {\n+func (u *ConnString) setDefaultAuthParams(dbName string) error {\n \t// We do this check here rather than in validateAuth because this function is called as part of parsing and sets\n \t// the value of AuthSource if authentication is enabled.\n-\tif p.AuthSourceSet && p.AuthSource == \"\" {\n+\tif u.AuthSourceSet && u.AuthSource == \"\" {\n \t\treturn errors.New(\"authSource must be non-empty when supplied in a URI\")\n \t}\n \n-\tswitch strings.ToLower(p.AuthMechanism) {\n+\tswitch strings.ToLower(u.AuthMechanism) {\n \tcase \"plain\":\n-\t\tif p.AuthSource == \"\" {\n-\t\t\tp.AuthSource = dbName\n-\t\t\tif p.AuthSource == \"\" {\n-\t\t\t\tp.AuthSource = \"$external\"\n+\t\tif u.AuthSource == \"\" {\n+\t\t\tu.AuthSource = dbName\n+\t\t\tif u.AuthSource == \"\" {\n+\t\t\t\tu.AuthSource = \"$external\"\n \t\t\t}\n \t\t}\n \tcase \"gssapi\":\n-\t\tif p.AuthMechanismProperties == nil {\n-\t\t\tp.AuthMechanismProperties = map[string]string{\n+\t\tif u.AuthMechanismProperties == nil {\n+\t\t\tu.AuthMechanismProperties = map[string]string{\n \t\t\t\t\"SERVICE_NAME\": \"mongodb\",\n \t\t\t}\n-\t\t} else if v, ok := p.AuthMechanismProperties[\"SERVICE_NAME\"]; !ok || v == \"\" {\n-\t\t\tp.AuthMechanismProperties[\"SERVICE_NAME\"] = \"mongodb\"\n+\t\t} else if v, ok := u.AuthMechanismProperties[\"SERVICE_NAME\"]; !ok || v == \"\" {\n+\t\t\tu.AuthMechanismProperties[\"SERVICE_NAME\"] = \"mongodb\"\n \t\t}\n \t\tfallthrough\n \tcase \"mongodb-aws\", \"mongodb-x509\":\n-\t\tif p.AuthSource == \"\" {\n-\t\t\tp.AuthSource = \"$external\"\n-\t\t} else if p.AuthSource != \"$external\" {\n+\t\tif u.AuthSource == \"\" {\n+\t\t\tu.AuthSource = \"$external\"\n+\t\t} else if u.AuthSource != \"$external\" {\n \t\t\treturn fmt.Errorf(\"auth source must be $external\")\n \t\t}\n \tcase \"mongodb-cr\":\n \t\tfallthrough\n \tcase \"scram-sha-1\":\n \t\tfallthrough\n \tcase \"scram-sha-256\":\n-\t\tif p.AuthSource == \"\" {\n-\t\t\tp.AuthSource = dbName\n-\t\t\tif p.AuthSource == \"\" {\n-\t\t\t\tp.AuthSource = \"admin\"\n+\t\tif u.AuthSource == \"\" {\n+\t\t\tu.AuthSource = dbName\n+\t\t\tif u.AuthSource == \"\" {\n+\t\t\t\tu.AuthSource = \"admin\"\n \t\t\t}\n \t\t}\n \tcase \"\":\n \t\t// Only set auth source if there is a request for authentication via non-empty credentials.\n-\t\tif p.AuthSource == \"\" && (p.AuthMechanismProperties != nil || p.Username != \"\" || p.PasswordSet) {\n-\t\t\tp.AuthSource = dbName\n-\t\t\tif p.AuthSource == \"\" {\n-\t\t\t\tp.AuthSource = \"admin\"\n+\t\tif u.AuthSource == \"\" && (u.AuthMechanismProperties != nil || u.Username != \"\" || u.PasswordSet) {\n+\t\t\tu.AuthSource = dbName\n+\t\t\tif u.AuthSource == \"\" {\n+\t\t\t\tu.AuthSource = \"admin\"\n \t\t\t}\n \t\t}\n \tdefault:\n@@ -500,83 +309,473 @@ func (p *parser) setDefaultAuthParams(dbName string) error {\n \treturn nil\n }\n \n-func (p *parser) validateAuth() error {\n-\tswitch strings.ToLower(p.AuthMechanism) {\n+func (u *ConnString) addOptions(connectionArgPairs []string) error {\n+\tvar tlsssl *bool // used to determine if tls and ssl options are both specified and set differently.\n+\tfor _, pair := range connectionArgPairs {\n+\t\tkv := strings.SplitN(pair, \"=\", 2)\n+\t\tif len(kv) != 2 || kv[0] == \"\" {\n+\t\t\treturn fmt.Errorf(\"invalid option\")\n+\t\t}\n+\n+\t\tkey, err := url.QueryUnescape(kv[0])\n+\t\tif err != nil {\n+\t\t\treturn fmt.Errorf(\"invalid option key %q: %w\", kv[0], err)\n+\t\t}\n+\n+\t\tvalue, err := url.QueryUnescape(kv[1])\n+\t\tif err != nil {\n+\t\t\treturn fmt.Errorf(\"invalid option value %q: %w\", kv[1], err)\n+\t\t}\n+\n+\t\tlowerKey := strings.ToLower(key)\n+\t\tswitch lowerKey {\n+\t\tcase \"appname\":\n+\t\t\tu.AppName = value\n+\t\tcase \"authmechanism\":\n+\t\t\tu.AuthMechanism = value\n+\t\tcase \"authmechanismproperties\":\n+\t\t\tu.AuthMechanismProperties = make(map[string]string)\n+\t\t\tpairs := strings.Split(value, \",\")\n+\t\t\tfor _, pair := range pairs {\n+\t\t\t\tkv := strings.SplitN(pair, \":\", 2)\n+\t\t\t\tif len(kv) != 2 || kv[0] == \"\" {\n+\t\t\t\t\treturn fmt.Errorf(\"invalid authMechanism property\")\n+\t\t\t\t}\n+\t\t\t\tu.AuthMechanismProperties[kv[0]] = kv[1]\n+\t\t\t}\n+\t\t\tu.AuthMechanismPropertiesSet = true\n+\t\tcase \"authsource\":\n+\t\t\tu.AuthSource = value\n+\t\t\tu.AuthSourceSet = true\n+\t\tcase \"compressors\":\n+\t\t\tcompressors := strings.Split(value, \",\")\n+\t\t\tif len(compressors) < 1 {\n+\t\t\t\treturn fmt.Errorf(\"must have at least 1 compressor\")\n+\t\t\t}\n+\t\t\tu.Compressors = compressors\n+\t\tcase \"connect\":\n+\t\t\tswitch strings.ToLower(value) {\n+\t\t\tcase \"automatic\":\n+\t\t\tcase \"direct\":\n+\t\t\t\tu.Connect = SingleConnect\n+\t\t\tdefault:\n+\t\t\t\treturn fmt.Errorf(\"invalid 'connect' value: %q\", value)\n+\t\t\t}\n+\t\t\tif u.DirectConnectionSet {\n+\t\t\t\texpectedValue := u.Connect == SingleConnect // directConnection should be true if connect=direct\n+\t\t\t\tif u.DirectConnection != expectedValue {\n+\t\t\t\t\treturn fmt.Errorf(\"options connect=%q and directConnection=%v conflict\", value, u.DirectConnection)\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tu.ConnectSet = true\n+\t\tcase \"directconnection\":\n+\t\t\tswitch strings.ToLower(value) {\n+\t\t\tcase \"true\":\n+\t\t\t\tu.DirectConnection = true\n+\t\t\tcase \"false\":\n+\t\t\tdefault:\n+\t\t\t\treturn fmt.Errorf(\"invalid 'directConnection' value: %q\", value)\n+\t\t\t}\n+\n+\t\t\tif u.ConnectSet {\n+\t\t\t\texpectedValue := AutoConnect\n+\t\t\t\tif u.DirectConnection {\n+\t\t\t\t\texpectedValue = SingleConnect\n+\t\t\t\t}\n+\n+\t\t\t\tif u.Connect != expectedValue {\n+\t\t\t\t\treturn fmt.Errorf(\"options connect=%q and directConnection=%q conflict\", u.Connect, value)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tu.DirectConnectionSet = true\n+\t\tcase \"connecttimeoutms\":\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.ConnectTimeout = time.Duration(n) * time.Millisecond\n+\t\t\tu.ConnectTimeoutSet = true\n+\t\tcase \"heartbeatintervalms\", \"heartbeatfrequencyms\":\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.HeartbeatInterval = time.Duration(n) * time.Millisecond\n+\t\t\tu.HeartbeatIntervalSet = true\n+\t\tcase \"journal\":\n+\t\t\tswitch value {\n+\t\t\tcase \"true\":\n+\t\t\t\tu.J = true\n+\t\t\tcase \"false\":\n+\t\t\t\tu.J = false\n+\t\t\tdefault:\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\n+\t\t\tu.JSet = true\n+\t\tcase \"loadbalanced\":\n+\t\t\tswitch value {\n+\t\t\tcase \"true\":\n+\t\t\t\tu.LoadBalanced = true\n+\t\t\tcase \"false\":\n+\t\t\t\tu.LoadBalanced = false\n+\t\t\tdefault:\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\n+\t\t\tu.LoadBalancedSet = true\n+\t\tcase \"localthresholdms\":\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.LocalThreshold = time.Duration(n) * time.Millisecond\n+\t\t\tu.LocalThresholdSet = true\n+\t\tcase \"maxidletimems\":\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.MaxConnIdleTime = time.Duration(n) * time.Millisecond\n+\t\t\tu.MaxConnIdleTimeSet = true\n+\t\tcase \"maxpoolsize\":\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.MaxPoolSize = uint64(n)\n+\t\t\tu.MaxPoolSizeSet = true\n+\t\tcase \"minpoolsize\":\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.MinPoolSize = uint64(n)\n+\t\t\tu.MinPoolSizeSet = true\n+\t\tcase \"maxconnecting\":\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.MaxConnecting = uint64(n)\n+\t\t\tu.MaxConnectingSet = true\n+\t\tcase \"readconcernlevel\":\n+\t\t\tu.ReadConcernLevel = value\n+\t\tcase \"readpreference\":\n+\t\t\tu.ReadPreference = value\n+\t\tcase \"readpreferencetags\":\n+\t\t\tif value == \"\" {\n+\t\t\t\t// If \"readPreferenceTags=\" is supplied, append an empty map to tag sets to\n+\t\t\t\t// represent a wild-card.\n+\t\t\t\tu.ReadPreferenceTagSets = append(u.ReadPreferenceTagSets, map[string]string{})\n+\t\t\t\tbreak\n+\t\t\t}\n+\n+\t\t\ttags := make(map[string]string)\n+\t\t\titems := strings.Split(value, \",\")\n+\t\t\tfor _, item := range items {\n+\t\t\t\tparts := strings.Split(item, \":\")\n+\t\t\t\tif len(parts) != 2 {\n+\t\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t\t}\n+\t\t\t\ttags[parts[0]] = parts[1]\n+\t\t\t}\n+\t\t\tu.ReadPreferenceTagSets = append(u.ReadPreferenceTagSets, tags)\n+\t\tcase \"maxstaleness\", \"maxstalenessseconds\":\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.MaxStaleness = time.Duration(n) * time.Second\n+\t\t\tu.MaxStalenessSet = true\n+\t\tcase \"replicaset\":\n+\t\t\tu.ReplicaSet = value\n+\t\tcase \"retrywrites\":\n+\t\t\tswitch value {\n+\t\t\tcase \"true\":\n+\t\t\t\tu.RetryWrites = true\n+\t\t\tcase \"false\":\n+\t\t\t\tu.RetryWrites = false\n+\t\t\tdefault:\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\n+\t\t\tu.RetryWritesSet = true\n+\t\tcase \"retryreads\":\n+\t\t\tswitch value {\n+\t\t\tcase \"true\":\n+\t\t\t\tu.RetryReads = true\n+\t\t\tcase \"false\":\n+\t\t\t\tu.RetryReads = false\n+\t\t\tdefault:\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\n+\t\t\tu.RetryReadsSet = true\n+\t\tcase \"servermonitoringmode\":\n+\t\t\tif !IsValidServerMonitoringMode(value) {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\n+\t\t\tu.ServerMonitoringMode = value\n+\t\tcase \"serverselectiontimeoutms\":\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.ServerSelectionTimeout = time.Duration(n) * time.Millisecond\n+\t\t\tu.ServerSelectionTimeoutSet = true\n+\t\tcase \"sockettimeoutms\":\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.SocketTimeout = time.Duration(n) * time.Millisecond\n+\t\t\tu.SocketTimeoutSet = true\n+\t\tcase \"srvmaxhosts\":\n+\t\t\t// srvMaxHosts can only be set on URIs with the \"mongodb+srv\" scheme\n+\t\t\tif u.Scheme != SchemeMongoDBSRV {\n+\t\t\t\treturn fmt.Errorf(\"cannot specify srvMaxHosts on non-SRV URI\")\n+\t\t\t}\n+\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.SRVMaxHosts = n\n+\t\tcase \"srvservicename\":\n+\t\t\t// srvServiceName can only be set on URIs with the \"mongodb+srv\" scheme\n+\t\t\tif u.Scheme != SchemeMongoDBSRV {\n+\t\t\t\treturn fmt.Errorf(\"cannot specify srvServiceName on non-SRV URI\")\n+\t\t\t}\n+\n+\t\t\t// srvServiceName must be between 1 and 62 characters according to\n+\t\t\t// our specification. Empty service names are not valid, and the service\n+\t\t\t// name (including prepended underscore) should not exceed the 63 character\n+\t\t\t// limit for DNS query subdomains.\n+\t\t\tif len(value) < 1 || len(value) > 62 {\n+\t\t\t\treturn fmt.Errorf(\"srvServiceName value must be between 1 and 62 characters\")\n+\t\t\t}\n+\t\t\tu.SRVServiceName = value\n+\t\tcase \"ssl\", \"tls\":\n+\t\t\tswitch value {\n+\t\t\tcase \"true\":\n+\t\t\t\tu.SSL = true\n+\t\t\tcase \"false\":\n+\t\t\t\tu.SSL = false\n+\t\t\tdefault:\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tif tlsssl == nil {\n+\t\t\t\ttlsssl = new(bool)\n+\t\t\t\t*tlsssl = u.SSL\n+\t\t\t} else if *tlsssl != u.SSL {\n+\t\t\t\treturn errors.New(\"tls and ssl options, when both specified, must be equivalent\")\n+\t\t\t}\n+\n+\t\t\tu.SSLSet = true\n+\t\tcase \"sslclientcertificatekeyfile\", \"tlscertificatekeyfile\":\n+\t\t\tu.SSL = true\n+\t\t\tu.SSLSet = true\n+\t\t\tu.SSLClientCertificateKeyFile = value\n+\t\t\tu.SSLClientCertificateKeyFileSet = true\n+\t\tcase \"sslclientcertificatekeypassword\", \"tlscertificatekeyfilepassword\":\n+\t\t\tu.SSLClientCertificateKeyPassword = func() string { return value }\n+\t\t\tu.SSLClientCertificateKeyPasswordSet = true\n+\t\tcase \"tlscertificatefile\":\n+\t\t\tu.SSL = true\n+\t\t\tu.SSLSet = true\n+\t\t\tu.SSLCertificateFile = value\n+\t\t\tu.SSLCertificateFileSet = true\n+\t\tcase \"tlsprivatekeyfile\":\n+\t\t\tu.SSL = true\n+\t\t\tu.SSLSet = true\n+\t\t\tu.SSLPrivateKeyFile = value\n+\t\t\tu.SSLPrivateKeyFileSet = true\n+\t\tcase \"sslinsecure\", \"tlsinsecure\":\n+\t\t\tswitch value {\n+\t\t\tcase \"true\":\n+\t\t\t\tu.SSLInsecure = true\n+\t\t\tcase \"false\":\n+\t\t\t\tu.SSLInsecure = false\n+\t\t\tdefault:\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\n+\t\t\tu.SSLInsecureSet = true\n+\t\tcase \"sslcertificateauthorityfile\", \"tlscafile\":\n+\t\t\tu.SSL = true\n+\t\t\tu.SSLSet = true\n+\t\t\tu.SSLCaFile = value\n+\t\t\tu.SSLCaFileSet = true\n+\t\tcase \"timeoutms\":\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.Timeout = time.Duration(n) * time.Millisecond\n+\t\t\tu.TimeoutSet = true\n+\t\tcase \"tlsdisableocspendpointcheck\":\n+\t\t\tu.SSL = true\n+\t\t\tu.SSLSet = true\n+\n+\t\t\tswitch value {\n+\t\t\tcase \"true\":\n+\t\t\t\tu.SSLDisableOCSPEndpointCheck = true\n+\t\t\tcase \"false\":\n+\t\t\t\tu.SSLDisableOCSPEndpointCheck = false\n+\t\t\tdefault:\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.SSLDisableOCSPEndpointCheckSet = true\n+\t\tcase \"w\":\n+\t\t\tif w, err := strconv.Atoi(value); err == nil {\n+\t\t\t\tif w < 0 {\n+\t\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t\t}\n+\n+\t\t\t\tu.WNumber = w\n+\t\t\t\tu.WNumberSet = true\n+\t\t\t\tu.WString = \"\"\n+\t\t\t\tbreak\n+\t\t\t}\n+\n+\t\t\tu.WString = value\n+\t\t\tu.WNumberSet = false\n+\n+\t\tcase \"wtimeoutms\":\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.WTimeout = time.Duration(n) * time.Millisecond\n+\t\t\tu.WTimeoutSet = true\n+\t\tcase \"wtimeout\":\n+\t\t\t// Defer to wtimeoutms, but not to a manually-set option.\n+\t\t\tif u.WTimeoutSet {\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t\tn, err := strconv.Atoi(value)\n+\t\t\tif err != nil || n < 0 {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\t\t\tu.WTimeout = time.Duration(n) * time.Millisecond\n+\t\tcase \"zlibcompressionlevel\":\n+\t\t\tlevel, err := strconv.Atoi(value)\n+\t\t\tif err != nil || (level < -1 || level > 9) {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\n+\t\t\tif level == -1 {\n+\t\t\t\tlevel = wiremessage.DefaultZlibLevel\n+\t\t\t}\n+\t\t\tu.ZlibLevel = level\n+\t\t\tu.ZlibLevelSet = true\n+\t\tcase \"zstdcompressionlevel\":\n+\t\t\tconst maxZstdLevel = 22 // https://github.com/facebook/zstd/blob/a880ca239b447968493dd2fed3850e766d6305cc/contrib/linux-kernel/lib/zstd/compress.c#L3291\n+\t\t\tlevel, err := strconv.Atoi(value)\n+\t\t\tif err != nil || (level < -1 || level > maxZstdLevel) {\n+\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t\t}\n+\n+\t\t\tif level == -1 {\n+\t\t\t\tlevel = wiremessage.DefaultZstdLevel\n+\t\t\t}\n+\t\t\tu.ZstdLevel = level\n+\t\t\tu.ZstdLevelSet = true\n+\t\tdefault:\n+\t\t\tif u.UnknownOptions == nil {\n+\t\t\t\tu.UnknownOptions = make(map[string][]string)\n+\t\t\t}\n+\t\t\tu.UnknownOptions[lowerKey] = append(u.UnknownOptions[lowerKey], value)\n+\t\t}\n+\n+\t\tif u.Options == nil {\n+\t\t\tu.Options = make(map[string][]string)\n+\t\t}\n+\t\tu.Options[lowerKey] = append(u.Options[lowerKey], value)\n+\t}\n+\treturn nil\n+}\n+\n+func (u *ConnString) validateAuth() error {\n+\tswitch strings.ToLower(u.AuthMechanism) {\n \tcase \"mongodb-cr\":\n-\t\tif p.Username == \"\" {\n+\t\tif u.Username == \"\" {\n \t\t\treturn fmt.Errorf(\"username required for MONGO-CR\")\n \t\t}\n-\t\tif p.Password == \"\" {\n+\t\tif u.Password == \"\" {\n \t\t\treturn fmt.Errorf(\"password required for MONGO-CR\")\n \t\t}\n-\t\tif p.AuthMechanismProperties != nil {\n+\t\tif u.AuthMechanismProperties != nil {\n \t\t\treturn fmt.Errorf(\"MONGO-CR cannot have mechanism properties\")\n \t\t}\n \tcase \"mongodb-x509\":\n-\t\tif p.Password != \"\" {\n+\t\tif u.Password != \"\" {\n \t\t\treturn fmt.Errorf(\"password cannot be specified for MONGO-X509\")\n \t\t}\n-\t\tif p.AuthMechanismProperties != nil {\n+\t\tif u.AuthMechanismProperties != nil {\n \t\t\treturn fmt.Errorf(\"MONGO-X509 cannot have mechanism properties\")\n \t\t}\n \tcase \"mongodb-aws\":\n-\t\tif p.Username != \"\" && p.Password == \"\" {\n+\t\tif u.Username != \"\" && u.Password == \"\" {\n \t\t\treturn fmt.Errorf(\"username without password is invalid for MONGODB-AWS\")\n \t\t}\n-\t\tif p.Username == \"\" && p.Password != \"\" {\n+\t\tif u.Username == \"\" && u.Password != \"\" {\n \t\t\treturn fmt.Errorf(\"password without username is invalid for MONGODB-AWS\")\n \t\t}\n \t\tvar token bool\n-\t\tfor k := range p.AuthMechanismProperties {\n+\t\tfor k := range u.AuthMechanismProperties {\n \t\t\tif k != \"AWS_SESSION_TOKEN\" {\n \t\t\t\treturn fmt.Errorf(\"invalid auth property for MONGODB-AWS\")\n \t\t\t}\n \t\t\ttoken = true\n \t\t}\n-\t\tif token && p.Username == \"\" && p.Password == \"\" {\n+\t\tif token && u.Username == \"\" && u.Password == \"\" {\n \t\t\treturn fmt.Errorf(\"token without username and password is invalid for MONGODB-AWS\")\n \t\t}\n \tcase \"gssapi\":\n-\t\tif p.Username == \"\" {\n+\t\tif u.Username == \"\" {\n \t\t\treturn fmt.Errorf(\"username required for GSSAPI\")\n \t\t}\n-\t\tfor k := range p.AuthMechanismProperties {\n+\t\tfor k := range u.AuthMechanismProperties {\n \t\t\tif k != \"SERVICE_NAME\" && k != \"CANONICALIZE_HOST_NAME\" && k != \"SERVICE_REALM\" && k != \"SERVICE_HOST\" {\n \t\t\t\treturn fmt.Errorf(\"invalid auth property for GSSAPI\")\n \t\t\t}\n \t\t}\n \tcase \"plain\":\n-\t\tif p.Username == \"\" {\n+\t\tif u.Username == \"\" {\n \t\t\treturn fmt.Errorf(\"username required for PLAIN\")\n \t\t}\n-\t\tif p.Password == \"\" {\n+\t\tif u.Password == \"\" {\n \t\t\treturn fmt.Errorf(\"password required for PLAIN\")\n \t\t}\n-\t\tif p.AuthMechanismProperties != nil {\n+\t\tif u.AuthMechanismProperties != nil {\n \t\t\treturn fmt.Errorf(\"PLAIN cannot have mechanism properties\")\n \t\t}\n \tcase \"scram-sha-1\":\n-\t\tif p.Username == \"\" {\n+\t\tif u.Username == \"\" {\n \t\t\treturn fmt.Errorf(\"username required for SCRAM-SHA-1\")\n \t\t}\n-\t\tif p.Password == \"\" {\n+\t\tif u.Password == \"\" {\n \t\t\treturn fmt.Errorf(\"password required for SCRAM-SHA-1\")\n \t\t}\n-\t\tif p.AuthMechanismProperties != nil {\n+\t\tif u.AuthMechanismProperties != nil {\n \t\t\treturn fmt.Errorf(\"SCRAM-SHA-1 cannot have mechanism properties\")\n \t\t}\n \tcase \"scram-sha-256\":\n-\t\tif p.Username == \"\" {\n+\t\tif u.Username == \"\" {\n \t\t\treturn fmt.Errorf(\"username required for SCRAM-SHA-256\")\n \t\t}\n-\t\tif p.Password == \"\" {\n+\t\tif u.Password == \"\" {\n \t\t\treturn fmt.Errorf(\"password required for SCRAM-SHA-256\")\n \t\t}\n-\t\tif p.AuthMechanismProperties != nil {\n+\t\tif u.AuthMechanismProperties != nil {\n \t\t\treturn fmt.Errorf(\"SCRAM-SHA-256 cannot have mechanism properties\")\n \t\t}\n \tcase \"\":\n-\t\tif p.UsernameSet && p.Username == \"\" {\n+\t\tif u.UsernameSet && u.Username == \"\" {\n \t\t\treturn fmt.Errorf(\"username required if URI contains user info\")\n \t\t}\n \tdefault:\n@@ -585,457 +784,261 @@ func (p *parser) validateAuth() error {\n \treturn nil\n }\n \n-func (p *parser) validateSSL() error {\n-\tif !p.SSL {\n+func (u *ConnString) validateSSL() error {\n+\tif !u.SSL {\n \t\treturn nil\n \t}\n \n-\tif p.SSLClientCertificateKeyFileSet {\n-\t\tif p.SSLCertificateFileSet || p.SSLPrivateKeyFileSet {\n+\tif u.SSLClientCertificateKeyFileSet {\n+\t\tif u.SSLCertificateFileSet || u.SSLPrivateKeyFileSet {\n \t\t\treturn errors.New(\"the sslClientCertificateKeyFile/tlsCertificateKeyFile URI option cannot be provided \" +\n \t\t\t\t\"along with tlsCertificateFile or tlsPrivateKeyFile\")\n \t\t}\n \t\treturn nil\n \t}\n-\tif p.SSLCertificateFileSet && !p.SSLPrivateKeyFileSet {\n+\tif u.SSLCertificateFileSet && !u.SSLPrivateKeyFileSet {\n \t\treturn errors.New(\"the tlsPrivateKeyFile URI option must be provided if the tlsCertificateFile option is specified\")\n \t}\n-\tif p.SSLPrivateKeyFileSet && !p.SSLCertificateFileSet {\n+\tif u.SSLPrivateKeyFileSet && !u.SSLCertificateFileSet {\n \t\treturn errors.New(\"the tlsCertificateFile URI option must be provided if the tlsPrivateKeyFile option is specified\")\n \t}\n \n-\tif p.SSLInsecureSet && p.SSLDisableOCSPEndpointCheckSet {\n+\tif u.SSLInsecureSet && u.SSLDisableOCSPEndpointCheckSet {\n \t\treturn errors.New(\"the sslInsecure/tlsInsecure URI option cannot be provided along with \" +\n \t\t\t\"tlsDisableOCSPEndpointCheck \")\n \t}\n \treturn nil\n }\n \n-func (p *parser) addHost(host string) error {\n+func sanitizeHost(host string) (string, error) {\n \tif host == \"\" {\n-\t\treturn nil\n+\t\treturn host, nil\n \t}\n-\thost, err := url.QueryUnescape(host)\n+\tunescaped, err := url.QueryUnescape(host)\n \tif err != nil {\n-\t\treturn fmt.Errorf(\"invalid host %q: %w\", host, err)\n+\t\treturn \"\", fmt.Errorf(\"invalid host %q: %w\", host, err)\n \t}\n \n-\t_, port, err := net.SplitHostPort(host)\n+\t_, port, err := net.SplitHostPort(unescaped)\n \t// this is unfortunate that SplitHostPort actually requires\n \t// a port to exist.\n \tif err != nil {\n \t\tif addrError, ok := err.(*net.AddrError); !ok || addrError.Err != \"missing port in address\" {\n-\t\t\treturn err\n+\t\t\treturn \"\", err\n \t\t}\n \t}\n \n \tif port != \"\" {\n \t\td, err := strconv.Atoi(port)\n \t\tif err != nil {\n-\t\t\treturn fmt.Errorf(\"port must be an integer: %w\", err)\n+\t\t\treturn \"\", fmt.Errorf(\"port must be an integer: %w\", err)\n \t\t}\n \t\tif d <= 0 || d >= 65536 {\n-\t\t\treturn fmt.Errorf(\"port must be in the range [1, 65535]\")\n+\t\t\treturn \"\", fmt.Errorf(\"port must be in the range [1, 65535]\")\n \t\t}\n \t}\n-\tp.Hosts = append(p.Hosts, host)\n-\treturn nil\n+\treturn unescaped, nil\n }\n \n-// IsValidServerMonitoringMode will return true if the given string matches a\n-// valid server monitoring mode.\n-func IsValidServerMonitoringMode(mode string) bool {\n-\treturn mode == ServerMonitoringModeAuto ||\n-\t\tmode == ServerMonitoringModeStream ||\n-\t\tmode == ServerMonitoringModePoll\n-}\n+// ConnectMode informs the driver on how to connect\n+// to the server.\n+type ConnectMode uint8\n \n-func (p *parser) addOption(pair string) error {\n-\tkv := strings.SplitN(pair, \"=\", 2)\n-\tif len(kv) != 2 || kv[0] == \"\" {\n-\t\treturn fmt.Errorf(\"invalid option\")\n-\t}\n+var _ fmt.Stringer = ConnectMode(0)\n \n-\tkey, err := url.QueryUnescape(kv[0])\n-\tif err != nil {\n-\t\treturn fmt.Errorf(\"invalid option key %q: %w\", kv[0], err)\n-\t}\n+// ConnectMode constants.\n+const (\n+\tAutoConnect ConnectMode = iota\n+\tSingleConnect\n+)\n \n-\tvalue, err := url.QueryUnescape(kv[1])\n-\tif err != nil {\n-\t\treturn fmt.Errorf(\"invalid option value %q: %w\", kv[1], err)\n+// String implements the fmt.Stringer interface.\n+func (c ConnectMode) String() string {\n+\tswitch c {\n+\tcase AutoConnect:\n+\t\treturn \"automatic\"\n+\tcase SingleConnect:\n+\t\treturn \"direct\"\n+\tdefault:\n+\t\treturn \"unknown\"\n \t}\n+}\n \n-\tlowerKey := strings.ToLower(key)\n-\tswitch lowerKey {\n-\tcase \"appname\":\n-\t\tp.AppName = value\n-\tcase \"authmechanism\":\n-\t\tp.AuthMechanism = value\n-\tcase \"authmechanismproperties\":\n-\t\tp.AuthMechanismProperties = make(map[string]string)\n-\t\tpairs := strings.Split(value, \",\")\n-\t\tfor _, pair := range pairs {\n-\t\t\tkv := strings.SplitN(pair, \":\", 2)\n-\t\t\tif len(kv) != 2 || kv[0] == \"\" {\n-\t\t\t\treturn fmt.Errorf(\"invalid authMechanism property\")\n-\t\t\t}\n-\t\t\tp.AuthMechanismProperties[kv[0]] = kv[1]\n-\t\t}\n-\t\tp.AuthMechanismPropertiesSet = true\n-\tcase \"authsource\":\n-\t\tp.AuthSource = value\n-\t\tp.AuthSourceSet = true\n-\tcase \"compressors\":\n-\t\tcompressors := strings.Split(value, \",\")\n-\t\tif len(compressors) < 1 {\n-\t\t\treturn fmt.Errorf(\"must have at least 1 compressor\")\n-\t\t}\n-\t\tp.Compressors = compressors\n-\tcase \"connect\":\n-\t\tswitch strings.ToLower(value) {\n-\t\tcase \"automatic\":\n-\t\tcase \"direct\":\n-\t\t\tp.Connect = SingleConnect\n-\t\tdefault:\n-\t\t\treturn fmt.Errorf(\"invalid 'connect' value: %q\", value)\n-\t\t}\n-\t\tif p.DirectConnectionSet {\n-\t\t\texpectedValue := p.Connect == SingleConnect // directConnection should be true if connect=direct\n-\t\t\tif p.DirectConnection != expectedValue {\n-\t\t\t\treturn fmt.Errorf(\"options connect=%q and directConnection=%v conflict\", value, p.DirectConnection)\n-\t\t\t}\n-\t\t}\n+// Scheme constants\n+const (\n+\tSchemeMongoDB    = \"mongodb\"\n+\tSchemeMongoDBSRV = \"mongodb+srv\"\n+)\n \n-\t\tp.ConnectSet = true\n-\tcase \"directconnection\":\n-\t\tswitch strings.ToLower(value) {\n-\t\tcase \"true\":\n-\t\t\tp.DirectConnection = true\n-\t\tcase \"false\":\n-\t\tdefault:\n-\t\t\treturn fmt.Errorf(\"invalid 'directConnection' value: %q\", value)\n-\t\t}\n+type parser struct {\n+\tdnsResolver *dns.Resolver\n+}\n \n-\t\tif p.ConnectSet {\n-\t\t\texpectedValue := AutoConnect\n-\t\t\tif p.DirectConnection {\n-\t\t\t\texpectedValue = SingleConnect\n-\t\t\t}\n+func (p *parser) parse(original string) (*ConnString, error) {\n+\tconnStr := &ConnString{}\n+\tconnStr.Original = original\n+\turi := original\n \n-\t\t\tif p.Connect != expectedValue {\n-\t\t\t\treturn fmt.Errorf(\"options connect=%q and directConnection=%q conflict\", p.Connect, value)\n-\t\t\t}\n-\t\t}\n-\t\tp.DirectConnectionSet = true\n-\tcase \"connecttimeoutms\":\n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n-\t\tp.ConnectTimeout = time.Duration(n) * time.Millisecond\n-\t\tp.ConnectTimeoutSet = true\n-\tcase \"heartbeatintervalms\", \"heartbeatfrequencyms\":\n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n-\t\tp.HeartbeatInterval = time.Duration(n) * time.Millisecond\n-\t\tp.HeartbeatIntervalSet = true\n-\tcase \"journal\":\n-\t\tswitch value {\n-\t\tcase \"true\":\n-\t\t\tp.J = true\n-\t\tcase \"false\":\n-\t\t\tp.J = false\n-\t\tdefault:\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n+\tvar err error\n+\tif strings.HasPrefix(uri, SchemeMongoDBSRV+\"://\") {\n+\t\tconnStr.Scheme = SchemeMongoDBSRV\n+\t\t// remove the scheme\n+\t\turi = uri[len(SchemeMongoDBSRV)+3:]\n+\t} else if strings.HasPrefix(uri, SchemeMongoDB+\"://\") {\n+\t\tconnStr.Scheme = SchemeMongoDB\n+\t\t// remove the scheme\n+\t\turi = uri[len(SchemeMongoDB)+3:]\n+\t} else {\n+\t\treturn nil, errors.New(`scheme must be \"mongodb\" or \"mongodb+srv\"`)\n+\t}\n \n-\t\tp.JSet = true\n-\tcase \"loadbalanced\":\n-\t\tswitch value {\n-\t\tcase \"true\":\n-\t\t\tp.LoadBalanced = true\n-\t\tcase \"false\":\n-\t\t\tp.LoadBalanced = false\n-\t\tdefault:\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n+\tif idx := strings.Index(uri, \"@\"); idx != -1 {\n+\t\tuserInfo := uri[:idx]\n+\t\turi = uri[idx+1:]\n \n-\t\tp.LoadBalancedSet = true\n-\tcase \"localthresholdms\":\n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n-\t\tp.LocalThreshold = time.Duration(n) * time.Millisecond\n-\t\tp.LocalThresholdSet = true\n-\tcase \"maxidletimems\":\n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n-\t\tp.MaxConnIdleTime = time.Duration(n) * time.Millisecond\n-\t\tp.MaxConnIdleTimeSet = true\n-\tcase \"maxpoolsize\":\n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n-\t\tp.MaxPoolSize = uint64(n)\n-\t\tp.MaxPoolSizeSet = true\n-\tcase \"minpoolsize\":\n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n-\t\tp.MinPoolSize = uint64(n)\n-\t\tp.MinPoolSizeSet = true\n-\tcase \"maxconnecting\":\n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n-\t\tp.MaxConnecting = uint64(n)\n-\t\tp.MaxConnectingSet = true\n-\tcase \"readconcernlevel\":\n-\t\tp.ReadConcernLevel = value\n-\tcase \"readpreference\":\n-\t\tp.ReadPreference = value\n-\tcase \"readpreferencetags\":\n-\t\tif value == \"\" {\n-\t\t\t// If \"readPreferenceTags=\" is supplied, append an empty map to tag sets to\n-\t\t\t// represent a wild-card.\n-\t\t\tp.ReadPreferenceTagSets = append(p.ReadPreferenceTagSets, map[string]string{})\n-\t\t\tbreak\n-\t\t}\n+\t\tusername := userInfo\n+\t\tvar password string\n \n-\t\ttags := make(map[string]string)\n-\t\titems := strings.Split(value, \",\")\n-\t\tfor _, item := range items {\n-\t\t\tparts := strings.Split(item, \":\")\n-\t\t\tif len(parts) != 2 {\n-\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t\t}\n-\t\t\ttags[parts[0]] = parts[1]\n-\t\t}\n-\t\tp.ReadPreferenceTagSets = append(p.ReadPreferenceTagSets, tags)\n-\tcase \"maxstaleness\", \"maxstalenessseconds\":\n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n-\t\tp.MaxStaleness = time.Duration(n) * time.Second\n-\t\tp.MaxStalenessSet = true\n-\tcase \"replicaset\":\n-\t\tp.ReplicaSet = value\n-\tcase \"retrywrites\":\n-\t\tswitch value {\n-\t\tcase \"true\":\n-\t\t\tp.RetryWrites = true\n-\t\tcase \"false\":\n-\t\t\tp.RetryWrites = false\n-\t\tdefault:\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\tif idx := strings.Index(userInfo, \":\"); idx != -1 {\n+\t\t\tusername = userInfo[:idx]\n+\t\t\tpassword = userInfo[idx+1:]\n+\t\t\tconnStr.PasswordSet = true\n \t\t}\n \n-\t\tp.RetryWritesSet = true\n-\tcase \"retryreads\":\n-\t\tswitch value {\n-\t\tcase \"true\":\n-\t\t\tp.RetryReads = true\n-\t\tcase \"false\":\n-\t\t\tp.RetryReads = false\n-\t\tdefault:\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t// Validate and process the username.\n+\t\tif strings.Contains(username, \"/\") {\n+\t\t\treturn nil, fmt.Errorf(\"unescaped slash in username\")\n \t\t}\n-\n-\t\tp.RetryReadsSet = true\n-\tcase \"servermonitoringmode\":\n-\t\tif !IsValidServerMonitoringMode(value) {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\tconnStr.Username, err = url.PathUnescape(username)\n+\t\tif err != nil {\n+\t\t\treturn nil, fmt.Errorf(\"invalid username: %w\", err)\n \t\t}\n+\t\tconnStr.UsernameSet = true\n \n-\t\tp.ServerMonitoringMode = value\n-\tcase \"serverselectiontimeoutms\":\n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\t// Validate and process the password.\n+\t\tif strings.Contains(password, \":\") {\n+\t\t\treturn nil, fmt.Errorf(\"unescaped colon in password\")\n \t\t}\n-\t\tp.ServerSelectionTimeout = time.Duration(n) * time.Millisecond\n-\t\tp.ServerSelectionTimeoutSet = true\n-\tcase \"sockettimeoutms\":\n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t\tif strings.Contains(password, \"/\") {\n+\t\t\treturn nil, fmt.Errorf(\"unescaped slash in password\")\n \t\t}\n-\t\tp.SocketTimeout = time.Duration(n) * time.Millisecond\n-\t\tp.SocketTimeoutSet = true\n-\tcase \"srvmaxhosts\":\n-\t\t// srvMaxHosts can only be set on URIs with the \"mongodb+srv\" scheme\n-\t\tif p.Scheme != SchemeMongoDBSRV {\n-\t\t\treturn fmt.Errorf(\"cannot specify srvMaxHosts on non-SRV URI\")\n+\t\tconnStr.Password, err = url.PathUnescape(password)\n+\t\tif err != nil {\n+\t\t\treturn nil, fmt.Errorf(\"invalid password: %w\", err)\n \t\t}\n+\t}\n \n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t// fetch the hosts field\n+\thosts := uri\n+\tif idx := strings.IndexAny(uri, \"/?@\"); idx != -1 {\n+\t\tif uri[idx] == '@' {\n+\t\t\treturn nil, fmt.Errorf(\"unescaped @ sign in user info\")\n \t\t}\n-\t\tp.SRVMaxHosts = n\n-\tcase \"srvservicename\":\n-\t\t// srvServiceName can only be set on URIs with the \"mongodb+srv\" scheme\n-\t\tif p.Scheme != SchemeMongoDBSRV {\n-\t\t\treturn fmt.Errorf(\"cannot specify srvServiceName on non-SRV URI\")\n+\t\tif uri[idx] == '?' {\n+\t\t\treturn nil, fmt.Errorf(\"must have a / before the query ?\")\n \t\t}\n+\t\thosts = uri[:idx]\n+\t}\n \n-\t\t// srvServiceName must be between 1 and 62 characters according to\n-\t\t// our specification. Empty service names are not valid, and the service\n-\t\t// name (including prepended underscore) should not exceed the 63 character\n-\t\t// limit for DNS query subdomains.\n-\t\tif len(value) < 1 || len(value) > 62 {\n-\t\t\treturn fmt.Errorf(\"srvServiceName value must be between 1 and 62 characters\")\n-\t\t}\n-\t\tp.SRVServiceName = value\n-\tcase \"ssl\", \"tls\":\n-\t\tswitch value {\n-\t\tcase \"true\":\n-\t\t\tp.SSL = true\n-\t\tcase \"false\":\n-\t\t\tp.SSL = false\n-\t\tdefault:\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\tfor _, host := range strings.Split(hosts, \",\") {\n+\t\thost, err = sanitizeHost(host)\n+\t\tif err != nil {\n+\t\t\treturn nil, fmt.Errorf(\"invalid host %q: %w\", host, err)\n \t\t}\n-\t\tif p.tlsssl != nil && *p.tlsssl != p.SSL {\n-\t\t\treturn errors.New(\"tls and ssl options, when both specified, must be equivalent\")\n+\t\tif host != \"\" {\n+\t\t\tconnStr.RawHosts = append(connStr.RawHosts, host)\n \t\t}\n+\t}\n+\tconnStr.Hosts = connStr.RawHosts\n+\turi = uri[len(hosts):]\n+\textractedDatabase, err := extractDatabaseFromURI(uri)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n \n-\t\tp.tlsssl = new(bool)\n-\t\t*p.tlsssl = p.SSL\n-\n-\t\tp.SSLSet = true\n-\tcase \"sslclientcertificatekeyfile\", \"tlscertificatekeyfile\":\n-\t\tp.SSL = true\n-\t\tp.SSLSet = true\n-\t\tp.SSLClientCertificateKeyFile = value\n-\t\tp.SSLClientCertificateKeyFileSet = true\n-\tcase \"sslclientcertificatekeypassword\", \"tlscertificatekeyfilepassword\":\n-\t\tp.SSLClientCertificateKeyPassword = func() string { return value }\n-\t\tp.SSLClientCertificateKeyPasswordSet = true\n-\tcase \"tlscertificatefile\":\n-\t\tp.SSL = true\n-\t\tp.SSLSet = true\n-\t\tp.SSLCertificateFile = value\n-\t\tp.SSLCertificateFileSet = true\n-\tcase \"tlsprivatekeyfile\":\n-\t\tp.SSL = true\n-\t\tp.SSLSet = true\n-\t\tp.SSLPrivateKeyFile = value\n-\t\tp.SSLPrivateKeyFileSet = true\n-\tcase \"sslinsecure\", \"tlsinsecure\":\n-\t\tswitch value {\n-\t\tcase \"true\":\n-\t\t\tp.SSLInsecure = true\n-\t\tcase \"false\":\n-\t\t\tp.SSLInsecure = false\n-\t\tdefault:\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n+\turi = extractedDatabase.uri\n+\tconnStr.Database = extractedDatabase.db\n \n-\t\tp.SSLInsecureSet = true\n-\tcase \"sslcertificateauthorityfile\", \"tlscafile\":\n-\t\tp.SSL = true\n-\t\tp.SSLSet = true\n-\t\tp.SSLCaFile = value\n-\t\tp.SSLCaFileSet = true\n-\tcase \"timeoutms\":\n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n-\t\tp.Timeout = time.Duration(n) * time.Millisecond\n-\t\tp.TimeoutSet = true\n-\tcase \"tlsdisableocspendpointcheck\":\n-\t\tp.SSL = true\n-\t\tp.SSLSet = true\n-\n-\t\tswitch value {\n-\t\tcase \"true\":\n-\t\t\tp.SSLDisableOCSPEndpointCheck = true\n-\t\tcase \"false\":\n-\t\t\tp.SSLDisableOCSPEndpointCheck = false\n-\t\tdefault:\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n-\t\tp.SSLDisableOCSPEndpointCheckSet = true\n-\tcase \"w\":\n-\t\tif w, err := strconv.Atoi(value); err == nil {\n-\t\t\tif w < 0 {\n-\t\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t\t}\n+\t// grab connection arguments from URI\n+\tconnectionArgsFromQueryString, err := extractQueryArgsFromURI(uri)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n \n-\t\t\tp.WNumber = w\n-\t\t\tp.WNumberSet = true\n-\t\t\tp.WString = \"\"\n-\t\t\tbreak\n+\t// grab connection arguments from TXT record and enable SSL if \"mongodb+srv://\"\n+\tvar connectionArgsFromTXT []string\n+\tif connStr.Scheme == SchemeMongoDBSRV && p.dnsResolver != nil {\n+\t\tconnectionArgsFromTXT, err = p.dnsResolver.GetConnectionArgsFromTXT(hosts)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n \t\t}\n \n-\t\tp.WString = value\n-\t\tp.WNumberSet = false\n+\t\t// SSL is enabled by default for SRV, but can be manually disabled with \"ssl=false\".\n+\t\tconnStr.SSL = true\n+\t\tconnStr.SSLSet = true\n+\t}\n+\n+\t// add connection arguments from URI and TXT records to connstring\n+\tconnectionArgPairs := make([]string, 0, len(connectionArgsFromTXT)+len(connectionArgsFromQueryString))\n+\tconnectionArgPairs = append(connectionArgPairs, connectionArgsFromTXT...)\n+\tconnectionArgPairs = append(connectionArgPairs, connectionArgsFromQueryString...)\n \n-\tcase \"wtimeoutms\":\n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n-\t\tp.WTimeout = time.Duration(n) * time.Millisecond\n-\t\tp.WTimeoutSet = true\n-\tcase \"wtimeout\":\n-\t\t// Defer to wtimeoutms, but not to a manually-set option.\n-\t\tif p.WTimeoutSet {\n-\t\t\tbreak\n-\t\t}\n-\t\tn, err := strconv.Atoi(value)\n-\t\tif err != nil || n < 0 {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n-\t\tp.WTimeout = time.Duration(n) * time.Millisecond\n-\tcase \"zlibcompressionlevel\":\n-\t\tlevel, err := strconv.Atoi(value)\n-\t\tif err != nil || (level < -1 || level > 9) {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n-\t\t}\n+\terr = connStr.addOptions(connectionArgPairs)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n \n-\t\tif level == -1 {\n-\t\t\tlevel = wiremessage.DefaultZlibLevel\n-\t\t}\n-\t\tp.ZlibLevel = level\n-\t\tp.ZlibLevelSet = true\n-\tcase \"zstdcompressionlevel\":\n-\t\tconst maxZstdLevel = 22 // https://github.com/facebook/zstd/blob/a880ca239b447968493dd2fed3850e766d6305cc/contrib/linux-kernel/lib/zstd/compress.c#L3291\n-\t\tlevel, err := strconv.Atoi(value)\n-\t\tif err != nil || (level < -1 || level > maxZstdLevel) {\n-\t\t\treturn fmt.Errorf(\"invalid value for %q: %q\", key, value)\n+\t// do SRV lookup if \"mongodb+srv://\"\n+\tif connStr.Scheme == SchemeMongoDBSRV && p.dnsResolver != nil {\n+\t\tparsedHosts, err := p.dnsResolver.ParseHosts(hosts, connStr.SRVServiceName, true)\n+\t\tif err != nil {\n+\t\t\treturn connStr, err\n \t\t}\n \n-\t\tif level == -1 {\n-\t\t\tlevel = wiremessage.DefaultZstdLevel\n+\t\t// If p.SRVMaxHosts is non-zero and is less than the number of hosts, randomly\n+\t\t// select SRVMaxHosts hosts from parsedHosts.\n+\t\tif connStr.SRVMaxHosts > 0 && connStr.SRVMaxHosts < len(parsedHosts) {\n+\t\t\trandom.Shuffle(len(parsedHosts), func(i, j int) {\n+\t\t\t\tparsedHosts[i], parsedHosts[j] = parsedHosts[j], parsedHosts[i]\n+\t\t\t})\n+\t\t\tparsedHosts = parsedHosts[:connStr.SRVMaxHosts]\n \t\t}\n-\t\tp.ZstdLevel = level\n-\t\tp.ZstdLevelSet = true\n-\tdefault:\n-\t\tif p.UnknownOptions == nil {\n-\t\t\tp.UnknownOptions = make(map[string][]string)\n+\n+\t\tvar hosts []string\n+\t\tfor _, host := range parsedHosts {\n+\t\t\thost, err = sanitizeHost(host)\n+\t\t\tif err != nil {\n+\t\t\t\treturn connStr, fmt.Errorf(\"invalid host %q: %w\", host, err)\n+\t\t\t}\n+\t\t\tif host != \"\" {\n+\t\t\t\thosts = append(hosts, host)\n+\t\t\t}\n \t\t}\n-\t\tp.UnknownOptions[lowerKey] = append(p.UnknownOptions[lowerKey], value)\n+\t\tconnStr.Hosts = hosts\n+\t}\n+\tif len(connStr.Hosts) == 0 {\n+\t\treturn nil, fmt.Errorf(\"must have at least 1 host\")\n \t}\n \n-\tif p.Options == nil {\n-\t\tp.Options = make(map[string][]string)\n+\terr = connStr.setDefaultAuthParams(extractedDatabase.db)\n+\tif err != nil {\n+\t\treturn nil, err\n \t}\n-\tp.Options[lowerKey] = append(p.Options[lowerKey], value)\n \n-\treturn nil\n+\t// If WTimeout was set from manual options passed in, set WTImeoutSet to true.\n+\tif connStr.WTimeoutSetFromOption {\n+\t\tconnStr.WTimeoutSet = true\n+\t}\n+\n+\treturn connStr, nil\n+}\n+\n+// IsValidServerMonitoringMode will return true if the given string matches a\n+// valid server monitoring mode.\n+func IsValidServerMonitoringMode(mode string) bool {\n+\treturn mode == ServerMonitoringModeAuto ||\n+\t\tmode == ServerMonitoringModeStream ||\n+\t\tmode == ServerMonitoringModePoll\n }\n \n func extractQueryArgsFromURI(uri string) ([]string, error) {"
    },
    {
      "sha": "576c007d67fcc07de1e9c56c5d4f21caabf4a495",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/crypt.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fcrypt.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fcrypt.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fcrypt.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -9,6 +9,7 @@ package driver\n import (\n \t\"context\"\n \t\"crypto/tls\"\n+\t\"errors\"\n \t\"fmt\"\n \t\"io\"\n \t\"strings\"\n@@ -399,7 +400,7 @@ func (c *crypt) decryptKey(kmsCtx *mongocrypt.KmsContext) error {\n \n \t\tres := make([]byte, bytesNeeded)\n \t\tbytesRead, err := conn.Read(res)\n-\t\tif err != nil && err != io.EOF {\n+\t\tif err != nil && !errors.Is(err, io.EOF) {\n \t\t\treturn err\n \t\t}\n "
    },
    {
      "sha": "6573a4c1ade1152ca8fc3c2a742158d08112c7fb",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/dns/dns.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fdns%2Fdns.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fdns%2Fdns.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fdns%2Fdns.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -104,8 +104,8 @@ func (r *Resolver) fetchSeedlistFromSRV(host string, srvName string, stopOnErr b\n }\n \n func validateSRVResult(recordFromSRV, inputHostName string) error {\n-\tseparatedInputDomain := strings.Split(inputHostName, \".\")\n-\tseparatedRecord := strings.Split(recordFromSRV, \".\")\n+\tseparatedInputDomain := strings.Split(strings.ToLower(inputHostName), \".\")\n+\tseparatedRecord := strings.Split(strings.ToLower(recordFromSRV), \".\")\n \tif len(separatedRecord) < 2 {\n \t\treturn errors.New(\"DNS name must contain at least 2 labels\")\n \t}"
    },
    {
      "sha": "5b720cd59000c11173670bee0cc792d30c84414b",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/ocsp/config.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Fconfig.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Fconfig.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Fconfig.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -57,11 +57,11 @@ func newConfig(certChain []*x509.Certificate, opts *VerifyOptions) (config, erro\n \tvar err error\n \tcfg.ocspRequestBytes, err = ocsp.CreateRequest(cfg.serverCert, cfg.issuer, nil)\n \tif err != nil {\n-\t\treturn cfg, fmt.Errorf(\"error creating OCSP request: %v\", err)\n+\t\treturn cfg, fmt.Errorf(\"error creating OCSP request: %w\", err)\n \t}\n \tcfg.ocspRequest, err = ocsp.ParseRequest(cfg.ocspRequestBytes)\n \tif err != nil {\n-\t\treturn cfg, fmt.Errorf(\"error parsing OCSP request bytes: %v\", err)\n+\t\treturn cfg, fmt.Errorf(\"error parsing OCSP request bytes: %w\", err)\n \t}\n \n \treturn cfg, nil"
    },
    {
      "sha": "8700728729a33e5ebc9d7f4df62c11c32b9c2491",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/ocsp/ocsp.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Focsp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Focsp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Focsp.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -161,10 +161,10 @@ func processStaple(cfg config, staple []byte) (*ResponseDetails, error) {\n \t\t// If the stapled response could not be parsed correctly, error. This can happen if the response is malformed,\n \t\t// the response does not cover the certificate presented by the server, or if the response contains an error\n \t\t// status.\n-\t\treturn nil, fmt.Errorf(\"error parsing stapled response: %v\", err)\n+\t\treturn nil, fmt.Errorf(\"error parsing stapled response: %w\", err)\n \t}\n \tif err = verifyResponse(cfg, parsedResponse); err != nil {\n-\t\treturn nil, fmt.Errorf(\"error validating stapled response: %v\", err)\n+\t\treturn nil, fmt.Errorf(\"error validating stapled response: %w\", err)\n \t}\n \n \treturn extractResponseDetails(parsedResponse), nil\n@@ -192,7 +192,7 @@ func isMustStapleCertificate(cert *x509.Certificate) (bool, error) {\n \t// Use []*big.Int to ensure that all values in the sequence can be successfully unmarshalled.\n \tvar featureValues []*big.Int\n \tif _, err := asn1.Unmarshal(featureExtension.Value, &featureValues); err != nil {\n-\t\treturn false, fmt.Errorf(\"error unmarshalling TLS feature extension values: %v\", err)\n+\t\treturn false, fmt.Errorf(\"error unmarshalling TLS feature extension values: %w\", err)\n \t}\n \n \tfor _, value := range featureValues {"
    },
    {
      "sha": "b39a63abe49dccee6be981445aea588fefa61bcc",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -458,7 +458,7 @@ func (op Operation) getServerAndConnection(\n \t\tif err := pinnedConn.PinToTransaction(); err != nil {\n \t\t\t// Close the original connection to avoid a leak.\n \t\t\t_ = conn.Close()\n-\t\t\treturn nil, nil, fmt.Errorf(\"error incrementing connection reference count when starting a transaction: %v\", err)\n+\t\t\treturn nil, nil, fmt.Errorf(\"error incrementing connection reference count when starting a transaction: %w\", err)\n \t\t}\n \t\top.Client.PinnedConnection = pinnedConn\n \t}\n@@ -1492,7 +1492,7 @@ func (op Operation) addWriteConcern(dst []byte, desc description.SelectedServer)\n \t}\n \n \tt, data, err := wc.MarshalBSONValue()\n-\tif err == writeconcern.ErrEmptyWriteConcern {\n+\tif errors.Is(err, writeconcern.ErrEmptyWriteConcern) {\n \t\treturn dst, nil\n \t}\n \tif err != nil {\n@@ -1748,7 +1748,7 @@ func (op Operation) createReadPref(desc description.SelectedServer, isOpQuery bo\n \t\tdoc = bsoncore.AppendBooleanElement(doc, \"enabled\", *hedgeEnabled)\n \t\tdoc, err = bsoncore.AppendDocumentEnd(doc, hedgeIdx)\n \t\tif err != nil {\n-\t\t\treturn nil, fmt.Errorf(\"error creating hedge document: %v\", err)\n+\t\t\treturn nil, fmt.Errorf(\"error creating hedge document: %w\", err)\n \t\t}\n \t}\n "
    },
    {
      "sha": "13035abc0f6f99a2409be773658d424bc5264061",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/connection.go",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -337,7 +337,10 @@ func (c *connection) cancellationListenerCallback() {\n func (c *connection) writeWireMessage(ctx context.Context, wm []byte) error {\n \tvar err error\n \tif atomic.LoadInt64(&c.state) != connConnected {\n-\t\treturn ConnectionError{ConnectionID: c.id, message: \"connection is closed\"}\n+\t\treturn ConnectionError{\n+\t\t\tConnectionID: c.id,\n+\t\t\tmessage:      \"connection is closed\",\n+\t\t}\n \t}\n \n \tvar deadline time.Time\n@@ -388,7 +391,10 @@ func (c *connection) write(ctx context.Context, wm []byte) (err error) {\n // readWireMessage reads a wiremessage from the connection. The dst parameter will be overwritten.\n func (c *connection) readWireMessage(ctx context.Context) ([]byte, error) {\n \tif atomic.LoadInt64(&c.state) != connConnected {\n-\t\treturn nil, ConnectionError{ConnectionID: c.id, message: \"connection is closed\"}\n+\t\treturn nil, ConnectionError{\n+\t\t\tConnectionID: c.id,\n+\t\t\tmessage:      \"connection is closed\",\n+\t\t}\n \t}\n \n \tvar deadline time.Time\n@@ -411,7 +417,7 @@ func (c *connection) readWireMessage(ctx context.Context) ([]byte, error) {\n \t\t// We closeConnection the connection because we don't know if there are other bytes left to read.\n \t\tc.close()\n \t\tmessage := errMsg\n-\t\tif err == io.EOF {\n+\t\tif errors.Is(err, io.EOF) {\n \t\t\tmessage = \"socket was unexpectedly closed\"\n \t\t}\n \t\treturn nil, ConnectionError{"
    },
    {
      "sha": "a6630aae767359602df0732f2b0e2592b3a1aeeb",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/errors.go",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ferrors.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ferrors.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ferrors.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -8,6 +8,7 @@ package topology\n \n import (\n \t\"context\"\n+\t\"errors\"\n \t\"fmt\"\n \t\"time\"\n \n@@ -86,9 +87,9 @@ type pinnedConnections struct {\n // Error implements the error interface.\n func (w WaitQueueTimeoutError) Error() string {\n \terrorMsg := \"timed out while checking out a connection from connection pool\"\n-\tswitch w.Wrapped {\n-\tcase nil:\n-\tcase context.Canceled:\n+\tswitch {\n+\tcase w.Wrapped == nil:\n+\tcase errors.Is(w.Wrapped, context.Canceled):\n \t\terrorMsg = fmt.Sprintf(\n \t\t\t\"%s: %s\",\n \t\t\t\"canceled while checking out a connection from connection pool\","
    },
    {
      "sha": "6ca23c071b43d612f455aa53b2c5174d03e389a1",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/pool.go",
      "status": "modified",
      "additions": 95,
      "deletions": 40,
      "changes": 135,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fpool.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fpool.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fpool.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -375,6 +375,13 @@ func (p *pool) close(ctx context.Context) {\n \t// Empty the idle connections stack and try to deliver ErrPoolClosed to any waiting wantConns\n \t// from idleConnWait while holding the idleMu lock.\n \tp.idleMu.Lock()\n+\tfor _, conn := range p.idleConns {\n+\t\t_ = p.removeConnection(conn, reason{\n+\t\t\tloggerConn: logger.ReasonConnClosedPoolClosed,\n+\t\t\tevent:      event.ReasonPoolClosed,\n+\t\t}, nil)\n+\t\t_ = p.closeConnection(conn) // We don't care about errors while closing the connection.\n+\t}\n \tp.idleConns = p.idleConns[:0]\n \tfor {\n \t\tw := p.idleConnWait.popFront()\n@@ -402,16 +409,6 @@ func (p *pool) close(ctx context.Context) {\n \t}\n \tp.createConnectionsCond.L.Unlock()\n \n-\t// Now that we're not holding any locks, remove all of the connections we collected from the\n-\t// pool.\n-\tfor _, conn := range conns {\n-\t\t_ = p.removeConnection(conn, reason{\n-\t\t\tloggerConn: logger.ReasonConnClosedPoolClosed,\n-\t\t\tevent:      event.ReasonPoolClosed,\n-\t\t}, nil)\n-\t\t_ = p.closeConnection(conn) // We don't care about errors while closing the connection.\n-\t}\n-\n \tif mustLogPoolMessage(p) {\n \t\tlogPoolMessage(p, logger.ConnectionPoolClosed)\n \t}\n@@ -422,6 +419,16 @@ func (p *pool) close(ctx context.Context) {\n \t\t\tAddress: p.address.String(),\n \t\t})\n \t}\n+\n+\t// Now that we're not holding any locks, remove all of the connections we collected from the\n+\t// pool.\n+\tfor _, conn := range conns {\n+\t\t_ = p.removeConnection(conn, reason{\n+\t\t\tloggerConn: logger.ReasonConnClosedPoolClosed,\n+\t\t\tevent:      event.ReasonPoolClosed,\n+\t\t}, nil)\n+\t\t_ = p.closeConnection(conn) // We don't care about errors while closing the connection.\n+\t}\n }\n \n func (p *pool) pinConnectionToCursor() {\n@@ -782,20 +789,16 @@ func (p *pool) checkInNoEvent(conn *connection) error {\n \t// connection should never be perished due to max idle time.\n \tconn.bumpIdleDeadline()\n \n-\tif reason, perished := connectionPerished(conn); perished {\n-\t\t_ = p.removeConnection(conn, reason, nil)\n-\t\tgo func() {\n-\t\t\t_ = p.closeConnection(conn)\n-\t\t}()\n-\t\treturn nil\n-\t}\n-\n-\tif conn.pool.getState() == poolClosed {\n-\t\t_ = p.removeConnection(conn, reason{\n+\tr, perished := connectionPerished(conn)\n+\tif !perished && conn.pool.getState() == poolClosed {\n+\t\tperished = true\n+\t\tr = reason{\n \t\t\tloggerConn: logger.ReasonConnClosedPoolClosed,\n \t\t\tevent:      event.ReasonPoolClosed,\n-\t\t}, nil)\n-\n+\t\t}\n+\t}\n+\tif perished {\n+\t\t_ = p.removeConnection(conn, r, nil)\n \t\tgo func() {\n \t\t\t_ = p.closeConnection(conn)\n \t\t}()\n@@ -825,12 +828,37 @@ func (p *pool) checkInNoEvent(conn *connection) error {\n \treturn nil\n }\n \n+// clear calls clearImpl internally with a false interruptAllConnections value.\n+func (p *pool) clear(err error, serviceID *primitive.ObjectID) {\n+\tp.clearImpl(err, serviceID, false)\n+}\n+\n+// clearAll does same as the \"clear\" method but interrupts all connections.\n+func (p *pool) clearAll(err error, serviceID *primitive.ObjectID) {\n+\tp.clearImpl(err, serviceID, true)\n+}\n+\n+// interruptConnections interrupts the input connections.\n+func (p *pool) interruptConnections(conns []*connection) {\n+\tfor _, conn := range conns {\n+\t\t_ = p.removeConnection(conn, reason{\n+\t\t\tloggerConn: logger.ReasonConnClosedStale,\n+\t\t\tevent:      event.ReasonStale,\n+\t\t}, nil)\n+\t\tgo func(c *connection) {\n+\t\t\t_ = p.closeConnection(c)\n+\t\t}(conn)\n+\t}\n+}\n+\n // clear marks all connections as stale by incrementing the generation number, stops all background\n // goroutines, removes all requests from idleConnWait and newConnWait, and sets the pool state to\n // \"paused\". If serviceID is nil, clear marks all connections as stale. If serviceID is not nil,\n // clear marks only connections associated with the given serviceID stale (for use in load balancer\n // mode).\n-func (p *pool) clear(err error, serviceID *primitive.ObjectID) {\n+// If interruptAllConnections is true, this function calls interruptConnections to interrupt all\n+// non-idle connections.\n+func (p *pool) clearImpl(err error, serviceID *primitive.ObjectID, interruptAllConnections bool) {\n \tif p.getState() == poolClosed {\n \t\treturn\n \t}\n@@ -854,7 +882,51 @@ func (p *pool) clear(err error, serviceID *primitive.ObjectID) {\n \t\t}\n \t\tp.lastClearErr = err\n \t\tp.stateMu.Unlock()\n+\t}\n+\n+\tif mustLogPoolMessage(p) {\n+\t\tkeysAndValues := logger.KeyValues{\n+\t\t\tlogger.KeyServiceID, serviceID,\n+\t\t}\n+\n+\t\tlogPoolMessage(p, logger.ConnectionPoolCleared, keysAndValues...)\n+\t}\n+\n+\tif sendEvent && p.monitor != nil {\n+\t\tevent := &event.PoolEvent{\n+\t\t\tType:         event.PoolCleared,\n+\t\t\tAddress:      p.address.String(),\n+\t\t\tServiceID:    serviceID,\n+\t\t\tInterruption: interruptAllConnections,\n+\t\t\tError:        err,\n+\t\t}\n+\t\tp.monitor.Event(event)\n+\t}\n+\n+\tp.removePerishedConns()\n+\tif interruptAllConnections {\n+\t\tp.createConnectionsCond.L.Lock()\n+\t\tp.idleMu.Lock()\n+\n+\t\tidleConns := make(map[*connection]bool, len(p.idleConns))\n+\t\tfor _, idle := range p.idleConns {\n+\t\t\tidleConns[idle] = true\n+\t\t}\n+\n+\t\tconns := make([]*connection, 0, len(p.conns))\n+\t\tfor _, conn := range p.conns {\n+\t\t\tif _, ok := idleConns[conn]; !ok && p.stale(conn) {\n+\t\t\t\tconns = append(conns, conn)\n+\t\t\t}\n+\t\t}\n+\n+\t\tp.idleMu.Unlock()\n+\t\tp.createConnectionsCond.L.Unlock()\n+\n+\t\tp.interruptConnections(conns)\n+\t}\n \n+\tif serviceID == nil {\n \t\tpcErr := poolClearedError{err: err, address: p.address}\n \n \t\t// Clear the idle connections wait queue.\n@@ -881,23 +953,6 @@ func (p *pool) clear(err error, serviceID *primitive.ObjectID) {\n \t\t}\n \t\tp.createConnectionsCond.L.Unlock()\n \t}\n-\n-\tif mustLogPoolMessage(p) {\n-\t\tkeysAndValues := logger.KeyValues{\n-\t\t\tlogger.KeyServiceID, serviceID,\n-\t\t}\n-\n-\t\tlogPoolMessage(p, logger.ConnectionPoolCleared, keysAndValues...)\n-\t}\n-\n-\tif sendEvent && p.monitor != nil {\n-\t\tp.monitor.Event(&event.PoolEvent{\n-\t\t\tType:      event.PoolCleared,\n-\t\t\tAddress:   p.address.String(),\n-\t\t\tServiceID: serviceID,\n-\t\t\tError:     err,\n-\t\t})\n-\t}\n }\n \n // getOrQueueForIdleConn attempts to deliver an idle connection to the given wantConn. If there is"
    },
    {
      "sha": "dd10c0ce7af0c00b162897a8fc3bbba319490d7c",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/pool_generation_counter.go",
      "status": "modified",
      "additions": 5,
      "deletions": 9,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fpool_generation_counter.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fpool_generation_counter.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fpool_generation_counter.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -112,25 +112,21 @@ func (p *poolGenerationMap) stale(serviceIDPtr *primitive.ObjectID, knownGenerat\n \t\treturn true\n \t}\n \n-\tserviceID := getServiceID(serviceIDPtr)\n-\tp.Lock()\n-\tdefer p.Unlock()\n-\n-\tif stats, ok := p.generationMap[serviceID]; ok {\n-\t\treturn knownGeneration < stats.generation\n+\tif generation, ok := p.getGeneration(serviceIDPtr); ok {\n+\t\treturn knownGeneration < generation\n \t}\n \treturn false\n }\n \n-func (p *poolGenerationMap) getGeneration(serviceIDPtr *primitive.ObjectID) uint64 {\n+func (p *poolGenerationMap) getGeneration(serviceIDPtr *primitive.ObjectID) (uint64, bool) {\n \tserviceID := getServiceID(serviceIDPtr)\n \tp.Lock()\n \tdefer p.Unlock()\n \n \tif stats, ok := p.generationMap[serviceID]; ok {\n-\t\treturn stats.generation\n+\t\treturn stats.generation, true\n \t}\n-\treturn 0\n+\treturn 0, false\n }\n \n func (p *poolGenerationMap) getNumConns(serviceIDPtr *primitive.ObjectID) uint64 {"
    },
    {
      "sha": "3dd031f2ea3610bdb9003a521af4bcdcbc7c5d24",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/rtt_monitor.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Frtt_monitor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Frtt_monitor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Frtt_monitor.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -267,7 +267,7 @@ func percentile(perc float64, samples []time.Duration, minSamples int) time.Dura\n \n \tp, err := stats.Percentile(floatSamples, perc)\n \tif err != nil {\n-\t\tpanic(fmt.Errorf(\"x/mongo/driver/topology: error calculating %f percentile RTT: %v for samples:\\n%v\", perc, err, floatSamples))\n+\t\tpanic(fmt.Errorf(\"x/mongo/driver/topology: error calculating %f percentile RTT: %w for samples:\\n%v\", perc, err, floatSamples))\n \t}\n \treturn time.Duration(p)\n }\n@@ -318,7 +318,7 @@ func (r *rttMonitor) Stats() string {\n \t\tvar err error\n \t\tstdDev, err = stats.StandardDeviation(floatSamples)\n \t\tif err != nil {\n-\t\t\tpanic(fmt.Errorf(\"x/mongo/driver/topology: error calculating standard deviation RTT: %v for samples:\\n%v\", err, floatSamples))\n+\t\t\tpanic(fmt.Errorf(\"x/mongo/driver/topology: error calculating standard deviation RTT: %w for samples:\\n%v\", err, floatSamples))\n \t\t}\n \t}\n "
    },
    {
      "sha": "f4c6d744aaba411f1f1e16bab839e7978e66e863",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/server.go",
      "status": "modified",
      "additions": 28,
      "deletions": 14,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -15,6 +15,7 @@ import (\n \t\"sync/atomic\"\n \t\"time\"\n \n+\t\"go.mongodb.org/mongo-driver/bson\"\n \t\"go.mongodb.org/mongo-driver/bson/primitive\"\n \t\"go.mongodb.org/mongo-driver/event\"\n \t\"go.mongodb.org/mongo-driver/internal/driverutil\"\n@@ -333,7 +334,7 @@ func (s *Server) ProcessHandshakeError(err error, startingGenerationNumber uint6\n \t\treturn\n \t}\n \t// Ignore the error if the connection is stale.\n-\tif startingGenerationNumber < s.pool.generation.getGeneration(serviceID) {\n+\tif generation, _ := s.pool.generation.getGeneration(serviceID); startingGenerationNumber < generation {\n \t\treturn\n \t}\n \n@@ -415,8 +416,8 @@ func (s *Server) RequestImmediateCheck() {\n // (error, true) if the error is a WriteConcernError and the falls under the requirements for SDAM error\n // handling and (nil, false) otherwise.\n func getWriteConcernErrorForProcessing(err error) (*driver.WriteConcernError, bool) {\n-\twriteCmdErr, ok := err.(driver.WriteCommandError)\n-\tif !ok {\n+\tvar writeCmdErr driver.WriteCommandError\n+\tif !errors.As(err, &writeCmdErr) {\n \t\treturn nil, false\n \t}\n \n@@ -549,9 +550,7 @@ func (s *Server) update() {\n \tcheckNow := s.checkNow\n \tdone := s.done\n \n-\tdefer func() {\n-\t\t_ = recover()\n-\t}()\n+\tdefer logUnexpectedFailure(s.cfg.logger, \"Encountered unexpected failure updating server\")\n \n \tcloseServer := func() {\n \t\ts.subLock.Lock()\n@@ -603,7 +602,7 @@ func (s *Server) update() {\n \n \t\t// Perform the next check.\n \t\tdesc, err := s.check()\n-\t\tif err == errCheckCancelled {\n+\t\tif errors.Is(err, errCheckCancelled) {\n \t\t\tif atomic.LoadInt64(&s.state) != serverConnected {\n \t\t\t\tcontinue\n \t\t\t}\n@@ -640,7 +639,11 @@ func (s *Server) update() {\n \t\t\t\t// Clear the pool once the description has been updated to Unknown. Pass in a nil service ID to clear\n \t\t\t\t// because the monitoring routine only runs for non-load balanced deployments in which servers don't return\n \t\t\t\t// IDs.\n-\t\t\t\ts.pool.clear(err, nil)\n+\t\t\t\tif timeoutCnt > 0 {\n+\t\t\t\t\ts.pool.clearAll(err, nil)\n+\t\t\t\t} else {\n+\t\t\t\t\ts.pool.clear(err, nil)\n+\t\t\t\t}\n \t\t\t}\n \t\t\t// We're either not handling a timeout error, or we just handled the 2nd consecutive\n \t\t\t// timeout error. In either case, reset the timeout count to 0 and return false to\n@@ -683,10 +686,7 @@ func (s *Server) updateDescription(desc description.Server) {\n \t\treturn\n \t}\n \n-\tdefer func() {\n-\t\t//  ¯\\_(ツ)_/¯\n-\t\t_ = recover()\n-\t}()\n+\tdefer logUnexpectedFailure(s.cfg.logger, \"Encountered unexpected failure updating server description\")\n \n \t// Anytime we update the server description to something other than \"unknown\", set the pool to\n \t// \"ready\". Do this before updating the description so that connections can be checked out as\n@@ -1060,10 +1060,24 @@ func (s *Server) publishServerHeartbeatSucceededEvent(connectionID string,\n \t}\n \n \tif mustLogServerMessage(s) {\n-\t\tlogServerMessage(s, logger.TopologyServerHeartbeatStarted,\n+\t\tdescRaw, _ := bson.Marshal(struct {\n+\t\t\tdescription.Server `bson:\",inline\"`\n+\t\t\tOk                 int32\n+\t\t}{\n+\t\t\tServer: desc,\n+\t\t\tOk: func() int32 {\n+\t\t\t\tif desc.LastError != nil {\n+\t\t\t\t\treturn 0\n+\t\t\t\t}\n+\n+\t\t\t\treturn 1\n+\t\t\t}(),\n+\t\t})\n+\n+\t\tlogServerMessage(s, logger.TopologyServerHeartbeatSucceeded,\n \t\t\tlogger.KeyAwaited, await,\n \t\t\tlogger.KeyDurationMS, duration.Milliseconds(),\n-\t\t\tlogger.KeyReply, desc)\n+\t\t\tlogger.KeyReply, bson.Raw(descRaw).String())\n \t}\n }\n "
    },
    {
      "sha": "3dbbcfb860d24447de9311a2b8f8bbe676b636f3",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/topology.go",
      "status": "modified",
      "additions": 43,
      "deletions": 16,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ftopology.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ftopology.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ftopology.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -15,7 +15,6 @@ import (\n \t\"errors\"\n \t\"fmt\"\n \t\"net\"\n-\t\"net/url\"\n \t\"strconv\"\n \t\"strings\"\n \t\"sync\"\n@@ -30,6 +29,7 @@ import (\n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n \t\"go.mongodb.org/mongo-driver/mongo/options\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver\"\n+\t\"go.mongodb.org/mongo-driver/x/mongo/driver/connstring\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/dns\"\n )\n \n@@ -87,6 +87,8 @@ type Topology struct {\n \trescanSRVInterval time.Duration\n \tpollHeartbeatTime atomic.Value // holds a bool\n \n+\thosts []string\n+\n \tupdateCallback updateTopologyCallback\n \tfsm            *fsm\n \n@@ -153,7 +155,12 @@ func New(cfg *Config) (*Topology, error) {\n \t}\n \n \tif t.cfg.URI != \"\" {\n-\t\tt.pollingRequired = strings.HasPrefix(t.cfg.URI, \"mongodb+srv://\") && !t.cfg.LoadBalanced\n+\t\tconnStr, err := connstring.Parse(t.cfg.URI)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\t\tt.pollingRequired = (connStr.Scheme == connstring.SchemeMongoDBSRV) && !t.cfg.LoadBalanced\n+\t\tt.hosts = connStr.RawHosts\n \t}\n \n \tt.publishTopologyOpeningEvent()\n@@ -269,6 +276,32 @@ func logServerSelectionFailed(\n \t\tlogger.KeyFailure, err.Error())\n }\n \n+// logUnexpectedFailure is a defer-recover function for logging unexpected\n+// failures encountered while maintaining a topology.\n+//\n+// Most topology maintenance actions, such as updating a server, should not take\n+// down a client's application. This function provides a best-effort to log\n+// unexpected failures. If the logger passed to this function is nil, then the\n+// recovery will be silent.\n+func logUnexpectedFailure(log *logger.Logger, msg string, callbacks ...func()) {\n+\tr := recover()\n+\tif r == nil {\n+\t\treturn\n+\t}\n+\n+\tdefer func() {\n+\t\tfor _, clbk := range callbacks {\n+\t\t\tclbk()\n+\t\t}\n+\t}()\n+\n+\tif log == nil {\n+\t\treturn\n+\t}\n+\n+\tlog.Print(logger.LevelInfo, logger.ComponentTopology, fmt.Sprintf(\"%s: %v\", msg, r))\n+}\n+\n // Connect initializes a Topology and starts the monitoring process. This function\n // must be called to properly monitor the topology.\n func (t *Topology) Connect() error {\n@@ -351,26 +384,21 @@ func (t *Topology) Connect() error {\n \t}\n \n \tt.serversLock.Unlock()\n-\turi, err := url.Parse(t.cfg.URI)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\tparsedHosts := strings.Split(uri.Host, \",\")\n \tif mustLogTopologyMessage(t, logger.LevelInfo) {\n-\t\tlogTopologyThirdPartyUsage(t, parsedHosts)\n+\t\tlogTopologyThirdPartyUsage(t, t.hosts)\n \t}\n \tif t.pollingRequired {\n \t\t// sanity check before passing the hostname to resolver\n-\t\tif len(parsedHosts) != 1 {\n+\t\tif len(t.hosts) != 1 {\n \t\t\treturn fmt.Errorf(\"URI with SRV must include one and only one hostname\")\n \t\t}\n-\t\t_, _, err = net.SplitHostPort(uri.Host)\n+\t\t_, _, err = net.SplitHostPort(t.hosts[0])\n \t\tif err == nil {\n \t\t\t// we were able to successfully extract a port from the host,\n \t\t\t// but should not be able to when using SRV\n \t\t\treturn fmt.Errorf(\"URI with srv must not include a port number\")\n \t\t}\n-\t\tgo t.pollSRVRecords(uri.Host)\n+\t\tgo t.pollSRVRecords(t.hosts[0])\n \t\tt.pollingwg.Add(1)\n \t}\n \n@@ -546,7 +574,7 @@ func (t *Topology) SelectServer(ctx context.Context, ss description.ServerSelect\n \n \t\t\t\t\treturn nil, err\n \t\t\t\t}\n-\t\t\t\tdefer t.Unsubscribe(sub)\n+\t\t\t\tdefer func() { _ = t.Unsubscribe(sub) }()\n \t\t\t}\n \n \t\t\tsuitable, selectErr = t.selectServerFromSubscription(ctx, sub.Updates, selectionState)\n@@ -768,12 +796,11 @@ func (t *Topology) pollSRVRecords(hosts string) {\n \tdefer pollTicker.Stop()\n \tt.pollHeartbeatTime.Store(false)\n \tvar doneOnce bool\n-\tdefer func() {\n-\t\t//  ¯\\_(ツ)_/¯\n-\t\tif r := recover(); r != nil && !doneOnce {\n+\tdefer logUnexpectedFailure(t.cfg.logger, \"Encountered unexpected failure polling SRV records\", func() {\n+\t\tif !doneOnce {\n \t\t\t<-t.pollingDone\n \t\t}\n-\t}()\n+\t})\n \n \tfor {\n \t\tselect {"
    },
    {
      "sha": "bf2259537d2d69ff23f323c255b804cadcb543f3",
      "filename": "backend/vendor/golang.org/x/crypto/ocsp/ocsp.go",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Focsp%2Focsp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Focsp%2Focsp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Focsp%2Focsp.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -279,21 +279,22 @@ func getOIDFromHashAlgorithm(target crypto.Hash) asn1.ObjectIdentifier {\n \n // This is the exposed reflection of the internal OCSP structures.\n \n-// The status values that can be expressed in OCSP.  See RFC 6960.\n+// The status values that can be expressed in OCSP. See RFC 6960.\n+// These are used for the Response.Status field.\n const (\n \t// Good means that the certificate is valid.\n-\tGood = iota\n+\tGood = 0\n \t// Revoked means that the certificate has been deliberately revoked.\n-\tRevoked\n+\tRevoked = 1\n \t// Unknown means that the OCSP responder doesn't know about the certificate.\n-\tUnknown\n+\tUnknown = 2\n \t// ServerFailed is unused and was never used (see\n \t// https://go-review.googlesource.com/#/c/18944). ParseResponse will\n \t// return a ResponseError when an error response is parsed.\n-\tServerFailed\n+\tServerFailed = 3\n )\n \n-// The enumerated reasons for revoking a certificate.  See RFC 5280.\n+// The enumerated reasons for revoking a certificate. See RFC 5280.\n const (\n \tUnspecified          = 0\n \tKeyCompromise        = 1"
    },
    {
      "sha": "18f369851bfbc8047bcb44a64547538f08737433",
      "filename": "backend/vendor/golang.org/x/oauth2/google/default.go",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -22,7 +22,7 @@ import (\n \n const (\n \tadcSetupURL           = \"https://cloud.google.com/docs/authentication/external/set-up-adc\"\n-\tuniverseDomainDefault = \"googleapis.com\"\n+\tdefaultUniverseDomain = \"googleapis.com\"\n )\n \n // Credentials holds Google credentials, including \"Application Default Credentials\".\n@@ -58,7 +58,7 @@ type Credentials struct {\n // See also [The attached service account](https://cloud.google.com/docs/authentication/application-default-credentials#attached-sa).\n func (c *Credentials) UniverseDomain() string {\n \tif c.universeDomain == \"\" {\n-\t\treturn universeDomainDefault\n+\t\treturn defaultUniverseDomain\n \t}\n \treturn c.universeDomain\n }\n@@ -89,7 +89,7 @@ func (c *Credentials) GetUniverseDomain() (string, error) {\n \t// computeUniverseDomain that did not set universeDomain, set the default\n \t// universe domain.\n \tif c.universeDomain == \"\" {\n-\t\tc.universeDomain = universeDomainDefault\n+\t\tc.universeDomain = defaultUniverseDomain\n \t}\n \treturn c.universeDomain, nil\n }\n@@ -103,7 +103,7 @@ func (c *Credentials) computeUniverseDomain() error {\n \tif err != nil {\n \t\tif _, ok := err.(metadata.NotDefinedError); ok {\n \t\t\t// http.StatusNotFound (404)\n-\t\t\tc.universeDomain = universeDomainDefault\n+\t\t\tc.universeDomain = defaultUniverseDomain\n \t\t\treturn nil\n \t\t} else {\n \t\t\treturn err\n@@ -287,7 +287,7 @@ func CredentialsFromJSONWithParams(ctx context.Context, jsonData []byte, params\n \t}\n \t// Authorized user credentials are only supported in the googleapis.com universe.\n \tif f.Type == userCredentialsKey {\n-\t\tuniverseDomain = universeDomainDefault\n+\t\tuniverseDomain = defaultUniverseDomain\n \t}\n \n \tts, err := f.tokenSource(ctx, params)"
    },
    {
      "sha": "830d268c1e4e4eb42a2fa64c0e0af11b58da0eb7",
      "filename": "backend/vendor/golang.org/x/oauth2/google/doc.go",
      "status": "modified",
      "additions": 2,
      "deletions": 84,
      "changes": 86,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdoc.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -22,91 +22,9 @@\n // the other by JWTConfigFromJSON. The returned Config can be used to obtain a TokenSource or\n // create an http.Client.\n //\n-// # Workload Identity Federation\n+// # Workload and Workforce Identity Federation\n //\n-// Using workload identity federation, your application can access Google Cloud\n-// resources from Amazon Web Services (AWS), Microsoft Azure or any identity\n-// provider that supports OpenID Connect (OIDC) or SAML 2.0.\n-// Traditionally, applications running outside Google Cloud have used service\n-// account keys to access Google Cloud resources. Using identity federation,\n-// you can allow your workload to impersonate a service account.\n-// This lets you access Google Cloud resources directly, eliminating the\n-// maintenance and security burden associated with service account keys.\n-//\n-// Follow the detailed instructions on how to configure Workload Identity Federation\n-// in various platforms:\n-//\n-//\tAmazon Web Services (AWS): https://cloud.google.com/iam/docs/workload-identity-federation-with-other-clouds#aws\n-//\tMicrosoft Azure: https://cloud.google.com/iam/docs/workload-identity-federation-with-other-clouds#azure\n-//\tOIDC identity provider: https://cloud.google.com/iam/docs/workload-identity-federation-with-other-providers#oidc\n-//\tSAML 2.0 identity provider: https://cloud.google.com/iam/docs/workload-identity-federation-with-other-providers#saml\n-//\n-// For OIDC and SAML providers, the library can retrieve tokens in three ways:\n-// from a local file location (file-sourced credentials), from a server\n-// (URL-sourced credentials), or from a local executable (executable-sourced\n-// credentials).\n-// For file-sourced credentials, a background process needs to be continuously\n-// refreshing the file location with a new OIDC/SAML token prior to expiration.\n-// For tokens with one hour lifetimes, the token needs to be updated in the file\n-// every hour. The token can be stored directly as plain text or in JSON format.\n-// For URL-sourced credentials, a local server needs to host a GET endpoint to\n-// return the OIDC/SAML token. The response can be in plain text or JSON.\n-// Additional required request headers can also be specified.\n-// For executable-sourced credentials, an application needs to be available to\n-// output the OIDC/SAML token and other information in a JSON format.\n-// For more information on how these work (and how to implement\n-// executable-sourced credentials), please check out:\n-// https://cloud.google.com/iam/docs/workload-identity-federation-with-other-providers#create_a_credential_configuration\n-//\n-// Note that this library does not perform any validation on the token_url, token_info_url,\n-// or service_account_impersonation_url fields of the credential configuration.\n-// It is not recommended to use a credential configuration that you did not generate with\n-// the gcloud CLI unless you verify that the URL fields point to a googleapis.com domain.\n-//\n-// # Workforce Identity Federation\n-//\n-// Workforce identity federation lets you use an external identity provider (IdP) to\n-// authenticate and authorize a workforce—a group of users, such as employees, partners,\n-// and contractors—using IAM, so that the users can access Google Cloud services.\n-// Workforce identity federation extends Google Cloud's identity capabilities to support\n-// syncless, attribute-based single sign on.\n-//\n-// With workforce identity federation, your workforce can access Google Cloud resources\n-// using an external identity provider (IdP) that supports OpenID Connect (OIDC) or\n-// SAML 2.0 such as Azure Active Directory (Azure AD), Active Directory Federation\n-// Services (AD FS), Okta, and others.\n-//\n-// Follow the detailed instructions on how to configure Workload Identity Federation\n-// in various platforms:\n-//\n-//\tAzure AD: https://cloud.google.com/iam/docs/workforce-sign-in-azure-ad\n-//\tOkta: https://cloud.google.com/iam/docs/workforce-sign-in-okta\n-//\tOIDC identity provider: https://cloud.google.com/iam/docs/configuring-workforce-identity-federation#oidc\n-//\tSAML 2.0 identity provider: https://cloud.google.com/iam/docs/configuring-workforce-identity-federation#saml\n-//\n-// For workforce identity federation, the library can retrieve tokens in three ways:\n-// from a local file location (file-sourced credentials), from a server\n-// (URL-sourced credentials), or from a local executable (executable-sourced\n-// credentials).\n-// For file-sourced credentials, a background process needs to be continuously\n-// refreshing the file location with a new OIDC/SAML token prior to expiration.\n-// For tokens with one hour lifetimes, the token needs to be updated in the file\n-// every hour. The token can be stored directly as plain text or in JSON format.\n-// For URL-sourced credentials, a local server needs to host a GET endpoint to\n-// return the OIDC/SAML token. The response can be in plain text or JSON.\n-// Additional required request headers can also be specified.\n-// For executable-sourced credentials, an application needs to be available to\n-// output the OIDC/SAML token and other information in a JSON format.\n-// For more information on how these work (and how to implement\n-// executable-sourced credentials), please check out:\n-// https://cloud.google.com/iam/docs/workforce-obtaining-short-lived-credentials#generate_a_configuration_file_for_non-interactive_sign-in\n-//\n-// # Security considerations\n-//\n-// Note that this library does not perform any validation on the token_url, token_info_url,\n-// or service_account_impersonation_url fields of the credential configuration.\n-// It is not recommended to use a credential configuration that you did not generate with\n-// the gcloud CLI unless you verify that the URL fields point to a googleapis.com domain.\n+// For information on how to use Workload and Workforce Identity Federation, see [golang.org/x/oauth2/google/externalaccount].\n //\n // # Credentials\n //"
    },
    {
      "sha": "da61d0c0e84cdd725b0bc1ad2469c84b7425fc0b",
      "filename": "backend/vendor/golang.org/x/oauth2/google/externalaccount/aws.go",
      "status": "renamed",
      "additions": 67,
      "deletions": 45,
      "changes": 112,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Faws.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Faws.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Faws.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -26,22 +26,28 @@ import (\n \t\"golang.org/x/oauth2\"\n )\n \n-type awsSecurityCredentials struct {\n-\tAccessKeyID     string `json:\"AccessKeyID\"`\n+// AwsSecurityCredentials models AWS security credentials.\n+type AwsSecurityCredentials struct {\n+\t// AccessKeyId is the AWS Access Key ID - Required.\n+\tAccessKeyID string `json:\"AccessKeyID\"`\n+\t// SecretAccessKey is the AWS Secret Access Key - Required.\n \tSecretAccessKey string `json:\"SecretAccessKey\"`\n-\tSecurityToken   string `json:\"Token\"`\n+\t// SessionToken is the AWS Session token. This should be provided for temporary AWS security credentials - Optional.\n+\tSessionToken string `json:\"Token\"`\n }\n \n // awsRequestSigner is a utility class to sign http requests using a AWS V4 signature.\n type awsRequestSigner struct {\n \tRegionName             string\n-\tAwsSecurityCredentials awsSecurityCredentials\n+\tAwsSecurityCredentials *AwsSecurityCredentials\n }\n \n // getenv aliases os.Getenv for testing\n var getenv = os.Getenv\n \n const (\n+\tdefaultRegionalCredentialVerificationUrl = \"https://sts.{region}.amazonaws.com?Action=GetCallerIdentity&Version=2011-06-15\"\n+\n \t// AWS Signature Version 4 signing algorithm identifier.\n \tawsAlgorithm = \"AWS4-HMAC-SHA256\"\n \n@@ -197,8 +203,8 @@ func (rs *awsRequestSigner) SignRequest(req *http.Request) error {\n \n \tsignedRequest.Header.Add(\"host\", requestHost(req))\n \n-\tif rs.AwsSecurityCredentials.SecurityToken != \"\" {\n-\t\tsignedRequest.Header.Add(awsSecurityTokenHeader, rs.AwsSecurityCredentials.SecurityToken)\n+\tif rs.AwsSecurityCredentials.SessionToken != \"\" {\n+\t\tsignedRequest.Header.Add(awsSecurityTokenHeader, rs.AwsSecurityCredentials.SessionToken)\n \t}\n \n \tif signedRequest.Header.Get(\"date\") == \"\" {\n@@ -251,16 +257,18 @@ func (rs *awsRequestSigner) generateAuthentication(req *http.Request, timestamp\n }\n \n type awsCredentialSource struct {\n-\tEnvironmentID               string\n-\tRegionURL                   string\n-\tRegionalCredVerificationURL string\n-\tCredVerificationURL         string\n-\tIMDSv2SessionTokenURL       string\n-\tTargetResource              string\n-\trequestSigner               *awsRequestSigner\n-\tregion                      string\n-\tctx                         context.Context\n-\tclient                      *http.Client\n+\tenvironmentID                  string\n+\tregionURL                      string\n+\tregionalCredVerificationURL    string\n+\tcredVerificationURL            string\n+\timdsv2SessionTokenURL          string\n+\ttargetResource                 string\n+\trequestSigner                  *awsRequestSigner\n+\tregion                         string\n+\tctx                            context.Context\n+\tclient                         *http.Client\n+\tawsSecurityCredentialsSupplier AwsSecurityCredentialsSupplier\n+\tsupplierOptions                SupplierOptions\n }\n \n type awsRequestHeader struct {\n@@ -292,18 +300,25 @@ func canRetrieveSecurityCredentialFromEnvironment() bool {\n \treturn getenv(awsAccessKeyId) != \"\" && getenv(awsSecretAccessKey) != \"\"\n }\n \n-func shouldUseMetadataServer() bool {\n-\treturn !canRetrieveRegionFromEnvironment() || !canRetrieveSecurityCredentialFromEnvironment()\n+func (cs awsCredentialSource) shouldUseMetadataServer() bool {\n+\treturn cs.awsSecurityCredentialsSupplier == nil && (!canRetrieveRegionFromEnvironment() || !canRetrieveSecurityCredentialFromEnvironment())\n }\n \n func (cs awsCredentialSource) credentialSourceType() string {\n+\tif cs.awsSecurityCredentialsSupplier != nil {\n+\t\treturn \"programmatic\"\n+\t}\n \treturn \"aws\"\n }\n \n func (cs awsCredentialSource) subjectToken() (string, error) {\n+\t// Set Defaults\n+\tif cs.regionalCredVerificationURL == \"\" {\n+\t\tcs.regionalCredVerificationURL = defaultRegionalCredentialVerificationUrl\n+\t}\n \tif cs.requestSigner == nil {\n \t\theaders := make(map[string]string)\n-\t\tif shouldUseMetadataServer() {\n+\t\tif cs.shouldUseMetadataServer() {\n \t\t\tawsSessionToken, err := cs.getAWSSessionToken()\n \t\t\tif err != nil {\n \t\t\t\treturn \"\", err\n@@ -318,8 +333,8 @@ func (cs awsCredentialSource) subjectToken() (string, error) {\n \t\tif err != nil {\n \t\t\treturn \"\", err\n \t\t}\n-\n-\t\tif cs.region, err = cs.getRegion(headers); err != nil {\n+\t\tcs.region, err = cs.getRegion(headers)\n+\t\tif err != nil {\n \t\t\treturn \"\", err\n \t\t}\n \n@@ -331,16 +346,16 @@ func (cs awsCredentialSource) subjectToken() (string, error) {\n \n \t// Generate the signed request to AWS STS GetCallerIdentity API.\n \t// Use the required regional endpoint. Otherwise, the request will fail.\n-\treq, err := http.NewRequest(\"POST\", strings.Replace(cs.RegionalCredVerificationURL, \"{region}\", cs.region, 1), nil)\n+\treq, err := http.NewRequest(\"POST\", strings.Replace(cs.regionalCredVerificationURL, \"{region}\", cs.region, 1), nil)\n \tif err != nil {\n \t\treturn \"\", err\n \t}\n \t// The full, canonical resource name of the workload identity pool\n \t// provider, with or without the HTTPS prefix.\n \t// Including this header as part of the signature is recommended to\n \t// ensure data integrity.\n-\tif cs.TargetResource != \"\" {\n-\t\treq.Header.Add(\"x-goog-cloud-target-resource\", cs.TargetResource)\n+\tif cs.targetResource != \"\" {\n+\t\treq.Header.Add(\"x-goog-cloud-target-resource\", cs.targetResource)\n \t}\n \tcs.requestSigner.SignRequest(req)\n \n@@ -387,11 +402,11 @@ func (cs awsCredentialSource) subjectToken() (string, error) {\n }\n \n func (cs *awsCredentialSource) getAWSSessionToken() (string, error) {\n-\tif cs.IMDSv2SessionTokenURL == \"\" {\n+\tif cs.imdsv2SessionTokenURL == \"\" {\n \t\treturn \"\", nil\n \t}\n \n-\treq, err := http.NewRequest(\"PUT\", cs.IMDSv2SessionTokenURL, nil)\n+\treq, err := http.NewRequest(\"PUT\", cs.imdsv2SessionTokenURL, nil)\n \tif err != nil {\n \t\treturn \"\", err\n \t}\n@@ -410,25 +425,29 @@ func (cs *awsCredentialSource) getAWSSessionToken() (string, error) {\n \t}\n \n \tif resp.StatusCode != 200 {\n-\t\treturn \"\", fmt.Errorf(\"oauth2/google: unable to retrieve AWS session token - %s\", string(respBody))\n+\t\treturn \"\", fmt.Errorf(\"oauth2/google/externalaccount: unable to retrieve AWS session token - %s\", string(respBody))\n \t}\n \n \treturn string(respBody), nil\n }\n \n func (cs *awsCredentialSource) getRegion(headers map[string]string) (string, error) {\n+\tif cs.awsSecurityCredentialsSupplier != nil {\n+\t\treturn cs.awsSecurityCredentialsSupplier.AwsRegion(cs.ctx, cs.supplierOptions)\n+\t}\n \tif canRetrieveRegionFromEnvironment() {\n \t\tif envAwsRegion := getenv(awsRegion); envAwsRegion != \"\" {\n+\t\t\tcs.region = envAwsRegion\n \t\t\treturn envAwsRegion, nil\n \t\t}\n \t\treturn getenv(\"AWS_DEFAULT_REGION\"), nil\n \t}\n \n-\tif cs.RegionURL == \"\" {\n-\t\treturn \"\", errors.New(\"oauth2/google: unable to determine AWS region\")\n+\tif cs.regionURL == \"\" {\n+\t\treturn \"\", errors.New(\"oauth2/google/externalaccount: unable to determine AWS region\")\n \t}\n \n-\treq, err := http.NewRequest(\"GET\", cs.RegionURL, nil)\n+\treq, err := http.NewRequest(\"GET\", cs.regionURL, nil)\n \tif err != nil {\n \t\treturn \"\", err\n \t}\n@@ -449,7 +468,7 @@ func (cs *awsCredentialSource) getRegion(headers map[string]string) (string, err\n \t}\n \n \tif resp.StatusCode != 200 {\n-\t\treturn \"\", fmt.Errorf(\"oauth2/google: unable to retrieve AWS region - %s\", string(respBody))\n+\t\treturn \"\", fmt.Errorf(\"oauth2/google/externalaccount: unable to retrieve AWS region - %s\", string(respBody))\n \t}\n \n \t// This endpoint will return the region in format: us-east-2b.\n@@ -461,12 +480,15 @@ func (cs *awsCredentialSource) getRegion(headers map[string]string) (string, err\n \treturn string(respBody[:respBodyEnd]), nil\n }\n \n-func (cs *awsCredentialSource) getSecurityCredentials(headers map[string]string) (result awsSecurityCredentials, err error) {\n+func (cs *awsCredentialSource) getSecurityCredentials(headers map[string]string) (result *AwsSecurityCredentials, err error) {\n+\tif cs.awsSecurityCredentialsSupplier != nil {\n+\t\treturn cs.awsSecurityCredentialsSupplier.AwsSecurityCredentials(cs.ctx, cs.supplierOptions)\n+\t}\n \tif canRetrieveSecurityCredentialFromEnvironment() {\n-\t\treturn awsSecurityCredentials{\n+\t\treturn &AwsSecurityCredentials{\n \t\t\tAccessKeyID:     getenv(awsAccessKeyId),\n \t\t\tSecretAccessKey: getenv(awsSecretAccessKey),\n-\t\t\tSecurityToken:   getenv(awsSessionToken),\n+\t\t\tSessionToken:    getenv(awsSessionToken),\n \t\t}, nil\n \t}\n \n@@ -481,20 +503,20 @@ func (cs *awsCredentialSource) getSecurityCredentials(headers map[string]string)\n \t}\n \n \tif credentials.AccessKeyID == \"\" {\n-\t\treturn result, errors.New(\"oauth2/google: missing AccessKeyId credential\")\n+\t\treturn result, errors.New(\"oauth2/google/externalaccount: missing AccessKeyId credential\")\n \t}\n \n \tif credentials.SecretAccessKey == \"\" {\n-\t\treturn result, errors.New(\"oauth2/google: missing SecretAccessKey credential\")\n+\t\treturn result, errors.New(\"oauth2/google/externalaccount: missing SecretAccessKey credential\")\n \t}\n \n-\treturn credentials, nil\n+\treturn &credentials, nil\n }\n \n-func (cs *awsCredentialSource) getMetadataSecurityCredentials(roleName string, headers map[string]string) (awsSecurityCredentials, error) {\n-\tvar result awsSecurityCredentials\n+func (cs *awsCredentialSource) getMetadataSecurityCredentials(roleName string, headers map[string]string) (AwsSecurityCredentials, error) {\n+\tvar result AwsSecurityCredentials\n \n-\treq, err := http.NewRequest(\"GET\", fmt.Sprintf(\"%s/%s\", cs.CredVerificationURL, roleName), nil)\n+\treq, err := http.NewRequest(\"GET\", fmt.Sprintf(\"%s/%s\", cs.credVerificationURL, roleName), nil)\n \tif err != nil {\n \t\treturn result, err\n \t}\n@@ -516,19 +538,19 @@ func (cs *awsCredentialSource) getMetadataSecurityCredentials(roleName string, h\n \t}\n \n \tif resp.StatusCode != 200 {\n-\t\treturn result, fmt.Errorf(\"oauth2/google: unable to retrieve AWS security credentials - %s\", string(respBody))\n+\t\treturn result, fmt.Errorf(\"oauth2/google/externalaccount: unable to retrieve AWS security credentials - %s\", string(respBody))\n \t}\n \n \terr = json.Unmarshal(respBody, &result)\n \treturn result, err\n }\n \n func (cs *awsCredentialSource) getMetadataRoleName(headers map[string]string) (string, error) {\n-\tif cs.CredVerificationURL == \"\" {\n-\t\treturn \"\", errors.New(\"oauth2/google: unable to determine the AWS metadata server security credentials endpoint\")\n+\tif cs.credVerificationURL == \"\" {\n+\t\treturn \"\", errors.New(\"oauth2/google/externalaccount: unable to determine the AWS metadata server security credentials endpoint\")\n \t}\n \n-\treq, err := http.NewRequest(\"GET\", cs.CredVerificationURL, nil)\n+\treq, err := http.NewRequest(\"GET\", cs.credVerificationURL, nil)\n \tif err != nil {\n \t\treturn \"\", err\n \t}\n@@ -549,7 +571,7 @@ func (cs *awsCredentialSource) getMetadataRoleName(headers map[string]string) (s\n \t}\n \n \tif resp.StatusCode != 200 {\n-\t\treturn \"\", fmt.Errorf(\"oauth2/google: unable to retrieve AWS role name - %s\", string(respBody))\n+\t\treturn \"\", fmt.Errorf(\"oauth2/google/externalaccount: unable to retrieve AWS role name - %s\", string(respBody))\n \t}\n \n \treturn string(respBody), nil",
      "previous_filename": "backend/vendor/golang.org/x/oauth2/google/internal/externalaccount/aws.go"
    },
    {
      "sha": "400aa0a072a32a602edb41e60a51f399342ddafd",
      "filename": "backend/vendor/golang.org/x/oauth2/google/externalaccount/basecredentials.go",
      "status": "added",
      "additions": 484,
      "deletions": 0,
      "changes": 484,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fbasecredentials.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fbasecredentials.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fbasecredentials.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -0,0 +1,484 @@\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+/*\n+Package externalaccount provides support for creating workload identity\n+federation and workforce identity federation token sources that can be\n+used to access Google Cloud resources from external identity providers.\n+\n+# Workload Identity Federation\n+\n+Using workload identity federation, your application can access Google Cloud\n+resources from Amazon Web Services (AWS), Microsoft Azure or any identity\n+provider that supports OpenID Connect (OIDC) or SAML 2.0.\n+Traditionally, applications running outside Google Cloud have used service\n+account keys to access Google Cloud resources. Using identity federation,\n+you can allow your workload to impersonate a service account.\n+This lets you access Google Cloud resources directly, eliminating the\n+maintenance and security burden associated with service account keys.\n+\n+Follow the detailed instructions on how to configure Workload Identity Federation\n+in various platforms:\n+\n+Amazon Web Services (AWS): https://cloud.google.com/iam/docs/workload-identity-federation-with-other-clouds#aws\n+Microsoft Azure: https://cloud.google.com/iam/docs/workload-identity-federation-with-other-clouds#azure\n+OIDC identity provider: https://cloud.google.com/iam/docs/workload-identity-federation-with-other-providers#oidc\n+SAML 2.0 identity provider: https://cloud.google.com/iam/docs/workload-identity-federation-with-other-providers#saml\n+\n+For OIDC and SAML providers, the library can retrieve tokens in fours ways:\n+from a local file location (file-sourced credentials), from a server\n+(URL-sourced credentials), from a local executable (executable-sourced\n+credentials), or from a user defined function that returns an OIDC or SAML token.\n+For file-sourced credentials, a background process needs to be continuously\n+refreshing the file location with a new OIDC/SAML token prior to expiration.\n+For tokens with one hour lifetimes, the token needs to be updated in the file\n+every hour. The token can be stored directly as plain text or in JSON format.\n+For URL-sourced credentials, a local server needs to host a GET endpoint to\n+return the OIDC/SAML token. The response can be in plain text or JSON.\n+Additional required request headers can also be specified.\n+For executable-sourced credentials, an application needs to be available to\n+output the OIDC/SAML token and other information in a JSON format.\n+For more information on how these work (and how to implement\n+executable-sourced credentials), please check out:\n+https://cloud.google.com/iam/docs/workload-identity-federation-with-other-providers#create_a_credential_configuration\n+\n+To use a custom function to supply the token, define a struct that implements the [SubjectTokenSupplier] interface for OIDC/SAML providers,\n+or one that implements [AwsSecurityCredentialsSupplier] for AWS providers. This can then be used when building a [Config].\n+The [golang.org/x/oauth2.TokenSource] created from the config using [NewTokenSource] can then be used to access Google\n+Cloud resources. For instance, you can create a new client from the\n+[cloud.google.com/go/storage] package and pass in option.WithTokenSource(yourTokenSource))\n+\n+Note that this library does not perform any validation on the token_url, token_info_url,\n+or service_account_impersonation_url fields of the credential configuration.\n+It is not recommended to use a credential configuration that you did not generate with\n+the gcloud CLI unless you verify that the URL fields point to a googleapis.com domain.\n+\n+# Workforce Identity Federation\n+\n+Workforce identity federation lets you use an external identity provider (IdP) to\n+authenticate and authorize a workforce—a group of users, such as employees, partners,\n+and contractors—using IAM, so that the users can access Google Cloud services.\n+Workforce identity federation extends Google Cloud's identity capabilities to support\n+syncless, attribute-based single sign on.\n+\n+With workforce identity federation, your workforce can access Google Cloud resources\n+using an external identity provider (IdP) that supports OpenID Connect (OIDC) or\n+SAML 2.0 such as Azure Active Directory (Azure AD), Active Directory Federation\n+Services (AD FS), Okta, and others.\n+\n+Follow the detailed instructions on how to configure Workload Identity Federation\n+in various platforms:\n+\n+Azure AD: https://cloud.google.com/iam/docs/workforce-sign-in-azure-ad\n+Okta: https://cloud.google.com/iam/docs/workforce-sign-in-okta\n+OIDC identity provider: https://cloud.google.com/iam/docs/configuring-workforce-identity-federation#oidc\n+SAML 2.0 identity provider: https://cloud.google.com/iam/docs/configuring-workforce-identity-federation#saml\n+\n+For workforce identity federation, the library can retrieve tokens in four ways:\n+from a local file location (file-sourced credentials), from a server\n+(URL-sourced credentials), from a local executable (executable-sourced\n+credentials), or from a user supplied function that returns an OIDC or SAML token.\n+For file-sourced credentials, a background process needs to be continuously\n+refreshing the file location with a new OIDC/SAML token prior to expiration.\n+For tokens with one hour lifetimes, the token needs to be updated in the file\n+every hour. The token can be stored directly as plain text or in JSON format.\n+For URL-sourced credentials, a local server needs to host a GET endpoint to\n+return the OIDC/SAML token. The response can be in plain text or JSON.\n+Additional required request headers can also be specified.\n+For executable-sourced credentials, an application needs to be available to\n+output the OIDC/SAML token and other information in a JSON format.\n+For more information on how these work (and how to implement\n+executable-sourced credentials), please check out:\n+https://cloud.google.com/iam/docs/workforce-obtaining-short-lived-credentials#generate_a_configuration_file_for_non-interactive_sign-in\n+\n+To use a custom function to supply the token, define a struct that implements the [SubjectTokenSupplier] interface for OIDC/SAML providers.\n+This can then be used when building a [Config].\n+The [golang.org/x/oauth2.TokenSource] created from the config using [NewTokenSource] can then be used access Google\n+Cloud resources. For instance, you can create a new client from the\n+[cloud.google.com/go/storage] package and pass in option.WithTokenSource(yourTokenSource))\n+\n+# Security considerations\n+\n+Note that this library does not perform any validation on the token_url, token_info_url,\n+or service_account_impersonation_url fields of the credential configuration.\n+It is not recommended to use a credential configuration that you did not generate with\n+the gcloud CLI unless you verify that the URL fields point to a googleapis.com domain.\n+*/\n+package externalaccount\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\t\"net/http\"\n+\t\"regexp\"\n+\t\"strconv\"\n+\t\"strings\"\n+\t\"time\"\n+\n+\t\"golang.org/x/oauth2\"\n+\t\"golang.org/x/oauth2/google/internal/impersonate\"\n+\t\"golang.org/x/oauth2/google/internal/stsexchange\"\n+)\n+\n+const (\n+\tuniverseDomainPlaceholder = \"UNIVERSE_DOMAIN\"\n+\tdefaultTokenURL           = \"https://sts.UNIVERSE_DOMAIN/v1/token\"\n+\tdefaultUniverseDomain     = \"googleapis.com\"\n+)\n+\n+// now aliases time.Now for testing\n+var now = func() time.Time {\n+\treturn time.Now().UTC()\n+}\n+\n+// Config stores the configuration for fetching tokens with external credentials.\n+type Config struct {\n+\t// Audience is the Secure Token Service (STS) audience which contains the resource name for the workload\n+\t// identity pool or the workforce pool and the provider identifier in that pool. Required.\n+\tAudience string\n+\t// SubjectTokenType is the STS token type based on the Oauth2.0 token exchange spec.\n+\t// Expected values include:\n+\t// “urn:ietf:params:oauth:token-type:jwt”\n+\t// “urn:ietf:params:oauth:token-type:id-token”\n+\t// “urn:ietf:params:oauth:token-type:saml2”\n+\t// “urn:ietf:params:aws:token-type:aws4_request”\n+\t// Required.\n+\tSubjectTokenType string\n+\t// TokenURL is the STS token exchange endpoint. If not provided, will default to\n+\t// https://sts.UNIVERSE_DOMAIN/v1/token, with UNIVERSE_DOMAIN set to the\n+\t// default service domain googleapis.com unless UniverseDomain is set.\n+\t// Optional.\n+\tTokenURL string\n+\t// TokenInfoURL is the token_info endpoint used to retrieve the account related information (\n+\t// user attributes like account identifier, eg. email, username, uid, etc). This is\n+\t// needed for gCloud session account identification. Optional.\n+\tTokenInfoURL string\n+\t// ServiceAccountImpersonationURL is the URL for the service account impersonation request. This is only\n+\t// required for workload identity pools when APIs to be accessed have not integrated with UberMint. Optional.\n+\tServiceAccountImpersonationURL string\n+\t// ServiceAccountImpersonationLifetimeSeconds is the number of seconds the service account impersonation\n+\t// token will be valid for. If not provided, it will default to 3600. Optional.\n+\tServiceAccountImpersonationLifetimeSeconds int\n+\t// ClientSecret is currently only required if token_info endpoint also\n+\t// needs to be called with the generated GCP access token. When provided, STS will be\n+\t// called with additional basic authentication using ClientId as username and ClientSecret as password. Optional.\n+\tClientSecret string\n+\t// ClientID is only required in conjunction with ClientSecret, as described above. Optional.\n+\tClientID string\n+\t// CredentialSource contains the necessary information to retrieve the token itself, as well\n+\t// as some environmental information. One of SubjectTokenSupplier, AWSSecurityCredentialSupplier or\n+\t// CredentialSource must be provided. Optional.\n+\tCredentialSource *CredentialSource\n+\t// QuotaProjectID is injected by gCloud. If the value is non-empty, the Auth libraries\n+\t// will set the x-goog-user-project header which overrides the project associated with the credentials. Optional.\n+\tQuotaProjectID string\n+\t// Scopes contains the desired scopes for the returned access token. Optional.\n+\tScopes []string\n+\t// WorkforcePoolUserProject is the workforce pool user project number when the credential\n+\t// corresponds to a workforce pool and not a workload identity pool.\n+\t// The underlying principal must still have serviceusage.services.use IAM\n+\t// permission to use the project for billing/quota. Optional.\n+\tWorkforcePoolUserProject string\n+\t// SubjectTokenSupplier is an optional token supplier for OIDC/SAML credentials.\n+\t// One of SubjectTokenSupplier, AWSSecurityCredentialSupplier or CredentialSource must be provided. Optional.\n+\tSubjectTokenSupplier SubjectTokenSupplier\n+\t// AwsSecurityCredentialsSupplier is an AWS Security Credential supplier for AWS credentials.\n+\t// One of SubjectTokenSupplier, AWSSecurityCredentialSupplier or CredentialSource must be provided. Optional.\n+\tAwsSecurityCredentialsSupplier AwsSecurityCredentialsSupplier\n+\t// UniverseDomain is the default service domain for a given Cloud universe.\n+\t// This value will be used in the default STS token URL. The default value\n+\t// is \"googleapis.com\". It will not be used if TokenURL is set. Optional.\n+\tUniverseDomain string\n+}\n+\n+var (\n+\tvalidWorkforceAudiencePattern *regexp.Regexp = regexp.MustCompile(`//iam\\.googleapis\\.com/locations/[^/]+/workforcePools/`)\n+)\n+\n+func validateWorkforceAudience(input string) bool {\n+\treturn validWorkforceAudiencePattern.MatchString(input)\n+}\n+\n+// NewTokenSource Returns an external account TokenSource using the provided external account config.\n+func NewTokenSource(ctx context.Context, conf Config) (oauth2.TokenSource, error) {\n+\tif conf.Audience == \"\" {\n+\t\treturn nil, fmt.Errorf(\"oauth2/google/externalaccount: Audience must be set\")\n+\t}\n+\tif conf.SubjectTokenType == \"\" {\n+\t\treturn nil, fmt.Errorf(\"oauth2/google/externalaccount: Subject token type must be set\")\n+\t}\n+\tif conf.WorkforcePoolUserProject != \"\" {\n+\t\tvalid := validateWorkforceAudience(conf.Audience)\n+\t\tif !valid {\n+\t\t\treturn nil, fmt.Errorf(\"oauth2/google/externalaccount: Workforce pool user project should not be set for non-workforce pool credentials\")\n+\t\t}\n+\t}\n+\tcount := 0\n+\tif conf.CredentialSource != nil {\n+\t\tcount++\n+\t}\n+\tif conf.SubjectTokenSupplier != nil {\n+\t\tcount++\n+\t}\n+\tif conf.AwsSecurityCredentialsSupplier != nil {\n+\t\tcount++\n+\t}\n+\tif count == 0 {\n+\t\treturn nil, fmt.Errorf(\"oauth2/google/externalaccount: One of CredentialSource, SubjectTokenSupplier, or AwsSecurityCredentialsSupplier must be set\")\n+\t}\n+\tif count > 1 {\n+\t\treturn nil, fmt.Errorf(\"oauth2/google/externalaccount: Only one of CredentialSource, SubjectTokenSupplier, or AwsSecurityCredentialsSupplier must be set\")\n+\t}\n+\treturn conf.tokenSource(ctx, \"https\")\n+}\n+\n+// tokenSource is a private function that's directly called by some of the tests,\n+// because the unit test URLs are mocked, and would otherwise fail the\n+// validity check.\n+func (c *Config) tokenSource(ctx context.Context, scheme string) (oauth2.TokenSource, error) {\n+\n+\tts := tokenSource{\n+\t\tctx:  ctx,\n+\t\tconf: c,\n+\t}\n+\tif c.ServiceAccountImpersonationURL == \"\" {\n+\t\treturn oauth2.ReuseTokenSource(nil, ts), nil\n+\t}\n+\tscopes := c.Scopes\n+\tts.conf.Scopes = []string{\"https://www.googleapis.com/auth/cloud-platform\"}\n+\timp := impersonate.ImpersonateTokenSource{\n+\t\tCtx:                  ctx,\n+\t\tURL:                  c.ServiceAccountImpersonationURL,\n+\t\tScopes:               scopes,\n+\t\tTs:                   oauth2.ReuseTokenSource(nil, ts),\n+\t\tTokenLifetimeSeconds: c.ServiceAccountImpersonationLifetimeSeconds,\n+\t}\n+\treturn oauth2.ReuseTokenSource(nil, imp), nil\n+}\n+\n+// Subject token file types.\n+const (\n+\tfileTypeText = \"text\"\n+\tfileTypeJSON = \"json\"\n+)\n+\n+// Format contains information needed to retireve a subject token for URL or File sourced credentials.\n+type Format struct {\n+\t// Type should be either \"text\" or \"json\". This determines whether the file or URL sourced credentials\n+\t// expect a simple text subject token or if the subject token will be contained in a JSON object.\n+\t// When not provided \"text\" type is assumed.\n+\tType string `json:\"type\"`\n+\t// SubjectTokenFieldName is only required for JSON format. This is the field name that the credentials will check\n+\t// for the subject token in the file or URL response. This would be \"access_token\" for azure.\n+\tSubjectTokenFieldName string `json:\"subject_token_field_name\"`\n+}\n+\n+// CredentialSource stores the information necessary to retrieve the credentials for the STS exchange.\n+type CredentialSource struct {\n+\t// File is the location for file sourced credentials.\n+\t// One field amongst File, URL, Executable, or EnvironmentID should be provided, depending on the kind of credential in question.\n+\tFile string `json:\"file\"`\n+\n+\t// Url is the URL to call for URL sourced credentials.\n+\t// One field amongst File, URL, Executable, or EnvironmentID should be provided, depending on the kind of credential in question.\n+\tURL string `json:\"url\"`\n+\t// Headers are the headers to attach to the request for URL sourced credentials.\n+\tHeaders map[string]string `json:\"headers\"`\n+\n+\t// Executable is the configuration object for executable sourced credentials.\n+\t// One field amongst File, URL, Executable, or EnvironmentID should be provided, depending on the kind of credential in question.\n+\tExecutable *ExecutableConfig `json:\"executable\"`\n+\n+\t// EnvironmentID is the EnvironmentID used for AWS sourced credentials. This should start with \"AWS\".\n+\t// One field amongst File, URL, Executable, or EnvironmentID should be provided, depending on the kind of credential in question.\n+\tEnvironmentID string `json:\"environment_id\"`\n+\t// RegionURL is the metadata URL to retrieve the region from for EC2 AWS credentials.\n+\tRegionURL string `json:\"region_url\"`\n+\t// RegionalCredVerificationURL is the AWS regional credential verification URL, will default to\n+\t//  \"https://sts.{region}.amazonaws.com?Action=GetCallerIdentity&Version=2011-06-15\" if not provided.\"\n+\tRegionalCredVerificationURL string `json:\"regional_cred_verification_url\"`\n+\t// IMDSv2SessionTokenURL is the URL to retrieve the session token when using IMDSv2 in AWS.\n+\tIMDSv2SessionTokenURL string `json:\"imdsv2_session_token_url\"`\n+\t// Format is the format type for the subject token. Used for File and URL sourced credentials. Expected values are \"text\" or \"json\".\n+\tFormat Format `json:\"format\"`\n+}\n+\n+// ExecutableConfig contains information needed for executable sourced credentials.\n+type ExecutableConfig struct {\n+\t// Command is the the full command to run to retrieve the subject token.\n+\t// This can include arguments. Must be an absolute path for the program. Required.\n+\tCommand string `json:\"command\"`\n+\t// TimeoutMillis is the timeout duration, in milliseconds. Defaults to 30000 milliseconds when not provided. Optional.\n+\tTimeoutMillis *int `json:\"timeout_millis\"`\n+\t// OutputFile is the absolute path to the output file where the executable will cache the response.\n+\t// If specified the auth libraries will first check this location before running the executable. Optional.\n+\tOutputFile string `json:\"output_file\"`\n+}\n+\n+// SubjectTokenSupplier can be used to supply a subject token to exchange for a GCP access token.\n+type SubjectTokenSupplier interface {\n+\t// SubjectToken should return a valid subject token or an error.\n+\t// The external account token source does not cache the returned subject token, so caching\n+\t// logic should be implemented in the supplier to prevent multiple requests for the same subject token.\n+\tSubjectToken(ctx context.Context, options SupplierOptions) (string, error)\n+}\n+\n+// AWSSecurityCredentialsSupplier can be used to supply AwsSecurityCredentials and an AWS Region to\n+// exchange for a GCP access token.\n+type AwsSecurityCredentialsSupplier interface {\n+\t// AwsRegion should return the AWS region or an error.\n+\tAwsRegion(ctx context.Context, options SupplierOptions) (string, error)\n+\t// GetAwsSecurityCredentials should return a valid set of AwsSecurityCredentials or an error.\n+\t// The external account token source does not cache the returned security credentials, so caching\n+\t// logic should be implemented in the supplier to prevent multiple requests for the same security credentials.\n+\tAwsSecurityCredentials(ctx context.Context, options SupplierOptions) (*AwsSecurityCredentials, error)\n+}\n+\n+// SupplierOptions contains information about the requested subject token or AWS security credentials from the\n+// Google external account credential.\n+type SupplierOptions struct {\n+\t// Audience is the requested audience for the external account credential.\n+\tAudience string\n+\t// Subject token type is the requested subject token type for the external account credential. Expected values include:\n+\t// “urn:ietf:params:oauth:token-type:jwt”\n+\t// “urn:ietf:params:oauth:token-type:id-token”\n+\t// “urn:ietf:params:oauth:token-type:saml2”\n+\t// “urn:ietf:params:aws:token-type:aws4_request”\n+\tSubjectTokenType string\n+}\n+\n+// tokenURL returns the default STS token endpoint with the configured universe\n+// domain.\n+func (c *Config) tokenURL() string {\n+\tif c.UniverseDomain == \"\" {\n+\t\treturn strings.Replace(defaultTokenURL, universeDomainPlaceholder, defaultUniverseDomain, 1)\n+\t}\n+\treturn strings.Replace(defaultTokenURL, universeDomainPlaceholder, c.UniverseDomain, 1)\n+}\n+\n+// parse determines the type of CredentialSource needed.\n+func (c *Config) parse(ctx context.Context) (baseCredentialSource, error) {\n+\t//set Defaults\n+\tif c.TokenURL == \"\" {\n+\t\tc.TokenURL = c.tokenURL()\n+\t}\n+\tsupplierOptions := SupplierOptions{Audience: c.Audience, SubjectTokenType: c.SubjectTokenType}\n+\n+\tif c.AwsSecurityCredentialsSupplier != nil {\n+\t\tawsCredSource := awsCredentialSource{\n+\t\t\tawsSecurityCredentialsSupplier: c.AwsSecurityCredentialsSupplier,\n+\t\t\ttargetResource:                 c.Audience,\n+\t\t\tsupplierOptions:                supplierOptions,\n+\t\t\tctx:                            ctx,\n+\t\t}\n+\t\treturn awsCredSource, nil\n+\t} else if c.SubjectTokenSupplier != nil {\n+\t\treturn programmaticRefreshCredentialSource{subjectTokenSupplier: c.SubjectTokenSupplier, supplierOptions: supplierOptions, ctx: ctx}, nil\n+\t} else if len(c.CredentialSource.EnvironmentID) > 3 && c.CredentialSource.EnvironmentID[:3] == \"aws\" {\n+\t\tif awsVersion, err := strconv.Atoi(c.CredentialSource.EnvironmentID[3:]); err == nil {\n+\t\t\tif awsVersion != 1 {\n+\t\t\t\treturn nil, fmt.Errorf(\"oauth2/google/externalaccount: aws version '%d' is not supported in the current build\", awsVersion)\n+\t\t\t}\n+\n+\t\t\tawsCredSource := awsCredentialSource{\n+\t\t\t\tenvironmentID:               c.CredentialSource.EnvironmentID,\n+\t\t\t\tregionURL:                   c.CredentialSource.RegionURL,\n+\t\t\t\tregionalCredVerificationURL: c.CredentialSource.RegionalCredVerificationURL,\n+\t\t\t\tcredVerificationURL:         c.CredentialSource.URL,\n+\t\t\t\ttargetResource:              c.Audience,\n+\t\t\t\tctx:                         ctx,\n+\t\t\t}\n+\t\t\tif c.CredentialSource.IMDSv2SessionTokenURL != \"\" {\n+\t\t\t\tawsCredSource.imdsv2SessionTokenURL = c.CredentialSource.IMDSv2SessionTokenURL\n+\t\t\t}\n+\n+\t\t\treturn awsCredSource, nil\n+\t\t}\n+\t} else if c.CredentialSource.File != \"\" {\n+\t\treturn fileCredentialSource{File: c.CredentialSource.File, Format: c.CredentialSource.Format}, nil\n+\t} else if c.CredentialSource.URL != \"\" {\n+\t\treturn urlCredentialSource{URL: c.CredentialSource.URL, Headers: c.CredentialSource.Headers, Format: c.CredentialSource.Format, ctx: ctx}, nil\n+\t} else if c.CredentialSource.Executable != nil {\n+\t\treturn createExecutableCredential(ctx, c.CredentialSource.Executable, c)\n+\t}\n+\treturn nil, fmt.Errorf(\"oauth2/google/externalaccount: unable to parse credential source\")\n+}\n+\n+type baseCredentialSource interface {\n+\tcredentialSourceType() string\n+\tsubjectToken() (string, error)\n+}\n+\n+// tokenSource is the source that handles external credentials. It is used to retrieve Tokens.\n+type tokenSource struct {\n+\tctx  context.Context\n+\tconf *Config\n+}\n+\n+func getMetricsHeaderValue(conf *Config, credSource baseCredentialSource) string {\n+\treturn fmt.Sprintf(\"gl-go/%s auth/%s google-byoid-sdk source/%s sa-impersonation/%t config-lifetime/%t\",\n+\t\tgoVersion(),\n+\t\t\"unknown\",\n+\t\tcredSource.credentialSourceType(),\n+\t\tconf.ServiceAccountImpersonationURL != \"\",\n+\t\tconf.ServiceAccountImpersonationLifetimeSeconds != 0)\n+}\n+\n+// Token allows tokenSource to conform to the oauth2.TokenSource interface.\n+func (ts tokenSource) Token() (*oauth2.Token, error) {\n+\tconf := ts.conf\n+\n+\tcredSource, err := conf.parse(ts.ctx)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tsubjectToken, err := credSource.subjectToken()\n+\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tstsRequest := stsexchange.TokenExchangeRequest{\n+\t\tGrantType:          \"urn:ietf:params:oauth:grant-type:token-exchange\",\n+\t\tAudience:           conf.Audience,\n+\t\tScope:              conf.Scopes,\n+\t\tRequestedTokenType: \"urn:ietf:params:oauth:token-type:access_token\",\n+\t\tSubjectToken:       subjectToken,\n+\t\tSubjectTokenType:   conf.SubjectTokenType,\n+\t}\n+\theader := make(http.Header)\n+\theader.Add(\"Content-Type\", \"application/x-www-form-urlencoded\")\n+\theader.Add(\"x-goog-api-client\", getMetricsHeaderValue(conf, credSource))\n+\tclientAuth := stsexchange.ClientAuthentication{\n+\t\tAuthStyle:    oauth2.AuthStyleInHeader,\n+\t\tClientID:     conf.ClientID,\n+\t\tClientSecret: conf.ClientSecret,\n+\t}\n+\tvar options map[string]interface{}\n+\t// Do not pass workforce_pool_user_project when client authentication is used.\n+\t// The client ID is sufficient for determining the user project.\n+\tif conf.WorkforcePoolUserProject != \"\" && conf.ClientID == \"\" {\n+\t\toptions = map[string]interface{}{\n+\t\t\t\"userProject\": conf.WorkforcePoolUserProject,\n+\t\t}\n+\t}\n+\tstsResp, err := stsexchange.ExchangeToken(ts.ctx, conf.TokenURL, &stsRequest, clientAuth, header, options)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\taccessToken := &oauth2.Token{\n+\t\tAccessToken: stsResp.AccessToken,\n+\t\tTokenType:   stsResp.TokenType,\n+\t}\n+\tif stsResp.ExpiresIn < 0 {\n+\t\treturn nil, fmt.Errorf(\"oauth2/google/externalaccount: got invalid expiry from security token service\")\n+\t} else if stsResp.ExpiresIn >= 0 {\n+\t\taccessToken.Expiry = now().Add(time.Duration(stsResp.ExpiresIn) * time.Second)\n+\t}\n+\n+\tif stsResp.RefreshToken != \"\" {\n+\t\taccessToken.RefreshToken = stsResp.RefreshToken\n+\t}\n+\treturn accessToken, nil\n+}"
    },
    {
      "sha": "dca5681a46be358825d52982571f99f8af3a8a61",
      "filename": "backend/vendor/golang.org/x/oauth2/google/externalaccount/executablecredsource.go",
      "status": "renamed",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fexecutablecredsource.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fexecutablecredsource.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fexecutablecredsource.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -39,51 +39,51 @@ func (nce nonCacheableError) Error() string {\n }\n \n func missingFieldError(source, field string) error {\n-\treturn fmt.Errorf(\"oauth2/google: %v missing `%q` field\", source, field)\n+\treturn fmt.Errorf(\"oauth2/google/externalaccount: %v missing `%q` field\", source, field)\n }\n \n func jsonParsingError(source, data string) error {\n-\treturn fmt.Errorf(\"oauth2/google: unable to parse %v\\nResponse: %v\", source, data)\n+\treturn fmt.Errorf(\"oauth2/google/externalaccount: unable to parse %v\\nResponse: %v\", source, data)\n }\n \n func malformedFailureError() error {\n-\treturn nonCacheableError{\"oauth2/google: response must include `error` and `message` fields when unsuccessful\"}\n+\treturn nonCacheableError{\"oauth2/google/externalaccount: response must include `error` and `message` fields when unsuccessful\"}\n }\n \n func userDefinedError(code, message string) error {\n-\treturn nonCacheableError{fmt.Sprintf(\"oauth2/google: response contains unsuccessful response: (%v) %v\", code, message)}\n+\treturn nonCacheableError{fmt.Sprintf(\"oauth2/google/externalaccount: response contains unsuccessful response: (%v) %v\", code, message)}\n }\n \n func unsupportedVersionError(source string, version int) error {\n-\treturn fmt.Errorf(\"oauth2/google: %v contains unsupported version: %v\", source, version)\n+\treturn fmt.Errorf(\"oauth2/google/externalaccount: %v contains unsupported version: %v\", source, version)\n }\n \n func tokenExpiredError() error {\n-\treturn nonCacheableError{\"oauth2/google: the token returned by the executable is expired\"}\n+\treturn nonCacheableError{\"oauth2/google/externalaccount: the token returned by the executable is expired\"}\n }\n \n func tokenTypeError(source string) error {\n-\treturn fmt.Errorf(\"oauth2/google: %v contains unsupported token type\", source)\n+\treturn fmt.Errorf(\"oauth2/google/externalaccount: %v contains unsupported token type\", source)\n }\n \n func exitCodeError(exitCode int) error {\n-\treturn fmt.Errorf(\"oauth2/google: executable command failed with exit code %v\", exitCode)\n+\treturn fmt.Errorf(\"oauth2/google/externalaccount: executable command failed with exit code %v\", exitCode)\n }\n \n func executableError(err error) error {\n-\treturn fmt.Errorf(\"oauth2/google: executable command failed: %v\", err)\n+\treturn fmt.Errorf(\"oauth2/google/externalaccount: executable command failed: %v\", err)\n }\n \n func executablesDisallowedError() error {\n-\treturn errors.New(\"oauth2/google: executables need to be explicitly allowed (set GOOGLE_EXTERNAL_ACCOUNT_ALLOW_EXECUTABLES to '1') to run\")\n+\treturn errors.New(\"oauth2/google/externalaccount: executables need to be explicitly allowed (set GOOGLE_EXTERNAL_ACCOUNT_ALLOW_EXECUTABLES to '1') to run\")\n }\n \n func timeoutRangeError() error {\n-\treturn errors.New(\"oauth2/google: invalid `timeout_millis` field — executable timeout must be between 5 and 120 seconds\")\n+\treturn errors.New(\"oauth2/google/externalaccount: invalid `timeout_millis` field — executable timeout must be between 5 and 120 seconds\")\n }\n \n func commandMissingError() error {\n-\treturn errors.New(\"oauth2/google: missing `command` field — executable command must be provided\")\n+\treturn errors.New(\"oauth2/google/externalaccount: missing `command` field — executable command must be provided\")\n }\n \n type environment interface {\n@@ -146,7 +146,7 @@ type executableCredentialSource struct {\n \n // CreateExecutableCredential creates an executableCredentialSource given an ExecutableConfig.\n // It also performs defaulting and type conversions.\n-func CreateExecutableCredential(ctx context.Context, ec *ExecutableConfig, config *Config) (executableCredentialSource, error) {\n+func createExecutableCredential(ctx context.Context, ec *ExecutableConfig, config *Config) (executableCredentialSource, error) {\n \tif ec.Command == \"\" {\n \t\treturn executableCredentialSource{}, commandMissingError()\n \t}",
      "previous_filename": "backend/vendor/golang.org/x/oauth2/google/internal/externalaccount/executablecredsource.go"
    },
    {
      "sha": "33766b97226a3d0353225cfecfacfd2c23b258cd",
      "filename": "backend/vendor/golang.org/x/oauth2/google/externalaccount/filecredsource.go",
      "status": "renamed",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Ffilecredsource.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Ffilecredsource.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Ffilecredsource.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -16,7 +16,7 @@ import (\n \n type fileCredentialSource struct {\n \tFile   string\n-\tFormat format\n+\tFormat Format\n }\n \n func (cs fileCredentialSource) credentialSourceType() string {\n@@ -26,36 +26,36 @@ func (cs fileCredentialSource) credentialSourceType() string {\n func (cs fileCredentialSource) subjectToken() (string, error) {\n \ttokenFile, err := os.Open(cs.File)\n \tif err != nil {\n-\t\treturn \"\", fmt.Errorf(\"oauth2/google: failed to open credential file %q\", cs.File)\n+\t\treturn \"\", fmt.Errorf(\"oauth2/google/externalaccount: failed to open credential file %q\", cs.File)\n \t}\n \tdefer tokenFile.Close()\n \ttokenBytes, err := ioutil.ReadAll(io.LimitReader(tokenFile, 1<<20))\n \tif err != nil {\n-\t\treturn \"\", fmt.Errorf(\"oauth2/google: failed to read credential file: %v\", err)\n+\t\treturn \"\", fmt.Errorf(\"oauth2/google/externalaccount: failed to read credential file: %v\", err)\n \t}\n \ttokenBytes = bytes.TrimSpace(tokenBytes)\n \tswitch cs.Format.Type {\n \tcase \"json\":\n \t\tjsonData := make(map[string]interface{})\n \t\terr = json.Unmarshal(tokenBytes, &jsonData)\n \t\tif err != nil {\n-\t\t\treturn \"\", fmt.Errorf(\"oauth2/google: failed to unmarshal subject token file: %v\", err)\n+\t\t\treturn \"\", fmt.Errorf(\"oauth2/google/externalaccount: failed to unmarshal subject token file: %v\", err)\n \t\t}\n \t\tval, ok := jsonData[cs.Format.SubjectTokenFieldName]\n \t\tif !ok {\n-\t\t\treturn \"\", errors.New(\"oauth2/google: provided subject_token_field_name not found in credentials\")\n+\t\t\treturn \"\", errors.New(\"oauth2/google/externalaccount: provided subject_token_field_name not found in credentials\")\n \t\t}\n \t\ttoken, ok := val.(string)\n \t\tif !ok {\n-\t\t\treturn \"\", errors.New(\"oauth2/google: improperly formatted subject token\")\n+\t\t\treturn \"\", errors.New(\"oauth2/google/externalaccount: improperly formatted subject token\")\n \t\t}\n \t\treturn token, nil\n \tcase \"text\":\n \t\treturn string(tokenBytes), nil\n \tcase \"\":\n \t\treturn string(tokenBytes), nil\n \tdefault:\n-\t\treturn \"\", errors.New(\"oauth2/google: invalid credential_source file format type\")\n+\t\treturn \"\", errors.New(\"oauth2/google/externalaccount: invalid credential_source file format type\")\n \t}\n \n }",
      "previous_filename": "backend/vendor/golang.org/x/oauth2/google/internal/externalaccount/filecredsource.go"
    },
    {
      "sha": "1d5aad2e2d924f9e9f420d80afbce9f209ea3f11",
      "filename": "backend/vendor/golang.org/x/oauth2/google/externalaccount/header.go",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fheader.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fheader.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fheader.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "previous_filename": "backend/vendor/golang.org/x/oauth2/google/internal/externalaccount/header.go"
    },
    {
      "sha": "6c1abdf2da43fb9fc074e0817bffc133a0fac879",
      "filename": "backend/vendor/golang.org/x/oauth2/google/externalaccount/programmaticrefreshcredsource.go",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fprogrammaticrefreshcredsource.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fprogrammaticrefreshcredsource.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fprogrammaticrefreshcredsource.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2024 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package externalaccount\n+\n+import \"context\"\n+\n+type programmaticRefreshCredentialSource struct {\n+\tsupplierOptions      SupplierOptions\n+\tsubjectTokenSupplier SubjectTokenSupplier\n+\tctx                  context.Context\n+}\n+\n+func (cs programmaticRefreshCredentialSource) credentialSourceType() string {\n+\treturn \"programmatic\"\n+}\n+\n+func (cs programmaticRefreshCredentialSource) subjectToken() (string, error) {\n+\treturn cs.subjectTokenSupplier.SubjectToken(cs.ctx, cs.supplierOptions)\n+}"
    },
    {
      "sha": "71a7184e01a100b2b2cfc3b38a1eb43a1af1257b",
      "filename": "backend/vendor/golang.org/x/oauth2/google/externalaccount/urlcredsource.go",
      "status": "renamed",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Furlcredsource.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Furlcredsource.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Furlcredsource.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -19,7 +19,7 @@ import (\n type urlCredentialSource struct {\n \tURL     string\n \tHeaders map[string]string\n-\tFormat  format\n+\tFormat  Format\n \tctx     context.Context\n }\n \n@@ -31,7 +31,7 @@ func (cs urlCredentialSource) subjectToken() (string, error) {\n \tclient := oauth2.NewClient(cs.ctx, nil)\n \treq, err := http.NewRequest(\"GET\", cs.URL, nil)\n \tif err != nil {\n-\t\treturn \"\", fmt.Errorf(\"oauth2/google: HTTP request for URL-sourced credential failed: %v\", err)\n+\t\treturn \"\", fmt.Errorf(\"oauth2/google/externalaccount: HTTP request for URL-sourced credential failed: %v\", err)\n \t}\n \treq = req.WithContext(cs.ctx)\n \n@@ -40,40 +40,40 @@ func (cs urlCredentialSource) subjectToken() (string, error) {\n \t}\n \tresp, err := client.Do(req)\n \tif err != nil {\n-\t\treturn \"\", fmt.Errorf(\"oauth2/google: invalid response when retrieving subject token: %v\", err)\n+\t\treturn \"\", fmt.Errorf(\"oauth2/google/externalaccount: invalid response when retrieving subject token: %v\", err)\n \t}\n \tdefer resp.Body.Close()\n \n \trespBody, err := ioutil.ReadAll(io.LimitReader(resp.Body, 1<<20))\n \tif err != nil {\n-\t\treturn \"\", fmt.Errorf(\"oauth2/google: invalid body in subject token URL query: %v\", err)\n+\t\treturn \"\", fmt.Errorf(\"oauth2/google/externalaccount: invalid body in subject token URL query: %v\", err)\n \t}\n \tif c := resp.StatusCode; c < 200 || c > 299 {\n-\t\treturn \"\", fmt.Errorf(\"oauth2/google: status code %d: %s\", c, respBody)\n+\t\treturn \"\", fmt.Errorf(\"oauth2/google/externalaccount: status code %d: %s\", c, respBody)\n \t}\n \n \tswitch cs.Format.Type {\n \tcase \"json\":\n \t\tjsonData := make(map[string]interface{})\n \t\terr = json.Unmarshal(respBody, &jsonData)\n \t\tif err != nil {\n-\t\t\treturn \"\", fmt.Errorf(\"oauth2/google: failed to unmarshal subject token file: %v\", err)\n+\t\t\treturn \"\", fmt.Errorf(\"oauth2/google/externalaccount: failed to unmarshal subject token file: %v\", err)\n \t\t}\n \t\tval, ok := jsonData[cs.Format.SubjectTokenFieldName]\n \t\tif !ok {\n-\t\t\treturn \"\", errors.New(\"oauth2/google: provided subject_token_field_name not found in credentials\")\n+\t\t\treturn \"\", errors.New(\"oauth2/google/externalaccount: provided subject_token_field_name not found in credentials\")\n \t\t}\n \t\ttoken, ok := val.(string)\n \t\tif !ok {\n-\t\t\treturn \"\", errors.New(\"oauth2/google: improperly formatted subject token\")\n+\t\t\treturn \"\", errors.New(\"oauth2/google/externalaccount: improperly formatted subject token\")\n \t\t}\n \t\treturn token, nil\n \tcase \"text\":\n \t\treturn string(respBody), nil\n \tcase \"\":\n \t\treturn string(respBody), nil\n \tdefault:\n-\t\treturn \"\", errors.New(\"oauth2/google: invalid credential_source file format type\")\n+\t\treturn \"\", errors.New(\"oauth2/google/externalaccount: invalid credential_source file format type\")\n \t}\n \n }",
      "previous_filename": "backend/vendor/golang.org/x/oauth2/google/internal/externalaccount/urlcredsource.go"
    },
    {
      "sha": "ba931c2c3dedb7a7819d0d9762666e94b15880cc",
      "filename": "backend/vendor/golang.org/x/oauth2/google/google.go",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fgoogle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fgoogle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fgoogle.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -15,8 +15,9 @@ import (\n \n \t\"cloud.google.com/go/compute/metadata\"\n \t\"golang.org/x/oauth2\"\n-\t\"golang.org/x/oauth2/google/internal/externalaccount\"\n+\t\"golang.org/x/oauth2/google/externalaccount\"\n \t\"golang.org/x/oauth2/google/internal/externalaccountauthorizeduser\"\n+\t\"golang.org/x/oauth2/google/internal/impersonate\"\n \t\"golang.org/x/oauth2/jwt\"\n )\n \n@@ -200,12 +201,12 @@ func (f *credentialsFile) tokenSource(ctx context.Context, params CredentialsPar\n \t\t\tServiceAccountImpersonationLifetimeSeconds: f.ServiceAccountImpersonation.TokenLifetimeSeconds,\n \t\t\tClientSecret:             f.ClientSecret,\n \t\t\tClientID:                 f.ClientID,\n-\t\t\tCredentialSource:         f.CredentialSource,\n+\t\t\tCredentialSource:         &f.CredentialSource,\n \t\t\tQuotaProjectID:           f.QuotaProjectID,\n \t\t\tScopes:                   params.Scopes,\n \t\t\tWorkforcePoolUserProject: f.WorkforcePoolUserProject,\n \t\t}\n-\t\treturn cfg.TokenSource(ctx)\n+\t\treturn externalaccount.NewTokenSource(ctx, *cfg)\n \tcase externalAccountAuthorizedUserKey:\n \t\tcfg := &externalaccountauthorizeduser.Config{\n \t\t\tAudience:       f.Audience,\n@@ -228,7 +229,7 @@ func (f *credentialsFile) tokenSource(ctx context.Context, params CredentialsPar\n \t\tif err != nil {\n \t\t\treturn nil, err\n \t\t}\n-\t\timp := externalaccount.ImpersonateTokenSource{\n+\t\timp := impersonate.ImpersonateTokenSource{\n \t\t\tCtx:       ctx,\n \t\t\tURL:       f.ServiceAccountImpersonationURL,\n \t\t\tScopes:    params.Scopes,"
    },
    {
      "sha": "33288d36773415e72d82c88a64d7df4ab53c8027",
      "filename": "backend/vendor/golang.org/x/oauth2/google/internal/externalaccount/basecredentials.go",
      "status": "removed",
      "additions": 0,
      "deletions": 254,
      "changes": 254,
      "blob_url": "https://github.com/umputun/remark42/blob/e0423b8683d7d5a1f6817af22193fb3f9ba9348d/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fbasecredentials.go",
      "raw_url": "https://github.com/umputun/remark42/raw/e0423b8683d7d5a1f6817af22193fb3f9ba9348d/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fbasecredentials.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fbasecredentials.go?ref=e0423b8683d7d5a1f6817af22193fb3f9ba9348d",
      "patch": "@@ -1,254 +0,0 @@\n-// Copyright 2020 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package externalaccount\n-\n-import (\n-\t\"context\"\n-\t\"fmt\"\n-\t\"net/http\"\n-\t\"regexp\"\n-\t\"strconv\"\n-\t\"time\"\n-\n-\t\"golang.org/x/oauth2\"\n-\t\"golang.org/x/oauth2/google/internal/stsexchange\"\n-)\n-\n-// now aliases time.Now for testing\n-var now = func() time.Time {\n-\treturn time.Now().UTC()\n-}\n-\n-// Config stores the configuration for fetching tokens with external credentials.\n-type Config struct {\n-\t// Audience is the Secure Token Service (STS) audience which contains the resource name for the workload\n-\t// identity pool or the workforce pool and the provider identifier in that pool.\n-\tAudience string\n-\t// SubjectTokenType is the STS token type based on the Oauth2.0 token exchange spec\n-\t// e.g. `urn:ietf:params:oauth:token-type:jwt`.\n-\tSubjectTokenType string\n-\t// TokenURL is the STS token exchange endpoint.\n-\tTokenURL string\n-\t// TokenInfoURL is the token_info endpoint used to retrieve the account related information (\n-\t// user attributes like account identifier, eg. email, username, uid, etc). This is\n-\t// needed for gCloud session account identification.\n-\tTokenInfoURL string\n-\t// ServiceAccountImpersonationURL is the URL for the service account impersonation request. This is only\n-\t// required for workload identity pools when APIs to be accessed have not integrated with UberMint.\n-\tServiceAccountImpersonationURL string\n-\t// ServiceAccountImpersonationLifetimeSeconds is the number of seconds the service account impersonation\n-\t// token will be valid for.\n-\tServiceAccountImpersonationLifetimeSeconds int\n-\t// ClientSecret is currently only required if token_info endpoint also\n-\t// needs to be called with the generated GCP access token. When provided, STS will be\n-\t// called with additional basic authentication using client_id as username and client_secret as password.\n-\tClientSecret string\n-\t// ClientID is only required in conjunction with ClientSecret, as described above.\n-\tClientID string\n-\t// CredentialSource contains the necessary information to retrieve the token itself, as well\n-\t// as some environmental information.\n-\tCredentialSource CredentialSource\n-\t// QuotaProjectID is injected by gCloud. If the value is non-empty, the Auth libraries\n-\t// will set the x-goog-user-project which overrides the project associated with the credentials.\n-\tQuotaProjectID string\n-\t// Scopes contains the desired scopes for the returned access token.\n-\tScopes []string\n-\t// The optional workforce pool user project number when the credential\n-\t// corresponds to a workforce pool and not a workload identity pool.\n-\t// The underlying principal must still have serviceusage.services.use IAM\n-\t// permission to use the project for billing/quota.\n-\tWorkforcePoolUserProject string\n-}\n-\n-var (\n-\tvalidWorkforceAudiencePattern *regexp.Regexp = regexp.MustCompile(`//iam\\.googleapis\\.com/locations/[^/]+/workforcePools/`)\n-)\n-\n-func validateWorkforceAudience(input string) bool {\n-\treturn validWorkforceAudiencePattern.MatchString(input)\n-}\n-\n-// TokenSource Returns an external account TokenSource struct. This is to be called by package google to construct a google.Credentials.\n-func (c *Config) TokenSource(ctx context.Context) (oauth2.TokenSource, error) {\n-\treturn c.tokenSource(ctx, \"https\")\n-}\n-\n-// tokenSource is a private function that's directly called by some of the tests,\n-// because the unit test URLs are mocked, and would otherwise fail the\n-// validity check.\n-func (c *Config) tokenSource(ctx context.Context, scheme string) (oauth2.TokenSource, error) {\n-\tif c.WorkforcePoolUserProject != \"\" {\n-\t\tvalid := validateWorkforceAudience(c.Audience)\n-\t\tif !valid {\n-\t\t\treturn nil, fmt.Errorf(\"oauth2/google: workforce_pool_user_project should not be set for non-workforce pool credentials\")\n-\t\t}\n-\t}\n-\n-\tts := tokenSource{\n-\t\tctx:  ctx,\n-\t\tconf: c,\n-\t}\n-\tif c.ServiceAccountImpersonationURL == \"\" {\n-\t\treturn oauth2.ReuseTokenSource(nil, ts), nil\n-\t}\n-\tscopes := c.Scopes\n-\tts.conf.Scopes = []string{\"https://www.googleapis.com/auth/cloud-platform\"}\n-\timp := ImpersonateTokenSource{\n-\t\tCtx:                  ctx,\n-\t\tURL:                  c.ServiceAccountImpersonationURL,\n-\t\tScopes:               scopes,\n-\t\tTs:                   oauth2.ReuseTokenSource(nil, ts),\n-\t\tTokenLifetimeSeconds: c.ServiceAccountImpersonationLifetimeSeconds,\n-\t}\n-\treturn oauth2.ReuseTokenSource(nil, imp), nil\n-}\n-\n-// Subject token file types.\n-const (\n-\tfileTypeText = \"text\"\n-\tfileTypeJSON = \"json\"\n-)\n-\n-type format struct {\n-\t// Type is either \"text\" or \"json\". When not provided \"text\" type is assumed.\n-\tType string `json:\"type\"`\n-\t// SubjectTokenFieldName is only required for JSON format. This would be \"access_token\" for azure.\n-\tSubjectTokenFieldName string `json:\"subject_token_field_name\"`\n-}\n-\n-// CredentialSource stores the information necessary to retrieve the credentials for the STS exchange.\n-// One field amongst File, URL, and Executable should be filled, depending on the kind of credential in question.\n-// The EnvironmentID should start with AWS if being used for an AWS credential.\n-type CredentialSource struct {\n-\tFile string `json:\"file\"`\n-\n-\tURL     string            `json:\"url\"`\n-\tHeaders map[string]string `json:\"headers\"`\n-\n-\tExecutable *ExecutableConfig `json:\"executable\"`\n-\n-\tEnvironmentID               string `json:\"environment_id\"`\n-\tRegionURL                   string `json:\"region_url\"`\n-\tRegionalCredVerificationURL string `json:\"regional_cred_verification_url\"`\n-\tCredVerificationURL         string `json:\"cred_verification_url\"`\n-\tIMDSv2SessionTokenURL       string `json:\"imdsv2_session_token_url\"`\n-\tFormat                      format `json:\"format\"`\n-}\n-\n-type ExecutableConfig struct {\n-\tCommand       string `json:\"command\"`\n-\tTimeoutMillis *int   `json:\"timeout_millis\"`\n-\tOutputFile    string `json:\"output_file\"`\n-}\n-\n-// parse determines the type of CredentialSource needed.\n-func (c *Config) parse(ctx context.Context) (baseCredentialSource, error) {\n-\tif len(c.CredentialSource.EnvironmentID) > 3 && c.CredentialSource.EnvironmentID[:3] == \"aws\" {\n-\t\tif awsVersion, err := strconv.Atoi(c.CredentialSource.EnvironmentID[3:]); err == nil {\n-\t\t\tif awsVersion != 1 {\n-\t\t\t\treturn nil, fmt.Errorf(\"oauth2/google: aws version '%d' is not supported in the current build\", awsVersion)\n-\t\t\t}\n-\n-\t\t\tawsCredSource := awsCredentialSource{\n-\t\t\t\tEnvironmentID:               c.CredentialSource.EnvironmentID,\n-\t\t\t\tRegionURL:                   c.CredentialSource.RegionURL,\n-\t\t\t\tRegionalCredVerificationURL: c.CredentialSource.RegionalCredVerificationURL,\n-\t\t\t\tCredVerificationURL:         c.CredentialSource.URL,\n-\t\t\t\tTargetResource:              c.Audience,\n-\t\t\t\tctx:                         ctx,\n-\t\t\t}\n-\t\t\tif c.CredentialSource.IMDSv2SessionTokenURL != \"\" {\n-\t\t\t\tawsCredSource.IMDSv2SessionTokenURL = c.CredentialSource.IMDSv2SessionTokenURL\n-\t\t\t}\n-\n-\t\t\treturn awsCredSource, nil\n-\t\t}\n-\t} else if c.CredentialSource.File != \"\" {\n-\t\treturn fileCredentialSource{File: c.CredentialSource.File, Format: c.CredentialSource.Format}, nil\n-\t} else if c.CredentialSource.URL != \"\" {\n-\t\treturn urlCredentialSource{URL: c.CredentialSource.URL, Headers: c.CredentialSource.Headers, Format: c.CredentialSource.Format, ctx: ctx}, nil\n-\t} else if c.CredentialSource.Executable != nil {\n-\t\treturn CreateExecutableCredential(ctx, c.CredentialSource.Executable, c)\n-\t}\n-\treturn nil, fmt.Errorf(\"oauth2/google: unable to parse credential source\")\n-}\n-\n-type baseCredentialSource interface {\n-\tcredentialSourceType() string\n-\tsubjectToken() (string, error)\n-}\n-\n-// tokenSource is the source that handles external credentials. It is used to retrieve Tokens.\n-type tokenSource struct {\n-\tctx  context.Context\n-\tconf *Config\n-}\n-\n-func getMetricsHeaderValue(conf *Config, credSource baseCredentialSource) string {\n-\treturn fmt.Sprintf(\"gl-go/%s auth/%s google-byoid-sdk source/%s sa-impersonation/%t config-lifetime/%t\",\n-\t\tgoVersion(),\n-\t\t\"unknown\",\n-\t\tcredSource.credentialSourceType(),\n-\t\tconf.ServiceAccountImpersonationURL != \"\",\n-\t\tconf.ServiceAccountImpersonationLifetimeSeconds != 0)\n-}\n-\n-// Token allows tokenSource to conform to the oauth2.TokenSource interface.\n-func (ts tokenSource) Token() (*oauth2.Token, error) {\n-\tconf := ts.conf\n-\n-\tcredSource, err := conf.parse(ts.ctx)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\tsubjectToken, err := credSource.subjectToken()\n-\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\tstsRequest := stsexchange.TokenExchangeRequest{\n-\t\tGrantType:          \"urn:ietf:params:oauth:grant-type:token-exchange\",\n-\t\tAudience:           conf.Audience,\n-\t\tScope:              conf.Scopes,\n-\t\tRequestedTokenType: \"urn:ietf:params:oauth:token-type:access_token\",\n-\t\tSubjectToken:       subjectToken,\n-\t\tSubjectTokenType:   conf.SubjectTokenType,\n-\t}\n-\theader := make(http.Header)\n-\theader.Add(\"Content-Type\", \"application/x-www-form-urlencoded\")\n-\theader.Add(\"x-goog-api-client\", getMetricsHeaderValue(conf, credSource))\n-\tclientAuth := stsexchange.ClientAuthentication{\n-\t\tAuthStyle:    oauth2.AuthStyleInHeader,\n-\t\tClientID:     conf.ClientID,\n-\t\tClientSecret: conf.ClientSecret,\n-\t}\n-\tvar options map[string]interface{}\n-\t// Do not pass workforce_pool_user_project when client authentication is used.\n-\t// The client ID is sufficient for determining the user project.\n-\tif conf.WorkforcePoolUserProject != \"\" && conf.ClientID == \"\" {\n-\t\toptions = map[string]interface{}{\n-\t\t\t\"userProject\": conf.WorkforcePoolUserProject,\n-\t\t}\n-\t}\n-\tstsResp, err := stsexchange.ExchangeToken(ts.ctx, conf.TokenURL, &stsRequest, clientAuth, header, options)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\n-\taccessToken := &oauth2.Token{\n-\t\tAccessToken: stsResp.AccessToken,\n-\t\tTokenType:   stsResp.TokenType,\n-\t}\n-\tif stsResp.ExpiresIn < 0 {\n-\t\treturn nil, fmt.Errorf(\"oauth2/google: got invalid expiry from security token service\")\n-\t} else if stsResp.ExpiresIn >= 0 {\n-\t\taccessToken.Expiry = now().Add(time.Duration(stsResp.ExpiresIn) * time.Second)\n-\t}\n-\n-\tif stsResp.RefreshToken != \"\" {\n-\t\taccessToken.RefreshToken = stsResp.RefreshToken\n-\t}\n-\treturn accessToken, nil\n-}"
    },
    {
      "sha": "233a78cef2aa540a529647fa056f085ab29e4d1d",
      "filename": "backend/vendor/golang.org/x/oauth2/google/internal/externalaccount/err.go",
      "status": "removed",
      "additions": 0,
      "deletions": 18,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/e0423b8683d7d5a1f6817af22193fb3f9ba9348d/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Ferr.go",
      "raw_url": "https://github.com/umputun/remark42/raw/e0423b8683d7d5a1f6817af22193fb3f9ba9348d/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Ferr.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Ferr.go?ref=e0423b8683d7d5a1f6817af22193fb3f9ba9348d",
      "patch": "@@ -1,18 +0,0 @@\n-// Copyright 2020 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package externalaccount\n-\n-import \"fmt\"\n-\n-// Error for handling OAuth related error responses as stated in rfc6749#5.2.\n-type Error struct {\n-\tCode        string\n-\tURI         string\n-\tDescription string\n-}\n-\n-func (err *Error) Error() string {\n-\treturn fmt.Sprintf(\"got error code %s from %s: %s\", err.Code, err.URI, err.Description)\n-}"
    },
    {
      "sha": "6bc3af110330c4a634d1be92d36d7bab4474216c",
      "filename": "backend/vendor/golang.org/x/oauth2/google/internal/impersonate/impersonate.go",
      "status": "renamed",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fimpersonate%2Fimpersonate.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fimpersonate%2Fimpersonate.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fimpersonate%2Fimpersonate.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-package externalaccount\n+package impersonate\n \n import (\n \t\"bytes\"",
      "previous_filename": "backend/vendor/golang.org/x/oauth2/google/internal/externalaccount/impersonate.go"
    },
    {
      "sha": "b0e41985750285ef58a64c1a48325f288be2ce74",
      "filename": "backend/vendor/golang.org/x/sys/unix/aliases.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Faliases.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Faliases.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Faliases.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build (aix || darwin || dragonfly || freebsd || linux || netbsd || openbsd || solaris || zos) && go1.9\n+//go:build aix || darwin || dragonfly || freebsd || linux || netbsd || openbsd || solaris || zos\n \n package unix\n "
    },
    {
      "sha": "7f602ffd26d4fae392377a8fe27fb6ca41aaa825",
      "filename": "backend/vendor/golang.org/x/sys/unix/mmap_nomremap.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmmap_nomremap.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmmap_nomremap.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmmap_nomremap.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build aix || darwin || dragonfly || freebsd || openbsd || solaris\n+//go:build aix || darwin || dragonfly || freebsd || openbsd || solaris || zos\n \n package unix\n "
    },
    {
      "sha": "2f0fa76e4f65b17d55eba7a6996a43c73f3d3253",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_darwin_libSystem.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin_libSystem.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin_libSystem.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin_libSystem.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build darwin && go1.12\n+//go:build darwin\n \n package unix\n "
    },
    {
      "sha": "2b57e0f73bb8e74b37bbb1a9a641d5aea4ac81f1",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_freebsd.go",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_freebsd.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -13,6 +13,7 @@\n package unix\n \n import (\n+\t\"errors\"\n \t\"sync\"\n \t\"unsafe\"\n )\n@@ -169,25 +170,26 @@ func Getfsstat(buf []Statfs_t, flags int) (n int, err error) {\n func Uname(uname *Utsname) error {\n \tmib := []_C_int{CTL_KERN, KERN_OSTYPE}\n \tn := unsafe.Sizeof(uname.Sysname)\n-\tif err := sysctl(mib, &uname.Sysname[0], &n, nil, 0); err != nil {\n+\t// Suppress ENOMEM errors to be compatible with the C library __xuname() implementation.\n+\tif err := sysctl(mib, &uname.Sysname[0], &n, nil, 0); err != nil && !errors.Is(err, ENOMEM) {\n \t\treturn err\n \t}\n \n \tmib = []_C_int{CTL_KERN, KERN_HOSTNAME}\n \tn = unsafe.Sizeof(uname.Nodename)\n-\tif err := sysctl(mib, &uname.Nodename[0], &n, nil, 0); err != nil {\n+\tif err := sysctl(mib, &uname.Nodename[0], &n, nil, 0); err != nil && !errors.Is(err, ENOMEM) {\n \t\treturn err\n \t}\n \n \tmib = []_C_int{CTL_KERN, KERN_OSRELEASE}\n \tn = unsafe.Sizeof(uname.Release)\n-\tif err := sysctl(mib, &uname.Release[0], &n, nil, 0); err != nil {\n+\tif err := sysctl(mib, &uname.Release[0], &n, nil, 0); err != nil && !errors.Is(err, ENOMEM) {\n \t\treturn err\n \t}\n \n \tmib = []_C_int{CTL_KERN, KERN_VERSION}\n \tn = unsafe.Sizeof(uname.Version)\n-\tif err := sysctl(mib, &uname.Version[0], &n, nil, 0); err != nil {\n+\tif err := sysctl(mib, &uname.Version[0], &n, nil, 0); err != nil && !errors.Is(err, ENOMEM) {\n \t\treturn err\n \t}\n \n@@ -205,7 +207,7 @@ func Uname(uname *Utsname) error {\n \n \tmib = []_C_int{CTL_HW, HW_MACHINE}\n \tn = unsafe.Sizeof(uname.Machine)\n-\tif err := sysctl(mib, &uname.Machine[0], &n, nil, 0); err != nil {\n+\tif err := sysctl(mib, &uname.Machine[0], &n, nil, 0); err != nil && !errors.Is(err, ENOMEM) {\n \t\treturn err\n \t}\n "
    },
    {
      "sha": "5682e2628ad01725e83c46e02d2b84547f29e815",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_linux.go",
      "status": "modified",
      "additions": 99,
      "deletions": 0,
      "changes": 99,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -1849,6 +1849,105 @@ func Dup2(oldfd, newfd int) error {\n //sys\tFsmount(fd int, flags int, mountAttrs int) (fsfd int, err error)\n //sys\tFsopen(fsName string, flags int) (fd int, err error)\n //sys\tFspick(dirfd int, pathName string, flags int) (fd int, err error)\n+\n+//sys\tfsconfig(fd int, cmd uint, key *byte, value *byte, aux int) (err error)\n+\n+func fsconfigCommon(fd int, cmd uint, key string, value *byte, aux int) (err error) {\n+\tvar keyp *byte\n+\tif keyp, err = BytePtrFromString(key); err != nil {\n+\t\treturn\n+\t}\n+\treturn fsconfig(fd, cmd, keyp, value, aux)\n+}\n+\n+// FsconfigSetFlag is equivalent to fsconfig(2) called\n+// with cmd == FSCONFIG_SET_FLAG.\n+//\n+// fd is the filesystem context to act upon.\n+// key the parameter key to set.\n+func FsconfigSetFlag(fd int, key string) (err error) {\n+\treturn fsconfigCommon(fd, FSCONFIG_SET_FLAG, key, nil, 0)\n+}\n+\n+// FsconfigSetString is equivalent to fsconfig(2) called\n+// with cmd == FSCONFIG_SET_STRING.\n+//\n+// fd is the filesystem context to act upon.\n+// key the parameter key to set.\n+// value is the parameter value to set.\n+func FsconfigSetString(fd int, key string, value string) (err error) {\n+\tvar valuep *byte\n+\tif valuep, err = BytePtrFromString(value); err != nil {\n+\t\treturn\n+\t}\n+\treturn fsconfigCommon(fd, FSCONFIG_SET_STRING, key, valuep, 0)\n+}\n+\n+// FsconfigSetBinary is equivalent to fsconfig(2) called\n+// with cmd == FSCONFIG_SET_BINARY.\n+//\n+// fd is the filesystem context to act upon.\n+// key the parameter key to set.\n+// value is the parameter value to set.\n+func FsconfigSetBinary(fd int, key string, value []byte) (err error) {\n+\tif len(value) == 0 {\n+\t\treturn EINVAL\n+\t}\n+\treturn fsconfigCommon(fd, FSCONFIG_SET_BINARY, key, &value[0], len(value))\n+}\n+\n+// FsconfigSetPath is equivalent to fsconfig(2) called\n+// with cmd == FSCONFIG_SET_PATH.\n+//\n+// fd is the filesystem context to act upon.\n+// key the parameter key to set.\n+// path is a non-empty path for specified key.\n+// atfd is a file descriptor at which to start lookup from or AT_FDCWD.\n+func FsconfigSetPath(fd int, key string, path string, atfd int) (err error) {\n+\tvar valuep *byte\n+\tif valuep, err = BytePtrFromString(path); err != nil {\n+\t\treturn\n+\t}\n+\treturn fsconfigCommon(fd, FSCONFIG_SET_PATH, key, valuep, atfd)\n+}\n+\n+// FsconfigSetPathEmpty is equivalent to fsconfig(2) called\n+// with cmd == FSCONFIG_SET_PATH_EMPTY. The same as\n+// FconfigSetPath but with AT_PATH_EMPTY implied.\n+func FsconfigSetPathEmpty(fd int, key string, path string, atfd int) (err error) {\n+\tvar valuep *byte\n+\tif valuep, err = BytePtrFromString(path); err != nil {\n+\t\treturn\n+\t}\n+\treturn fsconfigCommon(fd, FSCONFIG_SET_PATH_EMPTY, key, valuep, atfd)\n+}\n+\n+// FsconfigSetFd is equivalent to fsconfig(2) called\n+// with cmd == FSCONFIG_SET_FD.\n+//\n+// fd is the filesystem context to act upon.\n+// key the parameter key to set.\n+// value is a file descriptor to be assigned to specified key.\n+func FsconfigSetFd(fd int, key string, value int) (err error) {\n+\treturn fsconfigCommon(fd, FSCONFIG_SET_FD, key, nil, value)\n+}\n+\n+// FsconfigCreate is equivalent to fsconfig(2) called\n+// with cmd == FSCONFIG_CMD_CREATE.\n+//\n+// fd is the filesystem context to act upon.\n+func FsconfigCreate(fd int) (err error) {\n+\treturn fsconfig(fd, FSCONFIG_CMD_CREATE, nil, nil, 0)\n+}\n+\n+// FsconfigReconfigure is equivalent to fsconfig(2) called\n+// with cmd == FSCONFIG_CMD_RECONFIGURE.\n+//\n+// fd is the filesystem context to act upon.\n+func FsconfigReconfigure(fd int) (err error) {\n+\treturn fsconfig(fd, FSCONFIG_CMD_RECONFIGURE, nil, nil, 0)\n+}\n+\n //sys\tGetdents(fd int, buf []byte) (n int, err error) = SYS_GETDENTS64\n //sysnb\tGetpgid(pid int) (pgid int, err error)\n "
    },
    {
      "sha": "27c41b6f0a13b731d26aaae713e3847c31b6b1b0",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_zos_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_zos_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_zos_s390x.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -1520,6 +1520,14 @@ func (m *mmapper) Munmap(data []byte) (err error) {\n \treturn nil\n }\n \n+func Mmap(fd int, offset int64, length int, prot int, flags int) (data []byte, err error) {\n+        return mapper.Mmap(fd, offset, length, prot, flags)\n+}\n+\n+func Munmap(b []byte) (err error) {\n+        return mapper.Munmap(b)\n+}\n+\n func Read(fd int, p []byte) (n int, err error) {\n \tn, err = read(fd, p)\n \tif raceenabled {"
    },
    {
      "sha": "87d8612a1dc7c94fb14788cd2b430e9cf73c5cf0",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_linux.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -906,6 +906,16 @@ func Fspick(dirfd int, pathName string, flags int) (fd int, err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func fsconfig(fd int, cmd uint, key *byte, value *byte, aux int) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FSCONFIG, uintptr(fd), uintptr(cmd), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(value)), uintptr(aux), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Getdents(fd int, buf []byte) (n int, err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(buf) > 0 {"
    },
    {
      "sha": "eff6bcdef814ee2c9f8ebcc6bb556edf6f7be1f0",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux.go",
      "status": "modified",
      "additions": 60,
      "deletions": 0,
      "changes": 60,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -836,6 +836,15 @@ const (\n \tFSPICK_EMPTY_PATH       = 0x8\n \n \tFSMOUNT_CLOEXEC = 0x1\n+\n+\tFSCONFIG_SET_FLAG        = 0x0\n+\tFSCONFIG_SET_STRING      = 0x1\n+\tFSCONFIG_SET_BINARY      = 0x2\n+\tFSCONFIG_SET_PATH        = 0x3\n+\tFSCONFIG_SET_PATH_EMPTY  = 0x4\n+\tFSCONFIG_SET_FD          = 0x5\n+\tFSCONFIG_CMD_CREATE      = 0x6\n+\tFSCONFIG_CMD_RECONFIGURE = 0x7\n )\n \n type OpenHow struct {\n@@ -1550,6 +1559,7 @@ const (\n \tIFLA_DEVLINK_PORT                          = 0x3e\n \tIFLA_GSO_IPV4_MAX_SIZE                     = 0x3f\n \tIFLA_GRO_IPV4_MAX_SIZE                     = 0x40\n+\tIFLA_DPLL_PIN                              = 0x41\n \tIFLA_PROTO_DOWN_REASON_UNSPEC              = 0x0\n \tIFLA_PROTO_DOWN_REASON_MASK                = 0x1\n \tIFLA_PROTO_DOWN_REASON_VALUE               = 0x2\n@@ -1565,6 +1575,7 @@ const (\n \tIFLA_INET6_ICMP6STATS                      = 0x6\n \tIFLA_INET6_TOKEN                           = 0x7\n \tIFLA_INET6_ADDR_GEN_MODE                   = 0x8\n+\tIFLA_INET6_RA_MTU                          = 0x9\n \tIFLA_BR_UNSPEC                             = 0x0\n \tIFLA_BR_FORWARD_DELAY                      = 0x1\n \tIFLA_BR_HELLO_TIME                         = 0x2\n@@ -1612,6 +1623,9 @@ const (\n \tIFLA_BR_MCAST_MLD_VERSION                  = 0x2c\n \tIFLA_BR_VLAN_STATS_PER_PORT                = 0x2d\n \tIFLA_BR_MULTI_BOOLOPT                      = 0x2e\n+\tIFLA_BR_MCAST_QUERIER_STATE                = 0x2f\n+\tIFLA_BR_FDB_N_LEARNED                      = 0x30\n+\tIFLA_BR_FDB_MAX_LEARNED                    = 0x31\n \tIFLA_BRPORT_UNSPEC                         = 0x0\n \tIFLA_BRPORT_STATE                          = 0x1\n \tIFLA_BRPORT_PRIORITY                       = 0x2\n@@ -1649,6 +1663,14 @@ const (\n \tIFLA_BRPORT_BACKUP_PORT                    = 0x22\n \tIFLA_BRPORT_MRP_RING_OPEN                  = 0x23\n \tIFLA_BRPORT_MRP_IN_OPEN                    = 0x24\n+\tIFLA_BRPORT_MCAST_EHT_HOSTS_LIMIT          = 0x25\n+\tIFLA_BRPORT_MCAST_EHT_HOSTS_CNT            = 0x26\n+\tIFLA_BRPORT_LOCKED                         = 0x27\n+\tIFLA_BRPORT_MAB                            = 0x28\n+\tIFLA_BRPORT_MCAST_N_GROUPS                 = 0x29\n+\tIFLA_BRPORT_MCAST_MAX_GROUPS               = 0x2a\n+\tIFLA_BRPORT_NEIGH_VLAN_SUPPRESS            = 0x2b\n+\tIFLA_BRPORT_BACKUP_NHID                    = 0x2c\n \tIFLA_INFO_UNSPEC                           = 0x0\n \tIFLA_INFO_KIND                             = 0x1\n \tIFLA_INFO_DATA                             = 0x2\n@@ -1670,6 +1692,9 @@ const (\n \tIFLA_MACVLAN_MACADDR                       = 0x4\n \tIFLA_MACVLAN_MACADDR_DATA                  = 0x5\n \tIFLA_MACVLAN_MACADDR_COUNT                 = 0x6\n+\tIFLA_MACVLAN_BC_QUEUE_LEN                  = 0x7\n+\tIFLA_MACVLAN_BC_QUEUE_LEN_USED             = 0x8\n+\tIFLA_MACVLAN_BC_CUTOFF                     = 0x9\n \tIFLA_VRF_UNSPEC                            = 0x0\n \tIFLA_VRF_TABLE                             = 0x1\n \tIFLA_VRF_PORT_UNSPEC                       = 0x0\n@@ -1693,9 +1718,22 @@ const (\n \tIFLA_XFRM_UNSPEC                           = 0x0\n \tIFLA_XFRM_LINK                             = 0x1\n \tIFLA_XFRM_IF_ID                            = 0x2\n+\tIFLA_XFRM_COLLECT_METADATA                 = 0x3\n \tIFLA_IPVLAN_UNSPEC                         = 0x0\n \tIFLA_IPVLAN_MODE                           = 0x1\n \tIFLA_IPVLAN_FLAGS                          = 0x2\n+\tNETKIT_NEXT                                = -0x1\n+\tNETKIT_PASS                                = 0x0\n+\tNETKIT_DROP                                = 0x2\n+\tNETKIT_REDIRECT                            = 0x7\n+\tNETKIT_L2                                  = 0x0\n+\tNETKIT_L3                                  = 0x1\n+\tIFLA_NETKIT_UNSPEC                         = 0x0\n+\tIFLA_NETKIT_PEER_INFO                      = 0x1\n+\tIFLA_NETKIT_PRIMARY                        = 0x2\n+\tIFLA_NETKIT_POLICY                         = 0x3\n+\tIFLA_NETKIT_PEER_POLICY                    = 0x4\n+\tIFLA_NETKIT_MODE                           = 0x5\n \tIFLA_VXLAN_UNSPEC                          = 0x0\n \tIFLA_VXLAN_ID                              = 0x1\n \tIFLA_VXLAN_GROUP                           = 0x2\n@@ -1726,6 +1764,8 @@ const (\n \tIFLA_VXLAN_GPE                             = 0x1b\n \tIFLA_VXLAN_TTL_INHERIT                     = 0x1c\n \tIFLA_VXLAN_DF                              = 0x1d\n+\tIFLA_VXLAN_VNIFILTER                       = 0x1e\n+\tIFLA_VXLAN_LOCALBYPASS                     = 0x1f\n \tIFLA_GENEVE_UNSPEC                         = 0x0\n \tIFLA_GENEVE_ID                             = 0x1\n \tIFLA_GENEVE_REMOTE                         = 0x2\n@@ -1740,6 +1780,7 @@ const (\n \tIFLA_GENEVE_LABEL                          = 0xb\n \tIFLA_GENEVE_TTL_INHERIT                    = 0xc\n \tIFLA_GENEVE_DF                             = 0xd\n+\tIFLA_GENEVE_INNER_PROTO_INHERIT            = 0xe\n \tIFLA_BAREUDP_UNSPEC                        = 0x0\n \tIFLA_BAREUDP_PORT                          = 0x1\n \tIFLA_BAREUDP_ETHERTYPE                     = 0x2\n@@ -1752,6 +1793,8 @@ const (\n \tIFLA_GTP_FD1                               = 0x2\n \tIFLA_GTP_PDP_HASHSIZE                      = 0x3\n \tIFLA_GTP_ROLE                              = 0x4\n+\tIFLA_GTP_CREATE_SOCKETS                    = 0x5\n+\tIFLA_GTP_RESTART_COUNT                     = 0x6\n \tIFLA_BOND_UNSPEC                           = 0x0\n \tIFLA_BOND_MODE                             = 0x1\n \tIFLA_BOND_ACTIVE_SLAVE                     = 0x2\n@@ -1781,6 +1824,9 @@ const (\n \tIFLA_BOND_AD_ACTOR_SYSTEM                  = 0x1a\n \tIFLA_BOND_TLB_DYNAMIC_LB                   = 0x1b\n \tIFLA_BOND_PEER_NOTIF_DELAY                 = 0x1c\n+\tIFLA_BOND_AD_LACP_ACTIVE                   = 0x1d\n+\tIFLA_BOND_MISSED_MAX                       = 0x1e\n+\tIFLA_BOND_NS_IP6_TARGET                    = 0x1f\n \tIFLA_BOND_AD_INFO_UNSPEC                   = 0x0\n \tIFLA_BOND_AD_INFO_AGGREGATOR               = 0x1\n \tIFLA_BOND_AD_INFO_NUM_PORTS                = 0x2\n@@ -1796,6 +1842,7 @@ const (\n \tIFLA_BOND_SLAVE_AD_AGGREGATOR_ID           = 0x6\n \tIFLA_BOND_SLAVE_AD_ACTOR_OPER_PORT_STATE   = 0x7\n \tIFLA_BOND_SLAVE_AD_PARTNER_OPER_PORT_STATE = 0x8\n+\tIFLA_BOND_SLAVE_PRIO                       = 0x9\n \tIFLA_VF_INFO_UNSPEC                        = 0x0\n \tIFLA_VF_INFO                               = 0x1\n \tIFLA_VF_UNSPEC                             = 0x0\n@@ -1854,8 +1901,16 @@ const (\n \tIFLA_STATS_LINK_XSTATS_SLAVE               = 0x3\n \tIFLA_STATS_LINK_OFFLOAD_XSTATS             = 0x4\n \tIFLA_STATS_AF_SPEC                         = 0x5\n+\tIFLA_STATS_GETSET_UNSPEC                   = 0x0\n+\tIFLA_STATS_GET_FILTERS                     = 0x1\n+\tIFLA_STATS_SET_OFFLOAD_XSTATS_L3_STATS     = 0x2\n \tIFLA_OFFLOAD_XSTATS_UNSPEC                 = 0x0\n \tIFLA_OFFLOAD_XSTATS_CPU_HIT                = 0x1\n+\tIFLA_OFFLOAD_XSTATS_HW_S_INFO              = 0x2\n+\tIFLA_OFFLOAD_XSTATS_L3_STATS               = 0x3\n+\tIFLA_OFFLOAD_XSTATS_HW_S_INFO_UNSPEC       = 0x0\n+\tIFLA_OFFLOAD_XSTATS_HW_S_INFO_REQUEST      = 0x1\n+\tIFLA_OFFLOAD_XSTATS_HW_S_INFO_USED         = 0x2\n \tIFLA_XDP_UNSPEC                            = 0x0\n \tIFLA_XDP_FD                                = 0x1\n \tIFLA_XDP_ATTACHED                          = 0x2\n@@ -1885,6 +1940,11 @@ const (\n \tIFLA_RMNET_UNSPEC                          = 0x0\n \tIFLA_RMNET_MUX_ID                          = 0x1\n \tIFLA_RMNET_FLAGS                           = 0x2\n+\tIFLA_MCTP_UNSPEC                           = 0x0\n+\tIFLA_MCTP_NET                              = 0x1\n+\tIFLA_DSA_UNSPEC                            = 0x0\n+\tIFLA_DSA_CONDUIT                           = 0x1\n+\tIFLA_DSA_MASTER                            = 0x1\n )\n \n const ("
    },
    {
      "sha": "6525c62f3c2ff3a287ffafe7fbe94108a537fba6",
      "filename": "backend/vendor/golang.org/x/sys/windows/syscall_windows.go",
      "status": "modified",
      "additions": 82,
      "deletions": 0,
      "changes": 82,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall_windows.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -165,6 +165,7 @@ func NewCallbackCDecl(fn interface{}) uintptr {\n //sys\tCreateFile(name *uint16, access uint32, mode uint32, sa *SecurityAttributes, createmode uint32, attrs uint32, templatefile Handle) (handle Handle, err error) [failretval==InvalidHandle] = CreateFileW\n //sys\tCreateNamedPipe(name *uint16, flags uint32, pipeMode uint32, maxInstances uint32, outSize uint32, inSize uint32, defaultTimeout uint32, sa *SecurityAttributes) (handle Handle, err error)  [failretval==InvalidHandle] = CreateNamedPipeW\n //sys\tConnectNamedPipe(pipe Handle, overlapped *Overlapped) (err error)\n+//sys\tDisconnectNamedPipe(pipe Handle) (err error)\n //sys\tGetNamedPipeInfo(pipe Handle, flags *uint32, outSize *uint32, inSize *uint32, maxInstances *uint32) (err error)\n //sys\tGetNamedPipeHandleState(pipe Handle, state *uint32, curInstances *uint32, maxCollectionCount *uint32, collectDataTimeout *uint32, userName *uint16, maxUserNameSize uint32) (err error) = GetNamedPipeHandleStateW\n //sys\tSetNamedPipeHandleState(pipe Handle, state *uint32, maxCollectionCount *uint32, collectDataTimeout *uint32) (err error) = SetNamedPipeHandleState\n@@ -348,8 +349,19 @@ func NewCallbackCDecl(fn interface{}) uintptr {\n //sys\tSetProcessPriorityBoost(process Handle, disable bool) (err error) = kernel32.SetProcessPriorityBoost\n //sys\tGetProcessWorkingSetSizeEx(hProcess Handle, lpMinimumWorkingSetSize *uintptr, lpMaximumWorkingSetSize *uintptr, flags *uint32)\n //sys\tSetProcessWorkingSetSizeEx(hProcess Handle, dwMinimumWorkingSetSize uintptr, dwMaximumWorkingSetSize uintptr, flags uint32) (err error)\n+//sys\tClearCommBreak(handle Handle) (err error)\n+//sys\tClearCommError(handle Handle, lpErrors *uint32, lpStat *ComStat) (err error)\n+//sys\tEscapeCommFunction(handle Handle, dwFunc uint32) (err error)\n+//sys\tGetCommState(handle Handle, lpDCB *DCB) (err error)\n+//sys\tGetCommModemStatus(handle Handle, lpModemStat *uint32) (err error)\n //sys\tGetCommTimeouts(handle Handle, timeouts *CommTimeouts) (err error)\n+//sys\tPurgeComm(handle Handle, dwFlags uint32) (err error)\n+//sys\tSetCommBreak(handle Handle) (err error)\n+//sys\tSetCommMask(handle Handle, dwEvtMask uint32) (err error)\n+//sys\tSetCommState(handle Handle, lpDCB *DCB) (err error)\n //sys\tSetCommTimeouts(handle Handle, timeouts *CommTimeouts) (err error)\n+//sys\tSetupComm(handle Handle, dwInQueue uint32, dwOutQueue uint32) (err error)\n+//sys\tWaitCommEvent(handle Handle, lpEvtMask *uint32, lpOverlapped *Overlapped) (err error)\n //sys\tGetActiveProcessorCount(groupNumber uint16) (ret uint32)\n //sys\tGetMaximumProcessorCount(groupNumber uint16) (ret uint32)\n //sys\tEnumWindows(enumFunc uintptr, param unsafe.Pointer) (err error) = user32.EnumWindows\n@@ -1834,3 +1846,73 @@ func ResizePseudoConsole(pconsole Handle, size Coord) error {\n \t// accept arguments that can be casted to uintptr, and Coord can't.\n \treturn resizePseudoConsole(pconsole, *((*uint32)(unsafe.Pointer(&size))))\n }\n+\n+// DCB constants. See https://learn.microsoft.com/en-us/windows/win32/api/winbase/ns-winbase-dcb.\n+const (\n+\tCBR_110    = 110\n+\tCBR_300    = 300\n+\tCBR_600    = 600\n+\tCBR_1200   = 1200\n+\tCBR_2400   = 2400\n+\tCBR_4800   = 4800\n+\tCBR_9600   = 9600\n+\tCBR_14400  = 14400\n+\tCBR_19200  = 19200\n+\tCBR_38400  = 38400\n+\tCBR_57600  = 57600\n+\tCBR_115200 = 115200\n+\tCBR_128000 = 128000\n+\tCBR_256000 = 256000\n+\n+\tDTR_CONTROL_DISABLE   = 0x00000000\n+\tDTR_CONTROL_ENABLE    = 0x00000010\n+\tDTR_CONTROL_HANDSHAKE = 0x00000020\n+\n+\tRTS_CONTROL_DISABLE   = 0x00000000\n+\tRTS_CONTROL_ENABLE    = 0x00001000\n+\tRTS_CONTROL_HANDSHAKE = 0x00002000\n+\tRTS_CONTROL_TOGGLE    = 0x00003000\n+\n+\tNOPARITY    = 0\n+\tODDPARITY   = 1\n+\tEVENPARITY  = 2\n+\tMARKPARITY  = 3\n+\tSPACEPARITY = 4\n+\n+\tONESTOPBIT   = 0\n+\tONE5STOPBITS = 1\n+\tTWOSTOPBITS  = 2\n+)\n+\n+// EscapeCommFunction constants. See https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-escapecommfunction.\n+const (\n+\tSETXOFF  = 1\n+\tSETXON   = 2\n+\tSETRTS   = 3\n+\tCLRRTS   = 4\n+\tSETDTR   = 5\n+\tCLRDTR   = 6\n+\tSETBREAK = 8\n+\tCLRBREAK = 9\n+)\n+\n+// PurgeComm constants. See https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-purgecomm.\n+const (\n+\tPURGE_TXABORT = 0x0001\n+\tPURGE_RXABORT = 0x0002\n+\tPURGE_TXCLEAR = 0x0004\n+\tPURGE_RXCLEAR = 0x0008\n+)\n+\n+// SetCommMask constants. See https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-setcommmask.\n+const (\n+\tEV_RXCHAR  = 0x0001\n+\tEV_RXFLAG  = 0x0002\n+\tEV_TXEMPTY = 0x0004\n+\tEV_CTS     = 0x0008\n+\tEV_DSR     = 0x0010\n+\tEV_RLSD    = 0x0020\n+\tEV_BREAK   = 0x0040\n+\tEV_ERR     = 0x0080\n+\tEV_RING    = 0x0100\n+)"
    },
    {
      "sha": "d8cb71db0a61b95df31c06848ccf4fe4e1dd785c",
      "filename": "backend/vendor/golang.org/x/sys/windows/types_windows.go",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Ftypes_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Ftypes_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Ftypes_windows.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -3380,3 +3380,27 @@ type BLOB struct {\n \tSize     uint32\n \tBlobData *byte\n }\n+\n+type ComStat struct {\n+\tFlags    uint32\n+\tCBInQue  uint32\n+\tCBOutQue uint32\n+}\n+\n+type DCB struct {\n+\tDCBlength  uint32\n+\tBaudRate   uint32\n+\tFlags      uint32\n+\twReserved  uint16\n+\tXonLim     uint16\n+\tXoffLim    uint16\n+\tByteSize   uint8\n+\tParity     uint8\n+\tStopBits   uint8\n+\tXonChar    byte\n+\tXoffChar   byte\n+\tErrorChar  byte\n+\tEofChar    byte\n+\tEvtChar    byte\n+\twReserved1 uint16\n+}"
    },
    {
      "sha": "5c6035ddfa923580803e21170845eda63e4c113b",
      "filename": "backend/vendor/golang.org/x/sys/windows/zsyscall_windows.go",
      "status": "modified",
      "additions": 117,
      "deletions": 9,
      "changes": 126,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fzsyscall_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fzsyscall_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fzsyscall_windows.go?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -188,6 +188,8 @@ var (\n \tprocAssignProcessToJobObject                             = modkernel32.NewProc(\"AssignProcessToJobObject\")\n \tprocCancelIo                                             = modkernel32.NewProc(\"CancelIo\")\n \tprocCancelIoEx                                           = modkernel32.NewProc(\"CancelIoEx\")\n+\tprocClearCommBreak                                       = modkernel32.NewProc(\"ClearCommBreak\")\n+\tprocClearCommError                                       = modkernel32.NewProc(\"ClearCommError\")\n \tprocCloseHandle                                          = modkernel32.NewProc(\"CloseHandle\")\n \tprocClosePseudoConsole                                   = modkernel32.NewProc(\"ClosePseudoConsole\")\n \tprocConnectNamedPipe                                     = modkernel32.NewProc(\"ConnectNamedPipe\")\n@@ -212,7 +214,9 @@ var (\n \tprocDeleteProcThreadAttributeList                        = modkernel32.NewProc(\"DeleteProcThreadAttributeList\")\n \tprocDeleteVolumeMountPointW                              = modkernel32.NewProc(\"DeleteVolumeMountPointW\")\n \tprocDeviceIoControl                                      = modkernel32.NewProc(\"DeviceIoControl\")\n+\tprocDisconnectNamedPipe                                  = modkernel32.NewProc(\"DisconnectNamedPipe\")\n \tprocDuplicateHandle                                      = modkernel32.NewProc(\"DuplicateHandle\")\n+\tprocEscapeCommFunction                                   = modkernel32.NewProc(\"EscapeCommFunction\")\n \tprocExitProcess                                          = modkernel32.NewProc(\"ExitProcess\")\n \tprocExpandEnvironmentStringsW                            = modkernel32.NewProc(\"ExpandEnvironmentStringsW\")\n \tprocFindClose                                            = modkernel32.NewProc(\"FindClose\")\n@@ -236,6 +240,8 @@ var (\n \tprocGenerateConsoleCtrlEvent                             = modkernel32.NewProc(\"GenerateConsoleCtrlEvent\")\n \tprocGetACP                                               = modkernel32.NewProc(\"GetACP\")\n \tprocGetActiveProcessorCount                              = modkernel32.NewProc(\"GetActiveProcessorCount\")\n+\tprocGetCommModemStatus                                   = modkernel32.NewProc(\"GetCommModemStatus\")\n+\tprocGetCommState                                         = modkernel32.NewProc(\"GetCommState\")\n \tprocGetCommTimeouts                                      = modkernel32.NewProc(\"GetCommTimeouts\")\n \tprocGetCommandLineW                                      = modkernel32.NewProc(\"GetCommandLineW\")\n \tprocGetComputerNameExW                                   = modkernel32.NewProc(\"GetComputerNameExW\")\n@@ -322,6 +328,7 @@ var (\n \tprocProcess32NextW                                       = modkernel32.NewProc(\"Process32NextW\")\n \tprocProcessIdToSessionId                                 = modkernel32.NewProc(\"ProcessIdToSessionId\")\n \tprocPulseEvent                                           = modkernel32.NewProc(\"PulseEvent\")\n+\tprocPurgeComm                                            = modkernel32.NewProc(\"PurgeComm\")\n \tprocQueryDosDeviceW                                      = modkernel32.NewProc(\"QueryDosDeviceW\")\n \tprocQueryFullProcessImageNameW                           = modkernel32.NewProc(\"QueryFullProcessImageNameW\")\n \tprocQueryInformationJobObject                            = modkernel32.NewProc(\"QueryInformationJobObject\")\n@@ -335,14 +342,16 @@ var (\n \tprocResetEvent                                           = modkernel32.NewProc(\"ResetEvent\")\n \tprocResizePseudoConsole                                  = modkernel32.NewProc(\"ResizePseudoConsole\")\n \tprocResumeThread                                         = modkernel32.NewProc(\"ResumeThread\")\n+\tprocSetCommBreak                                         = modkernel32.NewProc(\"SetCommBreak\")\n+\tprocSetCommMask                                          = modkernel32.NewProc(\"SetCommMask\")\n+\tprocSetCommState                                         = modkernel32.NewProc(\"SetCommState\")\n \tprocSetCommTimeouts                                      = modkernel32.NewProc(\"SetCommTimeouts\")\n \tprocSetConsoleCursorPosition                             = modkernel32.NewProc(\"SetConsoleCursorPosition\")\n \tprocSetConsoleMode                                       = modkernel32.NewProc(\"SetConsoleMode\")\n \tprocSetCurrentDirectoryW                                 = modkernel32.NewProc(\"SetCurrentDirectoryW\")\n \tprocSetDefaultDllDirectories                             = modkernel32.NewProc(\"SetDefaultDllDirectories\")\n \tprocSetDllDirectoryW                                     = modkernel32.NewProc(\"SetDllDirectoryW\")\n \tprocSetEndOfFile                                         = modkernel32.NewProc(\"SetEndOfFile\")\n-\tprocSetFileValidData                                     = modkernel32.NewProc(\"SetFileValidData\")\n \tprocSetEnvironmentVariableW                              = modkernel32.NewProc(\"SetEnvironmentVariableW\")\n \tprocSetErrorMode                                         = modkernel32.NewProc(\"SetErrorMode\")\n \tprocSetEvent                                             = modkernel32.NewProc(\"SetEvent\")\n@@ -351,6 +360,7 @@ var (\n \tprocSetFileInformationByHandle                           = modkernel32.NewProc(\"SetFileInformationByHandle\")\n \tprocSetFilePointer                                       = modkernel32.NewProc(\"SetFilePointer\")\n \tprocSetFileTime                                          = modkernel32.NewProc(\"SetFileTime\")\n+\tprocSetFileValidData                                     = modkernel32.NewProc(\"SetFileValidData\")\n \tprocSetHandleInformation                                 = modkernel32.NewProc(\"SetHandleInformation\")\n \tprocSetInformationJobObject                              = modkernel32.NewProc(\"SetInformationJobObject\")\n \tprocSetNamedPipeHandleState                              = modkernel32.NewProc(\"SetNamedPipeHandleState\")\n@@ -361,6 +371,7 @@ var (\n \tprocSetStdHandle                                         = modkernel32.NewProc(\"SetStdHandle\")\n \tprocSetVolumeLabelW                                      = modkernel32.NewProc(\"SetVolumeLabelW\")\n \tprocSetVolumeMountPointW                                 = modkernel32.NewProc(\"SetVolumeMountPointW\")\n+\tprocSetupComm                                            = modkernel32.NewProc(\"SetupComm\")\n \tprocSizeofResource                                       = modkernel32.NewProc(\"SizeofResource\")\n \tprocSleepEx                                              = modkernel32.NewProc(\"SleepEx\")\n \tprocTerminateJobObject                                   = modkernel32.NewProc(\"TerminateJobObject\")\n@@ -379,6 +390,7 @@ var (\n \tprocVirtualQueryEx                                       = modkernel32.NewProc(\"VirtualQueryEx\")\n \tprocVirtualUnlock                                        = modkernel32.NewProc(\"VirtualUnlock\")\n \tprocWTSGetActiveConsoleSessionId                         = modkernel32.NewProc(\"WTSGetActiveConsoleSessionId\")\n+\tprocWaitCommEvent                                        = modkernel32.NewProc(\"WaitCommEvent\")\n \tprocWaitForMultipleObjects                               = modkernel32.NewProc(\"WaitForMultipleObjects\")\n \tprocWaitForSingleObject                                  = modkernel32.NewProc(\"WaitForSingleObject\")\n \tprocWriteConsoleW                                        = modkernel32.NewProc(\"WriteConsoleW\")\n@@ -1641,6 +1653,22 @@ func CancelIoEx(s Handle, o *Overlapped) (err error) {\n \treturn\n }\n \n+func ClearCommBreak(handle Handle) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procClearCommBreak.Addr(), 1, uintptr(handle), 0, 0)\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+func ClearCommError(handle Handle, lpErrors *uint32, lpStat *ComStat) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procClearCommError.Addr(), 3, uintptr(handle), uintptr(unsafe.Pointer(lpErrors)), uintptr(unsafe.Pointer(lpStat)))\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n func CloseHandle(handle Handle) (err error) {\n \tr1, _, e1 := syscall.Syscall(procCloseHandle.Addr(), 1, uintptr(handle), 0, 0)\n \tif r1 == 0 {\n@@ -1845,6 +1873,14 @@ func DeviceIoControl(handle Handle, ioControlCode uint32, inBuffer *byte, inBuff\n \treturn\n }\n \n+func DisconnectNamedPipe(pipe Handle) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procDisconnectNamedPipe.Addr(), 1, uintptr(pipe), 0, 0)\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n func DuplicateHandle(hSourceProcessHandle Handle, hSourceHandle Handle, hTargetProcessHandle Handle, lpTargetHandle *Handle, dwDesiredAccess uint32, bInheritHandle bool, dwOptions uint32) (err error) {\n \tvar _p0 uint32\n \tif bInheritHandle {\n@@ -1857,6 +1893,14 @@ func DuplicateHandle(hSourceProcessHandle Handle, hSourceHandle Handle, hTargetP\n \treturn\n }\n \n+func EscapeCommFunction(handle Handle, dwFunc uint32) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procEscapeCommFunction.Addr(), 2, uintptr(handle), uintptr(dwFunc), 0)\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n func ExitProcess(exitcode uint32) {\n \tsyscall.Syscall(procExitProcess.Addr(), 1, uintptr(exitcode), 0, 0)\n \treturn\n@@ -2058,6 +2102,22 @@ func GetActiveProcessorCount(groupNumber uint16) (ret uint32) {\n \treturn\n }\n \n+func GetCommModemStatus(handle Handle, lpModemStat *uint32) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procGetCommModemStatus.Addr(), 2, uintptr(handle), uintptr(unsafe.Pointer(lpModemStat)), 0)\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+func GetCommState(handle Handle, lpDCB *DCB) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procGetCommState.Addr(), 2, uintptr(handle), uintptr(unsafe.Pointer(lpDCB)), 0)\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n func GetCommTimeouts(handle Handle, timeouts *CommTimeouts) (err error) {\n \tr1, _, e1 := syscall.Syscall(procGetCommTimeouts.Addr(), 2, uintptr(handle), uintptr(unsafe.Pointer(timeouts)), 0)\n \tif r1 == 0 {\n@@ -2810,6 +2870,14 @@ func PulseEvent(event Handle) (err error) {\n \treturn\n }\n \n+func PurgeComm(handle Handle, dwFlags uint32) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procPurgeComm.Addr(), 2, uintptr(handle), uintptr(dwFlags), 0)\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n func QueryDosDevice(deviceName *uint16, targetPath *uint16, max uint32) (n uint32, err error) {\n \tr0, _, e1 := syscall.Syscall(procQueryDosDeviceW.Addr(), 3, uintptr(unsafe.Pointer(deviceName)), uintptr(unsafe.Pointer(targetPath)), uintptr(max))\n \tn = uint32(r0)\n@@ -2924,6 +2992,30 @@ func ResumeThread(thread Handle) (ret uint32, err error) {\n \treturn\n }\n \n+func SetCommBreak(handle Handle) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procSetCommBreak.Addr(), 1, uintptr(handle), 0, 0)\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+func SetCommMask(handle Handle, dwEvtMask uint32) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procSetCommMask.Addr(), 2, uintptr(handle), uintptr(dwEvtMask), 0)\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+func SetCommState(handle Handle, lpDCB *DCB) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procSetCommState.Addr(), 2, uintptr(handle), uintptr(unsafe.Pointer(lpDCB)), 0)\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n func SetCommTimeouts(handle Handle, timeouts *CommTimeouts) (err error) {\n \tr1, _, e1 := syscall.Syscall(procSetCommTimeouts.Addr(), 2, uintptr(handle), uintptr(unsafe.Pointer(timeouts)), 0)\n \tif r1 == 0 {\n@@ -2989,14 +3081,6 @@ func SetEndOfFile(handle Handle) (err error) {\n \treturn\n }\n \n-func SetFileValidData(handle Handle, validDataLength int64) (err error) {\n-\tr1, _, e1 := syscall.Syscall(procSetFileValidData.Addr(), 2, uintptr(handle), uintptr(validDataLength), 0)\n-\tif r1 == 0 {\n-\t\terr = errnoErr(e1)\n-\t}\n-\treturn\n-}\n-\n func SetEnvironmentVariable(name *uint16, value *uint16) (err error) {\n \tr1, _, e1 := syscall.Syscall(procSetEnvironmentVariableW.Addr(), 2, uintptr(unsafe.Pointer(name)), uintptr(unsafe.Pointer(value)), 0)\n \tif r1 == 0 {\n@@ -3060,6 +3144,14 @@ func SetFileTime(handle Handle, ctime *Filetime, atime *Filetime, wtime *Filetim\n \treturn\n }\n \n+func SetFileValidData(handle Handle, validDataLength int64) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procSetFileValidData.Addr(), 2, uintptr(handle), uintptr(validDataLength), 0)\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n func SetHandleInformation(handle Handle, mask uint32, flags uint32) (err error) {\n \tr1, _, e1 := syscall.Syscall(procSetHandleInformation.Addr(), 3, uintptr(handle), uintptr(mask), uintptr(flags))\n \tif r1 == 0 {\n@@ -3145,6 +3237,14 @@ func SetVolumeMountPoint(volumeMountPoint *uint16, volumeName *uint16) (err erro\n \treturn\n }\n \n+func SetupComm(handle Handle, dwInQueue uint32, dwOutQueue uint32) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procSetupComm.Addr(), 3, uintptr(handle), uintptr(dwInQueue), uintptr(dwOutQueue))\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n func SizeofResource(module Handle, resInfo Handle) (size uint32, err error) {\n \tr0, _, e1 := syscall.Syscall(procSizeofResource.Addr(), 2, uintptr(module), uintptr(resInfo), 0)\n \tsize = uint32(r0)\n@@ -3291,6 +3391,14 @@ func WTSGetActiveConsoleSessionId() (sessionID uint32) {\n \treturn\n }\n \n+func WaitCommEvent(handle Handle, lpEvtMask *uint32, lpOverlapped *Overlapped) (err error) {\n+\tr1, _, e1 := syscall.Syscall(procWaitCommEvent.Addr(), 3, uintptr(handle), uintptr(unsafe.Pointer(lpEvtMask)), uintptr(unsafe.Pointer(lpOverlapped)))\n+\tif r1 == 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n func waitForMultipleObjects(count uint32, handles uintptr, waitAll bool, waitMilliseconds uint32) (event uint32, err error) {\n \tvar _p0 uint32\n \tif waitAll {"
    },
    {
      "sha": "a60935e5b84e2d7302a1f0ed25eca71ad64466c5",
      "filename": "backend/vendor/modules.txt",
      "status": "modified",
      "additions": 23,
      "deletions": 22,
      "changes": 45,
      "blob_url": "https://github.com/umputun/remark42/blob/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fmodules.txt",
      "raw_url": "https://github.com/umputun/remark42/raw/4bb0017060540a8364675762345c93426981fd29/backend%2Fvendor%2Fmodules.txt",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fmodules.txt?ref=4bb0017060540a8364675762345c93426981fd29",
      "patch": "@@ -1,4 +1,4 @@\n-# cloud.google.com/go/compute v1.23.3\n+# cloud.google.com/go/compute v1.25.1\n ## explicit; go 1.19\n cloud.google.com/go/compute/internal\n # cloud.google.com/go/compute/metadata v0.2.3\n@@ -7,13 +7,13 @@ cloud.google.com/go/compute/metadata\n # github.com/Depado/bfchroma/v2 v2.0.0\n ## explicit; go 1.18\n github.com/Depado/bfchroma/v2\n-# github.com/PuerkitoBio/goquery v1.8.1\n-## explicit; go 1.13\n+# github.com/PuerkitoBio/goquery v1.9.1\n+## explicit; go 1.18\n github.com/PuerkitoBio/goquery\n # github.com/ajg/form v1.5.1\n ## explicit\n github.com/ajg/form\n-# github.com/alecthomas/chroma/v2 v2.12.0\n+# github.com/alecthomas/chroma/v2 v2.13.0\n ## explicit; go 1.19\n github.com/alecthomas/chroma/v2\n github.com/alecthomas/chroma/v2/formatters/html\n@@ -32,8 +32,8 @@ github.com/cespare/xxhash/v2\n # github.com/davecgh/go-spew v1.1.1\n ## explicit\n github.com/davecgh/go-spew/spew\n-# github.com/dghubble/oauth1 v0.7.2\n-## explicit; go 1.18\n+# github.com/dghubble/oauth1 v0.7.3\n+## explicit; go 1.19\n github.com/dghubble/oauth1\n github.com/dghubble/oauth1/twitter\n # github.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f\n@@ -49,7 +49,7 @@ github.com/didip/tollbooth/v7/limiter\n # github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f\n ## explicit; go 1.14\n github.com/didip/tollbooth_chi\n-# github.com/dlclark/regexp2 v1.10.0\n+# github.com/dlclark/regexp2 v1.11.0\n ## explicit; go 1.13\n github.com/dlclark/regexp2\n github.com/dlclark/regexp2/syntax\n@@ -68,7 +68,7 @@ github.com/go-chi/render\n github.com/go-oauth2/oauth2/v4\n github.com/go-oauth2/oauth2/v4/errors\n github.com/go-oauth2/oauth2/v4/server\n-# github.com/go-pkgz/auth v1.22.2-0.20240117071454-f721b8c33b05\n+# github.com/go-pkgz/auth v1.23.0\n ## explicit; go 1.21\n github.com/go-pkgz/auth\n github.com/go-pkgz/auth/avatar\n@@ -111,8 +111,8 @@ github.com/go-pkgz/syncs\n # github.com/golang-jwt/jwt v3.2.2+incompatible\n ## explicit\n github.com/golang-jwt/jwt\n-# github.com/golang/protobuf v1.5.3\n-## explicit; go 1.9\n+# github.com/golang/protobuf v1.5.4\n+## explicit; go 1.17\n github.com/golang/protobuf/proto\n # github.com/golang/snappy v0.0.4\n ## explicit\n@@ -144,8 +144,8 @@ github.com/hashicorp/golang-lru/v2/simplelru\n # github.com/jessevdk/go-flags v1.5.0\n ## explicit; go 1.15\n github.com/jessevdk/go-flags\n-# github.com/klauspost/compress v1.17.4\n-## explicit; go 1.19\n+# github.com/klauspost/compress v1.17.7\n+## explicit; go 1.20\n github.com/klauspost/compress\n github.com/klauspost/compress/fse\n github.com/klauspost/compress/huff0\n@@ -197,8 +197,8 @@ github.com/slack-go/slack/internal/backoff\n github.com/slack-go/slack/internal/errorsx\n github.com/slack-go/slack/internal/timex\n github.com/slack-go/slack/slackutilsx\n-# github.com/stretchr/testify v1.8.4\n-## explicit; go 1.20\n+# github.com/stretchr/testify v1.9.0\n+## explicit; go 1.17\n github.com/stretchr/testify/assert\n github.com/stretchr/testify/require\n # github.com/xdg-go/pbkdf2 v1.0.0\n@@ -213,11 +213,11 @@ github.com/xdg-go/stringprep\n # github.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a\n ## explicit; go 1.12\n github.com/youmark/pkcs8\n-# go.etcd.io/bbolt v1.3.8\n+# go.etcd.io/bbolt v1.3.9\n ## explicit; go 1.17\n go.etcd.io/bbolt\n-# go.mongodb.org/mongo-driver v1.13.1\n-## explicit; go 1.13\n+# go.mongodb.org/mongo-driver v1.14.0\n+## explicit; go 1.18\n go.mongodb.org/mongo-driver/bson\n go.mongodb.org/mongo-driver/bson/bsoncodec\n go.mongodb.org/mongo-driver/bson/bsonoptions\n@@ -270,7 +270,7 @@ go.mongodb.org/mongo-driver/x/mongo/driver/wiremessage\n ## explicit; go 1.20\n go.uber.org/goleak\n go.uber.org/goleak/internal/stack\n-# golang.org/x/crypto v0.19.0\n+# golang.org/x/crypto v0.22.0\n ## explicit; go 1.18\n golang.org/x/crypto/acme\n golang.org/x/crypto/acme/autocert\n@@ -281,23 +281,24 @@ golang.org/x/crypto/scrypt\n ## explicit; go 1.18\n golang.org/x/image/draw\n golang.org/x/image/math/f64\n-# golang.org/x/net v0.21.0\n+# golang.org/x/net v0.24.0\n ## explicit; go 1.18\n golang.org/x/net/html\n golang.org/x/net/html/atom\n golang.org/x/net/idna\n golang.org/x/net/internal/socks\n golang.org/x/net/proxy\n-# golang.org/x/oauth2 v0.17.0\n+# golang.org/x/oauth2 v0.18.0\n ## explicit; go 1.18\n golang.org/x/oauth2\n golang.org/x/oauth2/authhandler\n golang.org/x/oauth2/endpoints\n golang.org/x/oauth2/facebook\n golang.org/x/oauth2/github\n golang.org/x/oauth2/google\n-golang.org/x/oauth2/google/internal/externalaccount\n+golang.org/x/oauth2/google/externalaccount\n golang.org/x/oauth2/google/internal/externalaccountauthorizeduser\n+golang.org/x/oauth2/google/internal/impersonate\n golang.org/x/oauth2/google/internal/stsexchange\n golang.org/x/oauth2/internal\n golang.org/x/oauth2/jws\n@@ -308,7 +309,7 @@ golang.org/x/oauth2/yandex\n ## explicit; go 1.18\n golang.org/x/sync/errgroup\n golang.org/x/sync/singleflight\n-# golang.org/x/sys v0.17.0\n+# golang.org/x/sys v0.19.0\n ## explicit; go 1.18\n golang.org/x/sys/unix\n golang.org/x/sys/windows"
    }
  ]
}
