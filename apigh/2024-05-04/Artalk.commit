{
  "sha": "5a63d4c63d5e9c14891325e41eb7ce9ca0b1aa73",
  "node_id": "C_kwDOCQOkhNoAKDVhNjNkNGM2M2Q1ZTljMTQ4OTEzMjVlNDFlYjdjZTljYTBiMWFhNzM",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-05-04T08:15:02Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-05-04T08:15:02Z"
    },
    "message": "fix(sidebar/site): unable to edit the new site urls",
    "tree": {
      "sha": "494a2ecb0692f127d8121cdbb47ac948d0a2501a",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/494a2ecb0692f127d8121cdbb47ac948d0a2501a"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/5a63d4c63d5e9c14891325e41eb7ce9ca0b1aa73",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZjXuhgAKCRDUbg8O6nwT\nalkuAQDr4Lk2qPoiuaJza8gODg2e7Ue687CL1pNyi5zROwlwKAD7BjwTsYGacxLe\n1H+hZZVDS0TbbLolkB/ejunepGEeVAY=\n=GxQL\n-----END PGP SIGNATURE-----",
      "payload": "tree 494a2ecb0692f127d8121cdbb47ac948d0a2501a\nparent b8afcbb21a89bce15b01884872d66fe33f0ed734\nauthor qwqcode <qwqcode@gmail.com> 1714810502 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1714810502 +0800\n\nfix(sidebar/site): unable to edit the new site urls\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/5a63d4c63d5e9c14891325e41eb7ce9ca0b1aa73",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/5a63d4c63d5e9c14891325e41eb7ce9ca0b1aa73",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/5a63d4c63d5e9c14891325e41eb7ce9ca0b1aa73/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b8afcbb21a89bce15b01884872d66fe33f0ed734",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/b8afcbb21a89bce15b01884872d66fe33f0ed734",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/b8afcbb21a89bce15b01884872d66fe33f0ed734"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 4,
    "deletions": 4
  },
  "files": [
    {
      "sha": "3df682e7c200cb034b81083b0184af6e2673164a",
      "filename": "internal/anti_spam/base.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/5a63d4c63d5e9c14891325e41eb7ce9ca0b1aa73/internal%2Fanti_spam%2Fbase.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/5a63d4c63d5e9c14891325e41eb7ce9ca0b1aa73/internal%2Fanti_spam%2Fbase.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fanti_spam%2Fbase.go?ref=5a63d4c63d5e9c14891325e41eb7ce9ca0b1aa73",
      "patch": "@@ -10,7 +10,7 @@ import (\n \t\"github.com/samber/lo\"\n )\n \n-const LOG_TAG = \"[AntiSpam]\"\n+const LOG_TAG = \"[AntiSpam] \"\n \n // -------------------------------------------------------------------\n //  AntiSpam"
    },
    {
      "sha": "3b5e9b97de0593f58312302972e113d4ba215c2d",
      "filename": "internal/utils/string.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/5a63d4c63d5e9c14891325e41eb7ce9ca0b1aa73/internal%2Futils%2Fstring.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/5a63d4c63d5e9c14891325e41eb7ce9ca0b1aa73/internal%2Futils%2Fstring.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Futils%2Fstring.go?ref=5a63d4c63d5e9c14891325e41eb7ce9ca0b1aa73",
      "patch": "@@ -45,16 +45,16 @@ func RemoveDuplicates(arr []string) []string {\n }\n \n func SplitAndTrimSpace(s string, sep string) []string {\n-\tsplitted := strings.Split(s, sep)\n+\tsplit := strings.Split(s, sep)\n \tarr := []string{}\n-\tfor _, v := range splitted {\n+\tfor _, v := range split {\n \t\tarr = append(arr, strings.TrimSpace(v))\n \t}\n \treturn RemoveBlankStrings(arr)\n }\n \n func RemoveBlankStrings(s []string) []string {\n-\tvar r []string\n+\tr := []string{}\n \tfor _, str := range s {\n \t\tif strings.TrimSpace(str) != \"\" {\n \t\t\tr = append(r, str)"
    }
  ]
}
