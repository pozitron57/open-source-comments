{
  "sha": "9628312b5ddb2c7c62cc11166bfa41cf23f50862",
  "node_id": "C_kwDOBtgov9oAKDk2MjgzMTJiNWRkYjJjN2M2MmNjMTExNjZiZmE0MWNmMjNmNTA4NjI",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2024-12-02T04:32:10Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2024-12-02T04:32:10Z"
    },
    "message": "Merge pull request #1865 from umputun/dependabot/go_modules/backend/go-modules-updates-81f599025a",
    "tree": {
      "sha": "a937f0fab9a4ef6f80b60ba2d65614a1e1ad91b1",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/a937f0fab9a4ef6f80b60ba2d65614a1e1ad91b1"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/9628312b5ddb2c7c62cc11166bfa41cf23f50862",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnTThKCRC1aQ7uu5UhlAAA+18QALFaN/IoPm2dE/R0We/C0BjI\nnwSMNc/H4mjDT27rGSoDLj/urN8jWXEqRhJwOII/W3m1l2zto6YFvBQjW3voH0AU\nkQO3NqVTvcZ5ejTqRrM6+eu+jasIpAvXlQd0rmI+iTnL27cfHlVKYzN56gwvpq9c\nXphloGKdKiouk29curT3yXuhQlNeS49rkW/NE9XSJouXstYezOrucvveAMoQ9aq2\nyXf2pqz0iefiUN7z4pkHewrh7oPa7F8dfaIHzmG6lTxVk6HzzhJA3xwx7nDHZ+ji\nqxQraw+zQaxXLYaaoc/67z5TAn7kEUhhOPuzklm2ftxp3s7DAJaAgsmZP2yp9D4i\nn+/uUmcgjoKz3Eof8iO3tPoQpuHWQnICwO4S1jWKLgQKbBjE3bNC9u57guXynqFl\nh7Da/ONS0MXacRwuPiCQ5u9IhQrSB9vLspJ/aDPhvVmMB/p168MVtusawIppQpM9\n/YimUtTxXzZS5Qxr0dGue0r3achGSZySeZeKpcxIR3/VUcnWml4RTugMP8+1VNDM\namlWnRrX7OfyEkX4YsrqAu+p4zuVZuOv5s92ppivItUU7tHxPXAUJufjz9z1LM0z\nex3vfbKgPraM87YgPJ6Sbz65nixNuFkpoT6QTeV0vDzrAN2HAeYSQsACGH0gowDL\nRT5J/vFQRV0x2suH047B\n=aMe/\n-----END PGP SIGNATURE-----\n",
      "payload": "tree a937f0fab9a4ef6f80b60ba2d65614a1e1ad91b1\nparent 27671c50c479be2855aa9820925dbb30c4cbd831\nparent c65c2b395d5b752a9bf74bf304faa981b099ab3e\nauthor Umputun <umputun@gmail.com> 1733113930 -0600\ncommitter GitHub <noreply@github.com> 1733113930 -0600\n\nMerge pull request #1865 from umputun/dependabot/go_modules/backend/go-modules-updates-81f599025a\n\n",
      "verified_at": "2024-12-02T04:32:14Z"
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/9628312b5ddb2c7c62cc11166bfa41cf23f50862",
  "html_url": "https://github.com/umputun/remark42/commit/9628312b5ddb2c7c62cc11166bfa41cf23f50862",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/9628312b5ddb2c7c62cc11166bfa41cf23f50862/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "27671c50c479be2855aa9820925dbb30c4cbd831",
      "url": "https://api.github.com/repos/umputun/remark42/commits/27671c50c479be2855aa9820925dbb30c4cbd831",
      "html_url": "https://github.com/umputun/remark42/commit/27671c50c479be2855aa9820925dbb30c4cbd831"
    },
    {
      "sha": "c65c2b395d5b752a9bf74bf304faa981b099ab3e",
      "url": "https://api.github.com/repos/umputun/remark42/commits/c65c2b395d5b752a9bf74bf304faa981b099ab3e",
      "html_url": "https://github.com/umputun/remark42/commit/c65c2b395d5b752a9bf74bf304faa981b099ab3e"
    }
  ],
  "stats": {
    "total": 2103,
    "additions": 1725,
    "deletions": 378
  },
  "files": [
    {
      "sha": "8214fd26f0af93b5df021a3afec6cfef97d671a7",
      "filename": "backend/_example/memory_store/go.mod",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.mod?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -6,7 +6,7 @@ require (\n \tgithub.com/go-pkgz/jrpc v0.3.0\n \tgithub.com/go-pkgz/lgr v0.11.1\n \tgithub.com/jessevdk/go-flags v1.6.1\n-\tgithub.com/stretchr/testify v1.9.0\n+\tgithub.com/stretchr/testify v1.10.0\n \tgithub.com/umputun/remark42/backend v1.1000.0\n )\n \n@@ -34,8 +34,8 @@ require (\n \tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n \tgo.etcd.io/bbolt v1.3.11 // indirect\n \tgolang.org/x/image v0.22.0 // indirect\n-\tgolang.org/x/net v0.29.0 // indirect\n-\tgolang.org/x/sys v0.25.0 // indirect\n+\tgolang.org/x/net v0.31.0 // indirect\n+\tgolang.org/x/sys v0.27.0 // indirect\n \tgopkg.in/yaml.v3 v3.0.1 // indirect\n )\n "
    },
    {
      "sha": "ad224680fea498457709a10906202554d5b4e5db",
      "filename": "backend/_example/memory_store/go.sum",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.sum?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -72,8 +72,8 @@ github.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSS\n github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\n-github.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\n-github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\n+github.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\n+github.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\n github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\n go.etcd.io/bbolt v1.3.11 h1:yGEzV1wPz2yVCLsD8ZAiGHhHVlczyC9d1rP43/VCRJ0=\n go.etcd.io/bbolt v1.3.11/go.mod h1:dksAq7YMXoljX0xu6VF5DMZGbhYYoLUalEiSySYAS4I=\n@@ -88,8 +88,8 @@ golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v\n golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\n golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n golang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=\n-golang.org/x/net v0.29.0 h1:5ORfpBpCs4HzDYoodCDBbwHzdR5UrLBZ3sOnUJmFoHo=\n-golang.org/x/net v0.29.0/go.mod h1:gLkgy8jTGERgjzMic6DS9+SP0ajcu6Xu3Orq/SpETg0=\n+golang.org/x/net v0.31.0 h1:68CPQngjLL0r2AlUKiSxtQFKvzRVbnzLwMUn5SzcLHo=\n+golang.org/x/net v0.31.0/go.mod h1:P4fl1q7dY2hnZFxEk4pPSkDHF+QqjitcnDjUQyMM+pM=\n golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n@@ -102,8 +102,8 @@ golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBc\n golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.25.0 h1:r+8e+loiHxRqhXVl6ML1nO3l1+oFoWbnlu2Ehimmi34=\n-golang.org/x/sys v0.25.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n+golang.org/x/sys v0.27.0 h1:wBqf8DvsY9Y/2P8gAfPDEYNuS30J4lPHJxXSb/nJZ+s=\n+golang.org/x/sys v0.27.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\n golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k="
    },
    {
      "sha": "744542864241ac13d11551b577502493ac6e0003",
      "filename": "backend/go.mod",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.mod?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -31,12 +31,12 @@ require (\n \tgithub.com/rs/xid v1.6.0\n \tgithub.com/russross/blackfriday/v2 v2.1.0\n \tgithub.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e\n-\tgithub.com/stretchr/testify v1.9.0\n+\tgithub.com/stretchr/testify v1.10.0\n \tgo.etcd.io/bbolt v1.3.11\n \tgo.uber.org/goleak v1.3.0\n-\tgolang.org/x/crypto v0.27.0\n+\tgolang.org/x/crypto v0.29.0\n \tgolang.org/x/image v0.22.0\n-\tgolang.org/x/net v0.29.0\n+\tgolang.org/x/net v0.31.0\n )\n \n require (\n@@ -70,7 +70,7 @@ require (\n \tgo.mongodb.org/mongo-driver v1.16.0 // indirect\n \tgolang.org/x/oauth2 v0.21.0 // indirect\n \tgolang.org/x/sync v0.9.0 // indirect\n-\tgolang.org/x/sys v0.25.0 // indirect\n+\tgolang.org/x/sys v0.27.0 // indirect\n \tgolang.org/x/text v0.20.0 // indirect\n \tgopkg.in/yaml.v3 v3.0.1 // indirect\n )"
    },
    {
      "sha": "3b229e6cb8651f0bef61b83b220d3c33fd4355d3",
      "filename": "backend/go.sum",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.sum?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -190,8 +190,8 @@ github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/\n github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\n-github.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\n-github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\n+github.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\n+github.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\n github.com/tidwall/btree v0.0.0-20191029221954-400434d76274/go.mod h1:huei1BkDWJ3/sLXmO+bsCNELL+Bp2Kks9OLyQFkzvA8=\n github.com/tidwall/btree v1.7.0 h1:L1fkJH/AuEh5zBnnBbmTwQ5Lt+bRJ5A8EWecslvo9iI=\n github.com/tidwall/btree v1.7.0/go.mod h1:twD9XRA5jj9VUQGELzDO4HPQTNJsoWWfYEL+EUQ2cKY=\n@@ -256,8 +256,8 @@ go.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\n golang.org/x/crypto v0.0.0-20220214200702-86341886e292/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\n-golang.org/x/crypto v0.27.0 h1:GXm2NjJrPaiv/h1tb2UH8QfgC/hOf/+z0p6PT8o1w7A=\n-golang.org/x/crypto v0.27.0/go.mod h1:1Xngt8kV6Dvbssa53Ziq6Eqn0HqbZi5Z6R0ZpwQzt70=\n+golang.org/x/crypto v0.29.0 h1:L5SG1JTTXupVV3n6sUqMTeWbjAyfPwoda2DLX8J8FrQ=\n+golang.org/x/crypto v0.29.0/go.mod h1:+F4F4N5hv6v38hfeYwTdx20oUvLLc+QfrE9Ax9HtgRg=\n golang.org/x/image v0.22.0 h1:UtK5yLUzilVrkjMAZAZ34DXGpASN8i8pj8g+O+yd10g=\n golang.org/x/image v0.22.0/go.mod h1:9hPFhljd4zZ1GNSIZJ49sqbp45GKK9t6w+iXvGqZUz4=\n golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\n@@ -275,8 +275,8 @@ golang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su\n golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\n golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n golang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=\n-golang.org/x/net v0.29.0 h1:5ORfpBpCs4HzDYoodCDBbwHzdR5UrLBZ3sOnUJmFoHo=\n-golang.org/x/net v0.29.0/go.mod h1:gLkgy8jTGERgjzMic6DS9+SP0ajcu6Xu3Orq/SpETg0=\n+golang.org/x/net v0.31.0 h1:68CPQngjLL0r2AlUKiSxtQFKvzRVbnzLwMUn5SzcLHo=\n+golang.org/x/net v0.31.0/go.mod h1:P4fl1q7dY2hnZFxEk4pPSkDHF+QqjitcnDjUQyMM+pM=\n golang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n golang.org/x/oauth2 v0.21.0 h1:tsimM75w1tF/uws5rbeHzIWxEqElMehnc+iW793zsZs=\n golang.org/x/oauth2 v0.21.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\n@@ -305,8 +305,8 @@ golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBc\n golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.25.0 h1:r+8e+loiHxRqhXVl6ML1nO3l1+oFoWbnlu2Ehimmi34=\n-golang.org/x/sys v0.25.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n+golang.org/x/sys v0.27.0 h1:wBqf8DvsY9Y/2P8gAfPDEYNuS30J4lPHJxXSb/nJZ+s=\n+golang.org/x/sys v0.27.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\n golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k="
    },
    {
      "sha": "7e19eba0904d6788fe0bf8115942b2b998d06ffa",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/assertion_compare.go",
      "status": "modified",
      "additions": 22,
      "deletions": 13,
      "changes": 35,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_compare.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_compare.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_compare.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -7,10 +7,13 @@ import (\n \t\"time\"\n )\n \n-type CompareType int\n+// Deprecated: CompareType has only ever been for internal use and has accidentally been published since v1.6.0. Do not use it.\n+type CompareType = compareResult\n+\n+type compareResult int\n \n const (\n-\tcompareLess CompareType = iota - 1\n+\tcompareLess compareResult = iota - 1\n \tcompareEqual\n \tcompareGreater\n )\n@@ -39,7 +42,7 @@ var (\n \tbytesType = reflect.TypeOf([]byte{})\n )\n \n-func compare(obj1, obj2 interface{}, kind reflect.Kind) (CompareType, bool) {\n+func compare(obj1, obj2 interface{}, kind reflect.Kind) (compareResult, bool) {\n \tobj1Value := reflect.ValueOf(obj1)\n \tobj2Value := reflect.ValueOf(obj2)\n \n@@ -325,7 +328,13 @@ func compare(obj1, obj2 interface{}, kind reflect.Kind) (CompareType, bool) {\n \t\t\t\ttimeObj2 = obj2Value.Convert(timeType).Interface().(time.Time)\n \t\t\t}\n \n-\t\t\treturn compare(timeObj1.UnixNano(), timeObj2.UnixNano(), reflect.Int64)\n+\t\t\tif timeObj1.Before(timeObj2) {\n+\t\t\t\treturn compareLess, true\n+\t\t\t}\n+\t\t\tif timeObj1.Equal(timeObj2) {\n+\t\t\t\treturn compareEqual, true\n+\t\t\t}\n+\t\t\treturn compareGreater, true\n \t\t}\n \tcase reflect.Slice:\n \t\t{\n@@ -345,7 +354,7 @@ func compare(obj1, obj2 interface{}, kind reflect.Kind) (CompareType, bool) {\n \t\t\t\tbytesObj2 = obj2Value.Convert(bytesType).Interface().([]byte)\n \t\t\t}\n \n-\t\t\treturn CompareType(bytes.Compare(bytesObj1, bytesObj2)), true\n+\t\t\treturn compareResult(bytes.Compare(bytesObj1, bytesObj2)), true\n \t\t}\n \tcase reflect.Uintptr:\n \t\t{\n@@ -381,7 +390,7 @@ func Greater(t TestingT, e1 interface{}, e2 interface{}, msgAndArgs ...interface\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n \t}\n-\treturn compareTwoValues(t, e1, e2, []CompareType{compareGreater}, \"\\\"%v\\\" is not greater than \\\"%v\\\"\", msgAndArgs...)\n+\treturn compareTwoValues(t, e1, e2, []compareResult{compareGreater}, \"\\\"%v\\\" is not greater than \\\"%v\\\"\", msgAndArgs...)\n }\n \n // GreaterOrEqual asserts that the first element is greater than or equal to the second\n@@ -394,7 +403,7 @@ func GreaterOrEqual(t TestingT, e1 interface{}, e2 interface{}, msgAndArgs ...in\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n \t}\n-\treturn compareTwoValues(t, e1, e2, []CompareType{compareGreater, compareEqual}, \"\\\"%v\\\" is not greater than or equal to \\\"%v\\\"\", msgAndArgs...)\n+\treturn compareTwoValues(t, e1, e2, []compareResult{compareGreater, compareEqual}, \"\\\"%v\\\" is not greater than or equal to \\\"%v\\\"\", msgAndArgs...)\n }\n \n // Less asserts that the first element is less than the second\n@@ -406,7 +415,7 @@ func Less(t TestingT, e1 interface{}, e2 interface{}, msgAndArgs ...interface{})\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n \t}\n-\treturn compareTwoValues(t, e1, e2, []CompareType{compareLess}, \"\\\"%v\\\" is not less than \\\"%v\\\"\", msgAndArgs...)\n+\treturn compareTwoValues(t, e1, e2, []compareResult{compareLess}, \"\\\"%v\\\" is not less than \\\"%v\\\"\", msgAndArgs...)\n }\n \n // LessOrEqual asserts that the first element is less than or equal to the second\n@@ -419,7 +428,7 @@ func LessOrEqual(t TestingT, e1 interface{}, e2 interface{}, msgAndArgs ...inter\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n \t}\n-\treturn compareTwoValues(t, e1, e2, []CompareType{compareLess, compareEqual}, \"\\\"%v\\\" is not less than or equal to \\\"%v\\\"\", msgAndArgs...)\n+\treturn compareTwoValues(t, e1, e2, []compareResult{compareLess, compareEqual}, \"\\\"%v\\\" is not less than or equal to \\\"%v\\\"\", msgAndArgs...)\n }\n \n // Positive asserts that the specified element is positive\n@@ -431,7 +440,7 @@ func Positive(t TestingT, e interface{}, msgAndArgs ...interface{}) bool {\n \t\th.Helper()\n \t}\n \tzero := reflect.Zero(reflect.TypeOf(e))\n-\treturn compareTwoValues(t, e, zero.Interface(), []CompareType{compareGreater}, \"\\\"%v\\\" is not positive\", msgAndArgs...)\n+\treturn compareTwoValues(t, e, zero.Interface(), []compareResult{compareGreater}, \"\\\"%v\\\" is not positive\", msgAndArgs...)\n }\n \n // Negative asserts that the specified element is negative\n@@ -443,10 +452,10 @@ func Negative(t TestingT, e interface{}, msgAndArgs ...interface{}) bool {\n \t\th.Helper()\n \t}\n \tzero := reflect.Zero(reflect.TypeOf(e))\n-\treturn compareTwoValues(t, e, zero.Interface(), []CompareType{compareLess}, \"\\\"%v\\\" is not negative\", msgAndArgs...)\n+\treturn compareTwoValues(t, e, zero.Interface(), []compareResult{compareLess}, \"\\\"%v\\\" is not negative\", msgAndArgs...)\n }\n \n-func compareTwoValues(t TestingT, e1 interface{}, e2 interface{}, allowedComparesResults []CompareType, failMessage string, msgAndArgs ...interface{}) bool {\n+func compareTwoValues(t TestingT, e1 interface{}, e2 interface{}, allowedComparesResults []compareResult, failMessage string, msgAndArgs ...interface{}) bool {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n \t}\n@@ -469,7 +478,7 @@ func compareTwoValues(t TestingT, e1 interface{}, e2 interface{}, allowedCompare\n \treturn true\n }\n \n-func containsValue(values []CompareType, value CompareType) bool {\n+func containsValue(values []compareResult, value compareResult) bool {\n \tfor _, v := range values {\n \t\tif v == value {\n \t\t\treturn true"
    },
    {
      "sha": "19063416577453dce1e29f389479f5f8d9893531",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/assertion_format.go",
      "status": "modified",
      "additions": 30,
      "deletions": 4,
      "changes": 34,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_format.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_format.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_format.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -104,8 +104,8 @@ func EqualExportedValuesf(t TestingT, expected interface{}, actual interface{},\n \treturn EqualExportedValues(t, expected, actual, append([]interface{}{msg}, args...)...)\n }\n \n-// EqualValuesf asserts that two objects are equal or convertible to the same types\n-// and equal.\n+// EqualValuesf asserts that two objects are equal or convertible to the larger\n+// type and equal.\n //\n //\tassert.EqualValuesf(t, uint32(123), int32(123), \"error message %s\", \"formatted\")\n func EqualValuesf(t TestingT, expected interface{}, actual interface{}, msg string, args ...interface{}) bool {\n@@ -186,7 +186,7 @@ func Eventuallyf(t TestingT, condition func() bool, waitFor time.Duration, tick\n //\tassert.EventuallyWithTf(t, func(c *assert.CollectT, \"error message %s\", \"formatted\") {\n //\t\t// add assertions as needed; any assertion failure will fail the current tick\n //\t\tassert.True(c, externalValue, \"expected 'externalValue' to be true\")\n-//\t}, 1*time.Second, 10*time.Second, \"external state has not changed to 'true'; still false\")\n+//\t}, 10*time.Second, 1*time.Second, \"external state has not changed to 'true'; still false\")\n func EventuallyWithTf(t TestingT, condition func(collect *CollectT), waitFor time.Duration, tick time.Duration, msg string, args ...interface{}) bool {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -568,6 +568,23 @@ func NotContainsf(t TestingT, s interface{}, contains interface{}, msg string, a\n \treturn NotContains(t, s, contains, append([]interface{}{msg}, args...)...)\n }\n \n+// NotElementsMatchf asserts that the specified listA(array, slice...) is NOT equal to specified\n+// listB(array, slice...) ignoring the order of the elements. If there are duplicate elements,\n+// the number of appearances of each of them in both lists should not match.\n+// This is an inverse of ElementsMatch.\n+//\n+// assert.NotElementsMatchf(t, [1, 1, 2, 3], [1, 1, 2, 3], \"error message %s\", \"formatted\") -> false\n+//\n+// assert.NotElementsMatchf(t, [1, 1, 2, 3], [1, 2, 3], \"error message %s\", \"formatted\") -> true\n+//\n+// assert.NotElementsMatchf(t, [1, 2, 3], [1, 2, 4], \"error message %s\", \"formatted\") -> true\n+func NotElementsMatchf(t TestingT, listA interface{}, listB interface{}, msg string, args ...interface{}) bool {\n+\tif h, ok := t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\treturn NotElementsMatch(t, listA, listB, append([]interface{}{msg}, args...)...)\n+}\n+\n // NotEmptyf asserts that the specified object is NOT empty.  I.e. not nil, \"\", false, 0 or either\n // a slice or a channel with len == 0.\n //\n@@ -604,7 +621,16 @@ func NotEqualValuesf(t TestingT, expected interface{}, actual interface{}, msg s\n \treturn NotEqualValues(t, expected, actual, append([]interface{}{msg}, args...)...)\n }\n \n-// NotErrorIsf asserts that at none of the errors in err's chain matches target.\n+// NotErrorAsf asserts that none of the errors in err's chain matches target,\n+// but if so, sets target to that error value.\n+func NotErrorAsf(t TestingT, err error, target interface{}, msg string, args ...interface{}) bool {\n+\tif h, ok := t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\treturn NotErrorAs(t, err, target, append([]interface{}{msg}, args...)...)\n+}\n+\n+// NotErrorIsf asserts that none of the errors in err's chain matches target.\n // This is a wrapper for errors.Is.\n func NotErrorIsf(t TestingT, err error, target error, msg string, args ...interface{}) bool {\n \tif h, ok := t.(tHelper); ok {"
    },
    {
      "sha": "21629087baf76463a48b973fd03371f746a032aa",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/assertion_forward.go",
      "status": "modified",
      "additions": 60,
      "deletions": 8,
      "changes": 68,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_forward.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_forward.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_forward.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -186,8 +186,8 @@ func (a *Assertions) EqualExportedValuesf(expected interface{}, actual interface\n \treturn EqualExportedValuesf(a.t, expected, actual, msg, args...)\n }\n \n-// EqualValues asserts that two objects are equal or convertible to the same types\n-// and equal.\n+// EqualValues asserts that two objects are equal or convertible to the larger\n+// type and equal.\n //\n //\ta.EqualValues(uint32(123), int32(123))\n func (a *Assertions) EqualValues(expected interface{}, actual interface{}, msgAndArgs ...interface{}) bool {\n@@ -197,8 +197,8 @@ func (a *Assertions) EqualValues(expected interface{}, actual interface{}, msgAn\n \treturn EqualValues(a.t, expected, actual, msgAndArgs...)\n }\n \n-// EqualValuesf asserts that two objects are equal or convertible to the same types\n-// and equal.\n+// EqualValuesf asserts that two objects are equal or convertible to the larger\n+// type and equal.\n //\n //\ta.EqualValuesf(uint32(123), int32(123), \"error message %s\", \"formatted\")\n func (a *Assertions) EqualValuesf(expected interface{}, actual interface{}, msg string, args ...interface{}) bool {\n@@ -336,7 +336,7 @@ func (a *Assertions) Eventually(condition func() bool, waitFor time.Duration, ti\n //\ta.EventuallyWithT(func(c *assert.CollectT) {\n //\t\t// add assertions as needed; any assertion failure will fail the current tick\n //\t\tassert.True(c, externalValue, \"expected 'externalValue' to be true\")\n-//\t}, 1*time.Second, 10*time.Second, \"external state has not changed to 'true'; still false\")\n+//\t}, 10*time.Second, 1*time.Second, \"external state has not changed to 'true'; still false\")\n func (a *Assertions) EventuallyWithT(condition func(collect *CollectT), waitFor time.Duration, tick time.Duration, msgAndArgs ...interface{}) bool {\n \tif h, ok := a.t.(tHelper); ok {\n \t\th.Helper()\n@@ -361,7 +361,7 @@ func (a *Assertions) EventuallyWithT(condition func(collect *CollectT), waitFor\n //\ta.EventuallyWithTf(func(c *assert.CollectT, \"error message %s\", \"formatted\") {\n //\t\t// add assertions as needed; any assertion failure will fail the current tick\n //\t\tassert.True(c, externalValue, \"expected 'externalValue' to be true\")\n-//\t}, 1*time.Second, 10*time.Second, \"external state has not changed to 'true'; still false\")\n+//\t}, 10*time.Second, 1*time.Second, \"external state has not changed to 'true'; still false\")\n func (a *Assertions) EventuallyWithTf(condition func(collect *CollectT), waitFor time.Duration, tick time.Duration, msg string, args ...interface{}) bool {\n \tif h, ok := a.t.(tHelper); ok {\n \t\th.Helper()\n@@ -1128,6 +1128,40 @@ func (a *Assertions) NotContainsf(s interface{}, contains interface{}, msg strin\n \treturn NotContainsf(a.t, s, contains, msg, args...)\n }\n \n+// NotElementsMatch asserts that the specified listA(array, slice...) is NOT equal to specified\n+// listB(array, slice...) ignoring the order of the elements. If there are duplicate elements,\n+// the number of appearances of each of them in both lists should not match.\n+// This is an inverse of ElementsMatch.\n+//\n+// a.NotElementsMatch([1, 1, 2, 3], [1, 1, 2, 3]) -> false\n+//\n+// a.NotElementsMatch([1, 1, 2, 3], [1, 2, 3]) -> true\n+//\n+// a.NotElementsMatch([1, 2, 3], [1, 2, 4]) -> true\n+func (a *Assertions) NotElementsMatch(listA interface{}, listB interface{}, msgAndArgs ...interface{}) bool {\n+\tif h, ok := a.t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\treturn NotElementsMatch(a.t, listA, listB, msgAndArgs...)\n+}\n+\n+// NotElementsMatchf asserts that the specified listA(array, slice...) is NOT equal to specified\n+// listB(array, slice...) ignoring the order of the elements. If there are duplicate elements,\n+// the number of appearances of each of them in both lists should not match.\n+// This is an inverse of ElementsMatch.\n+//\n+// a.NotElementsMatchf([1, 1, 2, 3], [1, 1, 2, 3], \"error message %s\", \"formatted\") -> false\n+//\n+// a.NotElementsMatchf([1, 1, 2, 3], [1, 2, 3], \"error message %s\", \"formatted\") -> true\n+//\n+// a.NotElementsMatchf([1, 2, 3], [1, 2, 4], \"error message %s\", \"formatted\") -> true\n+func (a *Assertions) NotElementsMatchf(listA interface{}, listB interface{}, msg string, args ...interface{}) bool {\n+\tif h, ok := a.t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\treturn NotElementsMatchf(a.t, listA, listB, msg, args...)\n+}\n+\n // NotEmpty asserts that the specified object is NOT empty.  I.e. not nil, \"\", false, 0 or either\n // a slice or a channel with len == 0.\n //\n@@ -1200,7 +1234,25 @@ func (a *Assertions) NotEqualf(expected interface{}, actual interface{}, msg str\n \treturn NotEqualf(a.t, expected, actual, msg, args...)\n }\n \n-// NotErrorIs asserts that at none of the errors in err's chain matches target.\n+// NotErrorAs asserts that none of the errors in err's chain matches target,\n+// but if so, sets target to that error value.\n+func (a *Assertions) NotErrorAs(err error, target interface{}, msgAndArgs ...interface{}) bool {\n+\tif h, ok := a.t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\treturn NotErrorAs(a.t, err, target, msgAndArgs...)\n+}\n+\n+// NotErrorAsf asserts that none of the errors in err's chain matches target,\n+// but if so, sets target to that error value.\n+func (a *Assertions) NotErrorAsf(err error, target interface{}, msg string, args ...interface{}) bool {\n+\tif h, ok := a.t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\treturn NotErrorAsf(a.t, err, target, msg, args...)\n+}\n+\n+// NotErrorIs asserts that none of the errors in err's chain matches target.\n // This is a wrapper for errors.Is.\n func (a *Assertions) NotErrorIs(err error, target error, msgAndArgs ...interface{}) bool {\n \tif h, ok := a.t.(tHelper); ok {\n@@ -1209,7 +1261,7 @@ func (a *Assertions) NotErrorIs(err error, target error, msgAndArgs ...interface\n \treturn NotErrorIs(a.t, err, target, msgAndArgs...)\n }\n \n-// NotErrorIsf asserts that at none of the errors in err's chain matches target.\n+// NotErrorIsf asserts that none of the errors in err's chain matches target.\n // This is a wrapper for errors.Is.\n func (a *Assertions) NotErrorIsf(err error, target error, msg string, args ...interface{}) bool {\n \tif h, ok := a.t.(tHelper); ok {"
    },
    {
      "sha": "1d2f71824aa936183182a9a3e83ae5b6d2f6029b",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/assertion_order.go",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_order.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_order.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertion_order.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // isOrdered checks that collection contains orderable elements.\n-func isOrdered(t TestingT, object interface{}, allowedComparesResults []CompareType, failMessage string, msgAndArgs ...interface{}) bool {\n+func isOrdered(t TestingT, object interface{}, allowedComparesResults []compareResult, failMessage string, msgAndArgs ...interface{}) bool {\n \tobjKind := reflect.TypeOf(object).Kind()\n \tif objKind != reflect.Slice && objKind != reflect.Array {\n \t\treturn false\n@@ -50,7 +50,7 @@ func isOrdered(t TestingT, object interface{}, allowedComparesResults []CompareT\n //\tassert.IsIncreasing(t, []float{1, 2})\n //\tassert.IsIncreasing(t, []string{\"a\", \"b\"})\n func IsIncreasing(t TestingT, object interface{}, msgAndArgs ...interface{}) bool {\n-\treturn isOrdered(t, object, []CompareType{compareLess}, \"\\\"%v\\\" is not less than \\\"%v\\\"\", msgAndArgs...)\n+\treturn isOrdered(t, object, []compareResult{compareLess}, \"\\\"%v\\\" is not less than \\\"%v\\\"\", msgAndArgs...)\n }\n \n // IsNonIncreasing asserts that the collection is not increasing\n@@ -59,7 +59,7 @@ func IsIncreasing(t TestingT, object interface{}, msgAndArgs ...interface{}) boo\n //\tassert.IsNonIncreasing(t, []float{2, 1})\n //\tassert.IsNonIncreasing(t, []string{\"b\", \"a\"})\n func IsNonIncreasing(t TestingT, object interface{}, msgAndArgs ...interface{}) bool {\n-\treturn isOrdered(t, object, []CompareType{compareEqual, compareGreater}, \"\\\"%v\\\" is not greater than or equal to \\\"%v\\\"\", msgAndArgs...)\n+\treturn isOrdered(t, object, []compareResult{compareEqual, compareGreater}, \"\\\"%v\\\" is not greater than or equal to \\\"%v\\\"\", msgAndArgs...)\n }\n \n // IsDecreasing asserts that the collection is decreasing\n@@ -68,7 +68,7 @@ func IsNonIncreasing(t TestingT, object interface{}, msgAndArgs ...interface{})\n //\tassert.IsDecreasing(t, []float{2, 1})\n //\tassert.IsDecreasing(t, []string{\"b\", \"a\"})\n func IsDecreasing(t TestingT, object interface{}, msgAndArgs ...interface{}) bool {\n-\treturn isOrdered(t, object, []CompareType{compareGreater}, \"\\\"%v\\\" is not greater than \\\"%v\\\"\", msgAndArgs...)\n+\treturn isOrdered(t, object, []compareResult{compareGreater}, \"\\\"%v\\\" is not greater than \\\"%v\\\"\", msgAndArgs...)\n }\n \n // IsNonDecreasing asserts that the collection is not decreasing\n@@ -77,5 +77,5 @@ func IsDecreasing(t TestingT, object interface{}, msgAndArgs ...interface{}) boo\n //\tassert.IsNonDecreasing(t, []float{1, 2})\n //\tassert.IsNonDecreasing(t, []string{\"a\", \"b\"})\n func IsNonDecreasing(t TestingT, object interface{}, msgAndArgs ...interface{}) bool {\n-\treturn isOrdered(t, object, []CompareType{compareLess, compareEqual}, \"\\\"%v\\\" is not less than or equal to \\\"%v\\\"\", msgAndArgs...)\n+\treturn isOrdered(t, object, []compareResult{compareLess, compareEqual}, \"\\\"%v\\\" is not less than or equal to \\\"%v\\\"\", msgAndArgs...)\n }"
    },
    {
      "sha": "4e91332bb51c30dbca434b9b8b32339bc6c3ba23",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/assertions.go",
      "status": "modified",
      "additions": 118,
      "deletions": 39,
      "changes": 157,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fassertions.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -19,7 +19,9 @@ import (\n \n \t\"github.com/davecgh/go-spew/spew\"\n \t\"github.com/pmezard/go-difflib/difflib\"\n-\t\"gopkg.in/yaml.v3\"\n+\n+\t// Wrapper around gopkg.in/yaml.v3\n+\t\"github.com/stretchr/testify/assert/yaml\"\n )\n \n //go:generate sh -c \"cd ../_codegen && go build && cd - && ../_codegen/_codegen -output-package=assert -template=assertion_format.go.tmpl\"\n@@ -45,6 +47,10 @@ type BoolAssertionFunc func(TestingT, bool, ...interface{}) bool\n // for table driven tests.\n type ErrorAssertionFunc func(TestingT, error, ...interface{}) bool\n \n+// PanicAssertionFunc is a common function prototype when validating a panic value.  Can be useful\n+// for table driven tests.\n+type PanicAssertionFunc = func(t TestingT, f PanicTestFunc, msgAndArgs ...interface{}) bool\n+\n // Comparison is a custom function that returns true on success and false on failure\n type Comparison func() (success bool)\n \n@@ -496,7 +502,13 @@ func Same(t TestingT, expected, actual interface{}, msgAndArgs ...interface{}) b\n \t\th.Helper()\n \t}\n \n-\tif !samePointers(expected, actual) {\n+\tsame, ok := samePointers(expected, actual)\n+\tif !ok {\n+\t\treturn Fail(t, \"Both arguments must be pointers\", msgAndArgs...)\n+\t}\n+\n+\tif !same {\n+\t\t// both are pointers but not the same type & pointing to the same address\n \t\treturn Fail(t, fmt.Sprintf(\"Not same: \\n\"+\n \t\t\t\"expected: %p %#v\\n\"+\n \t\t\t\"actual  : %p %#v\", expected, expected, actual, actual), msgAndArgs...)\n@@ -516,29 +528,37 @@ func NotSame(t TestingT, expected, actual interface{}, msgAndArgs ...interface{}\n \t\th.Helper()\n \t}\n \n-\tif samePointers(expected, actual) {\n+\tsame, ok := samePointers(expected, actual)\n+\tif !ok {\n+\t\t//fails when the arguments are not pointers\n+\t\treturn !(Fail(t, \"Both arguments must be pointers\", msgAndArgs...))\n+\t}\n+\n+\tif same {\n \t\treturn Fail(t, fmt.Sprintf(\n \t\t\t\"Expected and actual point to the same object: %p %#v\",\n \t\t\texpected, expected), msgAndArgs...)\n \t}\n \treturn true\n }\n \n-// samePointers compares two generic interface objects and returns whether\n-// they point to the same object\n-func samePointers(first, second interface{}) bool {\n+// samePointers checks if two generic interface objects are pointers of the same\n+// type pointing to the same object. It returns two values: same indicating if\n+// they are the same type and point to the same object, and ok indicating that\n+// both inputs are pointers.\n+func samePointers(first, second interface{}) (same bool, ok bool) {\n \tfirstPtr, secondPtr := reflect.ValueOf(first), reflect.ValueOf(second)\n \tif firstPtr.Kind() != reflect.Ptr || secondPtr.Kind() != reflect.Ptr {\n-\t\treturn false\n+\t\treturn false, false //not both are pointers\n \t}\n \n \tfirstType, secondType := reflect.TypeOf(first), reflect.TypeOf(second)\n \tif firstType != secondType {\n-\t\treturn false\n+\t\treturn false, true // both are pointers, but of different types\n \t}\n \n \t// compare pointer addresses\n-\treturn first == second\n+\treturn first == second, true\n }\n \n // formatUnequalValues takes two values of arbitrary types and returns string\n@@ -572,8 +592,8 @@ func truncatingFormat(data interface{}) string {\n \treturn value\n }\n \n-// EqualValues asserts that two objects are equal or convertible to the same types\n-// and equal.\n+// EqualValues asserts that two objects are equal or convertible to the larger\n+// type and equal.\n //\n //\tassert.EqualValues(t, uint32(123), int32(123))\n func EqualValues(t TestingT, expected, actual interface{}, msgAndArgs ...interface{}) bool {\n@@ -615,21 +635,6 @@ func EqualExportedValues(t TestingT, expected, actual interface{}, msgAndArgs ..\n \t\treturn Fail(t, fmt.Sprintf(\"Types expected to match exactly\\n\\t%v != %v\", aType, bType), msgAndArgs...)\n \t}\n \n-\tif aType.Kind() == reflect.Ptr {\n-\t\taType = aType.Elem()\n-\t}\n-\tif bType.Kind() == reflect.Ptr {\n-\t\tbType = bType.Elem()\n-\t}\n-\n-\tif aType.Kind() != reflect.Struct {\n-\t\treturn Fail(t, fmt.Sprintf(\"Types expected to both be struct or pointer to struct \\n\\t%v != %v\", aType.Kind(), reflect.Struct), msgAndArgs...)\n-\t}\n-\n-\tif bType.Kind() != reflect.Struct {\n-\t\treturn Fail(t, fmt.Sprintf(\"Types expected to both be struct or pointer to struct \\n\\t%v != %v\", bType.Kind(), reflect.Struct), msgAndArgs...)\n-\t}\n-\n \texpected = copyExportedFields(expected)\n \tactual = copyExportedFields(actual)\n \n@@ -1170,6 +1175,39 @@ func formatListDiff(listA, listB interface{}, extraA, extraB []interface{}) stri\n \treturn msg.String()\n }\n \n+// NotElementsMatch asserts that the specified listA(array, slice...) is NOT equal to specified\n+// listB(array, slice...) ignoring the order of the elements. If there are duplicate elements,\n+// the number of appearances of each of them in both lists should not match.\n+// This is an inverse of ElementsMatch.\n+//\n+// assert.NotElementsMatch(t, [1, 1, 2, 3], [1, 1, 2, 3]) -> false\n+//\n+// assert.NotElementsMatch(t, [1, 1, 2, 3], [1, 2, 3]) -> true\n+//\n+// assert.NotElementsMatch(t, [1, 2, 3], [1, 2, 4]) -> true\n+func NotElementsMatch(t TestingT, listA, listB interface{}, msgAndArgs ...interface{}) (ok bool) {\n+\tif h, ok := t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tif isEmpty(listA) && isEmpty(listB) {\n+\t\treturn Fail(t, \"listA and listB contain the same elements\", msgAndArgs)\n+\t}\n+\n+\tif !isList(t, listA, msgAndArgs...) {\n+\t\treturn Fail(t, \"listA is not a list type\", msgAndArgs...)\n+\t}\n+\tif !isList(t, listB, msgAndArgs...) {\n+\t\treturn Fail(t, \"listB is not a list type\", msgAndArgs...)\n+\t}\n+\n+\textraA, extraB := diffLists(listA, listB)\n+\tif len(extraA) == 0 && len(extraB) == 0 {\n+\t\treturn Fail(t, \"listA and listB contain the same elements\", msgAndArgs)\n+\t}\n+\n+\treturn true\n+}\n+\n // Condition uses a Comparison to assert a complex condition.\n func Condition(t TestingT, comp Comparison, msgAndArgs ...interface{}) bool {\n \tif h, ok := t.(tHelper); ok {\n@@ -1488,6 +1526,9 @@ func InEpsilon(t TestingT, expected, actual interface{}, epsilon float64, msgAnd\n \tif err != nil {\n \t\treturn Fail(t, err.Error(), msgAndArgs...)\n \t}\n+\tif math.IsNaN(actualEpsilon) {\n+\t\treturn Fail(t, \"relative error is NaN\", msgAndArgs...)\n+\t}\n \tif actualEpsilon > epsilon {\n \t\treturn Fail(t, fmt.Sprintf(\"Relative error is too high: %#v (expected)\\n\"+\n \t\t\t\"        < %#v (actual)\", epsilon, actualEpsilon), msgAndArgs...)\n@@ -1611,15 +1652,21 @@ func ErrorContains(t TestingT, theError error, contains string, msgAndArgs ...in\n \n // matchRegexp return true if a specified regexp matches a string.\n func matchRegexp(rx interface{}, str interface{}) bool {\n-\n \tvar r *regexp.Regexp\n \tif rr, ok := rx.(*regexp.Regexp); ok {\n \t\tr = rr\n \t} else {\n \t\tr = regexp.MustCompile(fmt.Sprint(rx))\n \t}\n \n-\treturn (r.FindStringIndex(fmt.Sprint(str)) != nil)\n+\tswitch v := str.(type) {\n+\tcase []byte:\n+\t\treturn r.Match(v)\n+\tcase string:\n+\t\treturn r.MatchString(v)\n+\tdefault:\n+\t\treturn r.MatchString(fmt.Sprint(v))\n+\t}\n \n }\n \n@@ -1872,7 +1919,7 @@ var spewConfigStringerEnabled = spew.ConfigState{\n \tMaxDepth:                10,\n }\n \n-type tHelper interface {\n+type tHelper = interface {\n \tHelper()\n }\n \n@@ -1911,6 +1958,9 @@ func Eventually(t TestingT, condition func() bool, waitFor time.Duration, tick t\n \n // CollectT implements the TestingT interface and collects all errors.\n type CollectT struct {\n+\t// A slice of errors. Non-nil slice denotes a failure.\n+\t// If it's non-nil but len(c.errors) == 0, this is also a failure\n+\t// obtained by direct c.FailNow() call.\n \terrors []error\n }\n \n@@ -1919,9 +1969,10 @@ func (c *CollectT) Errorf(format string, args ...interface{}) {\n \tc.errors = append(c.errors, fmt.Errorf(format, args...))\n }\n \n-// FailNow panics.\n-func (*CollectT) FailNow() {\n-\tpanic(\"Assertion failed\")\n+// FailNow stops execution by calling runtime.Goexit.\n+func (c *CollectT) FailNow() {\n+\tc.fail()\n+\truntime.Goexit()\n }\n \n // Deprecated: That was a method for internal usage that should not have been published. Now just panics.\n@@ -1934,6 +1985,16 @@ func (*CollectT) Copy(TestingT) {\n \tpanic(\"Copy() is deprecated\")\n }\n \n+func (c *CollectT) fail() {\n+\tif !c.failed() {\n+\t\tc.errors = []error{} // Make it non-nil to mark a failure.\n+\t}\n+}\n+\n+func (c *CollectT) failed() bool {\n+\treturn c.errors != nil\n+}\n+\n // EventuallyWithT asserts that given condition will be met in waitFor time,\n // periodically checking target function each tick. In contrast to Eventually,\n // it supplies a CollectT to the condition function, so that the condition\n@@ -1951,14 +2012,14 @@ func (*CollectT) Copy(TestingT) {\n //\tassert.EventuallyWithT(t, func(c *assert.CollectT) {\n //\t\t// add assertions as needed; any assertion failure will fail the current tick\n //\t\tassert.True(c, externalValue, \"expected 'externalValue' to be true\")\n-//\t}, 1*time.Second, 10*time.Second, \"external state has not changed to 'true'; still false\")\n+//\t}, 10*time.Second, 1*time.Second, \"external state has not changed to 'true'; still false\")\n func EventuallyWithT(t TestingT, condition func(collect *CollectT), waitFor time.Duration, tick time.Duration, msgAndArgs ...interface{}) bool {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n \t}\n \n \tvar lastFinishedTickErrs []error\n-\tch := make(chan []error, 1)\n+\tch := make(chan *CollectT, 1)\n \n \ttimer := time.NewTimer(waitFor)\n \tdefer timer.Stop()\n@@ -1978,16 +2039,16 @@ func EventuallyWithT(t TestingT, condition func(collect *CollectT), waitFor time\n \t\t\tgo func() {\n \t\t\t\tcollect := new(CollectT)\n \t\t\t\tdefer func() {\n-\t\t\t\t\tch <- collect.errors\n+\t\t\t\t\tch <- collect\n \t\t\t\t}()\n \t\t\t\tcondition(collect)\n \t\t\t}()\n-\t\tcase errs := <-ch:\n-\t\t\tif len(errs) == 0 {\n+\t\tcase collect := <-ch:\n+\t\t\tif !collect.failed() {\n \t\t\t\treturn true\n \t\t\t}\n \t\t\t// Keep the errors from the last ended condition, so that they can be copied to t if timeout is reached.\n-\t\t\tlastFinishedTickErrs = errs\n+\t\t\tlastFinishedTickErrs = collect.errors\n \t\t\ttick = ticker.C\n \t\t}\n \t}\n@@ -2049,7 +2110,7 @@ func ErrorIs(t TestingT, err, target error, msgAndArgs ...interface{}) bool {\n \t), msgAndArgs...)\n }\n \n-// NotErrorIs asserts that at none of the errors in err's chain matches target.\n+// NotErrorIs asserts that none of the errors in err's chain matches target.\n // This is a wrapper for errors.Is.\n func NotErrorIs(t TestingT, err, target error, msgAndArgs ...interface{}) bool {\n \tif h, ok := t.(tHelper); ok {\n@@ -2090,6 +2151,24 @@ func ErrorAs(t TestingT, err error, target interface{}, msgAndArgs ...interface{\n \t), msgAndArgs...)\n }\n \n+// NotErrorAs asserts that none of the errors in err's chain matches target,\n+// but if so, sets target to that error value.\n+func NotErrorAs(t TestingT, err error, target interface{}, msgAndArgs ...interface{}) bool {\n+\tif h, ok := t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tif !errors.As(err, target) {\n+\t\treturn true\n+\t}\n+\n+\tchain := buildErrorChainString(err)\n+\n+\treturn Fail(t, fmt.Sprintf(\"Target error should not be in err chain:\\n\"+\n+\t\t\"found: %q\\n\"+\n+\t\t\"in chain: %s\", target, chain,\n+\t), msgAndArgs...)\n+}\n+\n func buildErrorChainString(err error) string {\n \tif err == nil {\n \t\treturn \"\""
    },
    {
      "sha": "baa0cc7d7fca756e8abc4e5613a8fb4cffe3c840",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/yaml/yaml_custom.go",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fyaml%2Fyaml_custom.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fyaml%2Fyaml_custom.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fyaml%2Fyaml_custom.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -0,0 +1,25 @@\n+//go:build testify_yaml_custom && !testify_yaml_fail && !testify_yaml_default\n+// +build testify_yaml_custom,!testify_yaml_fail,!testify_yaml_default\n+\n+// Package yaml is an implementation of YAML functions that calls a pluggable implementation.\n+//\n+// This implementation is selected with the testify_yaml_custom build tag.\n+//\n+//\tgo test -tags testify_yaml_custom\n+//\n+// This implementation can be used at build time to replace the default implementation\n+// to avoid linking with [gopkg.in/yaml.v3].\n+//\n+// In your test package:\n+//\n+//\t\timport assertYaml \"github.com/stretchr/testify/assert/yaml\"\n+//\n+//\t\tfunc init() {\n+//\t\t\tassertYaml.Unmarshal = func (in []byte, out interface{}) error {\n+//\t\t\t\t// ...\n+//\t     \t\t\treturn nil\n+//\t\t\t}\n+//\t\t}\n+package yaml\n+\n+var Unmarshal func(in []byte, out interface{}) error"
    },
    {
      "sha": "b83c6cf64c2a11c03a6b82c7db05e0328e241ca4",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/yaml/yaml_default.go",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fyaml%2Fyaml_default.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fyaml%2Fyaml_default.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fyaml%2Fyaml_default.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -0,0 +1,37 @@\n+//go:build !testify_yaml_fail && !testify_yaml_custom\n+// +build !testify_yaml_fail,!testify_yaml_custom\n+\n+// Package yaml is just an indirection to handle YAML deserialization.\n+//\n+// This package is just an indirection that allows the builder to override the\n+// indirection with an alternative implementation of this package that uses\n+// another implementation of YAML deserialization. This allows to not either not\n+// use YAML deserialization at all, or to use another implementation than\n+// [gopkg.in/yaml.v3] (for example for license compatibility reasons, see [PR #1120]).\n+//\n+// Alternative implementations are selected using build tags:\n+//\n+//   - testify_yaml_fail: [Unmarshal] always fails with an error\n+//   - testify_yaml_custom: [Unmarshal] is a variable. Caller must initialize it\n+//     before calling any of [github.com/stretchr/testify/assert.YAMLEq] or\n+//     [github.com/stretchr/testify/assert.YAMLEqf].\n+//\n+// Usage:\n+//\n+//\tgo test -tags testify_yaml_fail\n+//\n+// You can check with \"go list\" which implementation is linked:\n+//\n+//\tgo list -f '{{.Imports}}' github.com/stretchr/testify/assert/yaml\n+//\tgo list -tags testify_yaml_fail -f '{{.Imports}}' github.com/stretchr/testify/assert/yaml\n+//\tgo list -tags testify_yaml_custom -f '{{.Imports}}' github.com/stretchr/testify/assert/yaml\n+//\n+// [PR #1120]: https://github.com/stretchr/testify/pull/1120\n+package yaml\n+\n+import goyaml \"gopkg.in/yaml.v3\"\n+\n+// Unmarshal is just a wrapper of [gopkg.in/yaml.v3.Unmarshal].\n+func Unmarshal(in []byte, out interface{}) error {\n+\treturn goyaml.Unmarshal(in, out)\n+}"
    },
    {
      "sha": "e78f7dfe69a16c0cbfec4d8e5eb0d9a16f7f8150",
      "filename": "backend/vendor/github.com/stretchr/testify/assert/yaml/yaml_fail.go",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fyaml%2Fyaml_fail.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fyaml%2Fyaml_fail.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Fassert%2Fyaml%2Fyaml_fail.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -0,0 +1,18 @@\n+//go:build testify_yaml_fail && !testify_yaml_custom && !testify_yaml_default\n+// +build testify_yaml_fail,!testify_yaml_custom,!testify_yaml_default\n+\n+// Package yaml is an implementation of YAML functions that always fail.\n+//\n+// This implementation can be used at build time to replace the default implementation\n+// to avoid linking with [gopkg.in/yaml.v3]:\n+//\n+//\tgo test -tags testify_yaml_fail\n+package yaml\n+\n+import \"errors\"\n+\n+var errNotImplemented = errors.New(\"YAML functions are not available (see https://pkg.go.dev/github.com/stretchr/testify/assert/yaml)\")\n+\n+func Unmarshal([]byte, interface{}) error {\n+\treturn errNotImplemented\n+}"
    },
    {
      "sha": "d8921950d7bef81a75b64e696885acf16848d8b1",
      "filename": "backend/vendor/github.com/stretchr/testify/require/require.go",
      "status": "modified",
      "additions": 248,
      "deletions": 184,
      "changes": 432,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -34,9 +34,9 @@ func Conditionf(t TestingT, comp assert.Comparison, msg string, args ...interfac\n // Contains asserts that the specified string, list(array, slice...) or map contains the\n // specified substring or element.\n //\n-//\tassert.Contains(t, \"Hello World\", \"World\")\n-//\tassert.Contains(t, [\"Hello\", \"World\"], \"World\")\n-//\tassert.Contains(t, {\"Hello\": \"World\"}, \"Hello\")\n+//\trequire.Contains(t, \"Hello World\", \"World\")\n+//\trequire.Contains(t, [\"Hello\", \"World\"], \"World\")\n+//\trequire.Contains(t, {\"Hello\": \"World\"}, \"Hello\")\n func Contains(t TestingT, s interface{}, contains interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -50,9 +50,9 @@ func Contains(t TestingT, s interface{}, contains interface{}, msgAndArgs ...int\n // Containsf asserts that the specified string, list(array, slice...) or map contains the\n // specified substring or element.\n //\n-//\tassert.Containsf(t, \"Hello World\", \"World\", \"error message %s\", \"formatted\")\n-//\tassert.Containsf(t, [\"Hello\", \"World\"], \"World\", \"error message %s\", \"formatted\")\n-//\tassert.Containsf(t, {\"Hello\": \"World\"}, \"Hello\", \"error message %s\", \"formatted\")\n+//\trequire.Containsf(t, \"Hello World\", \"World\", \"error message %s\", \"formatted\")\n+//\trequire.Containsf(t, [\"Hello\", \"World\"], \"World\", \"error message %s\", \"formatted\")\n+//\trequire.Containsf(t, {\"Hello\": \"World\"}, \"Hello\", \"error message %s\", \"formatted\")\n func Containsf(t TestingT, s interface{}, contains interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -91,7 +91,7 @@ func DirExistsf(t TestingT, path string, msg string, args ...interface{}) {\n // listB(array, slice...) ignoring the order of the elements. If there are duplicate elements,\n // the number of appearances of each of them in both lists should match.\n //\n-// assert.ElementsMatch(t, [1, 3, 2, 3], [1, 3, 3, 2])\n+// require.ElementsMatch(t, [1, 3, 2, 3], [1, 3, 3, 2])\n func ElementsMatch(t TestingT, listA interface{}, listB interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -106,7 +106,7 @@ func ElementsMatch(t TestingT, listA interface{}, listB interface{}, msgAndArgs\n // listB(array, slice...) ignoring the order of the elements. If there are duplicate elements,\n // the number of appearances of each of them in both lists should match.\n //\n-// assert.ElementsMatchf(t, [1, 3, 2, 3], [1, 3, 3, 2], \"error message %s\", \"formatted\")\n+// require.ElementsMatchf(t, [1, 3, 2, 3], [1, 3, 3, 2], \"error message %s\", \"formatted\")\n func ElementsMatchf(t TestingT, listA interface{}, listB interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -120,7 +120,7 @@ func ElementsMatchf(t TestingT, listA interface{}, listB interface{}, msg string\n // Empty asserts that the specified object is empty.  I.e. nil, \"\", false, 0 or either\n // a slice or a channel with len == 0.\n //\n-//\tassert.Empty(t, obj)\n+//\trequire.Empty(t, obj)\n func Empty(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -134,7 +134,7 @@ func Empty(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n // Emptyf asserts that the specified object is empty.  I.e. nil, \"\", false, 0 or either\n // a slice or a channel with len == 0.\n //\n-//\tassert.Emptyf(t, obj, \"error message %s\", \"formatted\")\n+//\trequire.Emptyf(t, obj, \"error message %s\", \"formatted\")\n func Emptyf(t TestingT, object interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -147,7 +147,7 @@ func Emptyf(t TestingT, object interface{}, msg string, args ...interface{}) {\n \n // Equal asserts that two objects are equal.\n //\n-//\tassert.Equal(t, 123, 123)\n+//\trequire.Equal(t, 123, 123)\n //\n // Pointer variable equality is determined based on the equality of the\n // referenced values (as opposed to the memory addresses). Function equality\n@@ -166,7 +166,7 @@ func Equal(t TestingT, expected interface{}, actual interface{}, msgAndArgs ...i\n // and that it is equal to the provided error.\n //\n //\tactualObj, err := SomeFunction()\n-//\tassert.EqualError(t, err,  expectedErrorString)\n+//\trequire.EqualError(t, err,  expectedErrorString)\n func EqualError(t TestingT, theError error, errString string, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -181,7 +181,7 @@ func EqualError(t TestingT, theError error, errString string, msgAndArgs ...inte\n // and that it is equal to the provided error.\n //\n //\tactualObj, err := SomeFunction()\n-//\tassert.EqualErrorf(t, err,  expectedErrorString, \"error message %s\", \"formatted\")\n+//\trequire.EqualErrorf(t, err,  expectedErrorString, \"error message %s\", \"formatted\")\n func EqualErrorf(t TestingT, theError error, errString string, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -200,8 +200,8 @@ func EqualErrorf(t TestingT, theError error, errString string, msg string, args\n //\t\tExported     \tint\n //\t\tnotExported   \tint\n //\t }\n-//\t assert.EqualExportedValues(t, S{1, 2}, S{1, 3}) => true\n-//\t assert.EqualExportedValues(t, S{1, 2}, S{2, 3}) => false\n+//\t require.EqualExportedValues(t, S{1, 2}, S{1, 3}) => true\n+//\t require.EqualExportedValues(t, S{1, 2}, S{2, 3}) => false\n func EqualExportedValues(t TestingT, expected interface{}, actual interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -220,8 +220,8 @@ func EqualExportedValues(t TestingT, expected interface{}, actual interface{}, m\n //\t\tExported     \tint\n //\t\tnotExported   \tint\n //\t }\n-//\t assert.EqualExportedValuesf(t, S{1, 2}, S{1, 3}, \"error message %s\", \"formatted\") => true\n-//\t assert.EqualExportedValuesf(t, S{1, 2}, S{2, 3}, \"error message %s\", \"formatted\") => false\n+//\t require.EqualExportedValuesf(t, S{1, 2}, S{1, 3}, \"error message %s\", \"formatted\") => true\n+//\t require.EqualExportedValuesf(t, S{1, 2}, S{2, 3}, \"error message %s\", \"formatted\") => false\n func EqualExportedValuesf(t TestingT, expected interface{}, actual interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -232,10 +232,10 @@ func EqualExportedValuesf(t TestingT, expected interface{}, actual interface{},\n \tt.FailNow()\n }\n \n-// EqualValues asserts that two objects are equal or convertible to the same types\n-// and equal.\n+// EqualValues asserts that two objects are equal or convertible to the larger\n+// type and equal.\n //\n-//\tassert.EqualValues(t, uint32(123), int32(123))\n+//\trequire.EqualValues(t, uint32(123), int32(123))\n func EqualValues(t TestingT, expected interface{}, actual interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -246,10 +246,10 @@ func EqualValues(t TestingT, expected interface{}, actual interface{}, msgAndArg\n \tt.FailNow()\n }\n \n-// EqualValuesf asserts that two objects are equal or convertible to the same types\n-// and equal.\n+// EqualValuesf asserts that two objects are equal or convertible to the larger\n+// type and equal.\n //\n-//\tassert.EqualValuesf(t, uint32(123), int32(123), \"error message %s\", \"formatted\")\n+//\trequire.EqualValuesf(t, uint32(123), int32(123), \"error message %s\", \"formatted\")\n func EqualValuesf(t TestingT, expected interface{}, actual interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -262,7 +262,7 @@ func EqualValuesf(t TestingT, expected interface{}, actual interface{}, msg stri\n \n // Equalf asserts that two objects are equal.\n //\n-//\tassert.Equalf(t, 123, 123, \"error message %s\", \"formatted\")\n+//\trequire.Equalf(t, 123, 123, \"error message %s\", \"formatted\")\n //\n // Pointer variable equality is determined based on the equality of the\n // referenced values (as opposed to the memory addresses). Function equality\n@@ -280,8 +280,8 @@ func Equalf(t TestingT, expected interface{}, actual interface{}, msg string, ar\n // Error asserts that a function returned an error (i.e. not `nil`).\n //\n //\t  actualObj, err := SomeFunction()\n-//\t  if assert.Error(t, err) {\n-//\t\t   assert.Equal(t, expectedError, err)\n+//\t  if require.Error(t, err) {\n+//\t\t   require.Equal(t, expectedError, err)\n //\t  }\n func Error(t TestingT, err error, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n@@ -321,7 +321,7 @@ func ErrorAsf(t TestingT, err error, target interface{}, msg string, args ...int\n // and that the error contains the specified substring.\n //\n //\tactualObj, err := SomeFunction()\n-//\tassert.ErrorContains(t, err,  expectedErrorSubString)\n+//\trequire.ErrorContains(t, err,  expectedErrorSubString)\n func ErrorContains(t TestingT, theError error, contains string, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -336,7 +336,7 @@ func ErrorContains(t TestingT, theError error, contains string, msgAndArgs ...in\n // and that the error contains the specified substring.\n //\n //\tactualObj, err := SomeFunction()\n-//\tassert.ErrorContainsf(t, err,  expectedErrorSubString, \"error message %s\", \"formatted\")\n+//\trequire.ErrorContainsf(t, err,  expectedErrorSubString, \"error message %s\", \"formatted\")\n func ErrorContainsf(t TestingT, theError error, contains string, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -374,8 +374,8 @@ func ErrorIsf(t TestingT, err error, target error, msg string, args ...interface\n // Errorf asserts that a function returned an error (i.e. not `nil`).\n //\n //\t  actualObj, err := SomeFunction()\n-//\t  if assert.Errorf(t, err, \"error message %s\", \"formatted\") {\n-//\t\t   assert.Equal(t, expectedErrorf, err)\n+//\t  if require.Errorf(t, err, \"error message %s\", \"formatted\") {\n+//\t\t   require.Equal(t, expectedErrorf, err)\n //\t  }\n func Errorf(t TestingT, err error, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n@@ -390,7 +390,7 @@ func Errorf(t TestingT, err error, msg string, args ...interface{}) {\n // Eventually asserts that given condition will be met in waitFor time,\n // periodically checking target function each tick.\n //\n-//\tassert.Eventually(t, func() bool { return true; }, time.Second, 10*time.Millisecond)\n+//\trequire.Eventually(t, func() bool { return true; }, time.Second, 10*time.Millisecond)\n func Eventually(t TestingT, condition func() bool, waitFor time.Duration, tick time.Duration, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -415,10 +415,10 @@ func Eventually(t TestingT, condition func() bool, waitFor time.Duration, tick t\n //\t\ttime.Sleep(8*time.Second)\n //\t\texternalValue = true\n //\t}()\n-//\tassert.EventuallyWithT(t, func(c *assert.CollectT) {\n+//\trequire.EventuallyWithT(t, func(c *require.CollectT) {\n //\t\t// add assertions as needed; any assertion failure will fail the current tick\n-//\t\tassert.True(c, externalValue, \"expected 'externalValue' to be true\")\n-//\t}, 1*time.Second, 10*time.Second, \"external state has not changed to 'true'; still false\")\n+//\t\trequire.True(c, externalValue, \"expected 'externalValue' to be true\")\n+//\t}, 10*time.Second, 1*time.Second, \"external state has not changed to 'true'; still false\")\n func EventuallyWithT(t TestingT, condition func(collect *assert.CollectT), waitFor time.Duration, tick time.Duration, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -443,10 +443,10 @@ func EventuallyWithT(t TestingT, condition func(collect *assert.CollectT), waitF\n //\t\ttime.Sleep(8*time.Second)\n //\t\texternalValue = true\n //\t}()\n-//\tassert.EventuallyWithTf(t, func(c *assert.CollectT, \"error message %s\", \"formatted\") {\n+//\trequire.EventuallyWithTf(t, func(c *require.CollectT, \"error message %s\", \"formatted\") {\n //\t\t// add assertions as needed; any assertion failure will fail the current tick\n-//\t\tassert.True(c, externalValue, \"expected 'externalValue' to be true\")\n-//\t}, 1*time.Second, 10*time.Second, \"external state has not changed to 'true'; still false\")\n+//\t\trequire.True(c, externalValue, \"expected 'externalValue' to be true\")\n+//\t}, 10*time.Second, 1*time.Second, \"external state has not changed to 'true'; still false\")\n func EventuallyWithTf(t TestingT, condition func(collect *assert.CollectT), waitFor time.Duration, tick time.Duration, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -460,7 +460,7 @@ func EventuallyWithTf(t TestingT, condition func(collect *assert.CollectT), wait\n // Eventuallyf asserts that given condition will be met in waitFor time,\n // periodically checking target function each tick.\n //\n-//\tassert.Eventuallyf(t, func() bool { return true; }, time.Second, 10*time.Millisecond, \"error message %s\", \"formatted\")\n+//\trequire.Eventuallyf(t, func() bool { return true; }, time.Second, 10*time.Millisecond, \"error message %s\", \"formatted\")\n func Eventuallyf(t TestingT, condition func() bool, waitFor time.Duration, tick time.Duration, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -473,7 +473,7 @@ func Eventuallyf(t TestingT, condition func() bool, waitFor time.Duration, tick\n \n // Exactly asserts that two objects are equal in value and type.\n //\n-//\tassert.Exactly(t, int32(123), int64(123))\n+//\trequire.Exactly(t, int32(123), int64(123))\n func Exactly(t TestingT, expected interface{}, actual interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -486,7 +486,7 @@ func Exactly(t TestingT, expected interface{}, actual interface{}, msgAndArgs ..\n \n // Exactlyf asserts that two objects are equal in value and type.\n //\n-//\tassert.Exactlyf(t, int32(123), int64(123), \"error message %s\", \"formatted\")\n+//\trequire.Exactlyf(t, int32(123), int64(123), \"error message %s\", \"formatted\")\n func Exactlyf(t TestingT, expected interface{}, actual interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -543,7 +543,7 @@ func Failf(t TestingT, failureMessage string, msg string, args ...interface{}) {\n \n // False asserts that the specified value is false.\n //\n-//\tassert.False(t, myBool)\n+//\trequire.False(t, myBool)\n func False(t TestingT, value bool, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -556,7 +556,7 @@ func False(t TestingT, value bool, msgAndArgs ...interface{}) {\n \n // Falsef asserts that the specified value is false.\n //\n-//\tassert.Falsef(t, myBool, \"error message %s\", \"formatted\")\n+//\trequire.Falsef(t, myBool, \"error message %s\", \"formatted\")\n func Falsef(t TestingT, value bool, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -593,9 +593,9 @@ func FileExistsf(t TestingT, path string, msg string, args ...interface{}) {\n \n // Greater asserts that the first element is greater than the second\n //\n-//\tassert.Greater(t, 2, 1)\n-//\tassert.Greater(t, float64(2), float64(1))\n-//\tassert.Greater(t, \"b\", \"a\")\n+//\trequire.Greater(t, 2, 1)\n+//\trequire.Greater(t, float64(2), float64(1))\n+//\trequire.Greater(t, \"b\", \"a\")\n func Greater(t TestingT, e1 interface{}, e2 interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -608,10 +608,10 @@ func Greater(t TestingT, e1 interface{}, e2 interface{}, msgAndArgs ...interface\n \n // GreaterOrEqual asserts that the first element is greater than or equal to the second\n //\n-//\tassert.GreaterOrEqual(t, 2, 1)\n-//\tassert.GreaterOrEqual(t, 2, 2)\n-//\tassert.GreaterOrEqual(t, \"b\", \"a\")\n-//\tassert.GreaterOrEqual(t, \"b\", \"b\")\n+//\trequire.GreaterOrEqual(t, 2, 1)\n+//\trequire.GreaterOrEqual(t, 2, 2)\n+//\trequire.GreaterOrEqual(t, \"b\", \"a\")\n+//\trequire.GreaterOrEqual(t, \"b\", \"b\")\n func GreaterOrEqual(t TestingT, e1 interface{}, e2 interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -624,10 +624,10 @@ func GreaterOrEqual(t TestingT, e1 interface{}, e2 interface{}, msgAndArgs ...in\n \n // GreaterOrEqualf asserts that the first element is greater than or equal to the second\n //\n-//\tassert.GreaterOrEqualf(t, 2, 1, \"error message %s\", \"formatted\")\n-//\tassert.GreaterOrEqualf(t, 2, 2, \"error message %s\", \"formatted\")\n-//\tassert.GreaterOrEqualf(t, \"b\", \"a\", \"error message %s\", \"formatted\")\n-//\tassert.GreaterOrEqualf(t, \"b\", \"b\", \"error message %s\", \"formatted\")\n+//\trequire.GreaterOrEqualf(t, 2, 1, \"error message %s\", \"formatted\")\n+//\trequire.GreaterOrEqualf(t, 2, 2, \"error message %s\", \"formatted\")\n+//\trequire.GreaterOrEqualf(t, \"b\", \"a\", \"error message %s\", \"formatted\")\n+//\trequire.GreaterOrEqualf(t, \"b\", \"b\", \"error message %s\", \"formatted\")\n func GreaterOrEqualf(t TestingT, e1 interface{}, e2 interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -640,9 +640,9 @@ func GreaterOrEqualf(t TestingT, e1 interface{}, e2 interface{}, msg string, arg\n \n // Greaterf asserts that the first element is greater than the second\n //\n-//\tassert.Greaterf(t, 2, 1, \"error message %s\", \"formatted\")\n-//\tassert.Greaterf(t, float64(2), float64(1), \"error message %s\", \"formatted\")\n-//\tassert.Greaterf(t, \"b\", \"a\", \"error message %s\", \"formatted\")\n+//\trequire.Greaterf(t, 2, 1, \"error message %s\", \"formatted\")\n+//\trequire.Greaterf(t, float64(2), float64(1), \"error message %s\", \"formatted\")\n+//\trequire.Greaterf(t, \"b\", \"a\", \"error message %s\", \"formatted\")\n func Greaterf(t TestingT, e1 interface{}, e2 interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -656,7 +656,7 @@ func Greaterf(t TestingT, e1 interface{}, e2 interface{}, msg string, args ...in\n // HTTPBodyContains asserts that a specified handler returns a\n // body that contains a string.\n //\n-//\tassert.HTTPBodyContains(t, myHandler, \"GET\", \"www.google.com\", nil, \"I'm Feeling Lucky\")\n+//\trequire.HTTPBodyContains(t, myHandler, \"GET\", \"www.google.com\", nil, \"I'm Feeling Lucky\")\n //\n // Returns whether the assertion was successful (true) or not (false).\n func HTTPBodyContains(t TestingT, handler http.HandlerFunc, method string, url string, values url.Values, str interface{}, msgAndArgs ...interface{}) {\n@@ -672,7 +672,7 @@ func HTTPBodyContains(t TestingT, handler http.HandlerFunc, method string, url s\n // HTTPBodyContainsf asserts that a specified handler returns a\n // body that contains a string.\n //\n-//\tassert.HTTPBodyContainsf(t, myHandler, \"GET\", \"www.google.com\", nil, \"I'm Feeling Lucky\", \"error message %s\", \"formatted\")\n+//\trequire.HTTPBodyContainsf(t, myHandler, \"GET\", \"www.google.com\", nil, \"I'm Feeling Lucky\", \"error message %s\", \"formatted\")\n //\n // Returns whether the assertion was successful (true) or not (false).\n func HTTPBodyContainsf(t TestingT, handler http.HandlerFunc, method string, url string, values url.Values, str interface{}, msg string, args ...interface{}) {\n@@ -688,7 +688,7 @@ func HTTPBodyContainsf(t TestingT, handler http.HandlerFunc, method string, url\n // HTTPBodyNotContains asserts that a specified handler returns a\n // body that does not contain a string.\n //\n-//\tassert.HTTPBodyNotContains(t, myHandler, \"GET\", \"www.google.com\", nil, \"I'm Feeling Lucky\")\n+//\trequire.HTTPBodyNotContains(t, myHandler, \"GET\", \"www.google.com\", nil, \"I'm Feeling Lucky\")\n //\n // Returns whether the assertion was successful (true) or not (false).\n func HTTPBodyNotContains(t TestingT, handler http.HandlerFunc, method string, url string, values url.Values, str interface{}, msgAndArgs ...interface{}) {\n@@ -704,7 +704,7 @@ func HTTPBodyNotContains(t TestingT, handler http.HandlerFunc, method string, ur\n // HTTPBodyNotContainsf asserts that a specified handler returns a\n // body that does not contain a string.\n //\n-//\tassert.HTTPBodyNotContainsf(t, myHandler, \"GET\", \"www.google.com\", nil, \"I'm Feeling Lucky\", \"error message %s\", \"formatted\")\n+//\trequire.HTTPBodyNotContainsf(t, myHandler, \"GET\", \"www.google.com\", nil, \"I'm Feeling Lucky\", \"error message %s\", \"formatted\")\n //\n // Returns whether the assertion was successful (true) or not (false).\n func HTTPBodyNotContainsf(t TestingT, handler http.HandlerFunc, method string, url string, values url.Values, str interface{}, msg string, args ...interface{}) {\n@@ -719,7 +719,7 @@ func HTTPBodyNotContainsf(t TestingT, handler http.HandlerFunc, method string, u\n \n // HTTPError asserts that a specified handler returns an error status code.\n //\n-//\tassert.HTTPError(t, myHandler, \"POST\", \"/a/b/c\", url.Values{\"a\": []string{\"b\", \"c\"}}\n+//\trequire.HTTPError(t, myHandler, \"POST\", \"/a/b/c\", url.Values{\"a\": []string{\"b\", \"c\"}}\n //\n // Returns whether the assertion was successful (true) or not (false).\n func HTTPError(t TestingT, handler http.HandlerFunc, method string, url string, values url.Values, msgAndArgs ...interface{}) {\n@@ -734,7 +734,7 @@ func HTTPError(t TestingT, handler http.HandlerFunc, method string, url string,\n \n // HTTPErrorf asserts that a specified handler returns an error status code.\n //\n-//\tassert.HTTPErrorf(t, myHandler, \"POST\", \"/a/b/c\", url.Values{\"a\": []string{\"b\", \"c\"}}\n+//\trequire.HTTPErrorf(t, myHandler, \"POST\", \"/a/b/c\", url.Values{\"a\": []string{\"b\", \"c\"}}\n //\n // Returns whether the assertion was successful (true) or not (false).\n func HTTPErrorf(t TestingT, handler http.HandlerFunc, method string, url string, values url.Values, msg string, args ...interface{}) {\n@@ -749,7 +749,7 @@ func HTTPErrorf(t TestingT, handler http.HandlerFunc, method string, url string,\n \n // HTTPRedirect asserts that a specified handler returns a redirect status code.\n //\n-//\tassert.HTTPRedirect(t, myHandler, \"GET\", \"/a/b/c\", url.Values{\"a\": []string{\"b\", \"c\"}}\n+//\trequire.HTTPRedirect(t, myHandler, \"GET\", \"/a/b/c\", url.Values{\"a\": []string{\"b\", \"c\"}}\n //\n // Returns whether the assertion was successful (true) or not (false).\n func HTTPRedirect(t TestingT, handler http.HandlerFunc, method string, url string, values url.Values, msgAndArgs ...interface{}) {\n@@ -764,7 +764,7 @@ func HTTPRedirect(t TestingT, handler http.HandlerFunc, method string, url strin\n \n // HTTPRedirectf asserts that a specified handler returns a redirect status code.\n //\n-//\tassert.HTTPRedirectf(t, myHandler, \"GET\", \"/a/b/c\", url.Values{\"a\": []string{\"b\", \"c\"}}\n+//\trequire.HTTPRedirectf(t, myHandler, \"GET\", \"/a/b/c\", url.Values{\"a\": []string{\"b\", \"c\"}}\n //\n // Returns whether the assertion was successful (true) or not (false).\n func HTTPRedirectf(t TestingT, handler http.HandlerFunc, method string, url string, values url.Values, msg string, args ...interface{}) {\n@@ -779,7 +779,7 @@ func HTTPRedirectf(t TestingT, handler http.HandlerFunc, method string, url stri\n \n // HTTPStatusCode asserts that a specified handler returns a specified status code.\n //\n-//\tassert.HTTPStatusCode(t, myHandler, \"GET\", \"/notImplemented\", nil, 501)\n+//\trequire.HTTPStatusCode(t, myHandler, \"GET\", \"/notImplemented\", nil, 501)\n //\n // Returns whether the assertion was successful (true) or not (false).\n func HTTPStatusCode(t TestingT, handler http.HandlerFunc, method string, url string, values url.Values, statuscode int, msgAndArgs ...interface{}) {\n@@ -794,7 +794,7 @@ func HTTPStatusCode(t TestingT, handler http.HandlerFunc, method string, url str\n \n // HTTPStatusCodef asserts that a specified handler returns a specified status code.\n //\n-//\tassert.HTTPStatusCodef(t, myHandler, \"GET\", \"/notImplemented\", nil, 501, \"error message %s\", \"formatted\")\n+//\trequire.HTTPStatusCodef(t, myHandler, \"GET\", \"/notImplemented\", nil, 501, \"error message %s\", \"formatted\")\n //\n // Returns whether the assertion was successful (true) or not (false).\n func HTTPStatusCodef(t TestingT, handler http.HandlerFunc, method string, url string, values url.Values, statuscode int, msg string, args ...interface{}) {\n@@ -809,7 +809,7 @@ func HTTPStatusCodef(t TestingT, handler http.HandlerFunc, method string, url st\n \n // HTTPSuccess asserts that a specified handler returns a success status code.\n //\n-//\tassert.HTTPSuccess(t, myHandler, \"POST\", \"http://www.google.com\", nil)\n+//\trequire.HTTPSuccess(t, myHandler, \"POST\", \"http://www.google.com\", nil)\n //\n // Returns whether the assertion was successful (true) or not (false).\n func HTTPSuccess(t TestingT, handler http.HandlerFunc, method string, url string, values url.Values, msgAndArgs ...interface{}) {\n@@ -824,7 +824,7 @@ func HTTPSuccess(t TestingT, handler http.HandlerFunc, method string, url string\n \n // HTTPSuccessf asserts that a specified handler returns a success status code.\n //\n-//\tassert.HTTPSuccessf(t, myHandler, \"POST\", \"http://www.google.com\", nil, \"error message %s\", \"formatted\")\n+//\trequire.HTTPSuccessf(t, myHandler, \"POST\", \"http://www.google.com\", nil, \"error message %s\", \"formatted\")\n //\n // Returns whether the assertion was successful (true) or not (false).\n func HTTPSuccessf(t TestingT, handler http.HandlerFunc, method string, url string, values url.Values, msg string, args ...interface{}) {\n@@ -839,7 +839,7 @@ func HTTPSuccessf(t TestingT, handler http.HandlerFunc, method string, url strin\n \n // Implements asserts that an object is implemented by the specified interface.\n //\n-//\tassert.Implements(t, (*MyInterface)(nil), new(MyObject))\n+//\trequire.Implements(t, (*MyInterface)(nil), new(MyObject))\n func Implements(t TestingT, interfaceObject interface{}, object interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -852,7 +852,7 @@ func Implements(t TestingT, interfaceObject interface{}, object interface{}, msg\n \n // Implementsf asserts that an object is implemented by the specified interface.\n //\n-//\tassert.Implementsf(t, (*MyInterface)(nil), new(MyObject), \"error message %s\", \"formatted\")\n+//\trequire.Implementsf(t, (*MyInterface)(nil), new(MyObject), \"error message %s\", \"formatted\")\n func Implementsf(t TestingT, interfaceObject interface{}, object interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -865,7 +865,7 @@ func Implementsf(t TestingT, interfaceObject interface{}, object interface{}, ms\n \n // InDelta asserts that the two numerals are within delta of each other.\n //\n-//\tassert.InDelta(t, math.Pi, 22/7.0, 0.01)\n+//\trequire.InDelta(t, math.Pi, 22/7.0, 0.01)\n func InDelta(t TestingT, expected interface{}, actual interface{}, delta float64, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -922,7 +922,7 @@ func InDeltaSlicef(t TestingT, expected interface{}, actual interface{}, delta f\n \n // InDeltaf asserts that the two numerals are within delta of each other.\n //\n-//\tassert.InDeltaf(t, math.Pi, 22/7.0, 0.01, \"error message %s\", \"formatted\")\n+//\trequire.InDeltaf(t, math.Pi, 22/7.0, 0.01, \"error message %s\", \"formatted\")\n func InDeltaf(t TestingT, expected interface{}, actual interface{}, delta float64, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -979,9 +979,9 @@ func InEpsilonf(t TestingT, expected interface{}, actual interface{}, epsilon fl\n \n // IsDecreasing asserts that the collection is decreasing\n //\n-//\tassert.IsDecreasing(t, []int{2, 1, 0})\n-//\tassert.IsDecreasing(t, []float{2, 1})\n-//\tassert.IsDecreasing(t, []string{\"b\", \"a\"})\n+//\trequire.IsDecreasing(t, []int{2, 1, 0})\n+//\trequire.IsDecreasing(t, []float{2, 1})\n+//\trequire.IsDecreasing(t, []string{\"b\", \"a\"})\n func IsDecreasing(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -994,9 +994,9 @@ func IsDecreasing(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n \n // IsDecreasingf asserts that the collection is decreasing\n //\n-//\tassert.IsDecreasingf(t, []int{2, 1, 0}, \"error message %s\", \"formatted\")\n-//\tassert.IsDecreasingf(t, []float{2, 1}, \"error message %s\", \"formatted\")\n-//\tassert.IsDecreasingf(t, []string{\"b\", \"a\"}, \"error message %s\", \"formatted\")\n+//\trequire.IsDecreasingf(t, []int{2, 1, 0}, \"error message %s\", \"formatted\")\n+//\trequire.IsDecreasingf(t, []float{2, 1}, \"error message %s\", \"formatted\")\n+//\trequire.IsDecreasingf(t, []string{\"b\", \"a\"}, \"error message %s\", \"formatted\")\n func IsDecreasingf(t TestingT, object interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1009,9 +1009,9 @@ func IsDecreasingf(t TestingT, object interface{}, msg string, args ...interface\n \n // IsIncreasing asserts that the collection is increasing\n //\n-//\tassert.IsIncreasing(t, []int{1, 2, 3})\n-//\tassert.IsIncreasing(t, []float{1, 2})\n-//\tassert.IsIncreasing(t, []string{\"a\", \"b\"})\n+//\trequire.IsIncreasing(t, []int{1, 2, 3})\n+//\trequire.IsIncreasing(t, []float{1, 2})\n+//\trequire.IsIncreasing(t, []string{\"a\", \"b\"})\n func IsIncreasing(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1024,9 +1024,9 @@ func IsIncreasing(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n \n // IsIncreasingf asserts that the collection is increasing\n //\n-//\tassert.IsIncreasingf(t, []int{1, 2, 3}, \"error message %s\", \"formatted\")\n-//\tassert.IsIncreasingf(t, []float{1, 2}, \"error message %s\", \"formatted\")\n-//\tassert.IsIncreasingf(t, []string{\"a\", \"b\"}, \"error message %s\", \"formatted\")\n+//\trequire.IsIncreasingf(t, []int{1, 2, 3}, \"error message %s\", \"formatted\")\n+//\trequire.IsIncreasingf(t, []float{1, 2}, \"error message %s\", \"formatted\")\n+//\trequire.IsIncreasingf(t, []string{\"a\", \"b\"}, \"error message %s\", \"formatted\")\n func IsIncreasingf(t TestingT, object interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1039,9 +1039,9 @@ func IsIncreasingf(t TestingT, object interface{}, msg string, args ...interface\n \n // IsNonDecreasing asserts that the collection is not decreasing\n //\n-//\tassert.IsNonDecreasing(t, []int{1, 1, 2})\n-//\tassert.IsNonDecreasing(t, []float{1, 2})\n-//\tassert.IsNonDecreasing(t, []string{\"a\", \"b\"})\n+//\trequire.IsNonDecreasing(t, []int{1, 1, 2})\n+//\trequire.IsNonDecreasing(t, []float{1, 2})\n+//\trequire.IsNonDecreasing(t, []string{\"a\", \"b\"})\n func IsNonDecreasing(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1054,9 +1054,9 @@ func IsNonDecreasing(t TestingT, object interface{}, msgAndArgs ...interface{})\n \n // IsNonDecreasingf asserts that the collection is not decreasing\n //\n-//\tassert.IsNonDecreasingf(t, []int{1, 1, 2}, \"error message %s\", \"formatted\")\n-//\tassert.IsNonDecreasingf(t, []float{1, 2}, \"error message %s\", \"formatted\")\n-//\tassert.IsNonDecreasingf(t, []string{\"a\", \"b\"}, \"error message %s\", \"formatted\")\n+//\trequire.IsNonDecreasingf(t, []int{1, 1, 2}, \"error message %s\", \"formatted\")\n+//\trequire.IsNonDecreasingf(t, []float{1, 2}, \"error message %s\", \"formatted\")\n+//\trequire.IsNonDecreasingf(t, []string{\"a\", \"b\"}, \"error message %s\", \"formatted\")\n func IsNonDecreasingf(t TestingT, object interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1069,9 +1069,9 @@ func IsNonDecreasingf(t TestingT, object interface{}, msg string, args ...interf\n \n // IsNonIncreasing asserts that the collection is not increasing\n //\n-//\tassert.IsNonIncreasing(t, []int{2, 1, 1})\n-//\tassert.IsNonIncreasing(t, []float{2, 1})\n-//\tassert.IsNonIncreasing(t, []string{\"b\", \"a\"})\n+//\trequire.IsNonIncreasing(t, []int{2, 1, 1})\n+//\trequire.IsNonIncreasing(t, []float{2, 1})\n+//\trequire.IsNonIncreasing(t, []string{\"b\", \"a\"})\n func IsNonIncreasing(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1084,9 +1084,9 @@ func IsNonIncreasing(t TestingT, object interface{}, msgAndArgs ...interface{})\n \n // IsNonIncreasingf asserts that the collection is not increasing\n //\n-//\tassert.IsNonIncreasingf(t, []int{2, 1, 1}, \"error message %s\", \"formatted\")\n-//\tassert.IsNonIncreasingf(t, []float{2, 1}, \"error message %s\", \"formatted\")\n-//\tassert.IsNonIncreasingf(t, []string{\"b\", \"a\"}, \"error message %s\", \"formatted\")\n+//\trequire.IsNonIncreasingf(t, []int{2, 1, 1}, \"error message %s\", \"formatted\")\n+//\trequire.IsNonIncreasingf(t, []float{2, 1}, \"error message %s\", \"formatted\")\n+//\trequire.IsNonIncreasingf(t, []string{\"b\", \"a\"}, \"error message %s\", \"formatted\")\n func IsNonIncreasingf(t TestingT, object interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1121,7 +1121,7 @@ func IsTypef(t TestingT, expectedType interface{}, object interface{}, msg strin\n \n // JSONEq asserts that two JSON strings are equivalent.\n //\n-//\tassert.JSONEq(t, `{\"hello\": \"world\", \"foo\": \"bar\"}`, `{\"foo\": \"bar\", \"hello\": \"world\"}`)\n+//\trequire.JSONEq(t, `{\"hello\": \"world\", \"foo\": \"bar\"}`, `{\"foo\": \"bar\", \"hello\": \"world\"}`)\n func JSONEq(t TestingT, expected string, actual string, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1134,7 +1134,7 @@ func JSONEq(t TestingT, expected string, actual string, msgAndArgs ...interface{\n \n // JSONEqf asserts that two JSON strings are equivalent.\n //\n-//\tassert.JSONEqf(t, `{\"hello\": \"world\", \"foo\": \"bar\"}`, `{\"foo\": \"bar\", \"hello\": \"world\"}`, \"error message %s\", \"formatted\")\n+//\trequire.JSONEqf(t, `{\"hello\": \"world\", \"foo\": \"bar\"}`, `{\"foo\": \"bar\", \"hello\": \"world\"}`, \"error message %s\", \"formatted\")\n func JSONEqf(t TestingT, expected string, actual string, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1148,7 +1148,7 @@ func JSONEqf(t TestingT, expected string, actual string, msg string, args ...int\n // Len asserts that the specified object has specific length.\n // Len also fails if the object has a type that len() not accept.\n //\n-//\tassert.Len(t, mySlice, 3)\n+//\trequire.Len(t, mySlice, 3)\n func Len(t TestingT, object interface{}, length int, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1162,7 +1162,7 @@ func Len(t TestingT, object interface{}, length int, msgAndArgs ...interface{})\n // Lenf asserts that the specified object has specific length.\n // Lenf also fails if the object has a type that len() not accept.\n //\n-//\tassert.Lenf(t, mySlice, 3, \"error message %s\", \"formatted\")\n+//\trequire.Lenf(t, mySlice, 3, \"error message %s\", \"formatted\")\n func Lenf(t TestingT, object interface{}, length int, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1175,9 +1175,9 @@ func Lenf(t TestingT, object interface{}, length int, msg string, args ...interf\n \n // Less asserts that the first element is less than the second\n //\n-//\tassert.Less(t, 1, 2)\n-//\tassert.Less(t, float64(1), float64(2))\n-//\tassert.Less(t, \"a\", \"b\")\n+//\trequire.Less(t, 1, 2)\n+//\trequire.Less(t, float64(1), float64(2))\n+//\trequire.Less(t, \"a\", \"b\")\n func Less(t TestingT, e1 interface{}, e2 interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1190,10 +1190,10 @@ func Less(t TestingT, e1 interface{}, e2 interface{}, msgAndArgs ...interface{})\n \n // LessOrEqual asserts that the first element is less than or equal to the second\n //\n-//\tassert.LessOrEqual(t, 1, 2)\n-//\tassert.LessOrEqual(t, 2, 2)\n-//\tassert.LessOrEqual(t, \"a\", \"b\")\n-//\tassert.LessOrEqual(t, \"b\", \"b\")\n+//\trequire.LessOrEqual(t, 1, 2)\n+//\trequire.LessOrEqual(t, 2, 2)\n+//\trequire.LessOrEqual(t, \"a\", \"b\")\n+//\trequire.LessOrEqual(t, \"b\", \"b\")\n func LessOrEqual(t TestingT, e1 interface{}, e2 interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1206,10 +1206,10 @@ func LessOrEqual(t TestingT, e1 interface{}, e2 interface{}, msgAndArgs ...inter\n \n // LessOrEqualf asserts that the first element is less than or equal to the second\n //\n-//\tassert.LessOrEqualf(t, 1, 2, \"error message %s\", \"formatted\")\n-//\tassert.LessOrEqualf(t, 2, 2, \"error message %s\", \"formatted\")\n-//\tassert.LessOrEqualf(t, \"a\", \"b\", \"error message %s\", \"formatted\")\n-//\tassert.LessOrEqualf(t, \"b\", \"b\", \"error message %s\", \"formatted\")\n+//\trequire.LessOrEqualf(t, 1, 2, \"error message %s\", \"formatted\")\n+//\trequire.LessOrEqualf(t, 2, 2, \"error message %s\", \"formatted\")\n+//\trequire.LessOrEqualf(t, \"a\", \"b\", \"error message %s\", \"formatted\")\n+//\trequire.LessOrEqualf(t, \"b\", \"b\", \"error message %s\", \"formatted\")\n func LessOrEqualf(t TestingT, e1 interface{}, e2 interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1222,9 +1222,9 @@ func LessOrEqualf(t TestingT, e1 interface{}, e2 interface{}, msg string, args .\n \n // Lessf asserts that the first element is less than the second\n //\n-//\tassert.Lessf(t, 1, 2, \"error message %s\", \"formatted\")\n-//\tassert.Lessf(t, float64(1), float64(2), \"error message %s\", \"formatted\")\n-//\tassert.Lessf(t, \"a\", \"b\", \"error message %s\", \"formatted\")\n+//\trequire.Lessf(t, 1, 2, \"error message %s\", \"formatted\")\n+//\trequire.Lessf(t, float64(1), float64(2), \"error message %s\", \"formatted\")\n+//\trequire.Lessf(t, \"a\", \"b\", \"error message %s\", \"formatted\")\n func Lessf(t TestingT, e1 interface{}, e2 interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1237,8 +1237,8 @@ func Lessf(t TestingT, e1 interface{}, e2 interface{}, msg string, args ...inter\n \n // Negative asserts that the specified element is negative\n //\n-//\tassert.Negative(t, -1)\n-//\tassert.Negative(t, -1.23)\n+//\trequire.Negative(t, -1)\n+//\trequire.Negative(t, -1.23)\n func Negative(t TestingT, e interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1251,8 +1251,8 @@ func Negative(t TestingT, e interface{}, msgAndArgs ...interface{}) {\n \n // Negativef asserts that the specified element is negative\n //\n-//\tassert.Negativef(t, -1, \"error message %s\", \"formatted\")\n-//\tassert.Negativef(t, -1.23, \"error message %s\", \"formatted\")\n+//\trequire.Negativef(t, -1, \"error message %s\", \"formatted\")\n+//\trequire.Negativef(t, -1.23, \"error message %s\", \"formatted\")\n func Negativef(t TestingT, e interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1266,7 +1266,7 @@ func Negativef(t TestingT, e interface{}, msg string, args ...interface{}) {\n // Never asserts that the given condition doesn't satisfy in waitFor time,\n // periodically checking the target function each tick.\n //\n-//\tassert.Never(t, func() bool { return false; }, time.Second, 10*time.Millisecond)\n+//\trequire.Never(t, func() bool { return false; }, time.Second, 10*time.Millisecond)\n func Never(t TestingT, condition func() bool, waitFor time.Duration, tick time.Duration, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1280,7 +1280,7 @@ func Never(t TestingT, condition func() bool, waitFor time.Duration, tick time.D\n // Neverf asserts that the given condition doesn't satisfy in waitFor time,\n // periodically checking the target function each tick.\n //\n-//\tassert.Neverf(t, func() bool { return false; }, time.Second, 10*time.Millisecond, \"error message %s\", \"formatted\")\n+//\trequire.Neverf(t, func() bool { return false; }, time.Second, 10*time.Millisecond, \"error message %s\", \"formatted\")\n func Neverf(t TestingT, condition func() bool, waitFor time.Duration, tick time.Duration, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1293,7 +1293,7 @@ func Neverf(t TestingT, condition func() bool, waitFor time.Duration, tick time.\n \n // Nil asserts that the specified object is nil.\n //\n-//\tassert.Nil(t, err)\n+//\trequire.Nil(t, err)\n func Nil(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1306,7 +1306,7 @@ func Nil(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n \n // Nilf asserts that the specified object is nil.\n //\n-//\tassert.Nilf(t, err, \"error message %s\", \"formatted\")\n+//\trequire.Nilf(t, err, \"error message %s\", \"formatted\")\n func Nilf(t TestingT, object interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1344,8 +1344,8 @@ func NoDirExistsf(t TestingT, path string, msg string, args ...interface{}) {\n // NoError asserts that a function returned no error (i.e. `nil`).\n //\n //\t  actualObj, err := SomeFunction()\n-//\t  if assert.NoError(t, err) {\n-//\t\t   assert.Equal(t, expectedObj, actualObj)\n+//\t  if require.NoError(t, err) {\n+//\t\t   require.Equal(t, expectedObj, actualObj)\n //\t  }\n func NoError(t TestingT, err error, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n@@ -1360,8 +1360,8 @@ func NoError(t TestingT, err error, msgAndArgs ...interface{}) {\n // NoErrorf asserts that a function returned no error (i.e. `nil`).\n //\n //\t  actualObj, err := SomeFunction()\n-//\t  if assert.NoErrorf(t, err, \"error message %s\", \"formatted\") {\n-//\t\t   assert.Equal(t, expectedObj, actualObj)\n+//\t  if require.NoErrorf(t, err, \"error message %s\", \"formatted\") {\n+//\t\t   require.Equal(t, expectedObj, actualObj)\n //\t  }\n func NoErrorf(t TestingT, err error, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n@@ -1400,9 +1400,9 @@ func NoFileExistsf(t TestingT, path string, msg string, args ...interface{}) {\n // NotContains asserts that the specified string, list(array, slice...) or map does NOT contain the\n // specified substring or element.\n //\n-//\tassert.NotContains(t, \"Hello World\", \"Earth\")\n-//\tassert.NotContains(t, [\"Hello\", \"World\"], \"Earth\")\n-//\tassert.NotContains(t, {\"Hello\": \"World\"}, \"Earth\")\n+//\trequire.NotContains(t, \"Hello World\", \"Earth\")\n+//\trequire.NotContains(t, [\"Hello\", \"World\"], \"Earth\")\n+//\trequire.NotContains(t, {\"Hello\": \"World\"}, \"Earth\")\n func NotContains(t TestingT, s interface{}, contains interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1416,9 +1416,9 @@ func NotContains(t TestingT, s interface{}, contains interface{}, msgAndArgs ...\n // NotContainsf asserts that the specified string, list(array, slice...) or map does NOT contain the\n // specified substring or element.\n //\n-//\tassert.NotContainsf(t, \"Hello World\", \"Earth\", \"error message %s\", \"formatted\")\n-//\tassert.NotContainsf(t, [\"Hello\", \"World\"], \"Earth\", \"error message %s\", \"formatted\")\n-//\tassert.NotContainsf(t, {\"Hello\": \"World\"}, \"Earth\", \"error message %s\", \"formatted\")\n+//\trequire.NotContainsf(t, \"Hello World\", \"Earth\", \"error message %s\", \"formatted\")\n+//\trequire.NotContainsf(t, [\"Hello\", \"World\"], \"Earth\", \"error message %s\", \"formatted\")\n+//\trequire.NotContainsf(t, {\"Hello\": \"World\"}, \"Earth\", \"error message %s\", \"formatted\")\n func NotContainsf(t TestingT, s interface{}, contains interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1429,11 +1429,51 @@ func NotContainsf(t TestingT, s interface{}, contains interface{}, msg string, a\n \tt.FailNow()\n }\n \n+// NotElementsMatch asserts that the specified listA(array, slice...) is NOT equal to specified\n+// listB(array, slice...) ignoring the order of the elements. If there are duplicate elements,\n+// the number of appearances of each of them in both lists should not match.\n+// This is an inverse of ElementsMatch.\n+//\n+// require.NotElementsMatch(t, [1, 1, 2, 3], [1, 1, 2, 3]) -> false\n+//\n+// require.NotElementsMatch(t, [1, 1, 2, 3], [1, 2, 3]) -> true\n+//\n+// require.NotElementsMatch(t, [1, 2, 3], [1, 2, 4]) -> true\n+func NotElementsMatch(t TestingT, listA interface{}, listB interface{}, msgAndArgs ...interface{}) {\n+\tif h, ok := t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tif assert.NotElementsMatch(t, listA, listB, msgAndArgs...) {\n+\t\treturn\n+\t}\n+\tt.FailNow()\n+}\n+\n+// NotElementsMatchf asserts that the specified listA(array, slice...) is NOT equal to specified\n+// listB(array, slice...) ignoring the order of the elements. If there are duplicate elements,\n+// the number of appearances of each of them in both lists should not match.\n+// This is an inverse of ElementsMatch.\n+//\n+// require.NotElementsMatchf(t, [1, 1, 2, 3], [1, 1, 2, 3], \"error message %s\", \"formatted\") -> false\n+//\n+// require.NotElementsMatchf(t, [1, 1, 2, 3], [1, 2, 3], \"error message %s\", \"formatted\") -> true\n+//\n+// require.NotElementsMatchf(t, [1, 2, 3], [1, 2, 4], \"error message %s\", \"formatted\") -> true\n+func NotElementsMatchf(t TestingT, listA interface{}, listB interface{}, msg string, args ...interface{}) {\n+\tif h, ok := t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tif assert.NotElementsMatchf(t, listA, listB, msg, args...) {\n+\t\treturn\n+\t}\n+\tt.FailNow()\n+}\n+\n // NotEmpty asserts that the specified object is NOT empty.  I.e. not nil, \"\", false, 0 or either\n // a slice or a channel with len == 0.\n //\n-//\tif assert.NotEmpty(t, obj) {\n-//\t  assert.Equal(t, \"two\", obj[1])\n+//\tif require.NotEmpty(t, obj) {\n+//\t  require.Equal(t, \"two\", obj[1])\n //\t}\n func NotEmpty(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n@@ -1448,8 +1488,8 @@ func NotEmpty(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n // NotEmptyf asserts that the specified object is NOT empty.  I.e. not nil, \"\", false, 0 or either\n // a slice or a channel with len == 0.\n //\n-//\tif assert.NotEmptyf(t, obj, \"error message %s\", \"formatted\") {\n-//\t  assert.Equal(t, \"two\", obj[1])\n+//\tif require.NotEmptyf(t, obj, \"error message %s\", \"formatted\") {\n+//\t  require.Equal(t, \"two\", obj[1])\n //\t}\n func NotEmptyf(t TestingT, object interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n@@ -1463,7 +1503,7 @@ func NotEmptyf(t TestingT, object interface{}, msg string, args ...interface{})\n \n // NotEqual asserts that the specified values are NOT equal.\n //\n-//\tassert.NotEqual(t, obj1, obj2)\n+//\trequire.NotEqual(t, obj1, obj2)\n //\n // Pointer variable equality is determined based on the equality of the\n // referenced values (as opposed to the memory addresses).\n@@ -1479,7 +1519,7 @@ func NotEqual(t TestingT, expected interface{}, actual interface{}, msgAndArgs .\n \n // NotEqualValues asserts that two objects are not equal even when converted to the same type\n //\n-//\tassert.NotEqualValues(t, obj1, obj2)\n+//\trequire.NotEqualValues(t, obj1, obj2)\n func NotEqualValues(t TestingT, expected interface{}, actual interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1492,7 +1532,7 @@ func NotEqualValues(t TestingT, expected interface{}, actual interface{}, msgAnd\n \n // NotEqualValuesf asserts that two objects are not equal even when converted to the same type\n //\n-//\tassert.NotEqualValuesf(t, obj1, obj2, \"error message %s\", \"formatted\")\n+//\trequire.NotEqualValuesf(t, obj1, obj2, \"error message %s\", \"formatted\")\n func NotEqualValuesf(t TestingT, expected interface{}, actual interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1505,7 +1545,7 @@ func NotEqualValuesf(t TestingT, expected interface{}, actual interface{}, msg s\n \n // NotEqualf asserts that the specified values are NOT equal.\n //\n-//\tassert.NotEqualf(t, obj1, obj2, \"error message %s\", \"formatted\")\n+//\trequire.NotEqualf(t, obj1, obj2, \"error message %s\", \"formatted\")\n //\n // Pointer variable equality is determined based on the equality of the\n // referenced values (as opposed to the memory addresses).\n@@ -1519,7 +1559,31 @@ func NotEqualf(t TestingT, expected interface{}, actual interface{}, msg string,\n \tt.FailNow()\n }\n \n-// NotErrorIs asserts that at none of the errors in err's chain matches target.\n+// NotErrorAs asserts that none of the errors in err's chain matches target,\n+// but if so, sets target to that error value.\n+func NotErrorAs(t TestingT, err error, target interface{}, msgAndArgs ...interface{}) {\n+\tif h, ok := t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tif assert.NotErrorAs(t, err, target, msgAndArgs...) {\n+\t\treturn\n+\t}\n+\tt.FailNow()\n+}\n+\n+// NotErrorAsf asserts that none of the errors in err's chain matches target,\n+// but if so, sets target to that error value.\n+func NotErrorAsf(t TestingT, err error, target interface{}, msg string, args ...interface{}) {\n+\tif h, ok := t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tif assert.NotErrorAsf(t, err, target, msg, args...) {\n+\t\treturn\n+\t}\n+\tt.FailNow()\n+}\n+\n+// NotErrorIs asserts that none of the errors in err's chain matches target.\n // This is a wrapper for errors.Is.\n func NotErrorIs(t TestingT, err error, target error, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n@@ -1531,7 +1595,7 @@ func NotErrorIs(t TestingT, err error, target error, msgAndArgs ...interface{})\n \tt.FailNow()\n }\n \n-// NotErrorIsf asserts that at none of the errors in err's chain matches target.\n+// NotErrorIsf asserts that none of the errors in err's chain matches target.\n // This is a wrapper for errors.Is.\n func NotErrorIsf(t TestingT, err error, target error, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n@@ -1545,7 +1609,7 @@ func NotErrorIsf(t TestingT, err error, target error, msg string, args ...interf\n \n // NotImplements asserts that an object does not implement the specified interface.\n //\n-//\tassert.NotImplements(t, (*MyInterface)(nil), new(MyObject))\n+//\trequire.NotImplements(t, (*MyInterface)(nil), new(MyObject))\n func NotImplements(t TestingT, interfaceObject interface{}, object interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1558,7 +1622,7 @@ func NotImplements(t TestingT, interfaceObject interface{}, object interface{},\n \n // NotImplementsf asserts that an object does not implement the specified interface.\n //\n-//\tassert.NotImplementsf(t, (*MyInterface)(nil), new(MyObject), \"error message %s\", \"formatted\")\n+//\trequire.NotImplementsf(t, (*MyInterface)(nil), new(MyObject), \"error message %s\", \"formatted\")\n func NotImplementsf(t TestingT, interfaceObject interface{}, object interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1571,7 +1635,7 @@ func NotImplementsf(t TestingT, interfaceObject interface{}, object interface{},\n \n // NotNil asserts that the specified object is not nil.\n //\n-//\tassert.NotNil(t, err)\n+//\trequire.NotNil(t, err)\n func NotNil(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1584,7 +1648,7 @@ func NotNil(t TestingT, object interface{}, msgAndArgs ...interface{}) {\n \n // NotNilf asserts that the specified object is not nil.\n //\n-//\tassert.NotNilf(t, err, \"error message %s\", \"formatted\")\n+//\trequire.NotNilf(t, err, \"error message %s\", \"formatted\")\n func NotNilf(t TestingT, object interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1597,7 +1661,7 @@ func NotNilf(t TestingT, object interface{}, msg string, args ...interface{}) {\n \n // NotPanics asserts that the code inside the specified PanicTestFunc does NOT panic.\n //\n-//\tassert.NotPanics(t, func(){ RemainCalm() })\n+//\trequire.NotPanics(t, func(){ RemainCalm() })\n func NotPanics(t TestingT, f assert.PanicTestFunc, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1610,7 +1674,7 @@ func NotPanics(t TestingT, f assert.PanicTestFunc, msgAndArgs ...interface{}) {\n \n // NotPanicsf asserts that the code inside the specified PanicTestFunc does NOT panic.\n //\n-//\tassert.NotPanicsf(t, func(){ RemainCalm() }, \"error message %s\", \"formatted\")\n+//\trequire.NotPanicsf(t, func(){ RemainCalm() }, \"error message %s\", \"formatted\")\n func NotPanicsf(t TestingT, f assert.PanicTestFunc, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1623,8 +1687,8 @@ func NotPanicsf(t TestingT, f assert.PanicTestFunc, msg string, args ...interfac\n \n // NotRegexp asserts that a specified regexp does not match a string.\n //\n-//\tassert.NotRegexp(t, regexp.MustCompile(\"starts\"), \"it's starting\")\n-//\tassert.NotRegexp(t, \"^start\", \"it's not starting\")\n+//\trequire.NotRegexp(t, regexp.MustCompile(\"starts\"), \"it's starting\")\n+//\trequire.NotRegexp(t, \"^start\", \"it's not starting\")\n func NotRegexp(t TestingT, rx interface{}, str interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1637,8 +1701,8 @@ func NotRegexp(t TestingT, rx interface{}, str interface{}, msgAndArgs ...interf\n \n // NotRegexpf asserts that a specified regexp does not match a string.\n //\n-//\tassert.NotRegexpf(t, regexp.MustCompile(\"starts\"), \"it's starting\", \"error message %s\", \"formatted\")\n-//\tassert.NotRegexpf(t, \"^start\", \"it's not starting\", \"error message %s\", \"formatted\")\n+//\trequire.NotRegexpf(t, regexp.MustCompile(\"starts\"), \"it's starting\", \"error message %s\", \"formatted\")\n+//\trequire.NotRegexpf(t, \"^start\", \"it's not starting\", \"error message %s\", \"formatted\")\n func NotRegexpf(t TestingT, rx interface{}, str interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1651,7 +1715,7 @@ func NotRegexpf(t TestingT, rx interface{}, str interface{}, msg string, args ..\n \n // NotSame asserts that two pointers do not reference the same object.\n //\n-//\tassert.NotSame(t, ptr1, ptr2)\n+//\trequire.NotSame(t, ptr1, ptr2)\n //\n // Both arguments must be pointer variables. Pointer variable sameness is\n // determined based on the equality of both type and value.\n@@ -1667,7 +1731,7 @@ func NotSame(t TestingT, expected interface{}, actual interface{}, msgAndArgs ..\n \n // NotSamef asserts that two pointers do not reference the same object.\n //\n-//\tassert.NotSamef(t, ptr1, ptr2, \"error message %s\", \"formatted\")\n+//\trequire.NotSamef(t, ptr1, ptr2, \"error message %s\", \"formatted\")\n //\n // Both arguments must be pointer variables. Pointer variable sameness is\n // determined based on the equality of both type and value.\n@@ -1685,8 +1749,8 @@ func NotSamef(t TestingT, expected interface{}, actual interface{}, msg string,\n // contain all elements given in the specified subset list(array, slice...) or\n // map.\n //\n-//\tassert.NotSubset(t, [1, 3, 4], [1, 2])\n-//\tassert.NotSubset(t, {\"x\": 1, \"y\": 2}, {\"z\": 3})\n+//\trequire.NotSubset(t, [1, 3, 4], [1, 2])\n+//\trequire.NotSubset(t, {\"x\": 1, \"y\": 2}, {\"z\": 3})\n func NotSubset(t TestingT, list interface{}, subset interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1701,8 +1765,8 @@ func NotSubset(t TestingT, list interface{}, subset interface{}, msgAndArgs ...i\n // contain all elements given in the specified subset list(array, slice...) or\n // map.\n //\n-//\tassert.NotSubsetf(t, [1, 3, 4], [1, 2], \"error message %s\", \"formatted\")\n-//\tassert.NotSubsetf(t, {\"x\": 1, \"y\": 2}, {\"z\": 3}, \"error message %s\", \"formatted\")\n+//\trequire.NotSubsetf(t, [1, 3, 4], [1, 2], \"error message %s\", \"formatted\")\n+//\trequire.NotSubsetf(t, {\"x\": 1, \"y\": 2}, {\"z\": 3}, \"error message %s\", \"formatted\")\n func NotSubsetf(t TestingT, list interface{}, subset interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1737,7 +1801,7 @@ func NotZerof(t TestingT, i interface{}, msg string, args ...interface{}) {\n \n // Panics asserts that the code inside the specified PanicTestFunc panics.\n //\n-//\tassert.Panics(t, func(){ GoCrazy() })\n+//\trequire.Panics(t, func(){ GoCrazy() })\n func Panics(t TestingT, f assert.PanicTestFunc, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1752,7 +1816,7 @@ func Panics(t TestingT, f assert.PanicTestFunc, msgAndArgs ...interface{}) {\n // panics, and that the recovered panic value is an error that satisfies the\n // EqualError comparison.\n //\n-//\tassert.PanicsWithError(t, \"crazy error\", func(){ GoCrazy() })\n+//\trequire.PanicsWithError(t, \"crazy error\", func(){ GoCrazy() })\n func PanicsWithError(t TestingT, errString string, f assert.PanicTestFunc, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1767,7 +1831,7 @@ func PanicsWithError(t TestingT, errString string, f assert.PanicTestFunc, msgAn\n // panics, and that the recovered panic value is an error that satisfies the\n // EqualError comparison.\n //\n-//\tassert.PanicsWithErrorf(t, \"crazy error\", func(){ GoCrazy() }, \"error message %s\", \"formatted\")\n+//\trequire.PanicsWithErrorf(t, \"crazy error\", func(){ GoCrazy() }, \"error message %s\", \"formatted\")\n func PanicsWithErrorf(t TestingT, errString string, f assert.PanicTestFunc, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1781,7 +1845,7 @@ func PanicsWithErrorf(t TestingT, errString string, f assert.PanicTestFunc, msg\n // PanicsWithValue asserts that the code inside the specified PanicTestFunc panics, and that\n // the recovered panic value equals the expected panic value.\n //\n-//\tassert.PanicsWithValue(t, \"crazy error\", func(){ GoCrazy() })\n+//\trequire.PanicsWithValue(t, \"crazy error\", func(){ GoCrazy() })\n func PanicsWithValue(t TestingT, expected interface{}, f assert.PanicTestFunc, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1795,7 +1859,7 @@ func PanicsWithValue(t TestingT, expected interface{}, f assert.PanicTestFunc, m\n // PanicsWithValuef asserts that the code inside the specified PanicTestFunc panics, and that\n // the recovered panic value equals the expected panic value.\n //\n-//\tassert.PanicsWithValuef(t, \"crazy error\", func(){ GoCrazy() }, \"error message %s\", \"formatted\")\n+//\trequire.PanicsWithValuef(t, \"crazy error\", func(){ GoCrazy() }, \"error message %s\", \"formatted\")\n func PanicsWithValuef(t TestingT, expected interface{}, f assert.PanicTestFunc, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1808,7 +1872,7 @@ func PanicsWithValuef(t TestingT, expected interface{}, f assert.PanicTestFunc,\n \n // Panicsf asserts that the code inside the specified PanicTestFunc panics.\n //\n-//\tassert.Panicsf(t, func(){ GoCrazy() }, \"error message %s\", \"formatted\")\n+//\trequire.Panicsf(t, func(){ GoCrazy() }, \"error message %s\", \"formatted\")\n func Panicsf(t TestingT, f assert.PanicTestFunc, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1821,8 +1885,8 @@ func Panicsf(t TestingT, f assert.PanicTestFunc, msg string, args ...interface{}\n \n // Positive asserts that the specified element is positive\n //\n-//\tassert.Positive(t, 1)\n-//\tassert.Positive(t, 1.23)\n+//\trequire.Positive(t, 1)\n+//\trequire.Positive(t, 1.23)\n func Positive(t TestingT, e interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1835,8 +1899,8 @@ func Positive(t TestingT, e interface{}, msgAndArgs ...interface{}) {\n \n // Positivef asserts that the specified element is positive\n //\n-//\tassert.Positivef(t, 1, \"error message %s\", \"formatted\")\n-//\tassert.Positivef(t, 1.23, \"error message %s\", \"formatted\")\n+//\trequire.Positivef(t, 1, \"error message %s\", \"formatted\")\n+//\trequire.Positivef(t, 1.23, \"error message %s\", \"formatted\")\n func Positivef(t TestingT, e interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1849,8 +1913,8 @@ func Positivef(t TestingT, e interface{}, msg string, args ...interface{}) {\n \n // Regexp asserts that a specified regexp matches a string.\n //\n-//\tassert.Regexp(t, regexp.MustCompile(\"start\"), \"it's starting\")\n-//\tassert.Regexp(t, \"start...$\", \"it's not starting\")\n+//\trequire.Regexp(t, regexp.MustCompile(\"start\"), \"it's starting\")\n+//\trequire.Regexp(t, \"start...$\", \"it's not starting\")\n func Regexp(t TestingT, rx interface{}, str interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1863,8 +1927,8 @@ func Regexp(t TestingT, rx interface{}, str interface{}, msgAndArgs ...interface\n \n // Regexpf asserts that a specified regexp matches a string.\n //\n-//\tassert.Regexpf(t, regexp.MustCompile(\"start\"), \"it's starting\", \"error message %s\", \"formatted\")\n-//\tassert.Regexpf(t, \"start...$\", \"it's not starting\", \"error message %s\", \"formatted\")\n+//\trequire.Regexpf(t, regexp.MustCompile(\"start\"), \"it's starting\", \"error message %s\", \"formatted\")\n+//\trequire.Regexpf(t, \"start...$\", \"it's not starting\", \"error message %s\", \"formatted\")\n func Regexpf(t TestingT, rx interface{}, str interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1877,7 +1941,7 @@ func Regexpf(t TestingT, rx interface{}, str interface{}, msg string, args ...in\n \n // Same asserts that two pointers reference the same object.\n //\n-//\tassert.Same(t, ptr1, ptr2)\n+//\trequire.Same(t, ptr1, ptr2)\n //\n // Both arguments must be pointer variables. Pointer variable sameness is\n // determined based on the equality of both type and value.\n@@ -1893,7 +1957,7 @@ func Same(t TestingT, expected interface{}, actual interface{}, msgAndArgs ...in\n \n // Samef asserts that two pointers reference the same object.\n //\n-//\tassert.Samef(t, ptr1, ptr2, \"error message %s\", \"formatted\")\n+//\trequire.Samef(t, ptr1, ptr2, \"error message %s\", \"formatted\")\n //\n // Both arguments must be pointer variables. Pointer variable sameness is\n // determined based on the equality of both type and value.\n@@ -1910,8 +1974,8 @@ func Samef(t TestingT, expected interface{}, actual interface{}, msg string, arg\n // Subset asserts that the specified list(array, slice...) or map contains all\n // elements given in the specified subset list(array, slice...) or map.\n //\n-//\tassert.Subset(t, [1, 2, 3], [1, 2])\n-//\tassert.Subset(t, {\"x\": 1, \"y\": 2}, {\"x\": 1})\n+//\trequire.Subset(t, [1, 2, 3], [1, 2])\n+//\trequire.Subset(t, {\"x\": 1, \"y\": 2}, {\"x\": 1})\n func Subset(t TestingT, list interface{}, subset interface{}, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1925,8 +1989,8 @@ func Subset(t TestingT, list interface{}, subset interface{}, msgAndArgs ...inte\n // Subsetf asserts that the specified list(array, slice...) or map contains all\n // elements given in the specified subset list(array, slice...) or map.\n //\n-//\tassert.Subsetf(t, [1, 2, 3], [1, 2], \"error message %s\", \"formatted\")\n-//\tassert.Subsetf(t, {\"x\": 1, \"y\": 2}, {\"x\": 1}, \"error message %s\", \"formatted\")\n+//\trequire.Subsetf(t, [1, 2, 3], [1, 2], \"error message %s\", \"formatted\")\n+//\trequire.Subsetf(t, {\"x\": 1, \"y\": 2}, {\"x\": 1}, \"error message %s\", \"formatted\")\n func Subsetf(t TestingT, list interface{}, subset interface{}, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1939,7 +2003,7 @@ func Subsetf(t TestingT, list interface{}, subset interface{}, msg string, args\n \n // True asserts that the specified value is true.\n //\n-//\tassert.True(t, myBool)\n+//\trequire.True(t, myBool)\n func True(t TestingT, value bool, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1952,7 +2016,7 @@ func True(t TestingT, value bool, msgAndArgs ...interface{}) {\n \n // Truef asserts that the specified value is true.\n //\n-//\tassert.Truef(t, myBool, \"error message %s\", \"formatted\")\n+//\trequire.Truef(t, myBool, \"error message %s\", \"formatted\")\n func Truef(t TestingT, value bool, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1965,7 +2029,7 @@ func Truef(t TestingT, value bool, msg string, args ...interface{}) {\n \n // WithinDuration asserts that the two times are within duration delta of each other.\n //\n-//\tassert.WithinDuration(t, time.Now(), time.Now(), 10*time.Second)\n+//\trequire.WithinDuration(t, time.Now(), time.Now(), 10*time.Second)\n func WithinDuration(t TestingT, expected time.Time, actual time.Time, delta time.Duration, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1978,7 +2042,7 @@ func WithinDuration(t TestingT, expected time.Time, actual time.Time, delta time\n \n // WithinDurationf asserts that the two times are within duration delta of each other.\n //\n-//\tassert.WithinDurationf(t, time.Now(), time.Now(), 10*time.Second, \"error message %s\", \"formatted\")\n+//\trequire.WithinDurationf(t, time.Now(), time.Now(), 10*time.Second, \"error message %s\", \"formatted\")\n func WithinDurationf(t TestingT, expected time.Time, actual time.Time, delta time.Duration, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -1991,7 +2055,7 @@ func WithinDurationf(t TestingT, expected time.Time, actual time.Time, delta tim\n \n // WithinRange asserts that a time is within a time range (inclusive).\n //\n-//\tassert.WithinRange(t, time.Now(), time.Now().Add(-time.Second), time.Now().Add(time.Second))\n+//\trequire.WithinRange(t, time.Now(), time.Now().Add(-time.Second), time.Now().Add(time.Second))\n func WithinRange(t TestingT, actual time.Time, start time.Time, end time.Time, msgAndArgs ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()\n@@ -2004,7 +2068,7 @@ func WithinRange(t TestingT, actual time.Time, start time.Time, end time.Time, m\n \n // WithinRangef asserts that a time is within a time range (inclusive).\n //\n-//\tassert.WithinRangef(t, time.Now(), time.Now().Add(-time.Second), time.Now().Add(time.Second), \"error message %s\", \"formatted\")\n+//\trequire.WithinRangef(t, time.Now(), time.Now().Add(-time.Second), time.Now().Add(time.Second), \"error message %s\", \"formatted\")\n func WithinRangef(t TestingT, actual time.Time, start time.Time, end time.Time, msg string, args ...interface{}) {\n \tif h, ok := t.(tHelper); ok {\n \t\th.Helper()"
    },
    {
      "sha": "8b32836850936b64a44e73ffe2e2d3e6795e8502",
      "filename": "backend/vendor/github.com/stretchr/testify/require/require.go.tmpl",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire.go.tmpl",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire.go.tmpl",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire.go.tmpl?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -1,4 +1,4 @@\n-{{.Comment}}\n+{{ replace .Comment \"assert.\" \"require.\"}}\n func {{.DocInfo.Name}}(t TestingT, {{.Params}}) {\n \tif h, ok := t.(tHelper); ok { h.Helper() }\n \tif assert.{{.DocInfo.Name}}(t, {{.ForwardedParams}}) { return }"
    },
    {
      "sha": "1bd87304f431593f3a8136e32d1abe25cbf1b23a",
      "filename": "backend/vendor/github.com/stretchr/testify/require/require_forward.go",
      "status": "modified",
      "additions": 60,
      "deletions": 8,
      "changes": 68,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire_forward.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire_forward.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequire_forward.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -187,8 +187,8 @@ func (a *Assertions) EqualExportedValuesf(expected interface{}, actual interface\n \tEqualExportedValuesf(a.t, expected, actual, msg, args...)\n }\n \n-// EqualValues asserts that two objects are equal or convertible to the same types\n-// and equal.\n+// EqualValues asserts that two objects are equal or convertible to the larger\n+// type and equal.\n //\n //\ta.EqualValues(uint32(123), int32(123))\n func (a *Assertions) EqualValues(expected interface{}, actual interface{}, msgAndArgs ...interface{}) {\n@@ -198,8 +198,8 @@ func (a *Assertions) EqualValues(expected interface{}, actual interface{}, msgAn\n \tEqualValues(a.t, expected, actual, msgAndArgs...)\n }\n \n-// EqualValuesf asserts that two objects are equal or convertible to the same types\n-// and equal.\n+// EqualValuesf asserts that two objects are equal or convertible to the larger\n+// type and equal.\n //\n //\ta.EqualValuesf(uint32(123), int32(123), \"error message %s\", \"formatted\")\n func (a *Assertions) EqualValuesf(expected interface{}, actual interface{}, msg string, args ...interface{}) {\n@@ -337,7 +337,7 @@ func (a *Assertions) Eventually(condition func() bool, waitFor time.Duration, ti\n //\ta.EventuallyWithT(func(c *assert.CollectT) {\n //\t\t// add assertions as needed; any assertion failure will fail the current tick\n //\t\tassert.True(c, externalValue, \"expected 'externalValue' to be true\")\n-//\t}, 1*time.Second, 10*time.Second, \"external state has not changed to 'true'; still false\")\n+//\t}, 10*time.Second, 1*time.Second, \"external state has not changed to 'true'; still false\")\n func (a *Assertions) EventuallyWithT(condition func(collect *assert.CollectT), waitFor time.Duration, tick time.Duration, msgAndArgs ...interface{}) {\n \tif h, ok := a.t.(tHelper); ok {\n \t\th.Helper()\n@@ -362,7 +362,7 @@ func (a *Assertions) EventuallyWithT(condition func(collect *assert.CollectT), w\n //\ta.EventuallyWithTf(func(c *assert.CollectT, \"error message %s\", \"formatted\") {\n //\t\t// add assertions as needed; any assertion failure will fail the current tick\n //\t\tassert.True(c, externalValue, \"expected 'externalValue' to be true\")\n-//\t}, 1*time.Second, 10*time.Second, \"external state has not changed to 'true'; still false\")\n+//\t}, 10*time.Second, 1*time.Second, \"external state has not changed to 'true'; still false\")\n func (a *Assertions) EventuallyWithTf(condition func(collect *assert.CollectT), waitFor time.Duration, tick time.Duration, msg string, args ...interface{}) {\n \tif h, ok := a.t.(tHelper); ok {\n \t\th.Helper()\n@@ -1129,6 +1129,40 @@ func (a *Assertions) NotContainsf(s interface{}, contains interface{}, msg strin\n \tNotContainsf(a.t, s, contains, msg, args...)\n }\n \n+// NotElementsMatch asserts that the specified listA(array, slice...) is NOT equal to specified\n+// listB(array, slice...) ignoring the order of the elements. If there are duplicate elements,\n+// the number of appearances of each of them in both lists should not match.\n+// This is an inverse of ElementsMatch.\n+//\n+// a.NotElementsMatch([1, 1, 2, 3], [1, 1, 2, 3]) -> false\n+//\n+// a.NotElementsMatch([1, 1, 2, 3], [1, 2, 3]) -> true\n+//\n+// a.NotElementsMatch([1, 2, 3], [1, 2, 4]) -> true\n+func (a *Assertions) NotElementsMatch(listA interface{}, listB interface{}, msgAndArgs ...interface{}) {\n+\tif h, ok := a.t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tNotElementsMatch(a.t, listA, listB, msgAndArgs...)\n+}\n+\n+// NotElementsMatchf asserts that the specified listA(array, slice...) is NOT equal to specified\n+// listB(array, slice...) ignoring the order of the elements. If there are duplicate elements,\n+// the number of appearances of each of them in both lists should not match.\n+// This is an inverse of ElementsMatch.\n+//\n+// a.NotElementsMatchf([1, 1, 2, 3], [1, 1, 2, 3], \"error message %s\", \"formatted\") -> false\n+//\n+// a.NotElementsMatchf([1, 1, 2, 3], [1, 2, 3], \"error message %s\", \"formatted\") -> true\n+//\n+// a.NotElementsMatchf([1, 2, 3], [1, 2, 4], \"error message %s\", \"formatted\") -> true\n+func (a *Assertions) NotElementsMatchf(listA interface{}, listB interface{}, msg string, args ...interface{}) {\n+\tif h, ok := a.t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tNotElementsMatchf(a.t, listA, listB, msg, args...)\n+}\n+\n // NotEmpty asserts that the specified object is NOT empty.  I.e. not nil, \"\", false, 0 or either\n // a slice or a channel with len == 0.\n //\n@@ -1201,7 +1235,25 @@ func (a *Assertions) NotEqualf(expected interface{}, actual interface{}, msg str\n \tNotEqualf(a.t, expected, actual, msg, args...)\n }\n \n-// NotErrorIs asserts that at none of the errors in err's chain matches target.\n+// NotErrorAs asserts that none of the errors in err's chain matches target,\n+// but if so, sets target to that error value.\n+func (a *Assertions) NotErrorAs(err error, target interface{}, msgAndArgs ...interface{}) {\n+\tif h, ok := a.t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tNotErrorAs(a.t, err, target, msgAndArgs...)\n+}\n+\n+// NotErrorAsf asserts that none of the errors in err's chain matches target,\n+// but if so, sets target to that error value.\n+func (a *Assertions) NotErrorAsf(err error, target interface{}, msg string, args ...interface{}) {\n+\tif h, ok := a.t.(tHelper); ok {\n+\t\th.Helper()\n+\t}\n+\tNotErrorAsf(a.t, err, target, msg, args...)\n+}\n+\n+// NotErrorIs asserts that none of the errors in err's chain matches target.\n // This is a wrapper for errors.Is.\n func (a *Assertions) NotErrorIs(err error, target error, msgAndArgs ...interface{}) {\n \tif h, ok := a.t.(tHelper); ok {\n@@ -1210,7 +1262,7 @@ func (a *Assertions) NotErrorIs(err error, target error, msgAndArgs ...interface\n \tNotErrorIs(a.t, err, target, msgAndArgs...)\n }\n \n-// NotErrorIsf asserts that at none of the errors in err's chain matches target.\n+// NotErrorIsf asserts that none of the errors in err's chain matches target.\n // This is a wrapper for errors.Is.\n func (a *Assertions) NotErrorIsf(err error, target error, msg string, args ...interface{}) {\n \tif h, ok := a.t.(tHelper); ok {"
    },
    {
      "sha": "6b7ce929eb1c76e2852b10a35fea331a7ca14d06",
      "filename": "backend/vendor/github.com/stretchr/testify/require/requirements.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequirements.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequirements.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fstretchr%2Ftestify%2Frequire%2Frequirements.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -6,7 +6,7 @@ type TestingT interface {\n \tFailNow()\n }\n \n-type tHelper interface {\n+type tHelper = interface {\n \tHelper()\n }\n "
    },
    {
      "sha": "885c4c5936b15c390395b9ac175e7eba0a502e23",
      "filename": "backend/vendor/golang.org/x/net/html/doc.go",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fdoc.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -78,16 +78,11 @@ example, to process each anchor node in depth-first order:\n \tif err != nil {\n \t\t// ...\n \t}\n-\tvar f func(*html.Node)\n-\tf = func(n *html.Node) {\n+\tfor n := range doc.Descendants() {\n \t\tif n.Type == html.ElementNode && n.Data == \"a\" {\n \t\t\t// Do something with n...\n \t\t}\n-\t\tfor c := n.FirstChild; c != nil; c = c.NextSibling {\n-\t\t\tf(c)\n-\t\t}\n \t}\n-\tf(doc)\n \n The relevant specifications include:\n https://html.spec.whatwg.org/multipage/syntax.html and"
    },
    {
      "sha": "54be8fd30fd5b2041c7d49e3713b278182dfd7f9",
      "filename": "backend/vendor/golang.org/x/net/html/iter.go",
      "status": "added",
      "additions": 56,
      "deletions": 0,
      "changes": 56,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fiter.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fiter.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fiter.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -0,0 +1,56 @@\n+// Copyright 2024 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build go1.23\n+\n+package html\n+\n+import \"iter\"\n+\n+// Ancestors returns an iterator over the ancestors of n, starting with n.Parent.\n+//\n+// Mutating a Node or its parents while iterating may have unexpected results.\n+func (n *Node) Ancestors() iter.Seq[*Node] {\n+\t_ = n.Parent // eager nil check\n+\n+\treturn func(yield func(*Node) bool) {\n+\t\tfor p := n.Parent; p != nil && yield(p); p = p.Parent {\n+\t\t}\n+\t}\n+}\n+\n+// ChildNodes returns an iterator over the immediate children of n,\n+// starting with n.FirstChild.\n+//\n+// Mutating a Node or its children while iterating may have unexpected results.\n+func (n *Node) ChildNodes() iter.Seq[*Node] {\n+\t_ = n.FirstChild // eager nil check\n+\n+\treturn func(yield func(*Node) bool) {\n+\t\tfor c := n.FirstChild; c != nil && yield(c); c = c.NextSibling {\n+\t\t}\n+\t}\n+\n+}\n+\n+// Descendants returns an iterator over all nodes recursively beneath\n+// n, excluding n itself. Nodes are visited in depth-first preorder.\n+//\n+// Mutating a Node or its descendants while iterating may have unexpected results.\n+func (n *Node) Descendants() iter.Seq[*Node] {\n+\t_ = n.FirstChild // eager nil check\n+\n+\treturn func(yield func(*Node) bool) {\n+\t\tn.descendants(yield)\n+\t}\n+}\n+\n+func (n *Node) descendants(yield func(*Node) bool) bool {\n+\tfor c := range n.ChildNodes() {\n+\t\tif !yield(c) || !c.descendants(yield) {\n+\t\t\treturn false\n+\t\t}\n+\t}\n+\treturn true\n+}"
    },
    {
      "sha": "77741a1950efe855eb2fcfadf5fb8d45d4b76bbf",
      "filename": "backend/vendor/golang.org/x/net/html/node.go",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fnode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fnode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fnode.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -38,6 +38,10 @@ var scopeMarker = Node{Type: scopeMarkerNode}\n // that it looks like \"a<b\" rather than \"a&lt;b\". For element nodes, DataAtom\n // is the atom for Data, or zero if Data is not a known tag name.\n //\n+// Node trees may be navigated using the link fields (Parent,\n+// FirstChild, and so on) or a range loop over iterators such as\n+// [Node.Descendants].\n+//\n // An empty Namespace implies a \"http://www.w3.org/1999/xhtml\" namespace.\n // Similarly, \"math\" is short for \"http://www.w3.org/1998/Math/MathML\", and\n // \"svg\" is short for \"http://www.w3.org/2000/svg\"."
    },
    {
      "sha": "6e08a76a716e9acd766c9cda4ea56d607b481470",
      "filename": "backend/vendor/golang.org/x/sys/unix/README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2FREADME.md?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -156,7 +156,7 @@ from the generated architecture-specific files listed below, and merge these\n into a common file for each OS.\n \n The merge is performed in the following steps:\n-1. Construct the set of common code that is idential in all architecture-specific files.\n+1. Construct the set of common code that is identical in all architecture-specific files.\n 2. Write this common code to the merged file.\n 3. Remove the common code from all architecture-specific files.\n "
    },
    {
      "sha": "7ca4fa12aa673c6bbdaaac287ea68eb43408ff03",
      "filename": "backend/vendor/golang.org/x/sys/unix/ioctl_linux.go",
      "status": "modified",
      "additions": 96,
      "deletions": 0,
      "changes": 96,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl_linux.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -58,6 +58,102 @@ func IoctlGetEthtoolDrvinfo(fd int, ifname string) (*EthtoolDrvinfo, error) {\n \treturn &value, err\n }\n \n+// IoctlGetEthtoolTsInfo fetches ethtool timestamping and PHC\n+// association for the network device specified by ifname.\n+func IoctlGetEthtoolTsInfo(fd int, ifname string) (*EthtoolTsInfo, error) {\n+\tifr, err := NewIfreq(ifname)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tvalue := EthtoolTsInfo{Cmd: ETHTOOL_GET_TS_INFO}\n+\tifrd := ifr.withData(unsafe.Pointer(&value))\n+\n+\terr = ioctlIfreqData(fd, SIOCETHTOOL, &ifrd)\n+\treturn &value, err\n+}\n+\n+// IoctlGetHwTstamp retrieves the hardware timestamping configuration\n+// for the network device specified by ifname.\n+func IoctlGetHwTstamp(fd int, ifname string) (*HwTstampConfig, error) {\n+\tifr, err := NewIfreq(ifname)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tvalue := HwTstampConfig{}\n+\tifrd := ifr.withData(unsafe.Pointer(&value))\n+\n+\terr = ioctlIfreqData(fd, SIOCGHWTSTAMP, &ifrd)\n+\treturn &value, err\n+}\n+\n+// IoctlSetHwTstamp updates the hardware timestamping configuration for\n+// the network device specified by ifname.\n+func IoctlSetHwTstamp(fd int, ifname string, cfg *HwTstampConfig) error {\n+\tifr, err := NewIfreq(ifname)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tifrd := ifr.withData(unsafe.Pointer(cfg))\n+\treturn ioctlIfreqData(fd, SIOCSHWTSTAMP, &ifrd)\n+}\n+\n+// FdToClockID derives the clock ID from the file descriptor number\n+// - see clock_gettime(3), FD_TO_CLOCKID macros. The resulting ID is\n+// suitable for system calls like ClockGettime.\n+func FdToClockID(fd int) int32 { return int32((int(^fd) << 3) | 3) }\n+\n+// IoctlPtpClockGetcaps returns the description of a given PTP device.\n+func IoctlPtpClockGetcaps(fd int) (*PtpClockCaps, error) {\n+\tvar value PtpClockCaps\n+\terr := ioctlPtr(fd, PTP_CLOCK_GETCAPS2, unsafe.Pointer(&value))\n+\treturn &value, err\n+}\n+\n+// IoctlPtpSysOffsetPrecise returns a description of the clock\n+// offset compared to the system clock.\n+func IoctlPtpSysOffsetPrecise(fd int) (*PtpSysOffsetPrecise, error) {\n+\tvar value PtpSysOffsetPrecise\n+\terr := ioctlPtr(fd, PTP_SYS_OFFSET_PRECISE2, unsafe.Pointer(&value))\n+\treturn &value, err\n+}\n+\n+// IoctlPtpSysOffsetExtended returns an extended description of the\n+// clock offset compared to the system clock. The samples parameter\n+// specifies the desired number of measurements.\n+func IoctlPtpSysOffsetExtended(fd int, samples uint) (*PtpSysOffsetExtended, error) {\n+\tvalue := PtpSysOffsetExtended{Samples: uint32(samples)}\n+\terr := ioctlPtr(fd, PTP_SYS_OFFSET_EXTENDED2, unsafe.Pointer(&value))\n+\treturn &value, err\n+}\n+\n+// IoctlPtpPinGetfunc returns the configuration of the specified\n+// I/O pin on given PTP device.\n+func IoctlPtpPinGetfunc(fd int, index uint) (*PtpPinDesc, error) {\n+\tvalue := PtpPinDesc{Index: uint32(index)}\n+\terr := ioctlPtr(fd, PTP_PIN_GETFUNC2, unsafe.Pointer(&value))\n+\treturn &value, err\n+}\n+\n+// IoctlPtpPinSetfunc updates configuration of the specified PTP\n+// I/O pin.\n+func IoctlPtpPinSetfunc(fd int, pd *PtpPinDesc) error {\n+\treturn ioctlPtr(fd, PTP_PIN_SETFUNC2, unsafe.Pointer(pd))\n+}\n+\n+// IoctlPtpPeroutRequest configures the periodic output mode of the\n+// PTP I/O pins.\n+func IoctlPtpPeroutRequest(fd int, r *PtpPeroutRequest) error {\n+\treturn ioctlPtr(fd, PTP_PEROUT_REQUEST2, unsafe.Pointer(r))\n+}\n+\n+// IoctlPtpExttsRequest configures the external timestamping mode\n+// of the PTP I/O pins.\n+func IoctlPtpExttsRequest(fd int, r *PtpExttsRequest) error {\n+\treturn ioctlPtr(fd, PTP_EXTTS_REQUEST2, unsafe.Pointer(r))\n+}\n+\n // IoctlGetWatchdogInfo fetches information about a watchdog device from the\n // Linux watchdog API. For more information, see:\n // https://www.kernel.org/doc/html/latest/watchdog/watchdog-api.html."
    },
    {
      "sha": "6ab02b6c3122afd5e2ea1a7cf7f31a43342746fb",
      "filename": "backend/vendor/golang.org/x/sys/unix/mkerrors.sh",
      "status": "modified",
      "additions": 14,
      "deletions": 2,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkerrors.sh",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkerrors.sh",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkerrors.sh?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -158,6 +158,16 @@ includes_Linux='\n #endif\n #define _GNU_SOURCE\n \n+// See the description in unix/linux/types.go\n+#if defined(__ARM_EABI__) || \\\n+\t(defined(__mips__) && (_MIPS_SIM == _ABIO32)) || \\\n+\t(defined(__powerpc__) && (!defined(__powerpc64__)))\n+# ifdef   _TIME_BITS\n+#  undef  _TIME_BITS\n+# endif\n+# define  _TIME_BITS 32\n+#endif\n+\n // <sys/ioctl.h> is broken on powerpc64, as it fails to include definitions of\n // these structures. We just include them copied from <bits/termios.h>.\n #if defined(__powerpc__)\n@@ -256,6 +266,7 @@ struct ltchars {\n #include <linux/nsfs.h>\n #include <linux/perf_event.h>\n #include <linux/pps.h>\n+#include <linux/ptp_clock.h>\n #include <linux/ptrace.h>\n #include <linux/random.h>\n #include <linux/reboot.h>\n@@ -527,6 +538,7 @@ ccflags=\"$@\"\n \t\t$2 ~ /^(AF|SOCK|SO|SOL|IPPROTO|IP|IPV6|TCP|MCAST|EVFILT|NOTE|SHUT|PROT|MAP|MREMAP|MFD|T?PACKET|MSG|SCM|MCL|DT|MADV|PR|LOCAL|TCPOPT|UDP)_/ ||\n \t\t$2 ~ /^NFC_(GENL|PROTO|COMM|RF|SE|DIRECTION|LLCP|SOCKPROTO)_/ ||\n \t\t$2 ~ /^NFC_.*_(MAX)?SIZE$/ ||\n+\t\t$2 ~ /^PTP_/ ||\n \t\t$2 ~ /^RAW_PAYLOAD_/ ||\n \t\t$2 ~ /^[US]F_/ ||\n \t\t$2 ~ /^TP_STATUS_/ ||\n@@ -656,7 +668,7 @@ errors=$(\n signals=$(\n \techo '#include <signal.h>' | $CC -x c - -E -dM $ccflags |\n \tawk '$1==\"#define\" && $2 ~ /^SIG[A-Z0-9]+$/ { print $2 }' |\n-\tgrep -v 'SIGSTKSIZE\\|SIGSTKSZ\\|SIGRT\\|SIGMAX64' |\n+\tgrep -E -v '(SIGSTKSIZE|SIGSTKSZ|SIGRT|SIGMAX64)' |\n \tsort\n )\n \n@@ -666,7 +678,7 @@ echo '#include <errno.h>' | $CC -x c - -E -dM $ccflags |\n \tsort >_error.grep\n echo '#include <signal.h>' | $CC -x c - -E -dM $ccflags |\n \tawk '$1==\"#define\" && $2 ~ /^SIG[A-Z0-9]+$/ { print \"^\\t\" $2 \"[ \\t]*=\" }' |\n-\tgrep -v 'SIGSTKSIZE\\|SIGSTKSZ\\|SIGRT\\|SIGMAX64' |\n+\tgrep -E -v '(SIGSTKSIZE|SIGSTKSZ|SIGRT|SIGMAX64)' |\n \tsort >_signal.grep\n \n echo '// mkerrors.sh' \"$@\""
    },
    {
      "sha": "6f15ba1eaff6571878742b4d058e084f30afa6f2",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_aix.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_aix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_aix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_aix.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -360,7 +360,7 @@ func Wait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int,\n \tvar status _C_int\n \tvar r Pid_t\n \terr = ERESTART\n-\t// AIX wait4 may return with ERESTART errno, while the processus is still\n+\t// AIX wait4 may return with ERESTART errno, while the process is still\n \t// active.\n \tfor err == ERESTART {\n \t\tr, err = wait4(Pid_t(pid), &status, options, rusage)"
    },
    {
      "sha": "230a94549a7a278527848109714e2e3285888732",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_linux.go",
      "status": "modified",
      "additions": 63,
      "deletions": 1,
      "changes": 64,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -1295,6 +1295,48 @@ func GetsockoptTCPInfo(fd, level, opt int) (*TCPInfo, error) {\n \treturn &value, err\n }\n \n+// GetsockoptTCPCCVegasInfo returns algorithm specific congestion control information for a socket using the \"vegas\"\n+// algorithm.\n+//\n+// The socket's congestion control algorighm can be retrieved via [GetsockoptString] with the [TCP_CONGESTION] option:\n+//\n+//\talgo, err := unix.GetsockoptString(fd, unix.IPPROTO_TCP, unix.TCP_CONGESTION)\n+func GetsockoptTCPCCVegasInfo(fd, level, opt int) (*TCPVegasInfo, error) {\n+\tvar value [SizeofTCPCCInfo / 4]uint32 // ensure proper alignment\n+\tvallen := _Socklen(SizeofTCPCCInfo)\n+\terr := getsockopt(fd, level, opt, unsafe.Pointer(&value[0]), &vallen)\n+\tout := (*TCPVegasInfo)(unsafe.Pointer(&value[0]))\n+\treturn out, err\n+}\n+\n+// GetsockoptTCPCCDCTCPInfo returns algorithm specific congestion control information for a socket using the \"dctp\"\n+// algorithm.\n+//\n+// The socket's congestion control algorighm can be retrieved via [GetsockoptString] with the [TCP_CONGESTION] option:\n+//\n+//\talgo, err := unix.GetsockoptString(fd, unix.IPPROTO_TCP, unix.TCP_CONGESTION)\n+func GetsockoptTCPCCDCTCPInfo(fd, level, opt int) (*TCPDCTCPInfo, error) {\n+\tvar value [SizeofTCPCCInfo / 4]uint32 // ensure proper alignment\n+\tvallen := _Socklen(SizeofTCPCCInfo)\n+\terr := getsockopt(fd, level, opt, unsafe.Pointer(&value[0]), &vallen)\n+\tout := (*TCPDCTCPInfo)(unsafe.Pointer(&value[0]))\n+\treturn out, err\n+}\n+\n+// GetsockoptTCPCCBBRInfo returns algorithm specific congestion control information for a socket using the \"bbr\"\n+// algorithm.\n+//\n+// The socket's congestion control algorighm can be retrieved via [GetsockoptString] with the [TCP_CONGESTION] option:\n+//\n+//\talgo, err := unix.GetsockoptString(fd, unix.IPPROTO_TCP, unix.TCP_CONGESTION)\n+func GetsockoptTCPCCBBRInfo(fd, level, opt int) (*TCPBBRInfo, error) {\n+\tvar value [SizeofTCPCCInfo / 4]uint32 // ensure proper alignment\n+\tvallen := _Socklen(SizeofTCPCCInfo)\n+\terr := getsockopt(fd, level, opt, unsafe.Pointer(&value[0]), &vallen)\n+\tout := (*TCPBBRInfo)(unsafe.Pointer(&value[0]))\n+\treturn out, err\n+}\n+\n // GetsockoptString returns the string value of the socket option opt for the\n // socket associated with fd at the given socket level.\n func GetsockoptString(fd, level, opt int) (string, error) {\n@@ -1818,6 +1860,7 @@ func Sendfile(outfd int, infd int, offset *int64, count int) (written int, err e\n //sys\tClockAdjtime(clockid int32, buf *Timex) (state int, err error)\n //sys\tClockGetres(clockid int32, res *Timespec) (err error)\n //sys\tClockGettime(clockid int32, time *Timespec) (err error)\n+//sys\tClockSettime(clockid int32, time *Timespec) (err error)\n //sys\tClockNanosleep(clockid int32, flags int, request *Timespec, remain *Timespec) (err error)\n //sys\tClose(fd int) (err error)\n //sys\tCloseRange(first uint, last uint, flags uint) (err error)\n@@ -1959,7 +2002,26 @@ func Getpgrp() (pid int) {\n //sysnb\tGetpid() (pid int)\n //sysnb\tGetppid() (ppid int)\n //sys\tGetpriority(which int, who int) (prio int, err error)\n-//sys\tGetrandom(buf []byte, flags int) (n int, err error)\n+\n+func Getrandom(buf []byte, flags int) (n int, err error) {\n+\tvdsoRet, supported := vgetrandom(buf, uint32(flags))\n+\tif supported {\n+\t\tif vdsoRet < 0 {\n+\t\t\treturn 0, errnoErr(syscall.Errno(-vdsoRet))\n+\t\t}\n+\t\treturn vdsoRet, nil\n+\t}\n+\tvar p *byte\n+\tif len(buf) > 0 {\n+\t\tp = &buf[0]\n+\t}\n+\tr, _, e := Syscall(SYS_GETRANDOM, uintptr(unsafe.Pointer(p)), uintptr(len(buf)), uintptr(flags))\n+\tif e != 0 {\n+\t\treturn 0, errnoErr(e)\n+\t}\n+\treturn int(r), nil\n+}\n+\n //sysnb\tGetrusage(who int, rusage *Rusage) (err error)\n //sysnb\tGetsid(pid int) (sid int, err error)\n //sysnb\tGettid() (tid int)"
    },
    {
      "sha": "745e5c7e6c0d5d6cde926549e394f8c541e7371b",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_linux_arm64.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux_arm64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -182,3 +182,5 @@ func KexecFileLoad(kernelFd int, initrdFd int, cmdline string, flags int) error\n \t}\n \treturn kexecFileLoad(kernelFd, initrdFd, cmdlineLen, cmdline, flags)\n }\n+\n+const SYS_FSTATAT = SYS_NEWFSTATAT"
    },
    {
      "sha": "dd2262a40799a2cdeb02e40a4526aa8b3533c258",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_linux_loong64.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux_loong64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux_loong64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux_loong64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -214,3 +214,5 @@ func KexecFileLoad(kernelFd int, initrdFd int, cmdline string, flags int) error\n \t}\n \treturn kexecFileLoad(kernelFd, initrdFd, cmdlineLen, cmdline, flags)\n }\n+\n+const SYS_FSTATAT = SYS_NEWFSTATAT"
    },
    {
      "sha": "8cf3670bda630e22ea33151e00c3895c72dda69c",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_linux_riscv64.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux_riscv64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_linux_riscv64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -187,3 +187,5 @@ func RISCVHWProbe(pairs []RISCVHWProbePairs, set *CPUSet, flags uint) (err error\n \t}\n \treturn riscvHWProbe(pairs, setSize, set, flags)\n }\n+\n+const SYS_FSTATAT = SYS_NEWFSTATAT"
    },
    {
      "sha": "7bf5c04bb0ae0d539b6082d0b5d60f3f4202f74a",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
      "status": "modified",
      "additions": 100,
      "deletions": 4,
      "changes": 104,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_zos_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_zos_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_zos_s390x.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -768,6 +768,15 @@ func Munmap(b []byte) (err error) {\n \treturn mapper.Munmap(b)\n }\n \n+func MmapPtr(fd int, offset int64, addr unsafe.Pointer, length uintptr, prot int, flags int) (ret unsafe.Pointer, err error) {\n+\txaddr, err := mapper.mmap(uintptr(addr), length, prot, flags, fd, offset)\n+\treturn unsafe.Pointer(xaddr), err\n+}\n+\n+func MunmapPtr(addr unsafe.Pointer, length uintptr) (err error) {\n+\treturn mapper.munmap(uintptr(addr), length)\n+}\n+\n //sys   Gethostname(buf []byte) (err error) = SYS___GETHOSTNAME_A\n //sysnb\tGetgid() (gid int)\n //sysnb\tGetpid() (pid int)\n@@ -816,10 +825,10 @@ func Lstat(path string, stat *Stat_t) (err error) {\n // for checking symlinks begins with $VERSION/ $SYSNAME/ $SYSSYMR/ $SYSSYMA/\n func isSpecialPath(path []byte) (v bool) {\n \tvar special = [4][8]byte{\n-\t\t[8]byte{'V', 'E', 'R', 'S', 'I', 'O', 'N', '/'},\n-\t\t[8]byte{'S', 'Y', 'S', 'N', 'A', 'M', 'E', '/'},\n-\t\t[8]byte{'S', 'Y', 'S', 'S', 'Y', 'M', 'R', '/'},\n-\t\t[8]byte{'S', 'Y', 'S', 'S', 'Y', 'M', 'A', '/'}}\n+\t\t{'V', 'E', 'R', 'S', 'I', 'O', 'N', '/'},\n+\t\t{'S', 'Y', 'S', 'N', 'A', 'M', 'E', '/'},\n+\t\t{'S', 'Y', 'S', 'S', 'Y', 'M', 'R', '/'},\n+\t\t{'S', 'Y', 'S', 'S', 'Y', 'M', 'A', '/'}}\n \n \tvar i, j int\n \tfor i = 0; i < len(special); i++ {\n@@ -3115,3 +3124,90 @@ func legacy_Mkfifoat(dirfd int, path string, mode uint32) (err error) {\n //sys\tPosix_openpt(oflag int) (fd int, err error) = SYS_POSIX_OPENPT\n //sys\tGrantpt(fildes int) (rc int, err error) = SYS_GRANTPT\n //sys\tUnlockpt(fildes int) (rc int, err error) = SYS_UNLOCKPT\n+\n+func fcntlAsIs(fd uintptr, cmd int, arg uintptr) (val int, err error) {\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS_FCNTL<<4, uintptr(fd), uintptr(cmd), arg)\n+\truntime.ExitSyscall()\n+\tval = int(r0)\n+\tif int64(r0) == -1 {\n+\t\terr = errnoErr2(e1, e2)\n+\t}\n+\treturn\n+}\n+\n+func Fcntl(fd uintptr, cmd int, op interface{}) (ret int, err error) {\n+\tswitch op.(type) {\n+\tcase *Flock_t:\n+\t\terr = FcntlFlock(fd, cmd, op.(*Flock_t))\n+\t\tif err != nil {\n+\t\t\tret = -1\n+\t\t}\n+\t\treturn\n+\tcase int:\n+\t\treturn FcntlInt(fd, cmd, op.(int))\n+\tcase *F_cnvrt:\n+\t\treturn fcntlAsIs(fd, cmd, uintptr(unsafe.Pointer(op.(*F_cnvrt))))\n+\tcase unsafe.Pointer:\n+\t\treturn fcntlAsIs(fd, cmd, uintptr(op.(unsafe.Pointer)))\n+\tdefault:\n+\t\treturn -1, EINVAL\n+\t}\n+\treturn\n+}\n+\n+func Sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {\n+\tif raceenabled {\n+\t\traceReleaseMerge(unsafe.Pointer(&ioSync))\n+\t}\n+\treturn sendfile(outfd, infd, offset, count)\n+}\n+\n+func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {\n+\t// TODO: use LE call instead if the call is implemented\n+\toriginalOffset, err := Seek(infd, 0, SEEK_CUR)\n+\tif err != nil {\n+\t\treturn -1, err\n+\t}\n+\t//start reading data from in_fd\n+\tif offset != nil {\n+\t\t_, err := Seek(infd, *offset, SEEK_SET)\n+\t\tif err != nil {\n+\t\t\treturn -1, err\n+\t\t}\n+\t}\n+\n+\tbuf := make([]byte, count)\n+\treadBuf := make([]byte, 0)\n+\tvar n int = 0\n+\tfor i := 0; i < count; i += n {\n+\t\tn, err := Read(infd, buf)\n+\t\tif n == 0 {\n+\t\t\tif err != nil {\n+\t\t\t\treturn -1, err\n+\t\t\t} else { // EOF\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t}\n+\t\treadBuf = append(readBuf, buf...)\n+\t\tbuf = buf[0:0]\n+\t}\n+\n+\tn2, err := Write(outfd, readBuf)\n+\tif err != nil {\n+\t\treturn -1, err\n+\t}\n+\n+\t//When sendfile() returns, this variable will be set to the\n+\t// offset of the byte following the last byte that was read.\n+\tif offset != nil {\n+\t\t*offset = *offset + int64(n)\n+\t\t// If offset is not NULL, then sendfile() does not modify the file\n+\t\t// offset of in_fd\n+\t\t_, err := Seek(infd, originalOffset, SEEK_SET)\n+\t\tif err != nil {\n+\t\t\treturn -1, err\n+\t\t}\n+\t}\n+\treturn n2, nil\n+}"
    },
    {
      "sha": "07ac8e09d1b702b1abd56252d7c6d1135580f559",
      "filename": "backend/vendor/golang.org/x/sys/unix/vgetrandom_linux.go",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fvgetrandom_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fvgetrandom_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fvgetrandom_linux.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2024 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build linux && go1.24\n+\n+package unix\n+\n+import _ \"unsafe\"\n+\n+//go:linkname vgetrandom runtime.vgetrandom\n+//go:noescape\n+func vgetrandom(p []byte, flags uint32) (ret int, supported bool)"
    },
    {
      "sha": "297e97bce92a6ebc7eeebc067685a2587b5f7e63",
      "filename": "backend/vendor/golang.org/x/sys/unix/vgetrandom_unsupported.go",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fvgetrandom_unsupported.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fvgetrandom_unsupported.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fvgetrandom_unsupported.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2024 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build !linux || !go1.24\n+\n+package unix\n+\n+func vgetrandom(p []byte, flags uint32) (ret int, supported bool) {\n+\treturn -1, false\n+}"
    },
    {
      "sha": "ccba391c9fb0923f4113e45e00491f3b015f254e",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux.go",
      "status": "modified",
      "additions": 33,
      "deletions": 2,
      "changes": 35,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -495,6 +495,7 @@ const (\n \tBPF_F_TEST_REG_INVARIANTS                   = 0x80\n \tBPF_F_TEST_RND_HI32                         = 0x4\n \tBPF_F_TEST_RUN_ON_CPU                       = 0x1\n+\tBPF_F_TEST_SKB_CHECKSUM_COMPLETE            = 0x4\n \tBPF_F_TEST_STATE_FREQ                       = 0x8\n \tBPF_F_TEST_XDP_LIVE_FRAMES                  = 0x2\n \tBPF_F_XDP_DEV_BOUND_ONLY                    = 0x40\n@@ -1922,6 +1923,7 @@ const (\n \tMNT_EXPIRE                                  = 0x4\n \tMNT_FORCE                                   = 0x1\n \tMNT_ID_REQ_SIZE_VER0                        = 0x18\n+\tMNT_ID_REQ_SIZE_VER1                        = 0x20\n \tMODULE_INIT_COMPRESSED_FILE                 = 0x4\n \tMODULE_INIT_IGNORE_MODVERSIONS              = 0x1\n \tMODULE_INIT_IGNORE_VERMAGIC                 = 0x2\n@@ -2187,7 +2189,7 @@ const (\n \tNFT_REG_SIZE                                = 0x10\n \tNFT_REJECT_ICMPX_MAX                        = 0x3\n \tNFT_RT_MAX                                  = 0x4\n-\tNFT_SECMARK_CTX_MAXLEN                      = 0x100\n+\tNFT_SECMARK_CTX_MAXLEN                      = 0x1000\n \tNFT_SET_MAXNAMELEN                          = 0x100\n \tNFT_SOCKET_MAX                              = 0x3\n \tNFT_TABLE_F_MASK                            = 0x7\n@@ -2356,9 +2358,11 @@ const (\n \tPERF_MEM_LVLNUM_IO                          = 0xa\n \tPERF_MEM_LVLNUM_L1                          = 0x1\n \tPERF_MEM_LVLNUM_L2                          = 0x2\n+\tPERF_MEM_LVLNUM_L2_MHB                      = 0x5\n \tPERF_MEM_LVLNUM_L3                          = 0x3\n \tPERF_MEM_LVLNUM_L4                          = 0x4\n \tPERF_MEM_LVLNUM_LFB                         = 0xc\n+\tPERF_MEM_LVLNUM_MSC                         = 0x6\n \tPERF_MEM_LVLNUM_NA                          = 0xf\n \tPERF_MEM_LVLNUM_PMEM                        = 0xe\n \tPERF_MEM_LVLNUM_RAM                         = 0xd\n@@ -2431,6 +2435,7 @@ const (\n \tPRIO_PGRP                                   = 0x1\n \tPRIO_PROCESS                                = 0x0\n \tPRIO_USER                                   = 0x2\n+\tPROCFS_IOCTL_MAGIC                          = 'f'\n \tPROC_SUPER_MAGIC                            = 0x9fa0\n \tPROT_EXEC                                   = 0x4\n \tPROT_GROWSDOWN                              = 0x1000000\n@@ -2620,6 +2625,28 @@ const (\n \tPR_UNALIGN_NOPRINT                          = 0x1\n \tPR_UNALIGN_SIGBUS                           = 0x2\n \tPSTOREFS_MAGIC                              = 0x6165676c\n+\tPTP_CLK_MAGIC                               = '='\n+\tPTP_ENABLE_FEATURE                          = 0x1\n+\tPTP_EXTTS_EDGES                             = 0x6\n+\tPTP_EXTTS_EVENT_VALID                       = 0x1\n+\tPTP_EXTTS_V1_VALID_FLAGS                    = 0x7\n+\tPTP_EXTTS_VALID_FLAGS                       = 0x1f\n+\tPTP_EXT_OFFSET                              = 0x10\n+\tPTP_FALLING_EDGE                            = 0x4\n+\tPTP_MAX_SAMPLES                             = 0x19\n+\tPTP_PEROUT_DUTY_CYCLE                       = 0x2\n+\tPTP_PEROUT_ONE_SHOT                         = 0x1\n+\tPTP_PEROUT_PHASE                            = 0x4\n+\tPTP_PEROUT_V1_VALID_FLAGS                   = 0x0\n+\tPTP_PEROUT_VALID_FLAGS                      = 0x7\n+\tPTP_PIN_GETFUNC                             = 0xc0603d06\n+\tPTP_PIN_GETFUNC2                            = 0xc0603d0f\n+\tPTP_RISING_EDGE                             = 0x2\n+\tPTP_STRICT_FLAGS                            = 0x8\n+\tPTP_SYS_OFFSET_EXTENDED                     = 0xc4c03d09\n+\tPTP_SYS_OFFSET_EXTENDED2                    = 0xc4c03d12\n+\tPTP_SYS_OFFSET_PRECISE                      = 0xc0403d08\n+\tPTP_SYS_OFFSET_PRECISE2                     = 0xc0403d11\n \tPTRACE_ATTACH                               = 0x10\n \tPTRACE_CONT                                 = 0x7\n \tPTRACE_DETACH                               = 0x11\n@@ -2933,11 +2960,12 @@ const (\n \tRUSAGE_SELF                                 = 0x0\n \tRUSAGE_THREAD                               = 0x1\n \tRWF_APPEND                                  = 0x10\n+\tRWF_ATOMIC                                  = 0x40\n \tRWF_DSYNC                                   = 0x2\n \tRWF_HIPRI                                   = 0x1\n \tRWF_NOAPPEND                                = 0x20\n \tRWF_NOWAIT                                  = 0x8\n-\tRWF_SUPPORTED                               = 0x3f\n+\tRWF_SUPPORTED                               = 0x7f\n \tRWF_SYNC                                    = 0x4\n \tRWF_WRITE_LIFE_NOT_SET                      = 0x0\n \tSCHED_BATCH                                 = 0x3\n@@ -3210,6 +3238,7 @@ const (\n \tSTATX_ATTR_MOUNT_ROOT                       = 0x2000\n \tSTATX_ATTR_NODUMP                           = 0x40\n \tSTATX_ATTR_VERITY                           = 0x100000\n+\tSTATX_ATTR_WRITE_ATOMIC                     = 0x400000\n \tSTATX_BASIC_STATS                           = 0x7ff\n \tSTATX_BLOCKS                                = 0x400\n \tSTATX_BTIME                                 = 0x800\n@@ -3226,6 +3255,7 @@ const (\n \tSTATX_SUBVOL                                = 0x8000\n \tSTATX_TYPE                                  = 0x1\n \tSTATX_UID                                   = 0x8\n+\tSTATX_WRITE_ATOMIC                          = 0x10000\n \tSTATX__RESERVED                             = 0x80000000\n \tSYNC_FILE_RANGE_WAIT_AFTER                  = 0x4\n \tSYNC_FILE_RANGE_WAIT_BEFORE                 = 0x1\n@@ -3624,6 +3654,7 @@ const (\n \tXDP_UMEM_PGOFF_COMPLETION_RING              = 0x180000000\n \tXDP_UMEM_PGOFF_FILL_RING                    = 0x100000000\n \tXDP_UMEM_REG                                = 0x4\n+\tXDP_UMEM_TX_METADATA_LEN                    = 0x4\n \tXDP_UMEM_TX_SW_CSUM                         = 0x2\n \tXDP_UMEM_UNALIGNED_CHUNK_FLAG               = 0x1\n \tXDP_USE_NEED_WAKEUP                         = 0x8"
    },
    {
      "sha": "0c00cb3f3af836e182b7aa7ac2280ee2428d1967",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_386.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_386.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_386.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -153,9 +153,14 @@ const (\n \tNFDBITS                          = 0x20\n \tNLDLY                            = 0x100\n \tNOFLSH                           = 0x80\n+\tNS_GET_MNTNS_ID                  = 0x8008b705\n \tNS_GET_NSTYPE                    = 0xb703\n \tNS_GET_OWNER_UID                 = 0xb704\n \tNS_GET_PARENT                    = 0xb702\n+\tNS_GET_PID_FROM_PIDNS            = 0x8004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x8004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x8004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x8004b709\n \tNS_GET_USERNS                    = 0xb701\n \tOLCUC                            = 0x2\n \tONLCR                            = 0x4\n@@ -232,6 +237,20 @@ const (\n \tPPPIOCUNBRIDGECHAN               = 0x7434\n \tPPPIOCXFERUNIT                   = 0x744e\n \tPR_SET_PTRACER_ANY               = 0xffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x80503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x80503d0a\n+\tPTP_ENABLE_PPS                   = 0x40043d04\n+\tPTP_ENABLE_PPS2                  = 0x40043d0d\n+\tPTP_EXTTS_REQUEST                = 0x40103d02\n+\tPTP_EXTTS_REQUEST2               = 0x40103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x3d13\n+\tPTP_MASK_EN_SINGLE               = 0x40043d14\n+\tPTP_PEROUT_REQUEST               = 0x40383d03\n+\tPTP_PEROUT_REQUEST2              = 0x40383d0c\n+\tPTP_PIN_SETFUNC                  = 0x40603d07\n+\tPTP_PIN_SETFUNC2                 = 0x40603d10\n+\tPTP_SYS_OFFSET                   = 0x43403d05\n+\tPTP_SYS_OFFSET2                  = 0x43403d0e\n \tPTRACE_GETFPREGS                 = 0xe\n \tPTRACE_GETFPXREGS                = 0x12\n \tPTRACE_GET_THREAD_AREA           = 0x19"
    },
    {
      "sha": "dfb364554dd58370b18e39856c3247a8ea5e07b7",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_amd64.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_amd64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -153,9 +153,14 @@ const (\n \tNFDBITS                          = 0x40\n \tNLDLY                            = 0x100\n \tNOFLSH                           = 0x80\n+\tNS_GET_MNTNS_ID                  = 0x8008b705\n \tNS_GET_NSTYPE                    = 0xb703\n \tNS_GET_OWNER_UID                 = 0xb704\n \tNS_GET_PARENT                    = 0xb702\n+\tNS_GET_PID_FROM_PIDNS            = 0x8004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x8004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x8004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x8004b709\n \tNS_GET_USERNS                    = 0xb701\n \tOLCUC                            = 0x2\n \tONLCR                            = 0x4\n@@ -232,6 +237,20 @@ const (\n \tPPPIOCUNBRIDGECHAN               = 0x7434\n \tPPPIOCXFERUNIT                   = 0x744e\n \tPR_SET_PTRACER_ANY               = 0xffffffffffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x80503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x80503d0a\n+\tPTP_ENABLE_PPS                   = 0x40043d04\n+\tPTP_ENABLE_PPS2                  = 0x40043d0d\n+\tPTP_EXTTS_REQUEST                = 0x40103d02\n+\tPTP_EXTTS_REQUEST2               = 0x40103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x3d13\n+\tPTP_MASK_EN_SINGLE               = 0x40043d14\n+\tPTP_PEROUT_REQUEST               = 0x40383d03\n+\tPTP_PEROUT_REQUEST2              = 0x40383d0c\n+\tPTP_PIN_SETFUNC                  = 0x40603d07\n+\tPTP_PIN_SETFUNC2                 = 0x40603d10\n+\tPTP_SYS_OFFSET                   = 0x43403d05\n+\tPTP_SYS_OFFSET2                  = 0x43403d0e\n \tPTRACE_ARCH_PRCTL                = 0x1e\n \tPTRACE_GETFPREGS                 = 0xe\n \tPTRACE_GETFPXREGS                = 0x12"
    },
    {
      "sha": "d46dcf78abc9a876cf38213985e869ebc601842e",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_arm.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -150,9 +150,14 @@ const (\n \tNFDBITS                          = 0x20\n \tNLDLY                            = 0x100\n \tNOFLSH                           = 0x80\n+\tNS_GET_MNTNS_ID                  = 0x8008b705\n \tNS_GET_NSTYPE                    = 0xb703\n \tNS_GET_OWNER_UID                 = 0xb704\n \tNS_GET_PARENT                    = 0xb702\n+\tNS_GET_PID_FROM_PIDNS            = 0x8004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x8004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x8004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x8004b709\n \tNS_GET_USERNS                    = 0xb701\n \tOLCUC                            = 0x2\n \tONLCR                            = 0x4\n@@ -229,6 +234,20 @@ const (\n \tPPPIOCUNBRIDGECHAN               = 0x7434\n \tPPPIOCXFERUNIT                   = 0x744e\n \tPR_SET_PTRACER_ANY               = 0xffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x80503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x80503d0a\n+\tPTP_ENABLE_PPS                   = 0x40043d04\n+\tPTP_ENABLE_PPS2                  = 0x40043d0d\n+\tPTP_EXTTS_REQUEST                = 0x40103d02\n+\tPTP_EXTTS_REQUEST2               = 0x40103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x3d13\n+\tPTP_MASK_EN_SINGLE               = 0x40043d14\n+\tPTP_PEROUT_REQUEST               = 0x40383d03\n+\tPTP_PEROUT_REQUEST2              = 0x40383d0c\n+\tPTP_PIN_SETFUNC                  = 0x40603d07\n+\tPTP_PIN_SETFUNC2                 = 0x40603d10\n+\tPTP_SYS_OFFSET                   = 0x43403d05\n+\tPTP_SYS_OFFSET2                  = 0x43403d0e\n \tPTRACE_GETCRUNCHREGS             = 0x19\n \tPTRACE_GETFDPIC                  = 0x1f\n \tPTRACE_GETFDPIC_EXEC             = 0x0"
    },
    {
      "sha": "3af3248a7f2e14a21a33edcbc4b00af5d4888c6a",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_arm64.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -154,9 +154,14 @@ const (\n \tNFDBITS                          = 0x40\n \tNLDLY                            = 0x100\n \tNOFLSH                           = 0x80\n+\tNS_GET_MNTNS_ID                  = 0x8008b705\n \tNS_GET_NSTYPE                    = 0xb703\n \tNS_GET_OWNER_UID                 = 0xb704\n \tNS_GET_PARENT                    = 0xb702\n+\tNS_GET_PID_FROM_PIDNS            = 0x8004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x8004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x8004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x8004b709\n \tNS_GET_USERNS                    = 0xb701\n \tOLCUC                            = 0x2\n \tONLCR                            = 0x4\n@@ -235,6 +240,20 @@ const (\n \tPROT_BTI                         = 0x10\n \tPROT_MTE                         = 0x20\n \tPR_SET_PTRACER_ANY               = 0xffffffffffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x80503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x80503d0a\n+\tPTP_ENABLE_PPS                   = 0x40043d04\n+\tPTP_ENABLE_PPS2                  = 0x40043d0d\n+\tPTP_EXTTS_REQUEST                = 0x40103d02\n+\tPTP_EXTTS_REQUEST2               = 0x40103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x3d13\n+\tPTP_MASK_EN_SINGLE               = 0x40043d14\n+\tPTP_PEROUT_REQUEST               = 0x40383d03\n+\tPTP_PEROUT_REQUEST2              = 0x40383d0c\n+\tPTP_PIN_SETFUNC                  = 0x40603d07\n+\tPTP_PIN_SETFUNC2                 = 0x40603d10\n+\tPTP_SYS_OFFSET                   = 0x43403d05\n+\tPTP_SYS_OFFSET2                  = 0x43403d0e\n \tPTRACE_PEEKMTETAGS               = 0x21\n \tPTRACE_POKEMTETAGS               = 0x22\n \tPTRACE_SYSEMU                    = 0x1f"
    },
    {
      "sha": "292bcf0283d179d091e5a95b052859b0feda1938",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_loong64.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_loong64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_loong64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_loong64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -154,9 +154,14 @@ const (\n \tNFDBITS                          = 0x40\n \tNLDLY                            = 0x100\n \tNOFLSH                           = 0x80\n+\tNS_GET_MNTNS_ID                  = 0x8008b705\n \tNS_GET_NSTYPE                    = 0xb703\n \tNS_GET_OWNER_UID                 = 0xb704\n \tNS_GET_PARENT                    = 0xb702\n+\tNS_GET_PID_FROM_PIDNS            = 0x8004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x8004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x8004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x8004b709\n \tNS_GET_USERNS                    = 0xb701\n \tOLCUC                            = 0x2\n \tONLCR                            = 0x4\n@@ -233,6 +238,20 @@ const (\n \tPPPIOCUNBRIDGECHAN               = 0x7434\n \tPPPIOCXFERUNIT                   = 0x744e\n \tPR_SET_PTRACER_ANY               = 0xffffffffffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x80503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x80503d0a\n+\tPTP_ENABLE_PPS                   = 0x40043d04\n+\tPTP_ENABLE_PPS2                  = 0x40043d0d\n+\tPTP_EXTTS_REQUEST                = 0x40103d02\n+\tPTP_EXTTS_REQUEST2               = 0x40103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x3d13\n+\tPTP_MASK_EN_SINGLE               = 0x40043d14\n+\tPTP_PEROUT_REQUEST               = 0x40383d03\n+\tPTP_PEROUT_REQUEST2              = 0x40383d0c\n+\tPTP_PIN_SETFUNC                  = 0x40603d07\n+\tPTP_PIN_SETFUNC2                 = 0x40603d10\n+\tPTP_SYS_OFFSET                   = 0x43403d05\n+\tPTP_SYS_OFFSET2                  = 0x43403d0e\n \tPTRACE_SYSEMU                    = 0x1f\n \tPTRACE_SYSEMU_SINGLESTEP         = 0x20\n \tRLIMIT_AS                        = 0x9"
    },
    {
      "sha": "782b7110fa19b814ef9d24773925c82b227ed438",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -150,9 +150,14 @@ const (\n \tNFDBITS                          = 0x20\n \tNLDLY                            = 0x100\n \tNOFLSH                           = 0x80\n+\tNS_GET_MNTNS_ID                  = 0x4008b705\n \tNS_GET_NSTYPE                    = 0x2000b703\n \tNS_GET_OWNER_UID                 = 0x2000b704\n \tNS_GET_PARENT                    = 0x2000b702\n+\tNS_GET_PID_FROM_PIDNS            = 0x4004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x4004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x4004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x4004b709\n \tNS_GET_USERNS                    = 0x2000b701\n \tOLCUC                            = 0x2\n \tONLCR                            = 0x4\n@@ -229,6 +234,20 @@ const (\n \tPPPIOCUNBRIDGECHAN               = 0x20007434\n \tPPPIOCXFERUNIT                   = 0x2000744e\n \tPR_SET_PTRACER_ANY               = 0xffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x40503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x40503d0a\n+\tPTP_ENABLE_PPS                   = 0x80043d04\n+\tPTP_ENABLE_PPS2                  = 0x80043d0d\n+\tPTP_EXTTS_REQUEST                = 0x80103d02\n+\tPTP_EXTTS_REQUEST2               = 0x80103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x20003d13\n+\tPTP_MASK_EN_SINGLE               = 0x80043d14\n+\tPTP_PEROUT_REQUEST               = 0x80383d03\n+\tPTP_PEROUT_REQUEST2              = 0x80383d0c\n+\tPTP_PIN_SETFUNC                  = 0x80603d07\n+\tPTP_PIN_SETFUNC2                 = 0x80603d10\n+\tPTP_SYS_OFFSET                   = 0x83403d05\n+\tPTP_SYS_OFFSET2                  = 0x83403d0e\n \tPTRACE_GETFPREGS                 = 0xe\n \tPTRACE_GET_THREAD_AREA           = 0x19\n \tPTRACE_GET_THREAD_AREA_3264      = 0xc4"
    },
    {
      "sha": "84973fd9271fbc919af57df6699f6365ec0d2e86",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips64.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -150,9 +150,14 @@ const (\n \tNFDBITS                          = 0x40\n \tNLDLY                            = 0x100\n \tNOFLSH                           = 0x80\n+\tNS_GET_MNTNS_ID                  = 0x4008b705\n \tNS_GET_NSTYPE                    = 0x2000b703\n \tNS_GET_OWNER_UID                 = 0x2000b704\n \tNS_GET_PARENT                    = 0x2000b702\n+\tNS_GET_PID_FROM_PIDNS            = 0x4004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x4004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x4004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x4004b709\n \tNS_GET_USERNS                    = 0x2000b701\n \tOLCUC                            = 0x2\n \tONLCR                            = 0x4\n@@ -229,6 +234,20 @@ const (\n \tPPPIOCUNBRIDGECHAN               = 0x20007434\n \tPPPIOCXFERUNIT                   = 0x2000744e\n \tPR_SET_PTRACER_ANY               = 0xffffffffffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x40503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x40503d0a\n+\tPTP_ENABLE_PPS                   = 0x80043d04\n+\tPTP_ENABLE_PPS2                  = 0x80043d0d\n+\tPTP_EXTTS_REQUEST                = 0x80103d02\n+\tPTP_EXTTS_REQUEST2               = 0x80103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x20003d13\n+\tPTP_MASK_EN_SINGLE               = 0x80043d14\n+\tPTP_PEROUT_REQUEST               = 0x80383d03\n+\tPTP_PEROUT_REQUEST2              = 0x80383d0c\n+\tPTP_PIN_SETFUNC                  = 0x80603d07\n+\tPTP_PIN_SETFUNC2                 = 0x80603d10\n+\tPTP_SYS_OFFSET                   = 0x83403d05\n+\tPTP_SYS_OFFSET2                  = 0x83403d0e\n \tPTRACE_GETFPREGS                 = 0xe\n \tPTRACE_GET_THREAD_AREA           = 0x19\n \tPTRACE_GET_THREAD_AREA_3264      = 0xc4"
    },
    {
      "sha": "6d9cbc3b274bf1a0d81dd1df0610fc2f7575f71c",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips64le.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips64le.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mips64le.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -150,9 +150,14 @@ const (\n \tNFDBITS                          = 0x40\n \tNLDLY                            = 0x100\n \tNOFLSH                           = 0x80\n+\tNS_GET_MNTNS_ID                  = 0x4008b705\n \tNS_GET_NSTYPE                    = 0x2000b703\n \tNS_GET_OWNER_UID                 = 0x2000b704\n \tNS_GET_PARENT                    = 0x2000b702\n+\tNS_GET_PID_FROM_PIDNS            = 0x4004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x4004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x4004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x4004b709\n \tNS_GET_USERNS                    = 0x2000b701\n \tOLCUC                            = 0x2\n \tONLCR                            = 0x4\n@@ -229,6 +234,20 @@ const (\n \tPPPIOCUNBRIDGECHAN               = 0x20007434\n \tPPPIOCXFERUNIT                   = 0x2000744e\n \tPR_SET_PTRACER_ANY               = 0xffffffffffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x40503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x40503d0a\n+\tPTP_ENABLE_PPS                   = 0x80043d04\n+\tPTP_ENABLE_PPS2                  = 0x80043d0d\n+\tPTP_EXTTS_REQUEST                = 0x80103d02\n+\tPTP_EXTTS_REQUEST2               = 0x80103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x20003d13\n+\tPTP_MASK_EN_SINGLE               = 0x80043d14\n+\tPTP_PEROUT_REQUEST               = 0x80383d03\n+\tPTP_PEROUT_REQUEST2              = 0x80383d0c\n+\tPTP_PIN_SETFUNC                  = 0x80603d07\n+\tPTP_PIN_SETFUNC2                 = 0x80603d10\n+\tPTP_SYS_OFFSET                   = 0x83403d05\n+\tPTP_SYS_OFFSET2                  = 0x83403d0e\n \tPTRACE_GETFPREGS                 = 0xe\n \tPTRACE_GET_THREAD_AREA           = 0x19\n \tPTRACE_GET_THREAD_AREA_3264      = 0xc4"
    },
    {
      "sha": "5f9fedbce028d1a66846dd4790a9bd51b4f59e68",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_mipsle.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mipsle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mipsle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_mipsle.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -150,9 +150,14 @@ const (\n \tNFDBITS                          = 0x20\n \tNLDLY                            = 0x100\n \tNOFLSH                           = 0x80\n+\tNS_GET_MNTNS_ID                  = 0x4008b705\n \tNS_GET_NSTYPE                    = 0x2000b703\n \tNS_GET_OWNER_UID                 = 0x2000b704\n \tNS_GET_PARENT                    = 0x2000b702\n+\tNS_GET_PID_FROM_PIDNS            = 0x4004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x4004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x4004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x4004b709\n \tNS_GET_USERNS                    = 0x2000b701\n \tOLCUC                            = 0x2\n \tONLCR                            = 0x4\n@@ -229,6 +234,20 @@ const (\n \tPPPIOCUNBRIDGECHAN               = 0x20007434\n \tPPPIOCXFERUNIT                   = 0x2000744e\n \tPR_SET_PTRACER_ANY               = 0xffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x40503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x40503d0a\n+\tPTP_ENABLE_PPS                   = 0x80043d04\n+\tPTP_ENABLE_PPS2                  = 0x80043d0d\n+\tPTP_EXTTS_REQUEST                = 0x80103d02\n+\tPTP_EXTTS_REQUEST2               = 0x80103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x20003d13\n+\tPTP_MASK_EN_SINGLE               = 0x80043d14\n+\tPTP_PEROUT_REQUEST               = 0x80383d03\n+\tPTP_PEROUT_REQUEST2              = 0x80383d0c\n+\tPTP_PIN_SETFUNC                  = 0x80603d07\n+\tPTP_PIN_SETFUNC2                 = 0x80603d10\n+\tPTP_SYS_OFFSET                   = 0x83403d05\n+\tPTP_SYS_OFFSET2                  = 0x83403d0e\n \tPTRACE_GETFPREGS                 = 0xe\n \tPTRACE_GET_THREAD_AREA           = 0x19\n \tPTRACE_GET_THREAD_AREA_3264      = 0xc4"
    },
    {
      "sha": "bb0026ee0c46748816f20c8b0707de07d5a76f2b",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -152,9 +152,14 @@ const (\n \tNL3                              = 0x300\n \tNLDLY                            = 0x300\n \tNOFLSH                           = 0x80000000\n+\tNS_GET_MNTNS_ID                  = 0x4008b705\n \tNS_GET_NSTYPE                    = 0x2000b703\n \tNS_GET_OWNER_UID                 = 0x2000b704\n \tNS_GET_PARENT                    = 0x2000b702\n+\tNS_GET_PID_FROM_PIDNS            = 0x4004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x4004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x4004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x4004b709\n \tNS_GET_USERNS                    = 0x2000b701\n \tOLCUC                            = 0x4\n \tONLCR                            = 0x2\n@@ -232,6 +237,20 @@ const (\n \tPPPIOCXFERUNIT                   = 0x2000744e\n \tPROT_SAO                         = 0x10\n \tPR_SET_PTRACER_ANY               = 0xffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x40503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x40503d0a\n+\tPTP_ENABLE_PPS                   = 0x80043d04\n+\tPTP_ENABLE_PPS2                  = 0x80043d0d\n+\tPTP_EXTTS_REQUEST                = 0x80103d02\n+\tPTP_EXTTS_REQUEST2               = 0x80103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x20003d13\n+\tPTP_MASK_EN_SINGLE               = 0x80043d14\n+\tPTP_PEROUT_REQUEST               = 0x80383d03\n+\tPTP_PEROUT_REQUEST2              = 0x80383d0c\n+\tPTP_PIN_SETFUNC                  = 0x80603d07\n+\tPTP_PIN_SETFUNC2                 = 0x80603d10\n+\tPTP_SYS_OFFSET                   = 0x83403d05\n+\tPTP_SYS_OFFSET2                  = 0x83403d0e\n \tPTRACE_GETEVRREGS                = 0x14\n \tPTRACE_GETFPREGS                 = 0xe\n \tPTRACE_GETREGS64                 = 0x16"
    },
    {
      "sha": "46120db5c9a19d9f94962b96472083114490e0a5",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -152,9 +152,14 @@ const (\n \tNL3                              = 0x300\n \tNLDLY                            = 0x300\n \tNOFLSH                           = 0x80000000\n+\tNS_GET_MNTNS_ID                  = 0x4008b705\n \tNS_GET_NSTYPE                    = 0x2000b703\n \tNS_GET_OWNER_UID                 = 0x2000b704\n \tNS_GET_PARENT                    = 0x2000b702\n+\tNS_GET_PID_FROM_PIDNS            = 0x4004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x4004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x4004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x4004b709\n \tNS_GET_USERNS                    = 0x2000b701\n \tOLCUC                            = 0x4\n \tONLCR                            = 0x2\n@@ -232,6 +237,20 @@ const (\n \tPPPIOCXFERUNIT                   = 0x2000744e\n \tPROT_SAO                         = 0x10\n \tPR_SET_PTRACER_ANY               = 0xffffffffffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x40503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x40503d0a\n+\tPTP_ENABLE_PPS                   = 0x80043d04\n+\tPTP_ENABLE_PPS2                  = 0x80043d0d\n+\tPTP_EXTTS_REQUEST                = 0x80103d02\n+\tPTP_EXTTS_REQUEST2               = 0x80103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x20003d13\n+\tPTP_MASK_EN_SINGLE               = 0x80043d14\n+\tPTP_PEROUT_REQUEST               = 0x80383d03\n+\tPTP_PEROUT_REQUEST2              = 0x80383d0c\n+\tPTP_PIN_SETFUNC                  = 0x80603d07\n+\tPTP_PIN_SETFUNC2                 = 0x80603d10\n+\tPTP_SYS_OFFSET                   = 0x83403d05\n+\tPTP_SYS_OFFSET2                  = 0x83403d0e\n \tPTRACE_GETEVRREGS                = 0x14\n \tPTRACE_GETFPREGS                 = 0xe\n \tPTRACE_GETREGS64                 = 0x16"
    },
    {
      "sha": "5c951634fbed397c5d5c7a1468666baab9cd4cf3",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64le.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc64le.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_ppc64le.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -152,9 +152,14 @@ const (\n \tNL3                              = 0x300\n \tNLDLY                            = 0x300\n \tNOFLSH                           = 0x80000000\n+\tNS_GET_MNTNS_ID                  = 0x4008b705\n \tNS_GET_NSTYPE                    = 0x2000b703\n \tNS_GET_OWNER_UID                 = 0x2000b704\n \tNS_GET_PARENT                    = 0x2000b702\n+\tNS_GET_PID_FROM_PIDNS            = 0x4004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x4004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x4004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x4004b709\n \tNS_GET_USERNS                    = 0x2000b701\n \tOLCUC                            = 0x4\n \tONLCR                            = 0x2\n@@ -232,6 +237,20 @@ const (\n \tPPPIOCXFERUNIT                   = 0x2000744e\n \tPROT_SAO                         = 0x10\n \tPR_SET_PTRACER_ANY               = 0xffffffffffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x40503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x40503d0a\n+\tPTP_ENABLE_PPS                   = 0x80043d04\n+\tPTP_ENABLE_PPS2                  = 0x80043d0d\n+\tPTP_EXTTS_REQUEST                = 0x80103d02\n+\tPTP_EXTTS_REQUEST2               = 0x80103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x20003d13\n+\tPTP_MASK_EN_SINGLE               = 0x80043d14\n+\tPTP_PEROUT_REQUEST               = 0x80383d03\n+\tPTP_PEROUT_REQUEST2              = 0x80383d0c\n+\tPTP_PIN_SETFUNC                  = 0x80603d07\n+\tPTP_PIN_SETFUNC2                 = 0x80603d10\n+\tPTP_SYS_OFFSET                   = 0x83403d05\n+\tPTP_SYS_OFFSET2                  = 0x83403d0e\n \tPTRACE_GETEVRREGS                = 0x14\n \tPTRACE_GETFPREGS                 = 0xe\n \tPTRACE_GETREGS64                 = 0x16"
    },
    {
      "sha": "11a84d5af2083a43cd0db144cbac002a8a622a47",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_riscv64.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_riscv64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_riscv64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -150,9 +150,14 @@ const (\n \tNFDBITS                          = 0x40\n \tNLDLY                            = 0x100\n \tNOFLSH                           = 0x80\n+\tNS_GET_MNTNS_ID                  = 0x8008b705\n \tNS_GET_NSTYPE                    = 0xb703\n \tNS_GET_OWNER_UID                 = 0xb704\n \tNS_GET_PARENT                    = 0xb702\n+\tNS_GET_PID_FROM_PIDNS            = 0x8004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x8004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x8004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x8004b709\n \tNS_GET_USERNS                    = 0xb701\n \tOLCUC                            = 0x2\n \tONLCR                            = 0x4\n@@ -229,6 +234,20 @@ const (\n \tPPPIOCUNBRIDGECHAN               = 0x7434\n \tPPPIOCXFERUNIT                   = 0x744e\n \tPR_SET_PTRACER_ANY               = 0xffffffffffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x80503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x80503d0a\n+\tPTP_ENABLE_PPS                   = 0x40043d04\n+\tPTP_ENABLE_PPS2                  = 0x40043d0d\n+\tPTP_EXTTS_REQUEST                = 0x40103d02\n+\tPTP_EXTTS_REQUEST2               = 0x40103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x3d13\n+\tPTP_MASK_EN_SINGLE               = 0x40043d14\n+\tPTP_PEROUT_REQUEST               = 0x40383d03\n+\tPTP_PEROUT_REQUEST2              = 0x40383d0c\n+\tPTP_PIN_SETFUNC                  = 0x40603d07\n+\tPTP_PIN_SETFUNC2                 = 0x40603d10\n+\tPTP_SYS_OFFSET                   = 0x43403d05\n+\tPTP_SYS_OFFSET2                  = 0x43403d0e\n \tPTRACE_GETFDPIC                  = 0x21\n \tPTRACE_GETFDPIC_EXEC             = 0x0\n \tPTRACE_GETFDPIC_INTERP           = 0x1"
    },
    {
      "sha": "f78c4617cac1f75ae6c066bfc4d9746892bf5e08",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_s390x.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_s390x.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -150,9 +150,14 @@ const (\n \tNFDBITS                          = 0x40\n \tNLDLY                            = 0x100\n \tNOFLSH                           = 0x80\n+\tNS_GET_MNTNS_ID                  = 0x8008b705\n \tNS_GET_NSTYPE                    = 0xb703\n \tNS_GET_OWNER_UID                 = 0xb704\n \tNS_GET_PARENT                    = 0xb702\n+\tNS_GET_PID_FROM_PIDNS            = 0x8004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x8004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x8004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x8004b709\n \tNS_GET_USERNS                    = 0xb701\n \tOLCUC                            = 0x2\n \tONLCR                            = 0x4\n@@ -229,6 +234,20 @@ const (\n \tPPPIOCUNBRIDGECHAN               = 0x7434\n \tPPPIOCXFERUNIT                   = 0x744e\n \tPR_SET_PTRACER_ANY               = 0xffffffffffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x80503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x80503d0a\n+\tPTP_ENABLE_PPS                   = 0x40043d04\n+\tPTP_ENABLE_PPS2                  = 0x40043d0d\n+\tPTP_EXTTS_REQUEST                = 0x40103d02\n+\tPTP_EXTTS_REQUEST2               = 0x40103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x3d13\n+\tPTP_MASK_EN_SINGLE               = 0x40043d14\n+\tPTP_PEROUT_REQUEST               = 0x40383d03\n+\tPTP_PEROUT_REQUEST2              = 0x40383d0c\n+\tPTP_PIN_SETFUNC                  = 0x40603d07\n+\tPTP_PIN_SETFUNC2                 = 0x40603d10\n+\tPTP_SYS_OFFSET                   = 0x43403d05\n+\tPTP_SYS_OFFSET2                  = 0x43403d0e\n \tPTRACE_DISABLE_TE                = 0x5010\n \tPTRACE_ENABLE_TE                 = 0x5009\n \tPTRACE_GET_LAST_BREAK            = 0x5006"
    },
    {
      "sha": "aeb777c34427de98fb86bd2980887250545532b6",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_sparc64.go",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_sparc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_sparc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_sparc64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -155,9 +155,14 @@ const (\n \tNFDBITS                          = 0x40\n \tNLDLY                            = 0x100\n \tNOFLSH                           = 0x80\n+\tNS_GET_MNTNS_ID                  = 0x4008b705\n \tNS_GET_NSTYPE                    = 0x2000b703\n \tNS_GET_OWNER_UID                 = 0x2000b704\n \tNS_GET_PARENT                    = 0x2000b702\n+\tNS_GET_PID_FROM_PIDNS            = 0x4004b706\n+\tNS_GET_PID_IN_PIDNS              = 0x4004b708\n+\tNS_GET_TGID_FROM_PIDNS           = 0x4004b707\n+\tNS_GET_TGID_IN_PIDNS             = 0x4004b709\n \tNS_GET_USERNS                    = 0x2000b701\n \tOLCUC                            = 0x2\n \tONLCR                            = 0x4\n@@ -234,6 +239,20 @@ const (\n \tPPPIOCUNBRIDGECHAN               = 0x20007434\n \tPPPIOCXFERUNIT                   = 0x2000744e\n \tPR_SET_PTRACER_ANY               = 0xffffffffffffffff\n+\tPTP_CLOCK_GETCAPS                = 0x40503d01\n+\tPTP_CLOCK_GETCAPS2               = 0x40503d0a\n+\tPTP_ENABLE_PPS                   = 0x80043d04\n+\tPTP_ENABLE_PPS2                  = 0x80043d0d\n+\tPTP_EXTTS_REQUEST                = 0x80103d02\n+\tPTP_EXTTS_REQUEST2               = 0x80103d0b\n+\tPTP_MASK_CLEAR_ALL               = 0x20003d13\n+\tPTP_MASK_EN_SINGLE               = 0x80043d14\n+\tPTP_PEROUT_REQUEST               = 0x80383d03\n+\tPTP_PEROUT_REQUEST2              = 0x80383d0c\n+\tPTP_PIN_SETFUNC                  = 0x80603d07\n+\tPTP_PIN_SETFUNC2                 = 0x80603d10\n+\tPTP_SYS_OFFSET                   = 0x83403d05\n+\tPTP_SYS_OFFSET2                  = 0x83403d0e\n \tPTRACE_GETFPAREGS                = 0x14\n \tPTRACE_GETFPREGS                 = 0xe\n \tPTRACE_GETFPREGS64               = 0x19"
    },
    {
      "sha": "5cc1e8eb2f35e097af432fd2273a2a73c1d35b36",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux.go",
      "status": "modified",
      "additions": 10,
      "deletions": 17,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_linux.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -592,6 +592,16 @@ func ClockGettime(clockid int32, time *Timespec) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func ClockSettime(clockid int32, time *Timespec) (err error) {\n+\t_, _, e1 := Syscall(SYS_CLOCK_SETTIME, uintptr(clockid), uintptr(unsafe.Pointer(time)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func ClockNanosleep(clockid int32, flags int, request *Timespec, remain *Timespec) (err error) {\n \t_, _, e1 := Syscall6(SYS_CLOCK_NANOSLEEP, uintptr(clockid), uintptr(flags), uintptr(unsafe.Pointer(request)), uintptr(unsafe.Pointer(remain)), 0, 0)\n \tif e1 != 0 {\n@@ -971,23 +981,6 @@ func Getpriority(which int, who int) (prio int, err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n-func Getrandom(buf []byte, flags int) (n int, err error) {\n-\tvar _p0 unsafe.Pointer\n-\tif len(buf) > 0 {\n-\t\t_p0 = unsafe.Pointer(&buf[0])\n-\t} else {\n-\t\t_p0 = unsafe.Pointer(&_zero)\n-\t}\n-\tr0, _, e1 := Syscall(SYS_GETRANDOM, uintptr(_p0), uintptr(len(buf)), uintptr(flags))\n-\tn = int(r0)\n-\tif e1 != 0 {\n-\t\terr = errnoErr(e1)\n-\t}\n-\treturn\n-}\n-\n-// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n-\n func Getrusage(who int, rusage *Rusage) (err error) {\n \t_, _, e1 := RawSyscall(SYS_GETRUSAGE, uintptr(who), uintptr(unsafe.Pointer(rusage)), 0)\n \tif e1 != 0 {"
    },
    {
      "sha": "f485dbf4565671fd01bc685d7de256cbbac0dee2",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_amd64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_amd64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -341,6 +341,7 @@ const (\n \tSYS_STATX                   = 332\n \tSYS_IO_PGETEVENTS           = 333\n \tSYS_RSEQ                    = 334\n+\tSYS_URETPROBE               = 335\n \tSYS_PIDFD_SEND_SIGNAL       = 424\n \tSYS_IO_URING_SETUP          = 425\n \tSYS_IO_URING_ENTER          = 426"
    },
    {
      "sha": "1893e2fe884044dc9724126bf8565ca9fca04748",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_arm64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_arm64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -85,7 +85,7 @@ const (\n \tSYS_SPLICE                  = 76\n \tSYS_TEE                     = 77\n \tSYS_READLINKAT              = 78\n-\tSYS_FSTATAT                 = 79\n+\tSYS_NEWFSTATAT              = 79\n \tSYS_FSTAT                   = 80\n \tSYS_SYNC                    = 81\n \tSYS_FSYNC                   = 82"
    },
    {
      "sha": "16a4017da0ab2fbb8868a34cf7e90df9b052577e",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_loong64.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_loong64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_loong64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_loong64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -84,6 +84,8 @@ const (\n \tSYS_SPLICE                  = 76\n \tSYS_TEE                     = 77\n \tSYS_READLINKAT              = 78\n+\tSYS_NEWFSTATAT              = 79\n+\tSYS_FSTAT                   = 80\n \tSYS_SYNC                    = 81\n \tSYS_FSYNC                   = 82\n \tSYS_FDATASYNC               = 83"
    },
    {
      "sha": "a5459e766f59dbfbd2751e1ecc5f7f1c4561bfb4",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_riscv64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_riscv64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_riscv64.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -84,7 +84,7 @@ const (\n \tSYS_SPLICE                  = 76\n \tSYS_TEE                     = 77\n \tSYS_READLINKAT              = 78\n-\tSYS_FSTATAT                 = 79\n+\tSYS_NEWFSTATAT              = 79\n \tSYS_FSTAT                   = 80\n \tSYS_SYNC                    = 81\n \tSYS_FSYNC                   = 82"
    },
    {
      "sha": "8daaf3faf4c7853867f3e5d0b45dda52380e1173",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux.go",
      "status": "modified",
      "additions": 172,
      "deletions": 36,
      "changes": 208,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -87,31 +87,35 @@ type StatxTimestamp struct {\n }\n \n type Statx_t struct {\n-\tMask             uint32\n-\tBlksize          uint32\n-\tAttributes       uint64\n-\tNlink            uint32\n-\tUid              uint32\n-\tGid              uint32\n-\tMode             uint16\n-\t_                [1]uint16\n-\tIno              uint64\n-\tSize             uint64\n-\tBlocks           uint64\n-\tAttributes_mask  uint64\n-\tAtime            StatxTimestamp\n-\tBtime            StatxTimestamp\n-\tCtime            StatxTimestamp\n-\tMtime            StatxTimestamp\n-\tRdev_major       uint32\n-\tRdev_minor       uint32\n-\tDev_major        uint32\n-\tDev_minor        uint32\n-\tMnt_id           uint64\n-\tDio_mem_align    uint32\n-\tDio_offset_align uint32\n-\tSubvol           uint64\n-\t_                [11]uint64\n+\tMask                      uint32\n+\tBlksize                   uint32\n+\tAttributes                uint64\n+\tNlink                     uint32\n+\tUid                       uint32\n+\tGid                       uint32\n+\tMode                      uint16\n+\t_                         [1]uint16\n+\tIno                       uint64\n+\tSize                      uint64\n+\tBlocks                    uint64\n+\tAttributes_mask           uint64\n+\tAtime                     StatxTimestamp\n+\tBtime                     StatxTimestamp\n+\tCtime                     StatxTimestamp\n+\tMtime                     StatxTimestamp\n+\tRdev_major                uint32\n+\tRdev_minor                uint32\n+\tDev_major                 uint32\n+\tDev_minor                 uint32\n+\tMnt_id                    uint64\n+\tDio_mem_align             uint32\n+\tDio_offset_align          uint32\n+\tSubvol                    uint64\n+\tAtomic_write_unit_min     uint32\n+\tAtomic_write_unit_max     uint32\n+\tAtomic_write_segments_max uint32\n+\t_                         [1]uint32\n+\t_                         [9]uint64\n }\n \n type Fsid struct {\n@@ -516,6 +520,29 @@ type TCPInfo struct {\n \tTotal_rto_time       uint32\n }\n \n+type TCPVegasInfo struct {\n+\tEnabled uint32\n+\tRttcnt  uint32\n+\tRtt     uint32\n+\tMinrtt  uint32\n+}\n+\n+type TCPDCTCPInfo struct {\n+\tEnabled  uint16\n+\tCe_state uint16\n+\tAlpha    uint32\n+\tAb_ecn   uint32\n+\tAb_tot   uint32\n+}\n+\n+type TCPBBRInfo struct {\n+\tBw_lo       uint32\n+\tBw_hi       uint32\n+\tMin_rtt     uint32\n+\tPacing_gain uint32\n+\tCwnd_gain   uint32\n+}\n+\n type CanFilter struct {\n \tId   uint32\n \tMask uint32\n@@ -557,6 +584,7 @@ const (\n \tSizeofICMPv6Filter      = 0x20\n \tSizeofUcred             = 0xc\n \tSizeofTCPInfo           = 0xf8\n+\tSizeofTCPCCInfo         = 0x14\n \tSizeofCanFilter         = 0x8\n \tSizeofTCPRepairOpt      = 0x8\n )\n@@ -1724,12 +1752,6 @@ const (\n \tIFLA_IPVLAN_UNSPEC                         = 0x0\n \tIFLA_IPVLAN_MODE                           = 0x1\n \tIFLA_IPVLAN_FLAGS                          = 0x2\n-\tNETKIT_NEXT                                = -0x1\n-\tNETKIT_PASS                                = 0x0\n-\tNETKIT_DROP                                = 0x2\n-\tNETKIT_REDIRECT                            = 0x7\n-\tNETKIT_L2                                  = 0x0\n-\tNETKIT_L3                                  = 0x1\n \tIFLA_NETKIT_UNSPEC                         = 0x0\n \tIFLA_NETKIT_PEER_INFO                      = 0x1\n \tIFLA_NETKIT_PRIMARY                        = 0x2\n@@ -1768,6 +1790,7 @@ const (\n \tIFLA_VXLAN_DF                              = 0x1d\n \tIFLA_VXLAN_VNIFILTER                       = 0x1e\n \tIFLA_VXLAN_LOCALBYPASS                     = 0x1f\n+\tIFLA_VXLAN_LABEL_POLICY                    = 0x20\n \tIFLA_GENEVE_UNSPEC                         = 0x0\n \tIFLA_GENEVE_ID                             = 0x1\n \tIFLA_GENEVE_REMOTE                         = 0x2\n@@ -1797,6 +1820,8 @@ const (\n \tIFLA_GTP_ROLE                              = 0x4\n \tIFLA_GTP_CREATE_SOCKETS                    = 0x5\n \tIFLA_GTP_RESTART_COUNT                     = 0x6\n+\tIFLA_GTP_LOCAL                             = 0x7\n+\tIFLA_GTP_LOCAL6                            = 0x8\n \tIFLA_BOND_UNSPEC                           = 0x0\n \tIFLA_BOND_MODE                             = 0x1\n \tIFLA_BOND_ACTIVE_SLAVE                     = 0x2\n@@ -1829,6 +1854,7 @@ const (\n \tIFLA_BOND_AD_LACP_ACTIVE                   = 0x1d\n \tIFLA_BOND_MISSED_MAX                       = 0x1e\n \tIFLA_BOND_NS_IP6_TARGET                    = 0x1f\n+\tIFLA_BOND_COUPLED_CONTROL                  = 0x20\n \tIFLA_BOND_AD_INFO_UNSPEC                   = 0x0\n \tIFLA_BOND_AD_INFO_AGGREGATOR               = 0x1\n \tIFLA_BOND_AD_INFO_NUM_PORTS                = 0x2\n@@ -1897,6 +1923,7 @@ const (\n \tIFLA_HSR_SEQ_NR                            = 0x5\n \tIFLA_HSR_VERSION                           = 0x6\n \tIFLA_HSR_PROTOCOL                          = 0x7\n+\tIFLA_HSR_INTERLINK                         = 0x8\n \tIFLA_STATS_UNSPEC                          = 0x0\n \tIFLA_STATS_LINK_64                         = 0x1\n \tIFLA_STATS_LINK_XSTATS                     = 0x2\n@@ -1949,6 +1976,15 @@ const (\n \tIFLA_DSA_MASTER                            = 0x1\n )\n \n+const (\n+\tNETKIT_NEXT     = -0x1\n+\tNETKIT_PASS     = 0x0\n+\tNETKIT_DROP     = 0x2\n+\tNETKIT_REDIRECT = 0x7\n+\tNETKIT_L2       = 0x0\n+\tNETKIT_L3       = 0x1\n+)\n+\n const (\n \tNF_INET_PRE_ROUTING  = 0x0\n \tNF_INET_LOCAL_IN     = 0x1\n@@ -3766,7 +3802,7 @@ const (\n \tETHTOOL_MSG_PSE_GET                       = 0x24\n \tETHTOOL_MSG_PSE_SET                       = 0x25\n \tETHTOOL_MSG_RSS_GET                       = 0x26\n-\tETHTOOL_MSG_USER_MAX                      = 0x2b\n+\tETHTOOL_MSG_USER_MAX                      = 0x2c\n \tETHTOOL_MSG_KERNEL_NONE                   = 0x0\n \tETHTOOL_MSG_STRSET_GET_REPLY              = 0x1\n \tETHTOOL_MSG_LINKINFO_GET_REPLY            = 0x2\n@@ -3806,7 +3842,7 @@ const (\n \tETHTOOL_MSG_MODULE_NTF                    = 0x24\n \tETHTOOL_MSG_PSE_GET_REPLY                 = 0x25\n \tETHTOOL_MSG_RSS_GET_REPLY                 = 0x26\n-\tETHTOOL_MSG_KERNEL_MAX                    = 0x2b\n+\tETHTOOL_MSG_KERNEL_MAX                    = 0x2c\n \tETHTOOL_FLAG_COMPACT_BITSETS              = 0x1\n \tETHTOOL_FLAG_OMIT_REPLY                   = 0x2\n \tETHTOOL_FLAG_STATS                        = 0x4\n@@ -3951,7 +3987,7 @@ const (\n \tETHTOOL_A_COALESCE_RATE_SAMPLE_INTERVAL   = 0x17\n \tETHTOOL_A_COALESCE_USE_CQE_MODE_TX        = 0x18\n \tETHTOOL_A_COALESCE_USE_CQE_MODE_RX        = 0x19\n-\tETHTOOL_A_COALESCE_MAX                    = 0x1c\n+\tETHTOOL_A_COALESCE_MAX                    = 0x1e\n \tETHTOOL_A_PAUSE_UNSPEC                    = 0x0\n \tETHTOOL_A_PAUSE_HEADER                    = 0x1\n \tETHTOOL_A_PAUSE_AUTONEG                   = 0x2\n@@ -4082,6 +4118,106 @@ type EthtoolDrvinfo struct {\n \tRegdump_len  uint32\n }\n \n+type EthtoolTsInfo struct {\n+\tCmd             uint32\n+\tSo_timestamping uint32\n+\tPhc_index       int32\n+\tTx_types        uint32\n+\tTx_reserved     [3]uint32\n+\tRx_filters      uint32\n+\tRx_reserved     [3]uint32\n+}\n+\n+type HwTstampConfig struct {\n+\tFlags     int32\n+\tTx_type   int32\n+\tRx_filter int32\n+}\n+\n+const (\n+\tHWTSTAMP_FILTER_NONE            = 0x0\n+\tHWTSTAMP_FILTER_ALL             = 0x1\n+\tHWTSTAMP_FILTER_SOME            = 0x2\n+\tHWTSTAMP_FILTER_PTP_V1_L4_EVENT = 0x3\n+\tHWTSTAMP_FILTER_PTP_V2_L4_EVENT = 0x6\n+\tHWTSTAMP_FILTER_PTP_V2_L2_EVENT = 0x9\n+\tHWTSTAMP_FILTER_PTP_V2_EVENT    = 0xc\n+)\n+\n+const (\n+\tHWTSTAMP_TX_OFF          = 0x0\n+\tHWTSTAMP_TX_ON           = 0x1\n+\tHWTSTAMP_TX_ONESTEP_SYNC = 0x2\n+)\n+\n+type (\n+\tPtpClockCaps struct {\n+\t\tMax_adj            int32\n+\t\tN_alarm            int32\n+\t\tN_ext_ts           int32\n+\t\tN_per_out          int32\n+\t\tPps                int32\n+\t\tN_pins             int32\n+\t\tCross_timestamping int32\n+\t\tAdjust_phase       int32\n+\t\tMax_phase_adj      int32\n+\t\tRsv                [11]int32\n+\t}\n+\tPtpClockTime struct {\n+\t\tSec      int64\n+\t\tNsec     uint32\n+\t\tReserved uint32\n+\t}\n+\tPtpExttsEvent struct {\n+\t\tT     PtpClockTime\n+\t\tIndex uint32\n+\t\tFlags uint32\n+\t\tRsv   [2]uint32\n+\t}\n+\tPtpExttsRequest struct {\n+\t\tIndex uint32\n+\t\tFlags uint32\n+\t\tRsv   [2]uint32\n+\t}\n+\tPtpPeroutRequest struct {\n+\t\tStartOrPhase PtpClockTime\n+\t\tPeriod       PtpClockTime\n+\t\tIndex        uint32\n+\t\tFlags        uint32\n+\t\tOn           PtpClockTime\n+\t}\n+\tPtpPinDesc struct {\n+\t\tName  [64]byte\n+\t\tIndex uint32\n+\t\tFunc  uint32\n+\t\tChan  uint32\n+\t\tRsv   [5]uint32\n+\t}\n+\tPtpSysOffset struct {\n+\t\tSamples uint32\n+\t\tRsv     [3]uint32\n+\t\tTs      [51]PtpClockTime\n+\t}\n+\tPtpSysOffsetExtended struct {\n+\t\tSamples uint32\n+\t\tRsv     [3]uint32\n+\t\tTs      [25][3]PtpClockTime\n+\t}\n+\tPtpSysOffsetPrecise struct {\n+\t\tDevice   PtpClockTime\n+\t\tRealtime PtpClockTime\n+\t\tMonoraw  PtpClockTime\n+\t\tRsv      [4]uint32\n+\t}\n+)\n+\n+const (\n+\tPTP_PF_NONE    = 0x0\n+\tPTP_PF_EXTTS   = 0x1\n+\tPTP_PF_PEROUT  = 0x2\n+\tPTP_PF_PHYSYNC = 0x3\n+)\n+\n type (\n \tHIDRawReportDescriptor struct {\n \t\tSize  uint32\n@@ -4609,7 +4745,7 @@ const (\n \tNL80211_ATTR_MAC_HINT                                   = 0xc8\n \tNL80211_ATTR_MAC_MASK                                   = 0xd7\n \tNL80211_ATTR_MAX_AP_ASSOC_STA                           = 0xca\n-\tNL80211_ATTR_MAX                                        = 0x14a\n+\tNL80211_ATTR_MAX                                        = 0x14c\n \tNL80211_ATTR_MAX_CRIT_PROT_DURATION                     = 0xb4\n \tNL80211_ATTR_MAX_CSA_COUNTERS                           = 0xce\n \tNL80211_ATTR_MAX_MATCH_SETS                             = 0x85\n@@ -5213,7 +5349,7 @@ const (\n \tNL80211_FREQUENCY_ATTR_GO_CONCURRENT                    = 0xf\n \tNL80211_FREQUENCY_ATTR_INDOOR_ONLY                      = 0xe\n \tNL80211_FREQUENCY_ATTR_IR_CONCURRENT                    = 0xf\n-\tNL80211_FREQUENCY_ATTR_MAX                              = 0x20\n+\tNL80211_FREQUENCY_ATTR_MAX                              = 0x21\n \tNL80211_FREQUENCY_ATTR_MAX_TX_POWER                     = 0x6\n \tNL80211_FREQUENCY_ATTR_NO_10MHZ                         = 0x11\n \tNL80211_FREQUENCY_ATTR_NO_160MHZ                        = 0xc"
    },
    {
      "sha": "2e5d5a44357a2e2ae04c8a406d8b89f0042968a9",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_zos_s390x.go",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_zos_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_zos_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_zos_s390x.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -377,6 +377,12 @@ type Flock_t struct {\n \tPid    int32\n }\n \n+type F_cnvrt struct {\n+\tCvtcmd int32\n+\tPccsid int16\n+\tFccsid int16\n+}\n+\n type Termios struct {\n \tCflag uint32\n \tIflag uint32"
    },
    {
      "sha": "4e613cf6335ceaaaf3075e177938ef11688461a4",
      "filename": "backend/vendor/golang.org/x/sys/windows/dll_windows.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fdll_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fdll_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fdll_windows.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -65,7 +65,7 @@ func LoadDLL(name string) (dll *DLL, err error) {\n \treturn d, nil\n }\n \n-// MustLoadDLL is like LoadDLL but panics if load operation failes.\n+// MustLoadDLL is like LoadDLL but panics if load operation fails.\n func MustLoadDLL(name string) *DLL {\n \td, e := LoadDLL(name)\n \tif e != nil {"
    },
    {
      "sha": "4510bfc3f5c66ac3590f72621562dfd95d4c00ad",
      "filename": "backend/vendor/golang.org/x/sys/windows/syscall_windows.go",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsyscall_windows.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -725,20 +725,12 @@ func DurationSinceBoot() time.Duration {\n }\n \n func Ftruncate(fd Handle, length int64) (err error) {\n-\tcuroffset, e := Seek(fd, 0, 1)\n-\tif e != nil {\n-\t\treturn e\n-\t}\n-\tdefer Seek(fd, curoffset, 0)\n-\t_, e = Seek(fd, length, 0)\n-\tif e != nil {\n-\t\treturn e\n+\ttype _FILE_END_OF_FILE_INFO struct {\n+\t\tEndOfFile int64\n \t}\n-\te = SetEndOfFile(fd)\n-\tif e != nil {\n-\t\treturn e\n-\t}\n-\treturn nil\n+\tvar info _FILE_END_OF_FILE_INFO\n+\tinfo.EndOfFile = length\n+\treturn SetFileInformationByHandle(fd, FileEndOfFileInfo, (*byte)(unsafe.Pointer(&info)), uint32(unsafe.Sizeof(info)))\n }\n \n func Gettimeofday(tv *Timeval) (err error) {\n@@ -894,6 +886,11 @@ const socket_error = uintptr(^uint32(0))\n //sys\tGetACP() (acp uint32) = kernel32.GetACP\n //sys\tMultiByteToWideChar(codePage uint32, dwFlags uint32, str *byte, nstr int32, wchar *uint16, nwchar int32) (nwrite int32, err error) = kernel32.MultiByteToWideChar\n //sys\tgetBestInterfaceEx(sockaddr unsafe.Pointer, pdwBestIfIndex *uint32) (errcode error) = iphlpapi.GetBestInterfaceEx\n+//sys   GetIfEntry2Ex(level uint32, row *MibIfRow2) (errcode error) = iphlpapi.GetIfEntry2Ex\n+//sys   GetUnicastIpAddressEntry(row *MibUnicastIpAddressRow) (errcode error) = iphlpapi.GetUnicastIpAddressEntry\n+//sys   NotifyIpInterfaceChange(family uint16, callback uintptr, callerContext unsafe.Pointer, initialNotification bool, notificationHandle *Handle) (errcode error) = iphlpapi.NotifyIpInterfaceChange\n+//sys   NotifyUnicastIpAddressChange(family uint16, callback uintptr, callerContext unsafe.Pointer, initialNotification bool, notificationHandle *Handle) (errcode error) = iphlpapi.NotifyUnicastIpAddressChange\n+//sys   CancelMibChangeNotify2(notificationHandle Handle) (errcode error) = iphlpapi.CancelMibChangeNotify2\n \n // For testing: clients can set this flag to force\n // creation of IPv6 sockets to return EAFNOSUPPORT.\n@@ -1685,13 +1682,16 @@ func (s NTStatus) Error() string {\n // do not use NTUnicodeString, and instead UTF16PtrFromString should be used for\n // the more common *uint16 string type.\n func NewNTUnicodeString(s string) (*NTUnicodeString, error) {\n-\tvar u NTUnicodeString\n-\ts16, err := UTF16PtrFromString(s)\n+\ts16, err := UTF16FromString(s)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\tRtlInitUnicodeString(&u, s16)\n-\treturn &u, nil\n+\tn := uint16(len(s16) * 2)\n+\treturn &NTUnicodeString{\n+\t\tLength:        n - 2, // subtract 2 bytes for the NULL terminator\n+\t\tMaximumLength: n,\n+\t\tBuffer:        &s16[0],\n+\t}, nil\n }\n \n // Slice returns a uint16 slice that aliases the data in the NTUnicodeString."
    },
    {
      "sha": "51311e205ff00c51ccd0193d77cfa0b0b58971ac",
      "filename": "backend/vendor/golang.org/x/sys/windows/types_windows.go",
      "status": "modified",
      "additions": 126,
      "deletions": 0,
      "changes": 126,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Ftypes_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Ftypes_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Ftypes_windows.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -2203,6 +2203,132 @@ const (\n \tIfOperStatusLowerLayerDown = 7\n )\n \n+const (\n+\tIF_MAX_PHYS_ADDRESS_LENGTH = 32\n+\tIF_MAX_STRING_SIZE         = 256\n+)\n+\n+// MIB_IF_ENTRY_LEVEL enumeration from netioapi.h or\n+// https://learn.microsoft.com/en-us/windows/win32/api/netioapi/nf-netioapi-getifentry2ex.\n+const (\n+\tMibIfEntryNormal                  = 0\n+\tMibIfEntryNormalWithoutStatistics = 2\n+)\n+\n+// MIB_NOTIFICATION_TYPE enumeration from netioapi.h or\n+// https://learn.microsoft.com/en-us/windows/win32/api/netioapi/ne-netioapi-mib_notification_type.\n+const (\n+\tMibParameterNotification = 0\n+\tMibAddInstance           = 1\n+\tMibDeleteInstance        = 2\n+\tMibInitialNotification   = 3\n+)\n+\n+// MibIfRow2 stores information about a particular interface. See\n+// https://learn.microsoft.com/en-us/windows/win32/api/netioapi/ns-netioapi-mib_if_row2.\n+type MibIfRow2 struct {\n+\tInterfaceLuid               uint64\n+\tInterfaceIndex              uint32\n+\tInterfaceGuid               GUID\n+\tAlias                       [IF_MAX_STRING_SIZE + 1]uint16\n+\tDescription                 [IF_MAX_STRING_SIZE + 1]uint16\n+\tPhysicalAddressLength       uint32\n+\tPhysicalAddress             [IF_MAX_PHYS_ADDRESS_LENGTH]uint8\n+\tPermanentPhysicalAddress    [IF_MAX_PHYS_ADDRESS_LENGTH]uint8\n+\tMtu                         uint32\n+\tType                        uint32\n+\tTunnelType                  uint32\n+\tMediaType                   uint32\n+\tPhysicalMediumType          uint32\n+\tAccessType                  uint32\n+\tDirectionType               uint32\n+\tInterfaceAndOperStatusFlags uint8\n+\tOperStatus                  uint32\n+\tAdminStatus                 uint32\n+\tMediaConnectState           uint32\n+\tNetworkGuid                 GUID\n+\tConnectionType              uint32\n+\tTransmitLinkSpeed           uint64\n+\tReceiveLinkSpeed            uint64\n+\tInOctets                    uint64\n+\tInUcastPkts                 uint64\n+\tInNUcastPkts                uint64\n+\tInDiscards                  uint64\n+\tInErrors                    uint64\n+\tInUnknownProtos             uint64\n+\tInUcastOctets               uint64\n+\tInMulticastOctets           uint64\n+\tInBroadcastOctets           uint64\n+\tOutOctets                   uint64\n+\tOutUcastPkts                uint64\n+\tOutNUcastPkts               uint64\n+\tOutDiscards                 uint64\n+\tOutErrors                   uint64\n+\tOutUcastOctets              uint64\n+\tOutMulticastOctets          uint64\n+\tOutBroadcastOctets          uint64\n+\tOutQLen                     uint64\n+}\n+\n+// MIB_UNICASTIPADDRESS_ROW stores information about a unicast IP address. See\n+// https://learn.microsoft.com/en-us/windows/win32/api/netioapi/ns-netioapi-mib_unicastipaddress_row.\n+type MibUnicastIpAddressRow struct {\n+\tAddress            RawSockaddrInet6 // SOCKADDR_INET union\n+\tInterfaceLuid      uint64\n+\tInterfaceIndex     uint32\n+\tPrefixOrigin       uint32\n+\tSuffixOrigin       uint32\n+\tValidLifetime      uint32\n+\tPreferredLifetime  uint32\n+\tOnLinkPrefixLength uint8\n+\tSkipAsSource       uint8\n+\tDadState           uint32\n+\tScopeId            uint32\n+\tCreationTimeStamp  Filetime\n+}\n+\n+const ScopeLevelCount = 16\n+\n+// MIB_IPINTERFACE_ROW stores interface management information for a particular IP address family on a network interface.\n+// See https://learn.microsoft.com/en-us/windows/win32/api/netioapi/ns-netioapi-mib_ipinterface_row.\n+type MibIpInterfaceRow struct {\n+\tFamily                               uint16\n+\tInterfaceLuid                        uint64\n+\tInterfaceIndex                       uint32\n+\tMaxReassemblySize                    uint32\n+\tInterfaceIdentifier                  uint64\n+\tMinRouterAdvertisementInterval       uint32\n+\tMaxRouterAdvertisementInterval       uint32\n+\tAdvertisingEnabled                   uint8\n+\tForwardingEnabled                    uint8\n+\tWeakHostSend                         uint8\n+\tWeakHostReceive                      uint8\n+\tUseAutomaticMetric                   uint8\n+\tUseNeighborUnreachabilityDetection   uint8\n+\tManagedAddressConfigurationSupported uint8\n+\tOtherStatefulConfigurationSupported  uint8\n+\tAdvertiseDefaultRoute                uint8\n+\tRouterDiscoveryBehavior              uint32\n+\tDadTransmits                         uint32\n+\tBaseReachableTime                    uint32\n+\tRetransmitTime                       uint32\n+\tPathMtuDiscoveryTimeout              uint32\n+\tLinkLocalAddressBehavior             uint32\n+\tLinkLocalAddressTimeout              uint32\n+\tZoneIndices                          [ScopeLevelCount]uint32\n+\tSitePrefixLength                     uint32\n+\tMetric                               uint32\n+\tNlMtu                                uint32\n+\tConnected                            uint8\n+\tSupportsWakeUpPatterns               uint8\n+\tSupportsNeighborDiscovery            uint8\n+\tSupportsRouterDiscovery              uint8\n+\tReachableTime                        uint32\n+\tTransmitOffload                      uint32\n+\tReceiveOffload                       uint32\n+\tDisableDefaultRoutes                 uint8\n+}\n+\n // Console related constants used for the mode parameter to SetConsoleMode. See\n // https://docs.microsoft.com/en-us/windows/console/setconsolemode for details.\n "
    },
    {
      "sha": "6f5252880ceed90acdca149a1ec0dbc10cff8cd7",
      "filename": "backend/vendor/golang.org/x/sys/windows/zsyscall_windows.go",
      "status": "modified",
      "additions": 53,
      "deletions": 0,
      "changes": 53,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fzsyscall_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fzsyscall_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fzsyscall_windows.go?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -181,10 +181,15 @@ var (\n \tprocDnsRecordListFree                                    = moddnsapi.NewProc(\"DnsRecordListFree\")\n \tprocDwmGetWindowAttribute                                = moddwmapi.NewProc(\"DwmGetWindowAttribute\")\n \tprocDwmSetWindowAttribute                                = moddwmapi.NewProc(\"DwmSetWindowAttribute\")\n+\tprocCancelMibChangeNotify2                               = modiphlpapi.NewProc(\"CancelMibChangeNotify2\")\n \tprocGetAdaptersAddresses                                 = modiphlpapi.NewProc(\"GetAdaptersAddresses\")\n \tprocGetAdaptersInfo                                      = modiphlpapi.NewProc(\"GetAdaptersInfo\")\n \tprocGetBestInterfaceEx                                   = modiphlpapi.NewProc(\"GetBestInterfaceEx\")\n \tprocGetIfEntry                                           = modiphlpapi.NewProc(\"GetIfEntry\")\n+\tprocGetIfEntry2Ex                                        = modiphlpapi.NewProc(\"GetIfEntry2Ex\")\n+\tprocGetUnicastIpAddressEntry                             = modiphlpapi.NewProc(\"GetUnicastIpAddressEntry\")\n+\tprocNotifyIpInterfaceChange                              = modiphlpapi.NewProc(\"NotifyIpInterfaceChange\")\n+\tprocNotifyUnicastIpAddressChange                         = modiphlpapi.NewProc(\"NotifyUnicastIpAddressChange\")\n \tprocAddDllDirectory                                      = modkernel32.NewProc(\"AddDllDirectory\")\n \tprocAssignProcessToJobObject                             = modkernel32.NewProc(\"AssignProcessToJobObject\")\n \tprocCancelIo                                             = modkernel32.NewProc(\"CancelIo\")\n@@ -1606,6 +1611,14 @@ func DwmSetWindowAttribute(hwnd HWND, attribute uint32, value unsafe.Pointer, si\n \treturn\n }\n \n+func CancelMibChangeNotify2(notificationHandle Handle) (errcode error) {\n+\tr0, _, _ := syscall.SyscallN(procCancelMibChangeNotify2.Addr(), uintptr(notificationHandle))\n+\tif r0 != 0 {\n+\t\terrcode = syscall.Errno(r0)\n+\t}\n+\treturn\n+}\n+\n func GetAdaptersAddresses(family uint32, flags uint32, reserved uintptr, adapterAddresses *IpAdapterAddresses, sizePointer *uint32) (errcode error) {\n \tr0, _, _ := syscall.Syscall6(procGetAdaptersAddresses.Addr(), 5, uintptr(family), uintptr(flags), uintptr(reserved), uintptr(unsafe.Pointer(adapterAddresses)), uintptr(unsafe.Pointer(sizePointer)), 0)\n \tif r0 != 0 {\n@@ -1638,6 +1651,46 @@ func GetIfEntry(pIfRow *MibIfRow) (errcode error) {\n \treturn\n }\n \n+func GetIfEntry2Ex(level uint32, row *MibIfRow2) (errcode error) {\n+\tr0, _, _ := syscall.SyscallN(procGetIfEntry2Ex.Addr(), uintptr(level), uintptr(unsafe.Pointer(row)))\n+\tif r0 != 0 {\n+\t\terrcode = syscall.Errno(r0)\n+\t}\n+\treturn\n+}\n+\n+func GetUnicastIpAddressEntry(row *MibUnicastIpAddressRow) (errcode error) {\n+\tr0, _, _ := syscall.SyscallN(procGetUnicastIpAddressEntry.Addr(), uintptr(unsafe.Pointer(row)))\n+\tif r0 != 0 {\n+\t\terrcode = syscall.Errno(r0)\n+\t}\n+\treturn\n+}\n+\n+func NotifyIpInterfaceChange(family uint16, callback uintptr, callerContext unsafe.Pointer, initialNotification bool, notificationHandle *Handle) (errcode error) {\n+\tvar _p0 uint32\n+\tif initialNotification {\n+\t\t_p0 = 1\n+\t}\n+\tr0, _, _ := syscall.SyscallN(procNotifyIpInterfaceChange.Addr(), uintptr(family), uintptr(callback), uintptr(callerContext), uintptr(_p0), uintptr(unsafe.Pointer(notificationHandle)))\n+\tif r0 != 0 {\n+\t\terrcode = syscall.Errno(r0)\n+\t}\n+\treturn\n+}\n+\n+func NotifyUnicastIpAddressChange(family uint16, callback uintptr, callerContext unsafe.Pointer, initialNotification bool, notificationHandle *Handle) (errcode error) {\n+\tvar _p0 uint32\n+\tif initialNotification {\n+\t\t_p0 = 1\n+\t}\n+\tr0, _, _ := syscall.SyscallN(procNotifyUnicastIpAddressChange.Addr(), uintptr(family), uintptr(callback), uintptr(callerContext), uintptr(_p0), uintptr(unsafe.Pointer(notificationHandle)))\n+\tif r0 != 0 {\n+\t\terrcode = syscall.Errno(r0)\n+\t}\n+\treturn\n+}\n+\n func AddDllDirectory(path *uint16) (cookie uintptr, err error) {\n \tr0, _, e1 := syscall.Syscall(procAddDllDirectory.Addr(), 1, uintptr(unsafe.Pointer(path)), 0, 0)\n \tcookie = uintptr(r0)"
    },
    {
      "sha": "94b4750f5a51b0218274cb0a42b55015ff7ed6e8",
      "filename": "backend/vendor/modules.txt",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fmodules.txt",
      "raw_url": "https://github.com/umputun/remark42/raw/9628312b5ddb2c7c62cc11166bfa41cf23f50862/backend%2Fvendor%2Fmodules.txt",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fmodules.txt?ref=9628312b5ddb2c7c62cc11166bfa41cf23f50862",
      "patch": "@@ -191,9 +191,10 @@ github.com/slack-go/slack/internal/backoff\n github.com/slack-go/slack/internal/errorsx\n github.com/slack-go/slack/internal/timex\n github.com/slack-go/slack/slackutilsx\n-# github.com/stretchr/testify v1.9.0\n+# github.com/stretchr/testify v1.10.0\n ## explicit; go 1.17\n github.com/stretchr/testify/assert\n+github.com/stretchr/testify/assert/yaml\n github.com/stretchr/testify/require\n # github.com/xdg-go/pbkdf2 v1.0.0\n ## explicit; go 1.9\n@@ -264,7 +265,7 @@ go.mongodb.org/mongo-driver/x/mongo/driver/wiremessage\n ## explicit; go 1.20\n go.uber.org/goleak\n go.uber.org/goleak/internal/stack\n-# golang.org/x/crypto v0.27.0\n+# golang.org/x/crypto v0.29.0\n ## explicit; go 1.20\n golang.org/x/crypto/acme\n golang.org/x/crypto/acme/autocert\n@@ -275,7 +276,7 @@ golang.org/x/crypto/scrypt\n ## explicit; go 1.18\n golang.org/x/image/draw\n golang.org/x/image/math/f64\n-# golang.org/x/net v0.29.0\n+# golang.org/x/net v0.31.0\n ## explicit; go 1.18\n golang.org/x/net/html\n golang.org/x/net/html/atom\n@@ -301,7 +302,7 @@ golang.org/x/oauth2/yandex\n ## explicit; go 1.18\n golang.org/x/sync/errgroup\n golang.org/x/sync/singleflight\n-# golang.org/x/sys v0.25.0\n+# golang.org/x/sys v0.27.0\n ## explicit; go 1.18\n golang.org/x/sys/unix\n golang.org/x/sys/windows"
    }
  ]
}
