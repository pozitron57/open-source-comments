{
  "sha": "a084c5009530f67d6b1514cc343d44a4c296bc4b",
  "node_id": "C_kwDOCQOkhNoAKGEwODRjNTAwOTUzMGY2N2Q2YjE1MTRjYzM0M2Q0NGE0YzI5NmJjNGI",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-01-28T05:32:24Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-01-28T05:33:03Z"
    },
    "message": "refactor(transfer): normalize transfer payload parameter name",
    "tree": {
      "sha": "8bef21f2d86dee188371cd9d5d617f23c972dbbd",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/8bef21f2d86dee188371cd9d5d617f23c972dbbd"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/a084c5009530f67d6b1514cc343d44a4c296bc4b",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZbXnDwAKCRDUbg8O6nwT\nap7hAQCpd0FaTr8r8BC3Uw9+uD1YRO3ZAhy05EEQAgbV45OE5AEAt1s6w1udCQzg\nW33CLLvcCRVmsXBUFxSug9xDm+TILQM=\n=p7Bh\n-----END PGP SIGNATURE-----",
      "payload": "tree 8bef21f2d86dee188371cd9d5d617f23c972dbbd\nparent 9dacd0954d23597fb257f794571db3e5e5025ec8\nauthor qwqcode <qwqcode@gmail.com> 1706419944 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1706419983 +0800\n\nrefactor(transfer): normalize transfer payload parameter name\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/a084c5009530f67d6b1514cc343d44a4c296bc4b",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/a084c5009530f67d6b1514cc343d44a4c296bc4b",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/a084c5009530f67d6b1514cc343d44a4c296bc4b/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9dacd0954d23597fb257f794571db3e5e5025ec8",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/9dacd0954d23597fb257f794571db3e5e5025ec8",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/9dacd0954d23597fb257f794571db3e5e5025ec8"
    }
  ],
  "stats": {
    "total": 99,
    "additions": 59,
    "deletions": 40
  },
  "files": [
    {
      "sha": "6a076c28f7d0b0476177f8c8979bdca9d873015f",
      "filename": "docs/docs/guide/transfer.md",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/a084c5009530f67d6b1514cc343d44a4c296bc4b/docs%2Fdocs%2Fguide%2Ftransfer.md",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/a084c5009530f67d6b1514cc343d44a4c296bc4b/docs%2Fdocs%2Fguide%2Ftransfer.md",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/docs%2Fdocs%2Fguide%2Ftransfer.md?ref=a084c5009530f67d6b1514cc343d44a4c296bc4b",
      "patch": "@@ -165,15 +165,15 @@ typecho-20220424-202246.artrans\n 参数格式遵循 `<key>:<value>`，例如：\n \n ```bash\n-./artalk import 类型 t_name:\"Site\" t_url:\"https://xx.com\" json_file:\"文件路径\"\n+./artalk import 类型 target_site_name:\"Site\" target_site_url:\"https://xx.com\" json_file:\"文件路径\"\n ```\n \n 前端的导入同样可以手动输入启动参数，例如：\n \n ```json\n {\n-  \"t_name\": \"Site\",\n-  \"t_url\": \"https://xx.com\",\n+  \"target_site_name\": \"Site\",\n+  \"target_site_url\": \"https://xx.com\",\n   \"json_file\": \"服务器上的文件路径\"\n }\n ```\n@@ -182,10 +182,12 @@ Artalk 导入功能的通用启动参数：\n \n |   参数   | 类型   | 说明         |\n | :------: | ------ | ------------ |\n-| `t_name` | String | 导入站点名称 |\n-| `t_url`  | String | 导入站点 URL |\n+| `target_site_name` | String | 导入站点名称 |\n+| `target_site_url`  | String | 导入站点 URL |\n+| `url_resolver`     | Boolean | 默认关闭，URL 解析器。将 `page_key` 基于 `target_site_url` 参数重新生成为完整 URL 作为评论的新 `page_key` |\n | `json_file`  | String | JSON 数据文件路径 |\n | `json_data`  | String | JSON 数据字符串内容 |\n+| `assumeyes`  | Boolean | 不提确认 `y/n`，直接执行 |\n \n ## 数据备份\n "
    },
    {
      "sha": "fa536af4c4d97bd013452588a87419e8b66bf708",
      "filename": "i18n/zh-CN.yml",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/a084c5009530f67d6b1514cc343d44a4c296bc4b/i18n%2Fzh-CN.yml",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/a084c5009530f67d6b1514cc343d44a4c296bc4b/i18n%2Fzh-CN.yml",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/i18n%2Fzh-CN.yml?ref=a084c5009530f67d6b1514cc343d44a4c296bc4b",
      "patch": "@@ -66,10 +66,10 @@\n \"Wrong captcha\": 验证码错误\n \"{{count}} items imported\": 已导入 {{count}} 个项目\n \"{{done}} of {{total}} done\": 已完成 {{done}} 共 {{total}} 个\n-\"{{name}} already exists\": '{{name}}已存在'\n-\"{{name}} cannot be empty\": '{{name}}不能为空'\n-\"{{name}} creation failed\": '{{name}}创建失败'\n-\"{{name}} deletion failed\": '{{name}}删除失败'\n-\"{{name}} is required\": '{{name}}必须填写'\n-\"{{name}} not found\": '{{name}}未找到'\n-\"{{name}} save failed\": '{{name}}保存失败'\n+\"{{name}} already exists\": '{{name}} 已存在'\n+\"{{name}} cannot be empty\": '{{name}} 不能为空'\n+\"{{name}} creation failed\": '{{name}} 创建失败'\n+\"{{name}} deletion failed\": '{{name}} 删除失败'\n+\"{{name}} is required\": '{{name}} 必须填写'\n+\"{{name}} not found\": '{{name}} 未找到'\n+\"{{name}} save failed\": '{{name}} 保存失败'"
    },
    {
      "sha": "0347c076d132d947cfdbbf939a6ab61655582d29",
      "filename": "internal/artransfer/base.go",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/a084c5009530f67d6b1514cc343d44a4c296bc4b/internal%2Fartransfer%2Fbase.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/a084c5009530f67d6b1514cc343d44a4c296bc4b/internal%2Fartransfer%2Fbase.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fartransfer%2Fbase.go?ref=a084c5009530f67d6b1514cc343d44a4c296bc4b",
      "patch": "@@ -50,12 +50,12 @@ func ArrToImportParams(arr []string) *ImportParams {\n \tparams.UrlResolver = false // 默认关闭\n \n \tgetParamsFrom(arr).To(map[string]any{\n-\t\t\"t_name\":         &params.TargetSiteName,\n-\t\t\"t_url\":          &params.TargetSiteUrl,\n-\t\t\"t_url_resolver\": &params.UrlResolver,\n-\t\t\"json_file\":      &params.JsonFile,\n-\t\t\"json_data\":      &params.JsonData,\n-\t\t\"assumeyes\":      &params.Assumeyes,\n+\t\t\"target_site_name\": &params.TargetSiteName,\n+\t\t\"target_site_url\":  &params.TargetSiteUrl,\n+\t\t\"url_resolver\":     &params.UrlResolver,\n+\t\t\"json_file\":        &params.JsonFile,\n+\t\t\"json_data\":        &params.JsonData,\n+\t\t\"assumeyes\":        &params.Assumeyes,\n \t})\n \n \treturn &params"
    },
    {
      "sha": "2ca7e1e18cf0b12f910dc3ca766821f7d7c3762f",
      "filename": "internal/artransfer/importer.go",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/a084c5009530f67d6b1514cc343d44a4c296bc4b/internal%2Fartransfer%2Fimporter.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/a084c5009530f67d6b1514cc343d44a4c296bc4b/internal%2Fartransfer%2Fimporter.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fartransfer%2Fimporter.go?ref=a084c5009530f67d6b1514cc343d44a4c296bc4b",
      "patch": "@@ -15,12 +15,12 @@ import (\n )\n \n type ImportParams struct {\n-\tTargetSiteName string `json:\"target_site_name\" validate:\"optional\"`    // The target site name\n-\tTargetSiteUrl  string `json:\"target_site_url\" validate:\"optional\"`     // The target site url\n-\tUrlResolver    bool   `json:\"url_resolver\" validate:\"optional\"`        // Enable URL resolver\n-\tJsonFile       string `json:\"json_file,omitempty\" validate:\"optional\"` // The JSON file path\n-\tJsonData       string `json:\"json_data,omitempty\" validate:\"optional\"` // The JSON data\n-\tAssumeyes      bool   `json:\"assumeyes\" validate:\"optional\"`           // Automatically answer yes for all questions.\n+\tTargetSiteName string `json:\"target_site_name\" form:\"target_site_name\" validate:\"optional\"` // The target site name\n+\tTargetSiteUrl  string `json:\"target_site_url\" form:\"target_site_url\" validate:\"optional\"`   // The target site url\n+\tUrlResolver    bool   `json:\"url_resolver\" form:\"url_resolver\" validate:\"optional\"`         // Enable URL resolver\n+\tJsonFile       string `json:\"json_file,omitempty\" form:\"json_file\" validate:\"optional\"`     // The JSON file path\n+\tJsonData       string `json:\"json_data,omitempty\" form:\"json_data\" validate:\"optional\"`     // The JSON data\n+\tAssumeyes      bool   `json:\"assumeyes\" form:\"assumeyes\" validate:\"optional\"`               // Automatically answer yes for all questions.\n }\n \n func importArtrans(dao *dao.Dao, params *ImportParams, comments []*entity.Artran) {\n@@ -126,6 +126,10 @@ func importArtrans(dao *dao.Dao, params *ImportParams, comments []*entity.Artran\n \t\tnPageKey := c.PageKey\n \t\tif params.UrlResolver { // 使用 URL 解析器\n \t\t\tsplittedURLs := utils.SplitAndTrimSpace(params.TargetSiteUrl, \",\")\n+\t\t\tif len(splittedURLs) == 0 {\n+\t\t\t\tlogFatal(\"[URL Resolver] \" + i18n.T(\"{{name}} cannot be empty\", map[string]interface{}{\"name\": i18n.T(\"Target Site\") + \" \" + \"URL\"}))\n+\t\t\t\treturn\n+\t\t\t}\n \t\t\tnPageKey = urlResolverGetPageKey(splittedURLs[0], c.PageKey)\n \t\t}\n "
    },
    {
      "sha": "7ac88cac3fad98c61d2993cb15892b59d4389b3e",
      "filename": "ui/artalk-sidebar/src/components/FileUploader.vue",
      "status": "modified",
      "additions": 13,
      "deletions": 7,
      "changes": 20,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/a084c5009530f67d6b1514cc343d44a4c296bc4b/ui%2Fartalk-sidebar%2Fsrc%2Fcomponents%2FFileUploader.vue",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/a084c5009530f67d6b1514cc343d44a4c296bc4b/ui%2Fartalk-sidebar%2Fsrc%2Fcomponents%2FFileUploader.vue",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk-sidebar%2Fsrc%2Fcomponents%2FFileUploader.vue?ref=a084c5009530f67d6b1514cc343d44a4c296bc4b",
      "patch": "@@ -64,11 +64,17 @@ async function startUploadFile(file: File) {\n     const setErr = (msg: string): void => {\n       reset()\n       isUploading.value = false\n-      alert(`文件上传失败，${msg}`)\n+      alert(`File upload failed: ${msg}`)\n     }\n \n-    if (xhr?.status !== 200) {\n-      setErr(`响应状态码：${xhr?.status}`)\n+    if (!xhr) {\n+      setErr('xhr instance is null')\n+      return\n+    }\n+\n+    const ok = (xhr.status >= 200) && (xhr.status <= 299)\n+    if (!ok) {\n+      setErr(`Response HTTP Code: ${xhr.status}, Body: ${xhr.response}`)\n       return\n     }\n \n@@ -77,17 +83,17 @@ async function startUploadFile(file: File) {\n       json = JSON.parse(xhr.response)\n     } catch (err) {\n       console.error(err)\n-      setErr(`JSON 解析失败：${err}`)\n+      setErr(`JSON parse error: ${err}`)\n       return\n     }\n \n-    if (!json.success || !json.data.filename) {\n-      setErr(`响应：${xhr.response}`)\n+    if (!json.filename) {\n+      setErr(`Response filename is empty: ${xhr.response}`)\n       return\n     }\n \n     isDone.value = true\n-    remoteFilename.value = json.data.filename\n+    remoteFilename.value = json.filename\n     isUploading.value = false\n     emit('done', remoteFilename.value)\n   }"
    },
    {
      "sha": "6a56a719d378aaf6dfadb95923a6129809b3a634",
      "filename": "ui/artalk-sidebar/src/components/LogTerminal.vue",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/a084c5009530f67d6b1514cc343d44a4c296bc4b/ui%2Fartalk-sidebar%2Fsrc%2Fcomponents%2FLogTerminal.vue",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/a084c5009530f67d6b1514cc343d44a4c296bc4b/ui%2Fartalk-sidebar%2Fsrc%2Fcomponents%2FLogTerminal.vue",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk-sidebar%2Fsrc%2Fcomponents%2FLogTerminal.vue?ref=a084c5009530f67d6b1514cc343d44a4c296bc4b",
      "patch": "@@ -1,4 +1,6 @@\n <script setup lang=\"ts\">\n+import { useNavStore } from '@/stores/nav'\n+\n const props = defineProps<{\n   apiUrl: string\n   reqParams: { [k: string]: string }\n@@ -18,6 +20,11 @@ onMounted(() => {\n   $frame.name = frameName\n   logWrapEl.value!.append($frame)\n \n+  // on iframe done\n+  $frame.onload = () => {\n+    useNavStore().refreshSites()\n+  }\n+\n   // 创建临时表单，初始化 iframe\n   const $formTmp = document.createElement('form')\n   $formTmp.style.display = 'none'"
    },
    {
      "sha": "da657bb144967803a476d8367d4d62ff1f053bdc",
      "filename": "ui/artalk-sidebar/src/pages/transfer.vue",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/a084c5009530f67d6b1514cc343d44a4c296bc4b/ui%2Fartalk-sidebar%2Fsrc%2Fpages%2Ftransfer.vue",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/a084c5009530f67d6b1514cc343d44a4c296bc4b/ui%2Fartalk-sidebar%2Fsrc%2Fpages%2Ftransfer.vue",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk-sidebar%2Fsrc%2Fpages%2Ftransfer.vue?ref=a084c5009530f67d6b1514cc343d44a4c296bc4b",
      "patch": "@@ -23,7 +23,7 @@ const importTaskApiURL = ref('')\n const uploadedFilename = ref('')\n \n const importTaskStarted = ref(false)\n-const importTaskParams = ref<{[k:string]:string}>({})\n+const importTaskParams = ref<Record<string, string>>({})\n \n const exportTaskStarted = ref(false)\n \n@@ -39,8 +39,8 @@ onMounted(() => {\n     }\n   })\n \n-  uploadApiURL.value = `${artalk?.ctx.conf.server}/api/admin/import-upload`\n-  importTaskApiURL.value = `${artalk?.ctx.conf.server}/api/admin/import`\n+  uploadApiURL.value = `${artalk?.ctx.conf.server}/api/v2/transfer/upload`\n+  importTaskApiURL.value = `${artalk?.ctx.conf.server}/api/v2/transfer/import`\n })\n \n function setError(msg: string) {\n@@ -53,7 +53,7 @@ function fileUploaded(filename: string) {\n \n function startImportTask() {\n   if (!uploadedFilename.value) {\n-    setError(`请先上传 Artrans 数据文件`)\n+    setError(`Please upload a data file first`)\n     return\n   }\n \n@@ -69,22 +69,22 @@ function startImportTask() {\n     try {\n       rData = JSON.parse(payload)\n     } catch (err) {\n-      setError(`Payload JSON 格式有误：${String(err)}`)\n+      setError(`Payload JSON invalid: ${err}`)\n       return\n     }\n \n     if (typeof rData !== 'object' || Array.isArray(rData)) {\n-      setError(`Payload 需为 JSON 对象`)\n+      setError(`Payload should be an object`)\n       return\n     }\n   }\n-  if (siteName) rData.t_name = siteName\n-  if (siteURL) rData.t_url = siteURL\n+  if (siteName) rData.target_site_name = siteName\n+  if (siteURL) rData.target_site_url = siteURL\n   rData.json_file = uploadedFilename.value\n \n   // 创建导入会话\n   importTaskParams.value = {\n-    payload: JSON.stringify(rData),\n+    ...rData,\n     token: user.token,\n   }\n   importTaskStarted.value = true"
    }
  ]
}
