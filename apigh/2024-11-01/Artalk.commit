{
  "sha": "c2b9afa1a18857712493960d03faa26ed86b8b7e",
  "node_id": "C_kwDOCQOkhNoAKGMyYjlhZmExYTE4ODU3NzEyNDkzOTYwZDAzZmFhMjZlZDg2YjhiN2U",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-10-22T03:23:35Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-10-22T03:23:35Z"
    },
    "message": "feat(plugins): add plugin registry fetch script\n\n- Introduce `fetch-registry.mjs` to download `registry.json` from `ArtalkJS/Community` repo for the latest release\n- Update `build:docs` script to include registry fetch",
    "tree": {
      "sha": "20c33ba1e33ac8607710f0c8fd841825c1e94ad4",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/20c33ba1e33ac8607710f0c8fd841825c1e94ad4"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/c2b9afa1a18857712493960d03faa26ed86b8b7e",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZxcbCAAKCRDUbg8O6nwT\nagYRAQC0+0CLewabnqzGPkZx0IOBUtrLOLafKPcYuAe5gygSPwD+Nl7tna8Ovir9\n2QTCrKKBq7PDO3x1mGz5LqYfye7pXAY=\n=Sd9w\n-----END PGP SIGNATURE-----",
      "payload": "tree 20c33ba1e33ac8607710f0c8fd841825c1e94ad4\nparent 258dfde60e5490a570da440a6ac2dfb2b0f38171\nauthor qwqcode <qwqcode@gmail.com> 1729567415 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1729567415 +0800\n\nfeat(plugins): add plugin registry fetch script\n\n- Introduce `fetch-registry.mjs` to download `registry.json` from `ArtalkJS/Community` repo for the latest release\n- Update `build:docs` script to include registry fetch\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/c2b9afa1a18857712493960d03faa26ed86b8b7e",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/c2b9afa1a18857712493960d03faa26ed86b8b7e",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/c2b9afa1a18857712493960d03faa26ed86b8b7e/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "258dfde60e5490a570da440a6ac2dfb2b0f38171",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/258dfde60e5490a570da440a6ac2dfb2b0f38171",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/258dfde60e5490a570da440a6ac2dfb2b0f38171"
    }
  ],
  "stats": {
    "total": 98,
    "additions": 96,
    "deletions": 2
  },
  "files": [
    {
      "sha": "4c30087cef9b4fe9aa7160a49ab3b3cbbe54cfda",
      "filename": ".gitignore",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/c2b9afa1a18857712493960d03faa26ed86b8b7e/.gitignore",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/c2b9afa1a18857712493960d03faa26ed86b8b7e/.gitignore",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/.gitignore?ref=c2b9afa1a18857712493960d03faa26ed86b8b7e",
      "patch": "@@ -49,6 +49,7 @@ yarn-debug.log*\n yarn-error.log*\n .pnpm-debug.log*\n __debug*\n+vite.config.ts.timestamp-*\n \n # frontend\n node_modules"
    },
    {
      "sha": "0e03e44e7a88086a5c3f2078de308767305a4143",
      "filename": ".prettierignore",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/c2b9afa1a18857712493960d03faa26ed86b8b7e/.prettierignore",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/c2b9afa1a18857712493960d03faa26ed86b8b7e/.prettierignore",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/.prettierignore?ref=c2b9afa1a18857712493960d03faa26ed86b8b7e",
      "patch": "@@ -9,6 +9,7 @@ pnpm-lock.yaml\n **/auto-imports.d.ts\n **/components.d.ts\n **/typed-router.d.ts\n+**/vite.config.ts.timestamp-*\n ui/artalk/src/api/v2.ts\n docs/swagger/swagger.json\n docs/swagger/swagger.yaml"
    },
    {
      "sha": "3e448f4cf4c379f610067095db9bc30a03f2b89a",
      "filename": "package.json",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/c2b9afa1a18857712493960d03faa26ed86b8b7e/package.json",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/c2b9afa1a18857712493960d03faa26ed86b8b7e/package.json",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/package.json?ref=c2b9afa1a18857712493960d03faa26ed86b8b7e",
      "patch": "@@ -16,8 +16,9 @@\n     \"build:plugin-kit\": \"pnpm -F @artalk/plugin-kit build\",\n     \"build:eslint-plugin\": \"pnpm -F eslint-plugin-artalk build\",\n     \"build:typedoc\": \"pnpm typedoc\",\n-    \"build:docs\": \"pnpm build && pnpm -F=docs-landing build && pnpm -F=docs-swagger swagger:build && pnpm -F=docs build:docs && pnpm patch:docs && pnpm build:typedoc\",\n-    \"patch:docs\": \"cp -rf docs/landing/dist/* docs/swagger/dist/* docs/docs/.vitepress/dist\",\n+    \"build:docs\": \"pnpm build && pnpm -F=docs-landing build && pnpm -F=docs-swagger swagger:build && pnpm -F=docs build:docs && pnpm after:build-docs\",\n+    \"after:build-docs\": \"cp -rf docs/landing/dist/* docs/swagger/dist/* docs/docs/.vitepress/dist && pnpm build:typedoc && pnpm fetch:registry\",\n+    \"fetch:registry\": \"node scripts/fetch-registry.mjs -- --docs-build\",\n     \"lint:eslint\": \"eslint .\",\n     \"lint:prettier\": \"prettier --check .\",\n     \"lint\": \"pnpm lint:eslint && pnpm lint:prettier\","
    },
    {
      "sha": "cbbfe45717b6762f9b04a780293ccd7f8cc2ba0b",
      "filename": "scripts/fetch-registry.mjs",
      "status": "added",
      "additions": 91,
      "deletions": 0,
      "changes": 91,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/c2b9afa1a18857712493960d03faa26ed86b8b7e/scripts%2Ffetch-registry.mjs",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/c2b9afa1a18857712493960d03faa26ed86b8b7e/scripts%2Ffetch-registry.mjs",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/scripts%2Ffetch-registry.mjs?ref=c2b9afa1a18857712493960d03faa26ed86b8b7e",
      "patch": "@@ -0,0 +1,91 @@\n+#!/usr/bin/env node\n+\n+import https from 'node:https'\n+import fs from 'node:fs'\n+import process from 'node:process'\n+import path from 'node:path'\n+\n+const __dirname = path.dirname(new URL(import.meta.url).pathname)\n+\n+const REGISTRY_URL = 'https://github.com/ArtalkJS/Community/releases/latest/download/registry.json'\n+const DOCS_DIST_PATH = path.join(__dirname, '../docs/docs/.vitepress/dist/plugins')\n+\n+const download = (url) => {\n+  return new Promise((resolve, reject) => {\n+    const request = https.get(url, (response) => {\n+      if (response.statusCode >= 300 && response.statusCode < 400 && response.headers.location) {\n+        const redirectUrl = response.headers.location\n+        response.resume()\n+        return resolve(download(redirectUrl))\n+      }\n+\n+      if (response.statusCode !== 200) {\n+        response.resume()\n+        reject({\n+          error: true,\n+          message: `Failed to get '${url}'`,\n+          statusCode: response.statusCode,\n+        })\n+        return\n+      }\n+\n+      let data = ''\n+      response.on('data', (chunk) => {\n+        data += chunk\n+      })\n+\n+      response.on('end', () => {\n+        try {\n+          resolve(JSON.parse(data)) // Try to parse the JSON\n+        } catch (err) {\n+          reject({\n+            error: true,\n+            message: 'Failed to parse JSON response',\n+            detail: err.message,\n+          })\n+        }\n+      })\n+    })\n+\n+    // Handle request errors\n+    request.on('error', (err) => {\n+      reject({\n+        error: true,\n+        message: 'Network error occurred',\n+        detail: err.message,\n+      })\n+    })\n+\n+    // Ensure the request ends\n+    request.end()\n+  })\n+}\n+\n+download(REGISTRY_URL)\n+  .then((data) => {\n+    const registryJSON = JSON.stringify(data, null, 2)\n+\n+    if (process.argv.includes('--docs-build')) {\n+      fs.mkdir(DOCS_DIST_PATH, { recursive: true }, (err) => {\n+        if (err) {\n+          console.error('❌ Failed to create directory:', err)\n+          process.exit(1)\n+        }\n+\n+        const outputFile = path.join(DOCS_DIST_PATH, 'registry.json')\n+        fs.writeFile(outputFile, registryJSON, (err) => {\n+          if (err) {\n+            console.error('❌ Failed to write registry.json:', err)\n+            process.exit(1)\n+          }\n+          console.log(`✅ The registry.json has been updated! Saved to: \"${outputFile}\"`)\n+        })\n+      })\n+    } else {\n+      console.log(registryJSON)\n+    }\n+  })\n+  .catch((err) => {\n+    console.error(JSON.stringify(err, null, 2))\n+    process.exit(1)\n+  })"
    }
  ]
}
