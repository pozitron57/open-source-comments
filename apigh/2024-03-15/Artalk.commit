{
  "sha": "18e6ae5b17cf8b84ab9727119255c3671448dad7",
  "node_id": "C_kwDOCQOkhNoAKDE4ZTZhZTViMTdjZjhiODRhYjk3MjcxMTkyNTVjMzY3MTQ0OGRhZDc",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-03-15T08:03:47Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-03-15T09:57:17Z"
    },
    "message": "chore(ci/nightly): improve nightly build workflow",
    "tree": {
      "sha": "660ca5a386d2b629a7a83363bf5a0e8d523b1f59",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/660ca5a386d2b629a7a83363bf5a0e8d523b1f59"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/18e6ae5b17cf8b84ab9727119255c3671448dad7",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZfQbfgAKCRDUbg8O6nwT\nama4APwPZf+KjQn1IkK/QY9TjYxWuNMCkeQv5WJHs928KLas4wEAjuNzc2u9gnwU\ncsIhx8GfOaJ9ymHj/hsGLNuPybQ3KQM=\n=OrPh\n-----END PGP SIGNATURE-----",
      "payload": "tree 660ca5a386d2b629a7a83363bf5a0e8d523b1f59\nparent 1ee3c41199dd12c704c18c1633b32989accf8865\nauthor qwqcode <qwqcode@gmail.com> 1710489827 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1710496637 +0800\n\nchore(ci/nightly): improve nightly build workflow\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/18e6ae5b17cf8b84ab9727119255c3671448dad7",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/18e6ae5b17cf8b84ab9727119255c3671448dad7",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/18e6ae5b17cf8b84ab9727119255c3671448dad7/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1ee3c41199dd12c704c18c1633b32989accf8865",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/1ee3c41199dd12c704c18c1633b32989accf8865",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/1ee3c41199dd12c704c18c1633b32989accf8865"
    }
  ],
  "stats": {
    "total": 120,
    "additions": 59,
    "deletions": 61
  },
  "files": [
    {
      "sha": "dd75a5fb7769f8174b87301a3afa66c64f3d5105",
      "filename": ".circleci/config.yml",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/18e6ae5b17cf8b84ab9727119255c3671448dad7/.circleci%2Fconfig.yml",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/18e6ae5b17cf8b84ab9727119255c3671448dad7/.circleci%2Fconfig.yml",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/.circleci%2Fconfig.yml?ref=18e6ae5b17cf8b84ab9727119255c3671448dad7",
      "patch": "@@ -23,3 +23,5 @@ workflows:\n             branches:\n               ignore:\n                 - gh-pages\n+                - /release\\/.+/\n+                - nightly"
    },
    {
      "sha": "0b70b0a7b6d716bf9892b976ff279e964970d055",
      "filename": ".github/workflows/build-nightly.yml",
      "status": "modified",
      "additions": 50,
      "deletions": 54,
      "changes": 104,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/18e6ae5b17cf8b84ab9727119255c3671448dad7/.github%2Fworkflows%2Fbuild-nightly.yml",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/18e6ae5b17cf8b84ab9727119255c3671448dad7/.github%2Fworkflows%2Fbuild-nightly.yml",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/.github%2Fworkflows%2Fbuild-nightly.yml?ref=18e6ae5b17cf8b84ab9727119255c3671448dad7",
      "patch": "@@ -36,6 +36,18 @@ jobs:\n             exit 78\n           fi\n \n+      - name: Create tag and push\n+        run: |\n+          git config user.name github-actions[bot]\n+          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n+\n+          git tag -d nightly || true\n+          git push origin :refs/tags/nightly || true\n+\n+          git tag -f nightly\n+          git checkout nightly\n+          git push -f origin nightly\n+\n       # https://github.com/docker/metadata-action\n       - name: Gen docker meta\n         id: meta\n@@ -80,14 +92,14 @@ jobs:\n         run: |\n           make build-frontend\n \n-      # https://github.com/docker/build-push-action\n-      - name: Build Multi-Platform Docker Images and Push\n+      - name: Build `linux/amd64` and Load locally\n         uses: docker/build-push-action@v5\n         with:\n-          push: ${{ !inputs.dry_run }}\n+          load: true # automatically load the single-platform build result to `docker images`\n+          push: false\n           context: .\n           file: ./Dockerfile\n-          platforms: ${{ env.PLATFORMS }}\n+          platforms: 'linux/amd64'\n           build-args: ${{ env.DOCKER_BUILD_ARGS }}\n           tags: ${{ steps.meta.outputs.tags }}\n           labels: ${{ steps.meta.outputs.labels }}\n@@ -99,67 +111,37 @@ jobs:\n           rm -rf /tmp/.buildx-cache\n           mv /tmp/.buildx-cache-new /tmp/.buildx-cache\n \n-      - name: Build `linux/amd64` and Load locally\n+      # https://github.com/docker/build-push-action\n+      - name: Build Multi-Platform Docker Images and Push\n         uses: docker/build-push-action@v5\n+        if: ${{ !inputs.dry_run }}\n         with:\n-          load: true # automatically load the single-platform build result to `docker images`\n-          push: false\n+          push: true\n           context: .\n           file: ./Dockerfile\n-          platforms: 'linux/amd64'\n+          platforms: ${{ env.PLATFORMS }}\n           build-args: ${{ env.DOCKER_BUILD_ARGS }}\n           tags: ${{ steps.meta.outputs.tags }}\n           labels: ${{ steps.meta.outputs.labels }}\n           cache-from: type=local,src=/tmp/.buildx-cache\n-          # cache-to: type=local,dest=/tmp/.buildx-cache-new\n \n       # Export docker image\n       - name: Export Docker Image\n         id: docker_image\n         run: |\n-          FILENAME=\"docker_image_nigthly_$(date +'%Y%m%d')_linux_amd64.tar\"\n+          FILENAME=\"artalk_docker_nigthly_$(date +'%Y%m%d')_linux_amd64.tar\"\n           docker save -o $FILENAME ${{ env.DOCKER_IMG }}\n           echo \"filename=$FILENAME\" >> $GITHUB_OUTPUT\n \n-      - name: Upload Docker Image\n-        uses: actions/upload-artifact@v4\n-        with:\n-          name: \"${{ steps.docker_image.outputs.filename }}\"\n-          path: \"${{ steps.docker_image.outputs.filename }}\"\n-\n-      # Generate CHANGELOG\n-      - name: Generate Changelog\n-        run: |\n-          # install git-chglog\n-          curl -sL $(curl -s https://api.github.com/repos/git-chglog/git-chglog/releases/latest \\\n-              | grep -oP '\"https://.+linux_amd64.tar.gz\"' | tr -d \\\") | tar -C /usr/local/bin -xz git-chglog\n-\n-          changelog=$(git-chglog --config .github/chglog/config.yml --next-tag nightly nightly)\n-          echo -e \"${changelog}\\n\" | cat - CHANGELOG.md > temp && mv temp CHANGELOG.md\n-\n-      - name: Upload Changelog\n-        uses: actions/upload-artifact@v4\n-        with:\n-          name: CHANGELOG.md\n-          path: CHANGELOG.md\n-          compression-level: 0\n-\n       # Frontend\n       - name: Pack frontend\n         id: pack_frontend\n         run: |\n-          FILENAME=\"frontend_nigthly_$(date +'%Y%m%d').tar.gz\"\n+          FILENAME=\"artalk_frontend_nigthly_$(date +'%Y%m%d').tar.gz\"\n           PKG_FILE=$(pnpm pack -C ui/artalk --pack-destination ../.. | tail -n 1)\n           mv $PKG_FILE $FILENAME\n           echo \"filename=$FILENAME\" >> $GITHUB_OUTPUT\n \n-      - name: Upload frontend\n-        uses: actions/upload-artifact@v4\n-        with:\n-          name: \"${{ steps.pack_frontend.outputs.filename }}\"\n-          path: \"${{ steps.pack_frontend.outputs.filename }}\"\n-          compression-level: 0\n-\n       # App\n       - name: Pack app\n         id: pack_app\n@@ -179,27 +161,41 @@ jobs:\n           tar -czf $FILENAME $DEST\n           echo \"filename=$FILENAME\" >> $GITHUB_OUTPUT\n \n-      - name: Upload App\n-        uses: actions/upload-artifact@v4\n-        with:\n-          name: \"${{ steps.pack_app.outputs.filename }}\"\n-          path: \"${{ steps.pack_app.outputs.filename }}\"\n-          compression-level: 0\n+      # Generate CHANGELOG\n+      - name: Generate Changelog\n+        run: |\n+          # install git-chglog\n+          curl -sL $(curl -s https://api.github.com/repos/git-chglog/git-chglog/releases/latest \\\n+              | grep -oP '\"https://.+linux_amd64.tar.gz\"' | tr -d \\\") | tar -C /usr/local/bin -xz git-chglog\n+\n+          CHANGELOG=$(git-chglog --config .github/chglog/config.yml --next-tag nightly nightly)\n+          echo -e \"$CHANGELOG\" > release.md\n+          echo -e \"\\n> ⚠️ This version is latest nightly build and is **NOT** the final released version. Please use it with caution.\" \\\n+                  \"\\n> 💡 Docker user can run \\`docker pull artalk/artalk-go:nightly\\` to get the nightly build.\" >> release.md\n \n       # checksums.txt\n       - name: Calculate checksums.txt\n+        id: checksums\n         env:\n-          DIST_FILES: |\n+          DIST_FILES: |-\n             ${{ steps.docker_image.outputs.filename }}\n             ${{ steps.pack_app.outputs.filename }}\n             ${{ steps.pack_frontend.outputs.filename }}\n-            CHANGELOG.md\n         run: |\n           sha256sum $DIST_FILES > checksums.txt\n \n-      - name: Upload checksums.txt\n-        uses: actions/upload-artifact@v4\n+          echo -e \"DIST_FILES<<EOF\" >> $GITHUB_ENV\n+          echo -e \"$DIST_FILES\" >> $GITHUB_ENV\n+          echo -e \"checksums.txt\" >> $GITHUB_ENV\n+          echo -e \"EOF\" >> $GITHUB_ENV\n+\n+      - name: Release\n+        uses: softprops/action-gh-release@v2\n         with:\n-          name: checksums.txt\n-          path: checksums.txt\n-          compression-level: 0\n+          draft: ${{ inputs.dry_run }}\n+          prerelease: true\n+          tag_name: nightly\n+          name: Nightly Version\n+          body_path: release.md\n+          files: |-\n+            ${{ env.DIST_FILES }}"
    },
    {
      "sha": "df138647a170a15881d6cf8f70d66aa0c1072e03",
      "filename": ".github/workflows/release.yml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/18e6ae5b17cf8b84ab9727119255c3671448dad7/.github%2Fworkflows%2Frelease.yml",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/18e6ae5b17cf8b84ab9727119255c3671448dad7/.github%2Fworkflows%2Frelease.yml",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/.github%2Fworkflows%2Frelease.yml?ref=18e6ae5b17cf8b84ab9727119255c3671448dad7",
      "patch": "@@ -38,7 +38,7 @@ jobs:\n \n       - name: Handle Version Number\n         run: |\n-          PREV_VERSION=\"$(git describe --tags --abbrev=0)\"\n+          PREV_VERSION=\"$(git describe --tags --abbrev=0 --match 'v*')\"\n           NEXT_VERSION=\"v$(semver --increment ${{ inputs.semver }} ${PREV_VERSION})\"\n \n           echo \"PREV_VERSION=${PREV_VERSION}\" >> $GITHUB_ENV"
    },
    {
      "sha": "8a850f1b829a9c05f1d97e31059a1c40cc7fd29e",
      "filename": ".github/workflows/test-docs.yml",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/18e6ae5b17cf8b84ab9727119255c3671448dad7/.github%2Fworkflows%2Ftest-docs.yml",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/18e6ae5b17cf8b84ab9727119255c3671448dad7/.github%2Fworkflows%2Ftest-docs.yml",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/.github%2Fworkflows%2Ftest-docs.yml?ref=18e6ae5b17cf8b84ab9727119255c3671448dad7",
      "patch": "@@ -2,12 +2,12 @@ name: Test Docs\n \n on:\n   push:\n-    branches: ['*', '!release/*']\n+    branches: ['*', '!release/*', '!nightly']\n     paths: ['docs/**']\n     tags-ignore: ['v*']\n   pull_request:\n     paths: ['docs/**']\n-    branches: ['*', '!release/*']\n+    branches: ['*', '!release/*', '!nightly']\n \n jobs:\n   test_docs:"
    },
    {
      "sha": "6ee322bb9700d401aa23e6df440a57129d961bc5",
      "filename": ".github/workflows/test-frontend.yml",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/18e6ae5b17cf8b84ab9727119255c3671448dad7/.github%2Fworkflows%2Ftest-frontend.yml",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/18e6ae5b17cf8b84ab9727119255c3671448dad7/.github%2Fworkflows%2Ftest-frontend.yml",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/.github%2Fworkflows%2Ftest-frontend.yml?ref=18e6ae5b17cf8b84ab9727119255c3671448dad7",
      "patch": "@@ -2,12 +2,12 @@ name: Test Frontend\n \n on:\n   push:\n-    branches: ['*', '!release/*']\n+    branches: ['*', '!release/*', '!nightly']\n     paths: ['ui/**']\n     tags-ignore: ['v*']\n   pull_request:\n     paths: ['ui/**']\n-    branches: ['*', '!release/*']\n+    branches: ['*', '!release/*', '!nightly']\n \n jobs:\n   test_ui:"
    },
    {
      "sha": "e977717aff3970601193347cf061125bc5765682",
      "filename": "Makefile",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/18e6ae5b17cf8b84ab9727119255c3671448dad7/Makefile",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/18e6ae5b17cf8b84ab9727119255c3671448dad7/Makefile",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/Makefile?ref=18e6ae5b17cf8b84ab9727119255c3671448dad7",
      "patch": "@@ -1,6 +1,6 @@\n PKG_NAME    := github.com/ArtalkJS/Artalk\n BIN_NAME\t:= ./bin/artalk\n-VERSION     ?= $(shell git describe --tags --abbrev=0)\n+VERSION     ?= $(shell git describe --tags --abbrev=0 --match 'v*')\n COMMIT_HASH ?= $(shell git rev-parse --short HEAD)\n \n HAS_RICHGO  := $(shell which richgo)"
    },
    {
      "sha": "c7c8fbeb9b6371460cec3618b4709f550b886bb7",
      "filename": "scripts/docker-build.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/18e6ae5b17cf8b84ab9727119255c3671448dad7/scripts%2Fdocker-build.sh",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/18e6ae5b17cf8b84ab9727119255c3671448dad7/scripts%2Fdocker-build.sh",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/scripts%2Fdocker-build.sh?ref=18e6ae5b17cf8b84ab9727119255c3671448dad7",
      "patch": "@@ -3,7 +3,7 @@\n set -e\n \n IMAGE_NAME=\"artalk/artalk-go\"\n-VERSION=$(git describe --tags --abbrev=0)\n+VERSION=$(git describe --tags --abbrev=0 --match 'v*')\n \n if [[ $* == *--push* ]]\n then"
    }
  ]
}
