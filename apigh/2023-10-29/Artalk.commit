{
  "sha": "91809002d77e833799e32568f7b3564e05ce0d27",
  "node_id": "C_kwDOCQOkhNoAKDkxODA5MDAyZDc3ZTgzMzc5OWUzMjU2OGY3YjM1NjRlMDVjZTBkMjc",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2023-10-29T11:01:16Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2023-10-29T11:01:16Z"
    },
    "message": "chore(ui): fix issues caused by refactoring",
    "tree": {
      "sha": "5e3174afd113822db9f8e2e0af98d0ec7c100c33",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/5e3174afd113822db9f8e2e0af98d0ec7c100c33"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/91809002d77e833799e32568f7b3564e05ce0d27",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZT47fAAKCRDUbg8O6nwT\naucJAP9iBRNua9LN3f1rSm2/3wCm7K1bnPTxNdWSo/0yvhP6EQD9GsoDa95G79cq\ng1zm6vN/eqfqXVnEtpiiClWa9UXDwQM=\n=pEc8\n-----END PGP SIGNATURE-----",
      "payload": "tree 5e3174afd113822db9f8e2e0af98d0ec7c100c33\nparent dcaad1b2d56279b6f54d19c71919b9db2a9748af\nauthor qwqcode <qwqcode@gmail.com> 1698577276 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1698577276 +0800\n\nchore(ui): fix issues caused by refactoring\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/91809002d77e833799e32568f7b3564e05ce0d27",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/91809002d77e833799e32568f7b3564e05ce0d27",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/91809002d77e833799e32568f7b3564e05ce0d27/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dcaad1b2d56279b6f54d19c71919b9db2a9748af",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/dcaad1b2d56279b6f54d19c71919b9db2a9748af",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/dcaad1b2d56279b6f54d19c71919b9db2a9748af"
    }
  ],
  "stats": {
    "total": 227,
    "additions": 132,
    "deletions": 95
  },
  "files": [
    {
      "sha": "c4b95da401874840ca3e86890dd9622648604d29",
      "filename": "ui/.eslintrc.js",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/91809002d77e833799e32568f7b3564e05ce0d27/ui%2F.eslintrc.js",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/91809002d77e833799e32568f7b3564e05ce0d27/ui%2F.eslintrc.js",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2F.eslintrc.js?ref=91809002d77e833799e32568f7b3564e05ce0d27",
      "patch": "@@ -16,13 +16,12 @@ module.exports = {\n   ],\n   plugins: ['@typescript-eslint', 'import'],\n   rules: {\n-    'no-alert': 'off',\n-    'no-unused-vars': 'off',\n+    'no-alert': 'warn',\n+    'no-unused-vars': 0,\n     'no-plusplus': 0,\n     'no-param-reassign': 0,\n     'no-console': 0,\n     'no-underscore-dangle': 0,\n-    'no-constructor-return': 0,\n     'class-methods-use-this': 0,\n     'spaced-comment': 0,\n     'no-lonely-if': 0,"
    },
    {
      "sha": "5abf65e944d2534e88489de51a31c88690c05645",
      "filename": "ui/packages/artalk/src/components/dialog.ts",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fdialog.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fdialog.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fdialog.ts?ref=91809002d77e833799e32568f7b3564e05ce0d27",
      "patch": "@@ -30,8 +30,6 @@ export default class Dialog {\n     // 内容\n     this.$content = this.$el.querySelector('.atk-layer-dialog-content')!\n     this.$content.appendChild(contentEl)\n-\n-    return this\n   }\n \n   /** 按钮 · 确定 */"
    },
    {
      "sha": "7102a657ca44042961e32a4701aa18ace7e82af0",
      "filename": "ui/packages/artalk/src/components/error-dialog.ts",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Ferror-dialog.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Ferror-dialog.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Ferror-dialog.ts?ref=91809002d77e833799e32568f7b3564e05ce0d27",
      "patch": "@@ -0,0 +1,34 @@\n+import type { ContextApi } from '~/types'\n+import * as Utils from '@/lib/utils'\n+import * as Ui from '@/lib/ui'\n+import User from '@/lib/user'\n+import $t from '@/i18n'\n+\n+export function showErrorDialog(ctx: ContextApi, errMsg: string, errData?: any, retryFn?: () => void) {\n+  const errEl = Utils.createElement(`<span>${errMsg}，${$t('listLoadFailMsg')}<br/></span>`)\n+\n+  const $retryBtn = Utils.createElement(`<span style=\"cursor:pointer;\">${$t('listRetry')}</span>`)\n+  $retryBtn.onclick = () => retryFn && retryFn()\n+  errEl.appendChild($retryBtn)\n+\n+  const adminBtn = Utils.createElement('<span atk-only-admin-show> | <span style=\"cursor:pointer;\">打开控制台</span></span>')\n+  errEl.appendChild(adminBtn)\n+  if (!User.data.isAdmin) adminBtn.classList.add('atk-hide')\n+\n+  let sidebarView = ''\n+\n+  // 找不到站点错误，打开侧边栏并填入创建站点表单\n+  if (errData?.err_no_site) {\n+    const viewLoadParam = {\n+      create_name: ctx.conf.site,\n+      create_urls: `${window.location.protocol}//${window.location.host}`\n+    }\n+    sidebarView = `sites|${JSON.stringify(viewLoadParam)}`\n+  }\n+\n+  adminBtn.onclick = () => ctx.showSidebar({\n+    view: sidebarView as any\n+  })\n+\n+  Ui.setError(ctx.get('list').$el, errEl)\n+}"
    },
    {
      "sha": "c4a393aa9cc9863608b7ebdbedd0d8daae4ab1f6",
      "filename": "ui/packages/artalk/src/list/page.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Flist%2Fpage.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Flist%2Fpage.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Flist%2Fpage.ts?ref=91809002d77e833799e32568f7b3564e05ce0d27",
      "patch": "@@ -54,7 +54,7 @@ export const initListPaginatorFunc = (ctx: ContextApi) => {\n   // When list fetch\n   ctx.on('list-fetch', (params) => {\n     // if clear comments when fetch new page data\n-    if (paginator?.getIsClearComments(params)) {\n+    if (ctx.getData().getComments().length > 0 && paginator?.getIsClearComments(params)) {\n       ctx.getData().clearComments()\n     }\n   })"
    },
    {
      "sha": "e4f91ebaeae64c04f8d12dab386480cd5354a28b",
      "filename": "ui/packages/artalk/src/plugins/admin-only-elem.ts",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fadmin-only-elem.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fadmin-only-elem.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fadmin-only-elem.ts?ref=91809002d77e833799e32568f7b3564e05ce0d27",
      "patch": "@@ -2,10 +2,18 @@ import type { ArtalkPlugin } from '~/types'\n import { getLayerWrap } from '@/layer'\n \n export const AdminOnlyElem: ArtalkPlugin = (ctx) => {\n-  ctx.on('user-changed', (user) => {\n-    applyAdminOnlyEls(user.isAdmin, getAdminOnlyEls({\n+  const scanApply = () => {\n+    applyAdminOnlyEls(ctx.get('user').data.isAdmin, getAdminOnlyEls({\n       $root: ctx.$root\n     }))\n+  }\n+\n+  ctx.on('list-loaded', () => {\n+    scanApply()\n+  })\n+\n+  ctx.on('user-changed', (user) => {\n+    scanApply()\n   })\n }\n "
    },
    {
      "sha": "8b4e6cf2dc1a54ac24621b7e5b655d91a5aef8e0",
      "filename": "ui/packages/artalk/src/plugins/conf-remoter.ts",
      "status": "modified",
      "additions": 29,
      "deletions": 24,
      "changes": 53,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fconf-remoter.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fconf-remoter.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fconf-remoter.ts?ref=91809002d77e833799e32568f7b3564e05ce0d27",
      "patch": "@@ -1,34 +1,39 @@\n-import type { ArtalkConfig, ArtalkPlugin } from '~/types'\n+import type { ArtalkConfig, ArtalkPlugin, ContextApi } from '~/types'\n import { handleConfFormServer } from '@/config'\n+import { showErrorDialog } from '../components/error-dialog'\n \n-export const ConfRemoter: ArtalkPlugin = (ctx) => {\n-  let confLoaded = false\n+let confLoaded = false\n \n+export const ConfRemoter: ArtalkPlugin = (ctx) => {\n   ctx.on('inited', () => {\n-    if (confLoaded) return\n-\n-    ctx.getApi().system.conf().then((data) => {\n-      let conf: Partial<ArtalkConfig> = {\n-        apiVersion: data.version.version, // version info\n-      }\n+    if (!confLoaded) loadConf(ctx)\n+  })\n+}\n \n-      // reference conf from backend\n-      if (ctx.conf.useBackendConf) {\n-        if (!data.frontend_conf) throw new Error('The remote backend does not respond to the frontend conf, but `useBackendConf` conf is enabled')\n-        conf = { ...conf, ...handleConfFormServer(data.frontend_conf) }\n-      }\n+function loadConf(ctx: ContextApi) {\n+  ctx.getApi().system.conf().then((data) => {\n+    let conf: Partial<ArtalkConfig> = {\n+      apiVersion: data.version.version, // version info\n+    }\n \n-      ctx.updateConf(conf)\n+    // reference conf from backend\n+    if (ctx.conf.useBackendConf) {\n+      if (!data.frontend_conf) throw new Error('The remote backend does not respond to the frontend conf, but `useBackendConf` conf is enabled')\n+      conf = { ...conf, ...handleConfFormServer(data.frontend_conf) }\n+    }\n \n-      // 评论获取\n-      ctx.fetch({ offset: 0 })\n-    }).catch((err) => {\n-      // TODO show error dialog\n-      window.alert(`[Artalk Error] ${err.msg || String(err)}`)\n+    ctx.updateConf(conf)\n+    confLoaded = true\n+  }).catch((err) => {\n+    ctx.updateConf({})\n \n-      ctx.updateConf({})\n-    }).finally(() => {\n-      confLoaded = true\n+    showErrorDialog(ctx, err.msg || String(err), err.data, () => {\n+      loadConf(ctx)\n     })\n-  })\n+\n+    throw err\n+  }).then(() => {\n+    // 评论获取\n+    ctx.fetch({ offset: 0 })\n+  }).catch(() => {})\n }"
    },
    {
      "sha": "1b7cf4ed7a6b490e3c73bf4589ab7b93e33dee9c",
      "filename": "ui/packages/artalk/src/plugins/list/error-dialog.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 33,
      "changes": 37,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ferror-dialog.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ferror-dialog.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ferror-dialog.ts?ref=91809002d77e833799e32568f7b3564e05ce0d27",
      "patch": "@@ -1,8 +1,6 @@\n import type { ArtalkPlugin, ContextApi } from '~/types'\n-import * as Utils from '../../lib/utils'\n+import { showErrorDialog } from '@/components/error-dialog'\n import * as Ui from '../../lib/ui'\n-import User from '../../lib/user'\n-import $t from '../../i18n'\n \n export const ErrorDialog: ArtalkPlugin = (ctx) => {\n   ctx.on('list-fetch', () => {\n@@ -13,36 +11,9 @@ export const ErrorDialog: ArtalkPlugin = (ctx) => {\n   })\n \n   ctx.on('list-error', (err) => {\n-    const list = ctx.get('list')\n-    Ui.setError(list.$el, renderErrorDialog(ctx, err.msg, err.data))\n+    showErrorDialog(ctx, err.msg, err.data, () => {\n+      ctx.fetch({ offset: 0 })\n+    })\n   })\n }\n \n-export function renderErrorDialog(ctx: ContextApi, errMsg: string, errData?: any): HTMLElement {\n-  const errEl = Utils.createElement(`<span>${errMsg}，${$t('listLoadFailMsg')}<br/></span>`)\n-\n-  const $retryBtn = Utils.createElement(`<span style=\"cursor:pointer;\">${$t('listRetry')}</span>`)\n-  $retryBtn.onclick = () => (ctx.fetch({ offset: 0 }))\n-  errEl.appendChild($retryBtn)\n-\n-  const adminBtn = Utils.createElement('<span atk-only-admin-show> | <span style=\"cursor:pointer;\">打开控制台</span></span>')\n-  errEl.appendChild(adminBtn)\n-  if (!User.data.isAdmin) adminBtn.classList.add('atk-hide')\n-\n-  let sidebarView = ''\n-\n-  // 找不到站点错误，打开侧边栏并填入创建站点表单\n-  if (errData?.err_no_site) {\n-    const viewLoadParam = {\n-      create_name: ctx.conf.site,\n-      create_urls: `${window.location.protocol}//${window.location.host}`\n-    }\n-    sidebarView = `sites|${JSON.stringify(viewLoadParam)}`\n-  }\n-\n-  adminBtn.onclick = () => ctx.showSidebar({\n-    view: sidebarView as any\n-  })\n-\n-  return errEl\n-}"
    },
    {
      "sha": "8127323e9874ff2d64364402667bdb7ed57febfa",
      "filename": "ui/packages/artalk/src/plugins/list/fetch.ts",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ffetch.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ffetch.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ffetch.ts?ref=91809002d77e833799e32568f7b3564e05ce0d27",
      "patch": "@@ -3,12 +3,14 @@ import type { ListFetchParams, ArtalkPlugin } from '~/types'\n export const Fetch: ArtalkPlugin = (ctx) => {\n   ctx.on('list-fetch', (_params) => {\n     if (ctx.getData().getLoading()) return\n+    ctx.getData().setLoading(true)\n \n     const params: ListFetchParams = {\n       // default params\n       offset: 0,\n       limit: ctx.conf.pagination.pageSize,\n       flatMode: ctx.conf.flatMode as boolean, // always be boolean because had been handled in Artalk.init\n+      paramsModifier: ctx.conf.listFetchParamsModifier,\n       ..._params\n     }\n \n@@ -18,7 +20,7 @@ export const Fetch: ArtalkPlugin = (ctx) => {\n     })\n \n     ctx.getApi().comment\n-      .get(params.offset, params.limit, params.flatMode)\n+      .get(params.offset, params.limit, params.flatMode, params.paramsModifier)\n       .then((data) => {\n         // Must before all other function call and event trigger,\n         // because it will depend on the lastData\n@@ -55,5 +57,8 @@ export const Fetch: ArtalkPlugin = (ctx) => {\n \n         throw e\n       })\n+      .finally(() => {\n+        ctx.getData().setLoading(false)\n+      })\n   })\n }"
    },
    {
      "sha": "0b4a3324ed96b936249d59cdec5993eee6d29307",
      "filename": "ui/packages/artalk/src/plugins/list/reach-bottom.ts",
      "status": "modified",
      "additions": 26,
      "deletions": 16,
      "changes": 42,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Freach-bottom.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Freach-bottom.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Freach-bottom.ts?ref=91809002d77e833799e32568f7b3564e05ce0d27",
      "patch": "@@ -1,36 +1,46 @@\n import type { ArtalkPlugin } from '~/types'\n \n export const ReachBottom: ArtalkPlugin = (ctx) => {\n-  const scrollEvtAt = document.documentElement // TODO support ref ctx.conf\n+  const scrollEvtAt = document // TODO support ref ctx.conf\n   let observer: IntersectionObserver|null = null\n \n-  ctx.on('inited', () => {\n+  const setupObserver = ($target: HTMLElement) => {\n+    // eslint-disable-next-line compat/compat\n+    observer = new IntersectionObserver(([entries]) => {\n+      if (entries.isIntersecting) {\n+        clearObserver()\n+        ctx.trigger('list-reach-bottom')\n+      }\n+    }, {\n+      root: scrollEvtAt\n+    })\n+    observer.observe($target)\n+  }\n+\n+  const clearObserver = () => {\n+    observer?.disconnect()\n+    observer = null\n+  }\n+\n+  ctx.on('list-loaded', () => {\n+    clearObserver()\n+\n     const list = ctx.get('list')\n \n     // use IntersectionObserver to detect reach bottom\n-    const $target = list.$el.querySelector<HTMLElement>('.atk-list-comments-wrap')\n+    const $target = list.getCommentsWrapEl().querySelector<HTMLElement>('.atk-comment-wrap:nth-last-child(3)')\n+    if (!$target) return\n \n     // check IntersectionObserver support\n     if (!('IntersectionObserver' in window)) {\n       console.warn('IntersectionObserver api not supported')\n       return\n     }\n \n-    // eslint-disable-next-line compat/compat\n-    observer = new IntersectionObserver((entries) => {\n-      entries.forEach((entry) => {\n-        if (entry.intersectionRatio > 0) {\n-          ctx.trigger('list-reach-bottom')\n-        }\n-      })\n-    }, {\n-      root: scrollEvtAt,\n-      threshold: 0,\n-    })\n-    observer.observe($target!)\n+    setupObserver($target)\n   })\n \n   ctx.on('destroy', () => {\n-    observer?.disconnect()\n+    clearObserver()\n   })\n }"
    },
    {
      "sha": "41d95fa7a98bdf2bf4b0539eaad857deb7804717",
      "filename": "ui/packages/artalk/src/plugins/list/sidebar-btn.ts",
      "status": "modified",
      "additions": 19,
      "deletions": 13,
      "changes": 32,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fsidebar-btn.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fsidebar-btn.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fsidebar-btn.ts?ref=91809002d77e833799e32568f7b3564e05ce0d27",
      "patch": "@@ -4,6 +4,22 @@ import $t from '@/i18n'\n export const SidebarBtn: ArtalkPlugin = (ctx) => {\n   let $openSidebarBtn: HTMLElement|null = null\n \n+  const syncByUser = () => {\n+    if (!$openSidebarBtn) return\n+    const user = ctx.get('user').data\n+\n+    // 已输入个人信息\n+    if (!!user.nick && !!user.email) {\n+      $openSidebarBtn.classList.remove('atk-hide')\n+\n+      // update button text (normal user or admin)\n+      const $btnText = $openSidebarBtn.querySelector<HTMLElement>('.atk-text')\n+      if ($btnText) $btnText.innerText = (!user.isAdmin) ? $t('msgCenter') : $t('ctrlCenter')\n+    } else {\n+      $openSidebarBtn.classList.add('atk-hide')\n+    }\n+  }\n+\n   ctx.on('conf-loaded', () => {\n     const list = ctx.get('list')\n \n@@ -13,21 +29,11 @@ export const SidebarBtn: ArtalkPlugin = (ctx) => {\n     $openSidebarBtn.onclick = () => { // use onclick rather than addEventListener to prevent duplicate event\n       ctx.showSidebar()\n     }\n+\n+    syncByUser()\n   })\n \n   ctx.on('user-changed', (user) => {\n-    if ($openSidebarBtn) {\n-\n-      // 已输入个人信息\n-      if (!!user.nick && !!user.email) {\n-        $openSidebarBtn.classList.remove('atk-hide')\n-\n-        // update button text (normal user or admin)\n-        const $btnText = $openSidebarBtn.querySelector<HTMLElement>('.atk-text')\n-        if ($btnText) $btnText.innerText = (!user.isAdmin) ? $t('msgCenter') : $t('ctrlCenter')\n-      } else {\n-        $openSidebarBtn.classList.add('atk-hide')\n-      }\n-    }\n+    syncByUser()\n   })\n }"
    },
    {
      "sha": "ae00e79f05af3401d824dce7f9af402979d1c8af",
      "filename": "ui/packages/artalk/types/data.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Ftypes%2Fdata.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/91809002d77e833799e32568f7b3564e05ce0d27/ui%2Fpackages%2Fartalk%2Ftypes%2Fdata.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Ftypes%2Fdata.ts?ref=91809002d77e833799e32568f7b3564e05ce0d27",
      "patch": "@@ -233,6 +233,7 @@ export interface ListFetchParams {\n   offset: number\n   limit: number\n   flatMode: boolean\n+  paramsModifier?: (p: any) => void\n   onSuccess?: (data: ListData) => void\n   onError?: (err: any) => void\n }"
    }
  ]
}
