{
  "sha": "e663893fd1936fe87e8f84267868b6e368b6e4c5",
  "node_id": "C_kwDOCQOkhNoAKGU2NjM4OTNmZDE5MzZmZTg3ZThmODQyNjc4NjhiNmUzNjhiNmU0YzU",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-07-11T05:12:12Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-07-11T05:12:12Z"
    },
    "message": "perf(notify): improve error messages for notify (#943)",
    "tree": {
      "sha": "d41fdeda89a801c07eeca592d7475d5a05ddf85c",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/d41fdeda89a801c07eeca592d7475d5a05ddf85c"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/e663893fd1936fe87e8f84267868b6e368b6e4c5",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZo9prAAKCRDUbg8O6nwT\napYZAQCHRjljNO0GFKnmLDeppLHfIii8ekS5vabVgD82QvnSFAD+J2LOdzYMzuHs\nEgjWJa5r+NPrn2Ejhtst4DMat2PUTgA=\n=x3Z1\n-----END PGP SIGNATURE-----",
      "payload": "tree d41fdeda89a801c07eeca592d7475d5a05ddf85c\nparent b85d845b71f6e43fe17315c060906328bddc2ae8\nauthor qwqcode <qwqcode@gmail.com> 1720674732 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1720674732 +0800\n\nperf(notify): improve error messages for notify (#943)\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/e663893fd1936fe87e8f84267868b6e368b6e4c5",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/e663893fd1936fe87e8f84267868b6e368b6e4c5",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/e663893fd1936fe87e8f84267868b6e368b6e4c5/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b85d845b71f6e43fe17315c060906328bddc2ae8",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/b85d845b71f6e43fe17315c060906328bddc2ae8",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/b85d845b71f6e43fe17315c060906328bddc2ae8"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 13,
    "deletions": 6
  },
  "files": [
    {
      "sha": "72a955fd6a4ed6a7e5d8219796883c57cd744a7a",
      "filename": "internal/notify_pusher/base.go",
      "status": "modified",
      "additions": 13,
      "deletions": 6,
      "changes": 19,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/e663893fd1936fe87e8f84267868b6e368b6e4c5/internal%2Fnotify_pusher%2Fbase.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/e663893fd1936fe87e8f84267868b6e368b6e4c5/internal%2Fnotify_pusher%2Fbase.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fnotify_pusher%2Fbase.go?ref=e663893fd1936fe87e8f84267868b6e368b6e4c5",
      "patch": "@@ -6,6 +6,7 @@ import (\n \t\"github.com/ArtalkJS/Artalk/internal/config\"\n \t\"github.com/ArtalkJS/Artalk/internal/dao\"\n \t\"github.com/ArtalkJS/Artalk/internal/entity\"\n+\t\"github.com/ArtalkJS/Artalk/internal/log\"\n \t\"github.com/nikoksr/notify\"\n \t\"github.com/nikoksr/notify/service/dingding\"\n \t\"github.com/nikoksr/notify/service/line\"\n@@ -50,9 +51,12 @@ func (pusher *NotifyPusher) loadHelper() {\n \t// Telegram\n \ttgConf := conf.Telegram\n \tif tgConf.Enabled {\n-\t\ttelegramService, _ := telegram.New(tgConf.ApiToken)\n-\t\ttelegramService.AddReceivers(tgConf.Receivers...)\n-\t\thelper.UseServices(telegramService)\n+\t\tif telegramService, err := telegram.New(tgConf.ApiToken); err == nil {\n+\t\t\ttelegramService.AddReceivers(tgConf.Receivers...)\n+\t\t\thelper.UseServices(telegramService)\n+\t\t} else {\n+\t\t\tlog.Error(\"[Notify] Telegram service init error: \", err)\n+\t\t}\n \t}\n \n \t// 钉钉\n@@ -73,8 +77,11 @@ func (pusher *NotifyPusher) loadHelper() {\n \t// LINE\n \tLINEConf := conf.LINE\n \tif LINEConf.Enabled {\n-\t\tlineService, _ := line.New(pusher.conf.LINE.ChannelSecret, pusher.conf.LINE.ChannelAccessToken)\n-\t\tlineService.AddReceivers(LINEConf.Receivers...)\n-\t\thelper.UseServices(lineService)\n+\t\tif lineService, err := line.New(pusher.conf.LINE.ChannelSecret, pusher.conf.LINE.ChannelAccessToken); err == nil {\n+\t\t\tlineService.AddReceivers(LINEConf.Receivers...)\n+\t\t\thelper.UseServices(lineService)\n+\t\t} else {\n+\t\t\tlog.Error(\"[Notify] LINE service init error: \", err)\n+\t\t}\n \t}\n }"
    }
  ]
}
