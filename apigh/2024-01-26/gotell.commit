{
  "sha": "034af979ddb085e742d6e1288740b8443661a1e6",
  "node_id": "MDY6Q29tbWl0Njg5Njk2NjM6MDM0YWY5NzlkZGIwODVlNzQyZDZlMTI4ODc0MGI4NDQzNjYxYTFlNg==",
  "commit": {
    "author": {
      "name": "Marcus Weiner",
      "email": "marcus@netlify.com",
      "date": "2019-09-11T17:48:49Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-09-11T17:48:49Z"
    },
    "message": "Truncate commit message if first paragraph is over 256 chars (#15)",
    "tree": {
      "sha": "a105ba66365a8fdc304e76f81732ca6f8c35353e",
      "url": "https://api.github.com/repos/netlify/gotell/git/trees/a105ba66365a8fdc304e76f81732ca6f8c35353e"
    },
    "url": "https://api.github.com/repos/netlify/gotell/git/commits/034af979ddb085e742d6e1288740b8443661a1e6",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdeTOBCRBK7hj4Ov3rIwAAdHIIAKOG2eK0RhZzuh+dm4brZW2l\nhcT/qqxTu5W/VQqVGuMiRAo6TCT+WEXnhLVmFCnZ9tMpkvz2v5LzpW7b7xw37R48\nmSX/RmvqVlnlmgyLLTa/lAAUlg4PfRu9YzjapnrxhnwdnEX1Ww8a7JRtlnuh7eRX\ntgUMOif0qOoeyyGJ6tTYAfH1o11GNS0iAkPExaOMyAMHQBFACdbml5qBV2o/yPw/\noGNYUdzh6QFzpDK0vXvPaPk/Z5AVyog6DRAiu+ZrbZyyPUuMe+xZ1EIJmnHUB7pq\nUkGWje6yiiRyx5Rgh1fbyV2O8kB2nc+WenWAI43IiH4CXA+Sm4WMO2CkFN5Qqd0=\n=HRx3\n-----END PGP SIGNATURE-----\n",
      "payload": "tree a105ba66365a8fdc304e76f81732ca6f8c35353e\nparent 54c777f322a694c916e170c7fc521985f32d898d\nauthor Marcus Weiner <marcus@netlify.com> 1568224129 +0200\ncommitter GitHub <noreply@github.com> 1568224129 +0200\n\nTruncate commit message if first paragraph is over 256 chars (#15)\n\n"
    }
  },
  "url": "https://api.github.com/repos/netlify/gotell/commits/034af979ddb085e742d6e1288740b8443661a1e6",
  "html_url": "https://github.com/netlify/gotell/commit/034af979ddb085e742d6e1288740b8443661a1e6",
  "comments_url": "https://api.github.com/repos/netlify/gotell/commits/034af979ddb085e742d6e1288740b8443661a1e6/comments",
  "author": {
    "login": "mraerino",
    "id": 4941459,
    "node_id": "MDQ6VXNlcjQ5NDE0NTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4941459?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mraerino",
    "html_url": "https://github.com/mraerino",
    "followers_url": "https://api.github.com/users/mraerino/followers",
    "following_url": "https://api.github.com/users/mraerino/following{/other_user}",
    "gists_url": "https://api.github.com/users/mraerino/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mraerino/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mraerino/subscriptions",
    "organizations_url": "https://api.github.com/users/mraerino/orgs",
    "repos_url": "https://api.github.com/users/mraerino/repos",
    "events_url": "https://api.github.com/users/mraerino/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mraerino/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "54c777f322a694c916e170c7fc521985f32d898d",
      "url": "https://api.github.com/repos/netlify/gotell/commits/54c777f322a694c916e170c7fc521985f32d898d",
      "html_url": "https://github.com/netlify/gotell/commit/54c777f322a694c916e170c7fc521985f32d898d"
    }
  ],
  "stats": {
    "total": 6,
    "additions": 4,
    "deletions": 2
  },
  "files": [
    {
      "sha": "20e0dfdca41f8ea2f799af677effae9f88084272",
      "filename": "api/server.go",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/netlify/gotell/blob/034af979ddb085e742d6e1288740b8443661a1e6/api%2Fserver.go",
      "raw_url": "https://github.com/netlify/gotell/raw/034af979ddb085e742d6e1288740b8443661a1e6/api%2Fserver.go",
      "contents_url": "https://api.github.com/repos/netlify/gotell/contents/api%2Fserver.go?ref=034af979ddb085e742d6e1288740b8443661a1e6",
      "patch": "@@ -108,6 +108,10 @@ func (s *Server) postComment(ctx context.Context, w http.ResponseWriter, req *ht\n \t\tfmt.Sprintf(\"%v-%v.json\", (time.Now().UnixNano()/1000000), name),\n \t)\n \n+\tmessage := firstParagraph\n+\tif len(message) > 255 {\n+\t\tmessage = message[:255]\n+\t}\n \tcontent, _ := json.Marshal(comment)\n \tbranch := \"master\"\n \n@@ -129,7 +133,6 @@ func (s *Server) postComment(ctx context.Context, w http.ResponseWriter, req *ht\n \t\t\tjsonError(w, fmt.Sprintf(\"Failed to create comment branch: %v\", err), 500)\n \t\t\treturn\n \t\t}\n-\t\tmessage := firstParagraph\n \t\t_, _, err = s.client.Repositories.CreateFile(ctx, parts[0], parts[1], pathname, &github.RepositoryContentFileOptions{\n \t\t\tMessage: &message,\n \t\t\tContent: content,\n@@ -152,7 +155,6 @@ func (s *Server) postComment(ctx context.Context, w http.ResponseWriter, req *ht\n \t\t\treturn\n \t\t}\n \t} else {\n-\t\tmessage := firstParagraph\n \t\t_, _, err = s.client.Repositories.CreateFile(ctx, parts[0], parts[1], pathname, &github.RepositoryContentFileOptions{\n \t\t\tMessage: &message,\n \t\t\tContent: content,"
    }
  ]
}
