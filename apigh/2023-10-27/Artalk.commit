{
  "sha": "863b4deec0776e60364012b5c137259fe42937ad",
  "node_id": "C_kwDOCQOkhNoAKDg2M2I0ZGVlYzA3NzZlNjAzNjQwMTJiNWMxMzcyNTlmZTQyOTM3YWQ",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2023-10-27T09:22:22Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2023-10-27T09:23:05Z"
    },
    "message": "refactor(ui/conf): loose coupling between config and list fetch",
    "tree": {
      "sha": "e83e70aef5c8ff0f104297d3bf536e11befa9a94",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/e83e70aef5c8ff0f104297d3bf536e11befa9a94"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/863b4deec0776e60364012b5c137259fe42937ad",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZTuBeQAKCRDUbg8O6nwT\nakxCAP9p76nMBUUoK4jm2OXnnt8DuC8PMcDuDYn3hula0pJxogD/QZ6Y1Bh5+CPT\nRPi+gOcdI4NrymGWI5/qpATxbcwwyws=\n=alis\n-----END PGP SIGNATURE-----",
      "payload": "tree e83e70aef5c8ff0f104297d3bf536e11befa9a94\nparent 6e6fd8d5877db584abbca6e4b906ce8b4bf9a73c\nauthor qwqcode <qwqcode@gmail.com> 1698398542 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1698398585 +0800\n\nrefactor(ui/conf): loose coupling between config and list fetch\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/863b4deec0776e60364012b5c137259fe42937ad",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/863b4deec0776e60364012b5c137259fe42937ad",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/863b4deec0776e60364012b5c137259fe42937ad/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6e6fd8d5877db584abbca6e4b906ce8b4bf9a73c",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/6e6fd8d5877db584abbca6e4b906ce8b4bf9a73c",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/6e6fd8d5877db584abbca6e4b906ce8b4bf9a73c"
    }
  ],
  "stats": {
    "total": 143,
    "additions": 79,
    "deletions": 64
  },
  "files": [
    {
      "sha": "1f0844931d42176f2096922ce109ddf5e0975855",
      "filename": "server/common/conf.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/863b4deec0776e60364012b5c137259fe42937ad/server%2Fcommon%2Fconf.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/863b4deec0776e60364012b5c137259fe42937ad/server%2Fcommon%2Fconf.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/server%2Fcommon%2Fconf.go?ref=863b4deec0776e60364012b5c137259fe42937ad",
      "patch": "@@ -46,5 +46,6 @@ func GetApiPublicConfDataMap(app *core.App, c *fiber.Ctx) Map {\n \treturn Map{\n \t\t\"img_upload\":    imgUpload,\n \t\t\"frontend_conf\": frontendConf,\n+\t\t\"version\":       GetApiVersionDataMap(),\n \t}\n }"
    },
    {
      "sha": "6c713c726d3780a2263020d4b1e25401b905d4a9",
      "filename": "ui/packages/artalk-sidebar/src/App.vue",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk-sidebar%2Fsrc%2FApp.vue",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk-sidebar%2Fsrc%2FApp.vue",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk-sidebar%2Fsrc%2FApp.vue?ref=863b4deec0776e60364012b5c137259fe42937ad",
      "patch": "@@ -15,8 +15,8 @@ onBeforeMount(() => {\n   // 获取语言\n   if (!global.getBootParams().locale) {\n     global.getArtalk().ctx.getApi().system.conf().then(resp => {\n-      if (resp.locale && typeof resp.locale == 'string') {\n-        i18n.locale.value = resp.locale\n+      if (resp.frontend_conf?.locale == 'string') {\n+        i18n.locale.value = resp.frontend_conf.locale\n       }\n     })\n   }"
    },
    {
      "sha": "561e1ca7139f6b0791146e3087d0e65c5c14ce6b",
      "filename": "ui/packages/artalk/src/api/system.ts",
      "status": "modified",
      "additions": 16,
      "deletions": 4,
      "changes": 20,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fapi%2Fsystem.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fapi%2Fsystem.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fapi%2Fsystem.ts?ref=863b4deec0776e60364012b5c137259fe42937ad",
      "patch": "@@ -1,17 +1,29 @@\n import ArtalkConfig from '~/types/artalk-config'\n import ApiBase from './api-base'\n-import { handleBackendRefConf } from '../config'\n+\n+interface ApiVersionInfo {\n+  app: string\n+  version: string\n+  commit_hash: string\n+}\n+\n+interface SystemConfResp {\n+  frontend_conf: Partial<ArtalkConfig>\n+  version: ApiVersionInfo\n+}\n \n /**\n  * 系统 API\n  */\n export default class SystemApi extends ApiBase {\n   /** 获取配置 */\n-  public async conf() {\n+  public async conf(): Promise<SystemConfResp> {\n     const data = await this.POST<any>(`/conf`)\n-    const conf = (data.frontend_conf || {}) as ArtalkConfig\n \n-    return handleBackendRefConf(conf)\n+    return {\n+      frontend_conf: data.frontend_conf,\n+      version: data.version,\n+    }\n   }\n \n   /** 获取配置数据 */"
    },
    {
      "sha": "6cb29d91ce14d452f8b519dd9657fc0ddcefc839",
      "filename": "ui/packages/artalk/src/data.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fdata.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fdata.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fdata.ts?ref=863b4deec0776e60364012b5c137259fe42937ad",
      "patch": "@@ -49,12 +49,12 @@ export class DataManager implements DataManagerApi {\n     this.events.trigger('list-loaded', this.comments)\n   }\n \n-  loadComments(comments: CommentData[]) {\n-    this.events.trigger('list-load', comments)\n+  loadComments(partialComments: CommentData[]) {\n+    this.events.trigger('list-load', partialComments)\n \n-    this.comments = comments\n+    this.comments.push(...partialComments)\n \n-    this.events.trigger('list-loaded', comments)\n+    this.events.trigger('list-loaded', this.comments)\n   }\n \n   insertComment(comment: CommentData) {"
    },
    {
      "sha": "fb4a89ec23a7e57c0a76011119c925bc4837254a",
      "filename": "ui/packages/artalk/src/list/list.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Flist%2Flist.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Flist%2Flist.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Flist%2Flist.ts?ref=863b4deec0776e60364012b5c137259fe42937ad",
      "patch": "@@ -63,6 +63,10 @@ export default class List extends Component {\n       this.getListLayout().import(comments)\n     })\n \n+    this.ctx.on('list-loaded', (comments) => {\n+      if (comments.length === 0) this.$commentsWrap.innerHTML = ''\n+    })\n+\n     // When comment insert\n     this.ctx.on('comment-inserted', (comment) => {\n       this.getListLayout().insert(comment)"
    },
    {
      "sha": "09c6691c18c58fe4a3d9f5d91419c43adcf3c416",
      "filename": "ui/packages/artalk/src/plugins/conf-remoter.ts",
      "status": "added",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fconf-remoter.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fconf-remoter.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fconf-remoter.ts?ref=863b4deec0776e60364012b5c137259fe42937ad",
      "patch": "@@ -0,0 +1,35 @@\n+import type ArtalkConfig from '~/types/artalk-config'\n+import type ArtalkPlugin from '~/types/plugin'\n+import { handleBackendRefConf } from '@/config'\n+\n+export const ConfRemoter: ArtalkPlugin = (ctx) => {\n+  let confLoaded = false\n+\n+  ctx.on('inited', () => {\n+    if (confLoaded) return\n+\n+    ctx.getApi().system.conf().then((data) => {\n+      let conf: Partial<ArtalkConfig> = {\n+        apiVersion: data.version.version, // version info\n+      }\n+\n+      // reference conf from backend\n+      if (ctx.conf.useBackendConf) {\n+        if (!data.frontend_conf) throw new Error('The remote backend does not respond to the frontend conf, but `useBackendConf` conf is enabled')\n+        conf = { ...conf, ...handleBackendRefConf(data.frontend_conf) }\n+      }\n+\n+      ctx.updateConf(conf)\n+\n+      // 评论获取\n+      ctx.fetch({ offset: 0 })\n+    }).catch((err) => {\n+      // TODO show error dialog\n+      window.alert(`[Artalk Error] ${err.msg || String(err)}`)\n+\n+      ctx.updateConf({})\n+    }).finally(() => {\n+      confLoaded = true\n+    })\n+  })\n+}"
    },
    {
      "sha": "a289365d802412b7c95196d385fb461f9fb6203e",
      "filename": "ui/packages/artalk/src/plugins/index.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Findex.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Findex.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Findex.ts?ref=863b4deec0776e60364012b5c137259fe42937ad",
      "patch": "@@ -1,11 +1,13 @@\n import type ArtalkPlugin from '~/types/plugin'\n+import { ConfRemoter } from './conf-remoter'\n import { Markdown } from './markdown'\n import { EditorKit } from './editor-kit'\n import { ListPlugins } from './list'\n import { PvCountWidget } from './stat'\n import { VersionCheck } from './version-check'\n \n export const DefaultPlugins: ArtalkPlugin[] = [\n+  ConfRemoter,\n   Markdown, EditorKit, ...ListPlugins,\n   PvCountWidget, VersionCheck\n ]"
    },
    {
      "sha": "02d3984e87ad32cffe96c3815a98d2f6f94266c2",
      "filename": "ui/packages/artalk/src/plugins/list/error-dialog.ts",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ferror-dialog.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ferror-dialog.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ferror-dialog.ts?ref=863b4deec0776e60364012b5c137259fe42937ad",
      "patch": "@@ -1,6 +1,5 @@\n import type ArtalkPlugin from '~/types/plugin'\n import ContextApi from '~/types/context'\n-import List from '@/list/list'\n import * as Utils from '../../lib/utils'\n import * as Ui from '../../lib/ui'\n import User from '../../lib/user'"
    },
    {
      "sha": "a39e1b351e15deb7cfc6ec580873cf9dbdd811e6",
      "filename": "ui/packages/artalk/src/plugins/list/fetch.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 37,
      "changes": 41,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ffetch.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ffetch.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ffetch.ts?ref=863b4deec0776e60364012b5c137259fe42937ad",
      "patch": "@@ -1,8 +1,5 @@\n-import type ArtalkConfig from '~/types/artalk-config'\n import type { ListFetchParams } from '~/types/artalk-data'\n-import type ContextApi from '~/types/context'\n import type ArtalkPlugin from '~/types/plugin'\n-import { handleBackendRefConf } from '../../config'\n \n export const Fetch: ArtalkPlugin = (ctx) => {\n   ctx.on('list-fetch', (_params) => {\n@@ -26,16 +23,10 @@ export const Fetch: ArtalkPlugin = (ctx) => {\n       .then((data) => {\n         // Must before all other function call and event trigger,\n         // because it will depend on the lastData\n-        // TODO this is global variable, easy to use, but not good, consider to refactor\n+        // TODO this is global variable, easy to use, but not good, consider to refactor.\n+        // refactor work is hard, because it is used in many places.\n         ctx.getData().setListLastFetch({ params, data })\n \n-        // 装载后端提供的配置\n-        loadConf(ctx, {\n-          useBackendConf: ctx.conf.useBackendConf,\n-          conf: data.conf.frontend_conf,\n-          apiVersion: data.api_version.version\n-        })\n-\n         // 装置评论\n         ctx.getData().loadComments(data.comments)\n \n@@ -45,6 +36,7 @@ export const Fetch: ArtalkPlugin = (ctx) => {\n         // 未读消息提示功能\n         ctx.getData().updateUnreads(data.unread || [])\n \n+        // trigger events when success\n         params.onSuccess && params.onSuccess(data)\n \n         ctx.trigger('list-fetched', { params, data })\n@@ -58,36 +50,11 @@ export const Fetch: ArtalkPlugin = (ctx) => {\n \n         params.onError && params.onError(error)\n \n+        // trigger events when error\n         ctx.trigger('list-error', error)\n         ctx.trigger('list-fetched', { params, error })\n \n         throw e\n       })\n   })\n-\n-  // When list load error\n-  ctx.on('list-error', (err) => {\n-    if (!confLoaded) {\n-      ctx.updateConf({})\n-    }\n-  })\n-}\n-\n-let confLoaded = false\n-\n-function loadConf(ctx: ContextApi, apiRes: { useBackendConf: boolean, conf: any, apiVersion: string }) {\n-  if (!confLoaded) { // 仅应用一次配置\n-    let conf: Partial<ArtalkConfig> = {\n-      apiVersion: apiRes.apiVersion\n-    }\n-\n-    // reference conf from backend\n-    if (ctx.conf.useBackendConf) {\n-      if (!apiRes.conf) throw new Error('The remote backend does not respond to the frontend conf, but `useBackendConf` conf is enabled')\n-      conf = { ...conf, ...handleBackendRefConf(apiRes.conf) }\n-    }\n-\n-    ctx.updateConf(conf)\n-    confLoaded = true\n-  }\n }"
    },
    {
      "sha": "66db070345ffab80003f4528356a126ee95cf4af",
      "filename": "ui/packages/artalk/src/plugins/list/goto.ts",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fgoto.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fgoto.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fgoto.ts?ref=863b4deec0776e60364012b5c137259fe42937ad",
      "patch": "@@ -19,11 +19,17 @@ export const Goto: ArtalkPlugin = (ctx) => {\n     delayGoto = true\n   }\n \n-  // bind events\n-  ctx.on('list-loaded', () => { check() })\n-  window.addEventListener('hashchange', () => {\n+  const hashChangeHandler = () => {\n     delayGoto = false\n     check()\n+  }\n+  ctx.on('inited', () => {\n+    window.addEventListener('hashchange', hashChangeHandler)\n+    ctx.on('list-loaded', check)\n+  })\n+  ctx.on('destroy', () => {\n+    window.removeEventListener('hashchange', hashChangeHandler)\n+    ctx.off('list-loaded', check)\n   })\n \n   ctx.on('list-goto', (commentID) => {"
    },
    {
      "sha": "d7e9de137cc1482c3a6ae94a0880b3035ca1b262",
      "filename": "ui/packages/artalk/src/plugins/stat.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fstat.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fstat.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fstat.ts?ref=863b4deec0776e60364012b5c137259fe42937ad",
      "patch": "@@ -9,15 +9,9 @@ export interface CountConf {\n }\n \n export const PvCountWidget: ArtalkPlugin = (ctx: ContextApi) => {\n-  if (!ctx.conf.useBackendConf) {\n-    // 不使用后端配置，在 Artalk 实例被创建后，立刻初始化\n+  ctx.on('conf-loaded', () => {\n     initCountWidget({ ctx, pvAdd: true })\n-  } else {\n-    // 若使用后端配置，需待配置成功获取后 (来自后端设定的 pvEl 等)，再初始化\n-    ctx.on('list-loaded', () => {\n-      initCountWidget({ ctx, pvAdd: true })\n-    })\n-  }\n+  })\n }\n \n /** 初始化评论数和 PV 数量展示元素 */"
    },
    {
      "sha": "676a7f67333caf924dd8ebc9e38e374d40cf902d",
      "filename": "ui/packages/artalk/src/service.ts",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fservice.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/863b4deec0776e60364012b5c137259fe42937ad/ui%2Fpackages%2Fartalk%2Fsrc%2Fservice.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fservice.ts?ref=863b4deec0776e60364012b5c137259fe42937ad",
      "patch": "@@ -56,11 +56,6 @@ const services = {\n     const list = new List(ctx)\n     ctx.$root.appendChild(list.$el)\n \n-    ctx.on('inited', () => {\n-      // 评论获取\n-      ctx.fetch({ offset: 0 })\n-    })\n-\n     return list\n   },\n "
    }
  ]
}
