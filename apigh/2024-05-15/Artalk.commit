{
  "sha": "34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d",
  "node_id": "C_kwDOCQOkhNoAKDM0YjI0YTFmMzZkNDhjMTJjYjhiZDk2NzY4MGUzZDI4YTNmYzJiMWQ",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-05-15T07:43:19Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-05-15T07:43:26Z"
    },
    "message": "fix(ui/height_limit): height limit issue for collapsed comments (#865)",
    "tree": {
      "sha": "6ede00f7ca9724f0b3734d998a882fc6269df8cd",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/6ede00f7ca9724f0b3734d998a882fc6269df8cd"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZkRnqQAKCRDUbg8O6nwT\nalp+AP9yXe2wMXsfILqyMyuHfOCIscEilsww2nDrf3pctxrkXgD+IK1D9ZAmxDsw\nUG34FVAoHtKfMGbsSG9suDAvuak6DQ8=\n=hwBS\n-----END PGP SIGNATURE-----",
      "payload": "tree 6ede00f7ca9724f0b3734d998a882fc6269df8cd\nparent 58657524cffdf0165fa33c05d43c6f8ed555c274\nauthor qwqcode <qwqcode@gmail.com> 1715758999 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1715759006 +0800\n\nfix(ui/height_limit): height limit issue for collapsed comments (#865)\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "58657524cffdf0165fa33c05d43c6f8ed555c274",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/58657524cffdf0165fa33c05d43c6f8ed555c274",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/58657524cffdf0165fa33c05d43c6f8ed555c274"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 9,
    "deletions": 6
  },
  "files": [
    {
      "sha": "8ff9cb2d986681884ad685477dc85293ccf68412",
      "filename": "ui/artalk/src/comment/height-limit.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d/ui%2Fartalk%2Fsrc%2Fcomment%2Fheight-limit.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d/ui%2Fartalk%2Fsrc%2Fcomment%2Fheight-limit.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fcomment%2Fheight-limit.ts?ref=34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d",
      "patch": "@@ -26,8 +26,8 @@ export function check(conf: IHeightLimitConf, rules: THeightLimitRuleSet) {\n   rules.forEach(({ el, max, imgCheck }) => {\n     if (!el) return\n \n-    // set max height to limit the height\n-    if (imgCheck) el.style.maxHeight = `${max + 1}px` // allow 1px more for next detecting\n+    // set max height for avoiding img exceed the limit while loading\n+    if (imgCheck) el.style.maxHeight = `${max + 1}px`  // allow 1px more for next detecting\n \n     let lock = false\n     const _check = () => {\n@@ -50,7 +50,9 @@ export function check(conf: IHeightLimitConf, rules: THeightLimitRuleSet) {\n     // check images after loaded\n     if (imgCheck) {\n       // check again when image loaded\n-      el.querySelectorAll<HTMLImageElement>('.atk-content img').forEach((img) => {\n+      const imgs = el.querySelectorAll<HTMLImageElement>('.atk-content img')\n+      if (imgs.length === 0) el.style.maxHeight = ''\n+      imgs.forEach((img) => {\n         img.onload = () => _check()\n       })\n     }"
    },
    {
      "sha": "f5718cd8b848aba8b3619144551764106c725f18",
      "filename": "ui/artalk/src/lib/marked.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d/ui%2Fartalk%2Fsrc%2Flib%2Fmarked.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d/ui%2Fartalk%2Fsrc%2Flib%2Fmarked.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Flib%2Fmarked.ts?ref=34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d",
      "patch": "@@ -7,7 +7,7 @@ import { getRenderer } from './marked-renderer'\n \n type Replacer = (raw: string) => string\n \n-let instance: (typeof libMarked) | undefined\n+let instance: typeof libMarked | undefined\n let replacers: Replacer[] = []\n \n const markedOptions: MarkedOptions = {"
    },
    {
      "sha": "a011df19c23b015046fcfa0c37b5c83ac72c2ef1",
      "filename": "ui/artalk/src/lib/utils.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d/ui%2Fartalk%2Fsrc%2Flib%2Futils.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d/ui%2Fartalk%2Fsrc%2Flib%2Futils.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Flib%2Futils.ts?ref=34b24a1f36d48c12cb8bd967680e3d28a3fc2b1d",
      "patch": "@@ -4,8 +4,9 @@ export function createElement<E extends HTMLElement = HTMLElement>(htmlStr: stri\n   return (div.firstElementChild || div) as E\n }\n \n-export function getHeight(el: HTMLElement) {\n-  return parseFloat(getComputedStyle(el, null).height.replace('px', ''))\n+export function getHeight(el: HTMLElement): number {\n+  const num = parseFloat(getComputedStyle(el, null).height.replace('px', ''))\n+  return num || 0 // NaN -> 0\n }\n \n export function htmlEncode(str: string) {"
    }
  ]
}
