{
  "sha": "a9b439602b094a694c30d4de47056f3fa2ed9734",
  "node_id": "C_kwDOBtgov9oAKGE5YjQzOTYwMmIwOTRhNjk0YzMwZDRkZTQ3MDU2ZjNmYTJlZDk3MzQ",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2024-07-30T22:35:54Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2024-07-31T01:23:33Z"
    },
    "message": "update go modules",
    "tree": {
      "sha": "1d45499f52a9fc1b4874b0462dd25f41aed7232a",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/1d45499f52a9fc1b4874b0462dd25f41aed7232a"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/a9b439602b094a694c30d4de47056f3fa2ed9734",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/a9b439602b094a694c30d4de47056f3fa2ed9734",
  "html_url": "https://github.com/umputun/remark42/commit/a9b439602b094a694c30d4de47056f3fa2ed9734",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/a9b439602b094a694c30d4de47056f3fa2ed9734/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d2027f52415a58c0ff7fada15a28d31661170015",
      "url": "https://api.github.com/repos/umputun/remark42/commits/d2027f52415a58c0ff7fada15a28d31661170015",
      "html_url": "https://github.com/umputun/remark42/commit/d2027f52415a58c0ff7fada15a28d31661170015"
    }
  ],
  "stats": {
    "total": 83264,
    "additions": 17042,
    "deletions": 66222
  },
  "files": [
    {
      "sha": "99a47968f72657a00806716ccdbabc843f600ba9",
      "filename": "backend/_example/memory_store/go.mod",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.mod?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -5,37 +5,37 @@ go 1.21\n require (\n \tgithub.com/go-pkgz/jrpc v0.3.0\n \tgithub.com/go-pkgz/lgr v0.11.1\n-\tgithub.com/jessevdk/go-flags v1.5.0\n+\tgithub.com/jessevdk/go-flags v1.6.1\n \tgithub.com/stretchr/testify v1.9.0\n \tgithub.com/umputun/remark42/backend v1.1000.0\n )\n \n require (\n \tgithub.com/Depado/bfchroma/v2 v2.0.0 // indirect\n-\tgithub.com/PuerkitoBio/goquery v1.9.1 // indirect\n+\tgithub.com/PuerkitoBio/goquery v1.9.2 // indirect\n \tgithub.com/ajg/form v1.5.1 // indirect\n \tgithub.com/alecthomas/chroma/v2 v2.13.0 // indirect\n \tgithub.com/andybalholm/cascadia v1.3.2 // indirect\n \tgithub.com/aymerick/douceur v0.2.0 // indirect\n \tgithub.com/davecgh/go-spew v1.1.1 // indirect\n-\tgithub.com/didip/tollbooth/v7 v7.0.1 // indirect\n+\tgithub.com/didip/tollbooth/v7 v7.0.2 // indirect\n \tgithub.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f // indirect\n \tgithub.com/dlclark/regexp2 v1.11.0 // indirect\n-\tgithub.com/go-chi/chi/v5 v5.0.12 // indirect\n+\tgithub.com/go-chi/chi/v5 v5.1.0 // indirect\n \tgithub.com/go-chi/render v1.0.3 // indirect\n-\tgithub.com/go-pkgz/expirable-cache v1.0.0 // indirect\n+\tgithub.com/go-pkgz/expirable-cache/v3 v3.0.0 // indirect\n \tgithub.com/go-pkgz/rest v1.19.0 // indirect\n \tgithub.com/gorilla/css v1.0.1 // indirect\n \tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n \tgithub.com/hashicorp/go-multierror v1.1.1 // indirect\n-\tgithub.com/microcosm-cc/bluemonday v1.0.26 // indirect\n+\tgithub.com/microcosm-cc/bluemonday v1.0.27 // indirect\n \tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n \tgithub.com/rs/xid v1.5.0 // indirect\n \tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n-\tgo.etcd.io/bbolt v1.3.9 // indirect\n-\tgolang.org/x/image v0.15.0 // indirect\n-\tgolang.org/x/net v0.24.0 // indirect\n-\tgolang.org/x/sys v0.19.0 // indirect\n+\tgo.etcd.io/bbolt v1.3.10 // indirect\n+\tgolang.org/x/image v0.18.0 // indirect\n+\tgolang.org/x/net v0.27.0 // indirect\n+\tgolang.org/x/sys v0.22.0 // indirect\n \tgopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15 // indirect\n \tgopkg.in/yaml.v3 v3.0.1 // indirect\n )"
    },
    {
      "sha": "f9c642cb9a65a554b021bb4ee712c8fdcf22582a",
      "filename": "backend/_example/memory_store/go.sum",
      "status": "modified",
      "additions": 24,
      "deletions": 23,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.sum?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,7 +1,7 @@\n github.com/Depado/bfchroma/v2 v2.0.0 h1:IRpN9BPkNwEpR6w1ectIcNWOuhDSLx+8f1pn83fzxx8=\n github.com/Depado/bfchroma/v2 v2.0.0/go.mod h1:wFwW/Pw8Tnd0irzgO9Zxtxgzp3aPS8qBWlyadxujxmw=\n-github.com/PuerkitoBio/goquery v1.9.1 h1:mTL6XjbJTZdpfL+Gwl5U2h1l9yEkJjhmlTeV9VPW7UI=\n-github.com/PuerkitoBio/goquery v1.9.1/go.mod h1:cW1n6TmIMDoORQU5IU/P1T3tGFunOeXEpGP2WHRwkbY=\n+github.com/PuerkitoBio/goquery v1.9.2 h1:4/wZksC3KgkQw7SQgkKotmKljk0M6V8TUvA8Wb4yPeE=\n+github.com/PuerkitoBio/goquery v1.9.2/go.mod h1:GHPCaP0ODyyxqcNoFGYlAprUFH81NuRPd0GX3Zu2Mvk=\n github.com/ajg/form v1.5.1 h1:t9c7v8JUKu/XxOGBU0yjNpaMloxGEJhUkqFRq0ibGeU=\n github.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\n github.com/alecthomas/assert/v2 v2.6.0 h1:o3WJwILtexrEUk3cUVal3oiQY2tfgr/FHWiz/v2n4FU=\n@@ -18,21 +18,21 @@ github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSs\n github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\n github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/didip/tollbooth/v7 v7.0.0/go.mod h1:VZhDSGl5bDSPj4wPsih3PFa4Uh9Ghv8hgacaTm5PRT4=\n-github.com/didip/tollbooth/v7 v7.0.1 h1:TkT4sBKoQoHQFPf7blQ54iHrZiTDnr8TceU+MulVAog=\n-github.com/didip/tollbooth/v7 v7.0.1/go.mod h1:VZhDSGl5bDSPj4wPsih3PFa4Uh9Ghv8hgacaTm5PRT4=\n+github.com/didip/tollbooth/v7 v7.0.2 h1:WYEfusYI6g64cN0qbZgekDrYfuYBZjUZd5+RlWi69p4=\n+github.com/didip/tollbooth/v7 v7.0.2/go.mod h1:RtRYfEmFGX70+ike5kSndSvLtQ3+F2EAmTI4Un/VXNc=\n github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f h1:jtKwihcLmUC9BAhoJ9adCUqdSSZcOdH2KL7mPTUm2aw=\n github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f/go.mod h1:q9C80dnsuVRP2dAskjnXRNWdUJqtGgwG9wNrzt0019s=\n github.com/dlclark/regexp2 v1.11.0 h1:G/nrcoOa7ZXlpoa/91N3X7mM3r8eIlMBBJZvsz/mxKI=\n github.com/dlclark/regexp2 v1.11.0/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\n github.com/go-chi/chi/v5 v5.0.7/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n-github.com/go-chi/chi/v5 v5.0.12 h1:9euLV5sTrTNTRUU9POmDUvfxyj6LAABLUcEWO+JJb4s=\n-github.com/go-chi/chi/v5 v5.0.12/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n+github.com/go-chi/chi/v5 v5.1.0 h1:acVI1TYaD+hhedDJ3r54HyA6sExp3HfXq7QWEEY/xMw=\n+github.com/go-chi/chi/v5 v5.1.0/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n github.com/go-chi/render v1.0.1/go.mod h1:pq4Rr7HbnsdaeHagklXub+p6Wd16Af5l9koip1OvJns=\n github.com/go-chi/render v1.0.3 h1:AsXqd2a1/INaIfUSKq3G5uA8weYx20FOsM7uSoCyyt4=\n github.com/go-chi/render v1.0.3/go.mod h1:/gr3hVkmYR0YlEy3LxCuVRFzEu9Ruok+gFqbIofjao0=\n github.com/go-pkgz/expirable-cache v0.1.0/go.mod h1:GTrEl0X+q0mPNqN6dtcQXksACnzCBQ5k/k1SwXJsZKs=\n-github.com/go-pkgz/expirable-cache v1.0.0 h1:ns5+1hjY8hntGv8bPaQd9Gr7Jyo+Uw5SLyII40aQdtA=\n-github.com/go-pkgz/expirable-cache v1.0.0/go.mod h1:GTrEl0X+q0mPNqN6dtcQXksACnzCBQ5k/k1SwXJsZKs=\n+github.com/go-pkgz/expirable-cache/v3 v3.0.0 h1:u3/gcu3sabLYiTCevoRKv+WzjIn5oo7P8XtiXBeRDLw=\n+github.com/go-pkgz/expirable-cache/v3 v3.0.0/go.mod h1:2OQiDyEGQalYecLWmXprm3maPXeVb5/6/X7yRPYTzec=\n github.com/go-pkgz/jrpc v0.3.0 h1:Fls38KqPsHzvp0FWfivr6cGnncC+iFBodHBqvUPY+0U=\n github.com/go-pkgz/jrpc v0.3.0/go.mod h1:MFtKs75JESiSqVicsQkgN2iDFFuCd3gVT1/vKiwRi00=\n github.com/go-pkgz/lgr v0.11.1 h1:hXFhZcznehI6imLhEa379oMOKFz7TQUmisAqb3oLOSM=\n@@ -47,17 +47,19 @@ github.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY\n github.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\n github.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\n github.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\n+github.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=\n+github.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=\n github.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\n github.com/hexops/gotextdiff v1.0.3/go.mod h1:pSWU5MAI3yDq+fZBTazCSJysOMbxWL1BSow5/V2vxeg=\n-github.com/jessevdk/go-flags v1.5.0 h1:1jKYvbxEjfUl0fmqTCOfonvskHHXMjBySTLW4y9LFvc=\n-github.com/jessevdk/go-flags v1.5.0/go.mod h1:Fw0T6WPc1dYxT4mKEZRfG5kJhaTDP9pj1c2EWnYs/m4=\n+github.com/jessevdk/go-flags v1.6.1 h1:Cvu5U8UGrLay1rZfv/zP7iLpSHGUZ/Ou68T0iX1bBK4=\n+github.com/jessevdk/go-flags v1.6.1/go.mod h1:Mk8T1hIAWpOiJiHa9rJASDK2UGWji0EuPGBnNLMooyc=\n github.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\n github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\n github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\n github.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\n github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\n-github.com/microcosm-cc/bluemonday v1.0.26 h1:xbqSvqzQMeEHCqMi64VAs4d8uy6Mequs3rQ0k/Khz58=\n-github.com/microcosm-cc/bluemonday v1.0.26/go.mod h1:JyzOCs9gkyQyjs+6h10UEVSe02CGwkhd72Xdqh78TWs=\n+github.com/microcosm-cc/bluemonday v1.0.27 h1:MpEUotklkwCSLeH+Qdx1VJgNqLlpY2KXwXFM08ygZfk=\n+github.com/microcosm-cc/bluemonday v1.0.27/go.mod h1:jFi9vgW+H7c3V0lb6nR74Ib/DIB5OBs92Dimizgw2cA=\n github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n@@ -73,36 +75,35 @@ github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO\n github.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\n github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\n github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\n-go.etcd.io/bbolt v1.3.9 h1:8x7aARPEXiXbHmtUwAIv7eV2fQFHrLLavdiJ3uzJXoI=\n-go.etcd.io/bbolt v1.3.9/go.mod h1:zaO32+Ti0PK1ivdPtgMESzuzL2VPoIG1PCQNvOdo/dE=\n+go.etcd.io/bbolt v1.3.10 h1:+BqfJTcCzTItrop8mq/lbzL8wSGtj94UO/3U31shqG0=\n+go.etcd.io/bbolt v1.3.10/go.mod h1:bK3UQLPJZly7IlNmV7uVHJDxfe5aK9Ll93e/74Y9oEQ=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\n-golang.org/x/image v0.15.0 h1:kOELfmgrmJlw4Cdb7g/QGuB3CvDrXbqEIww/pNtNBm8=\n-golang.org/x/image v0.15.0/go.mod h1:HUYqC05R2ZcZ3ejNQsIHQDQiwWM4JBqmm6MKANTp4LE=\n+golang.org/x/image v0.18.0 h1:jGzIakQa/ZXI1I0Fxvaa9W7yP25TqT6cHIHn+6CqvSQ=\n+golang.org/x/image v0.18.0/go.mod h1:4yyo5vMFQjVjUcVk4jEQcU9MGy/rulF5WvUILseCM2E=\n golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\n golang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\n golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\n golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\n golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n golang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=\n-golang.org/x/net v0.24.0 h1:1PcaxkF854Fu3+lvBIx5SYn9wRlBzzcnHZSiaFFAb0w=\n-golang.org/x/net v0.24.0/go.mod h1:2Q7sJY5mzlzWjKtYUEXSlBWCdyaioyXzRB2RtU8KVE8=\n+golang.org/x/net v0.27.0 h1:5K3Njcw06/l2y9vpGCSdcxWOYHOUk3dVNGDXN+FvAys=\n+golang.org/x/net v0.27.0/go.mod h1:dDi0PyhWNoiUOrAS8uXv/vnScO4wnHQO4mj9fn/RytE=\n golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n-golang.org/x/sync v0.6.0 h1:5BMeUDZ7vkXGfEr1x9B4bRcTH4lpkTkpdh0T/J+qjbQ=\n-golang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\n+golang.org/x/sync v0.7.0 h1:YsImfSBoP9QPYL0xyKJPq0gcaJdG3rInoqxTWbfQu9M=\n+golang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\n golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.19.0 h1:q5f1RH2jigJ1MoAWp2KTp3gm5zAGFUTarQZ5U386+4o=\n-golang.org/x/sys v0.19.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n+golang.org/x/sys v0.22.0 h1:RI27ohtqKCnwULzJLqkv897zojh5/DwS/ENaMzUOaWI=\n+golang.org/x/sys v0.22.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\n golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k="
    },
    {
      "sha": "fc9330e3b2f4616789c85baf1dd1bcb99f1705ef",
      "filename": "backend/go.mod",
      "status": "modified",
      "additions": 24,
      "deletions": 28,
      "changes": 52,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.mod?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -4,42 +4,41 @@ go 1.21\n \n require (\n \tgithub.com/Depado/bfchroma/v2 v2.0.0\n-\tgithub.com/PuerkitoBio/goquery v1.9.1\n+\tgithub.com/PuerkitoBio/goquery v1.9.2\n \tgithub.com/alecthomas/chroma/v2 v2.13.0\n-\tgithub.com/didip/tollbooth/v7 v7.0.1\n+\tgithub.com/didip/tollbooth/v7 v7.0.2\n \tgithub.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f\n-\tgithub.com/go-chi/chi/v5 v5.0.12\n+\tgithub.com/go-chi/chi/v5 v5.1.0\n \tgithub.com/go-chi/cors v1.2.1\n \tgithub.com/go-chi/render v1.0.3\n-\tgithub.com/go-pkgz/auth v1.23.0\n+\tgithub.com/go-pkgz/auth v1.24.0\n \tgithub.com/go-pkgz/jrpc v0.3.0\n \tgithub.com/go-pkgz/lcw/v2 v2.0.0\n \tgithub.com/go-pkgz/lgr v0.11.1\n-\tgithub.com/go-pkgz/notify v1.1.0\n+\tgithub.com/go-pkgz/notify v1.1.1\n \tgithub.com/go-pkgz/repeater v1.1.3\n \tgithub.com/go-pkgz/rest v1.19.0\n \tgithub.com/go-pkgz/syncs v1.3.2\n \tgithub.com/golang-jwt/jwt v3.2.2+incompatible\n \tgithub.com/google/uuid v1.6.0\n-\tgithub.com/gorilla/feeds v1.1.2\n+\tgithub.com/gorilla/feeds v1.2.0\n \tgithub.com/hashicorp/go-multierror v1.1.1\n-\tgithub.com/jessevdk/go-flags v1.5.0\n-\tgithub.com/kyokomi/emoji/v2 v2.2.12\n-\tgithub.com/microcosm-cc/bluemonday v1.0.26\n+\tgithub.com/jessevdk/go-flags v1.6.1\n+\tgithub.com/kyokomi/emoji/v2 v2.2.13\n+\tgithub.com/microcosm-cc/bluemonday v1.0.27\n \tgithub.com/rs/xid v1.5.0\n \tgithub.com/russross/blackfriday/v2 v2.1.0\n \tgithub.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e\n \tgithub.com/stretchr/testify v1.9.0\n-\tgo.etcd.io/bbolt v1.3.9\n+\tgo.etcd.io/bbolt v1.3.10\n \tgo.uber.org/goleak v1.3.0\n-\tgolang.org/x/crypto v0.22.0\n-\tgolang.org/x/image v0.15.0\n-\tgolang.org/x/net v0.24.0\n+\tgolang.org/x/crypto v0.25.0\n+\tgolang.org/x/image v0.18.0\n+\tgolang.org/x/net v0.27.0\n )\n \n require (\n-\tcloud.google.com/go/compute v1.25.1 // indirect\n-\tcloud.google.com/go/compute/metadata v0.2.3 // indirect\n+\tcloud.google.com/go/compute/metadata v0.5.0 // indirect\n \tgithub.com/ajg/form v1.5.1 // indirect\n \tgithub.com/andybalholm/cascadia v1.3.2 // indirect\n \tgithub.com/aymerick/douceur v0.2.0 // indirect\n@@ -50,29 +49,26 @@ require (\n \tgithub.com/dlclark/regexp2 v1.11.0 // indirect\n \tgithub.com/go-oauth2/oauth2/v4 v4.5.2 // indirect\n \tgithub.com/go-pkgz/email v0.5.0 // indirect\n-\tgithub.com/go-pkgz/expirable-cache v1.0.0 // indirect\n-\tgithub.com/golang/protobuf v1.5.4 // indirect\n+\tgithub.com/go-pkgz/expirable-cache/v3 v3.0.0 // indirect\n \tgithub.com/golang/snappy v0.0.4 // indirect\n \tgithub.com/gorilla/css v1.0.1 // indirect\n-\tgithub.com/gorilla/websocket v1.5.1 // indirect\n+\tgithub.com/gorilla/websocket v1.5.3 // indirect\n \tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n \tgithub.com/hashicorp/golang-lru/v2 v2.0.7 // indirect\n-\tgithub.com/klauspost/compress v1.17.7 // indirect\n+\tgithub.com/klauspost/compress v1.17.9 // indirect\n \tgithub.com/montanaflynn/stats v0.7.1 // indirect\n \tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n \tgithub.com/redis/go-redis/v9 v9.4.0 // indirect\n \tgithub.com/rrivera/identicon v0.0.0-20240116195454-d5ba35832c0d // indirect\n-\tgithub.com/slack-go/slack v0.12.4 // indirect\n+\tgithub.com/slack-go/slack v0.12.5 // indirect\n \tgithub.com/xdg-go/pbkdf2 v1.0.0 // indirect\n \tgithub.com/xdg-go/scram v1.1.2 // indirect\n \tgithub.com/xdg-go/stringprep v1.0.4 // indirect\n-\tgithub.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a // indirect\n-\tgo.mongodb.org/mongo-driver v1.14.0 // indirect\n-\tgolang.org/x/oauth2 v0.18.0 // indirect\n-\tgolang.org/x/sync v0.6.0 // indirect\n-\tgolang.org/x/sys v0.19.0 // indirect\n-\tgolang.org/x/text v0.14.0 // indirect\n-\tgoogle.golang.org/appengine v1.6.8 // indirect\n-\tgoogle.golang.org/protobuf v1.33.0 // indirect\n+\tgithub.com/youmark/pkcs8 v0.0.0-20240726163527-a2c0da244d78 // indirect\n+\tgo.mongodb.org/mongo-driver v1.16.0 // indirect\n+\tgolang.org/x/oauth2 v0.21.0 // indirect\n+\tgolang.org/x/sync v0.7.0 // indirect\n+\tgolang.org/x/sys v0.22.0 // indirect\n+\tgolang.org/x/text v0.16.0 // indirect\n \tgopkg.in/yaml.v3 v3.0.1 // indirect\n )"
    },
    {
      "sha": "44255892285102f9b64ee8971c7787215d0fc353",
      "filename": "backend/go.sum",
      "status": "modified",
      "additions": 50,
      "deletions": 67,
      "changes": 117,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.sum?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,12 +1,10 @@\n cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\n-cloud.google.com/go/compute v1.25.1 h1:ZRpHJedLtTpKgr3RV1Fx23NuaAEN1Zfx9hw1u4aJdjU=\n-cloud.google.com/go/compute v1.25.1/go.mod h1:oopOIR53ly6viBYxaDhBfJwzUAxf1zE//uf3IB011ls=\n-cloud.google.com/go/compute/metadata v0.2.3 h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=\n-cloud.google.com/go/compute/metadata v0.2.3/go.mod h1:VAV5nSsACxMJvgaAuX6Pk2AawlZn8kiOGuCv6gTkwuA=\n+cloud.google.com/go/compute/metadata v0.5.0 h1:Zr0eK8JbFv6+Wi4ilXAR8FJ3wyNdpxHKJNPos6LTZOY=\n+cloud.google.com/go/compute/metadata v0.5.0/go.mod h1:aHnloV2TPI38yx4s9+wAZhHykWvVCfu7hQbF+9CWoiY=\n github.com/Depado/bfchroma/v2 v2.0.0 h1:IRpN9BPkNwEpR6w1ectIcNWOuhDSLx+8f1pn83fzxx8=\n github.com/Depado/bfchroma/v2 v2.0.0/go.mod h1:wFwW/Pw8Tnd0irzgO9Zxtxgzp3aPS8qBWlyadxujxmw=\n-github.com/PuerkitoBio/goquery v1.9.1 h1:mTL6XjbJTZdpfL+Gwl5U2h1l9yEkJjhmlTeV9VPW7UI=\n-github.com/PuerkitoBio/goquery v1.9.1/go.mod h1:cW1n6TmIMDoORQU5IU/P1T3tGFunOeXEpGP2WHRwkbY=\n+github.com/PuerkitoBio/goquery v1.9.2 h1:4/wZksC3KgkQw7SQgkKotmKljk0M6V8TUvA8Wb4yPeE=\n+github.com/PuerkitoBio/goquery v1.9.2/go.mod h1:GHPCaP0ODyyxqcNoFGYlAprUFH81NuRPd0GX3Zu2Mvk=\n github.com/ajg/form v1.5.1 h1:t9c7v8JUKu/XxOGBU0yjNpaMloxGEJhUkqFRq0ibGeU=\n github.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\n github.com/alecthomas/assert/v2 v2.6.0 h1:o3WJwILtexrEUk3cUVal3oiQY2tfgr/FHWiz/v2n4FU=\n@@ -39,8 +37,8 @@ github.com/dghubble/oauth1 v0.7.3/go.mod h1:oxTe+az9NSMIucDPDCCtzJGsPhciJV33xocH\n github.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f h1:lO4WD4F/rVNCu3HqELle0jiPLLBs70cWOduZpkS1E78=\n github.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f/go.mod h1:cuUVRXasLTGF7a8hSLbxyZXjz+1KgoB3wDUb6vlszIc=\n github.com/didip/tollbooth/v7 v7.0.0/go.mod h1:VZhDSGl5bDSPj4wPsih3PFa4Uh9Ghv8hgacaTm5PRT4=\n-github.com/didip/tollbooth/v7 v7.0.1 h1:TkT4sBKoQoHQFPf7blQ54iHrZiTDnr8TceU+MulVAog=\n-github.com/didip/tollbooth/v7 v7.0.1/go.mod h1:VZhDSGl5bDSPj4wPsih3PFa4Uh9Ghv8hgacaTm5PRT4=\n+github.com/didip/tollbooth/v7 v7.0.2 h1:WYEfusYI6g64cN0qbZgekDrYfuYBZjUZd5+RlWi69p4=\n+github.com/didip/tollbooth/v7 v7.0.2/go.mod h1:RtRYfEmFGX70+ike5kSndSvLtQ3+F2EAmTI4Un/VXNc=\n github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f h1:jtKwihcLmUC9BAhoJ9adCUqdSSZcOdH2KL7mPTUm2aw=\n github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f/go.mod h1:q9C80dnsuVRP2dAskjnXRNWdUJqtGgwG9wNrzt0019s=\n github.com/dlclark/regexp2 v1.11.0 h1:G/nrcoOa7ZXlpoa/91N3X7mM3r8eIlMBBJZvsz/mxKI=\n@@ -53,30 +51,30 @@ github.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4\n github.com/gavv/httpexpect v2.0.0+incompatible h1:1X9kcRshkSKEjNJJxX9Y9mQ5BRfbxU5kORdjhlA1yX8=\n github.com/gavv/httpexpect v2.0.0+incompatible/go.mod h1:x+9tiU1YnrOvnB725RkpoLv1M62hOWzwo5OXotisrKc=\n github.com/go-chi/chi/v5 v5.0.7/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n-github.com/go-chi/chi/v5 v5.0.12 h1:9euLV5sTrTNTRUU9POmDUvfxyj6LAABLUcEWO+JJb4s=\n-github.com/go-chi/chi/v5 v5.0.12/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n+github.com/go-chi/chi/v5 v5.1.0 h1:acVI1TYaD+hhedDJ3r54HyA6sExp3HfXq7QWEEY/xMw=\n+github.com/go-chi/chi/v5 v5.1.0/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n github.com/go-chi/cors v1.2.1 h1:xEC8UT3Rlp2QuWNEr4Fs/c2EAGVKBwy/1vHx3bppil4=\n github.com/go-chi/cors v1.2.1/go.mod h1:sSbTewc+6wYHBBCW7ytsFSn836hqM7JxpglAy2Vzc58=\n github.com/go-chi/render v1.0.1/go.mod h1:pq4Rr7HbnsdaeHagklXub+p6Wd16Af5l9koip1OvJns=\n github.com/go-chi/render v1.0.3 h1:AsXqd2a1/INaIfUSKq3G5uA8weYx20FOsM7uSoCyyt4=\n github.com/go-chi/render v1.0.3/go.mod h1:/gr3hVkmYR0YlEy3LxCuVRFzEu9Ruok+gFqbIofjao0=\n github.com/go-oauth2/oauth2/v4 v4.5.2 h1:CuZhD3lhGuI6aNLyUbRHXsgG2RwGRBOuCBfd4WQKqBQ=\n github.com/go-oauth2/oauth2/v4 v4.5.2/go.mod h1:wk/2uLImWIa9VVQDgxz99H2GDbhmfi/9/Xr+GvkSUSQ=\n-github.com/go-pkgz/auth v1.23.0 h1:jv/HaXKPL31p+SpEXYaGmROAEUWl5nWt/mQ31DCs7Y4=\n-github.com/go-pkgz/auth v1.23.0/go.mod h1:2j8ln0c2TbCuhVCvcqh8mZC7ap5r1brNXkbF/VHi0F4=\n+github.com/go-pkgz/auth v1.24.0 h1:jo7Ke18nFGTWHdzmMKeF8zqXIC383Ptu/OXCkcQOZmI=\n+github.com/go-pkgz/auth v1.24.0/go.mod h1:xmnzq6g8mhemW1nHnkuByXkBXsHrNf9/qkiVwJugWIs=\n github.com/go-pkgz/email v0.5.0 h1:fdtMDGJ8NwyBACLR0LYHaCIK/OeUwZHMhH7Q0+oty9U=\n github.com/go-pkgz/email v0.5.0/go.mod h1:BdxglsQnymzhfdbnncEE72a6DrucZHy6I+42LK2jLEc=\n github.com/go-pkgz/expirable-cache v0.1.0/go.mod h1:GTrEl0X+q0mPNqN6dtcQXksACnzCBQ5k/k1SwXJsZKs=\n-github.com/go-pkgz/expirable-cache v1.0.0 h1:ns5+1hjY8hntGv8bPaQd9Gr7Jyo+Uw5SLyII40aQdtA=\n-github.com/go-pkgz/expirable-cache v1.0.0/go.mod h1:GTrEl0X+q0mPNqN6dtcQXksACnzCBQ5k/k1SwXJsZKs=\n+github.com/go-pkgz/expirable-cache/v3 v3.0.0 h1:u3/gcu3sabLYiTCevoRKv+WzjIn5oo7P8XtiXBeRDLw=\n+github.com/go-pkgz/expirable-cache/v3 v3.0.0/go.mod h1:2OQiDyEGQalYecLWmXprm3maPXeVb5/6/X7yRPYTzec=\n github.com/go-pkgz/jrpc v0.3.0 h1:Fls38KqPsHzvp0FWfivr6cGnncC+iFBodHBqvUPY+0U=\n github.com/go-pkgz/jrpc v0.3.0/go.mod h1:MFtKs75JESiSqVicsQkgN2iDFFuCd3gVT1/vKiwRi00=\n github.com/go-pkgz/lcw/v2 v2.0.0 h1:gTwXpiJBhQeA1rXuqkRuLcV79uATFna8CckH8ZBBrH0=\n github.com/go-pkgz/lcw/v2 v2.0.0/go.mod h1:yxJHOn+IbQBQHxUqkCtMrbGjIfdYcsBAZcVCBaL1Va8=\n github.com/go-pkgz/lgr v0.11.1 h1:hXFhZcznehI6imLhEa379oMOKFz7TQUmisAqb3oLOSM=\n github.com/go-pkgz/lgr v0.11.1/go.mod h1:tgDF4RXQnBfIgJqjgkv0yOeTQ3F1yewWIZkpUhHnAkU=\n-github.com/go-pkgz/notify v1.1.0 h1:xdMKoY7W5t9lewGzn61yM6Z6oWafPiPS1WtAMO81p2k=\n-github.com/go-pkgz/notify v1.1.0/go.mod h1:TbqcFbamfJZlhlqXkGz87rCb7sJ0uGm+b7EcMCMz918=\n+github.com/go-pkgz/notify v1.1.1 h1:xjd5r0a9WUIKutrHkHfuNWdoXZsm84WNAoG35MD8QZA=\n+github.com/go-pkgz/notify v1.1.1/go.mod h1:8ri5Zx+IAjc87HB9kF9+KnVTm0yO5agsphvPbcRo54U=\n github.com/go-pkgz/repeater v1.1.3 h1:q6+JQF14ESSy28Dd7F+wRelY4F+41HJ0LEy/szNnMiE=\n github.com/go-pkgz/repeater v1.1.3/go.mod h1:hVTavuO5x3Gxnu8zW7d6sQBfAneKV8X2FjU48kGfpKw=\n github.com/go-pkgz/rest v1.15.6/go.mod h1:KUWAqbDteYGS/CiXftomQsKjtEOifXsJ36Ka0skYbmk=\n@@ -98,16 +96,11 @@ github.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrU\n github.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\n github.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\n github.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\n-github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\n-github.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\n-github.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\n-github.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\n github.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\n github.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\n github.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\n github.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\n github.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n-github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n github.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=\n github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\n github.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\n@@ -119,11 +112,11 @@ github.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+\n github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\n github.com/gorilla/css v1.0.1 h1:ntNaBIghp6JmvWnxbZKANoLyuXTPZ4cAMlo6RyhlbO8=\n github.com/gorilla/css v1.0.1/go.mod h1:BvnYkspnSzMmwRK+b8/xgNPLiIuNZr6vbZBTPQ2A3b0=\n-github.com/gorilla/feeds v1.1.2 h1:pxzZ5PD3RJdhFH2FsJJ4x6PqMqbgFk1+Vez4XWBW8Iw=\n-github.com/gorilla/feeds v1.1.2/go.mod h1:WMib8uJP3BbY+X8Szd1rA5Pzhdfh+HCCAYT2z7Fza6Y=\n+github.com/gorilla/feeds v1.2.0 h1:O6pBiXJ5JHhPvqy53NsjKOThq+dNFm8+DFrxBEdzSCc=\n+github.com/gorilla/feeds v1.2.0/go.mod h1:WMib8uJP3BbY+X8Szd1rA5Pzhdfh+HCCAYT2z7Fza6Y=\n github.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\n-github.com/gorilla/websocket v1.5.1 h1:gmztn0JnHVt9JZquRuzLw3g4wouNVzKL15iLr/zn/QY=\n-github.com/gorilla/websocket v1.5.1/go.mod h1:x3kM2JMyaluk02fnUJpQuwD2dCS5NDG2ZHL0uE0tcaY=\n+github.com/gorilla/websocket v1.5.3 h1:saDtZ6Pbx/0u+bgYQ3q96pZgCzfhKXGPqt7kZ72aNNg=\n+github.com/gorilla/websocket v1.5.3/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\n github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\n github.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\n github.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\n@@ -136,26 +129,26 @@ github.com/hexops/gotextdiff v1.0.3/go.mod h1:pSWU5MAI3yDq+fZBTazCSJysOMbxWL1BSo\n github.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\n github.com/imkira/go-interpol v1.1.0 h1:KIiKr0VSG2CUW1hl1jpiyuzuJeKUUpC8iM1AIE7N1Vk=\n github.com/imkira/go-interpol v1.1.0/go.mod h1:z0h2/2T3XF8kyEPpRgJ3kmNv+C43p+I/CoI+jC3w2iA=\n-github.com/jessevdk/go-flags v1.5.0 h1:1jKYvbxEjfUl0fmqTCOfonvskHHXMjBySTLW4y9LFvc=\n-github.com/jessevdk/go-flags v1.5.0/go.mod h1:Fw0T6WPc1dYxT4mKEZRfG5kJhaTDP9pj1c2EWnYs/m4=\n+github.com/jessevdk/go-flags v1.6.1 h1:Cvu5U8UGrLay1rZfv/zP7iLpSHGUZ/Ou68T0iX1bBK4=\n+github.com/jessevdk/go-flags v1.6.1/go.mod h1:Mk8T1hIAWpOiJiHa9rJASDK2UGWji0EuPGBnNLMooyc=\n github.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\n github.com/k0kubun/colorstring v0.0.0-20150214042306-9440f1994b88/go.mod h1:3w7q1U84EfirKl04SVQ/s7nPm1ZPhiXd34z40TNz36k=\n github.com/klauspost/compress v1.15.0/go.mod h1:/3/Vjq9QcHkK5uEr5lBEmyoZ1iFhe47etQ6QUkpK6sk=\n-github.com/klauspost/compress v1.17.7 h1:ehO88t2UGzQK66LMdE8tibEd1ErmzZjNEqWkjLAKQQg=\n-github.com/klauspost/compress v1.17.7/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\n+github.com/klauspost/compress v1.17.9 h1:6KIumPrER1LHsvBVuDa0r5xaG0Es51mhhB9BQB2qeMA=\n+github.com/klauspost/compress v1.17.9/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\n github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\n github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\n github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\n github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\n github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\n github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\n github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\n-github.com/kyokomi/emoji/v2 v2.2.12 h1:sSVA5nH9ebR3Zji1o31wu3yOwD1zKXQA2z0zUyeit60=\n-github.com/kyokomi/emoji/v2 v2.2.12/go.mod h1:JUcn42DTdsXJo1SWanHh4HKDEyPaR5CqkmoirZZP9qE=\n+github.com/kyokomi/emoji/v2 v2.2.13 h1:GhTfQa67venUUvmleTNFnb+bi7S3aocF7ZCXU9fSO7U=\n+github.com/kyokomi/emoji/v2 v2.2.13/go.mod h1:JUcn42DTdsXJo1SWanHh4HKDEyPaR5CqkmoirZZP9qE=\n github.com/mattn/go-colorable v0.1.7/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\n github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\n-github.com/microcosm-cc/bluemonday v1.0.26 h1:xbqSvqzQMeEHCqMi64VAs4d8uy6Mequs3rQ0k/Khz58=\n-github.com/microcosm-cc/bluemonday v1.0.26/go.mod h1:JyzOCs9gkyQyjs+6h10UEVSe02CGwkhd72Xdqh78TWs=\n+github.com/microcosm-cc/bluemonday v1.0.27 h1:MpEUotklkwCSLeH+Qdx1VJgNqLlpY2KXwXFM08ygZfk=\n+github.com/microcosm-cc/bluemonday v1.0.27/go.mod h1:jFi9vgW+H7c3V0lb6nR74Ib/DIB5OBs92Dimizgw2cA=\n github.com/montanaflynn/stats v0.7.1 h1:etflOAAHORrCC44V+aR6Ftzort912ZU+YLiSTuV8eaE=\n github.com/montanaflynn/stats v0.7.1/go.mod h1:etXPPgVO6n31NxCd9KQUMvCM+ve0ruNzt6R8Bnaayow=\n github.com/moul/http2curl v1.0.0 h1:dRMWoAtb+ePxMlLkrCbAqh4TlPHXvoGUSQ323/9Zahs=\n@@ -184,8 +177,8 @@ github.com/sergi/go-diff v1.1.0 h1:we8PVUC3FE2uYfodKH/nBHMSetSfHDR6scGdBi+erh0=\n github.com/sergi/go-diff v1.1.0/go.mod h1:STckp+ISIX8hZLjrqAeVduY0gWCT9IjLuqbuNXdaHfM=\n github.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e h1:MRM5ITcdelLK2j1vwZ3Je0FKVCfqOLp5zO6trqMLYs0=\n github.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e/go.mod h1:XV66xRDqSt+GTGFMVlhk3ULuV0y9ZmzeVGR4mloJI3M=\n-github.com/slack-go/slack v0.12.4 h1:4iLT2opw+/QptmQxBNA7S8pNfSIvtn0NDGu7Jq0emi4=\n-github.com/slack-go/slack v0.12.4/go.mod h1:hlGi5oXA+Gt+yWTPP0plCdRKmjsDxecdHxYQdlMQKOw=\n+github.com/slack-go/slack v0.12.5 h1:ddZ6uz6XVaB+3MTDhoW04gG+Vc/M/X1ctC+wssy2cqs=\n+github.com/slack-go/slack v0.12.5/go.mod h1:hlGi5oXA+Gt+yWTPP0plCdRKmjsDxecdHxYQdlMQKOw=\n github.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\n github.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=\n github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n@@ -203,8 +196,8 @@ github.com/tidwall/btree v0.0.0-20191029221954-400434d76274/go.mod h1:huei1BkDWJ\n github.com/tidwall/btree v1.7.0 h1:L1fkJH/AuEh5zBnnBbmTwQ5Lt+bRJ5A8EWecslvo9iI=\n github.com/tidwall/btree v1.7.0/go.mod h1:twD9XRA5jj9VUQGELzDO4HPQTNJsoWWfYEL+EUQ2cKY=\n github.com/tidwall/buntdb v1.1.2/go.mod h1:xAzi36Hir4FarpSHyfuZ6JzPJdjRZ8QlLZSntE2mqlI=\n-github.com/tidwall/buntdb v1.3.0 h1:gdhWO+/YwoB2qZMeAU9JcWWsHSYU3OvcieYgFRS0zwA=\n-github.com/tidwall/buntdb v1.3.0/go.mod h1:lZZrZUWzlyDJKlLQ6DKAy53LnG7m5kHyrEHvvcDmBpU=\n+github.com/tidwall/buntdb v1.3.1 h1:HKoDF01/aBhl9RjYtbaLnvX9/OuenwvQiC3OP1CcL4o=\n+github.com/tidwall/buntdb v1.3.1/go.mod h1:lZZrZUWzlyDJKlLQ6DKAy53LnG7m5kHyrEHvvcDmBpU=\n github.com/tidwall/gjson v1.3.4/go.mod h1:P256ACg0Mn+j1RXIDXoss50DeIABTYK1PULOJHhxOls=\n github.com/tidwall/gjson v1.12.1/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=\n github.com/tidwall/gjson v1.17.1 h1:wlYEnwqAHgzmhNUFfw7Xalt2JzQvsMx2Se4PcoFCT/U=\n@@ -244,8 +237,8 @@ github.com/xeipuuv/gojsonschema v1.2.0 h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17\n github.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=\n github.com/yalp/jsonpath v0.0.0-20180802001716-5cc68e5049a0 h1:6fRhSjgLCkTD3JnJxvaJ4Sj+TYblw757bqYgZaOq5ZY=\n github.com/yalp/jsonpath v0.0.0-20180802001716-5cc68e5049a0/go.mod h1:/LWChgwKmvncFJFHJ7Gvn9wZArjbV5/FppcK2fKk/tI=\n-github.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a h1:fZHgsYlfvtyqToslyjUt3VOPF4J7aK/3MPcK7xp3PDk=\n-github.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a/go.mod h1:ul22v+Nro/R083muKhosV54bj5niojjWZvU8xrevuH4=\n+github.com/youmark/pkcs8 v0.0.0-20240726163527-a2c0da244d78 h1:ilQV1hzziu+LLM3zUTJ0trRztfwgjqKnBWNtSRkbmwM=\n+github.com/youmark/pkcs8 v0.0.0-20240726163527-a2c0da244d78/go.mod h1:aL8wCCfTfSfmXjznFBSZNN13rSJjlIOI1fUNAtF7rmI=\n github.com/yudai/gojsondiff v1.0.0 h1:27cbfqXLVEJ1o8I6v3y9lg8Ydm53EKqHXAOMxEGlCOA=\n github.com/yudai/gojsondiff v1.0.0/go.mod h1:AY32+k2cwILAkW1fbgxQ5mUmMiZFgLIV+FBNExI05xg=\n github.com/yudai/golcs v0.0.0-20170316035057-ecda9a501e82 h1:BHyfKlQyqbsFN5p3IfnEUduWvb9is428/nNb5L3U01M=\n@@ -254,27 +247,25 @@ github.com/yudai/pp v2.0.1+incompatible/go.mod h1:PuxR/8QJ7cyCkFp/aUDS+JY727OFEZ\n github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\n github.com/yuin/gopher-lua v1.1.1 h1:kYKnWBjvbNP4XLT3+bPEwAXJx262OhaHDWDVOPjL46M=\n github.com/yuin/gopher-lua v1.1.1/go.mod h1:GBR0iDaNXjAgGg9zfCvksxSRnQx76gclCIb7kdAd1Pw=\n-go.etcd.io/bbolt v1.3.9 h1:8x7aARPEXiXbHmtUwAIv7eV2fQFHrLLavdiJ3uzJXoI=\n-go.etcd.io/bbolt v1.3.9/go.mod h1:zaO32+Ti0PK1ivdPtgMESzuzL2VPoIG1PCQNvOdo/dE=\n-go.mongodb.org/mongo-driver v1.14.0 h1:P98w8egYRjYe3XDjxhYJagTokP/H6HzlsnojRgZRd80=\n-go.mongodb.org/mongo-driver v1.14.0/go.mod h1:Vzb0Mk/pa7e6cWw85R4F/endUC3u0U9jGcNU603k65c=\n+go.etcd.io/bbolt v1.3.10 h1:+BqfJTcCzTItrop8mq/lbzL8wSGtj94UO/3U31shqG0=\n+go.etcd.io/bbolt v1.3.10/go.mod h1:bK3UQLPJZly7IlNmV7uVHJDxfe5aK9Ll93e/74Y9oEQ=\n+go.mongodb.org/mongo-driver v1.16.0 h1:tpRsfBJMROVHKpdGyc1BBEzzjDUWjItxbVSZ8Ls4BQ4=\n+go.mongodb.org/mongo-driver v1.16.0/go.mod h1:oB6AhJQvFQL4LEHyXi6aJzQJtBiTQHiAd83l0GdFaiw=\n go.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\n go.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n-golang.org/x/crypto v0.0.0-20200302210943-78000ba7a073/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\n golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\n golang.org/x/crypto v0.0.0-20220214200702-86341886e292/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\n-golang.org/x/crypto v0.22.0 h1:g1v0xeRhjcugydODzvb3mEM9SQ0HGp9s/nh3COQ/C30=\n-golang.org/x/crypto v0.22.0/go.mod h1:vr6Su+7cTlO45qkww3VDJlzDn0ctJvRgYbC2NvXHt+M=\n-golang.org/x/image v0.15.0 h1:kOELfmgrmJlw4Cdb7g/QGuB3CvDrXbqEIww/pNtNBm8=\n-golang.org/x/image v0.15.0/go.mod h1:HUYqC05R2ZcZ3ejNQsIHQDQiwWM4JBqmm6MKANTp4LE=\n+golang.org/x/crypto v0.25.0 h1:ypSNr+bnYL2YhwoMt2zPxHFmbAN1KZs/njMG3hxUp30=\n+golang.org/x/crypto v0.25.0/go.mod h1:T+wALwcMOSE0kXgUAnPAHqTLW+XHgcELELW8VaDgm/M=\n+golang.org/x/image v0.18.0 h1:jGzIakQa/ZXI1I0Fxvaa9W7yP25TqT6cHIHn+6CqvSQ=\n+golang.org/x/image v0.18.0/go.mod h1:4yyo5vMFQjVjUcVk4jEQcU9MGy/rulF5WvUILseCM2E=\n golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\n golang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\n golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n golang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n golang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n golang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\n-golang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\n golang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\n golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n golang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\n@@ -284,21 +275,20 @@ golang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su\n golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\n golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\n golang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=\n-golang.org/x/net v0.24.0 h1:1PcaxkF854Fu3+lvBIx5SYn9wRlBzzcnHZSiaFFAb0w=\n-golang.org/x/net v0.24.0/go.mod h1:2Q7sJY5mzlzWjKtYUEXSlBWCdyaioyXzRB2RtU8KVE8=\n+golang.org/x/net v0.27.0 h1:5K3Njcw06/l2y9vpGCSdcxWOYHOUk3dVNGDXN+FvAys=\n+golang.org/x/net v0.27.0/go.mod h1:dDi0PyhWNoiUOrAS8uXv/vnScO4wnHQO4mj9fn/RytE=\n golang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n-golang.org/x/oauth2 v0.18.0 h1:09qnuIAgzdx1XplqJvW6CQqMCtGZykZWcXzPMPUusvI=\n-golang.org/x/oauth2 v0.18.0/go.mod h1:Wf7knwG0MPoWIMMBgFlEaSUDaKskp0dCfrlJRJXbBi8=\n+golang.org/x/oauth2 v0.21.0 h1:tsimM75w1tF/uws5rbeHzIWxEqElMehnc+iW793zsZs=\n+golang.org/x/oauth2 v0.21.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\n golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n-golang.org/x/sync v0.6.0 h1:5BMeUDZ7vkXGfEr1x9B4bRcTH4lpkTkpdh0T/J+qjbQ=\n-golang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\n+golang.org/x/sync v0.7.0 h1:YsImfSBoP9QPYL0xyKJPq0gcaJdG3rInoqxTWbfQu9M=\n+golang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\n golang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n-golang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n@@ -307,7 +297,6 @@ golang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7w\n golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200519105757-fe76b779f299/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n@@ -316,8 +305,8 @@ golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBc\n golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n-golang.org/x/sys v0.19.0 h1:q5f1RH2jigJ1MoAWp2KTp3gm5zAGFUTarQZ5U386+4o=\n-golang.org/x/sys v0.19.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n+golang.org/x/sys v0.22.0 h1:RI27ohtqKCnwULzJLqkv897zojh5/DwS/ENaMzUOaWI=\n+golang.org/x/sys v0.22.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\n golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\n@@ -330,8 +319,8 @@ golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\n golang.org/x/text v0.3.8/go.mod h1:E6s5w1FMmriuDzIBO73fBruAKo1PCIq6d2Q6DHfQ8WQ=\n golang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\n golang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\n-golang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\n-golang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\n+golang.org/x/text v0.16.0 h1:a94ExnEXNtEwYLGJSIUxnWoxoRz/ZcCsV63ROupILh4=\n+golang.org/x/text v0.16.0/go.mod h1:GhwF1Be+LQoKShO3cGOHzqOgRrGaYc9AvblQOmPVHnI=\n golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\n golang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\n golang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\n@@ -341,18 +330,12 @@ golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8T\n golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\n google.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\n google.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\n-google.golang.org/appengine v1.6.8 h1:IhEN5q69dyKagZPYMSdIjS2HqprW324FRQZJcGqPAsM=\n-google.golang.org/appengine v1.6.8/go.mod h1:1jJ3jBArFh5pcgW8gCtRJnepW8FzD1V44FJffLiz/Ds=\n google.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\n google.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\n google.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\n google.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\n google.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\n google.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\n-google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\n-google.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\n-google.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\n-google.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\n gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n gopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15 h1:YR8cESwS4TdDjEe65xsg0ogRM/Nc3DYOhEAlW+xobZo="
    },
    {
      "sha": "d645695673349e3947e8e5ae42332d0ac3164cd7",
      "filename": "backend/vendor/cloud.google.com/go/compute/LICENSE",
      "status": "removed",
      "additions": 0,
      "deletions": 202,
      "changes": 202,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2FLICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2FLICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2FLICENSE?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,202 +0,0 @@\n-\n-                                 Apache License\n-                           Version 2.0, January 2004\n-                        http://www.apache.org/licenses/\n-\n-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n-\n-   1. Definitions.\n-\n-      \"License\" shall mean the terms and conditions for use, reproduction,\n-      and distribution as defined by Sections 1 through 9 of this document.\n-\n-      \"Licensor\" shall mean the copyright owner or entity authorized by\n-      the copyright owner that is granting the License.\n-\n-      \"Legal Entity\" shall mean the union of the acting entity and all\n-      other entities that control, are controlled by, or are under common\n-      control with that entity. For the purposes of this definition,\n-      \"control\" means (i) the power, direct or indirect, to cause the\n-      direction or management of such entity, whether by contract or\n-      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n-      outstanding shares, or (iii) beneficial ownership of such entity.\n-\n-      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n-      exercising permissions granted by this License.\n-\n-      \"Source\" form shall mean the preferred form for making modifications,\n-      including but not limited to software source code, documentation\n-      source, and configuration files.\n-\n-      \"Object\" form shall mean any form resulting from mechanical\n-      transformation or translation of a Source form, including but\n-      not limited to compiled object code, generated documentation,\n-      and conversions to other media types.\n-\n-      \"Work\" shall mean the work of authorship, whether in Source or\n-      Object form, made available under the License, as indicated by a\n-      copyright notice that is included in or attached to the work\n-      (an example is provided in the Appendix below).\n-\n-      \"Derivative Works\" shall mean any work, whether in Source or Object\n-      form, that is based on (or derived from) the Work and for which the\n-      editorial revisions, annotations, elaborations, or other modifications\n-      represent, as a whole, an original work of authorship. For the purposes\n-      of this License, Derivative Works shall not include works that remain\n-      separable from, or merely link (or bind by name) to the interfaces of,\n-      the Work and Derivative Works thereof.\n-\n-      \"Contribution\" shall mean any work of authorship, including\n-      the original version of the Work and any modifications or additions\n-      to that Work or Derivative Works thereof, that is intentionally\n-      submitted to Licensor for inclusion in the Work by the copyright owner\n-      or by an individual or Legal Entity authorized to submit on behalf of\n-      the copyright owner. For the purposes of this definition, \"submitted\"\n-      means any form of electronic, verbal, or written communication sent\n-      to the Licensor or its representatives, including but not limited to\n-      communication on electronic mailing lists, source code control systems,\n-      and issue tracking systems that are managed by, or on behalf of, the\n-      Licensor for the purpose of discussing and improving the Work, but\n-      excluding communication that is conspicuously marked or otherwise\n-      designated in writing by the copyright owner as \"Not a Contribution.\"\n-\n-      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n-      on behalf of whom a Contribution has been received by Licensor and\n-      subsequently incorporated within the Work.\n-\n-   2. Grant of Copyright License. Subject to the terms and conditions of\n-      this License, each Contributor hereby grants to You a perpetual,\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-      copyright license to reproduce, prepare Derivative Works of,\n-      publicly display, publicly perform, sublicense, and distribute the\n-      Work and such Derivative Works in Source or Object form.\n-\n-   3. Grant of Patent License. Subject to the terms and conditions of\n-      this License, each Contributor hereby grants to You a perpetual,\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-      (except as stated in this section) patent license to make, have made,\n-      use, offer to sell, sell, import, and otherwise transfer the Work,\n-      where such license applies only to those patent claims licensable\n-      by such Contributor that are necessarily infringed by their\n-      Contribution(s) alone or by combination of their Contribution(s)\n-      with the Work to which such Contribution(s) was submitted. If You\n-      institute patent litigation against any entity (including a\n-      cross-claim or counterclaim in a lawsuit) alleging that the Work\n-      or a Contribution incorporated within the Work constitutes direct\n-      or contributory patent infringement, then any patent licenses\n-      granted to You under this License for that Work shall terminate\n-      as of the date such litigation is filed.\n-\n-   4. Redistribution. You may reproduce and distribute copies of the\n-      Work or Derivative Works thereof in any medium, with or without\n-      modifications, and in Source or Object form, provided that You\n-      meet the following conditions:\n-\n-      (a) You must give any other recipients of the Work or\n-          Derivative Works a copy of this License; and\n-\n-      (b) You must cause any modified files to carry prominent notices\n-          stating that You changed the files; and\n-\n-      (c) You must retain, in the Source form of any Derivative Works\n-          that You distribute, all copyright, patent, trademark, and\n-          attribution notices from the Source form of the Work,\n-          excluding those notices that do not pertain to any part of\n-          the Derivative Works; and\n-\n-      (d) If the Work includes a \"NOTICE\" text file as part of its\n-          distribution, then any Derivative Works that You distribute must\n-          include a readable copy of the attribution notices contained\n-          within such NOTICE file, excluding those notices that do not\n-          pertain to any part of the Derivative Works, in at least one\n-          of the following places: within a NOTICE text file distributed\n-          as part of the Derivative Works; within the Source form or\n-          documentation, if provided along with the Derivative Works; or,\n-          within a display generated by the Derivative Works, if and\n-          wherever such third-party notices normally appear. The contents\n-          of the NOTICE file are for informational purposes only and\n-          do not modify the License. You may add Your own attribution\n-          notices within Derivative Works that You distribute, alongside\n-          or as an addendum to the NOTICE text from the Work, provided\n-          that such additional attribution notices cannot be construed\n-          as modifying the License.\n-\n-      You may add Your own copyright statement to Your modifications and\n-      may provide additional or different license terms and conditions\n-      for use, reproduction, or distribution of Your modifications, or\n-      for any such Derivative Works as a whole, provided Your use,\n-      reproduction, and distribution of the Work otherwise complies with\n-      the conditions stated in this License.\n-\n-   5. Submission of Contributions. Unless You explicitly state otherwise,\n-      any Contribution intentionally submitted for inclusion in the Work\n-      by You to the Licensor shall be under the terms and conditions of\n-      this License, without any additional terms or conditions.\n-      Notwithstanding the above, nothing herein shall supersede or modify\n-      the terms of any separate license agreement you may have executed\n-      with Licensor regarding such Contributions.\n-\n-   6. Trademarks. This License does not grant permission to use the trade\n-      names, trademarks, service marks, or product names of the Licensor,\n-      except as required for reasonable and customary use in describing the\n-      origin of the Work and reproducing the content of the NOTICE file.\n-\n-   7. Disclaimer of Warranty. Unless required by applicable law or\n-      agreed to in writing, Licensor provides the Work (and each\n-      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n-      implied, including, without limitation, any warranties or conditions\n-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n-      PARTICULAR PURPOSE. You are solely responsible for determining the\n-      appropriateness of using or redistributing the Work and assume any\n-      risks associated with Your exercise of permissions under this License.\n-\n-   8. Limitation of Liability. In no event and under no legal theory,\n-      whether in tort (including negligence), contract, or otherwise,\n-      unless required by applicable law (such as deliberate and grossly\n-      negligent acts) or agreed to in writing, shall any Contributor be\n-      liable to You for damages, including any direct, indirect, special,\n-      incidental, or consequential damages of any character arising as a\n-      result of this License or out of the use or inability to use the\n-      Work (including but not limited to damages for loss of goodwill,\n-      work stoppage, computer failure or malfunction, or any and all\n-      other commercial damages or losses), even if such Contributor\n-      has been advised of the possibility of such damages.\n-\n-   9. Accepting Warranty or Additional Liability. While redistributing\n-      the Work or Derivative Works thereof, You may choose to offer,\n-      and charge a fee for, acceptance of support, warranty, indemnity,\n-      or other liability obligations and/or rights consistent with this\n-      License. However, in accepting such obligations, You may act only\n-      on Your own behalf and on Your sole responsibility, not on behalf\n-      of any other Contributor, and only if You agree to indemnify,\n-      defend, and hold each Contributor harmless for any liability\n-      incurred by, or claims asserted against, such Contributor by reason\n-      of your accepting any such warranty or additional liability.\n-\n-   END OF TERMS AND CONDITIONS\n-\n-   APPENDIX: How to apply the Apache License to your work.\n-\n-      To apply the Apache License to your work, attach the following\n-      boilerplate notice, with the fields enclosed by brackets \"[]\"\n-      replaced with your own identifying information. (Don't include\n-      the brackets!)  The text should be enclosed in the appropriate\n-      comment syntax for the file format. We also recommend that a\n-      file or class name and description of purpose be included on the\n-      same \"printed page\" as the copyright notice for easier\n-      identification within third-party archives.\n-\n-   Copyright [yyyy] [name of copyright owner]\n-\n-   Licensed under the Apache License, Version 2.0 (the \"License\");\n-   you may not use this file except in compliance with the License.\n-   You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-   Unless required by applicable law or agreed to in writing, software\n-   distributed under the License is distributed on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-   See the License for the specific language governing permissions and\n-   limitations under the License."
    },
    {
      "sha": "9594e1e2793c6097ad72bd1e40d794eaca4aaa2b",
      "filename": "backend/vendor/cloud.google.com/go/compute/metadata/CHANGES.md",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2FCHANGES.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2FCHANGES.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2FCHANGES.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,5 +1,31 @@\n # Changes\n \n+## [0.5.0](https://github.com/googleapis/google-cloud-go/compare/compute/metadata/v0.4.0...compute/metadata/v0.5.0) (2024-07-10)\n+\n+\n+### Features\n+\n+* **compute/metadata:** Add sys check for windows OnGCE ([#10521](https://github.com/googleapis/google-cloud-go/issues/10521)) ([3b9a830](https://github.com/googleapis/google-cloud-go/commit/3b9a83063960d2a2ac20beb47cc15818a68bd302))\n+\n+## [0.4.0](https://github.com/googleapis/google-cloud-go/compare/compute/metadata/v0.3.0...compute/metadata/v0.4.0) (2024-07-01)\n+\n+\n+### Features\n+\n+* **compute/metadata:** Add context for all functions/methods ([#10370](https://github.com/googleapis/google-cloud-go/issues/10370)) ([66b8efe](https://github.com/googleapis/google-cloud-go/commit/66b8efe7ad877e052b2987bb4475477e38c67bb3))\n+\n+\n+### Documentation\n+\n+* **compute/metadata:** Update OnGCE description ([#10408](https://github.com/googleapis/google-cloud-go/issues/10408)) ([6a46dca](https://github.com/googleapis/google-cloud-go/commit/6a46dca4eae4f88ec6f88822e01e5bf8aeca787f))\n+\n+## [0.3.0](https://github.com/googleapis/google-cloud-go/compare/compute/metadata/v0.2.3...compute/metadata/v0.3.0) (2024-04-15)\n+\n+\n+### Features\n+\n+* **compute/metadata:** Add context aware functions  ([#9733](https://github.com/googleapis/google-cloud-go/issues/9733)) ([e4eb5b4](https://github.com/googleapis/google-cloud-go/commit/e4eb5b46ee2aec9d2fc18300bfd66015e25a0510))\n+\n ## [0.2.3](https://github.com/googleapis/google-cloud-go/compare/compute/metadata/v0.2.2...compute/metadata/v0.2.3) (2022-12-15)\n \n "
    },
    {
      "sha": "345080b729790a10da8bca3db1ada5e411f73561",
      "filename": "backend/vendor/cloud.google.com/go/compute/metadata/metadata.go",
      "status": "modified",
      "additions": 375,
      "deletions": 82,
      "changes": 457,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fmetadata.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fmetadata.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fmetadata.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -23,12 +23,11 @@ import (\n \t\"context\"\n \t\"encoding/json\"\n \t\"fmt\"\n-\t\"io/ioutil\"\n+\t\"io\"\n \t\"net\"\n \t\"net/http\"\n \t\"net/url\"\n \t\"os\"\n-\t\"runtime\"\n \t\"strings\"\n \t\"sync\"\n \t\"time\"\n@@ -88,16 +87,16 @@ func (suffix NotDefinedError) Error() string {\n \treturn fmt.Sprintf(\"metadata: GCE metadata %q not defined\", string(suffix))\n }\n \n-func (c *cachedValue) get(cl *Client) (v string, err error) {\n+func (c *cachedValue) get(ctx context.Context, cl *Client) (v string, err error) {\n \tdefer c.mu.Unlock()\n \tc.mu.Lock()\n \tif c.v != \"\" {\n \t\treturn c.v, nil\n \t}\n \tif c.trim {\n-\t\tv, err = cl.getTrimmed(c.k)\n+\t\tv, err = cl.getTrimmed(ctx, c.k)\n \t} else {\n-\t\tv, err = cl.Get(c.k)\n+\t\tv, err = cl.GetWithContext(ctx, c.k)\n \t}\n \tif err == nil {\n \t\tc.v = v\n@@ -110,7 +109,9 @@ var (\n \tonGCE     bool\n )\n \n-// OnGCE reports whether this process is running on Google Compute Engine.\n+// OnGCE reports whether this process is running on Google Compute Platforms.\n+// NOTE: True returned from `OnGCE` does not guarantee that the metadata server\n+// is accessible from this process and have all the metadata defined.\n func OnGCE() bool {\n \tonGCEOnce.Do(initOnGCE)\n \treturn onGCE\n@@ -188,78 +189,213 @@ func testOnGCE() bool {\n \treturn <-resc\n }\n \n-// systemInfoSuggestsGCE reports whether the local system (without\n-// doing network requests) suggests that we're running on GCE. If this\n-// returns true, testOnGCE tries a bit harder to reach its metadata\n-// server.\n-func systemInfoSuggestsGCE() bool {\n-\tif runtime.GOOS != \"linux\" {\n-\t\t// We don't have any non-Linux clues available, at least yet.\n-\t\treturn false\n-\t}\n-\tslurp, _ := ioutil.ReadFile(\"/sys/class/dmi/id/product_name\")\n-\tname := strings.TrimSpace(string(slurp))\n-\treturn name == \"Google\" || name == \"Google Compute Engine\"\n+// Subscribe calls Client.SubscribeWithContext on the default client.\n+//\n+// Deprecated: Please use the context aware variant [SubscribeWithContext].\n+func Subscribe(suffix string, fn func(v string, ok bool) error) error {\n+\treturn defaultClient.SubscribeWithContext(context.Background(), suffix, func(ctx context.Context, v string, ok bool) error { return fn(v, ok) })\n }\n \n-// Subscribe calls Client.Subscribe on the default client.\n-func Subscribe(suffix string, fn func(v string, ok bool) error) error {\n-\treturn defaultClient.Subscribe(suffix, fn)\n+// SubscribeWithContext calls Client.SubscribeWithContext on the default client.\n+func SubscribeWithContext(ctx context.Context, suffix string, fn func(ctx context.Context, v string, ok bool) error) error {\n+\treturn defaultClient.SubscribeWithContext(ctx, suffix, fn)\n+}\n+\n+// Get calls Client.GetWithContext on the default client.\n+//\n+// Deprecated: Please use the context aware variant [GetWithContext].\n+func Get(suffix string) (string, error) {\n+\treturn defaultClient.GetWithContext(context.Background(), suffix)\n }\n \n-// Get calls Client.Get on the default client.\n-func Get(suffix string) (string, error) { return defaultClient.Get(suffix) }\n+// GetWithContext calls Client.GetWithContext on the default client.\n+func GetWithContext(ctx context.Context, suffix string) (string, error) {\n+\treturn defaultClient.GetWithContext(ctx, suffix)\n+}\n \n // ProjectID returns the current instance's project ID string.\n-func ProjectID() (string, error) { return defaultClient.ProjectID() }\n+//\n+// Deprecated: Please use the context aware variant [ProjectIDWithContext].\n+func ProjectID() (string, error) {\n+\treturn defaultClient.ProjectIDWithContext(context.Background())\n+}\n+\n+// ProjectIDWithContext returns the current instance's project ID string.\n+func ProjectIDWithContext(ctx context.Context) (string, error) {\n+\treturn defaultClient.ProjectIDWithContext(ctx)\n+}\n \n // NumericProjectID returns the current instance's numeric project ID.\n-func NumericProjectID() (string, error) { return defaultClient.NumericProjectID() }\n+//\n+// Deprecated: Please use the context aware variant [NumericProjectIDWithContext].\n+func NumericProjectID() (string, error) {\n+\treturn defaultClient.NumericProjectIDWithContext(context.Background())\n+}\n+\n+// NumericProjectIDWithContext returns the current instance's numeric project ID.\n+func NumericProjectIDWithContext(ctx context.Context) (string, error) {\n+\treturn defaultClient.NumericProjectIDWithContext(ctx)\n+}\n \n // InternalIP returns the instance's primary internal IP address.\n-func InternalIP() (string, error) { return defaultClient.InternalIP() }\n+//\n+// Deprecated: Please use the context aware variant [InternalIPWithContext].\n+func InternalIP() (string, error) {\n+\treturn defaultClient.InternalIPWithContext(context.Background())\n+}\n+\n+// InternalIPWithContext returns the instance's primary internal IP address.\n+func InternalIPWithContext(ctx context.Context) (string, error) {\n+\treturn defaultClient.InternalIPWithContext(ctx)\n+}\n \n // ExternalIP returns the instance's primary external (public) IP address.\n-func ExternalIP() (string, error) { return defaultClient.ExternalIP() }\n+//\n+// Deprecated: Please use the context aware variant [ExternalIPWithContext].\n+func ExternalIP() (string, error) {\n+\treturn defaultClient.ExternalIPWithContext(context.Background())\n+}\n+\n+// ExternalIPWithContext returns the instance's primary external (public) IP address.\n+func ExternalIPWithContext(ctx context.Context) (string, error) {\n+\treturn defaultClient.ExternalIPWithContext(ctx)\n+}\n+\n+// Email calls Client.EmailWithContext on the default client.\n+//\n+// Deprecated: Please use the context aware variant [EmailWithContext].\n+func Email(serviceAccount string) (string, error) {\n+\treturn defaultClient.EmailWithContext(context.Background(), serviceAccount)\n+}\n \n-// Email calls Client.Email on the default client.\n-func Email(serviceAccount string) (string, error) { return defaultClient.Email(serviceAccount) }\n+// EmailWithContext calls Client.EmailWithContext on the default client.\n+func EmailWithContext(ctx context.Context, serviceAccount string) (string, error) {\n+\treturn defaultClient.EmailWithContext(ctx, serviceAccount)\n+}\n \n // Hostname returns the instance's hostname. This will be of the form\n // \"<instanceID>.c.<projID>.internal\".\n-func Hostname() (string, error) { return defaultClient.Hostname() }\n+//\n+// Deprecated: Please use the context aware variant [HostnameWithContext].\n+func Hostname() (string, error) {\n+\treturn defaultClient.HostnameWithContext(context.Background())\n+}\n+\n+// HostnameWithContext returns the instance's hostname. This will be of the form\n+// \"<instanceID>.c.<projID>.internal\".\n+func HostnameWithContext(ctx context.Context) (string, error) {\n+\treturn defaultClient.HostnameWithContext(ctx)\n+}\n \n // InstanceTags returns the list of user-defined instance tags,\n // assigned when initially creating a GCE instance.\n-func InstanceTags() ([]string, error) { return defaultClient.InstanceTags() }\n+//\n+// Deprecated: Please use the context aware variant [InstanceTagsWithContext].\n+func InstanceTags() ([]string, error) {\n+\treturn defaultClient.InstanceTagsWithContext(context.Background())\n+}\n+\n+// InstanceTagsWithContext returns the list of user-defined instance tags,\n+// assigned when initially creating a GCE instance.\n+func InstanceTagsWithContext(ctx context.Context) ([]string, error) {\n+\treturn defaultClient.InstanceTagsWithContext(ctx)\n+}\n \n // InstanceID returns the current VM's numeric instance ID.\n-func InstanceID() (string, error) { return defaultClient.InstanceID() }\n+//\n+// Deprecated: Please use the context aware variant [InstanceIDWithContext].\n+func InstanceID() (string, error) {\n+\treturn defaultClient.InstanceIDWithContext(context.Background())\n+}\n+\n+// InstanceIDWithContext returns the current VM's numeric instance ID.\n+func InstanceIDWithContext(ctx context.Context) (string, error) {\n+\treturn defaultClient.InstanceIDWithContext(ctx)\n+}\n \n // InstanceName returns the current VM's instance ID string.\n-func InstanceName() (string, error) { return defaultClient.InstanceName() }\n+//\n+// Deprecated: Please use the context aware variant [InstanceNameWithContext].\n+func InstanceName() (string, error) {\n+\treturn defaultClient.InstanceNameWithContext(context.Background())\n+}\n+\n+// InstanceNameWithContext returns the current VM's instance ID string.\n+func InstanceNameWithContext(ctx context.Context) (string, error) {\n+\treturn defaultClient.InstanceNameWithContext(ctx)\n+}\n \n // Zone returns the current VM's zone, such as \"us-central1-b\".\n-func Zone() (string, error) { return defaultClient.Zone() }\n+//\n+// Deprecated: Please use the context aware variant [ZoneWithContext].\n+func Zone() (string, error) {\n+\treturn defaultClient.ZoneWithContext(context.Background())\n+}\n+\n+// ZoneWithContext returns the current VM's zone, such as \"us-central1-b\".\n+func ZoneWithContext(ctx context.Context) (string, error) {\n+\treturn defaultClient.ZoneWithContext(ctx)\n+}\n \n-// InstanceAttributes calls Client.InstanceAttributes on the default client.\n-func InstanceAttributes() ([]string, error) { return defaultClient.InstanceAttributes() }\n+// InstanceAttributes calls Client.InstanceAttributesWithContext on the default client.\n+//\n+// Deprecated: Please use the context aware variant [InstanceAttributesWithContext.\n+func InstanceAttributes() ([]string, error) {\n+\treturn defaultClient.InstanceAttributesWithContext(context.Background())\n+}\n+\n+// InstanceAttributesWithContext calls Client.ProjectAttributesWithContext on the default client.\n+func InstanceAttributesWithContext(ctx context.Context) ([]string, error) {\n+\treturn defaultClient.InstanceAttributesWithContext(ctx)\n+}\n+\n+// ProjectAttributes calls Client.ProjectAttributesWithContext on the default client.\n+//\n+// Deprecated: Please use the context aware variant [ProjectAttributesWithContext].\n+func ProjectAttributes() ([]string, error) {\n+\treturn defaultClient.ProjectAttributesWithContext(context.Background())\n+}\n \n-// ProjectAttributes calls Client.ProjectAttributes on the default client.\n-func ProjectAttributes() ([]string, error) { return defaultClient.ProjectAttributes() }\n+// ProjectAttributesWithContext calls Client.ProjectAttributesWithContext on the default client.\n+func ProjectAttributesWithContext(ctx context.Context) ([]string, error) {\n+\treturn defaultClient.ProjectAttributesWithContext(ctx)\n+}\n \n-// InstanceAttributeValue calls Client.InstanceAttributeValue on the default client.\n+// InstanceAttributeValue calls Client.InstanceAttributeValueWithContext on the default client.\n+//\n+// Deprecated: Please use the context aware variant [InstanceAttributeValueWithContext].\n func InstanceAttributeValue(attr string) (string, error) {\n-\treturn defaultClient.InstanceAttributeValue(attr)\n+\treturn defaultClient.InstanceAttributeValueWithContext(context.Background(), attr)\n+}\n+\n+// InstanceAttributeValueWithContext calls Client.InstanceAttributeValueWithContext on the default client.\n+func InstanceAttributeValueWithContext(ctx context.Context, attr string) (string, error) {\n+\treturn defaultClient.InstanceAttributeValueWithContext(ctx, attr)\n }\n \n-// ProjectAttributeValue calls Client.ProjectAttributeValue on the default client.\n+// ProjectAttributeValue calls Client.ProjectAttributeValueWithContext on the default client.\n+//\n+// Deprecated: Please use the context aware variant [ProjectAttributeValueWithContext].\n func ProjectAttributeValue(attr string) (string, error) {\n-\treturn defaultClient.ProjectAttributeValue(attr)\n+\treturn defaultClient.ProjectAttributeValueWithContext(context.Background(), attr)\n+}\n+\n+// ProjectAttributeValueWithContext calls Client.ProjectAttributeValueWithContext on the default client.\n+func ProjectAttributeValueWithContext(ctx context.Context, attr string) (string, error) {\n+\treturn defaultClient.ProjectAttributeValueWithContext(ctx, attr)\n+}\n+\n+// Scopes calls Client.ScopesWithContext on the default client.\n+//\n+// Deprecated: Please use the context aware variant [ScopesWithContext].\n+func Scopes(serviceAccount string) ([]string, error) {\n+\treturn defaultClient.ScopesWithContext(context.Background(), serviceAccount)\n }\n \n-// Scopes calls Client.Scopes on the default client.\n-func Scopes(serviceAccount string) ([]string, error) { return defaultClient.Scopes(serviceAccount) }\n+// ScopesWithContext calls Client.ScopesWithContext on the default client.\n+func ScopesWithContext(ctx context.Context, serviceAccount string) ([]string, error) {\n+\treturn defaultClient.ScopesWithContext(ctx, serviceAccount)\n+}\n \n func strsContains(ss []string, s string) bool {\n \tfor _, v := range ss {\n@@ -282,14 +418,12 @@ func NewClient(c *http.Client) *Client {\n \tif c == nil {\n \t\treturn defaultClient\n \t}\n-\n \treturn &Client{hc: c}\n }\n \n // getETag returns a value from the metadata service as well as the associated ETag.\n // This func is otherwise equivalent to Get.\n-func (c *Client) getETag(suffix string) (value, etag string, err error) {\n-\tctx := context.TODO()\n+func (c *Client) getETag(ctx context.Context, suffix string) (value, etag string, err error) {\n \t// Using a fixed IP makes it very difficult to spoof the metadata service in\n \t// a container, which is an important use-case for local testing of cloud\n \t// deployments. To enable spoofing of the metadata service, the environment\n@@ -306,7 +440,7 @@ func (c *Client) getETag(suffix string) (value, etag string, err error) {\n \t}\n \tsuffix = strings.TrimLeft(suffix, \"/\")\n \tu := \"http://\" + host + \"/computeMetadata/v1/\" + suffix\n-\treq, err := http.NewRequest(\"GET\", u, nil)\n+\treq, err := http.NewRequestWithContext(ctx, \"GET\", u, nil)\n \tif err != nil {\n \t\treturn \"\", \"\", err\n \t}\n@@ -336,7 +470,7 @@ func (c *Client) getETag(suffix string) (value, etag string, err error) {\n \tif res.StatusCode == http.StatusNotFound {\n \t\treturn \"\", \"\", NotDefinedError(suffix)\n \t}\n-\tall, err := ioutil.ReadAll(res.Body)\n+\tall, err := io.ReadAll(res.Body)\n \tif err != nil {\n \t\treturn \"\", \"\", err\n \t}\n@@ -354,19 +488,37 @@ func (c *Client) getETag(suffix string) (value, etag string, err error) {\n //\n // If the requested metadata is not defined, the returned error will\n // be of type NotDefinedError.\n+//\n+// Deprecated: Please use the context aware variant [Client.GetWithContext].\n func (c *Client) Get(suffix string) (string, error) {\n-\tval, _, err := c.getETag(suffix)\n+\treturn c.GetWithContext(context.Background(), suffix)\n+}\n+\n+// GetWithContext returns a value from the metadata service.\n+// The suffix is appended to \"http://${GCE_METADATA_HOST}/computeMetadata/v1/\".\n+//\n+// If the GCE_METADATA_HOST environment variable is not defined, a default of\n+// 169.254.169.254 will be used instead.\n+//\n+// If the requested metadata is not defined, the returned error will\n+// be of type NotDefinedError.\n+//\n+// NOTE: Without an extra deadline in the context this call can take in the\n+// worst case, with internal backoff retries, up to 15 seconds (e.g. when server\n+// is responding slowly). Pass context with additional timeouts when needed.\n+func (c *Client) GetWithContext(ctx context.Context, suffix string) (string, error) {\n+\tval, _, err := c.getETag(ctx, suffix)\n \treturn val, err\n }\n \n-func (c *Client) getTrimmed(suffix string) (s string, err error) {\n-\ts, err = c.Get(suffix)\n+func (c *Client) getTrimmed(ctx context.Context, suffix string) (s string, err error) {\n+\ts, err = c.GetWithContext(ctx, suffix)\n \ts = strings.TrimSpace(s)\n \treturn\n }\n \n-func (c *Client) lines(suffix string) ([]string, error) {\n-\tj, err := c.Get(suffix)\n+func (c *Client) lines(ctx context.Context, suffix string) ([]string, error) {\n+\tj, err := c.GetWithContext(ctx, suffix)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n@@ -378,45 +530,104 @@ func (c *Client) lines(suffix string) ([]string, error) {\n }\n \n // ProjectID returns the current instance's project ID string.\n-func (c *Client) ProjectID() (string, error) { return projID.get(c) }\n+//\n+// Deprecated: Please use the context aware variant [Client.ProjectIDWithContext].\n+func (c *Client) ProjectID() (string, error) { return c.ProjectIDWithContext(context.Background()) }\n+\n+// ProjectIDWithContext returns the current instance's project ID string.\n+func (c *Client) ProjectIDWithContext(ctx context.Context) (string, error) { return projID.get(ctx, c) }\n \n // NumericProjectID returns the current instance's numeric project ID.\n-func (c *Client) NumericProjectID() (string, error) { return projNum.get(c) }\n+//\n+// Deprecated: Please use the context aware variant [Client.NumericProjectIDWithContext].\n+func (c *Client) NumericProjectID() (string, error) {\n+\treturn c.NumericProjectIDWithContext(context.Background())\n+}\n+\n+// NumericProjectIDWithContext returns the current instance's numeric project ID.\n+func (c *Client) NumericProjectIDWithContext(ctx context.Context) (string, error) {\n+\treturn projNum.get(ctx, c)\n+}\n \n // InstanceID returns the current VM's numeric instance ID.\n-func (c *Client) InstanceID() (string, error) { return instID.get(c) }\n+//\n+// Deprecated: Please use the context aware variant [Client.InstanceIDWithContext].\n+func (c *Client) InstanceID() (string, error) {\n+\treturn c.InstanceIDWithContext(context.Background())\n+}\n+\n+// InstanceIDWithContext returns the current VM's numeric instance ID.\n+func (c *Client) InstanceIDWithContext(ctx context.Context) (string, error) {\n+\treturn instID.get(ctx, c)\n+}\n \n // InternalIP returns the instance's primary internal IP address.\n+//\n+// Deprecated: Please use the context aware variant [Client.InternalIPWithContext].\n func (c *Client) InternalIP() (string, error) {\n-\treturn c.getTrimmed(\"instance/network-interfaces/0/ip\")\n+\treturn c.InternalIPWithContext(context.Background())\n+}\n+\n+// InternalIPWithContext returns the instance's primary internal IP address.\n+func (c *Client) InternalIPWithContext(ctx context.Context) (string, error) {\n+\treturn c.getTrimmed(ctx, \"instance/network-interfaces/0/ip\")\n }\n \n // Email returns the email address associated with the service account.\n-// The account may be empty or the string \"default\" to use the instance's\n-// main account.\n+//\n+// Deprecated: Please use the context aware variant [Client.EmailWithContext].\n func (c *Client) Email(serviceAccount string) (string, error) {\n+\treturn c.EmailWithContext(context.Background(), serviceAccount)\n+}\n+\n+// EmailWithContext returns the email address associated with the service account.\n+// The serviceAccount parameter default value (empty string or \"default\" value)\n+// will use the instance's main account.\n+func (c *Client) EmailWithContext(ctx context.Context, serviceAccount string) (string, error) {\n \tif serviceAccount == \"\" {\n \t\tserviceAccount = \"default\"\n \t}\n-\treturn c.getTrimmed(\"instance/service-accounts/\" + serviceAccount + \"/email\")\n+\treturn c.getTrimmed(ctx, \"instance/service-accounts/\"+serviceAccount+\"/email\")\n }\n \n // ExternalIP returns the instance's primary external (public) IP address.\n+//\n+// Deprecated: Please use the context aware variant [Client.ExternalIPWithContext].\n func (c *Client) ExternalIP() (string, error) {\n-\treturn c.getTrimmed(\"instance/network-interfaces/0/access-configs/0/external-ip\")\n+\treturn c.ExternalIPWithContext(context.Background())\n+}\n+\n+// ExternalIPWithContext returns the instance's primary external (public) IP address.\n+func (c *Client) ExternalIPWithContext(ctx context.Context) (string, error) {\n+\treturn c.getTrimmed(ctx, \"instance/network-interfaces/0/access-configs/0/external-ip\")\n }\n \n // Hostname returns the instance's hostname. This will be of the form\n // \"<instanceID>.c.<projID>.internal\".\n+//\n+// Deprecated: Please use the context aware variant [Client.HostnameWithContext].\n func (c *Client) Hostname() (string, error) {\n-\treturn c.getTrimmed(\"instance/hostname\")\n+\treturn c.HostnameWithContext(context.Background())\n }\n \n-// InstanceTags returns the list of user-defined instance tags,\n-// assigned when initially creating a GCE instance.\n+// HostnameWithContext returns the instance's hostname. This will be of the form\n+// \"<instanceID>.c.<projID>.internal\".\n+func (c *Client) HostnameWithContext(ctx context.Context) (string, error) {\n+\treturn c.getTrimmed(ctx, \"instance/hostname\")\n+}\n+\n+// InstanceTags returns the list of user-defined instance tags.\n+//\n+// Deprecated: Please use the context aware variant [Client.InstanceTagsWithContext].\n func (c *Client) InstanceTags() ([]string, error) {\n+\treturn c.InstanceTagsWithContext(context.Background())\n+}\n+\n+// InstanceTagsWithContext returns the list of user-defined instance tags,\n+// assigned when initially creating a GCE instance.\n+func (c *Client) InstanceTagsWithContext(ctx context.Context) ([]string, error) {\n \tvar s []string\n-\tj, err := c.Get(\"instance/tags\")\n+\tj, err := c.GetWithContext(ctx, \"instance/tags\")\n \tif err != nil {\n \t\treturn nil, err\n \t}\n@@ -427,13 +638,27 @@ func (c *Client) InstanceTags() ([]string, error) {\n }\n \n // InstanceName returns the current VM's instance ID string.\n+//\n+// Deprecated: Please use the context aware variant [Client.InstanceNameWithContext].\n func (c *Client) InstanceName() (string, error) {\n-\treturn c.getTrimmed(\"instance/name\")\n+\treturn c.InstanceNameWithContext(context.Background())\n+}\n+\n+// InstanceNameWithContext returns the current VM's instance ID string.\n+func (c *Client) InstanceNameWithContext(ctx context.Context) (string, error) {\n+\treturn c.getTrimmed(ctx, \"instance/name\")\n }\n \n // Zone returns the current VM's zone, such as \"us-central1-b\".\n+//\n+// Deprecated: Please use the context aware variant [Client.ZoneWithContext].\n func (c *Client) Zone() (string, error) {\n-\tzone, err := c.getTrimmed(\"instance/zone\")\n+\treturn c.ZoneWithContext(context.Background())\n+}\n+\n+// ZoneWithContext returns the current VM's zone, such as \"us-central1-b\".\n+func (c *Client) ZoneWithContext(ctx context.Context) (string, error) {\n+\tzone, err := c.getTrimmed(ctx, \"instance/zone\")\n \t// zone is of the form \"projects/<projNum>/zones/<zoneName>\".\n \tif err != nil {\n \t\treturn \"\", err\n@@ -444,12 +669,34 @@ func (c *Client) Zone() (string, error) {\n // InstanceAttributes returns the list of user-defined attributes,\n // assigned when initially creating a GCE VM instance. The value of an\n // attribute can be obtained with InstanceAttributeValue.\n-func (c *Client) InstanceAttributes() ([]string, error) { return c.lines(\"instance/attributes/\") }\n+//\n+// Deprecated: Please use the context aware variant [Client.InstanceAttributesWithContext].\n+func (c *Client) InstanceAttributes() ([]string, error) {\n+\treturn c.InstanceAttributesWithContext(context.Background())\n+}\n+\n+// InstanceAttributesWithContext returns the list of user-defined attributes,\n+// assigned when initially creating a GCE VM instance. The value of an\n+// attribute can be obtained with InstanceAttributeValue.\n+func (c *Client) InstanceAttributesWithContext(ctx context.Context) ([]string, error) {\n+\treturn c.lines(ctx, \"instance/attributes/\")\n+}\n \n // ProjectAttributes returns the list of user-defined attributes\n // applying to the project as a whole, not just this VM.  The value of\n // an attribute can be obtained with ProjectAttributeValue.\n-func (c *Client) ProjectAttributes() ([]string, error) { return c.lines(\"project/attributes/\") }\n+//\n+// Deprecated: Please use the context aware variant [Client.ProjectAttributesWithContext].\n+func (c *Client) ProjectAttributes() ([]string, error) {\n+\treturn c.ProjectAttributesWithContext(context.Background())\n+}\n+\n+// ProjectAttributesWithContext returns the list of user-defined attributes\n+// applying to the project as a whole, not just this VM.  The value of\n+// an attribute can be obtained with ProjectAttributeValue.\n+func (c *Client) ProjectAttributesWithContext(ctx context.Context) ([]string, error) {\n+\treturn c.lines(ctx, \"project/attributes/\")\n+}\n \n // InstanceAttributeValue returns the value of the provided VM\n // instance attribute.\n@@ -459,8 +706,22 @@ func (c *Client) ProjectAttributes() ([]string, error) { return c.lines(\"project\n //\n // InstanceAttributeValue may return (\"\", nil) if the attribute was\n // defined to be the empty string.\n+//\n+// Deprecated: Please use the context aware variant [Client.InstanceAttributeValueWithContext].\n func (c *Client) InstanceAttributeValue(attr string) (string, error) {\n-\treturn c.Get(\"instance/attributes/\" + attr)\n+\treturn c.InstanceAttributeValueWithContext(context.Background(), attr)\n+}\n+\n+// InstanceAttributeValueWithContext returns the value of the provided VM\n+// instance attribute.\n+//\n+// If the requested attribute is not defined, the returned error will\n+// be of type NotDefinedError.\n+//\n+// InstanceAttributeValue may return (\"\", nil) if the attribute was\n+// defined to be the empty string.\n+func (c *Client) InstanceAttributeValueWithContext(ctx context.Context, attr string) (string, error) {\n+\treturn c.GetWithContext(ctx, \"instance/attributes/\"+attr)\n }\n \n // ProjectAttributeValue returns the value of the provided\n@@ -471,39 +732,71 @@ func (c *Client) InstanceAttributeValue(attr string) (string, error) {\n //\n // ProjectAttributeValue may return (\"\", nil) if the attribute was\n // defined to be the empty string.\n+//\n+// Deprecated: Please use the context aware variant [Client.ProjectAttributeValueWithContext].\n func (c *Client) ProjectAttributeValue(attr string) (string, error) {\n-\treturn c.Get(\"project/attributes/\" + attr)\n+\treturn c.ProjectAttributeValueWithContext(context.Background(), attr)\n+}\n+\n+// ProjectAttributeValueWithContext returns the value of the provided\n+// project attribute.\n+//\n+// If the requested attribute is not defined, the returned error will\n+// be of type NotDefinedError.\n+//\n+// ProjectAttributeValue may return (\"\", nil) if the attribute was\n+// defined to be the empty string.\n+func (c *Client) ProjectAttributeValueWithContext(ctx context.Context, attr string) (string, error) {\n+\treturn c.GetWithContext(ctx, \"project/attributes/\"+attr)\n }\n \n // Scopes returns the service account scopes for the given account.\n // The account may be empty or the string \"default\" to use the instance's\n // main account.\n+//\n+// Deprecated: Please use the context aware variant [Client.ScopesWithContext].\n func (c *Client) Scopes(serviceAccount string) ([]string, error) {\n+\treturn c.ScopesWithContext(context.Background(), serviceAccount)\n+}\n+\n+// ScopesWithContext returns the service account scopes for the given account.\n+// The account may be empty or the string \"default\" to use the instance's\n+// main account.\n+func (c *Client) ScopesWithContext(ctx context.Context, serviceAccount string) ([]string, error) {\n \tif serviceAccount == \"\" {\n \t\tserviceAccount = \"default\"\n \t}\n-\treturn c.lines(\"instance/service-accounts/\" + serviceAccount + \"/scopes\")\n+\treturn c.lines(ctx, \"instance/service-accounts/\"+serviceAccount+\"/scopes\")\n }\n \n // Subscribe subscribes to a value from the metadata service.\n // The suffix is appended to \"http://${GCE_METADATA_HOST}/computeMetadata/v1/\".\n // The suffix may contain query parameters.\n //\n-// Subscribe calls fn with the latest metadata value indicated by the provided\n-// suffix. If the metadata value is deleted, fn is called with the empty string\n-// and ok false. Subscribe blocks until fn returns a non-nil error or the value\n-// is deleted. Subscribe returns the error value returned from the last call to\n-// fn, which may be nil when ok == false.\n+// Deprecated: Please use the context aware variant [Client.SubscribeWithContext].\n func (c *Client) Subscribe(suffix string, fn func(v string, ok bool) error) error {\n+\treturn c.SubscribeWithContext(context.Background(), suffix, func(ctx context.Context, v string, ok bool) error { return fn(v, ok) })\n+}\n+\n+// SubscribeWithContext subscribes to a value from the metadata service.\n+// The suffix is appended to \"http://${GCE_METADATA_HOST}/computeMetadata/v1/\".\n+// The suffix may contain query parameters.\n+//\n+// SubscribeWithContext calls fn with the latest metadata value indicated by the\n+// provided suffix. If the metadata value is deleted, fn is called with the\n+// empty string and ok false. Subscribe blocks until fn returns a non-nil error\n+// or the value is deleted. Subscribe returns the error value returned from the\n+// last call to fn, which may be nil when ok == false.\n+func (c *Client) SubscribeWithContext(ctx context.Context, suffix string, fn func(ctx context.Context, v string, ok bool) error) error {\n \tconst failedSubscribeSleep = time.Second * 5\n \n \t// First check to see if the metadata value exists at all.\n-\tval, lastETag, err := c.getETag(suffix)\n+\tval, lastETag, err := c.getETag(ctx, suffix)\n \tif err != nil {\n \t\treturn err\n \t}\n \n-\tif err := fn(val, true); err != nil {\n+\tif err := fn(ctx, val, true); err != nil {\n \t\treturn err\n \t}\n \n@@ -514,7 +807,7 @@ func (c *Client) Subscribe(suffix string, fn func(v string, ok bool) error) erro\n \t\tsuffix += \"?wait_for_change=true&last_etag=\"\n \t}\n \tfor {\n-\t\tval, etag, err := c.getETag(suffix + url.QueryEscape(lastETag))\n+\t\tval, etag, err := c.getETag(ctx, suffix+url.QueryEscape(lastETag))\n \t\tif err != nil {\n \t\t\tif _, deleted := err.(NotDefinedError); !deleted {\n \t\t\t\ttime.Sleep(failedSubscribeSleep)\n@@ -524,7 +817,7 @@ func (c *Client) Subscribe(suffix string, fn func(v string, ok bool) error) erro\n \t\t}\n \t\tlastETag = etag\n \n-\t\tif err := fn(val, ok); err != nil || !ok {\n+\t\tif err := fn(ctx, val, ok); err != nil || !ok {\n \t\t\treturn err\n \t\t}\n \t}"
    },
    {
      "sha": "3d4bc75ddf26b5198f22bbbae00a51af025e7148",
      "filename": "backend/vendor/cloud.google.com/go/compute/metadata/retry.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fretry.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fretry.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fretry.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -27,7 +27,7 @@ const (\n )\n \n var (\n-\tsyscallRetryable = func(err error) bool { return false }\n+\tsyscallRetryable = func(error) bool { return false }\n )\n \n // defaultBackoff is basically equivalent to gax.Backoff without the need for"
    },
    {
      "sha": "e0704fa647718f157f5c47420973fbbe8999d667",
      "filename": "backend/vendor/cloud.google.com/go/compute/metadata/syscheck.go",
      "status": "renamed",
      "additions": 10,
      "deletions": 7,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fsyscheck.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fsyscheck.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fsyscheck.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2022 Google LLC\n+// Copyright 2024 Google LLC\n //\n // Licensed under the Apache License, Version 2.0 (the \"License\");\n // you may not use this file except in compliance with the License.\n@@ -12,12 +12,15 @@\n // See the License for the specific language governing permissions and\n // limitations under the License.\n \n-// This file, and the {{.RootMod}} import, won't actually become part of\n-// the resultant binary.\n-//go:build modhack\n-// +build modhack\n+//go:build !windows && !linux\n \n package metadata\n \n-// Necessary for safely adding multi-module repo. See: https://github.com/golang/go/wiki/Modules#is-it-possible-to-add-a-module-to-a-multi-module-repository\n-import _ \"cloud.google.com/go/compute/internal\"\n+// systemInfoSuggestsGCE reports whether the local system (without\n+// doing network requests) suggests that we're running on GCE. If this\n+// returns true, testOnGCE tries a bit harder to reach its metadata\n+// server.\n+func systemInfoSuggestsGCE() bool {\n+\t// We don't currently have checks for other GOOS\n+\treturn false\n+}",
      "previous_filename": "backend/vendor/cloud.google.com/go/compute/metadata/tidyfix.go"
    },
    {
      "sha": "74689acbbbf6825d003663499f6fbf5deafe25f5",
      "filename": "backend/vendor/cloud.google.com/go/compute/metadata/syscheck_linux.go",
      "status": "renamed",
      "additions": 14,
      "deletions": 4,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fsyscheck_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fsyscheck_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fsyscheck_linux.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2022 Google LLC\n+// Copyright 2024 Google LLC\n //\n // Licensed under the Apache License, Version 2.0 (the \"License\");\n // you may not use this file except in compliance with the License.\n@@ -12,7 +12,17 @@\n // See the License for the specific language governing permissions and\n // limitations under the License.\n \n-package internal\n+//go:build linux\n \n-// Version is the current tagged release of the library.\n-const Version = \"1.25.1\"\n+package metadata\n+\n+import (\n+\t\"os\"\n+\t\"strings\"\n+)\n+\n+func systemInfoSuggestsGCE() bool {\n+\tb, _ := os.ReadFile(\"/sys/class/dmi/id/product_name\")\n+\tname := strings.TrimSpace(string(b))\n+\treturn name == \"Google\" || name == \"Google Compute Engine\"\n+}",
      "previous_filename": "backend/vendor/cloud.google.com/go/compute/internal/version.go"
    },
    {
      "sha": "c0ce627872fb1ffc0cff36f779c60216eb9e0d09",
      "filename": "backend/vendor/cloud.google.com/go/compute/metadata/syscheck_windows.go",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fsyscheck_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fsyscheck_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fcloud.google.com%2Fgo%2Fcompute%2Fmetadata%2Fsyscheck_windows.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2024 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+//go:build windows\n+\n+package metadata\n+\n+import (\n+\t\"strings\"\n+\n+\t\"golang.org/x/sys/windows/registry\"\n+)\n+\n+func systemInfoSuggestsGCE() bool {\n+\tk, err := registry.OpenKey(registry.LOCAL_MACHINE, `SYSTEM\\HardwareConfig\\Current`, registry.QUERY_VALUE)\n+\tif err != nil {\n+\t\treturn false\n+\t}\n+\tdefer k.Close()\n+\n+\ts, _, err := k.GetStringValue(\"SystemProductName\")\n+\tif err != nil {\n+\t\treturn false\n+\t}\n+\ts = strings.TrimSpace(s)\n+\treturn strings.HasPrefix(s, \"Google\")\n+}"
    },
    {
      "sha": "767a0e111314f5118e9b3f5a2c1a3c7f865f9bde",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2FPuerkitoBio%2Fgoquery%2FREADME.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -40,6 +40,7 @@ Please note that starting with version `v1.9.0` of goquery, Go 1.18+ is required\n \n **Note that goquery's API is now stable, and will not break.**\n \n+*    **2024-04-29 (v1.9.2)** : Update `go.mod` dependencies.\n *    **2024-02-29 (v1.9.1)** : Improve allocation and performance of the `Map` function and `Selection.Map` method, better document the cascadia differences (thanks [@jwilsson](https://github.com/jwilsson)).\n *    **2024-02-22 (v1.9.0)** : Add a generic `Map` function, **goquery now requires Go version 1.18+** (thanks [@Fesaa](https://github.com/Fesaa)).\n *    **2023-02-18 (v1.8.1)** : Update `go.mod` dependencies, update CI workflow."
    },
    {
      "sha": "5d0a4b64fe9662265c3fa5009552accacd74321e",
      "filename": "backend/vendor/github.com/didip/tollbooth/v7/.golangci.yml",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fdidip%2Ftollbooth%2Fv7%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fdidip%2Ftollbooth%2Fv7%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fdidip%2Ftollbooth%2Fv7%2F.golangci.yml?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,21 +1,17 @@\n linters:\n   enable:\n-    - megacheck\n     - revive\n     - govet\n     - unconvert\n     - megacheck\n-    - structcheck\n     - gas\n     - gocyclo\n     - dupl\n     - misspell\n     - unparam\n-    - varcheck\n-    - deadcode\n+    - unused\n     - typecheck\n     - ineffassign\n-    - varcheck\n     - stylecheck\n     - gochecknoinits\n     - exportloopref"
    },
    {
      "sha": "f96ac2f1878a649be1abc4bc0015dc01ee31e9b0",
      "filename": "backend/vendor/github.com/didip/tollbooth/v7/README.md",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fdidip%2Ftollbooth%2Fv7%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fdidip%2Ftollbooth%2Fv7%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fdidip%2Ftollbooth%2Fv7%2FREADME.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -171,6 +171,8 @@ Sometimes, other frameworks require a little bit of shim to use Tollbooth. These\n \n ## My other Go libraries\n \n+* [ErrStack](https://github.com/didip/errstack): A small library to combine errors and also display filename and line number.\n+\n * [Stopwatch](https://github.com/didip/stopwatch): A small library to measure latency of things. Useful if you want to report latency data to Graphite.\n \n * [LaborUnion](https://github.com/didip/laborunion): A dynamic worker pool library."
    },
    {
      "sha": "0153dc8017d41137d2f939d702a19fbe4197fd9c",
      "filename": "backend/vendor/github.com/didip/tollbooth/v7/limiter/limiter.go",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fdidip%2Ftollbooth%2Fv7%2Flimiter%2Flimiter.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fdidip%2Ftollbooth%2Fv7%2Flimiter%2Flimiter.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fdidip%2Ftollbooth%2Fv7%2Flimiter%2Flimiter.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -6,7 +6,7 @@ import (\n \t\"sync\"\n \t\"time\"\n \n-\tcache \"github.com/go-pkgz/expirable-cache\"\n+\tcache \"github.com/go-pkgz/expirable-cache/v3\"\n \n \t\"github.com/didip/tollbooth/v7/internal/time/rate\"\n )\n@@ -36,9 +36,9 @@ func New(generalExpirableOptions *ExpirableOptions) *Limiter {\n \t\tlmt.generalExpirableOptions.DefaultExpirationTTL = 87600 * time.Hour\n \t}\n \n-\tlmt.tokenBuckets, _ = cache.NewCache(cache.TTL(lmt.generalExpirableOptions.DefaultExpirationTTL))\n+\tlmt.tokenBuckets = cache.NewCache[string, *rate.Limiter]().WithTTL(lmt.generalExpirableOptions.DefaultExpirationTTL)\n \n-\tlmt.basicAuthUsers, _ = cache.NewCache(cache.TTL(lmt.generalExpirableOptions.DefaultExpirationTTL))\n+\tlmt.basicAuthUsers = cache.NewCache[string, bool]().WithTTL(lmt.generalExpirableOptions.DefaultExpirationTTL)\n \n \treturn lmt\n }\n@@ -81,17 +81,17 @@ type Limiter struct {\n \tgeneralExpirableOptions *ExpirableOptions\n \n \t// List of basic auth usernames to limit.\n-\tbasicAuthUsers cache.Cache\n+\tbasicAuthUsers cache.Cache[string, bool]\n \n \t// Map of HTTP headers to limit.\n \t// Empty means skip headers checking.\n-\theaders map[string]cache.Cache\n+\theaders map[string]cache.Cache[string, bool]\n \n \t// Map of Context values to limit.\n-\tcontextValues map[string]cache.Cache\n+\tcontextValues map[string]cache.Cache[string, bool]\n \n \t// Map of limiters with TTL\n-\ttokenBuckets cache.Cache\n+\ttokenBuckets cache.Cache[string, *rate.Limiter]\n \n \t// Ignore URL on the rate limiter keys\n \tignoreURL bool\n@@ -261,9 +261,9 @@ func (l *Limiter) SetOnLimitReached(fn func(w http.ResponseWriter, r *http.Reque\n // ExecOnLimitReached is thread-safe way of executing after-rejection function when limit is reached.\n func (l *Limiter) ExecOnLimitReached(w http.ResponseWriter, r *http.Request) {\n \tl.RLock()\n-\tdefer l.RUnlock()\n-\n \tfn := l.onLimitReached\n+\tl.RUnlock()\n+\n \tif fn != nil {\n \t\tfn(w, r)\n \t}\n@@ -383,7 +383,7 @@ func (l *Limiter) DeleteExpiredTokenBuckets() {\n // SetHeaders is thread-safe way of setting map of HTTP headers to limit.\n func (l *Limiter) SetHeaders(headers map[string][]string) *Limiter {\n \tif l.headers == nil {\n-\t\tl.headers = make(map[string]cache.Cache)\n+\t\tl.headers = make(map[string]cache.Cache[string, bool])\n \t}\n \n \tfor header, entries := range headers {\n@@ -419,7 +419,7 @@ func (l *Limiter) SetHeader(header string, entries []string) *Limiter {\n \t}\n \n \tif !found {\n-\t\texisting, _ = cache.NewCache(cache.TTL(ttl))\n+\t\texisting = cache.NewCache[string, bool]().WithTTL(ttl)\n \t}\n \n \tfor _, entry := range entries {\n@@ -450,7 +450,7 @@ func (l *Limiter) RemoveHeader(header string) *Limiter {\n \t}\n \n \tl.Lock()\n-\tl.headers[header], _ = cache.NewCache(cache.TTL(ttl))\n+\tl.headers[header] = cache.NewCache[string, bool]().WithTTL(ttl)\n \tl.Unlock()\n \n \treturn l\n@@ -476,7 +476,7 @@ func (l *Limiter) RemoveHeaderEntries(header string, entriesForRemoval []string)\n // SetContextValues is thread-safe way of setting map of HTTP headers to limit.\n func (l *Limiter) SetContextValues(contextValues map[string][]string) *Limiter {\n \tif l.contextValues == nil {\n-\t\tl.contextValues = make(map[string]cache.Cache)\n+\t\tl.contextValues = make(map[string]cache.Cache[string, bool])\n \t}\n \n \tfor contextValue, entries := range contextValues {\n@@ -512,7 +512,7 @@ func (l *Limiter) SetContextValue(contextValue string, entries []string) *Limite\n \t}\n \n \tif !found {\n-\t\texisting, _ = cache.NewCache(cache.TTL(ttl))\n+\t\texisting = cache.NewCache[string, bool]().WithTTL(ttl)\n \t}\n \n \tfor _, entry := range entries {\n@@ -543,7 +543,7 @@ func (l *Limiter) RemoveContextValue(contextValue string) *Limiter {\n \t}\n \n \tl.Lock()\n-\tl.contextValues[contextValue], _ = cache.NewCache(cache.TTL(ttl))\n+\tl.contextValues[contextValue] = cache.NewCache[string, bool]().WithTTL(ttl)\n \tl.Unlock()\n \n \treturn l\n@@ -585,7 +585,7 @@ func (l *Limiter) limitReachedWithTokenBucketTTL(key string, tokenBucketTTL time\n \t\treturn false\n \t}\n \n-\treturn !expiringMap.(*rate.Limiter).Allow()\n+\treturn !expiringMap.Allow()\n }\n \n // LimitReached returns a bool indicating if the Bucket identified by key ran out of tokens.\n@@ -606,5 +606,5 @@ func (l *Limiter) Tokens(key string) int {\n \t\treturn 0\n \t}\n \n-\treturn int(expiringMap.(*rate.Limiter).TokensAt(time.Now()))\n+\treturn int(expiringMap.TokensAt(time.Now()))\n }"
    },
    {
      "sha": "b4a6268d5754edbbc2b0edc0689dafdde23993b2",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/CONTRIBUTING.md",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FCONTRIBUTING.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FCONTRIBUTING.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FCONTRIBUTING.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -14,7 +14,7 @@\n \n A typical workflow is:\n \n-1. [Fork the repository.][fork] [This tip maybe also helpful.][go-fork-tip]\n+1. [Fork the repository.][fork]\n 2. [Create a topic branch.][branch]\n 3. Add tests for your change.\n 4. Run `go test`. If your tests pass, return to the step 3.\n@@ -24,8 +24,8 @@ A typical workflow is:\n 8. [Submit a pull request.][pull-req]\n \n [go-install]: https://golang.org/doc/install\n-[go-fork-tip]: http://blog.campoy.cat/2014/03/github-and-go-forking-pull-requests-and.html\n-[fork]: https://help.github.com/articles/fork-a-repo\n-[branch]: http://learn.github.com/p/branching.html\n-[git-help]: https://guides.github.com\n-[pull-req]: https://help.github.com/articles/using-pull-requests\n+[fork]: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo\n+[branch]: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-branches \n+[git-help]: https://docs.github.com/en\n+[pull-req]: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests\n+"
    },
    {
      "sha": "e2cd908d7221c6416f05e3259e52ffc96dbfd787",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/context.go",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fcontext.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fcontext.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fcontext.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -74,9 +74,8 @@ type Context struct {\n \t// patterns across a stack of sub-routers.\n \tRoutePatterns []string\n \n-\t// methodNotAllowed hint\n-\tmethodNotAllowed bool\n \tmethodsAllowed   []methodTyp // allowed methods in case of a 405\n+\tmethodNotAllowed bool\n }\n \n // Reset a routing context to its initial state."
    },
    {
      "sha": "55c95a8992de4efd89942f8c55d693398202bf87",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/realip.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Frealip.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Frealip.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Frealip.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -22,7 +22,7 @@ var xRealIP = http.CanonicalHeaderKey(\"X-Real-IP\")\n // RemoteAddr will see the intended value.\n //\n // You should only use this middleware if you can trust the headers passed to\n-// you (in particular, the two headers this middleware uses), for example\n+// you (in particular, the three headers this middleware uses), for example\n // because you have placed a reverse proxy like HAProxy or nginx in front of\n // chi. If your reverse proxies are configured to pass along arbitrary header\n // values from the client, or if you use this middleware without a reverse"
    },
    {
      "sha": "bf27088189308595146ac333aaf3fe448c90955b",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/wrap_writer.go",
      "status": "modified",
      "additions": 27,
      "deletions": 8,
      "changes": 35,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fwrap_writer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fwrap_writer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fwrap_writer.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -6,6 +6,7 @@ package middleware\n import (\n \t\"bufio\"\n \t\"io\"\n+\t\"io/ioutil\"\n \t\"net\"\n \t\"net/http\"\n )\n@@ -61,6 +62,11 @@ type WrapResponseWriter interface {\n \tTee(io.Writer)\n \t// Unwrap returns the original proxied target.\n \tUnwrap() http.ResponseWriter\n+\t// Discard causes all writes to the original ResponseWriter be discarded,\n+\t// instead writing only to the tee'd writer if it's set.\n+\t// The caller is responsible for calling WriteHeader and Write on the\n+\t// original ResponseWriter once the processing is done.\n+\tDiscard()\n }\n \n // basicWriter wraps a http.ResponseWriter that implements the minimal\n@@ -71,25 +77,34 @@ type basicWriter struct {\n \tcode        int\n \tbytes       int\n \ttee         io.Writer\n+\tdiscard     bool\n }\n \n func (b *basicWriter) WriteHeader(code int) {\n \tif !b.wroteHeader {\n \t\tb.code = code\n \t\tb.wroteHeader = true\n-\t\tb.ResponseWriter.WriteHeader(code)\n+\t\tif !b.discard {\n+\t\t\tb.ResponseWriter.WriteHeader(code)\n+\t\t}\n \t}\n }\n \n-func (b *basicWriter) Write(buf []byte) (int, error) {\n+func (b *basicWriter) Write(buf []byte) (n int, err error) {\n \tb.maybeWriteHeader()\n-\tn, err := b.ResponseWriter.Write(buf)\n-\tif b.tee != nil {\n-\t\t_, err2 := b.tee.Write(buf[:n])\n-\t\t// Prefer errors generated by the proxied writer.\n-\t\tif err == nil {\n-\t\t\terr = err2\n+\tif !b.discard {\n+\t\tn, err = b.ResponseWriter.Write(buf)\n+\t\tif b.tee != nil {\n+\t\t\t_, err2 := b.tee.Write(buf[:n])\n+\t\t\t// Prefer errors generated by the proxied writer.\n+\t\t\tif err == nil {\n+\t\t\t\terr = err2\n+\t\t\t}\n \t\t}\n+\t} else if b.tee != nil {\n+\t\tn, err = b.tee.Write(buf)\n+\t} else {\n+\t\tn, err = ioutil.Discard.Write(buf)\n \t}\n \tb.bytes += n\n \treturn n, err\n@@ -117,6 +132,10 @@ func (b *basicWriter) Unwrap() http.ResponseWriter {\n \treturn b.ResponseWriter\n }\n \n+func (b *basicWriter) Discard() {\n+\tb.discard = true\n+}\n+\n // flushWriter ...\n type flushWriter struct {\n \tbasicWriter"
    },
    {
      "sha": "9d07ff297a60d6cd933efe366d9d78b851cdb15d",
      "filename": "backend/vendor/github.com/go-pkgz/auth/README.md",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2FREADME.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -609,6 +609,21 @@ For more details refer to [Complete Guide of Battle.net OAuth API and Login Butt\n 1.\tFill **App name**  and **Description** and **URL** of your site\n 1.\tIn the field **Callback URLs** enter the correct url of your callback handler e.g. https://example.mysite.com/{route}/twitter/callback\n 1.\tUnder **Key and tokens** take note of the **Consumer API Key** and **Consumer API Secret key**. Those will be used as `cid` and `csecret`\n+\n+## XSRF Protections\n+By default, the XSRF protections will apply to all requests which reach the `middlewares.Auth`,\n+`middlewares.Admin` or `middlewares.RBAC` middlewares. This will require setting a request header \n+with a key of `<XSRFHeaderKey>` containing the value of the cookie named `<XSRFCookieName>`.\n+\n+To disable all XSRF protections, set `DisableXSRF` to `true`. This should probably only be used \n+during testing or debugging.\n+\n+When setting a custom request header is not possible, such as when building a web application which\n+is not a Single-Page-Application and HTML link tags are used to navigate pages, specific HTTP methods\n+may be excluded using the `XSRFIgnoreMethods` option. For example, to disable GET requests, set this\n+option to `XSRFIgnoreMethods: []string{\"GET\"}`. Adding methods other than GET to this list may result\n+in XSRF vulnerabilities.\n+\n ## Status\n \n The library extracted from [remark42](https://github.com/umputun/remark) project. The original code in production use on multiple sites and seems to work fine."
    },
    {
      "sha": "5bd9d8796505b62992abeffae95bddcf18f7e1c1",
      "filename": "backend/vendor/github.com/go-pkgz/auth/auth.go",
      "status": "modified",
      "additions": 35,
      "deletions": 36,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fauth.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fauth.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fauth.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -46,14 +46,15 @@ type Opts struct {\n \tDisableIAT  bool // disable IssuedAt claim\n \n \t// optional (custom) names for cookies and headers\n-\tJWTCookieName   string        // default \"JWT\"\n-\tJWTCookieDomain string        // default empty\n-\tJWTHeaderKey    string        // default \"X-JWT\"\n-\tXSRFCookieName  string        // default \"XSRF-TOKEN\"\n-\tXSRFHeaderKey   string        // default \"X-XSRF-TOKEN\"\n-\tJWTQuery        string        // default \"token\"\n-\tSendJWTHeader   bool          // if enabled send JWT as a header instead of cookie\n-\tSameSiteCookie  http.SameSite // limit cross-origin requests with SameSite cookie attribute\n+\tJWTCookieName     string        // default \"JWT\"\n+\tJWTCookieDomain   string        // default empty\n+\tJWTHeaderKey      string        // default \"X-JWT\"\n+\tXSRFCookieName    string        // default \"XSRF-TOKEN\"\n+\tXSRFHeaderKey     string        // default \"X-XSRF-TOKEN\"\n+\tXSRFIgnoreMethods []string      // disable XSRF protection for the specified request methods (ex. []string{\"GET\", \"POST\")}, default empty\n+\tJWTQuery          string        // default \"token\"\n+\tSendJWTHeader     bool          // if enabled send JWT as a header instead of cookie\n+\tSameSiteCookie    http.SameSite // limit cross-origin requests with SameSite cookie attribute\n \n \tIssuer string // optional value for iss claim, usually the application name, default \"go-pkgz/auth\"\n \n@@ -234,39 +235,44 @@ func (s *Service) AddProviderWithUserAttributes(name, cid, csecret string, userA\n \t\tL:              s.logger,\n \t\tUserAttributes: userAttributes,\n \t}\n-\ts.addProvider(name, p)\n+\ts.addProviderByName(name, p)\n }\n \n-func (s *Service) addProvider(name string, p provider.Params) {\n+func (s *Service) addProviderByName(name string, p provider.Params) {\n+\tvar prov provider.Provider\n \tswitch strings.ToLower(name) {\n \tcase \"github\":\n-\t\ts.providers = append(s.providers, provider.NewService(provider.NewGithub(p)))\n+\t\tprov = provider.NewGithub(p)\n \tcase \"google\":\n-\t\ts.providers = append(s.providers, provider.NewService(provider.NewGoogle(p)))\n+\t\tprov = provider.NewGoogle(p)\n \tcase \"facebook\":\n-\t\ts.providers = append(s.providers, provider.NewService(provider.NewFacebook(p)))\n+\t\tprov = provider.NewFacebook(p)\n \tcase \"yandex\":\n-\t\ts.providers = append(s.providers, provider.NewService(provider.NewYandex(p)))\n+\t\tprov = provider.NewYandex(p)\n \tcase \"battlenet\":\n-\t\ts.providers = append(s.providers, provider.NewService(provider.NewBattlenet(p)))\n+\t\tprov = provider.NewBattlenet(p)\n \tcase \"microsoft\":\n-\t\ts.providers = append(s.providers, provider.NewService(provider.NewMicrosoft(p)))\n+\t\tprov = provider.NewMicrosoft(p)\n \tcase \"twitter\":\n-\t\ts.providers = append(s.providers, provider.NewService(provider.NewTwitter(p)))\n+\t\tprov = provider.NewTwitter(p)\n \tcase \"patreon\":\n-\t\ts.providers = append(s.providers, provider.NewService(provider.NewPatreon(p)))\n+\t\tprov = provider.NewPatreon(p)\n \tcase \"dev\":\n-\t\ts.providers = append(s.providers, provider.NewService(provider.NewDev(p)))\n+\t\tprov = provider.NewDev(p)\n \tdefault:\n \t\treturn\n \t}\n \n+\ts.addProvider(prov)\n+}\n+\n+func (s *Service) addProvider(prov provider.Provider) {\n+\ts.providers = append(s.providers, provider.NewService(prov))\n \ts.authMiddleware.Providers = s.providers\n }\n \n // AddProvider adds provider for given name\n func (s *Service) AddProvider(name, cid, csecret string) {\n-\n \tp := provider.Params{\n \t\tURL:            s.opts.URL,\n \t\tJwtService:     s.jwtService,\n@@ -277,8 +283,7 @@ func (s *Service) AddProvider(name, cid, csecret string) {\n \t\tL:              s.logger,\n \t\tUserAttributes: map[string]string{},\n \t}\n-\n-\ts.addProvider(name, p)\n+\ts.addProviderByName(name, p)\n }\n \n // AddDevProvider with a custom host and port\n@@ -292,7 +297,7 @@ func (s *Service) AddDevProvider(host string, port int) {\n \t\tPort:        port,\n \t\tHost:        host,\n \t}\n-\ts.providers = append(s.providers, provider.NewService(provider.NewDev(p)))\n+\ts.addProvider(provider.NewDev(p))\n }\n \n // AddAppleProvider allow SignIn with Apple ID\n@@ -311,7 +316,7 @@ func (s *Service) AddAppleProvider(appleConfig provider.AppleConfig, privKeyLoad\n \t\treturn fmt.Errorf(\"an AppleProvider creating failed: %w\", err)\n \t}\n \n-\ts.providers = append(s.providers, provider.NewService(appleProvider))\n+\ts.addProvider(appleProvider)\n \treturn nil\n }\n \n@@ -326,9 +331,7 @@ func (s *Service) AddCustomProvider(name string, client Client, copts provider.C\n \t\tCsecret:     client.Csecret,\n \t\tL:           s.logger,\n \t}\n-\n-\ts.providers = append(s.providers, provider.NewService(provider.NewCustom(name, p, copts)))\n-\ts.authMiddleware.Providers = s.providers\n+\ts.addProvider(provider.NewCustom(name, p, copts))\n }\n \n // AddDirectProvider adds provider with direct check against data store\n@@ -342,8 +345,7 @@ func (s *Service) AddDirectProvider(name string, credChecker provider.CredChecke\n \t\tCredChecker:  credChecker,\n \t\tAvatarSaver:  s.avatarProxy,\n \t}\n-\ts.providers = append(s.providers, provider.NewService(dh))\n-\ts.authMiddleware.Providers = s.providers\n+\ts.addProvider(dh)\n }\n \n // AddDirectProviderWithUserIDFunc adds provider with direct check against data store and sets custom UserIDFunc allows\n@@ -359,8 +361,7 @@ func (s *Service) AddDirectProviderWithUserIDFunc(name string, credChecker provi\n \t\tAvatarSaver:  s.avatarProxy,\n \t\tUserIDFunc:   ufn,\n \t}\n-\ts.providers = append(s.providers, provider.NewService(dh))\n-\ts.authMiddleware.Providers = s.providers\n+\ts.addProvider(dh)\n }\n \n // AddVerifProvider adds provider user's verification sent by sender\n@@ -375,14 +376,12 @@ func (s *Service) AddVerifProvider(name, msgTmpl string, sender provider.Sender)\n \t\tTemplate:     msgTmpl,\n \t\tUseGravatar:  s.useGravatar,\n \t}\n-\ts.providers = append(s.providers, provider.NewService(dh))\n-\ts.authMiddleware.Providers = s.providers\n+\ts.addProvider(dh)\n }\n \n // AddCustomHandler adds user-defined self-implemented handler of auth provider\n-func (s *Service) AddCustomHandler(handler provider.Provider) {\n-\ts.providers = append(s.providers, provider.NewService(handler))\n-\ts.authMiddleware.Providers = s.providers\n+func (s *Service) AddCustomHandler(p provider.Provider) {\n+\ts.addProvider(p)\n }\n \n // DevAuth makes dev oauth2 server, for testing and development only!"
    },
    {
      "sha": "73cc1c2c2d9b7827530036f42f1dff148a0c39d8",
      "filename": "backend/vendor/github.com/go-pkgz/auth/token/jwt.go",
      "status": "modified",
      "additions": 24,
      "deletions": 12,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Ftoken%2Fjwt.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Ftoken%2Fjwt.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Ftoken%2Fjwt.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -5,6 +5,7 @@ import (\n \t\"encoding/json\"\n \t\"fmt\"\n \t\"net/http\"\n+\t\"slices\"\n \t\"strings\"\n \t\"time\"\n \n@@ -49,6 +50,10 @@ const (\n \tdefaultTokenQuery = \"token\"\n )\n \n+var (\n+\tdefaultXSRFIgnoreMethods = []string{}\n+)\n+\n // Opts holds constructor params\n type Opts struct {\n \tSecretReader   Secret\n@@ -59,17 +64,18 @@ type Opts struct {\n \tDisableXSRF    bool\n \tDisableIAT     bool // disable IssuedAt claim\n \t// optional (custom) names for cookies and headers\n-\tJWTCookieName   string\n-\tJWTCookieDomain string\n-\tJWTHeaderKey    string\n-\tXSRFCookieName  string\n-\tXSRFHeaderKey   string\n-\tJWTQuery        string\n-\tAudienceReader  Audience      // allowed aud values\n-\tIssuer          string        // optional value for iss claim, usually application name\n-\tAudSecrets      bool          // uses different secret for differed auds. important: adds pre-parsing of unverified token\n-\tSendJWTHeader   bool          // if enabled send JWT as a header instead of cookie\n-\tSameSite        http.SameSite // define a cookie attribute making it impossible for the browser to send this cookie cross-site\n+\tJWTCookieName     string\n+\tJWTCookieDomain   string\n+\tJWTHeaderKey      string\n+\tXSRFCookieName    string\n+\tXSRFHeaderKey     string\n+\tXSRFIgnoreMethods []string\n+\tJWTQuery          string\n+\tAudienceReader    Audience      // allowed aud values\n+\tIssuer            string        // optional value for iss claim, usually application name\n+\tAudSecrets        bool          // uses different secret for differed auds. important: adds pre-parsing of unverified token\n+\tSendJWTHeader     bool          // if enabled send JWT as a header instead of cookie\n+\tSameSite          http.SameSite // define a cookie attribute making it impossible for the browser to send this cookie cross-site\n }\n \n // NewService makes JWT service\n@@ -90,6 +96,10 @@ func NewService(opts Opts) *Service {\n \tsetDefault(&res.Issuer, defaultIssuer)\n \tsetDefault(&res.JWTCookieDomain, defaultJWTCookieDomain)\n \n+\tif opts.XSRFIgnoreMethods == nil {\n+\t\topts.XSRFIgnoreMethods = defaultXSRFIgnoreMethods\n+\t}\n+\n \tif opts.TokenDuration == 0 {\n \t\tres.TokenDuration = defaultTokenDuration\n \t}\n@@ -293,7 +303,7 @@ func (j *Service) Get(r *http.Request) (Claims, string, error) {\n \t\treturn Claims{}, \"\", fmt.Errorf(\"token expired\")\n \t}\n \n-\tif j.DisableXSRF {\n+\tif j.DisableXSRF || slices.Contains(j.XSRFIgnoreMethods, r.Method) {\n \t\treturn claims, tokenString, nil\n \t}\n \n@@ -321,6 +331,8 @@ func (j *Service) Reset(w http.ResponseWriter) {\n \txsrfCookie := http.Cookie{Name: j.XSRFCookieName, Value: \"\", HttpOnly: false, Path: \"/\", Domain: j.JWTCookieDomain,\n \t\tMaxAge: -1, Expires: time.Unix(0, 0), Secure: j.SecureCookies, SameSite: j.SameSite}\n \thttp.SetCookie(w, &xsrfCookie)\n+\n+\tw.Header().Set(\"Content-Type\", \"application/json; charset=utf-8\")\n }\n \n // checkAuds verifies if claims.Audience in the list of allowed by audReader"
    },
    {
      "sha": "66fd13c903cac02eb9657cd53fb227823484401d",
      "filename": "backend/vendor/github.com/go-pkgz/expirable-cache/.gitignore",
      "status": "removed",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2F.gitignore",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2F.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2F.gitignore?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,15 +0,0 @@\n-# Binaries for programs and plugins\n-*.exe\n-*.exe~\n-*.dll\n-*.so\n-*.dylib\n-\n-# Test binary, built with `go test -c`\n-*.test\n-\n-# Output of the go coverage tool, specifically when used with LiteIDE\n-*.out\n-\n-# Dependency directories (remove the comment below to include it)\n-# vendor/"
    },
    {
      "sha": "870d3a5b101e587f222944568160ccc38d6e9c9e",
      "filename": "backend/vendor/github.com/go-pkgz/expirable-cache/.golangci.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 58,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2F.golangci.yml?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,58 +0,0 @@\n-linters-settings:\n-  govet:\n-    check-shadowing: true\n-  gocyclo:\n-    min-complexity: 15\n-  maligned:\n-    suggest-new: true\n-  goconst:\n-    min-len: 2\n-    min-occurrences: 2\n-  misspell:\n-    locale: US\n-  lll:\n-    line-length: 140\n-  gocritic:\n-    enabled-tags:\n-      - performance\n-      - style\n-      - experimental\n-    disabled-checks:\n-      - wrapperFunc\n-\n-linters:\n-  enable:\n-    - megacheck\n-    - revive\n-    - govet\n-    - unconvert\n-    - megacheck\n-    - structcheck\n-    - gas\n-    - gocyclo\n-    - dupl\n-    - misspell\n-    - unparam\n-    - varcheck\n-    - deadcode\n-    - typecheck\n-    - ineffassign\n-    - varcheck\n-    - stylecheck\n-    - gochecknoinits\n-    - exportloopref\n-    - gocritic\n-    - nakedret\n-    - gosimple\n-    - prealloc\n-  fast: false\n-  disable-all: true\n-\n-run:\n-  output:\n-    format: tab\n-  skip-dirs:\n-    - vendor\n-\n-issues:\n-  exclude-use-default: false"
    },
    {
      "sha": "536e586c3a0816e72d2f1d33081de9a0d5fe5013",
      "filename": "backend/vendor/github.com/go-pkgz/expirable-cache/README.md",
      "status": "removed",
      "additions": 0,
      "deletions": 70,
      "changes": 70,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2FREADME.md?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,70 +0,0 @@\n-# expirable-cache\n-\n-[![Build Status](https://github.com/go-pkgz/expirable-cache/workflows/build/badge.svg)](https://github.com/go-pkgz/expirable-cache/actions)\n-[![Coverage Status](https://coveralls.io/repos/github/go-pkgz/expirable-cache/badge.svg?branch=master)](https://coveralls.io/github/go-pkgz/expirable-cache?branch=master)\n-[![godoc](https://godoc.org/github.com/go-pkgz/expirable-cache?status.svg)](https://pkg.go.dev/github.com/go-pkgz/expirable-cache?tab=doc)\n-\n-Package cache implements expirable cache.\n-\n-- Support LRC, LRU and TTL-based eviction.\n-- Package is thread-safe and doesn't spawn any goroutines.\n-- On every Set() call, cache deletes single oldest entry in case it's expired.\n-- In case MaxSize is set, cache deletes the oldest entry disregarding its expiration date to maintain the size,\n-either using LRC or LRU eviction.\n-- In case of default TTL (10 years) and default MaxSize (0, unlimited) the cache will be truly unlimited\n- and will never delete entries from itself automatically.\n-\n-**Important**: only reliable way of not having expired entries stuck in a cache is to\n-run cache.DeleteExpired periodically using [time.Ticker](https://golang.org/pkg/time/#Ticker),\n-advisable period is 1/2 of TTL.\n-\n-This cache is heavily inspired by [hashicorp/golang-lru](https://github.com/hashicorp/golang-lru) _simplelru_ implementation.\n-\n-### Usage example\n-\n-```go\n-package main\n-\n-import (\n-\t\"fmt\"\n-\t\"time\"\n-\n-\t\"github.com/go-pkgz/expirable-cache/v2\"\n-)\n-\n-func main() {\n-\t// make cache with short TTL and 3 max keys\n-\tc := cache.NewCache[string, string]().WithMaxKeys(3).WithTTL(time.Millisecond * 10)\n-\n-\t// set value under key1.\n-\t// with 0 ttl (last parameter) will use cache-wide setting instead (10ms).\n-\tc.Set(\"key1\", \"val1\", 0)\n-\n-\t// get value under key1\n-\tr, ok := c.Get(\"key1\")\n-\n-\t// check for OK value, because otherwise return would be nil and\n-\t// type conversion will panic\n-\tif ok {\n-\t\trstr := r.(string) // convert cached value from interface{} to real type\n-\t\tfmt.Printf(\"value before expiration is found: %v, value: %v\\n\", ok, rstr)\n-\t}\n-\n-\ttime.Sleep(time.Millisecond * 11)\n-\n-\t// get value under key1 after key expiration\n-\tr, ok = c.Get(\"key1\")\n-\t// don't convert to string as with ok == false value would be nil\n-\tfmt.Printf(\"value after expiration is found: %v, value: %v\\n\", ok, r)\n-\n-\t// set value under key2, would evict old entry because it is already expired.\n-\t// ttl (last parameter) overrides cache-wide ttl.\n-\tc.Set(\"key2\", \"val2\", time.Minute*5)\n-\n-\tfmt.Printf(\"%+v\\n\", c)\n-\t// Output:\n-\t// value before expiration is found: true, value: val1\n-\t// value after expiration is found: false, value: <nil>\n-\t// Size: 1, Stats: {Hits:1 Misses:1 Added:2 Evicted:1} (50.0%)\n-}\n-```\n\\ No newline at end of file"
    },
    {
      "sha": "5966a8b04fa1b9fc9a1a5fed5cff421e2ac426b4",
      "filename": "backend/vendor/github.com/go-pkgz/expirable-cache/cache.go",
      "status": "removed",
      "additions": 0,
      "deletions": 272,
      "changes": 272,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Fcache.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Fcache.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Fcache.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,272 +0,0 @@\n-// Package cache implements Cache similar to hashicorp/golang-lru\n-//\n-// Support LRC, LRU and TTL-based eviction.\n-// Package is thread-safe and doesn't spawn any goroutines.\n-// On every Set() call, cache deletes single oldest entry in case it's expired.\n-// In case MaxSize is set, cache deletes the oldest entry disregarding its expiration date to maintain the size,\n-// either using LRC or LRU eviction.\n-// In case of default TTL (10 years) and default MaxSize (0, unlimited) the cache will be truly unlimited\n-// and will never delete entries from itself automatically.\n-//\n-// Important: only reliable way of not having expired entries stuck in a cache is to\n-// run cache.DeleteExpired periodically using time.Ticker, advisable period is 1/2 of TTL.\n-package cache\n-\n-import (\n-\t\"container/list\"\n-\t\"fmt\"\n-\t\"sync\"\n-\t\"time\"\n-)\n-\n-// Cache defines cache interface\n-type Cache interface {\n-\tfmt.Stringer\n-\tSet(key string, value interface{}, ttl time.Duration)\n-\tGet(key string) (interface{}, bool)\n-\tPeek(key string) (interface{}, bool)\n-\tKeys() []string\n-\tLen() int\n-\tInvalidate(key string)\n-\tInvalidateFn(fn func(key string) bool)\n-\tRemoveOldest()\n-\tDeleteExpired()\n-\tPurge()\n-\tStat() Stats\n-}\n-\n-// Stats provides statistics for cache\n-type Stats struct {\n-\tHits, Misses   int // cache effectiveness\n-\tAdded, Evicted int // number of added and evicted records\n-}\n-\n-// cacheImpl provides Cache interface implementation.\n-type cacheImpl struct {\n-\tttl       time.Duration\n-\tmaxKeys   int\n-\tisLRU     bool\n-\tonEvicted func(key string, value interface{})\n-\n-\tsync.Mutex\n-\tstat      Stats\n-\titems     map[string]*list.Element\n-\tevictList *list.List\n-}\n-\n-// noEvictionTTL - very long ttl to prevent eviction\n-const noEvictionTTL = time.Hour * 24 * 365 * 10\n-\n-// NewCache returns a new Cache.\n-// Default MaxKeys is unlimited (0).\n-// Default TTL is 10 years, sane value for expirable cache is 5 minutes.\n-// Default eviction mode is LRC, appropriate option allow to change it to LRU.\n-func NewCache(options ...Option) (Cache, error) {\n-\tres := cacheImpl{\n-\t\titems:     map[string]*list.Element{},\n-\t\tevictList: list.New(),\n-\t\tttl:       noEvictionTTL,\n-\t\tmaxKeys:   0,\n-\t}\n-\n-\tfor _, opt := range options {\n-\t\tif err := opt(&res); err != nil {\n-\t\t\treturn nil, fmt.Errorf(\"failed to set cache option: %w\", err)\n-\t\t}\n-\t}\n-\treturn &res, nil\n-}\n-\n-// Set key, ttl of 0 would use cache-wide TTL\n-func (c *cacheImpl) Set(key string, value interface{}, ttl time.Duration) {\n-\tc.Lock()\n-\tdefer c.Unlock()\n-\tnow := time.Now()\n-\tif ttl == 0 {\n-\t\tttl = c.ttl\n-\t}\n-\n-\t// Check for existing item\n-\tif ent, ok := c.items[key]; ok {\n-\t\tc.evictList.MoveToFront(ent)\n-\t\tent.Value.(*cacheItem).value = value\n-\t\tent.Value.(*cacheItem).expiresAt = now.Add(ttl)\n-\t\treturn\n-\t}\n-\n-\t// Add new item\n-\tent := &cacheItem{key: key, value: value, expiresAt: now.Add(ttl)}\n-\tentry := c.evictList.PushFront(ent)\n-\tc.items[key] = entry\n-\tc.stat.Added++\n-\n-\t// Remove oldest entry if it is expired, only in case of non-default TTL.\n-\tif c.ttl != noEvictionTTL || ttl != noEvictionTTL {\n-\t\tc.removeOldestIfExpired()\n-\t}\n-\n-\t// Verify size not exceeded\n-\tif c.maxKeys > 0 && len(c.items) > c.maxKeys {\n-\t\tc.removeOldest()\n-\t}\n-}\n-\n-// Get returns the key value if it's not expired\n-func (c *cacheImpl) Get(key string) (interface{}, bool) {\n-\tc.Lock()\n-\tdefer c.Unlock()\n-\tif ent, ok := c.items[key]; ok {\n-\t\t// Expired item check\n-\t\tif time.Now().After(ent.Value.(*cacheItem).expiresAt) {\n-\t\t\tc.stat.Misses++\n-\t\t\treturn nil, false\n-\t\t}\n-\t\tif c.isLRU {\n-\t\t\tc.evictList.MoveToFront(ent)\n-\t\t}\n-\t\tc.stat.Hits++\n-\t\treturn ent.Value.(*cacheItem).value, true\n-\t}\n-\tc.stat.Misses++\n-\treturn nil, false\n-}\n-\n-// Peek returns the key value (or undefined if not found) without updating the \"recently used\"-ness of the key.\n-// Works exactly the same as Get in case of LRC mode (default one).\n-func (c *cacheImpl) Peek(key string) (interface{}, bool) {\n-\tc.Lock()\n-\tdefer c.Unlock()\n-\tif ent, ok := c.items[key]; ok {\n-\t\t// Expired item check\n-\t\tif time.Now().After(ent.Value.(*cacheItem).expiresAt) {\n-\t\t\tc.stat.Misses++\n-\t\t\treturn nil, false\n-\t\t}\n-\t\tc.stat.Hits++\n-\t\treturn ent.Value.(*cacheItem).value, true\n-\t}\n-\tc.stat.Misses++\n-\treturn nil, false\n-}\n-\n-// Keys returns a slice of the keys in the cache, from oldest to newest.\n-func (c *cacheImpl) Keys() []string {\n-\tc.Lock()\n-\tdefer c.Unlock()\n-\treturn c.keys()\n-}\n-\n-// Len return count of items in cache, including expired\n-func (c *cacheImpl) Len() int {\n-\tc.Lock()\n-\tdefer c.Unlock()\n-\treturn c.evictList.Len()\n-}\n-\n-// Invalidate key (item) from the cache\n-func (c *cacheImpl) Invalidate(key string) {\n-\tc.Lock()\n-\tdefer c.Unlock()\n-\tif ent, ok := c.items[key]; ok {\n-\t\tc.removeElement(ent)\n-\t}\n-}\n-\n-// InvalidateFn deletes multiple keys if predicate is true\n-func (c *cacheImpl) InvalidateFn(fn func(key string) bool) {\n-\tc.Lock()\n-\tdefer c.Unlock()\n-\tfor key, ent := range c.items {\n-\t\tif fn(key) {\n-\t\t\tc.removeElement(ent)\n-\t\t}\n-\t}\n-}\n-\n-// RemoveOldest remove oldest element in the cache\n-func (c *cacheImpl) RemoveOldest() {\n-\tc.Lock()\n-\tdefer c.Unlock()\n-\tc.removeOldest()\n-}\n-\n-// DeleteExpired clears cache of expired items\n-func (c *cacheImpl) DeleteExpired() {\n-\tc.Lock()\n-\tdefer c.Unlock()\n-\tfor _, key := range c.keys() {\n-\t\tif time.Now().After(c.items[key].Value.(*cacheItem).expiresAt) {\n-\t\t\tc.removeElement(c.items[key])\n-\t\t}\n-\t}\n-}\n-\n-// Purge clears the cache completely.\n-func (c *cacheImpl) Purge() {\n-\tc.Lock()\n-\tdefer c.Unlock()\n-\tfor k, v := range c.items {\n-\t\tdelete(c.items, k)\n-\t\tc.stat.Evicted++\n-\t\tif c.onEvicted != nil {\n-\t\t\tc.onEvicted(k, v.Value.(*cacheItem).value)\n-\t\t}\n-\t}\n-\tc.evictList.Init()\n-}\n-\n-// Stat gets the current stats for cache\n-func (c *cacheImpl) Stat() Stats {\n-\tc.Lock()\n-\tdefer c.Unlock()\n-\treturn c.stat\n-}\n-\n-func (c *cacheImpl) String() string {\n-\tstats := c.Stat()\n-\tsize := c.Len()\n-\treturn fmt.Sprintf(\"Size: %d, Stats: %+v (%0.1f%%)\", size, stats, 100*float64(stats.Hits)/float64(stats.Hits+stats.Misses))\n-}\n-\n-// Keys returns a slice of the keys in the cache, from oldest to newest. Has to be called with lock!\n-func (c *cacheImpl) keys() []string {\n-\tkeys := make([]string, 0, len(c.items))\n-\tfor ent := c.evictList.Back(); ent != nil; ent = ent.Prev() {\n-\t\tkeys = append(keys, ent.Value.(*cacheItem).key)\n-\t}\n-\treturn keys\n-}\n-\n-// removeOldest removes the oldest item from the cache. Has to be called with lock!\n-func (c *cacheImpl) removeOldest() {\n-\tent := c.evictList.Back()\n-\tif ent != nil {\n-\t\tc.removeElement(ent)\n-\t}\n-}\n-\n-// removeOldest removes the oldest item from the cache in case it's already expired. Has to be called with lock!\n-func (c *cacheImpl) removeOldestIfExpired() {\n-\tent := c.evictList.Back()\n-\tif ent != nil && time.Now().After(ent.Value.(*cacheItem).expiresAt) {\n-\t\tc.removeElement(ent)\n-\t}\n-}\n-\n-// removeElement is used to remove a given list element from the cache. Has to be called with lock!\n-func (c *cacheImpl) removeElement(e *list.Element) {\n-\tc.evictList.Remove(e)\n-\tkv := e.Value.(*cacheItem)\n-\tdelete(c.items, kv.key)\n-\tc.stat.Evicted++\n-\tif c.onEvicted != nil {\n-\t\tc.onEvicted(kv.key, kv.value)\n-\t}\n-}\n-\n-// cacheItem is used to hold a value in the evictList\n-type cacheItem struct {\n-\texpiresAt time.Time\n-\tkey       string\n-\tvalue     interface{}\n-}"
    },
    {
      "sha": "924345a0a017bbc6401180a6fc412fa6fa0821bf",
      "filename": "backend/vendor/github.com/go-pkgz/expirable-cache/options.go",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Foptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Foptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Foptions.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,40 +0,0 @@\n-package cache\n-\n-import \"time\"\n-\n-// Option func type\n-type Option func(lc *cacheImpl) error\n-\n-// OnEvicted called automatically for automatically and manually deleted entries\n-func OnEvicted(fn func(key string, value interface{})) Option {\n-\treturn func(lc *cacheImpl) error {\n-\t\tlc.onEvicted = fn\n-\t\treturn nil\n-\t}\n-}\n-\n-// MaxKeys functional option defines how many keys to keep.\n-// By default it is 0, which means unlimited.\n-func MaxKeys(max int) Option {\n-\treturn func(lc *cacheImpl) error {\n-\t\tlc.maxKeys = max\n-\t\treturn nil\n-\t}\n-}\n-\n-// TTL functional option defines TTL for all cache entries.\n-// By default it is set to 10 years, sane option for expirable cache might be 5 minutes.\n-func TTL(ttl time.Duration) Option {\n-\treturn func(lc *cacheImpl) error {\n-\t\tlc.ttl = ttl\n-\t\treturn nil\n-\t}\n-}\n-\n-// LRU sets cache to LRU (Least Recently Used) eviction mode.\n-func LRU() Option {\n-\treturn func(lc *cacheImpl) error {\n-\t\tlc.isLRU = true\n-\t\treturn nil\n-\t}\n-}"
    },
    {
      "sha": "d4771b094b6d23cda153c32ebb091aefc5b95165",
      "filename": "backend/vendor/github.com/go-pkgz/expirable-cache/v3/LICENSE",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Fv3%2FLICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Fv3%2FLICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Fv3%2FLICENSE?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "previous_filename": "backend/vendor/github.com/go-pkgz/expirable-cache/LICENSE"
    },
    {
      "sha": "5b4642dc0c5892cb89fe6a2b3e76d4d30d54af1f",
      "filename": "backend/vendor/github.com/go-pkgz/expirable-cache/v3/cache.go",
      "status": "added",
      "additions": 371,
      "deletions": 0,
      "changes": 371,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Fv3%2Fcache.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Fv3%2Fcache.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Fv3%2Fcache.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,371 @@\n+// Package cache implements Cache similar to hashicorp/golang-lru\n+//\n+// Support LRC, LRU and TTL-based eviction.\n+// Package is thread-safe and doesn't spawn any goroutines.\n+// On every Set() call, cache deletes single oldest entry in case it's expired.\n+// In case MaxSize is set, cache deletes the oldest entry disregarding its expiration date to maintain the size,\n+// either using LRC or LRU eviction.\n+// In case of default TTL (10 years) and default MaxSize (0, unlimited) the cache will be truly unlimited\n+// and will never delete entries from itself automatically.\n+//\n+// Important: only reliable way of not having expired entries stuck in a cache is to\n+// run cache.DeleteExpired periodically using time.Ticker, advisable period is 1/2 of TTL.\n+package cache\n+\n+import (\n+\t\"container/list\"\n+\t\"fmt\"\n+\t\"sync\"\n+\t\"time\"\n+)\n+\n+// Cache defines cache interface\n+type Cache[K comparable, V any] interface {\n+\tfmt.Stringer\n+\toptions[K, V]\n+\tAdd(key K, value V) bool\n+\tSet(key K, value V, ttl time.Duration)\n+\tGet(key K) (V, bool)\n+\tGetExpiration(key K) (time.Time, bool)\n+\tGetOldest() (K, V, bool)\n+\tContains(key K) (ok bool)\n+\tPeek(key K) (V, bool)\n+\tValues() []V\n+\tKeys() []K\n+\tLen() int\n+\tRemove(key K) bool\n+\tInvalidate(key K)\n+\tInvalidateFn(fn func(key K) bool)\n+\tRemoveOldest() (K, V, bool)\n+\tDeleteExpired()\n+\tPurge()\n+\tResize(int) int\n+\tStat() Stats\n+}\n+\n+// Stats provides statistics for cache\n+type Stats struct {\n+\tHits, Misses   int // cache effectiveness\n+\tAdded, Evicted int // number of added and evicted records\n+}\n+\n+// cacheImpl provides Cache interface implementation.\n+type cacheImpl[K comparable, V any] struct {\n+\tttl       time.Duration\n+\tmaxKeys   int\n+\tisLRU     bool\n+\tonEvicted func(key K, value V)\n+\n+\tsync.Mutex\n+\tstat      Stats\n+\titems     map[K]*list.Element\n+\tevictList *list.List\n+}\n+\n+// noEvictionTTL - very long ttl to prevent eviction\n+const noEvictionTTL = time.Hour * 24 * 365 * 10\n+\n+// NewCache returns a new Cache.\n+// Default MaxKeys is unlimited (0).\n+// Default TTL is 10 years, sane value for expirable cache is 5 minutes.\n+// Default eviction mode is LRC, appropriate option allow to change it to LRU.\n+func NewCache[K comparable, V any]() Cache[K, V] {\n+\treturn &cacheImpl[K, V]{\n+\t\titems:     map[K]*list.Element{},\n+\t\tevictList: list.New(),\n+\t\tttl:       noEvictionTTL,\n+\t\tmaxKeys:   0,\n+\t}\n+}\n+\n+// Add adds a value to the cache. Returns true if an eviction occurred.\n+// Returns false if there was no eviction: the item was already in the cache,\n+// or the size was not exceeded.\n+func (c *cacheImpl[K, V]) Add(key K, value V) (evicted bool) {\n+\treturn c.addWithTTL(key, value, c.ttl)\n+}\n+\n+// Set key, ttl of 0 would use cache-wide TTL\n+func (c *cacheImpl[K, V]) Set(key K, value V, ttl time.Duration) {\n+\tc.addWithTTL(key, value, ttl)\n+}\n+\n+// Returns true if an eviction occurred.\n+// Returns false if there was no eviction: the item was already in the cache,\n+// or the size was not exceeded.\n+func (c *cacheImpl[K, V]) addWithTTL(key K, value V, ttl time.Duration) (evicted bool) {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\tnow := time.Now()\n+\tif ttl == 0 {\n+\t\tttl = c.ttl\n+\t}\n+\n+\t// Check for existing item\n+\tif ent, ok := c.items[key]; ok {\n+\t\tc.evictList.MoveToFront(ent)\n+\t\tent.Value.(*cacheItem[K, V]).value = value\n+\t\tent.Value.(*cacheItem[K, V]).expiresAt = now.Add(ttl)\n+\t\treturn false\n+\t}\n+\n+\t// Add new item\n+\tent := &cacheItem[K, V]{key: key, value: value, expiresAt: now.Add(ttl)}\n+\tentry := c.evictList.PushFront(ent)\n+\tc.items[key] = entry\n+\tc.stat.Added++\n+\n+\t// Remove the oldest entry if it is expired, only in case of non-default TTL.\n+\tif c.ttl != noEvictionTTL || ttl != noEvictionTTL {\n+\t\tc.removeOldestIfExpired()\n+\t}\n+\n+\tevict := c.maxKeys > 0 && len(c.items) > c.maxKeys\n+\t// Verify size not exceeded\n+\tif evict {\n+\t\tc.removeOldest()\n+\t}\n+\treturn evict\n+}\n+\n+// Get returns the key value if it's not expired\n+func (c *cacheImpl[K, V]) Get(key K) (V, bool) {\n+\tdef := *new(V)\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\tif ent, ok := c.items[key]; ok {\n+\t\t// Expired item check\n+\t\tif time.Now().After(ent.Value.(*cacheItem[K, V]).expiresAt) {\n+\t\t\tc.stat.Misses++\n+\t\t\treturn ent.Value.(*cacheItem[K, V]).value, false\n+\t\t}\n+\t\tif c.isLRU {\n+\t\t\tc.evictList.MoveToFront(ent)\n+\t\t}\n+\t\tc.stat.Hits++\n+\t\treturn ent.Value.(*cacheItem[K, V]).value, true\n+\t}\n+\tc.stat.Misses++\n+\treturn def, false\n+}\n+\n+// Contains checks if a key is in the cache, without updating the recent-ness\n+// or deleting it for being stale.\n+func (c *cacheImpl[K, V]) Contains(key K) (ok bool) {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\t_, ok = c.items[key]\n+\treturn ok\n+}\n+\n+// Peek returns the key value (or undefined if not found) without updating the \"recently used\"-ness of the key.\n+// Works exactly the same as Get in case of LRC mode (default one).\n+func (c *cacheImpl[K, V]) Peek(key K) (V, bool) {\n+\tdef := *new(V)\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\tif ent, ok := c.items[key]; ok {\n+\t\t// Expired item check\n+\t\tif time.Now().After(ent.Value.(*cacheItem[K, V]).expiresAt) {\n+\t\t\tc.stat.Misses++\n+\t\t\treturn ent.Value.(*cacheItem[K, V]).value, false\n+\t\t}\n+\t\tc.stat.Hits++\n+\t\treturn ent.Value.(*cacheItem[K, V]).value, true\n+\t}\n+\tc.stat.Misses++\n+\treturn def, false\n+}\n+\n+// GetExpiration returns the expiration time of the key. Non-existing key returns zero time.\n+func (c *cacheImpl[K, V]) GetExpiration(key K) (time.Time, bool) {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\tif ent, ok := c.items[key]; ok {\n+\t\treturn ent.Value.(*cacheItem[K, V]).expiresAt, true\n+\t}\n+\treturn time.Time{}, false\n+}\n+\n+// Keys returns a slice of the keys in the cache, from oldest to newest.\n+func (c *cacheImpl[K, V]) Keys() []K {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\treturn c.keys()\n+}\n+\n+// Values returns a slice of the values in the cache, from oldest to newest.\n+// Expired entries are filtered out.\n+func (c *cacheImpl[K, V]) Values() []V {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\tvalues := make([]V, 0, len(c.items))\n+\tnow := time.Now()\n+\tfor ent := c.evictList.Back(); ent != nil; ent = ent.Prev() {\n+\t\tif now.After(ent.Value.(*cacheItem[K, V]).expiresAt) {\n+\t\t\tcontinue\n+\t\t}\n+\t\tvalues = append(values, ent.Value.(*cacheItem[K, V]).value)\n+\t}\n+\treturn values\n+}\n+\n+// Len return count of items in cache, including expired\n+func (c *cacheImpl[K, V]) Len() int {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\treturn c.evictList.Len()\n+}\n+\n+// Resize changes the cache size. Size of 0 means unlimited.\n+func (c *cacheImpl[K, V]) Resize(size int) int {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\tif size <= 0 {\n+\t\tc.maxKeys = 0\n+\t\treturn 0\n+\t}\n+\tdiff := c.evictList.Len() - size\n+\tif diff < 0 {\n+\t\tdiff = 0\n+\t}\n+\tfor i := 0; i < diff; i++ {\n+\t\tc.removeOldest()\n+\t}\n+\tc.maxKeys = size\n+\treturn diff\n+}\n+\n+// Invalidate key (item) from the cache\n+func (c *cacheImpl[K, V]) Invalidate(key K) {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\tif ent, ok := c.items[key]; ok {\n+\t\tc.removeElement(ent)\n+\t}\n+}\n+\n+// InvalidateFn deletes multiple keys if predicate is true\n+func (c *cacheImpl[K, V]) InvalidateFn(fn func(key K) bool) {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\tfor key, ent := range c.items {\n+\t\tif fn(key) {\n+\t\t\tc.removeElement(ent)\n+\t\t}\n+\t}\n+}\n+\n+// Remove removes the provided key from the cache, returning if the\n+// key was contained.\n+func (c *cacheImpl[K, V]) Remove(key K) bool {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\tif ent, ok := c.items[key]; ok {\n+\t\tc.removeElement(ent)\n+\t\treturn true\n+\t}\n+\treturn false\n+}\n+\n+// RemoveOldest remove the oldest element in the cache\n+func (c *cacheImpl[K, V]) RemoveOldest() (key K, value V, ok bool) {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\tif ent := c.evictList.Back(); ent != nil {\n+\t\tc.removeElement(ent)\n+\t\treturn ent.Value.(*cacheItem[K, V]).key, ent.Value.(*cacheItem[K, V]).value, true\n+\t}\n+\treturn\n+}\n+\n+// GetOldest returns the oldest entry\n+func (c *cacheImpl[K, V]) GetOldest() (key K, value V, ok bool) {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\tif ent := c.evictList.Back(); ent != nil {\n+\t\treturn ent.Value.(*cacheItem[K, V]).key, ent.Value.(*cacheItem[K, V]).value, true\n+\t}\n+\treturn\n+}\n+\n+// DeleteExpired clears cache of expired items\n+func (c *cacheImpl[K, V]) DeleteExpired() {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\tfor _, key := range c.keys() {\n+\t\tif time.Now().After(c.items[key].Value.(*cacheItem[K, V]).expiresAt) {\n+\t\t\tc.removeElement(c.items[key])\n+\t\t}\n+\t}\n+}\n+\n+// Purge clears the cache completely.\n+func (c *cacheImpl[K, V]) Purge() {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\tfor k, v := range c.items {\n+\t\tdelete(c.items, k)\n+\t\tc.stat.Evicted++\n+\t\tif c.onEvicted != nil {\n+\t\t\tc.onEvicted(k, v.Value.(*cacheItem[K, V]).value)\n+\t\t}\n+\t}\n+\tc.evictList.Init()\n+}\n+\n+// Stat gets the current stats for cache\n+func (c *cacheImpl[K, V]) Stat() Stats {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\treturn c.stat\n+}\n+\n+func (c *cacheImpl[K, V]) String() string {\n+\tstats := c.Stat()\n+\tsize := c.Len()\n+\treturn fmt.Sprintf(\"Size: %d, Stats: %+v (%0.1f%%)\", size, stats, 100*float64(stats.Hits)/float64(stats.Hits+stats.Misses))\n+}\n+\n+// Keys returns a slice of the keys in the cache, from oldest to newest. Has to be called with lock!\n+func (c *cacheImpl[K, V]) keys() []K {\n+\tkeys := make([]K, 0, len(c.items))\n+\tfor ent := c.evictList.Back(); ent != nil; ent = ent.Prev() {\n+\t\tkeys = append(keys, ent.Value.(*cacheItem[K, V]).key)\n+\t}\n+\treturn keys\n+}\n+\n+// removeOldest removes the oldest item from the cache. Has to be called with lock!\n+func (c *cacheImpl[K, V]) removeOldest() {\n+\tent := c.evictList.Back()\n+\tif ent != nil {\n+\t\tc.removeElement(ent)\n+\t}\n+}\n+\n+// removeOldest removes the oldest item from the cache in case it's already expired. Has to be called with lock!\n+func (c *cacheImpl[K, V]) removeOldestIfExpired() {\n+\tent := c.evictList.Back()\n+\tif ent != nil && time.Now().After(ent.Value.(*cacheItem[K, V]).expiresAt) {\n+\t\tc.removeElement(ent)\n+\t}\n+}\n+\n+// removeElement is used to remove a given list element from the cache. Has to be called with lock!\n+func (c *cacheImpl[K, V]) removeElement(e *list.Element) {\n+\tc.evictList.Remove(e)\n+\tkv := e.Value.(*cacheItem[K, V])\n+\tdelete(c.items, kv.key)\n+\tc.stat.Evicted++\n+\tif c.onEvicted != nil {\n+\t\tc.onEvicted(kv.key, kv.value)\n+\t}\n+}\n+\n+// cacheItem is used to hold a value in the evictList\n+type cacheItem[K comparable, V any] struct {\n+\texpiresAt time.Time\n+\tkey       K\n+\tvalue     V\n+}"
    },
    {
      "sha": "b5fe65d8200b7ec0de3bf70524002a2f4ee15c9d",
      "filename": "backend/vendor/github.com/go-pkgz/expirable-cache/v3/options.go",
      "status": "added",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Fv3%2Foptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Fv3%2Foptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fexpirable-cache%2Fv3%2Foptions.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,36 @@\n+package cache\n+\n+import \"time\"\n+\n+type options[K comparable, V any] interface {\n+\tWithTTL(ttl time.Duration) Cache[K, V]\n+\tWithMaxKeys(maxKeys int) Cache[K, V]\n+\tWithLRU() Cache[K, V]\n+\tWithOnEvicted(fn func(key K, value V)) Cache[K, V]\n+}\n+\n+// WithTTL functional option defines TTL for all cache entries.\n+// By default, it is set to 10 years, sane option for expirable cache might be 5 minutes.\n+func (c *cacheImpl[K, V]) WithTTL(ttl time.Duration) Cache[K, V] {\n+\tc.ttl = ttl\n+\treturn c\n+}\n+\n+// WithMaxKeys functional option defines how many keys to keep.\n+// By default, it is 0, which means unlimited.\n+func (c *cacheImpl[K, V]) WithMaxKeys(maxKeys int) Cache[K, V] {\n+\tc.maxKeys = maxKeys\n+\treturn c\n+}\n+\n+// WithLRU sets cache to LRU (Least Recently Used) eviction mode.\n+func (c *cacheImpl[K, V]) WithLRU() Cache[K, V] {\n+\tc.isLRU = true\n+\treturn c\n+}\n+\n+// WithOnEvicted defined function which would be called automatically for automatically and manually deleted entries\n+func (c *cacheImpl[K, V]) WithOnEvicted(fn func(key K, value V)) Cache[K, V] {\n+\tc.onEvicted = fn\n+\treturn c\n+}"
    },
    {
      "sha": "f773589f1b90a0394fffb45614f8d6922d786080",
      "filename": "backend/vendor/github.com/go-pkgz/notify/.golangci.yml",
      "status": "modified",
      "additions": 5,
      "deletions": 9,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fnotify%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fnotify%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fnotify%2F.golangci.yml?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,15 +1,9 @@\n run:\n   timeout: 5m\n-  output:\n-    format: tab\n-  skip-dirs:\n-    - vendor\n \n linters-settings:\n   govet:\n     check-shadowing: true\n-  maligned:\n-    suggest-new: true\n   goconst:\n     min-len: 2\n     min-occurrences: 2\n@@ -31,12 +25,12 @@ linters-settings:\n \n linters:\n   enable:\n-    - megacheck\n     - revive\n     - govet\n     - unconvert\n-    - megacheck\n-    - gas\n+    - staticcheck\n+    - gosec\n+    - unused\n     - gocyclo\n     - dupl\n     - misspell\n@@ -64,3 +58,5 @@ issues:\n         - gosec\n         - dupl\n   exclude-use-default: false\n+  exclude-dirs:\n+    - vendor"
    },
    {
      "sha": "f888a1aafc3b684f1ef66998ed0c80db0b29f395",
      "filename": "backend/vendor/github.com/go-pkgz/notify/README.md",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fnotify%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fnotify%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fnotify%2FREADME.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -115,6 +115,9 @@ func main() {\n \t\tSuccessMsg: \"Success\",        // optional, for auth, set by default\n \t\tErrorMsg:   \"Error\",          // optional, for auth, unset by default\n \t})\n+\tif err != nil {\n+\t\tlog.Fatalf(\"problem creating telegram notifier, %v\", err)\n+\t}\n \terr = tg.Send(context.Background(), \"telegram:-1001480738202\", \"Hello, World!\")\n \tif err != nil {\n \t\tlog.Fatalf(\"problem sending message using telegram, %v\", err)"
    },
    {
      "sha": "15167cd746c560e5b3d3b233a169aa64d3e9101e",
      "filename": "backend/vendor/github.com/golang/protobuf/AUTHORS",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2FAUTHORS",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2FAUTHORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2FAUTHORS?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,3 +0,0 @@\n-# This source code refers to The Go Authors for copyright purposes.\n-# The master list of authors is in the main Go distribution,\n-# visible at http://tip.golang.org/AUTHORS."
    },
    {
      "sha": "1c4577e9680611383f46044d17fa343a96997c3c",
      "filename": "backend/vendor/github.com/golang/protobuf/CONTRIBUTORS",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2FCONTRIBUTORS",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2FCONTRIBUTORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2FCONTRIBUTORS?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,3 +0,0 @@\n-# This source code was written by the Go contributors.\n-# The master list of contributors is in the main Go distribution,\n-# visible at http://tip.golang.org/CONTRIBUTORS."
    },
    {
      "sha": "0f646931a4627fbe7c4259f3fb0337d04d798d8e",
      "filename": "backend/vendor/github.com/golang/protobuf/LICENSE",
      "status": "removed",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2FLICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2FLICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2FLICENSE?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,28 +0,0 @@\n-Copyright 2010 The Go Authors.  All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are\n-met:\n-\n-    * Redistributions of source code must retain the above copyright\n-notice, this list of conditions and the following disclaimer.\n-    * Redistributions in binary form must reproduce the above\n-copyright notice, this list of conditions and the following disclaimer\n-in the documentation and/or other materials provided with the\n-distribution.\n-    * Neither the name of Google Inc. nor the names of its\n-contributors may be used to endorse or promote products derived from\n-this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n-\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n-A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n-OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n-SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n-LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n-THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n-OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-"
    },
    {
      "sha": "e810e6fea129d47402785bf2850cc8505d51e4c9",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/buffer.go",
      "status": "removed",
      "additions": 0,
      "deletions": 324,
      "changes": 324,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fbuffer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fbuffer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fbuffer.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,324 +0,0 @@\n-// Copyright 2019 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proto\n-\n-import (\n-\t\"errors\"\n-\t\"fmt\"\n-\n-\t\"google.golang.org/protobuf/encoding/prototext\"\n-\t\"google.golang.org/protobuf/encoding/protowire\"\n-\t\"google.golang.org/protobuf/runtime/protoimpl\"\n-)\n-\n-const (\n-\tWireVarint     = 0\n-\tWireFixed32    = 5\n-\tWireFixed64    = 1\n-\tWireBytes      = 2\n-\tWireStartGroup = 3\n-\tWireEndGroup   = 4\n-)\n-\n-// EncodeVarint returns the varint encoded bytes of v.\n-func EncodeVarint(v uint64) []byte {\n-\treturn protowire.AppendVarint(nil, v)\n-}\n-\n-// SizeVarint returns the length of the varint encoded bytes of v.\n-// This is equal to len(EncodeVarint(v)).\n-func SizeVarint(v uint64) int {\n-\treturn protowire.SizeVarint(v)\n-}\n-\n-// DecodeVarint parses a varint encoded integer from b,\n-// returning the integer value and the length of the varint.\n-// It returns (0, 0) if there is a parse error.\n-func DecodeVarint(b []byte) (uint64, int) {\n-\tv, n := protowire.ConsumeVarint(b)\n-\tif n < 0 {\n-\t\treturn 0, 0\n-\t}\n-\treturn v, n\n-}\n-\n-// Buffer is a buffer for encoding and decoding the protobuf wire format.\n-// It may be reused between invocations to reduce memory usage.\n-type Buffer struct {\n-\tbuf           []byte\n-\tidx           int\n-\tdeterministic bool\n-}\n-\n-// NewBuffer allocates a new Buffer initialized with buf,\n-// where the contents of buf are considered the unread portion of the buffer.\n-func NewBuffer(buf []byte) *Buffer {\n-\treturn &Buffer{buf: buf}\n-}\n-\n-// SetDeterministic specifies whether to use deterministic serialization.\n-//\n-// Deterministic serialization guarantees that for a given binary, equal\n-// messages will always be serialized to the same bytes. This implies:\n-//\n-//   - Repeated serialization of a message will return the same bytes.\n-//   - Different processes of the same binary (which may be executing on\n-//     different machines) will serialize equal messages to the same bytes.\n-//\n-// Note that the deterministic serialization is NOT canonical across\n-// languages. It is not guaranteed to remain stable over time. It is unstable\n-// across different builds with schema changes due to unknown fields.\n-// Users who need canonical serialization (e.g., persistent storage in a\n-// canonical form, fingerprinting, etc.) should define their own\n-// canonicalization specification and implement their own serializer rather\n-// than relying on this API.\n-//\n-// If deterministic serialization is requested, map entries will be sorted\n-// by keys in lexographical order. This is an implementation detail and\n-// subject to change.\n-func (b *Buffer) SetDeterministic(deterministic bool) {\n-\tb.deterministic = deterministic\n-}\n-\n-// SetBuf sets buf as the internal buffer,\n-// where the contents of buf are considered the unread portion of the buffer.\n-func (b *Buffer) SetBuf(buf []byte) {\n-\tb.buf = buf\n-\tb.idx = 0\n-}\n-\n-// Reset clears the internal buffer of all written and unread data.\n-func (b *Buffer) Reset() {\n-\tb.buf = b.buf[:0]\n-\tb.idx = 0\n-}\n-\n-// Bytes returns the internal buffer.\n-func (b *Buffer) Bytes() []byte {\n-\treturn b.buf\n-}\n-\n-// Unread returns the unread portion of the buffer.\n-func (b *Buffer) Unread() []byte {\n-\treturn b.buf[b.idx:]\n-}\n-\n-// Marshal appends the wire-format encoding of m to the buffer.\n-func (b *Buffer) Marshal(m Message) error {\n-\tvar err error\n-\tb.buf, err = marshalAppend(b.buf, m, b.deterministic)\n-\treturn err\n-}\n-\n-// Unmarshal parses the wire-format message in the buffer and\n-// places the decoded results in m.\n-// It does not reset m before unmarshaling.\n-func (b *Buffer) Unmarshal(m Message) error {\n-\terr := UnmarshalMerge(b.Unread(), m)\n-\tb.idx = len(b.buf)\n-\treturn err\n-}\n-\n-type unknownFields struct{ XXX_unrecognized protoimpl.UnknownFields }\n-\n-func (m *unknownFields) String() string { panic(\"not implemented\") }\n-func (m *unknownFields) Reset()         { panic(\"not implemented\") }\n-func (m *unknownFields) ProtoMessage()  { panic(\"not implemented\") }\n-\n-// DebugPrint dumps the encoded bytes of b with a header and footer including s\n-// to stdout. This is only intended for debugging.\n-func (*Buffer) DebugPrint(s string, b []byte) {\n-\tm := MessageReflect(new(unknownFields))\n-\tm.SetUnknown(b)\n-\tb, _ = prototext.MarshalOptions{AllowPartial: true, Indent: \"\\t\"}.Marshal(m.Interface())\n-\tfmt.Printf(\"==== %s ====\\n%s==== %s ====\\n\", s, b, s)\n-}\n-\n-// EncodeVarint appends an unsigned varint encoding to the buffer.\n-func (b *Buffer) EncodeVarint(v uint64) error {\n-\tb.buf = protowire.AppendVarint(b.buf, v)\n-\treturn nil\n-}\n-\n-// EncodeZigzag32 appends a 32-bit zig-zag varint encoding to the buffer.\n-func (b *Buffer) EncodeZigzag32(v uint64) error {\n-\treturn b.EncodeVarint(uint64((uint32(v) << 1) ^ uint32((int32(v) >> 31))))\n-}\n-\n-// EncodeZigzag64 appends a 64-bit zig-zag varint encoding to the buffer.\n-func (b *Buffer) EncodeZigzag64(v uint64) error {\n-\treturn b.EncodeVarint(uint64((uint64(v) << 1) ^ uint64((int64(v) >> 63))))\n-}\n-\n-// EncodeFixed32 appends a 32-bit little-endian integer to the buffer.\n-func (b *Buffer) EncodeFixed32(v uint64) error {\n-\tb.buf = protowire.AppendFixed32(b.buf, uint32(v))\n-\treturn nil\n-}\n-\n-// EncodeFixed64 appends a 64-bit little-endian integer to the buffer.\n-func (b *Buffer) EncodeFixed64(v uint64) error {\n-\tb.buf = protowire.AppendFixed64(b.buf, uint64(v))\n-\treturn nil\n-}\n-\n-// EncodeRawBytes appends a length-prefixed raw bytes to the buffer.\n-func (b *Buffer) EncodeRawBytes(v []byte) error {\n-\tb.buf = protowire.AppendBytes(b.buf, v)\n-\treturn nil\n-}\n-\n-// EncodeStringBytes appends a length-prefixed raw bytes to the buffer.\n-// It does not validate whether v contains valid UTF-8.\n-func (b *Buffer) EncodeStringBytes(v string) error {\n-\tb.buf = protowire.AppendString(b.buf, v)\n-\treturn nil\n-}\n-\n-// EncodeMessage appends a length-prefixed encoded message to the buffer.\n-func (b *Buffer) EncodeMessage(m Message) error {\n-\tvar err error\n-\tb.buf = protowire.AppendVarint(b.buf, uint64(Size(m)))\n-\tb.buf, err = marshalAppend(b.buf, m, b.deterministic)\n-\treturn err\n-}\n-\n-// DecodeVarint consumes an encoded unsigned varint from the buffer.\n-func (b *Buffer) DecodeVarint() (uint64, error) {\n-\tv, n := protowire.ConsumeVarint(b.buf[b.idx:])\n-\tif n < 0 {\n-\t\treturn 0, protowire.ParseError(n)\n-\t}\n-\tb.idx += n\n-\treturn uint64(v), nil\n-}\n-\n-// DecodeZigzag32 consumes an encoded 32-bit zig-zag varint from the buffer.\n-func (b *Buffer) DecodeZigzag32() (uint64, error) {\n-\tv, err := b.DecodeVarint()\n-\tif err != nil {\n-\t\treturn 0, err\n-\t}\n-\treturn uint64((uint32(v) >> 1) ^ uint32((int32(v&1)<<31)>>31)), nil\n-}\n-\n-// DecodeZigzag64 consumes an encoded 64-bit zig-zag varint from the buffer.\n-func (b *Buffer) DecodeZigzag64() (uint64, error) {\n-\tv, err := b.DecodeVarint()\n-\tif err != nil {\n-\t\treturn 0, err\n-\t}\n-\treturn uint64((uint64(v) >> 1) ^ uint64((int64(v&1)<<63)>>63)), nil\n-}\n-\n-// DecodeFixed32 consumes a 32-bit little-endian integer from the buffer.\n-func (b *Buffer) DecodeFixed32() (uint64, error) {\n-\tv, n := protowire.ConsumeFixed32(b.buf[b.idx:])\n-\tif n < 0 {\n-\t\treturn 0, protowire.ParseError(n)\n-\t}\n-\tb.idx += n\n-\treturn uint64(v), nil\n-}\n-\n-// DecodeFixed64 consumes a 64-bit little-endian integer from the buffer.\n-func (b *Buffer) DecodeFixed64() (uint64, error) {\n-\tv, n := protowire.ConsumeFixed64(b.buf[b.idx:])\n-\tif n < 0 {\n-\t\treturn 0, protowire.ParseError(n)\n-\t}\n-\tb.idx += n\n-\treturn uint64(v), nil\n-}\n-\n-// DecodeRawBytes consumes a length-prefixed raw bytes from the buffer.\n-// If alloc is specified, it returns a copy the raw bytes\n-// rather than a sub-slice of the buffer.\n-func (b *Buffer) DecodeRawBytes(alloc bool) ([]byte, error) {\n-\tv, n := protowire.ConsumeBytes(b.buf[b.idx:])\n-\tif n < 0 {\n-\t\treturn nil, protowire.ParseError(n)\n-\t}\n-\tb.idx += n\n-\tif alloc {\n-\t\tv = append([]byte(nil), v...)\n-\t}\n-\treturn v, nil\n-}\n-\n-// DecodeStringBytes consumes a length-prefixed raw bytes from the buffer.\n-// It does not validate whether the raw bytes contain valid UTF-8.\n-func (b *Buffer) DecodeStringBytes() (string, error) {\n-\tv, n := protowire.ConsumeString(b.buf[b.idx:])\n-\tif n < 0 {\n-\t\treturn \"\", protowire.ParseError(n)\n-\t}\n-\tb.idx += n\n-\treturn v, nil\n-}\n-\n-// DecodeMessage consumes a length-prefixed message from the buffer.\n-// It does not reset m before unmarshaling.\n-func (b *Buffer) DecodeMessage(m Message) error {\n-\tv, err := b.DecodeRawBytes(false)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\treturn UnmarshalMerge(v, m)\n-}\n-\n-// DecodeGroup consumes a message group from the buffer.\n-// It assumes that the start group marker has already been consumed and\n-// consumes all bytes until (and including the end group marker).\n-// It does not reset m before unmarshaling.\n-func (b *Buffer) DecodeGroup(m Message) error {\n-\tv, n, err := consumeGroup(b.buf[b.idx:])\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\tb.idx += n\n-\treturn UnmarshalMerge(v, m)\n-}\n-\n-// consumeGroup parses b until it finds an end group marker, returning\n-// the raw bytes of the message (excluding the end group marker) and the\n-// the total length of the message (including the end group marker).\n-func consumeGroup(b []byte) ([]byte, int, error) {\n-\tb0 := b\n-\tdepth := 1 // assume this follows a start group marker\n-\tfor {\n-\t\t_, wtyp, tagLen := protowire.ConsumeTag(b)\n-\t\tif tagLen < 0 {\n-\t\t\treturn nil, 0, protowire.ParseError(tagLen)\n-\t\t}\n-\t\tb = b[tagLen:]\n-\n-\t\tvar valLen int\n-\t\tswitch wtyp {\n-\t\tcase protowire.VarintType:\n-\t\t\t_, valLen = protowire.ConsumeVarint(b)\n-\t\tcase protowire.Fixed32Type:\n-\t\t\t_, valLen = protowire.ConsumeFixed32(b)\n-\t\tcase protowire.Fixed64Type:\n-\t\t\t_, valLen = protowire.ConsumeFixed64(b)\n-\t\tcase protowire.BytesType:\n-\t\t\t_, valLen = protowire.ConsumeBytes(b)\n-\t\tcase protowire.StartGroupType:\n-\t\t\tdepth++\n-\t\tcase protowire.EndGroupType:\n-\t\t\tdepth--\n-\t\tdefault:\n-\t\t\treturn nil, 0, errors.New(\"proto: cannot parse reserved wire type\")\n-\t\t}\n-\t\tif valLen < 0 {\n-\t\t\treturn nil, 0, protowire.ParseError(valLen)\n-\t\t}\n-\t\tb = b[valLen:]\n-\n-\t\tif depth == 0 {\n-\t\t\treturn b0[:len(b0)-len(b)-tagLen], len(b0) - len(b), nil\n-\t\t}\n-\t}\n-}"
    },
    {
      "sha": "d399bf069c3dfe42082892a2744d4b730c441b23",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/defaults.go",
      "status": "removed",
      "additions": 0,
      "deletions": 63,
      "changes": 63,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fdefaults.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fdefaults.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fdefaults.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,63 +0,0 @@\n-// Copyright 2019 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proto\n-\n-import (\n-\t\"google.golang.org/protobuf/reflect/protoreflect\"\n-)\n-\n-// SetDefaults sets unpopulated scalar fields to their default values.\n-// Fields within a oneof are not set even if they have a default value.\n-// SetDefaults is recursively called upon any populated message fields.\n-func SetDefaults(m Message) {\n-\tif m != nil {\n-\t\tsetDefaults(MessageReflect(m))\n-\t}\n-}\n-\n-func setDefaults(m protoreflect.Message) {\n-\tfds := m.Descriptor().Fields()\n-\tfor i := 0; i < fds.Len(); i++ {\n-\t\tfd := fds.Get(i)\n-\t\tif !m.Has(fd) {\n-\t\t\tif fd.HasDefault() && fd.ContainingOneof() == nil {\n-\t\t\t\tv := fd.Default()\n-\t\t\t\tif fd.Kind() == protoreflect.BytesKind {\n-\t\t\t\t\tv = protoreflect.ValueOf(append([]byte(nil), v.Bytes()...)) // copy the default bytes\n-\t\t\t\t}\n-\t\t\t\tm.Set(fd, v)\n-\t\t\t}\n-\t\t\tcontinue\n-\t\t}\n-\t}\n-\n-\tm.Range(func(fd protoreflect.FieldDescriptor, v protoreflect.Value) bool {\n-\t\tswitch {\n-\t\t// Handle singular message.\n-\t\tcase fd.Cardinality() != protoreflect.Repeated:\n-\t\t\tif fd.Message() != nil {\n-\t\t\t\tsetDefaults(m.Get(fd).Message())\n-\t\t\t}\n-\t\t// Handle list of messages.\n-\t\tcase fd.IsList():\n-\t\t\tif fd.Message() != nil {\n-\t\t\t\tls := m.Get(fd).List()\n-\t\t\t\tfor i := 0; i < ls.Len(); i++ {\n-\t\t\t\t\tsetDefaults(ls.Get(i).Message())\n-\t\t\t\t}\n-\t\t\t}\n-\t\t// Handle map of messages.\n-\t\tcase fd.IsMap():\n-\t\t\tif fd.MapValue().Message() != nil {\n-\t\t\t\tms := m.Get(fd).Map()\n-\t\t\t\tms.Range(func(_ protoreflect.MapKey, v protoreflect.Value) bool {\n-\t\t\t\t\tsetDefaults(v.Message())\n-\t\t\t\t\treturn true\n-\t\t\t\t})\n-\t\t\t}\n-\t\t}\n-\t\treturn true\n-\t})\n-}"
    },
    {
      "sha": "e8db57e097a1a92dd5998e0724ee4ea40910c168",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/deprecated.go",
      "status": "removed",
      "additions": 0,
      "deletions": 113,
      "changes": 113,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fdeprecated.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fdeprecated.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fdeprecated.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,113 +0,0 @@\n-// Copyright 2018 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proto\n-\n-import (\n-\t\"encoding/json\"\n-\t\"errors\"\n-\t\"fmt\"\n-\t\"strconv\"\n-\n-\tprotoV2 \"google.golang.org/protobuf/proto\"\n-)\n-\n-var (\n-\t// Deprecated: No longer returned.\n-\tErrNil = errors.New(\"proto: Marshal called with nil\")\n-\n-\t// Deprecated: No longer returned.\n-\tErrTooLarge = errors.New(\"proto: message encodes to over 2 GB\")\n-\n-\t// Deprecated: No longer returned.\n-\tErrInternalBadWireType = errors.New(\"proto: internal error: bad wiretype for oneof\")\n-)\n-\n-// Deprecated: Do not use.\n-type Stats struct{ Emalloc, Dmalloc, Encode, Decode, Chit, Cmiss, Size uint64 }\n-\n-// Deprecated: Do not use.\n-func GetStats() Stats { return Stats{} }\n-\n-// Deprecated: Do not use.\n-func MarshalMessageSet(interface{}) ([]byte, error) {\n-\treturn nil, errors.New(\"proto: not implemented\")\n-}\n-\n-// Deprecated: Do not use.\n-func UnmarshalMessageSet([]byte, interface{}) error {\n-\treturn errors.New(\"proto: not implemented\")\n-}\n-\n-// Deprecated: Do not use.\n-func MarshalMessageSetJSON(interface{}) ([]byte, error) {\n-\treturn nil, errors.New(\"proto: not implemented\")\n-}\n-\n-// Deprecated: Do not use.\n-func UnmarshalMessageSetJSON([]byte, interface{}) error {\n-\treturn errors.New(\"proto: not implemented\")\n-}\n-\n-// Deprecated: Do not use.\n-func RegisterMessageSetType(Message, int32, string) {}\n-\n-// Deprecated: Do not use.\n-func EnumName(m map[int32]string, v int32) string {\n-\ts, ok := m[v]\n-\tif ok {\n-\t\treturn s\n-\t}\n-\treturn strconv.Itoa(int(v))\n-}\n-\n-// Deprecated: Do not use.\n-func UnmarshalJSONEnum(m map[string]int32, data []byte, enumName string) (int32, error) {\n-\tif data[0] == '\"' {\n-\t\t// New style: enums are strings.\n-\t\tvar repr string\n-\t\tif err := json.Unmarshal(data, &repr); err != nil {\n-\t\t\treturn -1, err\n-\t\t}\n-\t\tval, ok := m[repr]\n-\t\tif !ok {\n-\t\t\treturn 0, fmt.Errorf(\"unrecognized enum %s value %q\", enumName, repr)\n-\t\t}\n-\t\treturn val, nil\n-\t}\n-\t// Old style: enums are ints.\n-\tvar val int32\n-\tif err := json.Unmarshal(data, &val); err != nil {\n-\t\treturn 0, fmt.Errorf(\"cannot unmarshal %#q into enum %s\", data, enumName)\n-\t}\n-\treturn val, nil\n-}\n-\n-// Deprecated: Do not use; this type existed for intenal-use only.\n-type InternalMessageInfo struct{}\n-\n-// Deprecated: Do not use; this method existed for intenal-use only.\n-func (*InternalMessageInfo) DiscardUnknown(m Message) {\n-\tDiscardUnknown(m)\n-}\n-\n-// Deprecated: Do not use; this method existed for intenal-use only.\n-func (*InternalMessageInfo) Marshal(b []byte, m Message, deterministic bool) ([]byte, error) {\n-\treturn protoV2.MarshalOptions{Deterministic: deterministic}.MarshalAppend(b, MessageV2(m))\n-}\n-\n-// Deprecated: Do not use; this method existed for intenal-use only.\n-func (*InternalMessageInfo) Merge(dst, src Message) {\n-\tprotoV2.Merge(MessageV2(dst), MessageV2(src))\n-}\n-\n-// Deprecated: Do not use; this method existed for intenal-use only.\n-func (*InternalMessageInfo) Size(m Message) int {\n-\treturn protoV2.Size(MessageV2(m))\n-}\n-\n-// Deprecated: Do not use; this method existed for intenal-use only.\n-func (*InternalMessageInfo) Unmarshal(m Message, b []byte) error {\n-\treturn protoV2.UnmarshalOptions{Merge: true}.Unmarshal(b, MessageV2(m))\n-}"
    },
    {
      "sha": "2187e877fa4a32adaa63a387fed5d4d5ba3d00cb",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/discard.go",
      "status": "removed",
      "additions": 0,
      "deletions": 58,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fdiscard.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fdiscard.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fdiscard.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,58 +0,0 @@\n-// Copyright 2019 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proto\n-\n-import (\n-\t\"google.golang.org/protobuf/reflect/protoreflect\"\n-)\n-\n-// DiscardUnknown recursively discards all unknown fields from this message\n-// and all embedded messages.\n-//\n-// When unmarshaling a message with unrecognized fields, the tags and values\n-// of such fields are preserved in the Message. This allows a later call to\n-// marshal to be able to produce a message that continues to have those\n-// unrecognized fields. To avoid this, DiscardUnknown is used to\n-// explicitly clear the unknown fields after unmarshaling.\n-func DiscardUnknown(m Message) {\n-\tif m != nil {\n-\t\tdiscardUnknown(MessageReflect(m))\n-\t}\n-}\n-\n-func discardUnknown(m protoreflect.Message) {\n-\tm.Range(func(fd protoreflect.FieldDescriptor, val protoreflect.Value) bool {\n-\t\tswitch {\n-\t\t// Handle singular message.\n-\t\tcase fd.Cardinality() != protoreflect.Repeated:\n-\t\t\tif fd.Message() != nil {\n-\t\t\t\tdiscardUnknown(m.Get(fd).Message())\n-\t\t\t}\n-\t\t// Handle list of messages.\n-\t\tcase fd.IsList():\n-\t\t\tif fd.Message() != nil {\n-\t\t\t\tls := m.Get(fd).List()\n-\t\t\t\tfor i := 0; i < ls.Len(); i++ {\n-\t\t\t\t\tdiscardUnknown(ls.Get(i).Message())\n-\t\t\t\t}\n-\t\t\t}\n-\t\t// Handle map of messages.\n-\t\tcase fd.IsMap():\n-\t\t\tif fd.MapValue().Message() != nil {\n-\t\t\t\tms := m.Get(fd).Map()\n-\t\t\t\tms.Range(func(_ protoreflect.MapKey, v protoreflect.Value) bool {\n-\t\t\t\t\tdiscardUnknown(v.Message())\n-\t\t\t\t\treturn true\n-\t\t\t\t})\n-\t\t\t}\n-\t\t}\n-\t\treturn true\n-\t})\n-\n-\t// Discard unknown fields.\n-\tif len(m.GetUnknown()) > 0 {\n-\t\tm.SetUnknown(nil)\n-\t}\n-}"
    },
    {
      "sha": "42fc120c972b8399411cf9e5e3bc73644d166525",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/extensions.go",
      "status": "removed",
      "additions": 0,
      "deletions": 356,
      "changes": 356,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fextensions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fextensions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fextensions.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,356 +0,0 @@\n-// Copyright 2010 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proto\n-\n-import (\n-\t\"errors\"\n-\t\"fmt\"\n-\t\"reflect\"\n-\n-\t\"google.golang.org/protobuf/encoding/protowire\"\n-\t\"google.golang.org/protobuf/proto\"\n-\t\"google.golang.org/protobuf/reflect/protoreflect\"\n-\t\"google.golang.org/protobuf/reflect/protoregistry\"\n-\t\"google.golang.org/protobuf/runtime/protoiface\"\n-\t\"google.golang.org/protobuf/runtime/protoimpl\"\n-)\n-\n-type (\n-\t// ExtensionDesc represents an extension descriptor and\n-\t// is used to interact with an extension field in a message.\n-\t//\n-\t// Variables of this type are generated in code by protoc-gen-go.\n-\tExtensionDesc = protoimpl.ExtensionInfo\n-\n-\t// ExtensionRange represents a range of message extensions.\n-\t// Used in code generated by protoc-gen-go.\n-\tExtensionRange = protoiface.ExtensionRangeV1\n-\n-\t// Deprecated: Do not use; this is an internal type.\n-\tExtension = protoimpl.ExtensionFieldV1\n-\n-\t// Deprecated: Do not use; this is an internal type.\n-\tXXX_InternalExtensions = protoimpl.ExtensionFields\n-)\n-\n-// ErrMissingExtension reports whether the extension was not present.\n-var ErrMissingExtension = errors.New(\"proto: missing extension\")\n-\n-var errNotExtendable = errors.New(\"proto: not an extendable proto.Message\")\n-\n-// HasExtension reports whether the extension field is present in m\n-// either as an explicitly populated field or as an unknown field.\n-func HasExtension(m Message, xt *ExtensionDesc) (has bool) {\n-\tmr := MessageReflect(m)\n-\tif mr == nil || !mr.IsValid() {\n-\t\treturn false\n-\t}\n-\n-\t// Check whether any populated known field matches the field number.\n-\txtd := xt.TypeDescriptor()\n-\tif isValidExtension(mr.Descriptor(), xtd) {\n-\t\thas = mr.Has(xtd)\n-\t} else {\n-\t\tmr.Range(func(fd protoreflect.FieldDescriptor, _ protoreflect.Value) bool {\n-\t\t\thas = int32(fd.Number()) == xt.Field\n-\t\t\treturn !has\n-\t\t})\n-\t}\n-\n-\t// Check whether any unknown field matches the field number.\n-\tfor b := mr.GetUnknown(); !has && len(b) > 0; {\n-\t\tnum, _, n := protowire.ConsumeField(b)\n-\t\thas = int32(num) == xt.Field\n-\t\tb = b[n:]\n-\t}\n-\treturn has\n-}\n-\n-// ClearExtension removes the extension field from m\n-// either as an explicitly populated field or as an unknown field.\n-func ClearExtension(m Message, xt *ExtensionDesc) {\n-\tmr := MessageReflect(m)\n-\tif mr == nil || !mr.IsValid() {\n-\t\treturn\n-\t}\n-\n-\txtd := xt.TypeDescriptor()\n-\tif isValidExtension(mr.Descriptor(), xtd) {\n-\t\tmr.Clear(xtd)\n-\t} else {\n-\t\tmr.Range(func(fd protoreflect.FieldDescriptor, _ protoreflect.Value) bool {\n-\t\t\tif int32(fd.Number()) == xt.Field {\n-\t\t\t\tmr.Clear(fd)\n-\t\t\t\treturn false\n-\t\t\t}\n-\t\t\treturn true\n-\t\t})\n-\t}\n-\tclearUnknown(mr, fieldNum(xt.Field))\n-}\n-\n-// ClearAllExtensions clears all extensions from m.\n-// This includes populated fields and unknown fields in the extension range.\n-func ClearAllExtensions(m Message) {\n-\tmr := MessageReflect(m)\n-\tif mr == nil || !mr.IsValid() {\n-\t\treturn\n-\t}\n-\n-\tmr.Range(func(fd protoreflect.FieldDescriptor, _ protoreflect.Value) bool {\n-\t\tif fd.IsExtension() {\n-\t\t\tmr.Clear(fd)\n-\t\t}\n-\t\treturn true\n-\t})\n-\tclearUnknown(mr, mr.Descriptor().ExtensionRanges())\n-}\n-\n-// GetExtension retrieves a proto2 extended field from m.\n-//\n-// If the descriptor is type complete (i.e., ExtensionDesc.ExtensionType is non-nil),\n-// then GetExtension parses the encoded field and returns a Go value of the specified type.\n-// If the field is not present, then the default value is returned (if one is specified),\n-// otherwise ErrMissingExtension is reported.\n-//\n-// If the descriptor is type incomplete (i.e., ExtensionDesc.ExtensionType is nil),\n-// then GetExtension returns the raw encoded bytes for the extension field.\n-func GetExtension(m Message, xt *ExtensionDesc) (interface{}, error) {\n-\tmr := MessageReflect(m)\n-\tif mr == nil || !mr.IsValid() || mr.Descriptor().ExtensionRanges().Len() == 0 {\n-\t\treturn nil, errNotExtendable\n-\t}\n-\n-\t// Retrieve the unknown fields for this extension field.\n-\tvar bo protoreflect.RawFields\n-\tfor bi := mr.GetUnknown(); len(bi) > 0; {\n-\t\tnum, _, n := protowire.ConsumeField(bi)\n-\t\tif int32(num) == xt.Field {\n-\t\t\tbo = append(bo, bi[:n]...)\n-\t\t}\n-\t\tbi = bi[n:]\n-\t}\n-\n-\t// For type incomplete descriptors, only retrieve the unknown fields.\n-\tif xt.ExtensionType == nil {\n-\t\treturn []byte(bo), nil\n-\t}\n-\n-\t// If the extension field only exists as unknown fields, unmarshal it.\n-\t// This is rarely done since proto.Unmarshal eagerly unmarshals extensions.\n-\txtd := xt.TypeDescriptor()\n-\tif !isValidExtension(mr.Descriptor(), xtd) {\n-\t\treturn nil, fmt.Errorf(\"proto: bad extended type; %T does not extend %T\", xt.ExtendedType, m)\n-\t}\n-\tif !mr.Has(xtd) && len(bo) > 0 {\n-\t\tm2 := mr.New()\n-\t\tif err := (proto.UnmarshalOptions{\n-\t\t\tResolver: extensionResolver{xt},\n-\t\t}.Unmarshal(bo, m2.Interface())); err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n-\t\tif m2.Has(xtd) {\n-\t\t\tmr.Set(xtd, m2.Get(xtd))\n-\t\t\tclearUnknown(mr, fieldNum(xt.Field))\n-\t\t}\n-\t}\n-\n-\t// Check whether the message has the extension field set or a default.\n-\tvar pv protoreflect.Value\n-\tswitch {\n-\tcase mr.Has(xtd):\n-\t\tpv = mr.Get(xtd)\n-\tcase xtd.HasDefault():\n-\t\tpv = xtd.Default()\n-\tdefault:\n-\t\treturn nil, ErrMissingExtension\n-\t}\n-\n-\tv := xt.InterfaceOf(pv)\n-\trv := reflect.ValueOf(v)\n-\tif isScalarKind(rv.Kind()) {\n-\t\trv2 := reflect.New(rv.Type())\n-\t\trv2.Elem().Set(rv)\n-\t\tv = rv2.Interface()\n-\t}\n-\treturn v, nil\n-}\n-\n-// extensionResolver is a custom extension resolver that stores a single\n-// extension type that takes precedence over the global registry.\n-type extensionResolver struct{ xt protoreflect.ExtensionType }\n-\n-func (r extensionResolver) FindExtensionByName(field protoreflect.FullName) (protoreflect.ExtensionType, error) {\n-\tif xtd := r.xt.TypeDescriptor(); xtd.FullName() == field {\n-\t\treturn r.xt, nil\n-\t}\n-\treturn protoregistry.GlobalTypes.FindExtensionByName(field)\n-}\n-\n-func (r extensionResolver) FindExtensionByNumber(message protoreflect.FullName, field protoreflect.FieldNumber) (protoreflect.ExtensionType, error) {\n-\tif xtd := r.xt.TypeDescriptor(); xtd.ContainingMessage().FullName() == message && xtd.Number() == field {\n-\t\treturn r.xt, nil\n-\t}\n-\treturn protoregistry.GlobalTypes.FindExtensionByNumber(message, field)\n-}\n-\n-// GetExtensions returns a list of the extensions values present in m,\n-// corresponding with the provided list of extension descriptors, xts.\n-// If an extension is missing in m, the corresponding value is nil.\n-func GetExtensions(m Message, xts []*ExtensionDesc) ([]interface{}, error) {\n-\tmr := MessageReflect(m)\n-\tif mr == nil || !mr.IsValid() {\n-\t\treturn nil, errNotExtendable\n-\t}\n-\n-\tvs := make([]interface{}, len(xts))\n-\tfor i, xt := range xts {\n-\t\tv, err := GetExtension(m, xt)\n-\t\tif err != nil {\n-\t\t\tif err == ErrMissingExtension {\n-\t\t\t\tcontinue\n-\t\t\t}\n-\t\t\treturn vs, err\n-\t\t}\n-\t\tvs[i] = v\n-\t}\n-\treturn vs, nil\n-}\n-\n-// SetExtension sets an extension field in m to the provided value.\n-func SetExtension(m Message, xt *ExtensionDesc, v interface{}) error {\n-\tmr := MessageReflect(m)\n-\tif mr == nil || !mr.IsValid() || mr.Descriptor().ExtensionRanges().Len() == 0 {\n-\t\treturn errNotExtendable\n-\t}\n-\n-\trv := reflect.ValueOf(v)\n-\tif reflect.TypeOf(v) != reflect.TypeOf(xt.ExtensionType) {\n-\t\treturn fmt.Errorf(\"proto: bad extension value type. got: %T, want: %T\", v, xt.ExtensionType)\n-\t}\n-\tif rv.Kind() == reflect.Ptr {\n-\t\tif rv.IsNil() {\n-\t\t\treturn fmt.Errorf(\"proto: SetExtension called with nil value of type %T\", v)\n-\t\t}\n-\t\tif isScalarKind(rv.Elem().Kind()) {\n-\t\t\tv = rv.Elem().Interface()\n-\t\t}\n-\t}\n-\n-\txtd := xt.TypeDescriptor()\n-\tif !isValidExtension(mr.Descriptor(), xtd) {\n-\t\treturn fmt.Errorf(\"proto: bad extended type; %T does not extend %T\", xt.ExtendedType, m)\n-\t}\n-\tmr.Set(xtd, xt.ValueOf(v))\n-\tclearUnknown(mr, fieldNum(xt.Field))\n-\treturn nil\n-}\n-\n-// SetRawExtension inserts b into the unknown fields of m.\n-//\n-// Deprecated: Use Message.ProtoReflect.SetUnknown instead.\n-func SetRawExtension(m Message, fnum int32, b []byte) {\n-\tmr := MessageReflect(m)\n-\tif mr == nil || !mr.IsValid() {\n-\t\treturn\n-\t}\n-\n-\t// Verify that the raw field is valid.\n-\tfor b0 := b; len(b0) > 0; {\n-\t\tnum, _, n := protowire.ConsumeField(b0)\n-\t\tif int32(num) != fnum {\n-\t\t\tpanic(fmt.Sprintf(\"mismatching field number: got %d, want %d\", num, fnum))\n-\t\t}\n-\t\tb0 = b0[n:]\n-\t}\n-\n-\tClearExtension(m, &ExtensionDesc{Field: fnum})\n-\tmr.SetUnknown(append(mr.GetUnknown(), b...))\n-}\n-\n-// ExtensionDescs returns a list of extension descriptors found in m,\n-// containing descriptors for both populated extension fields in m and\n-// also unknown fields of m that are in the extension range.\n-// For the later case, an type incomplete descriptor is provided where only\n-// the ExtensionDesc.Field field is populated.\n-// The order of the extension descriptors is undefined.\n-func ExtensionDescs(m Message) ([]*ExtensionDesc, error) {\n-\tmr := MessageReflect(m)\n-\tif mr == nil || !mr.IsValid() || mr.Descriptor().ExtensionRanges().Len() == 0 {\n-\t\treturn nil, errNotExtendable\n-\t}\n-\n-\t// Collect a set of known extension descriptors.\n-\textDescs := make(map[protoreflect.FieldNumber]*ExtensionDesc)\n-\tmr.Range(func(fd protoreflect.FieldDescriptor, v protoreflect.Value) bool {\n-\t\tif fd.IsExtension() {\n-\t\t\txt := fd.(protoreflect.ExtensionTypeDescriptor)\n-\t\t\tif xd, ok := xt.Type().(*ExtensionDesc); ok {\n-\t\t\t\textDescs[fd.Number()] = xd\n-\t\t\t}\n-\t\t}\n-\t\treturn true\n-\t})\n-\n-\t// Collect a set of unknown extension descriptors.\n-\textRanges := mr.Descriptor().ExtensionRanges()\n-\tfor b := mr.GetUnknown(); len(b) > 0; {\n-\t\tnum, _, n := protowire.ConsumeField(b)\n-\t\tif extRanges.Has(num) && extDescs[num] == nil {\n-\t\t\textDescs[num] = nil\n-\t\t}\n-\t\tb = b[n:]\n-\t}\n-\n-\t// Transpose the set of descriptors into a list.\n-\tvar xts []*ExtensionDesc\n-\tfor num, xt := range extDescs {\n-\t\tif xt == nil {\n-\t\t\txt = &ExtensionDesc{Field: int32(num)}\n-\t\t}\n-\t\txts = append(xts, xt)\n-\t}\n-\treturn xts, nil\n-}\n-\n-// isValidExtension reports whether xtd is a valid extension descriptor for md.\n-func isValidExtension(md protoreflect.MessageDescriptor, xtd protoreflect.ExtensionTypeDescriptor) bool {\n-\treturn xtd.ContainingMessage() == md && md.ExtensionRanges().Has(xtd.Number())\n-}\n-\n-// isScalarKind reports whether k is a protobuf scalar kind (except bytes).\n-// This function exists for historical reasons since the representation of\n-// scalars differs between v1 and v2, where v1 uses *T and v2 uses T.\n-func isScalarKind(k reflect.Kind) bool {\n-\tswitch k {\n-\tcase reflect.Bool, reflect.Int32, reflect.Int64, reflect.Uint32, reflect.Uint64, reflect.Float32, reflect.Float64, reflect.String:\n-\t\treturn true\n-\tdefault:\n-\t\treturn false\n-\t}\n-}\n-\n-// clearUnknown removes unknown fields from m where remover.Has reports true.\n-func clearUnknown(m protoreflect.Message, remover interface {\n-\tHas(protoreflect.FieldNumber) bool\n-}) {\n-\tvar bo protoreflect.RawFields\n-\tfor bi := m.GetUnknown(); len(bi) > 0; {\n-\t\tnum, _, n := protowire.ConsumeField(bi)\n-\t\tif !remover.Has(num) {\n-\t\t\tbo = append(bo, bi[:n]...)\n-\t\t}\n-\t\tbi = bi[n:]\n-\t}\n-\tif bi := m.GetUnknown(); len(bi) != len(bo) {\n-\t\tm.SetUnknown(bo)\n-\t}\n-}\n-\n-type fieldNum protoreflect.FieldNumber\n-\n-func (n1 fieldNum) Has(n2 protoreflect.FieldNumber) bool {\n-\treturn protoreflect.FieldNumber(n1) == n2\n-}"
    },
    {
      "sha": "dcdc2202fada8b87c063dbc721c83f44a728dea4",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/properties.go",
      "status": "removed",
      "additions": 0,
      "deletions": 306,
      "changes": 306,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fproperties.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fproperties.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fproperties.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,306 +0,0 @@\n-// Copyright 2010 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proto\n-\n-import (\n-\t\"fmt\"\n-\t\"reflect\"\n-\t\"strconv\"\n-\t\"strings\"\n-\t\"sync\"\n-\n-\t\"google.golang.org/protobuf/reflect/protoreflect\"\n-\t\"google.golang.org/protobuf/runtime/protoimpl\"\n-)\n-\n-// StructProperties represents protocol buffer type information for a\n-// generated protobuf message in the open-struct API.\n-//\n-// Deprecated: Do not use.\n-type StructProperties struct {\n-\t// Prop are the properties for each field.\n-\t//\n-\t// Fields belonging to a oneof are stored in OneofTypes instead, with a\n-\t// single Properties representing the parent oneof held here.\n-\t//\n-\t// The order of Prop matches the order of fields in the Go struct.\n-\t// Struct fields that are not related to protobufs have a \"XXX_\" prefix\n-\t// in the Properties.Name and must be ignored by the user.\n-\tProp []*Properties\n-\n-\t// OneofTypes contains information about the oneof fields in this message.\n-\t// It is keyed by the protobuf field name.\n-\tOneofTypes map[string]*OneofProperties\n-}\n-\n-// Properties represents the type information for a protobuf message field.\n-//\n-// Deprecated: Do not use.\n-type Properties struct {\n-\t// Name is a placeholder name with little meaningful semantic value.\n-\t// If the name has an \"XXX_\" prefix, the entire Properties must be ignored.\n-\tName string\n-\t// OrigName is the protobuf field name or oneof name.\n-\tOrigName string\n-\t// JSONName is the JSON name for the protobuf field.\n-\tJSONName string\n-\t// Enum is a placeholder name for enums.\n-\t// For historical reasons, this is neither the Go name for the enum,\n-\t// nor the protobuf name for the enum.\n-\tEnum string // Deprecated: Do not use.\n-\t// Weak contains the full name of the weakly referenced message.\n-\tWeak string\n-\t// Wire is a string representation of the wire type.\n-\tWire string\n-\t// WireType is the protobuf wire type for the field.\n-\tWireType int\n-\t// Tag is the protobuf field number.\n-\tTag int\n-\t// Required reports whether this is a required field.\n-\tRequired bool\n-\t// Optional reports whether this is a optional field.\n-\tOptional bool\n-\t// Repeated reports whether this is a repeated field.\n-\tRepeated bool\n-\t// Packed reports whether this is a packed repeated field of scalars.\n-\tPacked bool\n-\t// Proto3 reports whether this field operates under the proto3 syntax.\n-\tProto3 bool\n-\t// Oneof reports whether this field belongs within a oneof.\n-\tOneof bool\n-\n-\t// Default is the default value in string form.\n-\tDefault string\n-\t// HasDefault reports whether the field has a default value.\n-\tHasDefault bool\n-\n-\t// MapKeyProp is the properties for the key field for a map field.\n-\tMapKeyProp *Properties\n-\t// MapValProp is the properties for the value field for a map field.\n-\tMapValProp *Properties\n-}\n-\n-// OneofProperties represents the type information for a protobuf oneof.\n-//\n-// Deprecated: Do not use.\n-type OneofProperties struct {\n-\t// Type is a pointer to the generated wrapper type for the field value.\n-\t// This is nil for messages that are not in the open-struct API.\n-\tType reflect.Type\n-\t// Field is the index into StructProperties.Prop for the containing oneof.\n-\tField int\n-\t// Prop is the properties for the field.\n-\tProp *Properties\n-}\n-\n-// String formats the properties in the protobuf struct field tag style.\n-func (p *Properties) String() string {\n-\ts := p.Wire\n-\ts += \",\" + strconv.Itoa(p.Tag)\n-\tif p.Required {\n-\t\ts += \",req\"\n-\t}\n-\tif p.Optional {\n-\t\ts += \",opt\"\n-\t}\n-\tif p.Repeated {\n-\t\ts += \",rep\"\n-\t}\n-\tif p.Packed {\n-\t\ts += \",packed\"\n-\t}\n-\ts += \",name=\" + p.OrigName\n-\tif p.JSONName != \"\" {\n-\t\ts += \",json=\" + p.JSONName\n-\t}\n-\tif len(p.Enum) > 0 {\n-\t\ts += \",enum=\" + p.Enum\n-\t}\n-\tif len(p.Weak) > 0 {\n-\t\ts += \",weak=\" + p.Weak\n-\t}\n-\tif p.Proto3 {\n-\t\ts += \",proto3\"\n-\t}\n-\tif p.Oneof {\n-\t\ts += \",oneof\"\n-\t}\n-\tif p.HasDefault {\n-\t\ts += \",def=\" + p.Default\n-\t}\n-\treturn s\n-}\n-\n-// Parse populates p by parsing a string in the protobuf struct field tag style.\n-func (p *Properties) Parse(tag string) {\n-\t// For example: \"bytes,49,opt,name=foo,def=hello!\"\n-\tfor len(tag) > 0 {\n-\t\ti := strings.IndexByte(tag, ',')\n-\t\tif i < 0 {\n-\t\t\ti = len(tag)\n-\t\t}\n-\t\tswitch s := tag[:i]; {\n-\t\tcase strings.HasPrefix(s, \"name=\"):\n-\t\t\tp.OrigName = s[len(\"name=\"):]\n-\t\tcase strings.HasPrefix(s, \"json=\"):\n-\t\t\tp.JSONName = s[len(\"json=\"):]\n-\t\tcase strings.HasPrefix(s, \"enum=\"):\n-\t\t\tp.Enum = s[len(\"enum=\"):]\n-\t\tcase strings.HasPrefix(s, \"weak=\"):\n-\t\t\tp.Weak = s[len(\"weak=\"):]\n-\t\tcase strings.Trim(s, \"0123456789\") == \"\":\n-\t\t\tn, _ := strconv.ParseUint(s, 10, 32)\n-\t\t\tp.Tag = int(n)\n-\t\tcase s == \"opt\":\n-\t\t\tp.Optional = true\n-\t\tcase s == \"req\":\n-\t\t\tp.Required = true\n-\t\tcase s == \"rep\":\n-\t\t\tp.Repeated = true\n-\t\tcase s == \"varint\" || s == \"zigzag32\" || s == \"zigzag64\":\n-\t\t\tp.Wire = s\n-\t\t\tp.WireType = WireVarint\n-\t\tcase s == \"fixed32\":\n-\t\t\tp.Wire = s\n-\t\t\tp.WireType = WireFixed32\n-\t\tcase s == \"fixed64\":\n-\t\t\tp.Wire = s\n-\t\t\tp.WireType = WireFixed64\n-\t\tcase s == \"bytes\":\n-\t\t\tp.Wire = s\n-\t\t\tp.WireType = WireBytes\n-\t\tcase s == \"group\":\n-\t\t\tp.Wire = s\n-\t\t\tp.WireType = WireStartGroup\n-\t\tcase s == \"packed\":\n-\t\t\tp.Packed = true\n-\t\tcase s == \"proto3\":\n-\t\t\tp.Proto3 = true\n-\t\tcase s == \"oneof\":\n-\t\t\tp.Oneof = true\n-\t\tcase strings.HasPrefix(s, \"def=\"):\n-\t\t\t// The default tag is special in that everything afterwards is the\n-\t\t\t// default regardless of the presence of commas.\n-\t\t\tp.HasDefault = true\n-\t\t\tp.Default, i = tag[len(\"def=\"):], len(tag)\n-\t\t}\n-\t\ttag = strings.TrimPrefix(tag[i:], \",\")\n-\t}\n-}\n-\n-// Init populates the properties from a protocol buffer struct tag.\n-//\n-// Deprecated: Do not use.\n-func (p *Properties) Init(typ reflect.Type, name, tag string, f *reflect.StructField) {\n-\tp.Name = name\n-\tp.OrigName = name\n-\tif tag == \"\" {\n-\t\treturn\n-\t}\n-\tp.Parse(tag)\n-\n-\tif typ != nil && typ.Kind() == reflect.Map {\n-\t\tp.MapKeyProp = new(Properties)\n-\t\tp.MapKeyProp.Init(nil, \"Key\", f.Tag.Get(\"protobuf_key\"), nil)\n-\t\tp.MapValProp = new(Properties)\n-\t\tp.MapValProp.Init(nil, \"Value\", f.Tag.Get(\"protobuf_val\"), nil)\n-\t}\n-}\n-\n-var propertiesCache sync.Map // map[reflect.Type]*StructProperties\n-\n-// GetProperties returns the list of properties for the type represented by t,\n-// which must be a generated protocol buffer message in the open-struct API,\n-// where protobuf message fields are represented by exported Go struct fields.\n-//\n-// Deprecated: Use protobuf reflection instead.\n-func GetProperties(t reflect.Type) *StructProperties {\n-\tif p, ok := propertiesCache.Load(t); ok {\n-\t\treturn p.(*StructProperties)\n-\t}\n-\tp, _ := propertiesCache.LoadOrStore(t, newProperties(t))\n-\treturn p.(*StructProperties)\n-}\n-\n-func newProperties(t reflect.Type) *StructProperties {\n-\tif t.Kind() != reflect.Struct {\n-\t\tpanic(fmt.Sprintf(\"%v is not a generated message in the open-struct API\", t))\n-\t}\n-\n-\tvar hasOneof bool\n-\tprop := new(StructProperties)\n-\n-\t// Construct a list of properties for each field in the struct.\n-\tfor i := 0; i < t.NumField(); i++ {\n-\t\tp := new(Properties)\n-\t\tf := t.Field(i)\n-\t\ttagField := f.Tag.Get(\"protobuf\")\n-\t\tp.Init(f.Type, f.Name, tagField, &f)\n-\n-\t\ttagOneof := f.Tag.Get(\"protobuf_oneof\")\n-\t\tif tagOneof != \"\" {\n-\t\t\thasOneof = true\n-\t\t\tp.OrigName = tagOneof\n-\t\t}\n-\n-\t\t// Rename unrelated struct fields with the \"XXX_\" prefix since so much\n-\t\t// user code simply checks for this to exclude special fields.\n-\t\tif tagField == \"\" && tagOneof == \"\" && !strings.HasPrefix(p.Name, \"XXX_\") {\n-\t\t\tp.Name = \"XXX_\" + p.Name\n-\t\t\tp.OrigName = \"XXX_\" + p.OrigName\n-\t\t} else if p.Weak != \"\" {\n-\t\t\tp.Name = p.OrigName // avoid possible \"XXX_\" prefix on weak field\n-\t\t}\n-\n-\t\tprop.Prop = append(prop.Prop, p)\n-\t}\n-\n-\t// Construct a mapping of oneof field names to properties.\n-\tif hasOneof {\n-\t\tvar oneofWrappers []interface{}\n-\t\tif fn, ok := reflect.PtrTo(t).MethodByName(\"XXX_OneofFuncs\"); ok {\n-\t\t\toneofWrappers = fn.Func.Call([]reflect.Value{reflect.Zero(fn.Type.In(0))})[3].Interface().([]interface{})\n-\t\t}\n-\t\tif fn, ok := reflect.PtrTo(t).MethodByName(\"XXX_OneofWrappers\"); ok {\n-\t\t\toneofWrappers = fn.Func.Call([]reflect.Value{reflect.Zero(fn.Type.In(0))})[0].Interface().([]interface{})\n-\t\t}\n-\t\tif m, ok := reflect.Zero(reflect.PtrTo(t)).Interface().(protoreflect.ProtoMessage); ok {\n-\t\t\tif m, ok := m.ProtoReflect().(interface{ ProtoMessageInfo() *protoimpl.MessageInfo }); ok {\n-\t\t\t\toneofWrappers = m.ProtoMessageInfo().OneofWrappers\n-\t\t\t}\n-\t\t}\n-\n-\t\tprop.OneofTypes = make(map[string]*OneofProperties)\n-\t\tfor _, wrapper := range oneofWrappers {\n-\t\t\tp := &OneofProperties{\n-\t\t\t\tType: reflect.ValueOf(wrapper).Type(), // *T\n-\t\t\t\tProp: new(Properties),\n-\t\t\t}\n-\t\t\tf := p.Type.Elem().Field(0)\n-\t\t\tp.Prop.Name = f.Name\n-\t\t\tp.Prop.Parse(f.Tag.Get(\"protobuf\"))\n-\n-\t\t\t// Determine the struct field that contains this oneof.\n-\t\t\t// Each wrapper is assignable to exactly one parent field.\n-\t\t\tvar foundOneof bool\n-\t\t\tfor i := 0; i < t.NumField() && !foundOneof; i++ {\n-\t\t\t\tif p.Type.AssignableTo(t.Field(i).Type) {\n-\t\t\t\t\tp.Field = i\n-\t\t\t\t\tfoundOneof = true\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tif !foundOneof {\n-\t\t\t\tpanic(fmt.Sprintf(\"%v is not a generated message in the open-struct API\", t))\n-\t\t\t}\n-\t\t\tprop.OneofTypes[p.Prop.OrigName] = p\n-\t\t}\n-\t}\n-\n-\treturn prop\n-}\n-\n-func (sp *StructProperties) Len() int           { return len(sp.Prop) }\n-func (sp *StructProperties) Less(i, j int) bool { return false }\n-func (sp *StructProperties) Swap(i, j int)      { return }"
    },
    {
      "sha": "5aee89c323e0ad4b166ad6e409456c43c16862ea",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/proto.go",
      "status": "removed",
      "additions": 0,
      "deletions": 167,
      "changes": 167,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fproto.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fproto.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fproto.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,167 +0,0 @@\n-// Copyright 2019 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-// Package proto provides functionality for handling protocol buffer messages.\n-// In particular, it provides marshaling and unmarshaling between a protobuf\n-// message and the binary wire format.\n-//\n-// See https://developers.google.com/protocol-buffers/docs/gotutorial for\n-// more information.\n-//\n-// Deprecated: Use the \"google.golang.org/protobuf/proto\" package instead.\n-package proto\n-\n-import (\n-\tprotoV2 \"google.golang.org/protobuf/proto\"\n-\t\"google.golang.org/protobuf/reflect/protoreflect\"\n-\t\"google.golang.org/protobuf/runtime/protoiface\"\n-\t\"google.golang.org/protobuf/runtime/protoimpl\"\n-)\n-\n-const (\n-\tProtoPackageIsVersion1 = true\n-\tProtoPackageIsVersion2 = true\n-\tProtoPackageIsVersion3 = true\n-\tProtoPackageIsVersion4 = true\n-)\n-\n-// GeneratedEnum is any enum type generated by protoc-gen-go\n-// which is a named int32 kind.\n-// This type exists for documentation purposes.\n-type GeneratedEnum interface{}\n-\n-// GeneratedMessage is any message type generated by protoc-gen-go\n-// which is a pointer to a named struct kind.\n-// This type exists for documentation purposes.\n-type GeneratedMessage interface{}\n-\n-// Message is a protocol buffer message.\n-//\n-// This is the v1 version of the message interface and is marginally better\n-// than an empty interface as it lacks any method to programatically interact\n-// with the contents of the message.\n-//\n-// A v2 message is declared in \"google.golang.org/protobuf/proto\".Message and\n-// exposes protobuf reflection as a first-class feature of the interface.\n-//\n-// To convert a v1 message to a v2 message, use the MessageV2 function.\n-// To convert a v2 message to a v1 message, use the MessageV1 function.\n-type Message = protoiface.MessageV1\n-\n-// MessageV1 converts either a v1 or v2 message to a v1 message.\n-// It returns nil if m is nil.\n-func MessageV1(m GeneratedMessage) protoiface.MessageV1 {\n-\treturn protoimpl.X.ProtoMessageV1Of(m)\n-}\n-\n-// MessageV2 converts either a v1 or v2 message to a v2 message.\n-// It returns nil if m is nil.\n-func MessageV2(m GeneratedMessage) protoV2.Message {\n-\treturn protoimpl.X.ProtoMessageV2Of(m)\n-}\n-\n-// MessageReflect returns a reflective view for a message.\n-// It returns nil if m is nil.\n-func MessageReflect(m Message) protoreflect.Message {\n-\treturn protoimpl.X.MessageOf(m)\n-}\n-\n-// Marshaler is implemented by messages that can marshal themselves.\n-// This interface is used by the following functions: Size, Marshal,\n-// Buffer.Marshal, and Buffer.EncodeMessage.\n-//\n-// Deprecated: Do not implement.\n-type Marshaler interface {\n-\t// Marshal formats the encoded bytes of the message.\n-\t// It should be deterministic and emit valid protobuf wire data.\n-\t// The caller takes ownership of the returned buffer.\n-\tMarshal() ([]byte, error)\n-}\n-\n-// Unmarshaler is implemented by messages that can unmarshal themselves.\n-// This interface is used by the following functions: Unmarshal, UnmarshalMerge,\n-// Buffer.Unmarshal, Buffer.DecodeMessage, and Buffer.DecodeGroup.\n-//\n-// Deprecated: Do not implement.\n-type Unmarshaler interface {\n-\t// Unmarshal parses the encoded bytes of the protobuf wire input.\n-\t// The provided buffer is only valid for during method call.\n-\t// It should not reset the receiver message.\n-\tUnmarshal([]byte) error\n-}\n-\n-// Merger is implemented by messages that can merge themselves.\n-// This interface is used by the following functions: Clone and Merge.\n-//\n-// Deprecated: Do not implement.\n-type Merger interface {\n-\t// Merge merges the contents of src into the receiver message.\n-\t// It clones all data structures in src such that it aliases no mutable\n-\t// memory referenced by src.\n-\tMerge(src Message)\n-}\n-\n-// RequiredNotSetError is an error type returned when\n-// marshaling or unmarshaling a message with missing required fields.\n-type RequiredNotSetError struct {\n-\terr error\n-}\n-\n-func (e *RequiredNotSetError) Error() string {\n-\tif e.err != nil {\n-\t\treturn e.err.Error()\n-\t}\n-\treturn \"proto: required field not set\"\n-}\n-func (e *RequiredNotSetError) RequiredNotSet() bool {\n-\treturn true\n-}\n-\n-func checkRequiredNotSet(m protoV2.Message) error {\n-\tif err := protoV2.CheckInitialized(m); err != nil {\n-\t\treturn &RequiredNotSetError{err: err}\n-\t}\n-\treturn nil\n-}\n-\n-// Clone returns a deep copy of src.\n-func Clone(src Message) Message {\n-\treturn MessageV1(protoV2.Clone(MessageV2(src)))\n-}\n-\n-// Merge merges src into dst, which must be messages of the same type.\n-//\n-// Populated scalar fields in src are copied to dst, while populated\n-// singular messages in src are merged into dst by recursively calling Merge.\n-// The elements of every list field in src is appended to the corresponded\n-// list fields in dst. The entries of every map field in src is copied into\n-// the corresponding map field in dst, possibly replacing existing entries.\n-// The unknown fields of src are appended to the unknown fields of dst.\n-func Merge(dst, src Message) {\n-\tprotoV2.Merge(MessageV2(dst), MessageV2(src))\n-}\n-\n-// Equal reports whether two messages are equal.\n-// If two messages marshal to the same bytes under deterministic serialization,\n-// then Equal is guaranteed to report true.\n-//\n-// Two messages are equal if they are the same protobuf message type,\n-// have the same set of populated known and extension field values,\n-// and the same set of unknown fields values.\n-//\n-// Scalar values are compared with the equivalent of the == operator in Go,\n-// except bytes values which are compared using bytes.Equal and\n-// floating point values which specially treat NaNs as equal.\n-// Message values are compared by recursively calling Equal.\n-// Lists are equal if each element value is also equal.\n-// Maps are equal if they have the same set of keys, where the pair of values\n-// for each key is also equal.\n-func Equal(x, y Message) bool {\n-\treturn protoV2.Equal(MessageV2(x), MessageV2(y))\n-}\n-\n-func isMessageSet(md protoreflect.MessageDescriptor) bool {\n-\tms, ok := md.(interface{ IsMessageSet() bool })\n-\treturn ok && ms.IsMessageSet()\n-}"
    },
    {
      "sha": "066b4323b4995c640feaa8a87fa50a72b42124eb",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/registry.go",
      "status": "removed",
      "additions": 0,
      "deletions": 317,
      "changes": 317,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fregistry.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fregistry.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fregistry.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,317 +0,0 @@\n-// Copyright 2019 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proto\n-\n-import (\n-\t\"bytes\"\n-\t\"compress/gzip\"\n-\t\"fmt\"\n-\t\"io/ioutil\"\n-\t\"reflect\"\n-\t\"strings\"\n-\t\"sync\"\n-\n-\t\"google.golang.org/protobuf/reflect/protodesc\"\n-\t\"google.golang.org/protobuf/reflect/protoreflect\"\n-\t\"google.golang.org/protobuf/reflect/protoregistry\"\n-\t\"google.golang.org/protobuf/runtime/protoimpl\"\n-)\n-\n-// filePath is the path to the proto source file.\n-type filePath = string // e.g., \"google/protobuf/descriptor.proto\"\n-\n-// fileDescGZIP is the compressed contents of the encoded FileDescriptorProto.\n-type fileDescGZIP = []byte\n-\n-var fileCache sync.Map // map[filePath]fileDescGZIP\n-\n-// RegisterFile is called from generated code to register the compressed\n-// FileDescriptorProto with the file path for a proto source file.\n-//\n-// Deprecated: Use protoregistry.GlobalFiles.RegisterFile instead.\n-func RegisterFile(s filePath, d fileDescGZIP) {\n-\t// Decompress the descriptor.\n-\tzr, err := gzip.NewReader(bytes.NewReader(d))\n-\tif err != nil {\n-\t\tpanic(fmt.Sprintf(\"proto: invalid compressed file descriptor: %v\", err))\n-\t}\n-\tb, err := ioutil.ReadAll(zr)\n-\tif err != nil {\n-\t\tpanic(fmt.Sprintf(\"proto: invalid compressed file descriptor: %v\", err))\n-\t}\n-\n-\t// Construct a protoreflect.FileDescriptor from the raw descriptor.\n-\t// Note that DescBuilder.Build automatically registers the constructed\n-\t// file descriptor with the v2 registry.\n-\tprotoimpl.DescBuilder{RawDescriptor: b}.Build()\n-\n-\t// Locally cache the raw descriptor form for the file.\n-\tfileCache.Store(s, d)\n-}\n-\n-// FileDescriptor returns the compressed FileDescriptorProto given the file path\n-// for a proto source file. It returns nil if not found.\n-//\n-// Deprecated: Use protoregistry.GlobalFiles.FindFileByPath instead.\n-func FileDescriptor(s filePath) fileDescGZIP {\n-\tif v, ok := fileCache.Load(s); ok {\n-\t\treturn v.(fileDescGZIP)\n-\t}\n-\n-\t// Find the descriptor in the v2 registry.\n-\tvar b []byte\n-\tif fd, _ := protoregistry.GlobalFiles.FindFileByPath(s); fd != nil {\n-\t\tb, _ = Marshal(protodesc.ToFileDescriptorProto(fd))\n-\t}\n-\n-\t// Locally cache the raw descriptor form for the file.\n-\tif len(b) > 0 {\n-\t\tv, _ := fileCache.LoadOrStore(s, protoimpl.X.CompressGZIP(b))\n-\t\treturn v.(fileDescGZIP)\n-\t}\n-\treturn nil\n-}\n-\n-// enumName is the name of an enum. For historical reasons, the enum name is\n-// neither the full Go name nor the full protobuf name of the enum.\n-// The name is the dot-separated combination of just the proto package that the\n-// enum is declared within followed by the Go type name of the generated enum.\n-type enumName = string // e.g., \"my.proto.package.GoMessage_GoEnum\"\n-\n-// enumsByName maps enum values by name to their numeric counterpart.\n-type enumsByName = map[string]int32\n-\n-// enumsByNumber maps enum values by number to their name counterpart.\n-type enumsByNumber = map[int32]string\n-\n-var enumCache sync.Map     // map[enumName]enumsByName\n-var numFilesCache sync.Map // map[protoreflect.FullName]int\n-\n-// RegisterEnum is called from the generated code to register the mapping of\n-// enum value names to enum numbers for the enum identified by s.\n-//\n-// Deprecated: Use protoregistry.GlobalTypes.RegisterEnum instead.\n-func RegisterEnum(s enumName, _ enumsByNumber, m enumsByName) {\n-\tif _, ok := enumCache.Load(s); ok {\n-\t\tpanic(\"proto: duplicate enum registered: \" + s)\n-\t}\n-\tenumCache.Store(s, m)\n-\n-\t// This does not forward registration to the v2 registry since this API\n-\t// lacks sufficient information to construct a complete v2 enum descriptor.\n-}\n-\n-// EnumValueMap returns the mapping from enum value names to enum numbers for\n-// the enum of the given name. It returns nil if not found.\n-//\n-// Deprecated: Use protoregistry.GlobalTypes.FindEnumByName instead.\n-func EnumValueMap(s enumName) enumsByName {\n-\tif v, ok := enumCache.Load(s); ok {\n-\t\treturn v.(enumsByName)\n-\t}\n-\n-\t// Check whether the cache is stale. If the number of files in the current\n-\t// package differs, then it means that some enums may have been recently\n-\t// registered upstream that we do not know about.\n-\tvar protoPkg protoreflect.FullName\n-\tif i := strings.LastIndexByte(s, '.'); i >= 0 {\n-\t\tprotoPkg = protoreflect.FullName(s[:i])\n-\t}\n-\tv, _ := numFilesCache.Load(protoPkg)\n-\tnumFiles, _ := v.(int)\n-\tif protoregistry.GlobalFiles.NumFilesByPackage(protoPkg) == numFiles {\n-\t\treturn nil // cache is up-to-date; was not found earlier\n-\t}\n-\n-\t// Update the enum cache for all enums declared in the given proto package.\n-\tnumFiles = 0\n-\tprotoregistry.GlobalFiles.RangeFilesByPackage(protoPkg, func(fd protoreflect.FileDescriptor) bool {\n-\t\twalkEnums(fd, func(ed protoreflect.EnumDescriptor) {\n-\t\t\tname := protoimpl.X.LegacyEnumName(ed)\n-\t\t\tif _, ok := enumCache.Load(name); !ok {\n-\t\t\t\tm := make(enumsByName)\n-\t\t\t\tevs := ed.Values()\n-\t\t\t\tfor i := evs.Len() - 1; i >= 0; i-- {\n-\t\t\t\t\tev := evs.Get(i)\n-\t\t\t\t\tm[string(ev.Name())] = int32(ev.Number())\n-\t\t\t\t}\n-\t\t\t\tenumCache.LoadOrStore(name, m)\n-\t\t\t}\n-\t\t})\n-\t\tnumFiles++\n-\t\treturn true\n-\t})\n-\tnumFilesCache.Store(protoPkg, numFiles)\n-\n-\t// Check cache again for enum map.\n-\tif v, ok := enumCache.Load(s); ok {\n-\t\treturn v.(enumsByName)\n-\t}\n-\treturn nil\n-}\n-\n-// walkEnums recursively walks all enums declared in d.\n-func walkEnums(d interface {\n-\tEnums() protoreflect.EnumDescriptors\n-\tMessages() protoreflect.MessageDescriptors\n-}, f func(protoreflect.EnumDescriptor)) {\n-\teds := d.Enums()\n-\tfor i := eds.Len() - 1; i >= 0; i-- {\n-\t\tf(eds.Get(i))\n-\t}\n-\tmds := d.Messages()\n-\tfor i := mds.Len() - 1; i >= 0; i-- {\n-\t\twalkEnums(mds.Get(i), f)\n-\t}\n-}\n-\n-// messageName is the full name of protobuf message.\n-type messageName = string\n-\n-var messageTypeCache sync.Map // map[messageName]reflect.Type\n-\n-// RegisterType is called from generated code to register the message Go type\n-// for a message of the given name.\n-//\n-// Deprecated: Use protoregistry.GlobalTypes.RegisterMessage instead.\n-func RegisterType(m Message, s messageName) {\n-\tmt := protoimpl.X.LegacyMessageTypeOf(m, protoreflect.FullName(s))\n-\tif err := protoregistry.GlobalTypes.RegisterMessage(mt); err != nil {\n-\t\tpanic(err)\n-\t}\n-\tmessageTypeCache.Store(s, reflect.TypeOf(m))\n-}\n-\n-// RegisterMapType is called from generated code to register the Go map type\n-// for a protobuf message representing a map entry.\n-//\n-// Deprecated: Do not use.\n-func RegisterMapType(m interface{}, s messageName) {\n-\tt := reflect.TypeOf(m)\n-\tif t.Kind() != reflect.Map {\n-\t\tpanic(fmt.Sprintf(\"invalid map kind: %v\", t))\n-\t}\n-\tif _, ok := messageTypeCache.Load(s); ok {\n-\t\tpanic(fmt.Errorf(\"proto: duplicate proto message registered: %s\", s))\n-\t}\n-\tmessageTypeCache.Store(s, t)\n-}\n-\n-// MessageType returns the message type for a named message.\n-// It returns nil if not found.\n-//\n-// Deprecated: Use protoregistry.GlobalTypes.FindMessageByName instead.\n-func MessageType(s messageName) reflect.Type {\n-\tif v, ok := messageTypeCache.Load(s); ok {\n-\t\treturn v.(reflect.Type)\n-\t}\n-\n-\t// Derive the message type from the v2 registry.\n-\tvar t reflect.Type\n-\tif mt, _ := protoregistry.GlobalTypes.FindMessageByName(protoreflect.FullName(s)); mt != nil {\n-\t\tt = messageGoType(mt)\n-\t}\n-\n-\t// If we could not get a concrete type, it is possible that it is a\n-\t// pseudo-message for a map entry.\n-\tif t == nil {\n-\t\td, _ := protoregistry.GlobalFiles.FindDescriptorByName(protoreflect.FullName(s))\n-\t\tif md, _ := d.(protoreflect.MessageDescriptor); md != nil && md.IsMapEntry() {\n-\t\t\tkt := goTypeForField(md.Fields().ByNumber(1))\n-\t\t\tvt := goTypeForField(md.Fields().ByNumber(2))\n-\t\t\tt = reflect.MapOf(kt, vt)\n-\t\t}\n-\t}\n-\n-\t// Locally cache the message type for the given name.\n-\tif t != nil {\n-\t\tv, _ := messageTypeCache.LoadOrStore(s, t)\n-\t\treturn v.(reflect.Type)\n-\t}\n-\treturn nil\n-}\n-\n-func goTypeForField(fd protoreflect.FieldDescriptor) reflect.Type {\n-\tswitch k := fd.Kind(); k {\n-\tcase protoreflect.EnumKind:\n-\t\tif et, _ := protoregistry.GlobalTypes.FindEnumByName(fd.Enum().FullName()); et != nil {\n-\t\t\treturn enumGoType(et)\n-\t\t}\n-\t\treturn reflect.TypeOf(protoreflect.EnumNumber(0))\n-\tcase protoreflect.MessageKind, protoreflect.GroupKind:\n-\t\tif mt, _ := protoregistry.GlobalTypes.FindMessageByName(fd.Message().FullName()); mt != nil {\n-\t\t\treturn messageGoType(mt)\n-\t\t}\n-\t\treturn reflect.TypeOf((*protoreflect.Message)(nil)).Elem()\n-\tdefault:\n-\t\treturn reflect.TypeOf(fd.Default().Interface())\n-\t}\n-}\n-\n-func enumGoType(et protoreflect.EnumType) reflect.Type {\n-\treturn reflect.TypeOf(et.New(0))\n-}\n-\n-func messageGoType(mt protoreflect.MessageType) reflect.Type {\n-\treturn reflect.TypeOf(MessageV1(mt.Zero().Interface()))\n-}\n-\n-// MessageName returns the full protobuf name for the given message type.\n-//\n-// Deprecated: Use protoreflect.MessageDescriptor.FullName instead.\n-func MessageName(m Message) messageName {\n-\tif m == nil {\n-\t\treturn \"\"\n-\t}\n-\tif m, ok := m.(interface{ XXX_MessageName() messageName }); ok {\n-\t\treturn m.XXX_MessageName()\n-\t}\n-\treturn messageName(protoimpl.X.MessageDescriptorOf(m).FullName())\n-}\n-\n-// RegisterExtension is called from the generated code to register\n-// the extension descriptor.\n-//\n-// Deprecated: Use protoregistry.GlobalTypes.RegisterExtension instead.\n-func RegisterExtension(d *ExtensionDesc) {\n-\tif err := protoregistry.GlobalTypes.RegisterExtension(d); err != nil {\n-\t\tpanic(err)\n-\t}\n-}\n-\n-type extensionsByNumber = map[int32]*ExtensionDesc\n-\n-var extensionCache sync.Map // map[messageName]extensionsByNumber\n-\n-// RegisteredExtensions returns a map of the registered extensions for the\n-// provided protobuf message, indexed by the extension field number.\n-//\n-// Deprecated: Use protoregistry.GlobalTypes.RangeExtensionsByMessage instead.\n-func RegisteredExtensions(m Message) extensionsByNumber {\n-\t// Check whether the cache is stale. If the number of extensions for\n-\t// the given message differs, then it means that some extensions were\n-\t// recently registered upstream that we do not know about.\n-\ts := MessageName(m)\n-\tv, _ := extensionCache.Load(s)\n-\txs, _ := v.(extensionsByNumber)\n-\tif protoregistry.GlobalTypes.NumExtensionsByMessage(protoreflect.FullName(s)) == len(xs) {\n-\t\treturn xs // cache is up-to-date\n-\t}\n-\n-\t// Cache is stale, re-compute the extensions map.\n-\txs = make(extensionsByNumber)\n-\tprotoregistry.GlobalTypes.RangeExtensionsByMessage(protoreflect.FullName(s), func(xt protoreflect.ExtensionType) bool {\n-\t\tif xd, ok := xt.(*ExtensionDesc); ok {\n-\t\t\txs[int32(xt.TypeDescriptor().Number())] = xd\n-\t\t} else {\n-\t\t\t// TODO: This implies that the protoreflect.ExtensionType is a\n-\t\t\t// custom type not generated by protoc-gen-go. We could try and\n-\t\t\t// convert the type to an ExtensionDesc.\n-\t\t}\n-\t\treturn true\n-\t})\n-\textensionCache.Store(s, xs)\n-\treturn xs\n-}"
    },
    {
      "sha": "47eb3e44501d6aa83188385684f5016ec7e4d351",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/text_decode.go",
      "status": "removed",
      "additions": 0,
      "deletions": 801,
      "changes": 801,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Ftext_decode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Ftext_decode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Ftext_decode.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,801 +0,0 @@\n-// Copyright 2010 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proto\n-\n-import (\n-\t\"encoding\"\n-\t\"errors\"\n-\t\"fmt\"\n-\t\"reflect\"\n-\t\"strconv\"\n-\t\"strings\"\n-\t\"unicode/utf8\"\n-\n-\t\"google.golang.org/protobuf/encoding/prototext\"\n-\tprotoV2 \"google.golang.org/protobuf/proto\"\n-\t\"google.golang.org/protobuf/reflect/protoreflect\"\n-\t\"google.golang.org/protobuf/reflect/protoregistry\"\n-)\n-\n-const wrapTextUnmarshalV2 = false\n-\n-// ParseError is returned by UnmarshalText.\n-type ParseError struct {\n-\tMessage string\n-\n-\t// Deprecated: Do not use.\n-\tLine, Offset int\n-}\n-\n-func (e *ParseError) Error() string {\n-\tif wrapTextUnmarshalV2 {\n-\t\treturn e.Message\n-\t}\n-\tif e.Line == 1 {\n-\t\treturn fmt.Sprintf(\"line 1.%d: %v\", e.Offset, e.Message)\n-\t}\n-\treturn fmt.Sprintf(\"line %d: %v\", e.Line, e.Message)\n-}\n-\n-// UnmarshalText parses a proto text formatted string into m.\n-func UnmarshalText(s string, m Message) error {\n-\tif u, ok := m.(encoding.TextUnmarshaler); ok {\n-\t\treturn u.UnmarshalText([]byte(s))\n-\t}\n-\n-\tm.Reset()\n-\tmi := MessageV2(m)\n-\n-\tif wrapTextUnmarshalV2 {\n-\t\terr := prototext.UnmarshalOptions{\n-\t\t\tAllowPartial: true,\n-\t\t}.Unmarshal([]byte(s), mi)\n-\t\tif err != nil {\n-\t\t\treturn &ParseError{Message: err.Error()}\n-\t\t}\n-\t\treturn checkRequiredNotSet(mi)\n-\t} else {\n-\t\tif err := newTextParser(s).unmarshalMessage(mi.ProtoReflect(), \"\"); err != nil {\n-\t\t\treturn err\n-\t\t}\n-\t\treturn checkRequiredNotSet(mi)\n-\t}\n-}\n-\n-type textParser struct {\n-\ts            string // remaining input\n-\tdone         bool   // whether the parsing is finished (success or error)\n-\tbacked       bool   // whether back() was called\n-\toffset, line int\n-\tcur          token\n-}\n-\n-type token struct {\n-\tvalue    string\n-\terr      *ParseError\n-\tline     int    // line number\n-\toffset   int    // byte number from start of input, not start of line\n-\tunquoted string // the unquoted version of value, if it was a quoted string\n-}\n-\n-func newTextParser(s string) *textParser {\n-\tp := new(textParser)\n-\tp.s = s\n-\tp.line = 1\n-\tp.cur.line = 1\n-\treturn p\n-}\n-\n-func (p *textParser) unmarshalMessage(m protoreflect.Message, terminator string) (err error) {\n-\tmd := m.Descriptor()\n-\tfds := md.Fields()\n-\n-\t// A struct is a sequence of \"name: value\", terminated by one of\n-\t// '>' or '}', or the end of the input.  A name may also be\n-\t// \"[extension]\" or \"[type/url]\".\n-\t//\n-\t// The whole struct can also be an expanded Any message, like:\n-\t// [type/url] < ... struct contents ... >\n-\tseen := make(map[protoreflect.FieldNumber]bool)\n-\tfor {\n-\t\ttok := p.next()\n-\t\tif tok.err != nil {\n-\t\t\treturn tok.err\n-\t\t}\n-\t\tif tok.value == terminator {\n-\t\t\tbreak\n-\t\t}\n-\t\tif tok.value == \"[\" {\n-\t\t\tif err := p.unmarshalExtensionOrAny(m, seen); err != nil {\n-\t\t\t\treturn err\n-\t\t\t}\n-\t\t\tcontinue\n-\t\t}\n-\n-\t\t// This is a normal, non-extension field.\n-\t\tname := protoreflect.Name(tok.value)\n-\t\tfd := fds.ByName(name)\n-\t\tswitch {\n-\t\tcase fd == nil:\n-\t\t\tgd := fds.ByName(protoreflect.Name(strings.ToLower(string(name))))\n-\t\t\tif gd != nil && gd.Kind() == protoreflect.GroupKind && gd.Message().Name() == name {\n-\t\t\t\tfd = gd\n-\t\t\t}\n-\t\tcase fd.Kind() == protoreflect.GroupKind && fd.Message().Name() != name:\n-\t\t\tfd = nil\n-\t\tcase fd.IsWeak() && fd.Message().IsPlaceholder():\n-\t\t\tfd = nil\n-\t\t}\n-\t\tif fd == nil {\n-\t\t\ttypeName := string(md.FullName())\n-\t\t\tif m, ok := m.Interface().(Message); ok {\n-\t\t\t\tt := reflect.TypeOf(m)\n-\t\t\t\tif t.Kind() == reflect.Ptr {\n-\t\t\t\t\ttypeName = t.Elem().String()\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\treturn p.errorf(\"unknown field name %q in %v\", name, typeName)\n-\t\t}\n-\t\tif od := fd.ContainingOneof(); od != nil && m.WhichOneof(od) != nil {\n-\t\t\treturn p.errorf(\"field '%s' would overwrite already parsed oneof '%s'\", name, od.Name())\n-\t\t}\n-\t\tif fd.Cardinality() != protoreflect.Repeated && seen[fd.Number()] {\n-\t\t\treturn p.errorf(\"non-repeated field %q was repeated\", fd.Name())\n-\t\t}\n-\t\tseen[fd.Number()] = true\n-\n-\t\t// Consume any colon.\n-\t\tif err := p.checkForColon(fd); err != nil {\n-\t\t\treturn err\n-\t\t}\n-\n-\t\t// Parse into the field.\n-\t\tv := m.Get(fd)\n-\t\tif !m.Has(fd) && (fd.IsList() || fd.IsMap() || fd.Message() != nil) {\n-\t\t\tv = m.Mutable(fd)\n-\t\t}\n-\t\tif v, err = p.unmarshalValue(v, fd); err != nil {\n-\t\t\treturn err\n-\t\t}\n-\t\tm.Set(fd, v)\n-\n-\t\tif err := p.consumeOptionalSeparator(); err != nil {\n-\t\t\treturn err\n-\t\t}\n-\t}\n-\treturn nil\n-}\n-\n-func (p *textParser) unmarshalExtensionOrAny(m protoreflect.Message, seen map[protoreflect.FieldNumber]bool) error {\n-\tname, err := p.consumeExtensionOrAnyName()\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\n-\t// If it contains a slash, it's an Any type URL.\n-\tif slashIdx := strings.LastIndex(name, \"/\"); slashIdx >= 0 {\n-\t\ttok := p.next()\n-\t\tif tok.err != nil {\n-\t\t\treturn tok.err\n-\t\t}\n-\t\t// consume an optional colon\n-\t\tif tok.value == \":\" {\n-\t\t\ttok = p.next()\n-\t\t\tif tok.err != nil {\n-\t\t\t\treturn tok.err\n-\t\t\t}\n-\t\t}\n-\n-\t\tvar terminator string\n-\t\tswitch tok.value {\n-\t\tcase \"<\":\n-\t\t\tterminator = \">\"\n-\t\tcase \"{\":\n-\t\t\tterminator = \"}\"\n-\t\tdefault:\n-\t\t\treturn p.errorf(\"expected '{' or '<', found %q\", tok.value)\n-\t\t}\n-\n-\t\tmt, err := protoregistry.GlobalTypes.FindMessageByURL(name)\n-\t\tif err != nil {\n-\t\t\treturn p.errorf(\"unrecognized message %q in google.protobuf.Any\", name[slashIdx+len(\"/\"):])\n-\t\t}\n-\t\tm2 := mt.New()\n-\t\tif err := p.unmarshalMessage(m2, terminator); err != nil {\n-\t\t\treturn err\n-\t\t}\n-\t\tb, err := protoV2.Marshal(m2.Interface())\n-\t\tif err != nil {\n-\t\t\treturn p.errorf(\"failed to marshal message of type %q: %v\", name[slashIdx+len(\"/\"):], err)\n-\t\t}\n-\n-\t\turlFD := m.Descriptor().Fields().ByName(\"type_url\")\n-\t\tvalFD := m.Descriptor().Fields().ByName(\"value\")\n-\t\tif seen[urlFD.Number()] {\n-\t\t\treturn p.errorf(\"Any message unpacked multiple times, or %q already set\", urlFD.Name())\n-\t\t}\n-\t\tif seen[valFD.Number()] {\n-\t\t\treturn p.errorf(\"Any message unpacked multiple times, or %q already set\", valFD.Name())\n-\t\t}\n-\t\tm.Set(urlFD, protoreflect.ValueOfString(name))\n-\t\tm.Set(valFD, protoreflect.ValueOfBytes(b))\n-\t\tseen[urlFD.Number()] = true\n-\t\tseen[valFD.Number()] = true\n-\t\treturn nil\n-\t}\n-\n-\txname := protoreflect.FullName(name)\n-\txt, _ := protoregistry.GlobalTypes.FindExtensionByName(xname)\n-\tif xt == nil && isMessageSet(m.Descriptor()) {\n-\t\txt, _ = protoregistry.GlobalTypes.FindExtensionByName(xname.Append(\"message_set_extension\"))\n-\t}\n-\tif xt == nil {\n-\t\treturn p.errorf(\"unrecognized extension %q\", name)\n-\t}\n-\tfd := xt.TypeDescriptor()\n-\tif fd.ContainingMessage().FullName() != m.Descriptor().FullName() {\n-\t\treturn p.errorf(\"extension field %q does not extend message %q\", name, m.Descriptor().FullName())\n-\t}\n-\n-\tif err := p.checkForColon(fd); err != nil {\n-\t\treturn err\n-\t}\n-\n-\tv := m.Get(fd)\n-\tif !m.Has(fd) && (fd.IsList() || fd.IsMap() || fd.Message() != nil) {\n-\t\tv = m.Mutable(fd)\n-\t}\n-\tv, err = p.unmarshalValue(v, fd)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\tm.Set(fd, v)\n-\treturn p.consumeOptionalSeparator()\n-}\n-\n-func (p *textParser) unmarshalValue(v protoreflect.Value, fd protoreflect.FieldDescriptor) (protoreflect.Value, error) {\n-\ttok := p.next()\n-\tif tok.err != nil {\n-\t\treturn v, tok.err\n-\t}\n-\tif tok.value == \"\" {\n-\t\treturn v, p.errorf(\"unexpected EOF\")\n-\t}\n-\n-\tswitch {\n-\tcase fd.IsList():\n-\t\tlv := v.List()\n-\t\tvar err error\n-\t\tif tok.value == \"[\" {\n-\t\t\t// Repeated field with list notation, like [1,2,3].\n-\t\t\tfor {\n-\t\t\t\tvv := lv.NewElement()\n-\t\t\t\tvv, err = p.unmarshalSingularValue(vv, fd)\n-\t\t\t\tif err != nil {\n-\t\t\t\t\treturn v, err\n-\t\t\t\t}\n-\t\t\t\tlv.Append(vv)\n-\n-\t\t\t\ttok := p.next()\n-\t\t\t\tif tok.err != nil {\n-\t\t\t\t\treturn v, tok.err\n-\t\t\t\t}\n-\t\t\t\tif tok.value == \"]\" {\n-\t\t\t\t\tbreak\n-\t\t\t\t}\n-\t\t\t\tif tok.value != \",\" {\n-\t\t\t\t\treturn v, p.errorf(\"Expected ']' or ',' found %q\", tok.value)\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\treturn v, nil\n-\t\t}\n-\n-\t\t// One value of the repeated field.\n-\t\tp.back()\n-\t\tvv := lv.NewElement()\n-\t\tvv, err = p.unmarshalSingularValue(vv, fd)\n-\t\tif err != nil {\n-\t\t\treturn v, err\n-\t\t}\n-\t\tlv.Append(vv)\n-\t\treturn v, nil\n-\tcase fd.IsMap():\n-\t\t// The map entry should be this sequence of tokens:\n-\t\t//\t< key : KEY value : VALUE >\n-\t\t// However, implementations may omit key or value, and technically\n-\t\t// we should support them in any order.\n-\t\tvar terminator string\n-\t\tswitch tok.value {\n-\t\tcase \"<\":\n-\t\t\tterminator = \">\"\n-\t\tcase \"{\":\n-\t\t\tterminator = \"}\"\n-\t\tdefault:\n-\t\t\treturn v, p.errorf(\"expected '{' or '<', found %q\", tok.value)\n-\t\t}\n-\n-\t\tkeyFD := fd.MapKey()\n-\t\tvalFD := fd.MapValue()\n-\n-\t\tmv := v.Map()\n-\t\tkv := keyFD.Default()\n-\t\tvv := mv.NewValue()\n-\t\tfor {\n-\t\t\ttok := p.next()\n-\t\t\tif tok.err != nil {\n-\t\t\t\treturn v, tok.err\n-\t\t\t}\n-\t\t\tif tok.value == terminator {\n-\t\t\t\tbreak\n-\t\t\t}\n-\t\t\tvar err error\n-\t\t\tswitch tok.value {\n-\t\t\tcase \"key\":\n-\t\t\t\tif err := p.consumeToken(\":\"); err != nil {\n-\t\t\t\t\treturn v, err\n-\t\t\t\t}\n-\t\t\t\tif kv, err = p.unmarshalSingularValue(kv, keyFD); err != nil {\n-\t\t\t\t\treturn v, err\n-\t\t\t\t}\n-\t\t\t\tif err := p.consumeOptionalSeparator(); err != nil {\n-\t\t\t\t\treturn v, err\n-\t\t\t\t}\n-\t\t\tcase \"value\":\n-\t\t\t\tif err := p.checkForColon(valFD); err != nil {\n-\t\t\t\t\treturn v, err\n-\t\t\t\t}\n-\t\t\t\tif vv, err = p.unmarshalSingularValue(vv, valFD); err != nil {\n-\t\t\t\t\treturn v, err\n-\t\t\t\t}\n-\t\t\t\tif err := p.consumeOptionalSeparator(); err != nil {\n-\t\t\t\t\treturn v, err\n-\t\t\t\t}\n-\t\t\tdefault:\n-\t\t\t\tp.back()\n-\t\t\t\treturn v, p.errorf(`expected \"key\", \"value\", or %q, found %q`, terminator, tok.value)\n-\t\t\t}\n-\t\t}\n-\t\tmv.Set(kv.MapKey(), vv)\n-\t\treturn v, nil\n-\tdefault:\n-\t\tp.back()\n-\t\treturn p.unmarshalSingularValue(v, fd)\n-\t}\n-}\n-\n-func (p *textParser) unmarshalSingularValue(v protoreflect.Value, fd protoreflect.FieldDescriptor) (protoreflect.Value, error) {\n-\ttok := p.next()\n-\tif tok.err != nil {\n-\t\treturn v, tok.err\n-\t}\n-\tif tok.value == \"\" {\n-\t\treturn v, p.errorf(\"unexpected EOF\")\n-\t}\n-\n-\tswitch fd.Kind() {\n-\tcase protoreflect.BoolKind:\n-\t\tswitch tok.value {\n-\t\tcase \"true\", \"1\", \"t\", \"True\":\n-\t\t\treturn protoreflect.ValueOfBool(true), nil\n-\t\tcase \"false\", \"0\", \"f\", \"False\":\n-\t\t\treturn protoreflect.ValueOfBool(false), nil\n-\t\t}\n-\tcase protoreflect.Int32Kind, protoreflect.Sint32Kind, protoreflect.Sfixed32Kind:\n-\t\tif x, err := strconv.ParseInt(tok.value, 0, 32); err == nil {\n-\t\t\treturn protoreflect.ValueOfInt32(int32(x)), nil\n-\t\t}\n-\n-\t\t// The C++ parser accepts large positive hex numbers that uses\n-\t\t// two's complement arithmetic to represent negative numbers.\n-\t\t// This feature is here for backwards compatibility with C++.\n-\t\tif strings.HasPrefix(tok.value, \"0x\") {\n-\t\t\tif x, err := strconv.ParseUint(tok.value, 0, 32); err == nil {\n-\t\t\t\treturn protoreflect.ValueOfInt32(int32(-(int64(^x) + 1))), nil\n-\t\t\t}\n-\t\t}\n-\tcase protoreflect.Int64Kind, protoreflect.Sint64Kind, protoreflect.Sfixed64Kind:\n-\t\tif x, err := strconv.ParseInt(tok.value, 0, 64); err == nil {\n-\t\t\treturn protoreflect.ValueOfInt64(int64(x)), nil\n-\t\t}\n-\n-\t\t// The C++ parser accepts large positive hex numbers that uses\n-\t\t// two's complement arithmetic to represent negative numbers.\n-\t\t// This feature is here for backwards compatibility with C++.\n-\t\tif strings.HasPrefix(tok.value, \"0x\") {\n-\t\t\tif x, err := strconv.ParseUint(tok.value, 0, 64); err == nil {\n-\t\t\t\treturn protoreflect.ValueOfInt64(int64(-(int64(^x) + 1))), nil\n-\t\t\t}\n-\t\t}\n-\tcase protoreflect.Uint32Kind, protoreflect.Fixed32Kind:\n-\t\tif x, err := strconv.ParseUint(tok.value, 0, 32); err == nil {\n-\t\t\treturn protoreflect.ValueOfUint32(uint32(x)), nil\n-\t\t}\n-\tcase protoreflect.Uint64Kind, protoreflect.Fixed64Kind:\n-\t\tif x, err := strconv.ParseUint(tok.value, 0, 64); err == nil {\n-\t\t\treturn protoreflect.ValueOfUint64(uint64(x)), nil\n-\t\t}\n-\tcase protoreflect.FloatKind:\n-\t\t// Ignore 'f' for compatibility with output generated by C++,\n-\t\t// but don't remove 'f' when the value is \"-inf\" or \"inf\".\n-\t\tv := tok.value\n-\t\tif strings.HasSuffix(v, \"f\") && v != \"-inf\" && v != \"inf\" {\n-\t\t\tv = v[:len(v)-len(\"f\")]\n-\t\t}\n-\t\tif x, err := strconv.ParseFloat(v, 32); err == nil {\n-\t\t\treturn protoreflect.ValueOfFloat32(float32(x)), nil\n-\t\t}\n-\tcase protoreflect.DoubleKind:\n-\t\t// Ignore 'f' for compatibility with output generated by C++,\n-\t\t// but don't remove 'f' when the value is \"-inf\" or \"inf\".\n-\t\tv := tok.value\n-\t\tif strings.HasSuffix(v, \"f\") && v != \"-inf\" && v != \"inf\" {\n-\t\t\tv = v[:len(v)-len(\"f\")]\n-\t\t}\n-\t\tif x, err := strconv.ParseFloat(v, 64); err == nil {\n-\t\t\treturn protoreflect.ValueOfFloat64(float64(x)), nil\n-\t\t}\n-\tcase protoreflect.StringKind:\n-\t\tif isQuote(tok.value[0]) {\n-\t\t\treturn protoreflect.ValueOfString(tok.unquoted), nil\n-\t\t}\n-\tcase protoreflect.BytesKind:\n-\t\tif isQuote(tok.value[0]) {\n-\t\t\treturn protoreflect.ValueOfBytes([]byte(tok.unquoted)), nil\n-\t\t}\n-\tcase protoreflect.EnumKind:\n-\t\tif x, err := strconv.ParseInt(tok.value, 0, 32); err == nil {\n-\t\t\treturn protoreflect.ValueOfEnum(protoreflect.EnumNumber(x)), nil\n-\t\t}\n-\t\tvd := fd.Enum().Values().ByName(protoreflect.Name(tok.value))\n-\t\tif vd != nil {\n-\t\t\treturn protoreflect.ValueOfEnum(vd.Number()), nil\n-\t\t}\n-\tcase protoreflect.MessageKind, protoreflect.GroupKind:\n-\t\tvar terminator string\n-\t\tswitch tok.value {\n-\t\tcase \"{\":\n-\t\t\tterminator = \"}\"\n-\t\tcase \"<\":\n-\t\t\tterminator = \">\"\n-\t\tdefault:\n-\t\t\treturn v, p.errorf(\"expected '{' or '<', found %q\", tok.value)\n-\t\t}\n-\t\terr := p.unmarshalMessage(v.Message(), terminator)\n-\t\treturn v, err\n-\tdefault:\n-\t\tpanic(fmt.Sprintf(\"invalid kind %v\", fd.Kind()))\n-\t}\n-\treturn v, p.errorf(\"invalid %v: %v\", fd.Kind(), tok.value)\n-}\n-\n-// Consume a ':' from the input stream (if the next token is a colon),\n-// returning an error if a colon is needed but not present.\n-func (p *textParser) checkForColon(fd protoreflect.FieldDescriptor) *ParseError {\n-\ttok := p.next()\n-\tif tok.err != nil {\n-\t\treturn tok.err\n-\t}\n-\tif tok.value != \":\" {\n-\t\tif fd.Message() == nil {\n-\t\t\treturn p.errorf(\"expected ':', found %q\", tok.value)\n-\t\t}\n-\t\tp.back()\n-\t}\n-\treturn nil\n-}\n-\n-// consumeExtensionOrAnyName consumes an extension name or an Any type URL and\n-// the following ']'. It returns the name or URL consumed.\n-func (p *textParser) consumeExtensionOrAnyName() (string, error) {\n-\ttok := p.next()\n-\tif tok.err != nil {\n-\t\treturn \"\", tok.err\n-\t}\n-\n-\t// If extension name or type url is quoted, it's a single token.\n-\tif len(tok.value) > 2 && isQuote(tok.value[0]) && tok.value[len(tok.value)-1] == tok.value[0] {\n-\t\tname, err := unquoteC(tok.value[1:len(tok.value)-1], rune(tok.value[0]))\n-\t\tif err != nil {\n-\t\t\treturn \"\", err\n-\t\t}\n-\t\treturn name, p.consumeToken(\"]\")\n-\t}\n-\n-\t// Consume everything up to \"]\"\n-\tvar parts []string\n-\tfor tok.value != \"]\" {\n-\t\tparts = append(parts, tok.value)\n-\t\ttok = p.next()\n-\t\tif tok.err != nil {\n-\t\t\treturn \"\", p.errorf(\"unrecognized type_url or extension name: %s\", tok.err)\n-\t\t}\n-\t\tif p.done && tok.value != \"]\" {\n-\t\t\treturn \"\", p.errorf(\"unclosed type_url or extension name\")\n-\t\t}\n-\t}\n-\treturn strings.Join(parts, \"\"), nil\n-}\n-\n-// consumeOptionalSeparator consumes an optional semicolon or comma.\n-// It is used in unmarshalMessage to provide backward compatibility.\n-func (p *textParser) consumeOptionalSeparator() error {\n-\ttok := p.next()\n-\tif tok.err != nil {\n-\t\treturn tok.err\n-\t}\n-\tif tok.value != \";\" && tok.value != \",\" {\n-\t\tp.back()\n-\t}\n-\treturn nil\n-}\n-\n-func (p *textParser) errorf(format string, a ...interface{}) *ParseError {\n-\tpe := &ParseError{fmt.Sprintf(format, a...), p.cur.line, p.cur.offset}\n-\tp.cur.err = pe\n-\tp.done = true\n-\treturn pe\n-}\n-\n-func (p *textParser) skipWhitespace() {\n-\ti := 0\n-\tfor i < len(p.s) && (isWhitespace(p.s[i]) || p.s[i] == '#') {\n-\t\tif p.s[i] == '#' {\n-\t\t\t// comment; skip to end of line or input\n-\t\t\tfor i < len(p.s) && p.s[i] != '\\n' {\n-\t\t\t\ti++\n-\t\t\t}\n-\t\t\tif i == len(p.s) {\n-\t\t\t\tbreak\n-\t\t\t}\n-\t\t}\n-\t\tif p.s[i] == '\\n' {\n-\t\t\tp.line++\n-\t\t}\n-\t\ti++\n-\t}\n-\tp.offset += i\n-\tp.s = p.s[i:len(p.s)]\n-\tif len(p.s) == 0 {\n-\t\tp.done = true\n-\t}\n-}\n-\n-func (p *textParser) advance() {\n-\t// Skip whitespace\n-\tp.skipWhitespace()\n-\tif p.done {\n-\t\treturn\n-\t}\n-\n-\t// Start of non-whitespace\n-\tp.cur.err = nil\n-\tp.cur.offset, p.cur.line = p.offset, p.line\n-\tp.cur.unquoted = \"\"\n-\tswitch p.s[0] {\n-\tcase '<', '>', '{', '}', ':', '[', ']', ';', ',', '/':\n-\t\t// Single symbol\n-\t\tp.cur.value, p.s = p.s[0:1], p.s[1:len(p.s)]\n-\tcase '\"', '\\'':\n-\t\t// Quoted string\n-\t\ti := 1\n-\t\tfor i < len(p.s) && p.s[i] != p.s[0] && p.s[i] != '\\n' {\n-\t\t\tif p.s[i] == '\\\\' && i+1 < len(p.s) {\n-\t\t\t\t// skip escaped char\n-\t\t\t\ti++\n-\t\t\t}\n-\t\t\ti++\n-\t\t}\n-\t\tif i >= len(p.s) || p.s[i] != p.s[0] {\n-\t\t\tp.errorf(\"unmatched quote\")\n-\t\t\treturn\n-\t\t}\n-\t\tunq, err := unquoteC(p.s[1:i], rune(p.s[0]))\n-\t\tif err != nil {\n-\t\t\tp.errorf(\"invalid quoted string %s: %v\", p.s[0:i+1], err)\n-\t\t\treturn\n-\t\t}\n-\t\tp.cur.value, p.s = p.s[0:i+1], p.s[i+1:len(p.s)]\n-\t\tp.cur.unquoted = unq\n-\tdefault:\n-\t\ti := 0\n-\t\tfor i < len(p.s) && isIdentOrNumberChar(p.s[i]) {\n-\t\t\ti++\n-\t\t}\n-\t\tif i == 0 {\n-\t\t\tp.errorf(\"unexpected byte %#x\", p.s[0])\n-\t\t\treturn\n-\t\t}\n-\t\tp.cur.value, p.s = p.s[0:i], p.s[i:len(p.s)]\n-\t}\n-\tp.offset += len(p.cur.value)\n-}\n-\n-// Back off the parser by one token. Can only be done between calls to next().\n-// It makes the next advance() a no-op.\n-func (p *textParser) back() { p.backed = true }\n-\n-// Advances the parser and returns the new current token.\n-func (p *textParser) next() *token {\n-\tif p.backed || p.done {\n-\t\tp.backed = false\n-\t\treturn &p.cur\n-\t}\n-\tp.advance()\n-\tif p.done {\n-\t\tp.cur.value = \"\"\n-\t} else if len(p.cur.value) > 0 && isQuote(p.cur.value[0]) {\n-\t\t// Look for multiple quoted strings separated by whitespace,\n-\t\t// and concatenate them.\n-\t\tcat := p.cur\n-\t\tfor {\n-\t\t\tp.skipWhitespace()\n-\t\t\tif p.done || !isQuote(p.s[0]) {\n-\t\t\t\tbreak\n-\t\t\t}\n-\t\t\tp.advance()\n-\t\t\tif p.cur.err != nil {\n-\t\t\t\treturn &p.cur\n-\t\t\t}\n-\t\t\tcat.value += \" \" + p.cur.value\n-\t\t\tcat.unquoted += p.cur.unquoted\n-\t\t}\n-\t\tp.done = false // parser may have seen EOF, but we want to return cat\n-\t\tp.cur = cat\n-\t}\n-\treturn &p.cur\n-}\n-\n-func (p *textParser) consumeToken(s string) error {\n-\ttok := p.next()\n-\tif tok.err != nil {\n-\t\treturn tok.err\n-\t}\n-\tif tok.value != s {\n-\t\tp.back()\n-\t\treturn p.errorf(\"expected %q, found %q\", s, tok.value)\n-\t}\n-\treturn nil\n-}\n-\n-var errBadUTF8 = errors.New(\"proto: bad UTF-8\")\n-\n-func unquoteC(s string, quote rune) (string, error) {\n-\t// This is based on C++'s tokenizer.cc.\n-\t// Despite its name, this is *not* parsing C syntax.\n-\t// For instance, \"\\0\" is an invalid quoted string.\n-\n-\t// Avoid allocation in trivial cases.\n-\tsimple := true\n-\tfor _, r := range s {\n-\t\tif r == '\\\\' || r == quote {\n-\t\t\tsimple = false\n-\t\t\tbreak\n-\t\t}\n-\t}\n-\tif simple {\n-\t\treturn s, nil\n-\t}\n-\n-\tbuf := make([]byte, 0, 3*len(s)/2)\n-\tfor len(s) > 0 {\n-\t\tr, n := utf8.DecodeRuneInString(s)\n-\t\tif r == utf8.RuneError && n == 1 {\n-\t\t\treturn \"\", errBadUTF8\n-\t\t}\n-\t\ts = s[n:]\n-\t\tif r != '\\\\' {\n-\t\t\tif r < utf8.RuneSelf {\n-\t\t\t\tbuf = append(buf, byte(r))\n-\t\t\t} else {\n-\t\t\t\tbuf = append(buf, string(r)...)\n-\t\t\t}\n-\t\t\tcontinue\n-\t\t}\n-\n-\t\tch, tail, err := unescape(s)\n-\t\tif err != nil {\n-\t\t\treturn \"\", err\n-\t\t}\n-\t\tbuf = append(buf, ch...)\n-\t\ts = tail\n-\t}\n-\treturn string(buf), nil\n-}\n-\n-func unescape(s string) (ch string, tail string, err error) {\n-\tr, n := utf8.DecodeRuneInString(s)\n-\tif r == utf8.RuneError && n == 1 {\n-\t\treturn \"\", \"\", errBadUTF8\n-\t}\n-\ts = s[n:]\n-\tswitch r {\n-\tcase 'a':\n-\t\treturn \"\\a\", s, nil\n-\tcase 'b':\n-\t\treturn \"\\b\", s, nil\n-\tcase 'f':\n-\t\treturn \"\\f\", s, nil\n-\tcase 'n':\n-\t\treturn \"\\n\", s, nil\n-\tcase 'r':\n-\t\treturn \"\\r\", s, nil\n-\tcase 't':\n-\t\treturn \"\\t\", s, nil\n-\tcase 'v':\n-\t\treturn \"\\v\", s, nil\n-\tcase '?':\n-\t\treturn \"?\", s, nil // trigraph workaround\n-\tcase '\\'', '\"', '\\\\':\n-\t\treturn string(r), s, nil\n-\tcase '0', '1', '2', '3', '4', '5', '6', '7':\n-\t\tif len(s) < 2 {\n-\t\t\treturn \"\", \"\", fmt.Errorf(`\\%c requires 2 following digits`, r)\n-\t\t}\n-\t\tss := string(r) + s[:2]\n-\t\ts = s[2:]\n-\t\ti, err := strconv.ParseUint(ss, 8, 8)\n-\t\tif err != nil {\n-\t\t\treturn \"\", \"\", fmt.Errorf(`\\%s contains non-octal digits`, ss)\n-\t\t}\n-\t\treturn string([]byte{byte(i)}), s, nil\n-\tcase 'x', 'X', 'u', 'U':\n-\t\tvar n int\n-\t\tswitch r {\n-\t\tcase 'x', 'X':\n-\t\t\tn = 2\n-\t\tcase 'u':\n-\t\t\tn = 4\n-\t\tcase 'U':\n-\t\t\tn = 8\n-\t\t}\n-\t\tif len(s) < n {\n-\t\t\treturn \"\", \"\", fmt.Errorf(`\\%c requires %d following digits`, r, n)\n-\t\t}\n-\t\tss := s[:n]\n-\t\ts = s[n:]\n-\t\ti, err := strconv.ParseUint(ss, 16, 64)\n-\t\tif err != nil {\n-\t\t\treturn \"\", \"\", fmt.Errorf(`\\%c%s contains non-hexadecimal digits`, r, ss)\n-\t\t}\n-\t\tif r == 'x' || r == 'X' {\n-\t\t\treturn string([]byte{byte(i)}), s, nil\n-\t\t}\n-\t\tif i > utf8.MaxRune {\n-\t\t\treturn \"\", \"\", fmt.Errorf(`\\%c%s is not a valid Unicode code point`, r, ss)\n-\t\t}\n-\t\treturn string(rune(i)), s, nil\n-\t}\n-\treturn \"\", \"\", fmt.Errorf(`unknown escape \\%c`, r)\n-}\n-\n-func isIdentOrNumberChar(c byte) bool {\n-\tswitch {\n-\tcase 'A' <= c && c <= 'Z', 'a' <= c && c <= 'z':\n-\t\treturn true\n-\tcase '0' <= c && c <= '9':\n-\t\treturn true\n-\t}\n-\tswitch c {\n-\tcase '-', '+', '.', '_':\n-\t\treturn true\n-\t}\n-\treturn false\n-}\n-\n-func isWhitespace(c byte) bool {\n-\tswitch c {\n-\tcase ' ', '\\t', '\\n', '\\r':\n-\t\treturn true\n-\t}\n-\treturn false\n-}\n-\n-func isQuote(c byte) bool {\n-\tswitch c {\n-\tcase '\"', '\\'':\n-\t\treturn true\n-\t}\n-\treturn false\n-}"
    },
    {
      "sha": "a31134eeb3b7dc49285ea1215f6e643d72eccb5d",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/text_encode.go",
      "status": "removed",
      "additions": 0,
      "deletions": 560,
      "changes": 560,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Ftext_encode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Ftext_encode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Ftext_encode.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,560 +0,0 @@\n-// Copyright 2010 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proto\n-\n-import (\n-\t\"bytes\"\n-\t\"encoding\"\n-\t\"fmt\"\n-\t\"io\"\n-\t\"math\"\n-\t\"sort\"\n-\t\"strings\"\n-\n-\t\"google.golang.org/protobuf/encoding/prototext\"\n-\t\"google.golang.org/protobuf/encoding/protowire\"\n-\t\"google.golang.org/protobuf/proto\"\n-\t\"google.golang.org/protobuf/reflect/protoreflect\"\n-\t\"google.golang.org/protobuf/reflect/protoregistry\"\n-)\n-\n-const wrapTextMarshalV2 = false\n-\n-// TextMarshaler is a configurable text format marshaler.\n-type TextMarshaler struct {\n-\tCompact   bool // use compact text format (one line)\n-\tExpandAny bool // expand google.protobuf.Any messages of known types\n-}\n-\n-// Marshal writes the proto text format of m to w.\n-func (tm *TextMarshaler) Marshal(w io.Writer, m Message) error {\n-\tb, err := tm.marshal(m)\n-\tif len(b) > 0 {\n-\t\tif _, err := w.Write(b); err != nil {\n-\t\t\treturn err\n-\t\t}\n-\t}\n-\treturn err\n-}\n-\n-// Text returns a proto text formatted string of m.\n-func (tm *TextMarshaler) Text(m Message) string {\n-\tb, _ := tm.marshal(m)\n-\treturn string(b)\n-}\n-\n-func (tm *TextMarshaler) marshal(m Message) ([]byte, error) {\n-\tmr := MessageReflect(m)\n-\tif mr == nil || !mr.IsValid() {\n-\t\treturn []byte(\"<nil>\"), nil\n-\t}\n-\n-\tif wrapTextMarshalV2 {\n-\t\tif m, ok := m.(encoding.TextMarshaler); ok {\n-\t\t\treturn m.MarshalText()\n-\t\t}\n-\n-\t\topts := prototext.MarshalOptions{\n-\t\t\tAllowPartial: true,\n-\t\t\tEmitUnknown:  true,\n-\t\t}\n-\t\tif !tm.Compact {\n-\t\t\topts.Indent = \"  \"\n-\t\t}\n-\t\tif !tm.ExpandAny {\n-\t\t\topts.Resolver = (*protoregistry.Types)(nil)\n-\t\t}\n-\t\treturn opts.Marshal(mr.Interface())\n-\t} else {\n-\t\tw := &textWriter{\n-\t\t\tcompact:   tm.Compact,\n-\t\t\texpandAny: tm.ExpandAny,\n-\t\t\tcomplete:  true,\n-\t\t}\n-\n-\t\tif m, ok := m.(encoding.TextMarshaler); ok {\n-\t\t\tb, err := m.MarshalText()\n-\t\t\tif err != nil {\n-\t\t\t\treturn nil, err\n-\t\t\t}\n-\t\t\tw.Write(b)\n-\t\t\treturn w.buf, nil\n-\t\t}\n-\n-\t\terr := w.writeMessage(mr)\n-\t\treturn w.buf, err\n-\t}\n-}\n-\n-var (\n-\tdefaultTextMarshaler = TextMarshaler{}\n-\tcompactTextMarshaler = TextMarshaler{Compact: true}\n-)\n-\n-// MarshalText writes the proto text format of m to w.\n-func MarshalText(w io.Writer, m Message) error { return defaultTextMarshaler.Marshal(w, m) }\n-\n-// MarshalTextString returns a proto text formatted string of m.\n-func MarshalTextString(m Message) string { return defaultTextMarshaler.Text(m) }\n-\n-// CompactText writes the compact proto text format of m to w.\n-func CompactText(w io.Writer, m Message) error { return compactTextMarshaler.Marshal(w, m) }\n-\n-// CompactTextString returns a compact proto text formatted string of m.\n-func CompactTextString(m Message) string { return compactTextMarshaler.Text(m) }\n-\n-var (\n-\tnewline         = []byte(\"\\n\")\n-\tendBraceNewline = []byte(\"}\\n\")\n-\tposInf          = []byte(\"inf\")\n-\tnegInf          = []byte(\"-inf\")\n-\tnan             = []byte(\"nan\")\n-)\n-\n-// textWriter is an io.Writer that tracks its indentation level.\n-type textWriter struct {\n-\tcompact   bool // same as TextMarshaler.Compact\n-\texpandAny bool // same as TextMarshaler.ExpandAny\n-\tcomplete  bool // whether the current position is a complete line\n-\tindent    int  // indentation level; never negative\n-\tbuf       []byte\n-}\n-\n-func (w *textWriter) Write(p []byte) (n int, _ error) {\n-\tnewlines := bytes.Count(p, newline)\n-\tif newlines == 0 {\n-\t\tif !w.compact && w.complete {\n-\t\t\tw.writeIndent()\n-\t\t}\n-\t\tw.buf = append(w.buf, p...)\n-\t\tw.complete = false\n-\t\treturn len(p), nil\n-\t}\n-\n-\tfrags := bytes.SplitN(p, newline, newlines+1)\n-\tif w.compact {\n-\t\tfor i, frag := range frags {\n-\t\t\tif i > 0 {\n-\t\t\t\tw.buf = append(w.buf, ' ')\n-\t\t\t\tn++\n-\t\t\t}\n-\t\t\tw.buf = append(w.buf, frag...)\n-\t\t\tn += len(frag)\n-\t\t}\n-\t\treturn n, nil\n-\t}\n-\n-\tfor i, frag := range frags {\n-\t\tif w.complete {\n-\t\t\tw.writeIndent()\n-\t\t}\n-\t\tw.buf = append(w.buf, frag...)\n-\t\tn += len(frag)\n-\t\tif i+1 < len(frags) {\n-\t\t\tw.buf = append(w.buf, '\\n')\n-\t\t\tn++\n-\t\t}\n-\t}\n-\tw.complete = len(frags[len(frags)-1]) == 0\n-\treturn n, nil\n-}\n-\n-func (w *textWriter) WriteByte(c byte) error {\n-\tif w.compact && c == '\\n' {\n-\t\tc = ' '\n-\t}\n-\tif !w.compact && w.complete {\n-\t\tw.writeIndent()\n-\t}\n-\tw.buf = append(w.buf, c)\n-\tw.complete = c == '\\n'\n-\treturn nil\n-}\n-\n-func (w *textWriter) writeName(fd protoreflect.FieldDescriptor) {\n-\tif !w.compact && w.complete {\n-\t\tw.writeIndent()\n-\t}\n-\tw.complete = false\n-\n-\tif fd.Kind() != protoreflect.GroupKind {\n-\t\tw.buf = append(w.buf, fd.Name()...)\n-\t\tw.WriteByte(':')\n-\t} else {\n-\t\t// Use message type name for group field name.\n-\t\tw.buf = append(w.buf, fd.Message().Name()...)\n-\t}\n-\n-\tif !w.compact {\n-\t\tw.WriteByte(' ')\n-\t}\n-}\n-\n-func requiresQuotes(u string) bool {\n-\t// When type URL contains any characters except [0-9A-Za-z./\\-]*, it must be quoted.\n-\tfor _, ch := range u {\n-\t\tswitch {\n-\t\tcase ch == '.' || ch == '/' || ch == '_':\n-\t\t\tcontinue\n-\t\tcase '0' <= ch && ch <= '9':\n-\t\t\tcontinue\n-\t\tcase 'A' <= ch && ch <= 'Z':\n-\t\t\tcontinue\n-\t\tcase 'a' <= ch && ch <= 'z':\n-\t\t\tcontinue\n-\t\tdefault:\n-\t\t\treturn true\n-\t\t}\n-\t}\n-\treturn false\n-}\n-\n-// writeProto3Any writes an expanded google.protobuf.Any message.\n-//\n-// It returns (false, nil) if sv value can't be unmarshaled (e.g. because\n-// required messages are not linked in).\n-//\n-// It returns (true, error) when sv was written in expanded format or an error\n-// was encountered.\n-func (w *textWriter) writeProto3Any(m protoreflect.Message) (bool, error) {\n-\tmd := m.Descriptor()\n-\tfdURL := md.Fields().ByName(\"type_url\")\n-\tfdVal := md.Fields().ByName(\"value\")\n-\n-\turl := m.Get(fdURL).String()\n-\tmt, err := protoregistry.GlobalTypes.FindMessageByURL(url)\n-\tif err != nil {\n-\t\treturn false, nil\n-\t}\n-\n-\tb := m.Get(fdVal).Bytes()\n-\tm2 := mt.New()\n-\tif err := proto.Unmarshal(b, m2.Interface()); err != nil {\n-\t\treturn false, nil\n-\t}\n-\tw.Write([]byte(\"[\"))\n-\tif requiresQuotes(url) {\n-\t\tw.writeQuotedString(url)\n-\t} else {\n-\t\tw.Write([]byte(url))\n-\t}\n-\tif w.compact {\n-\t\tw.Write([]byte(\"]:<\"))\n-\t} else {\n-\t\tw.Write([]byte(\"]: <\\n\"))\n-\t\tw.indent++\n-\t}\n-\tif err := w.writeMessage(m2); err != nil {\n-\t\treturn true, err\n-\t}\n-\tif w.compact {\n-\t\tw.Write([]byte(\"> \"))\n-\t} else {\n-\t\tw.indent--\n-\t\tw.Write([]byte(\">\\n\"))\n-\t}\n-\treturn true, nil\n-}\n-\n-func (w *textWriter) writeMessage(m protoreflect.Message) error {\n-\tmd := m.Descriptor()\n-\tif w.expandAny && md.FullName() == \"google.protobuf.Any\" {\n-\t\tif canExpand, err := w.writeProto3Any(m); canExpand {\n-\t\t\treturn err\n-\t\t}\n-\t}\n-\n-\tfds := md.Fields()\n-\tfor i := 0; i < fds.Len(); {\n-\t\tfd := fds.Get(i)\n-\t\tif od := fd.ContainingOneof(); od != nil {\n-\t\t\tfd = m.WhichOneof(od)\n-\t\t\ti += od.Fields().Len()\n-\t\t} else {\n-\t\t\ti++\n-\t\t}\n-\t\tif fd == nil || !m.Has(fd) {\n-\t\t\tcontinue\n-\t\t}\n-\n-\t\tswitch {\n-\t\tcase fd.IsList():\n-\t\t\tlv := m.Get(fd).List()\n-\t\t\tfor j := 0; j < lv.Len(); j++ {\n-\t\t\t\tw.writeName(fd)\n-\t\t\t\tv := lv.Get(j)\n-\t\t\t\tif err := w.writeSingularValue(v, fd); err != nil {\n-\t\t\t\t\treturn err\n-\t\t\t\t}\n-\t\t\t\tw.WriteByte('\\n')\n-\t\t\t}\n-\t\tcase fd.IsMap():\n-\t\t\tkfd := fd.MapKey()\n-\t\t\tvfd := fd.MapValue()\n-\t\t\tmv := m.Get(fd).Map()\n-\n-\t\t\ttype entry struct{ key, val protoreflect.Value }\n-\t\t\tvar entries []entry\n-\t\t\tmv.Range(func(k protoreflect.MapKey, v protoreflect.Value) bool {\n-\t\t\t\tentries = append(entries, entry{k.Value(), v})\n-\t\t\t\treturn true\n-\t\t\t})\n-\t\t\tsort.Slice(entries, func(i, j int) bool {\n-\t\t\t\tswitch kfd.Kind() {\n-\t\t\t\tcase protoreflect.BoolKind:\n-\t\t\t\t\treturn !entries[i].key.Bool() && entries[j].key.Bool()\n-\t\t\t\tcase protoreflect.Int32Kind, protoreflect.Sint32Kind, protoreflect.Sfixed32Kind, protoreflect.Int64Kind, protoreflect.Sint64Kind, protoreflect.Sfixed64Kind:\n-\t\t\t\t\treturn entries[i].key.Int() < entries[j].key.Int()\n-\t\t\t\tcase protoreflect.Uint32Kind, protoreflect.Fixed32Kind, protoreflect.Uint64Kind, protoreflect.Fixed64Kind:\n-\t\t\t\t\treturn entries[i].key.Uint() < entries[j].key.Uint()\n-\t\t\t\tcase protoreflect.StringKind:\n-\t\t\t\t\treturn entries[i].key.String() < entries[j].key.String()\n-\t\t\t\tdefault:\n-\t\t\t\t\tpanic(\"invalid kind\")\n-\t\t\t\t}\n-\t\t\t})\n-\t\t\tfor _, entry := range entries {\n-\t\t\t\tw.writeName(fd)\n-\t\t\t\tw.WriteByte('<')\n-\t\t\t\tif !w.compact {\n-\t\t\t\t\tw.WriteByte('\\n')\n-\t\t\t\t}\n-\t\t\t\tw.indent++\n-\t\t\t\tw.writeName(kfd)\n-\t\t\t\tif err := w.writeSingularValue(entry.key, kfd); err != nil {\n-\t\t\t\t\treturn err\n-\t\t\t\t}\n-\t\t\t\tw.WriteByte('\\n')\n-\t\t\t\tw.writeName(vfd)\n-\t\t\t\tif err := w.writeSingularValue(entry.val, vfd); err != nil {\n-\t\t\t\t\treturn err\n-\t\t\t\t}\n-\t\t\t\tw.WriteByte('\\n')\n-\t\t\t\tw.indent--\n-\t\t\t\tw.WriteByte('>')\n-\t\t\t\tw.WriteByte('\\n')\n-\t\t\t}\n-\t\tdefault:\n-\t\t\tw.writeName(fd)\n-\t\t\tif err := w.writeSingularValue(m.Get(fd), fd); err != nil {\n-\t\t\t\treturn err\n-\t\t\t}\n-\t\t\tw.WriteByte('\\n')\n-\t\t}\n-\t}\n-\n-\tif b := m.GetUnknown(); len(b) > 0 {\n-\t\tw.writeUnknownFields(b)\n-\t}\n-\treturn w.writeExtensions(m)\n-}\n-\n-func (w *textWriter) writeSingularValue(v protoreflect.Value, fd protoreflect.FieldDescriptor) error {\n-\tswitch fd.Kind() {\n-\tcase protoreflect.FloatKind, protoreflect.DoubleKind:\n-\t\tswitch vf := v.Float(); {\n-\t\tcase math.IsInf(vf, +1):\n-\t\t\tw.Write(posInf)\n-\t\tcase math.IsInf(vf, -1):\n-\t\t\tw.Write(negInf)\n-\t\tcase math.IsNaN(vf):\n-\t\t\tw.Write(nan)\n-\t\tdefault:\n-\t\t\tfmt.Fprint(w, v.Interface())\n-\t\t}\n-\tcase protoreflect.StringKind:\n-\t\t// NOTE: This does not validate UTF-8 for historical reasons.\n-\t\tw.writeQuotedString(string(v.String()))\n-\tcase protoreflect.BytesKind:\n-\t\tw.writeQuotedString(string(v.Bytes()))\n-\tcase protoreflect.MessageKind, protoreflect.GroupKind:\n-\t\tvar bra, ket byte = '<', '>'\n-\t\tif fd.Kind() == protoreflect.GroupKind {\n-\t\t\tbra, ket = '{', '}'\n-\t\t}\n-\t\tw.WriteByte(bra)\n-\t\tif !w.compact {\n-\t\t\tw.WriteByte('\\n')\n-\t\t}\n-\t\tw.indent++\n-\t\tm := v.Message()\n-\t\tif m2, ok := m.Interface().(encoding.TextMarshaler); ok {\n-\t\t\tb, err := m2.MarshalText()\n-\t\t\tif err != nil {\n-\t\t\t\treturn err\n-\t\t\t}\n-\t\t\tw.Write(b)\n-\t\t} else {\n-\t\t\tw.writeMessage(m)\n-\t\t}\n-\t\tw.indent--\n-\t\tw.WriteByte(ket)\n-\tcase protoreflect.EnumKind:\n-\t\tif ev := fd.Enum().Values().ByNumber(v.Enum()); ev != nil {\n-\t\t\tfmt.Fprint(w, ev.Name())\n-\t\t} else {\n-\t\t\tfmt.Fprint(w, v.Enum())\n-\t\t}\n-\tdefault:\n-\t\tfmt.Fprint(w, v.Interface())\n-\t}\n-\treturn nil\n-}\n-\n-// writeQuotedString writes a quoted string in the protocol buffer text format.\n-func (w *textWriter) writeQuotedString(s string) {\n-\tw.WriteByte('\"')\n-\tfor i := 0; i < len(s); i++ {\n-\t\tswitch c := s[i]; c {\n-\t\tcase '\\n':\n-\t\t\tw.buf = append(w.buf, `\\n`...)\n-\t\tcase '\\r':\n-\t\t\tw.buf = append(w.buf, `\\r`...)\n-\t\tcase '\\t':\n-\t\t\tw.buf = append(w.buf, `\\t`...)\n-\t\tcase '\"':\n-\t\t\tw.buf = append(w.buf, `\\\"`...)\n-\t\tcase '\\\\':\n-\t\t\tw.buf = append(w.buf, `\\\\`...)\n-\t\tdefault:\n-\t\t\tif isPrint := c >= 0x20 && c < 0x7f; isPrint {\n-\t\t\t\tw.buf = append(w.buf, c)\n-\t\t\t} else {\n-\t\t\t\tw.buf = append(w.buf, fmt.Sprintf(`\\%03o`, c)...)\n-\t\t\t}\n-\t\t}\n-\t}\n-\tw.WriteByte('\"')\n-}\n-\n-func (w *textWriter) writeUnknownFields(b []byte) {\n-\tif !w.compact {\n-\t\tfmt.Fprintf(w, \"/* %d unknown bytes */\\n\", len(b))\n-\t}\n-\n-\tfor len(b) > 0 {\n-\t\tnum, wtyp, n := protowire.ConsumeTag(b)\n-\t\tif n < 0 {\n-\t\t\treturn\n-\t\t}\n-\t\tb = b[n:]\n-\n-\t\tif wtyp == protowire.EndGroupType {\n-\t\t\tw.indent--\n-\t\t\tw.Write(endBraceNewline)\n-\t\t\tcontinue\n-\t\t}\n-\t\tfmt.Fprint(w, num)\n-\t\tif wtyp != protowire.StartGroupType {\n-\t\t\tw.WriteByte(':')\n-\t\t}\n-\t\tif !w.compact || wtyp == protowire.StartGroupType {\n-\t\t\tw.WriteByte(' ')\n-\t\t}\n-\t\tswitch wtyp {\n-\t\tcase protowire.VarintType:\n-\t\t\tv, n := protowire.ConsumeVarint(b)\n-\t\t\tif n < 0 {\n-\t\t\t\treturn\n-\t\t\t}\n-\t\t\tb = b[n:]\n-\t\t\tfmt.Fprint(w, v)\n-\t\tcase protowire.Fixed32Type:\n-\t\t\tv, n := protowire.ConsumeFixed32(b)\n-\t\t\tif n < 0 {\n-\t\t\t\treturn\n-\t\t\t}\n-\t\t\tb = b[n:]\n-\t\t\tfmt.Fprint(w, v)\n-\t\tcase protowire.Fixed64Type:\n-\t\t\tv, n := protowire.ConsumeFixed64(b)\n-\t\t\tif n < 0 {\n-\t\t\t\treturn\n-\t\t\t}\n-\t\t\tb = b[n:]\n-\t\t\tfmt.Fprint(w, v)\n-\t\tcase protowire.BytesType:\n-\t\t\tv, n := protowire.ConsumeBytes(b)\n-\t\t\tif n < 0 {\n-\t\t\t\treturn\n-\t\t\t}\n-\t\t\tb = b[n:]\n-\t\t\tfmt.Fprintf(w, \"%q\", v)\n-\t\tcase protowire.StartGroupType:\n-\t\t\tw.WriteByte('{')\n-\t\t\tw.indent++\n-\t\tdefault:\n-\t\t\tfmt.Fprintf(w, \"/* unknown wire type %d */\", wtyp)\n-\t\t}\n-\t\tw.WriteByte('\\n')\n-\t}\n-}\n-\n-// writeExtensions writes all the extensions in m.\n-func (w *textWriter) writeExtensions(m protoreflect.Message) error {\n-\tmd := m.Descriptor()\n-\tif md.ExtensionRanges().Len() == 0 {\n-\t\treturn nil\n-\t}\n-\n-\ttype ext struct {\n-\t\tdesc protoreflect.FieldDescriptor\n-\t\tval  protoreflect.Value\n-\t}\n-\tvar exts []ext\n-\tm.Range(func(fd protoreflect.FieldDescriptor, v protoreflect.Value) bool {\n-\t\tif fd.IsExtension() {\n-\t\t\texts = append(exts, ext{fd, v})\n-\t\t}\n-\t\treturn true\n-\t})\n-\tsort.Slice(exts, func(i, j int) bool {\n-\t\treturn exts[i].desc.Number() < exts[j].desc.Number()\n-\t})\n-\n-\tfor _, ext := range exts {\n-\t\t// For message set, use the name of the message as the extension name.\n-\t\tname := string(ext.desc.FullName())\n-\t\tif isMessageSet(ext.desc.ContainingMessage()) {\n-\t\t\tname = strings.TrimSuffix(name, \".message_set_extension\")\n-\t\t}\n-\n-\t\tif !ext.desc.IsList() {\n-\t\t\tif err := w.writeSingularExtension(name, ext.val, ext.desc); err != nil {\n-\t\t\t\treturn err\n-\t\t\t}\n-\t\t} else {\n-\t\t\tlv := ext.val.List()\n-\t\t\tfor i := 0; i < lv.Len(); i++ {\n-\t\t\t\tif err := w.writeSingularExtension(name, lv.Get(i), ext.desc); err != nil {\n-\t\t\t\t\treturn err\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n-\treturn nil\n-}\n-\n-func (w *textWriter) writeSingularExtension(name string, v protoreflect.Value, fd protoreflect.FieldDescriptor) error {\n-\tfmt.Fprintf(w, \"[%s]:\", name)\n-\tif !w.compact {\n-\t\tw.WriteByte(' ')\n-\t}\n-\tif err := w.writeSingularValue(v, fd); err != nil {\n-\t\treturn err\n-\t}\n-\tw.WriteByte('\\n')\n-\treturn nil\n-}\n-\n-func (w *textWriter) writeIndent() {\n-\tif !w.complete {\n-\t\treturn\n-\t}\n-\tfor i := 0; i < w.indent*2; i++ {\n-\t\tw.buf = append(w.buf, ' ')\n-\t}\n-\tw.complete = false\n-}"
    },
    {
      "sha": "d7c28da5a7582d112760893e587cbbb33b2469dc",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/wire.go",
      "status": "removed",
      "additions": 0,
      "deletions": 78,
      "changes": 78,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fwire.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fwire.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fwire.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,78 +0,0 @@\n-// Copyright 2019 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proto\n-\n-import (\n-\tprotoV2 \"google.golang.org/protobuf/proto\"\n-\t\"google.golang.org/protobuf/runtime/protoiface\"\n-)\n-\n-// Size returns the size in bytes of the wire-format encoding of m.\n-func Size(m Message) int {\n-\tif m == nil {\n-\t\treturn 0\n-\t}\n-\tmi := MessageV2(m)\n-\treturn protoV2.Size(mi)\n-}\n-\n-// Marshal returns the wire-format encoding of m.\n-func Marshal(m Message) ([]byte, error) {\n-\tb, err := marshalAppend(nil, m, false)\n-\tif b == nil {\n-\t\tb = zeroBytes\n-\t}\n-\treturn b, err\n-}\n-\n-var zeroBytes = make([]byte, 0, 0)\n-\n-func marshalAppend(buf []byte, m Message, deterministic bool) ([]byte, error) {\n-\tif m == nil {\n-\t\treturn nil, ErrNil\n-\t}\n-\tmi := MessageV2(m)\n-\tnbuf, err := protoV2.MarshalOptions{\n-\t\tDeterministic: deterministic,\n-\t\tAllowPartial:  true,\n-\t}.MarshalAppend(buf, mi)\n-\tif err != nil {\n-\t\treturn buf, err\n-\t}\n-\tif len(buf) == len(nbuf) {\n-\t\tif !mi.ProtoReflect().IsValid() {\n-\t\t\treturn buf, ErrNil\n-\t\t}\n-\t}\n-\treturn nbuf, checkRequiredNotSet(mi)\n-}\n-\n-// Unmarshal parses a wire-format message in b and places the decoded results in m.\n-//\n-// Unmarshal resets m before starting to unmarshal, so any existing data in m is always\n-// removed. Use UnmarshalMerge to preserve and append to existing data.\n-func Unmarshal(b []byte, m Message) error {\n-\tm.Reset()\n-\treturn UnmarshalMerge(b, m)\n-}\n-\n-// UnmarshalMerge parses a wire-format message in b and places the decoded results in m.\n-func UnmarshalMerge(b []byte, m Message) error {\n-\tmi := MessageV2(m)\n-\tout, err := protoV2.UnmarshalOptions{\n-\t\tAllowPartial: true,\n-\t\tMerge:        true,\n-\t}.UnmarshalState(protoiface.UnmarshalInput{\n-\t\tBuf:     b,\n-\t\tMessage: mi.ProtoReflect(),\n-\t})\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\tif out.Flags&protoiface.UnmarshalInitialized > 0 {\n-\t\treturn nil\n-\t}\n-\treturn checkRequiredNotSet(mi)\n-}"
    },
    {
      "sha": "398e348599bd33179a11f5a5d7694095353bbe6e",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/wrappers.go",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fwrappers.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fwrappers.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgolang%2Fprotobuf%2Fproto%2Fwrappers.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,34 +0,0 @@\n-// Copyright 2019 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proto\n-\n-// Bool stores v in a new bool value and returns a pointer to it.\n-func Bool(v bool) *bool { return &v }\n-\n-// Int stores v in a new int32 value and returns a pointer to it.\n-//\n-// Deprecated: Use Int32 instead.\n-func Int(v int) *int32 { return Int32(int32(v)) }\n-\n-// Int32 stores v in a new int32 value and returns a pointer to it.\n-func Int32(v int32) *int32 { return &v }\n-\n-// Int64 stores v in a new int64 value and returns a pointer to it.\n-func Int64(v int64) *int64 { return &v }\n-\n-// Uint32 stores v in a new uint32 value and returns a pointer to it.\n-func Uint32(v uint32) *uint32 { return &v }\n-\n-// Uint64 stores v in a new uint64 value and returns a pointer to it.\n-func Uint64(v uint64) *uint64 { return &v }\n-\n-// Float32 stores v in a new float32 value and returns a pointer to it.\n-func Float32(v float32) *float32 { return &v }\n-\n-// Float64 stores v in a new float64 value and returns a pointer to it.\n-func Float64(v float64) *float64 { return &v }\n-\n-// String stores v in a new string value and returns a pointer to it.\n-func String(v string) *string { return &v }"
    },
    {
      "sha": "929c226c065ca49d6fd7a021b7c1b94781cbaa1a",
      "filename": "backend/vendor/github.com/gorilla/feeds/feed.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Ffeed.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Ffeed.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Ffeed.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -32,6 +32,7 @@ type Item struct {\n \tAuthor      *Author\n \tDescription string // used as description in rss, summary in atom\n \tId          string // used as guid in rss, id in atom\n+\tIsPermaLink string // an optional parameter for guid in rss\n \tUpdated     time.Time\n \tCreated     time.Time\n \tEnclosure   *Enclosure"
    },
    {
      "sha": "9326cef8b5ceab24b412f2f6ae01ed0b72a6c6cd",
      "filename": "backend/vendor/github.com/gorilla/feeds/rss.go",
      "status": "modified",
      "additions": 13,
      "deletions": 4,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Frss.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Frss.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Ffeeds%2Frss.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -74,9 +74,9 @@ type RssItem struct {\n \tCategory    string `xml:\"category,omitempty\"`\n \tComments    string `xml:\"comments,omitempty\"`\n \tEnclosure   *RssEnclosure\n-\tGuid        string `xml:\"guid,omitempty\"`    // Id used\n-\tPubDate     string `xml:\"pubDate,omitempty\"` // created or updated\n-\tSource      string `xml:\"source,omitempty\"`\n+\tGuid        *RssGuid // Id used\n+\tPubDate     string   `xml:\"pubDate,omitempty\"` // created or updated\n+\tSource      string   `xml:\"source,omitempty\"`\n }\n \n type RssEnclosure struct {\n@@ -87,6 +87,13 @@ type RssEnclosure struct {\n \tType    string   `xml:\"type,attr\"`\n }\n \n+type RssGuid struct {\n+\t//RSS 2.0 <guid isPermaLink=\"true\">http://inessential.com/2002/09/01.php#a2</guid>\n+\tXMLName     xml.Name `xml:\"guid\"`\n+\tId          string   `xml:\",chardata\"`\n+\tIsPermaLink string   `xml:\"isPermaLink,attr,omitempty\"` // \"true\", \"false\", or an empty string\n+}\n+\n type Rss struct {\n \t*Feed\n }\n@@ -96,9 +103,11 @@ func newRssItem(i *Item) *RssItem {\n \titem := &RssItem{\n \t\tTitle:       i.Title,\n \t\tDescription: i.Description,\n-\t\tGuid:        i.Id,\n \t\tPubDate:     anyTimeFormat(time.RFC1123Z, i.Created, i.Updated),\n \t}\n+\tif i.Id != \"\" {\n+\t\titem.Guid = &RssGuid{Id: i.Id, IsPermaLink: i.IsPermaLink}\n+\t}\n \tif i.Link != nil {\n \t\titem.Link = i.Link.Href\n \t}"
    },
    {
      "sha": "2940ec92ac2d4ffd06946bb5156be411fc0f8615",
      "filename": "backend/vendor/github.com/gorilla/websocket/.editorconfig",
      "status": "removed",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2F.editorconfig",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2F.editorconfig",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2F.editorconfig?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,20 +0,0 @@\n-; https://editorconfig.org/\n-\n-root = true\n-\n-[*]\n-insert_final_newline = true\n-charset = utf-8\n-trim_trailing_whitespace = true\n-indent_style = space\n-indent_size = 2\n-\n-[{Makefile,go.mod,go.sum,*.go,.gitmodules}]\n-indent_style = tab\n-indent_size = 4\n-\n-[*.md]\n-indent_size = 4\n-trim_trailing_whitespace = false\n-\n-eclint_indent_style = unset"
    },
    {
      "sha": "cd3fcd1ef72a7f780f5b916369a9fff458876ae9",
      "filename": "backend/vendor/github.com/gorilla/websocket/.gitignore",
      "status": "modified",
      "additions": 25,
      "deletions": 1,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2F.gitignore",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2F.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2F.gitignore?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1 +1,25 @@\n-coverage.coverprofile\n+# Compiled Object files, Static and Dynamic libs (Shared Objects)\n+*.o\n+*.a\n+*.so\n+\n+# Folders\n+_obj\n+_test\n+\n+# Architecture specific extensions/prefixes\n+*.[568vq]\n+[568vq].out\n+\n+*.cgo1.go\n+*.cgo2.c\n+_cgo_defun.c\n+_cgo_gotypes.go\n+_cgo_export.*\n+\n+_testmain.go\n+\n+*.exe\n+\n+.idea/\n+*.iml"
    },
    {
      "sha": "34882139e1f79b3d00d3ef2bd874d49f27532987",
      "filename": "backend/vendor/github.com/gorilla/websocket/.golangci.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2F.golangci.yml?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,3 +0,0 @@\n-run:\n-  skip-dirs:\n-    - examples/*.go"
    },
    {
      "sha": "1931f400682c373b02db547c1fdc4315b804b2eb",
      "filename": "backend/vendor/github.com/gorilla/websocket/AUTHORS",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FAUTHORS",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FAUTHORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FAUTHORS?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,9 @@\n+# This is the official list of Gorilla WebSocket authors for copyright\n+# purposes.\n+#\n+# Please keep the list sorted.\n+\n+Gary Burd <gary@beagledreams.com>\n+Google LLC (https://opensource.google.com/)\n+Joachim Bauch <mail@joachim-bauch.de>\n+"
    },
    {
      "sha": "9171c972252257cf416925ddff4be6cb73973a82",
      "filename": "backend/vendor/github.com/gorilla/websocket/LICENSE",
      "status": "modified",
      "additions": 17,
      "deletions": 22,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FLICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FLICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FLICENSE?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,27 +1,22 @@\n-Copyright (c) 2023 The Gorilla Authors. All rights reserved.\n+Copyright (c) 2013 The Gorilla WebSocket Authors. All rights reserved.\n \n Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are\n-met:\n+modification, are permitted provided that the following conditions are met:\n \n-\t * Redistributions of source code must retain the above copyright\n-notice, this list of conditions and the following disclaimer.\n-\t * Redistributions in binary form must reproduce the above\n-copyright notice, this list of conditions and the following disclaimer\n-in the documentation and/or other materials provided with the\n-distribution.\n-\t * Neither the name of Google Inc. nor the names of its\n-contributors may be used to endorse or promote products derived from\n-this software without specific prior written permission.\n+  Redistributions of source code must retain the above copyright notice, this\n+  list of conditions and the following disclaimer.\n \n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n-\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n-A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n-OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n-SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n-LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n-THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+  Redistributions in binary form must reproduce the above copyright notice,\n+  this list of conditions and the following disclaimer in the documentation\n+  and/or other materials provided with the distribution.\n+\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n+FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n+CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
    },
    {
      "sha": "603a63f50a320fefe5a3254eba8e6eb98f62e512",
      "filename": "backend/vendor/github.com/gorilla/websocket/Makefile",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FMakefile",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FMakefile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FMakefile?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,34 +0,0 @@\n-GO_LINT=$(shell which golangci-lint 2> /dev/null || echo '')\n-GO_LINT_URI=github.com/golangci/golangci-lint/cmd/golangci-lint@latest\n-\n-GO_SEC=$(shell which gosec 2> /dev/null || echo '')\n-GO_SEC_URI=github.com/securego/gosec/v2/cmd/gosec@latest\n-\n-GO_VULNCHECK=$(shell which govulncheck 2> /dev/null || echo '')\n-GO_VULNCHECK_URI=golang.org/x/vuln/cmd/govulncheck@latest\n-\n-.PHONY: golangci-lint\n-golangci-lint:\n-\t$(if $(GO_LINT), ,go install $(GO_LINT_URI))\n-\t@echo \"##### Running golangci-lint\"\n-\tgolangci-lint run -v\n-\n-.PHONY: gosec\n-gosec:\n-\t$(if $(GO_SEC), ,go install $(GO_SEC_URI))\n-\t@echo \"##### Running gosec\"\n-\tgosec -exclude-dir examples ./...\n-\n-.PHONY: govulncheck\n-govulncheck:\n-\t$(if $(GO_VULNCHECK), ,go install $(GO_VULNCHECK_URI))\n-\t@echo \"##### Running govulncheck\"\n-\tgovulncheck ./...\n-\n-.PHONY: verify\n-verify: golangci-lint gosec govulncheck\n-\n-.PHONY: test\n-test:\n-\t@echo \"##### Running tests\"\n-\tgo test -race -cover -coverprofile=coverage.coverprofile -covermode=atomic -v ./..."
    },
    {
      "sha": "d33ed7fdd8f89da3821a20c30d416803ca2d4adf",
      "filename": "backend/vendor/github.com/gorilla/websocket/README.md",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2FREADME.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,13 +1,10 @@\n-# gorilla/websocket\n+# Gorilla WebSocket\n \n-![testing](https://github.com/gorilla/websocket/actions/workflows/test.yml/badge.svg)\n-[![codecov](https://codecov.io/github/gorilla/websocket/branch/main/graph/badge.svg)](https://codecov.io/github/gorilla/websocket)\n-[![godoc](https://godoc.org/github.com/gorilla/websocket?status.svg)](https://godoc.org/github.com/gorilla/websocket)\n-[![sourcegraph](https://sourcegraph.com/github.com/gorilla/websocket/-/badge.svg)](https://sourcegraph.com/github.com/gorilla/websocket?badge)\n+[![GoDoc](https://godoc.org/github.com/gorilla/websocket?status.svg)](https://godoc.org/github.com/gorilla/websocket)\n+[![CircleCI](https://circleci.com/gh/gorilla/websocket.svg?style=svg)](https://circleci.com/gh/gorilla/websocket)\n \n-Gorilla WebSocket is a [Go](http://golang.org/) implementation of the [WebSocket](http://www.rfc-editor.org/rfc/rfc6455.txt) protocol.\n-\n-![Gorilla Logo](https://github.com/gorilla/.github/assets/53367916/d92caabf-98e0-473e-bfbf-ab554ba435e5)\n+Gorilla WebSocket is a [Go](http://golang.org/) implementation of the\n+[WebSocket](http://www.rfc-editor.org/rfc/rfc6455.txt) protocol.\n \n \n ### Documentation\n@@ -17,7 +14,6 @@ Gorilla WebSocket is a [Go](http://golang.org/) implementation of the [WebSocket\n * [Command example](https://github.com/gorilla/websocket/tree/master/examples/command)\n * [Client and server example](https://github.com/gorilla/websocket/tree/master/examples/echo)\n * [File watch example](https://github.com/gorilla/websocket/tree/master/examples/filewatch)\n-* [Write buffer pool example](https://github.com/gorilla/websocket/tree/master/examples/bufferpool)\n \n ### Status\n \n@@ -34,3 +30,4 @@ package API is stable.\n The Gorilla WebSocket package passes the server tests in the [Autobahn Test\n Suite](https://github.com/crossbario/autobahn-testsuite) using the application in the [examples/autobahn\n subdirectory](https://github.com/gorilla/websocket/tree/master/examples/autobahn).\n+"
    },
    {
      "sha": "04fdafee18ea87bd40e981393f3405157180949f",
      "filename": "backend/vendor/github.com/gorilla/websocket/client.go",
      "status": "modified",
      "additions": 8,
      "deletions": 18,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fclient.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fclient.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fclient.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -11,16 +11,13 @@ import (\n \t\"errors\"\n \t\"fmt\"\n \t\"io\"\n-\t\"log\"\n-\n+\t\"io/ioutil\"\n \t\"net\"\n \t\"net/http\"\n \t\"net/http/httptrace\"\n \t\"net/url\"\n \t\"strings\"\n \t\"time\"\n-\n-\t\"golang.org/x/net/proxy\"\n )\n \n // ErrBadHandshake is returned when the server response to opening handshake is\n@@ -228,7 +225,6 @@ func (d *Dialer) DialContext(ctx context.Context, urlStr string, requestHeader h\n \t\t\tk == \"Connection\" ||\n \t\t\tk == \"Sec-Websocket-Key\" ||\n \t\t\tk == \"Sec-Websocket-Version\" ||\n-\t\t\t//#nosec G101 (CWE-798): Potential HTTP request smuggling via parameter pollution\n \t\t\tk == \"Sec-Websocket-Extensions\" ||\n \t\t\t(k == \"Sec-Websocket-Protocol\" && len(d.Subprotocols) > 0):\n \t\t\treturn nil, nil, errors.New(\"websocket: duplicate header not allowed: \" + k)\n@@ -294,9 +290,7 @@ func (d *Dialer) DialContext(ctx context.Context, urlStr string, requestHeader h\n \t\t\t}\n \t\t\terr = c.SetDeadline(deadline)\n \t\t\tif err != nil {\n-\t\t\t\tif err := c.Close(); err != nil {\n-\t\t\t\t\tlog.Printf(\"websocket: failed to close network connection: %v\", err)\n-\t\t\t\t}\n+\t\t\t\tc.Close()\n \t\t\t\treturn nil, err\n \t\t\t}\n \t\t\treturn c, nil\n@@ -310,7 +304,7 @@ func (d *Dialer) DialContext(ctx context.Context, urlStr string, requestHeader h\n \t\t\treturn nil, nil, err\n \t\t}\n \t\tif proxyURL != nil {\n-\t\t\tdialer, err := proxy.FromURL(proxyURL, netDialerFunc(netDial))\n+\t\t\tdialer, err := proxy_FromURL(proxyURL, netDialerFunc(netDial))\n \t\t\tif err != nil {\n \t\t\t\treturn nil, nil, err\n \t\t\t}\n@@ -336,9 +330,7 @@ func (d *Dialer) DialContext(ctx context.Context, urlStr string, requestHeader h\n \n \tdefer func() {\n \t\tif netConn != nil {\n-\t\t\tif err := netConn.Close(); err != nil {\n-\t\t\t\tlog.Printf(\"websocket: failed to close network connection: %v\", err)\n-\t\t\t}\n+\t\t\tnetConn.Close()\n \t\t}\n \t}()\n \n@@ -408,7 +400,7 @@ func (d *Dialer) DialContext(ctx context.Context, urlStr string, requestHeader h\n \t\t// debugging.\n \t\tbuf := make([]byte, 1024)\n \t\tn, _ := io.ReadFull(resp.Body, buf)\n-\t\tresp.Body = io.NopCloser(bytes.NewReader(buf[:n]))\n+\t\tresp.Body = ioutil.NopCloser(bytes.NewReader(buf[:n]))\n \t\treturn nil, resp, ErrBadHandshake\n \t}\n \n@@ -426,19 +418,17 @@ func (d *Dialer) DialContext(ctx context.Context, urlStr string, requestHeader h\n \t\tbreak\n \t}\n \n-\tresp.Body = io.NopCloser(bytes.NewReader([]byte{}))\n+\tresp.Body = ioutil.NopCloser(bytes.NewReader([]byte{}))\n \tconn.subprotocol = resp.Header.Get(\"Sec-Websocket-Protocol\")\n \n-\tif err := netConn.SetDeadline(time.Time{}); err != nil {\n-\t\treturn nil, nil, err\n-\t}\n+\tnetConn.SetDeadline(time.Time{})\n \tnetConn = nil // to avoid close in defer.\n \treturn conn, resp, nil\n }\n \n func cloneTLSConfig(cfg *tls.Config) *tls.Config {\n \tif cfg == nil {\n-\t\treturn &tls.Config{MinVersion: tls.VersionTLS12}\n+\t\treturn &tls.Config{}\n \t}\n \treturn cfg.Clone()\n }"
    },
    {
      "sha": "813ffb1e84336da415256244366e09bcd65b6765",
      "filename": "backend/vendor/github.com/gorilla/websocket/compression.go",
      "status": "modified",
      "additions": 2,
      "deletions": 7,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fcompression.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fcompression.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fcompression.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -8,7 +8,6 @@ import (\n \t\"compress/flate\"\n \t\"errors\"\n \t\"io\"\n-\t\"log\"\n \t\"strings\"\n \t\"sync\"\n )\n@@ -34,9 +33,7 @@ func decompressNoContextTakeover(r io.Reader) io.ReadCloser {\n \t\t\"\\x01\\x00\\x00\\xff\\xff\"\n \n \tfr, _ := flateReaderPool.Get().(io.ReadCloser)\n-\tif err := fr.(flate.Resetter).Reset(io.MultiReader(r, strings.NewReader(tail)), nil); err != nil {\n-\t\tpanic(err)\n-\t}\n+\tfr.(flate.Resetter).Reset(io.MultiReader(r, strings.NewReader(tail)), nil)\n \treturn &flateReadWrapper{fr}\n }\n \n@@ -135,9 +132,7 @@ func (r *flateReadWrapper) Read(p []byte) (int, error) {\n \t\t// Preemptively place the reader back in the pool. This helps with\n \t\t// scenarios where the application does not call NextReader() soon after\n \t\t// this final read.\n-\t\tif err := r.Close(); err != nil {\n-\t\t\tlog.Printf(\"websocket: flateReadWrapper.Close() returned error: %v\", err)\n-\t\t}\n+\t\tr.Close()\n \t}\n \treturn n, err\n }"
    },
    {
      "sha": "5161ef81f6292b36e6819a719c42fef48219f12b",
      "filename": "backend/vendor/github.com/gorilla/websocket/conn.go",
      "status": "modified",
      "additions": 23,
      "deletions": 52,
      "changes": 75,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fconn.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fconn.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fconn.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -6,11 +6,11 @@ package websocket\n \n import (\n \t\"bufio\"\n-\t\"crypto/rand\"\n \t\"encoding/binary\"\n \t\"errors\"\n \t\"io\"\n-\t\"log\"\n+\t\"io/ioutil\"\n+\t\"math/rand\"\n \t\"net\"\n \t\"strconv\"\n \t\"strings\"\n@@ -181,20 +181,13 @@ var (\n \terrInvalidControlFrame = errors.New(\"websocket: invalid control frame\")\n )\n \n-// maskRand is an io.Reader for generating mask bytes. The reader is initialized\n-// to crypto/rand Reader. Tests swap the reader to a math/rand reader for\n-// reproducible results.\n-var maskRand = rand.Reader\n-\n-// newMaskKey returns a new 32 bit value for masking client frames.\n func newMaskKey() [4]byte {\n-\tvar k [4]byte\n-\t_, _ = io.ReadFull(maskRand, k[:])\n-\treturn k\n+\tn := rand.Uint32()\n+\treturn [4]byte{byte(n), byte(n >> 8), byte(n >> 16), byte(n >> 24)}\n }\n \n func hideTempErr(err error) error {\n-\tif e, ok := err.(net.Error); ok {\n+\tif e, ok := err.(net.Error); ok && e.Temporary() {\n \t\terr = &netError{msg: e.Error(), timeout: e.Timeout()}\n \t}\n \treturn err\n@@ -379,9 +372,7 @@ func (c *Conn) read(n int) ([]byte, error) {\n \tif err == io.EOF {\n \t\terr = errUnexpectedEOF\n \t}\n-\tif _, err := c.br.Discard(len(p)); err != nil {\n-\t\treturn p, err\n-\t}\n+\tc.br.Discard(len(p))\n \treturn p, err\n }\n \n@@ -396,9 +387,7 @@ func (c *Conn) write(frameType int, deadline time.Time, buf0, buf1 []byte) error\n \t\treturn err\n \t}\n \n-\tif err := c.conn.SetWriteDeadline(deadline); err != nil {\n-\t\treturn c.writeFatal(err)\n-\t}\n+\tc.conn.SetWriteDeadline(deadline)\n \tif len(buf1) == 0 {\n \t\t_, err = c.conn.Write(buf0)\n \t} else {\n@@ -408,7 +397,7 @@ func (c *Conn) write(frameType int, deadline time.Time, buf0, buf1 []byte) error\n \t\treturn c.writeFatal(err)\n \t}\n \tif frameType == CloseMessage {\n-\t\t_ = c.writeFatal(ErrCloseSent)\n+\t\tc.writeFatal(ErrCloseSent)\n \t}\n \treturn nil\n }\n@@ -449,7 +438,7 @@ func (c *Conn) WriteControl(messageType int, data []byte, deadline time.Time) er\n \n \td := 1000 * time.Hour\n \tif !deadline.IsZero() {\n-\t\td = time.Until(deadline)\n+\t\td = deadline.Sub(time.Now())\n \t\tif d < 0 {\n \t\t\treturn errWriteTimeout\n \t\t}\n@@ -471,15 +460,13 @@ func (c *Conn) WriteControl(messageType int, data []byte, deadline time.Time) er\n \t\treturn err\n \t}\n \n-\tif err := c.conn.SetWriteDeadline(deadline); err != nil {\n-\t\treturn c.writeFatal(err)\n-\t}\n+\tc.conn.SetWriteDeadline(deadline)\n \t_, err = c.conn.Write(buf)\n \tif err != nil {\n \t\treturn c.writeFatal(err)\n \t}\n \tif messageType == CloseMessage {\n-\t\t_ = c.writeFatal(ErrCloseSent)\n+\t\tc.writeFatal(ErrCloseSent)\n \t}\n \treturn err\n }\n@@ -490,9 +477,7 @@ func (c *Conn) beginMessage(mw *messageWriter, messageType int) error {\n \t// probably better to return an error in this situation, but we cannot\n \t// change this without breaking existing applications.\n \tif c.writer != nil {\n-\t\tif err := c.writer.Close(); err != nil {\n-\t\t\tlog.Printf(\"websocket: discarding writer close error: %v\", err)\n-\t\t}\n+\t\tc.writer.Close()\n \t\tc.writer = nil\n \t}\n \n@@ -645,7 +630,7 @@ func (w *messageWriter) flushFrame(final bool, extra []byte) error {\n \t}\n \n \tif final {\n-\t\t_ = w.endMessage(errWriteClosed)\n+\t\tw.endMessage(errWriteClosed)\n \t\treturn nil\n \t}\n \n@@ -810,7 +795,7 @@ func (c *Conn) advanceFrame() (int, error) {\n \t// 1. Skip remainder of previous frame.\n \n \tif c.readRemaining > 0 {\n-\t\tif _, err := io.CopyN(io.Discard, c.br, c.readRemaining); err != nil {\n+\t\tif _, err := io.CopyN(ioutil.Discard, c.br, c.readRemaining); err != nil {\n \t\t\treturn noFrame, err\n \t\t}\n \t}\n@@ -832,9 +817,7 @@ func (c *Conn) advanceFrame() (int, error) {\n \trsv2 := p[0]&rsv2Bit != 0\n \trsv3 := p[0]&rsv3Bit != 0\n \tmask := p[1]&maskBit != 0\n-\tif err := c.setReadRemaining(int64(p[1] & 0x7f)); err != nil {\n-\t\treturn noFrame, err\n-\t}\n+\tc.setReadRemaining(int64(p[1] & 0x7f))\n \n \tc.readDecompress = false\n \tif rsv1 {\n@@ -939,9 +922,7 @@ func (c *Conn) advanceFrame() (int, error) {\n \t\t}\n \n \t\tif c.readLimit > 0 && c.readLength > c.readLimit {\n-\t\t\tif err := c.WriteControl(CloseMessage, FormatCloseMessage(CloseMessageTooBig, \"\"), time.Now().Add(writeWait)); err != nil {\n-\t\t\t\treturn noFrame, err\n-\t\t\t}\n+\t\t\tc.WriteControl(CloseMessage, FormatCloseMessage(CloseMessageTooBig, \"\"), time.Now().Add(writeWait))\n \t\t\treturn noFrame, ErrReadLimit\n \t\t}\n \n@@ -953,9 +934,7 @@ func (c *Conn) advanceFrame() (int, error) {\n \tvar payload []byte\n \tif c.readRemaining > 0 {\n \t\tpayload, err = c.read(int(c.readRemaining))\n-\t\tif err := c.setReadRemaining(0); err != nil {\n-\t\t\treturn noFrame, err\n-\t\t}\n+\t\tc.setReadRemaining(0)\n \t\tif err != nil {\n \t\t\treturn noFrame, err\n \t\t}\n@@ -1002,9 +981,7 @@ func (c *Conn) handleProtocolError(message string) error {\n \tif len(data) > maxControlFramePayloadSize {\n \t\tdata = data[:maxControlFramePayloadSize]\n \t}\n-\tif err := c.WriteControl(CloseMessage, data, time.Now().Add(writeWait)); err != nil {\n-\t\treturn err\n-\t}\n+\tc.WriteControl(CloseMessage, data, time.Now().Add(writeWait))\n \treturn errors.New(\"websocket: \" + message)\n }\n \n@@ -1021,9 +998,7 @@ func (c *Conn) handleProtocolError(message string) error {\n func (c *Conn) NextReader() (messageType int, r io.Reader, err error) {\n \t// Close previous reader, only relevant for decompression.\n \tif c.reader != nil {\n-\t\tif err := c.reader.Close(); err != nil {\n-\t\t\tlog.Printf(\"websocket: discarding reader close error: %v\", err)\n-\t\t}\n+\t\tc.reader.Close()\n \t\tc.reader = nil\n \t}\n \n@@ -1079,9 +1054,7 @@ func (r *messageReader) Read(b []byte) (int, error) {\n \t\t\t}\n \t\t\trem := c.readRemaining\n \t\t\trem -= int64(n)\n-\t\t\tif err := c.setReadRemaining(rem); err != nil {\n-\t\t\t\treturn 0, err\n-\t\t\t}\n+\t\t\tc.setReadRemaining(rem)\n \t\t\tif c.readRemaining > 0 && c.readErr == io.EOF {\n \t\t\t\tc.readErr = errUnexpectedEOF\n \t\t\t}\n@@ -1121,7 +1094,7 @@ func (c *Conn) ReadMessage() (messageType int, p []byte, err error) {\n \tif err != nil {\n \t\treturn messageType, nil, err\n \t}\n-\tp, err = io.ReadAll(r)\n+\tp, err = ioutil.ReadAll(r)\n \treturn messageType, p, err\n }\n \n@@ -1163,9 +1136,7 @@ func (c *Conn) SetCloseHandler(h func(code int, text string) error) {\n \tif h == nil {\n \t\th = func(code int, text string) error {\n \t\t\tmessage := FormatCloseMessage(code, \"\")\n-\t\t\tif err := c.WriteControl(CloseMessage, message, time.Now().Add(writeWait)); err != nil {\n-\t\t\t\treturn err\n-\t\t\t}\n+\t\t\tc.WriteControl(CloseMessage, message, time.Now().Add(writeWait))\n \t\t\treturn nil\n \t\t}\n \t}\n@@ -1190,7 +1161,7 @@ func (c *Conn) SetPingHandler(h func(appData string) error) {\n \t\t\terr := c.WriteControl(PongMessage, []byte(message), time.Now().Add(writeWait))\n \t\t\tif err == ErrCloseSent {\n \t\t\t\treturn nil\n-\t\t\t} else if _, ok := err.(net.Error); ok {\n+\t\t\t} else if e, ok := err.(net.Error); ok && e.Temporary() {\n \t\t\t\treturn nil\n \t\t\t}\n \t\t\treturn err"
    },
    {
      "sha": "d0742bf2a5517669b75ca7d33fb20e7c8b77a1cc",
      "filename": "backend/vendor/github.com/gorilla/websocket/mask.go",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fmask.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fmask.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fmask.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -9,7 +9,6 @@ package websocket\n \n import \"unsafe\"\n \n-// #nosec G103 -- (CWE-242) Has been audited\n const wordSize = int(unsafe.Sizeof(uintptr(0)))\n \n func maskBytes(key [4]byte, pos int, b []byte) int {\n@@ -23,7 +22,6 @@ func maskBytes(key [4]byte, pos int, b []byte) int {\n \t}\n \n \t// Mask one byte at a time to word boundary.\n-\t//#nosec G103 -- (CWE-242) Has been audited\n \tif n := int(uintptr(unsafe.Pointer(&b[0]))) % wordSize; n != 0 {\n \t\tn = wordSize - n\n \t\tfor i := range b[:n] {\n@@ -38,13 +36,11 @@ func maskBytes(key [4]byte, pos int, b []byte) int {\n \tfor i := range k {\n \t\tk[i] = key[(pos+i)&3]\n \t}\n-\t//#nosec G103 -- (CWE-242) Has been audited\n \tkw := *(*uintptr)(unsafe.Pointer(&k))\n \n \t// Mask one word at a time.\n \tn := (len(b) / wordSize) * wordSize\n \tfor i := 0; i < n; i += wordSize {\n-\t\t//#nosec G103 -- (CWE-242) Has been audited\n \t\t*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&b[0])) + uintptr(i))) ^= kw\n \t}\n "
    },
    {
      "sha": "e0f466b72fbba37ae29eca5334dbf623542ecfc9",
      "filename": "backend/vendor/github.com/gorilla/websocket/proxy.go",
      "status": "modified",
      "additions": 4,
      "deletions": 13,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fproxy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fproxy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fproxy.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -8,13 +8,10 @@ import (\n \t\"bufio\"\n \t\"encoding/base64\"\n \t\"errors\"\n-\t\"log\"\n \t\"net\"\n \t\"net/http\"\n \t\"net/url\"\n \t\"strings\"\n-\n-\t\"golang.org/x/net/proxy\"\n )\n \n type netDialerFunc func(network, addr string) (net.Conn, error)\n@@ -24,7 +21,7 @@ func (fn netDialerFunc) Dial(network, addr string) (net.Conn, error) {\n }\n \n func init() {\n-\tproxy.RegisterDialerType(\"http\", func(proxyURL *url.URL, forwardDialer proxy.Dialer) (proxy.Dialer, error) {\n+\tproxy_RegisterDialerType(\"http\", func(proxyURL *url.URL, forwardDialer proxy_Dialer) (proxy_Dialer, error) {\n \t\treturn &httpProxyDialer{proxyURL: proxyURL, forwardDial: forwardDialer.Dial}, nil\n \t})\n }\n@@ -58,9 +55,7 @@ func (hpd *httpProxyDialer) Dial(network string, addr string) (net.Conn, error)\n \t}\n \n \tif err := connectReq.Write(conn); err != nil {\n-\t\tif err := conn.Close(); err != nil {\n-\t\t\tlog.Printf(\"httpProxyDialer: failed to close connection: %v\", err)\n-\t\t}\n+\t\tconn.Close()\n \t\treturn nil, err\n \t}\n \n@@ -69,16 +64,12 @@ func (hpd *httpProxyDialer) Dial(network string, addr string) (net.Conn, error)\n \tbr := bufio.NewReader(conn)\n \tresp, err := http.ReadResponse(br, connectReq)\n \tif err != nil {\n-\t\tif err := conn.Close(); err != nil {\n-\t\t\tlog.Printf(\"httpProxyDialer: failed to close connection: %v\", err)\n-\t\t}\n+\t\tconn.Close()\n \t\treturn nil, err\n \t}\n \n \tif resp.StatusCode != 200 {\n-\t\tif err := conn.Close(); err != nil {\n-\t\t\tlog.Printf(\"httpProxyDialer: failed to close connection: %v\", err)\n-\t\t}\n+\t\tconn.Close()\n \t\tf := strings.SplitN(resp.Status, \" \", 2)\n \t\treturn nil, errors.New(f[1])\n \t}"
    },
    {
      "sha": "bb335974321331f4b5e430e286765f717769f5b1",
      "filename": "backend/vendor/github.com/gorilla/websocket/server.go",
      "status": "modified",
      "additions": 7,
      "deletions": 31,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fserver.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fserver.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fserver.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -8,7 +8,6 @@ import (\n \t\"bufio\"\n \t\"errors\"\n \t\"io\"\n-\t\"log\"\n \t\"net/http\"\n \t\"net/url\"\n \t\"strings\"\n@@ -184,9 +183,7 @@ func (u *Upgrader) Upgrade(w http.ResponseWriter, r *http.Request, responseHeade\n \t}\n \n \tif brw.Reader.Buffered() > 0 {\n-\t\tif err := netConn.Close(); err != nil {\n-\t\t\tlog.Printf(\"websocket: failed to close network connection: %v\", err)\n-\t\t}\n+\t\tnetConn.Close()\n \t\treturn nil, errors.New(\"websocket: client sent data before handshake is complete\")\n \t}\n \n@@ -251,34 +248,17 @@ func (u *Upgrader) Upgrade(w http.ResponseWriter, r *http.Request, responseHeade\n \tp = append(p, \"\\r\\n\"...)\n \n \t// Clear deadlines set by HTTP server.\n-\tif err := netConn.SetDeadline(time.Time{}); err != nil {\n-\t\tif err := netConn.Close(); err != nil {\n-\t\t\tlog.Printf(\"websocket: failed to close network connection: %v\", err)\n-\t\t}\n-\t\treturn nil, err\n-\t}\n+\tnetConn.SetDeadline(time.Time{})\n \n \tif u.HandshakeTimeout > 0 {\n-\t\tif err := netConn.SetWriteDeadline(time.Now().Add(u.HandshakeTimeout)); err != nil {\n-\t\t\tif err := netConn.Close(); err != nil {\n-\t\t\t\tlog.Printf(\"websocket: failed to close network connection: %v\", err)\n-\t\t\t}\n-\t\t\treturn nil, err\n-\t\t}\n+\t\tnetConn.SetWriteDeadline(time.Now().Add(u.HandshakeTimeout))\n \t}\n \tif _, err = netConn.Write(p); err != nil {\n-\t\tif err := netConn.Close(); err != nil {\n-\t\t\tlog.Printf(\"websocket: failed to close network connection: %v\", err)\n-\t\t}\n+\t\tnetConn.Close()\n \t\treturn nil, err\n \t}\n \tif u.HandshakeTimeout > 0 {\n-\t\tif err := netConn.SetWriteDeadline(time.Time{}); err != nil {\n-\t\t\tif err := netConn.Close(); err != nil {\n-\t\t\t\tlog.Printf(\"websocket: failed to close network connection: %v\", err)\n-\t\t\t}\n-\t\t\treturn nil, err\n-\t\t}\n+\t\tnetConn.SetWriteDeadline(time.Time{})\n \t}\n \n \treturn c, nil\n@@ -376,12 +356,8 @@ func bufioWriterBuffer(originalWriter io.Writer, bw *bufio.Writer) []byte {\n \t// bufio.Writer's underlying writer.\n \tvar wh writeHook\n \tbw.Reset(&wh)\n-\tif err := bw.WriteByte(0); err != nil {\n-\t\tpanic(err)\n-\t}\n-\tif err := bw.Flush(); err != nil {\n-\t\tlog.Printf(\"websocket: bufioWriterBuffer: Flush: %v\", err)\n-\t}\n+\tbw.WriteByte(0)\n+\tbw.Flush()\n \n \tbw.Reset(originalWriter)\n "
    },
    {
      "sha": "a62b68ccb11e34561b04c7919d7f9badd47c0353",
      "filename": "backend/vendor/github.com/gorilla/websocket/tls_handshake.go",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftls_handshake.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftls_handshake.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftls_handshake.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,3 +1,6 @@\n+//go:build go1.17\n+// +build go1.17\n+\n package websocket\n \n import ("
    },
    {
      "sha": "e1b2b44f6e6c8cb3a188dfa8f9db6fe3253b262f",
      "filename": "backend/vendor/github.com/gorilla/websocket/tls_handshake_116.go",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftls_handshake_116.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftls_handshake_116.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Ftls_handshake_116.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,21 @@\n+//go:build !go1.17\n+// +build !go1.17\n+\n+package websocket\n+\n+import (\n+\t\"context\"\n+\t\"crypto/tls\"\n+)\n+\n+func doHandshake(ctx context.Context, tlsConn *tls.Conn, cfg *tls.Config) error {\n+\tif err := tlsConn.Handshake(); err != nil {\n+\t\treturn err\n+\t}\n+\tif !cfg.InsecureSkipVerify {\n+\t\tif err := tlsConn.VerifyHostname(cfg.ServerName); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn nil\n+}"
    },
    {
      "sha": "31a5dee6462bd456a4bc2332dc5eee250bab7bcc",
      "filename": "backend/vendor/github.com/gorilla/websocket/util.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Futil.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Futil.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Futil.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -6,7 +6,7 @@ package websocket\n \n import (\n \t\"crypto/rand\"\n-\t\"crypto/sha1\" //#nosec G505 -- (CWE-327) https://datatracker.ietf.org/doc/html/rfc6455#page-54\n+\t\"crypto/sha1\"\n \t\"encoding/base64\"\n \t\"io\"\n \t\"net/http\"\n@@ -17,7 +17,7 @@ import (\n var keyGUID = []byte(\"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\")\n \n func computeAcceptKey(challengeKey string) string {\n-\th := sha1.New() //#nosec G401 -- (CWE-326) https://datatracker.ietf.org/doc/html/rfc6455#page-54\n+\th := sha1.New()\n \th.Write([]byte(challengeKey))\n \th.Write(keyGUID)\n \treturn base64.StdEncoding.EncodeToString(h.Sum(nil))"
    },
    {
      "sha": "2e668f6b8821e4129856122630dc5691e2f1612a",
      "filename": "backend/vendor/github.com/gorilla/websocket/x_net_proxy.go",
      "status": "added",
      "additions": 473,
      "deletions": 0,
      "changes": 473,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fx_net_proxy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fx_net_proxy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgorilla%2Fwebsocket%2Fx_net_proxy.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,473 @@\n+// Code generated by golang.org/x/tools/cmd/bundle. DO NOT EDIT.\n+//go:generate bundle -o x_net_proxy.go golang.org/x/net/proxy\n+\n+// Package proxy provides support for a variety of protocols to proxy network\n+// data.\n+//\n+\n+package websocket\n+\n+import (\n+\t\"errors\"\n+\t\"io\"\n+\t\"net\"\n+\t\"net/url\"\n+\t\"os\"\n+\t\"strconv\"\n+\t\"strings\"\n+\t\"sync\"\n+)\n+\n+type proxy_direct struct{}\n+\n+// Direct is a direct proxy: one that makes network connections directly.\n+var proxy_Direct = proxy_direct{}\n+\n+func (proxy_direct) Dial(network, addr string) (net.Conn, error) {\n+\treturn net.Dial(network, addr)\n+}\n+\n+// A PerHost directs connections to a default Dialer unless the host name\n+// requested matches one of a number of exceptions.\n+type proxy_PerHost struct {\n+\tdef, bypass proxy_Dialer\n+\n+\tbypassNetworks []*net.IPNet\n+\tbypassIPs      []net.IP\n+\tbypassZones    []string\n+\tbypassHosts    []string\n+}\n+\n+// NewPerHost returns a PerHost Dialer that directs connections to either\n+// defaultDialer or bypass, depending on whether the connection matches one of\n+// the configured rules.\n+func proxy_NewPerHost(defaultDialer, bypass proxy_Dialer) *proxy_PerHost {\n+\treturn &proxy_PerHost{\n+\t\tdef:    defaultDialer,\n+\t\tbypass: bypass,\n+\t}\n+}\n+\n+// Dial connects to the address addr on the given network through either\n+// defaultDialer or bypass.\n+func (p *proxy_PerHost) Dial(network, addr string) (c net.Conn, err error) {\n+\thost, _, err := net.SplitHostPort(addr)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\treturn p.dialerForRequest(host).Dial(network, addr)\n+}\n+\n+func (p *proxy_PerHost) dialerForRequest(host string) proxy_Dialer {\n+\tif ip := net.ParseIP(host); ip != nil {\n+\t\tfor _, net := range p.bypassNetworks {\n+\t\t\tif net.Contains(ip) {\n+\t\t\t\treturn p.bypass\n+\t\t\t}\n+\t\t}\n+\t\tfor _, bypassIP := range p.bypassIPs {\n+\t\t\tif bypassIP.Equal(ip) {\n+\t\t\t\treturn p.bypass\n+\t\t\t}\n+\t\t}\n+\t\treturn p.def\n+\t}\n+\n+\tfor _, zone := range p.bypassZones {\n+\t\tif strings.HasSuffix(host, zone) {\n+\t\t\treturn p.bypass\n+\t\t}\n+\t\tif host == zone[1:] {\n+\t\t\t// For a zone \".example.com\", we match \"example.com\"\n+\t\t\t// too.\n+\t\t\treturn p.bypass\n+\t\t}\n+\t}\n+\tfor _, bypassHost := range p.bypassHosts {\n+\t\tif bypassHost == host {\n+\t\t\treturn p.bypass\n+\t\t}\n+\t}\n+\treturn p.def\n+}\n+\n+// AddFromString parses a string that contains comma-separated values\n+// specifying hosts that should use the bypass proxy. Each value is either an\n+// IP address, a CIDR range, a zone (*.example.com) or a host name\n+// (localhost). A best effort is made to parse the string and errors are\n+// ignored.\n+func (p *proxy_PerHost) AddFromString(s string) {\n+\thosts := strings.Split(s, \",\")\n+\tfor _, host := range hosts {\n+\t\thost = strings.TrimSpace(host)\n+\t\tif len(host) == 0 {\n+\t\t\tcontinue\n+\t\t}\n+\t\tif strings.Contains(host, \"/\") {\n+\t\t\t// We assume that it's a CIDR address like 127.0.0.0/8\n+\t\t\tif _, net, err := net.ParseCIDR(host); err == nil {\n+\t\t\t\tp.AddNetwork(net)\n+\t\t\t}\n+\t\t\tcontinue\n+\t\t}\n+\t\tif ip := net.ParseIP(host); ip != nil {\n+\t\t\tp.AddIP(ip)\n+\t\t\tcontinue\n+\t\t}\n+\t\tif strings.HasPrefix(host, \"*.\") {\n+\t\t\tp.AddZone(host[1:])\n+\t\t\tcontinue\n+\t\t}\n+\t\tp.AddHost(host)\n+\t}\n+}\n+\n+// AddIP specifies an IP address that will use the bypass proxy. Note that\n+// this will only take effect if a literal IP address is dialed. A connection\n+// to a named host will never match an IP.\n+func (p *proxy_PerHost) AddIP(ip net.IP) {\n+\tp.bypassIPs = append(p.bypassIPs, ip)\n+}\n+\n+// AddNetwork specifies an IP range that will use the bypass proxy. Note that\n+// this will only take effect if a literal IP address is dialed. A connection\n+// to a named host will never match.\n+func (p *proxy_PerHost) AddNetwork(net *net.IPNet) {\n+\tp.bypassNetworks = append(p.bypassNetworks, net)\n+}\n+\n+// AddZone specifies a DNS suffix that will use the bypass proxy. A zone of\n+// \"example.com\" matches \"example.com\" and all of its subdomains.\n+func (p *proxy_PerHost) AddZone(zone string) {\n+\tif strings.HasSuffix(zone, \".\") {\n+\t\tzone = zone[:len(zone)-1]\n+\t}\n+\tif !strings.HasPrefix(zone, \".\") {\n+\t\tzone = \".\" + zone\n+\t}\n+\tp.bypassZones = append(p.bypassZones, zone)\n+}\n+\n+// AddHost specifies a host name that will use the bypass proxy.\n+func (p *proxy_PerHost) AddHost(host string) {\n+\tif strings.HasSuffix(host, \".\") {\n+\t\thost = host[:len(host)-1]\n+\t}\n+\tp.bypassHosts = append(p.bypassHosts, host)\n+}\n+\n+// A Dialer is a means to establish a connection.\n+type proxy_Dialer interface {\n+\t// Dial connects to the given address via the proxy.\n+\tDial(network, addr string) (c net.Conn, err error)\n+}\n+\n+// Auth contains authentication parameters that specific Dialers may require.\n+type proxy_Auth struct {\n+\tUser, Password string\n+}\n+\n+// FromEnvironment returns the dialer specified by the proxy related variables in\n+// the environment.\n+func proxy_FromEnvironment() proxy_Dialer {\n+\tallProxy := proxy_allProxyEnv.Get()\n+\tif len(allProxy) == 0 {\n+\t\treturn proxy_Direct\n+\t}\n+\n+\tproxyURL, err := url.Parse(allProxy)\n+\tif err != nil {\n+\t\treturn proxy_Direct\n+\t}\n+\tproxy, err := proxy_FromURL(proxyURL, proxy_Direct)\n+\tif err != nil {\n+\t\treturn proxy_Direct\n+\t}\n+\n+\tnoProxy := proxy_noProxyEnv.Get()\n+\tif len(noProxy) == 0 {\n+\t\treturn proxy\n+\t}\n+\n+\tperHost := proxy_NewPerHost(proxy, proxy_Direct)\n+\tperHost.AddFromString(noProxy)\n+\treturn perHost\n+}\n+\n+// proxySchemes is a map from URL schemes to a function that creates a Dialer\n+// from a URL with such a scheme.\n+var proxy_proxySchemes map[string]func(*url.URL, proxy_Dialer) (proxy_Dialer, error)\n+\n+// RegisterDialerType takes a URL scheme and a function to generate Dialers from\n+// a URL with that scheme and a forwarding Dialer. Registered schemes are used\n+// by FromURL.\n+func proxy_RegisterDialerType(scheme string, f func(*url.URL, proxy_Dialer) (proxy_Dialer, error)) {\n+\tif proxy_proxySchemes == nil {\n+\t\tproxy_proxySchemes = make(map[string]func(*url.URL, proxy_Dialer) (proxy_Dialer, error))\n+\t}\n+\tproxy_proxySchemes[scheme] = f\n+}\n+\n+// FromURL returns a Dialer given a URL specification and an underlying\n+// Dialer for it to make network requests.\n+func proxy_FromURL(u *url.URL, forward proxy_Dialer) (proxy_Dialer, error) {\n+\tvar auth *proxy_Auth\n+\tif u.User != nil {\n+\t\tauth = new(proxy_Auth)\n+\t\tauth.User = u.User.Username()\n+\t\tif p, ok := u.User.Password(); ok {\n+\t\t\tauth.Password = p\n+\t\t}\n+\t}\n+\n+\tswitch u.Scheme {\n+\tcase \"socks5\":\n+\t\treturn proxy_SOCKS5(\"tcp\", u.Host, auth, forward)\n+\t}\n+\n+\t// If the scheme doesn't match any of the built-in schemes, see if it\n+\t// was registered by another package.\n+\tif proxy_proxySchemes != nil {\n+\t\tif f, ok := proxy_proxySchemes[u.Scheme]; ok {\n+\t\t\treturn f(u, forward)\n+\t\t}\n+\t}\n+\n+\treturn nil, errors.New(\"proxy: unknown scheme: \" + u.Scheme)\n+}\n+\n+var (\n+\tproxy_allProxyEnv = &proxy_envOnce{\n+\t\tnames: []string{\"ALL_PROXY\", \"all_proxy\"},\n+\t}\n+\tproxy_noProxyEnv = &proxy_envOnce{\n+\t\tnames: []string{\"NO_PROXY\", \"no_proxy\"},\n+\t}\n+)\n+\n+// envOnce looks up an environment variable (optionally by multiple\n+// names) once. It mitigates expensive lookups on some platforms\n+// (e.g. Windows).\n+// (Borrowed from net/http/transport.go)\n+type proxy_envOnce struct {\n+\tnames []string\n+\tonce  sync.Once\n+\tval   string\n+}\n+\n+func (e *proxy_envOnce) Get() string {\n+\te.once.Do(e.init)\n+\treturn e.val\n+}\n+\n+func (e *proxy_envOnce) init() {\n+\tfor _, n := range e.names {\n+\t\te.val = os.Getenv(n)\n+\t\tif e.val != \"\" {\n+\t\t\treturn\n+\t\t}\n+\t}\n+}\n+\n+// SOCKS5 returns a Dialer that makes SOCKSv5 connections to the given address\n+// with an optional username and password. See RFC 1928 and RFC 1929.\n+func proxy_SOCKS5(network, addr string, auth *proxy_Auth, forward proxy_Dialer) (proxy_Dialer, error) {\n+\ts := &proxy_socks5{\n+\t\tnetwork: network,\n+\t\taddr:    addr,\n+\t\tforward: forward,\n+\t}\n+\tif auth != nil {\n+\t\ts.user = auth.User\n+\t\ts.password = auth.Password\n+\t}\n+\n+\treturn s, nil\n+}\n+\n+type proxy_socks5 struct {\n+\tuser, password string\n+\tnetwork, addr  string\n+\tforward        proxy_Dialer\n+}\n+\n+const proxy_socks5Version = 5\n+\n+const (\n+\tproxy_socks5AuthNone     = 0\n+\tproxy_socks5AuthPassword = 2\n+)\n+\n+const proxy_socks5Connect = 1\n+\n+const (\n+\tproxy_socks5IP4    = 1\n+\tproxy_socks5Domain = 3\n+\tproxy_socks5IP6    = 4\n+)\n+\n+var proxy_socks5Errors = []string{\n+\t\"\",\n+\t\"general failure\",\n+\t\"connection forbidden\",\n+\t\"network unreachable\",\n+\t\"host unreachable\",\n+\t\"connection refused\",\n+\t\"TTL expired\",\n+\t\"command not supported\",\n+\t\"address type not supported\",\n+}\n+\n+// Dial connects to the address addr on the given network via the SOCKS5 proxy.\n+func (s *proxy_socks5) Dial(network, addr string) (net.Conn, error) {\n+\tswitch network {\n+\tcase \"tcp\", \"tcp6\", \"tcp4\":\n+\tdefault:\n+\t\treturn nil, errors.New(\"proxy: no support for SOCKS5 proxy connections of type \" + network)\n+\t}\n+\n+\tconn, err := s.forward.Dial(s.network, s.addr)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tif err := s.connect(conn, addr); err != nil {\n+\t\tconn.Close()\n+\t\treturn nil, err\n+\t}\n+\treturn conn, nil\n+}\n+\n+// connect takes an existing connection to a socks5 proxy server,\n+// and commands the server to extend that connection to target,\n+// which must be a canonical address with a host and port.\n+func (s *proxy_socks5) connect(conn net.Conn, target string) error {\n+\thost, portStr, err := net.SplitHostPort(target)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\n+\tport, err := strconv.Atoi(portStr)\n+\tif err != nil {\n+\t\treturn errors.New(\"proxy: failed to parse port number: \" + portStr)\n+\t}\n+\tif port < 1 || port > 0xffff {\n+\t\treturn errors.New(\"proxy: port number out of range: \" + portStr)\n+\t}\n+\n+\t// the size here is just an estimate\n+\tbuf := make([]byte, 0, 6+len(host))\n+\n+\tbuf = append(buf, proxy_socks5Version)\n+\tif len(s.user) > 0 && len(s.user) < 256 && len(s.password) < 256 {\n+\t\tbuf = append(buf, 2 /* num auth methods */, proxy_socks5AuthNone, proxy_socks5AuthPassword)\n+\t} else {\n+\t\tbuf = append(buf, 1 /* num auth methods */, proxy_socks5AuthNone)\n+\t}\n+\n+\tif _, err := conn.Write(buf); err != nil {\n+\t\treturn errors.New(\"proxy: failed to write greeting to SOCKS5 proxy at \" + s.addr + \": \" + err.Error())\n+\t}\n+\n+\tif _, err := io.ReadFull(conn, buf[:2]); err != nil {\n+\t\treturn errors.New(\"proxy: failed to read greeting from SOCKS5 proxy at \" + s.addr + \": \" + err.Error())\n+\t}\n+\tif buf[0] != 5 {\n+\t\treturn errors.New(\"proxy: SOCKS5 proxy at \" + s.addr + \" has unexpected version \" + strconv.Itoa(int(buf[0])))\n+\t}\n+\tif buf[1] == 0xff {\n+\t\treturn errors.New(\"proxy: SOCKS5 proxy at \" + s.addr + \" requires authentication\")\n+\t}\n+\n+\t// See RFC 1929\n+\tif buf[1] == proxy_socks5AuthPassword {\n+\t\tbuf = buf[:0]\n+\t\tbuf = append(buf, 1 /* password protocol version */)\n+\t\tbuf = append(buf, uint8(len(s.user)))\n+\t\tbuf = append(buf, s.user...)\n+\t\tbuf = append(buf, uint8(len(s.password)))\n+\t\tbuf = append(buf, s.password...)\n+\n+\t\tif _, err := conn.Write(buf); err != nil {\n+\t\t\treturn errors.New(\"proxy: failed to write authentication request to SOCKS5 proxy at \" + s.addr + \": \" + err.Error())\n+\t\t}\n+\n+\t\tif _, err := io.ReadFull(conn, buf[:2]); err != nil {\n+\t\t\treturn errors.New(\"proxy: failed to read authentication reply from SOCKS5 proxy at \" + s.addr + \": \" + err.Error())\n+\t\t}\n+\n+\t\tif buf[1] != 0 {\n+\t\t\treturn errors.New(\"proxy: SOCKS5 proxy at \" + s.addr + \" rejected username/password\")\n+\t\t}\n+\t}\n+\n+\tbuf = buf[:0]\n+\tbuf = append(buf, proxy_socks5Version, proxy_socks5Connect, 0 /* reserved */)\n+\n+\tif ip := net.ParseIP(host); ip != nil {\n+\t\tif ip4 := ip.To4(); ip4 != nil {\n+\t\t\tbuf = append(buf, proxy_socks5IP4)\n+\t\t\tip = ip4\n+\t\t} else {\n+\t\t\tbuf = append(buf, proxy_socks5IP6)\n+\t\t}\n+\t\tbuf = append(buf, ip...)\n+\t} else {\n+\t\tif len(host) > 255 {\n+\t\t\treturn errors.New(\"proxy: destination host name too long: \" + host)\n+\t\t}\n+\t\tbuf = append(buf, proxy_socks5Domain)\n+\t\tbuf = append(buf, byte(len(host)))\n+\t\tbuf = append(buf, host...)\n+\t}\n+\tbuf = append(buf, byte(port>>8), byte(port))\n+\n+\tif _, err := conn.Write(buf); err != nil {\n+\t\treturn errors.New(\"proxy: failed to write connect request to SOCKS5 proxy at \" + s.addr + \": \" + err.Error())\n+\t}\n+\n+\tif _, err := io.ReadFull(conn, buf[:4]); err != nil {\n+\t\treturn errors.New(\"proxy: failed to read connect reply from SOCKS5 proxy at \" + s.addr + \": \" + err.Error())\n+\t}\n+\n+\tfailure := \"unknown error\"\n+\tif int(buf[1]) < len(proxy_socks5Errors) {\n+\t\tfailure = proxy_socks5Errors[buf[1]]\n+\t}\n+\n+\tif len(failure) > 0 {\n+\t\treturn errors.New(\"proxy: SOCKS5 proxy at \" + s.addr + \" failed to connect: \" + failure)\n+\t}\n+\n+\tbytesToDiscard := 0\n+\tswitch buf[3] {\n+\tcase proxy_socks5IP4:\n+\t\tbytesToDiscard = net.IPv4len\n+\tcase proxy_socks5IP6:\n+\t\tbytesToDiscard = net.IPv6len\n+\tcase proxy_socks5Domain:\n+\t\t_, err := io.ReadFull(conn, buf[:1])\n+\t\tif err != nil {\n+\t\t\treturn errors.New(\"proxy: failed to read domain length from SOCKS5 proxy at \" + s.addr + \": \" + err.Error())\n+\t\t}\n+\t\tbytesToDiscard = int(buf[0])\n+\tdefault:\n+\t\treturn errors.New(\"proxy: got unknown address type \" + strconv.Itoa(int(buf[3])) + \" from SOCKS5 proxy at \" + s.addr)\n+\t}\n+\n+\tif cap(buf) < bytesToDiscard {\n+\t\tbuf = make([]byte, bytesToDiscard)\n+\t} else {\n+\t\tbuf = buf[:bytesToDiscard]\n+\t}\n+\tif _, err := io.ReadFull(conn, buf); err != nil {\n+\t\treturn errors.New(\"proxy: failed to read address from SOCKS5 proxy at \" + s.addr + \": \" + err.Error())\n+\t}\n+\n+\t// Also need to discard the port number\n+\tif _, err := io.ReadFull(conn, buf[:2]); err != nil {\n+\t\treturn errors.New(\"proxy: failed to read port from SOCKS5 proxy at \" + s.addr + \": \" + err.Error())\n+\t}\n+\n+\treturn nil\n+}"
    },
    {
      "sha": "2fc5e5f5b57d2cdf97d04c67bdf9dbfea0469517",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/.travis.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2F.travis.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2F.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2F.travis.yml?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,39 +0,0 @@\n-language: go\n-\n-os:\n-  - linux\n-  - osx\n-\n-go:\n-  - 1.16.x\n-\n-install:\n-  # go-flags\n-  - go build -v ./...\n-\n-  # linting\n-  - go get -v golang.org/x/lint/golint\n-\n-  # code coverage\n-  - go get golang.org/x/tools/cmd/cover\n-  - go get github.com/onsi/ginkgo/ginkgo\n-  - go get github.com/modocache/gover\n-  - if [ \"$TRAVIS_SECURE_ENV_VARS\" = \"true\" ]; then go get github.com/mattn/goveralls; fi\n-\n-script:\n-  # go-flags\n-  - $(exit $(gofmt -l . | wc -l))\n-  - go test -v ./...\n-\n-  # linting\n-  - go tool vet -all=true -v=true . || true\n-  - $(go env GOPATH | awk 'BEGIN{FS=\":\"} {print $1}')/bin/golint ./...\n-\n-  # code coverage\n-  - $(go env GOPATH | awk 'BEGIN{FS=\":\"} {print $1}')/bin/ginkgo -r -cover\n-  - $(go env GOPATH | awk 'BEGIN{FS=\":\"} {print $1}')/bin/gover\n-  - if [ \"$TRAVIS_SECURE_ENV_VARS\" = \"true\" ]; then $(go env GOPATH | awk 'BEGIN{FS=\":\"} {print $1}')/bin/goveralls -coverprofile=gover.coverprofile -service=travis-ci -repotoken $COVERALLS_TOKEN; fi\n-\n-env:\n-  # coveralls.io\n-  secure: \"RCYbiB4P0RjQRIoUx/vG/AjP3mmYCbzOmr86DCww1Z88yNcy3hYr3Cq8rpPtYU5v0g7wTpu4adaKIcqRE9xknYGbqj3YWZiCoBP1/n4Z+9sHW3Dsd9D/GRGeHUus0laJUGARjWoCTvoEtOgTdGQDoX7mH+pUUY0FBltNYUdOiiU=\""
    },
    {
      "sha": "759eeb0d4e10c479f1dd6bc410032f57e7faaa1f",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/README.md",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2FREADME.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,7 +1,7 @@\n go-flags: a go library for parsing command line arguments\n =========================================================\n \n-[![GoDoc](https://godoc.org/github.com/jessevdk/go-flags?status.png)](https://godoc.org/github.com/jessevdk/go-flags) [![Build Status](https://travis-ci.org/jessevdk/go-flags.svg?branch=master)](https://travis-ci.org/jessevdk/go-flags) [![Coverage Status](https://img.shields.io/coveralls/jessevdk/go-flags.svg)](https://coveralls.io/r/jessevdk/go-flags?branch=master)\n+[![GoDoc](https://godoc.org/github.com/jessevdk/go-flags?status.png)](https://godoc.org/github.com/jessevdk/go-flags)\n \n This library provides similar functionality to the builtin flag library of\n go, but provides much more functionality and nicer formatting. From the\n@@ -78,6 +78,9 @@ var opts struct {\n \n \t// Example of a map\n \tIntMap map[string]int `long:\"intmap\" description:\"A map from string to int\"`\n+\n+\t// Example of env variable\n+\tThresholds  []int     `long:\"thresholds\" default:\"1\" default:\"2\" env:\"THRESHOLD_VALUES\"  env-delim:\",\"`\n }\n \n // Callback which will invoke callto:<argument> to call a number."
    },
    {
      "sha": "ac4f1e392b4c78d5bcb0b8192441d6d9794a365f",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/command.go",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fcommand.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fcommand.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fcommand.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -30,6 +30,12 @@ type Command struct {\n \t// Whether positional arguments are required\n \tArgsRequired bool\n \n+\t// Whether to pass all arguments after the first non option as remaining\n+\t// command line arguments. This is equivalent to strict POSIX processing.\n+\t// This is command-local version of PassAfterNonOption Parser flag. It\n+\t// cannot be turned off when PassAfterNonOption Parser flag is set.\n+\tPassAfterNonOption bool\n+\n \tcommands            []*Command\n \thasBuiltinHelpGroup bool\n \targs                []*Arg\n@@ -244,6 +250,7 @@ func (c *Command) scanSubcommandHandler(parentg *Group) scanHandler {\n \t\t\tlongDescription := mtag.Get(\"long-description\")\n \t\t\tsubcommandsOptional := mtag.Get(\"subcommands-optional\")\n \t\t\taliases := mtag.GetMany(\"alias\")\n+\t\t\tpassAfterNonOption := mtag.Get(\"pass-after-non-option\")\n \n \t\t\tsubc, err := c.AddCommand(subcommand, shortDescription, longDescription, ptrval.Interface())\n \n@@ -261,6 +268,10 @@ func (c *Command) scanSubcommandHandler(parentg *Group) scanHandler {\n \t\t\t\tsubc.Aliases = aliases\n \t\t\t}\n \n+\t\t\tif len(passAfterNonOption) > 0 {\n+\t\t\t\tsubc.PassAfterNonOption = true\n+\t\t\t}\n+\n \t\t\treturn true, nil\n \t\t}\n "
    },
    {
      "sha": "b27f698dc4b1d04731f47908ca8efe2aaec0f20d",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/convert.go",
      "status": "modified",
      "additions": 13,
      "deletions": 4,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fconvert.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fconvert.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fconvert.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -53,7 +53,7 @@ func getBase(options multiTag, base int) (int, error) {\n \n func convertMarshal(val reflect.Value) (bool, string, error) {\n \t// Check first for the Marshaler interface\n-\tif val.Type().NumMethod() > 0 && val.CanInterface() {\n+\tif val.IsValid() && val.Type().NumMethod() > 0 && val.CanInterface() {\n \t\tif marshaler, ok := val.Interface().(Marshaler); ok {\n \t\t\tret, err := marshaler.MarshalFlag()\n \t\t\treturn true, ret, err\n@@ -68,6 +68,10 @@ func convertToString(val reflect.Value, options multiTag) (string, error) {\n \t\treturn ret, err\n \t}\n \n+\tif !val.IsValid() {\n+\t\treturn \"\", nil\n+\t}\n+\n \ttp := val.Type()\n \n \t// Support for time.Duration\n@@ -220,7 +224,7 @@ func convert(val string, retval reflect.Value, options multiTag) error {\n \t\t\tretval.SetBool(b)\n \t\t}\n \tcase reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64:\n-\t\tbase, err := getBase(options, 10)\n+\t\tbase, err := getBase(options, 0)\n \n \t\tif err != nil {\n \t\t\treturn err\n@@ -234,7 +238,7 @@ func convert(val string, retval reflect.Value, options multiTag) error {\n \n \t\tretval.SetInt(parsed)\n \tcase reflect.Uint, reflect.Uint8, reflect.Uint16, reflect.Uint32, reflect.Uint64:\n-\t\tbase, err := getBase(options, 10)\n+\t\tbase, err := getBase(options, 0)\n \n \t\tif err != nil {\n \t\t\treturn err\n@@ -267,7 +271,12 @@ func convert(val string, retval reflect.Value, options multiTag) error {\n \n \t\tretval.Set(reflect.Append(retval, elemval))\n \tcase reflect.Map:\n-\t\tparts := strings.SplitN(val, \":\", 2)\n+\t\tkeyValueDelimiter := options.Get(\"key-value-delimiter\")\n+\t\tif keyValueDelimiter == \"\" {\n+\t\t\tkeyValueDelimiter = \":\"\n+\t\t}\n+\n+\t\tparts := strings.SplitN(val, keyValueDelimiter, 2)\n \n \t\tkey := parts[0]\n \t\tvar value string"
    },
    {
      "sha": "a6acf1be1f3f5a2b2ec26e7434ae67bdf1523e47",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/flags.go",
      "status": "modified",
      "additions": 134,
      "deletions": 140,
      "changes": 274,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fflags.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fflags.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fflags.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -8,46 +8,45 @@ The flags package is similar in functionality to the go built-in flag package\n but provides more options and uses reflection to provide a convenient and\n succinct way of specifying command line options.\n \n-\n-Supported features\n+# Supported features\n \n The following features are supported in go-flags:\n \n-    Options with short names (-v)\n-    Options with long names (--verbose)\n-    Options with and without arguments (bool v.s. other type)\n-    Options with optional arguments and default values\n-    Option default values from ENVIRONMENT_VARIABLES, including slice and map values\n-    Multiple option groups each containing a set of options\n-    Generate and print well-formatted help message\n-    Passing remaining command line arguments after -- (optional)\n-    Ignoring unknown command line options (optional)\n-    Supports -I/usr/include -I=/usr/include -I /usr/include option argument specification\n-    Supports multiple short options -aux\n-    Supports all primitive go types (string, int{8..64}, uint{8..64}, float)\n-    Supports same option multiple times (can store in slice or last option counts)\n-    Supports maps\n-    Supports function callbacks\n-    Supports namespaces for (nested) option groups\n+\tOptions with short names (-v)\n+\tOptions with long names (--verbose)\n+\tOptions with and without arguments (bool v.s. other type)\n+\tOptions with optional arguments and default values\n+\tOption default values from ENVIRONMENT_VARIABLES, including slice and map values\n+\tMultiple option groups each containing a set of options\n+\tGenerate and print well-formatted help message\n+\tPassing remaining command line arguments after -- (optional)\n+\tIgnoring unknown command line options (optional)\n+\tSupports -I/usr/include -I=/usr/include -I /usr/include option argument specification\n+\tSupports multiple short options -aux\n+\tSupports all primitive go types (string, int{8..64}, uint{8..64}, float)\n+\tSupports same option multiple times (can store in slice or last option counts)\n+\tSupports maps\n+\tSupports function callbacks\n+\tSupports namespaces for (nested) option groups\n \n Additional features specific to Windows:\n-    Options with short names (/v)\n-    Options with long names (/verbose)\n-    Windows-style options with arguments use a colon as the delimiter\n-    Modify generated help message with Windows-style / options\n-    Windows style options can be disabled at build time using the \"forceposix\"\n-    build tag\n \n+\tOptions with short names (/v)\n+\tOptions with long names (/verbose)\n+\tWindows-style options with arguments use a colon as the delimiter\n+\tModify generated help message with Windows-style / options\n+\tWindows style options can be disabled at build time using the \"forceposix\"\n+\tbuild tag\n \n-Basic usage\n+# Basic usage\n \n The flags package uses structs, reflection and struct field tags\n to allow users to specify command line options. This results in very simple\n and concise specification of your application options. For example:\n \n-    type Options struct {\n-        Verbose []bool `short:\"v\" long:\"verbose\" description:\"Show verbose debug information\"`\n-    }\n+\ttype Options struct {\n+\t    Verbose []bool `short:\"v\" long:\"verbose\" description:\"Show verbose debug information\"`\n+\t}\n \n This specifies one option with a short name -v and a long name --verbose.\n When either -v or --verbose is found on the command line, a 'true' value\n@@ -60,9 +59,9 @@ whenever the option is encountered, a value is appended to the slice.\n Map options from string to primitive type are also supported. On the command\n line, you specify the value for such an option as key:value. For example\n \n-    type Options struct {\n-        AuthorInfo string[string] `short:\"a\"`\n-    }\n+\ttype Options struct {\n+\t    AuthorInfo string[string] `short:\"a\"`\n+\t}\n \n Then, the AuthorInfo map can be filled with something like\n -a name:Jesse -a \"surname:van den Kieboom\".\n@@ -71,96 +70,94 @@ Finally, for full control over the conversion between command line argument\n values and options, user defined types can choose to implement the Marshaler\n and Unmarshaler interfaces.\n \n-\n-Available field tags\n+# Available field tags\n \n The following is a list of tags for struct fields supported by go-flags:\n \n-    short:            the short name of the option (single character)\n-    long:             the long name of the option\n-    required:         if non empty, makes the option required to appear on the command\n-                      line. If a required option is not present, the parser will\n-                      return ErrRequired (optional)\n-    description:      the description of the option (optional)\n-    long-description: the long description of the option. Currently only\n-                      displayed in generated man pages (optional)\n-    no-flag:          if non-empty, this field is ignored as an option (optional)\n-\n-    optional:       if non-empty, makes the argument of the option optional. When an\n-                    argument is optional it can only be specified using\n-                    --option=argument (optional)\n-    optional-value: the value of an optional option when the option occurs\n-                    without an argument. This tag can be specified multiple\n-                    times in the case of maps or slices (optional)\n-    default:        the default value of an option. This tag can be specified\n-                    multiple times in the case of slices or maps (optional)\n-    default-mask:   when specified, this value will be displayed in the help\n-                    instead of the actual default value. This is useful\n-                    mostly for hiding otherwise sensitive information from\n-                    showing up in the help. If default-mask takes the special\n-                    value \"-\", then no default value will be shown at all\n-                    (optional)\n-    env:            the default value of the option is overridden from the\n-                    specified environment variable, if one has been defined.\n-                    (optional)\n-    env-delim:      the 'env' default value from environment is split into\n-                    multiple values with the given delimiter string, use with\n-                    slices and maps (optional)\n-    value-name:     the name of the argument value (to be shown in the help)\n-                    (optional)\n-    choice:         limits the values for an option to a set of values.\n-                    Repeat this tag once for each allowable value.\n-                    e.g. `long:\"animal\" choice:\"cat\" choice:\"dog\"`\n-    hidden:         if non-empty, the option is not visible in the help or man page.\n-\n-    base: a base (radix) used to convert strings to integer values, the\n-          default base is 10 (i.e. decimal) (optional)\n-\n-    ini-name:       the explicit ini option name (optional)\n-    no-ini:         if non-empty this field is ignored as an ini option\n-                    (optional)\n-\n-    group:                when specified on a struct field, makes the struct\n-                          field a separate group with the given name (optional)\n-    namespace:            when specified on a group struct field, the namespace\n-                          gets prepended to every option's long name and\n-                          subgroup's namespace of this group, separated by\n-                          the parser's namespace delimiter (optional)\n-    env-namespace:        when specified on a group struct field, the env-namespace\n-                          gets prepended to every option's env key and\n-                          subgroup's env-namespace of this group, separated by\n-                          the parser's env-namespace delimiter (optional)\n-    command:              when specified on a struct field, makes the struct\n-                          field a (sub)command with the given name (optional)\n-    subcommands-optional: when specified on a command struct field, makes\n-                          any subcommands of that command optional (optional)\n-    alias:                when specified on a command struct field, adds the\n-                          specified name as an alias for the command. Can be\n-                          be specified multiple times to add more than one\n-                          alias (optional)\n-    positional-args:      when specified on a field with a struct type,\n-                          uses the fields of that struct to parse remaining\n-                          positional command line arguments into (in order\n-                          of the fields). If a field has a slice type,\n-                          then all remaining arguments will be added to it.\n-                          Positional arguments are optional by default,\n-                          unless the \"required\" tag is specified together\n-                          with the \"positional-args\" tag. The \"required\" tag\n-                          can also be set on the individual rest argument\n-                          fields, to require only the first N positional\n-                          arguments. If the \"required\" tag is set on the\n-                          rest arguments slice, then its value determines\n-                          the minimum amount of rest arguments that needs to\n-                          be provided (e.g. `required:\"2\"`) (optional)\n-    positional-arg-name:  used on a field in a positional argument struct; name\n-                          of the positional argument placeholder to be shown in\n-                          the help (optional)\n+\tshort:            the short name of the option (single character)\n+\tlong:             the long name of the option\n+\trequired:         if non empty, makes the option required to appear on the command\n+\t                  line. If a required option is not present, the parser will\n+\t                  return ErrRequired (optional)\n+\tdescription:      the description of the option (optional)\n+\tlong-description: the long description of the option. Currently only\n+\t                  displayed in generated man pages (optional)\n+\tno-flag:          if non-empty, this field is ignored as an option (optional)\n+\n+\toptional:       if non-empty, makes the argument of the option optional. When an\n+\t                argument is optional it can only be specified using\n+\t                --option=argument (optional)\n+\toptional-value: the value of an optional option when the option occurs\n+\t                without an argument. This tag can be specified multiple\n+\t                times in the case of maps or slices (optional)\n+\tdefault:        the default value of an option. This tag can be specified\n+\t                multiple times in the case of slices or maps (optional)\n+\tdefault-mask:   when specified, this value will be displayed in the help\n+\t                instead of the actual default value. This is useful\n+\t                mostly for hiding otherwise sensitive information from\n+\t                showing up in the help. If default-mask takes the special\n+\t                value \"-\", then no default value will be shown at all\n+\t                (optional)\n+\tenv:            the default value of the option is overridden from the\n+\t                specified environment variable, if one has been defined.\n+\t                (optional)\n+\tenv-delim:      the 'env' default value from environment is split into\n+\t                multiple values with the given delimiter string, use with\n+\t                slices and maps (optional)\n+\tvalue-name:     the name of the argument value (to be shown in the help)\n+\t                (optional)\n+\tchoice:         limits the values for an option to a set of values.\n+\t                Repeat this tag once for each allowable value.\n+\t                e.g. `long:\"animal\" choice:\"cat\" choice:\"dog\"`\n+\thidden:         if non-empty, the option is not visible in the help or man page.\n+\n+\tbase: a base (radix) used to convert strings to integer values, the\n+\t      default base is 10 (i.e. decimal) (optional)\n+\n+\tini-name:       the explicit ini option name (optional)\n+\tno-ini:         if non-empty this field is ignored as an ini option\n+\t                (optional)\n+\n+\tgroup:                when specified on a struct field, makes the struct\n+\t                      field a separate group with the given name (optional)\n+\tnamespace:            when specified on a group struct field, the namespace\n+\t                      gets prepended to every option's long name and\n+\t                      subgroup's namespace of this group, separated by\n+\t                      the parser's namespace delimiter (optional)\n+\tenv-namespace:        when specified on a group struct field, the env-namespace\n+\t                      gets prepended to every option's env key and\n+\t                      subgroup's env-namespace of this group, separated by\n+\t                      the parser's env-namespace delimiter (optional)\n+\tcommand:              when specified on a struct field, makes the struct\n+\t                      field a (sub)command with the given name (optional)\n+\tsubcommands-optional: when specified on a command struct field, makes\n+\t                      any subcommands of that command optional (optional)\n+\talias:                when specified on a command struct field, adds the\n+\t                      specified name as an alias for the command. Can be\n+\t                      be specified multiple times to add more than one\n+\t                      alias (optional)\n+\tpositional-args:      when specified on a field with a struct type,\n+\t                      uses the fields of that struct to parse remaining\n+\t                      positional command line arguments into (in order\n+\t                      of the fields). If a field has a slice type,\n+\t                      then all remaining arguments will be added to it.\n+\t                      Positional arguments are optional by default,\n+\t                      unless the \"required\" tag is specified together\n+\t                      with the \"positional-args\" tag. The \"required\" tag\n+\t                      can also be set on the individual rest argument\n+\t                      fields, to require only the first N positional\n+\t                      arguments. If the \"required\" tag is set on the\n+\t                      rest arguments slice, then its value determines\n+\t                      the minimum amount of rest arguments that needs to\n+\t                      be provided (e.g. `required:\"2\"`) (optional)\n+\tpositional-arg-name:  used on a field in a positional argument struct; name\n+\t                      of the positional argument placeholder to be shown in\n+\t                      the help (optional)\n \n Either the `short:` tag or the `long:` must be specified to make the field eligible as an\n option.\n \n-\n-Option groups\n+# Option groups\n \n Option groups are a simple way to semantically separate your options. All\n options in a particular group are shown together in the help under the name\n@@ -169,14 +166,12 @@ precisely and emphasize the options affiliation to their group.\n \n There are currently three ways to specify option groups.\n \n-    1. Use NewNamedParser specifying the various option groups.\n-    2. Use AddGroup to add a group to an existing parser.\n-    3. Add a struct field to the top-level options annotated with the\n-       group:\"group-name\" tag.\n+ 1. Use NewNamedParser specifying the various option groups.\n+ 2. Use AddGroup to add a group to an existing parser.\n+ 3. Add a struct field to the top-level options annotated with the\n+    group:\"group-name\" tag.\n \n-\n-\n-Commands\n+# Commands\n \n The flags package also has basic support for commands. Commands are often\n used in monolithic applications that support various commands or actions.\n@@ -186,9 +181,9 @@ application.\n \n There are currently two ways to specify a command.\n \n-    1. Use AddCommand on an existing parser.\n-    2. Add a struct field to your options struct annotated with the\n-       command:\"command-name\" tag.\n+ 1. Use AddCommand on an existing parser.\n+ 2. Add a struct field to your options struct annotated with the\n+    command:\"command-name\" tag.\n \n The most common, idiomatic way to implement commands is to define a global\n parser instance and implement each command in a separate file. These\n@@ -204,15 +199,14 @@ command has been specified on the command line, in addition to the options\n of all the parent commands. I.e. considering a -v flag on the parser and an\n add command, the following are equivalent:\n \n-    ./app -v add\n-    ./app add -v\n+\t./app -v add\n+\t./app add -v\n \n However, if the -v flag is defined on the add command, then the first of\n the two examples above would fail since the -v flag is not defined before\n the add command.\n \n-\n-Completion\n+# Completion\n \n go-flags has builtin support to provide bash completion of flags, commands\n and argument values. To use completion, the binary which uses go-flags\n@@ -226,7 +220,7 @@ by replacing the argument parsing routine with the completion routine which\n outputs completions for the passed arguments. The basic invocation to\n complete a set of arguments is therefore:\n \n-    GO_FLAGS_COMPLETION=1 ./completion-example arg1 arg2 arg3\n+\tGO_FLAGS_COMPLETION=1 ./completion-example arg1 arg2 arg3\n \n where `completion-example` is the binary, `arg1` and `arg2` are\n the current arguments, and `arg3` (the last argument) is the argument\n@@ -237,20 +231,20 @@ are more than 1 completion items.\n To use this with bash completion, a simple file can be written which\n calls the binary which supports go-flags completion:\n \n-    _completion_example() {\n-        # All arguments except the first one\n-        args=(\"${COMP_WORDS[@]:1:$COMP_CWORD}\")\n+\t_completion_example() {\n+\t    # All arguments except the first one\n+\t    args=(\"${COMP_WORDS[@]:1:$COMP_CWORD}\")\n \n-        # Only split on newlines\n-        local IFS=$'\\n'\n+\t    # Only split on newlines\n+\t    local IFS=$'\\n'\n \n-        # Call completion (note that the first element of COMP_WORDS is\n-        # the executable itself)\n-        COMPREPLY=($(GO_FLAGS_COMPLETION=1 ${COMP_WORDS[0]} \"${args[@]}\"))\n-        return 0\n-    }\n+\t    # Call completion (note that the first element of COMP_WORDS is\n+\t    # the executable itself)\n+\t    COMPREPLY=($(GO_FLAGS_COMPLETION=1 ${COMP_WORDS[0]} \"${args[@]}\"))\n+\t    return 0\n+\t}\n \n-    complete -F _completion_example completion-example\n+\tcomplete -F _completion_example completion-example\n \n Completion requires the parser option PassDoubleDash and is therefore enforced if the environment variable GO_FLAGS_COMPLETION is set.\n "
    },
    {
      "sha": "8fd324443a0d9630444b8d11a9715aa60aceb962",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/help.go",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fhelp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fhelp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fhelp.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -72,15 +72,15 @@ func (p *Parser) getAlignmentInfo() alignmentInfo {\n \tvar prevcmd *Command\n \n \tp.eachActiveGroup(func(c *Command, grp *Group) {\n-\t\tif !grp.showInHelp() {\n-\t\t\treturn\n-\t\t}\n \t\tif c != prevcmd {\n \t\t\tfor _, arg := range c.args {\n \t\t\t\tret.updateLen(arg.Name, c != p.Command)\n \t\t\t}\n+\t\t\tprevcmd = c\n+\t\t}\n+\t\tif !grp.showInHelp() {\n+\t\t\treturn\n \t\t}\n-\n \t\tfor _, info := range grp.options {\n \t\t\tif !info.showInHelp() {\n \t\t\t\tcontinue\n@@ -334,7 +334,11 @@ func (p *Parser) WriteHelp(writer io.Writer) {\n \t\t\t\t}\n \n \t\t\t\tif !allcmd.ArgsRequired {\n-\t\t\t\t\tfmt.Fprintf(wr, \"[%s]\", name)\n+\t\t\t\t\tif arg.Required > 0 {\n+\t\t\t\t\t\tfmt.Fprintf(wr, \"%s\", name)\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tfmt.Fprintf(wr, \"[%s]\", name)\n+\t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tfmt.Fprintf(wr, \"%s\", name)\n \t\t\t\t}"
    },
    {
      "sha": "565595e5f153f4dda679dc84b280364853290d5f",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/ini.go",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fini.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fini.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fini.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -113,18 +113,18 @@ func (i *IniParser) ParseFile(filename string) error {\n //\n // The format of the ini file is as follows:\n //\n-//     [Option group name]\n-//     option = value\n+//\t[Option group name]\n+//\toption = value\n //\n // Each section in the ini file represents an option group or command in the\n // flags parser. The default flags parser option group (i.e. when using\n // flags.Parse) is named 'Application Options'. The ini option name is matched\n // in the following order:\n //\n-//     1. Compared to the ini-name tag on the option struct field (if present)\n-//     2. Compared to the struct field name\n-//     3. Compared to the option long name (if present)\n-//     4. Compared to the option short name (if present)\n+//  1. Compared to the ini-name tag on the option struct field (if present)\n+//  2. Compared to the struct field name\n+//  3. Compared to the option long name (if present)\n+//  4. Compared to the option short name (if present)\n //\n // Sections for nested groups and commands can be addressed using a dot `.'\n // namespacing notation (i.e [subcommand.Options]). Group section names are\n@@ -584,7 +584,7 @@ func (i *IniParser) parse(ini *ini) error {\n \t\t\tif i.ParseAsDefaults {\n \t\t\t\terr = opt.setDefault(pval)\n \t\t\t} else {\n-\t\t\t\terr = opt.set(pval)\n+\t\t\t\terr = opt.Set(pval)\n \t\t\t}\n \n \t\t\tif err != nil {"
    },
    {
      "sha": "257996a7927d409eac9ad8fc9784cf281593122a",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/option.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Foption.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Foption.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Foption.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -239,7 +239,7 @@ func (option *Option) IsSetDefault() bool {\n // Set the value of an option to the specified value. An error will be returned\n // if the specified value could not be converted to the corresponding option\n // value type.\n-func (option *Option) set(value *string) error {\n+func (option *Option) Set(value *string) error {\n \tkind := option.value.Type().Kind()\n \n \tif (kind == reflect.Map || kind == reflect.Slice) && option.clearReferenceBeforeSet {\n@@ -287,7 +287,7 @@ func (option *Option) setDefault(value *string) error {\n \t\treturn nil\n \t}\n \n-\tif err := option.set(value); err != nil {\n+\tif err := option.Set(value); err != nil {\n \t\treturn err\n \t}\n "
    },
    {
      "sha": "f84b69746d3b7523e9946c598c0a9c64f3d82ba6",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/optstyle_other.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Foptstyle_other.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Foptstyle_other.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Foptstyle_other.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build !windows || forceposix\n // +build !windows forceposix\n \n package flags"
    },
    {
      "sha": "e80290420ace01716b2103956fd07c8f5f3afaf4",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/optstyle_windows.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Foptstyle_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Foptstyle_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Foptstyle_windows.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build !forceposix\n // +build !forceposix\n \n package flags"
    },
    {
      "sha": "939dd7bf49d56915f95ab6693d79835ca497617d",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/parser.go",
      "status": "modified",
      "additions": 9,
      "deletions": 6,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fparser.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fparser.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Fparser.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -113,6 +113,10 @@ const (\n \t// POSIX processing.\n \tPassAfterNonOption\n \n+\t// AllowBoolValues allows a user to assign true/false to a boolean value\n+\t// rather than raising an error stating it cannot have an argument.\n+\tAllowBoolValues\n+\n \t// Default is a convenient default set of options which should cover\n \t// most of the uses of the flags package.\n \tDefault = HelpFlag | PrintErrors | PassDoubleDash\n@@ -252,7 +256,7 @@ func (p *Parser) ParseArgs(args []string) ([]string, error) {\n \t\t}\n \n \t\tif !argumentIsOption(arg) {\n-\t\t\tif (p.Options&PassAfterNonOption) != None && s.lookup.commands[arg] == nil {\n+\t\t\tif ((p.Options&PassAfterNonOption) != None || s.command.PassAfterNonOption) && s.lookup.commands[arg] == nil {\n \t\t\t\t// If PassAfterNonOption is set then all remaining arguments\n \t\t\t\t// are considered positional\n \t\t\t\tif err = s.addArgs(s.arg); err != nil {\n@@ -521,11 +525,10 @@ func (p *parseState) estimateCommand() error {\n \n func (p *Parser) parseOption(s *parseState, name string, option *Option, canarg bool, argument *string) (err error) {\n \tif !option.canArgument() {\n-\t\tif argument != nil {\n+\t\tif argument != nil && (p.Options&AllowBoolValues) == None {\n \t\t\treturn newErrorf(ErrNoArgumentForBool, \"bool flag `%s' cannot have an argument\", option)\n \t\t}\n-\n-\t\terr = option.set(nil)\n+\t\terr = option.Set(argument)\n \t} else if argument != nil || (canarg && !s.eof()) {\n \t\tvar arg string\n \n@@ -546,13 +549,13 @@ func (p *Parser) parseOption(s *parseState, name string, option *Option, canarg\n \t\t}\n \n \t\tif err == nil {\n-\t\t\terr = option.set(&arg)\n+\t\t\terr = option.Set(&arg)\n \t\t}\n \t} else if option.OptionalArgument {\n \t\toption.empty()\n \n \t\tfor _, v := range option.OptionalValue {\n-\t\t\terr = option.set(&v)\n+\t\t\terr = option.Set(&v)\n \n \t\t\tif err != nil {\n \t\t\t\tbreak"
    },
    {
      "sha": "7bcf66feeb6974cb4a40a08fa92311b8f4bb807c",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/termsize.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Ftermsize.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Ftermsize.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Ftermsize.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,4 +1,5 @@\n-// +build !windows,!plan9,!appengine,!wasm\n+//go:build !windows && !plan9 && !appengine && !wasm && !aix\n+// +build !windows,!plan9,!appengine,!wasm,!aix\n \n package flags\n "
    },
    {
      "sha": "d839220aa5bd6d8b6234144d3bc2882b9b99b52f",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/termsize_nosysioctl.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Ftermsize_nosysioctl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Ftermsize_nosysioctl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Ftermsize_nosysioctl.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,4 +1,5 @@\n-// +build plan9 appengine wasm\n+//go:build plan9 || appengine || wasm || aix\n+// +build plan9 appengine wasm aix\n \n package flags\n "
    },
    {
      "sha": "189a1b3fafef432db14a2994587f54168ebfba74",
      "filename": "backend/vendor/github.com/jessevdk/go-flags/termsize_windows.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Ftermsize_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Ftermsize_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fjessevdk%2Fgo-flags%2Ftermsize_windows.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,3 +1,4 @@\n+//go:build windows\n // +build windows\n \n package flags"
    },
    {
      "sha": "05c7359e481fec31cf367e85b6a815d6035ac203",
      "filename": "backend/vendor/github.com/klauspost/compress/README.md",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2FREADME.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -55,6 +55,10 @@ https://github.com/klauspost/compress/pull/919 https://github.com/klauspost/comp\n \t* s2: Do 2 overlapping match checks https://github.com/klauspost/compress/pull/839\r\n \t* flate: Add amd64 assembly matchlen https://github.com/klauspost/compress/pull/837\r\n \t* gzip: Copy bufio.Reader on Reset by @thatguystone in https://github.com/klauspost/compress/pull/860\r\n+\r\n+<details>\r\n+\t<summary>See changes to v1.16.x</summary>\r\n+\r\n    \r\n * July 1st, 2023 - [v1.16.7](https://github.com/klauspost/compress/releases/tag/v1.16.7)\r\n \t* zstd: Fix default level first dictionary encode https://github.com/klauspost/compress/pull/829\r\n@@ -93,6 +97,7 @@ https://github.com/klauspost/compress/pull/919 https://github.com/klauspost/comp\n \t* s2: Add LZ4 block converter. https://github.com/klauspost/compress/pull/748\r\n \t* s2: Support io.ReaderAt in ReadSeeker. https://github.com/klauspost/compress/pull/747\r\n \t* s2c/s2sx: Use concurrent decoding. https://github.com/klauspost/compress/pull/746\r\n+</details>\r\n \r\n <details>\r\n \t<summary>See changes to v1.15.x</summary>\r\n@@ -560,6 +565,8 @@ the stateless compress described below.\n \r\n For compression performance, see: [this spreadsheet](https://docs.google.com/spreadsheets/d/1nuNE2nPfuINCZJRMt6wFWhKpToF95I47XjSsc-1rbPQ/edit?usp=sharing).\r\n \r\n+To disable all assembly add `-tags=noasm`. This works across all packages.\r\n+\r\n # Stateless compression\r\n \r\n This package offers stateless compression as a special option for gzip/deflate. \r"
    },
    {
      "sha": "2754bac6f165279bd1fc602783847c0935fc3d7e",
      "filename": "backend/vendor/github.com/klauspost/compress/internal/snapref/encode_other.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Finternal%2Fsnapref%2Fencode_other.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Finternal%2Fsnapref%2Fencode_other.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Finternal%2Fsnapref%2Fencode_other.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -51,7 +51,7 @@ func emitCopy(dst []byte, offset, length int) int {\n \ti := 0\n \t// The maximum length for a single tagCopy1 or tagCopy2 op is 64 bytes. The\n \t// threshold for this loop is a little higher (at 68 = 64 + 4), and the\n-\t// length emitted down below is is a little lower (at 60 = 64 - 4), because\n+\t// length emitted down below is a little lower (at 60 = 64 - 4), because\n \t// it's shorter to encode a length 67 copy as a length 60 tagCopy2 followed\n \t// by a length 7 tagCopy1 (which encodes as 3+2 bytes) than to encode it as\n \t// a length 64 tagCopy2 followed by a length 3 tagCopy2 (which encodes as"
    },
    {
      "sha": "03744fbc765349776680da71bb5c04cafea39e7b",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/blockdec.go",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fblockdec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fblockdec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fblockdec.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -554,6 +554,9 @@ func (b *blockDec) prepareSequences(in []byte, hist *history) (err error) {\n \t\tif debugDecoder {\n \t\t\tprintf(\"Compression modes: 0b%b\", compMode)\n \t\t}\n+\t\tif compMode&3 != 0 {\n+\t\t\treturn errors.New(\"corrupt block: reserved bits not zero\")\n+\t\t}\n \t\tfor i := uint(0); i < 3; i++ {\n \t\t\tmode := seqCompMode((compMode >> (6 - i*2)) & 3)\n \t\t\tif debugDecoder {"
    },
    {
      "sha": "32a7f401d5d2a7344ff713922afa01a4b6ff5f65",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/blockenc.go",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fblockenc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fblockenc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fblockenc.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -427,6 +427,16 @@ func (b *blockEnc) encodeLits(lits []byte, raw bool) error {\n \treturn nil\n }\n \n+// encodeRLE will encode an RLE block.\n+func (b *blockEnc) encodeRLE(val byte, length uint32) {\n+\tvar bh blockHeader\n+\tbh.setLast(b.last)\n+\tbh.setSize(length)\n+\tbh.setType(blockTypeRLE)\n+\tb.output = bh.appendTo(b.output)\n+\tb.output = append(b.output, val)\n+}\n+\n // fuzzFseEncoder can be used to fuzz the FSE encoder.\n func fuzzFseEncoder(data []byte) int {\n \tif len(data) > maxSequences || len(data) < 2 {\n@@ -479,6 +489,16 @@ func (b *blockEnc) encode(org []byte, raw, rawAllLits bool) error {\n \tif len(b.sequences) == 0 {\n \t\treturn b.encodeLits(b.literals, rawAllLits)\n \t}\n+\tif len(b.sequences) == 1 && len(org) > 0 && len(b.literals) <= 1 {\n+\t\t// Check common RLE cases.\n+\t\tseq := b.sequences[0]\n+\t\tif seq.litLen == uint32(len(b.literals)) && seq.offset-3 == 1 {\n+\t\t\t// Offset == 1 and 0 or 1 literals.\n+\t\t\tb.encodeRLE(org[0], b.sequences[0].matchLen+zstdMinMatch+seq.litLen)\n+\t\t\treturn nil\n+\t\t}\n+\t}\n+\n \t// We want some difference to at least account for the headers.\n \tsaved := b.size - len(b.literals) - (b.size >> 6)\n \tif saved < 16 {"
    },
    {
      "sha": "bbca17234aa0062144ce6bbf78d3a0cdc5c641be",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/decoder.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdecoder.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdecoder.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdecoder.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -82,7 +82,7 @@ var (\n // can run multiple concurrent stateless decodes. It is even possible to\n // use stateless decodes while a stream is being decoded.\n //\n-// The Reset function can be used to initiate a new stream, which is will considerably\n+// The Reset function can be used to initiate a new stream, which will considerably\n // reduce the allocations normally caused by NewReader.\n func NewReader(r io.Reader, opts ...DOption) (*Decoder, error) {\n \tinitPredefined()"
    },
    {
      "sha": "b7b83164bc76d572c6eb0541b25878e49575db63",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/dict.go",
      "status": "modified",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdict.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdict.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fdict.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -273,6 +273,9 @@ func BuildDict(o BuildDictOptions) ([]byte, error) {\n \t\tenc.Encode(&block, b)\n \t\taddValues(&remain, block.literals)\n \t\tlitTotal += len(block.literals)\n+\t\tif len(block.sequences) == 0 {\n+\t\t\tcontinue\n+\t\t}\n \t\tseqs += len(block.sequences)\n \t\tblock.genCodes()\n \t\taddHist(&ll, block.coders.llEnc.Histogram())\n@@ -286,6 +289,9 @@ func BuildDict(o BuildDictOptions) ([]byte, error) {\n \t\t\tif offset == 0 {\n \t\t\t\tcontinue\n \t\t\t}\n+\t\t\tif int(offset) >= len(o.History) {\n+\t\t\t\tcontinue\n+\t\t\t}\n \t\t\tif offset > 3 {\n \t\t\t\tnewOffsets[offset-3]++\n \t\t\t} else {\n@@ -336,6 +342,9 @@ func BuildDict(o BuildDictOptions) ([]byte, error) {\n \tif seqs/nUsed < 512 {\n \t\t// Use 512 as minimum.\n \t\tnUsed = seqs / 512\n+\t\tif nUsed == 0 {\n+\t\t\tnUsed = 1\n+\t\t}\n \t}\n \tcopyHist := func(dst *fseEncoder, src *[256]int) ([]byte, error) {\n \t\thist := dst.Histogram()\n@@ -358,6 +367,28 @@ func BuildDict(o BuildDictOptions) ([]byte, error) {\n \t\t\tfakeLength += v\n \t\t\thist[i] = uint32(v)\n \t\t}\n+\n+\t\t// Ensure we aren't trying to represent RLE.\n+\t\tif maxCount == fakeLength {\n+\t\t\tfor i := range hist {\n+\t\t\t\tif uint8(i) == maxSym {\n+\t\t\t\t\tfakeLength++\n+\t\t\t\t\tmaxSym++\n+\t\t\t\t\thist[i+1] = 1\n+\t\t\t\t\tif maxSym > 1 {\n+\t\t\t\t\t\tbreak\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif hist[0] == 0 {\n+\t\t\t\t\tfakeLength++\n+\t\t\t\t\thist[i] = 1\n+\t\t\t\t\tif maxSym > 1 {\n+\t\t\t\t\t\tbreak\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n \t\tdst.HistogramFinished(maxSym, maxCount)\n \t\tdst.reUsed = false\n \t\tdst.useRLE = false"
    },
    {
      "sha": "4613724e9d1417600609ccd78c017a1f5d7da5c4",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/enc_best.go",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fenc_best.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fenc_best.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fenc_best.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -135,8 +135,20 @@ func (e *bestFastEncoder) Encode(blk *blockEnc, src []byte) {\n \t\tbreak\n \t}\n \n+\t// Add block to history\n \ts := e.addBlock(src)\n \tblk.size = len(src)\n+\n+\t// Check RLE first\n+\tif len(src) > zstdMinMatch {\n+\t\tml := matchLen(src[1:], src)\n+\t\tif ml == len(src)-1 {\n+\t\t\tblk.literals = append(blk.literals, src[0])\n+\t\t\tblk.sequences = append(blk.sequences, seq{litLen: 1, matchLen: uint32(len(src)-1) - zstdMinMatch, offset: 1 + 3})\n+\t\t\treturn\n+\t\t}\n+\t}\n+\n \tif len(src) < minNonLiteralBlockSize {\n \t\tblk.extraLits = len(src)\n \t\tblk.literals = blk.literals[:len(src)]"
    },
    {
      "sha": "a4f5bf91fc63b33a9f821d4d0b24675eeb01a2fc",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/enc_better.go",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fenc_better.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fenc_better.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fenc_better.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -102,9 +102,20 @@ func (e *betterFastEncoder) Encode(blk *blockEnc, src []byte) {\n \t\te.cur = e.maxMatchOff\n \t\tbreak\n \t}\n-\n+\t// Add block to history\n \ts := e.addBlock(src)\n \tblk.size = len(src)\n+\n+\t// Check RLE first\n+\tif len(src) > zstdMinMatch {\n+\t\tml := matchLen(src[1:], src)\n+\t\tif ml == len(src)-1 {\n+\t\t\tblk.literals = append(blk.literals, src[0])\n+\t\t\tblk.sequences = append(blk.sequences, seq{litLen: 1, matchLen: uint32(len(src)-1) - zstdMinMatch, offset: 1 + 3})\n+\t\t\treturn\n+\t\t}\n+\t}\n+\n \tif len(src) < minNonLiteralBlockSize {\n \t\tblk.extraLits = len(src)\n \t\tblk.literals = blk.literals[:len(src)]"
    },
    {
      "sha": "ae7d4d3295a4a13b1489b551ce766343bfde3384",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/internal/xxhash/xxhash_arm64.s",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Finternal%2Fxxhash%2Fxxhash_arm64.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Finternal%2Fxxhash%2Fxxhash_arm64.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Finternal%2Fxxhash%2Fxxhash_arm64.s?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -162,12 +162,12 @@ finalize:\n \tMOVD h, ret+24(FP)\n \tRET\n \n-// func writeBlocks(d *Digest, b []byte) int\n+// func writeBlocks(s *Digest, b []byte) int\n TEXT ·writeBlocks(SB), NOSPLIT|NOFRAME, $0-40\n \tLDP ·primes+0(SB), (prime1, prime2)\n \n \t// Load state. Assume v[1-4] are stored contiguously.\n-\tMOVD d+0(FP), digest\n+\tMOVD s+0(FP), digest\n \tLDP  0(digest), (v1, v2)\n \tLDP  16(digest), (v3, v4)\n "
    },
    {
      "sha": "0782b86e3d15dd36da5eec2788cf4af7fa9785de",
      "filename": "backend/vendor/github.com/klauspost/compress/zstd/matchlen_amd64.s",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fmatchlen_amd64.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fmatchlen_amd64.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fklauspost%2Fcompress%2Fzstd%2Fmatchlen_amd64.s?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -5,7 +5,6 @@\n #include \"textflag.h\"\n \n // func matchLen(a []byte, b []byte) int\n-// Requires: BMI\n TEXT ·matchLen(SB), NOSPLIT, $0-56\n \tMOVQ a_base+0(FP), AX\n \tMOVQ b_base+24(FP), CX\n@@ -17,17 +16,16 @@ TEXT ·matchLen(SB), NOSPLIT, $0-56\n \tJB   matchlen_match4_standalone\n \n matchlen_loopback_standalone:\n-\tMOVQ  (AX)(SI*1), BX\n-\tXORQ  (CX)(SI*1), BX\n-\tTESTQ BX, BX\n-\tJZ    matchlen_loop_standalone\n+\tMOVQ (AX)(SI*1), BX\n+\tXORQ (CX)(SI*1), BX\n+\tJZ   matchlen_loop_standalone\n \n #ifdef GOAMD64_v3\n \tTZCNTQ BX, BX\n #else\n \tBSFQ BX, BX\n #endif\n-\tSARQ $0x03, BX\n+\tSHRL $0x03, BX\n \tLEAL (SI)(BX*1), SI\n \tJMP  gen_match_len_end\n "
    },
    {
      "sha": "e825ebd0bcc587a5cc8c2a092e21f1403486a964",
      "filename": "backend/vendor/github.com/kyokomi/emoji/v2/emoji.go",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Femoji.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Femoji.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Femoji.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -66,17 +66,17 @@ func regionalIndicator(i byte) string {\n \treturn string('\\U0001F1E6' + rune(i) - 'a')\n }\n \n-func replaseEmoji(input *bytes.Buffer) string {\n+func replaceEmoji(input *bytes.Buffer) string {\n \temoji := bytes.NewBufferString(\":\")\n \tfor {\n \t\ti, _, err := input.ReadRune()\n \t\tif err != nil {\n-\t\t\t// not replase\n+\t\t\t// not replace\n \t\t\treturn emoji.String()\n \t\t}\n \n \t\tif i == ':' && emoji.Len() == 1 {\n-\t\t\treturn emoji.String() + replaseEmoji(input)\n+\t\t\treturn emoji.String() + replaceEmoji(input)\n \t\t}\n \n \t\temoji.WriteRune(i)\n@@ -106,7 +106,7 @@ func compile(x string) string {\n \t\tdefault:\n \t\t\toutput.WriteRune(i)\n \t\tcase ':':\n-\t\t\toutput.WriteString(replaseEmoji(input))\n+\t\t\toutput.WriteString(replaceEmoji(input))\n \t\t}\n \t}\n \treturn output.String()"
    },
    {
      "sha": "a6e039e4ba60149b32e7f095de115db84931b064",
      "filename": "backend/vendor/github.com/kyokomi/emoji/v2/emoji_codemap.go",
      "status": "modified",
      "additions": 4316,
      "deletions": 4260,
      "changes": 8576,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Femoji_codemap.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Femoji_codemap.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Femoji_codemap.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "e0c87602f01696699ebe2ee0cdd1caeb15d0af6f",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/.coveralls.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.coveralls.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.coveralls.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.coveralls.yml?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1 +0,0 @@\n-repo_token: x2wlA1x0X8CK45ybWpZRCVRB4g7vtkhaw"
    },
    {
      "sha": "006bc2fc77947fe7b757f8901b291dc5493ef1a1",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/.editorconfig",
      "status": "removed",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.editorconfig",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.editorconfig",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.editorconfig?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,4 +0,0 @@\n-root = true\n-\n-[*]\n-end_of_line = lf"
    },
    {
      "sha": "6313b56c57848efce05faa7aa7e901ccfc2886ea",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/.gitattributes",
      "status": "removed",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.gitattributes",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.gitattributes",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.gitattributes?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1 +0,0 @@\n-* text=auto eol=lf"
    },
    {
      "sha": "c3df40e7c387e91680d9eb2d2c938aa86b9e40ad",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/.gitignore",
      "status": "removed",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.gitignore",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.gitignore?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,15 +0,0 @@\n- # Binaries for programs and plugins\n-*.exe\n-*.exe~\n-*.dll\n-*.so\n-*.dylib\n-\n-# Test binary, built with `go test -c`\n-*.test\n-\n-# Output of the go coverage tool, specifically when used with LiteIDE\n-*.out\n-\n-# goland idea folder\n-*.idea\n\\ No newline at end of file"
    },
    {
      "sha": "97175fbb82b2354502f579320ca7f66f16da6fce",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/.travis.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.travis.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2F.travis.yml?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,26 +0,0 @@\n-language: go\n-go:\n-  - 1.2.x\n-  - 1.3.x\n-  - 1.4.x\n-  - 1.5.x\n-  - 1.6.x\n-  - 1.7.x\n-  - 1.8.x\n-  - 1.9.x\n-  - 1.10.x\n-  - 1.11.x\n-  - 1.12.x\n-  - 1.13.x\n-  - 1.14.x\n-  - 1.15.x\n-  - 1.16.x\n-  - tip\n-matrix:\n-  allow_failures:\n-    - go: tip\n-  fast_finish: true\n-install:\n-  - go get .\n-script:\n-  - go test -v ./..."
    },
    {
      "sha": "d33909f8112e1d0a954655d8ac9e6b96cdbdd140",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/CONTRIBUTING.md",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FCONTRIBUTING.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FCONTRIBUTING.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FCONTRIBUTING.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -8,7 +8,7 @@ Third-party patches are essential for keeping bluemonday secure and offering the\n \n ## Guidelines\n \n-1. Do not vendor dependencies. As a security package, were we to vendor dependencies the projects that then vendor bluemonday may not receive the latest security updates to the dependencies. By not vendoring dependencies the project that implements bluemonday will vendor the latest version of any dependent packages. Vendoring is a project problem, not a package problem. bluemonday will be tested against the latest version of dependencies periodically and during any PR/merge.\n+1. Do not vendor dependencies. Vendoring is a project problem, not a package problem. \n 2. I do not care about spelling mistakes or whitespace and I do not believe that you should either. PRs therefore must be functional in their nature or be substantial and impactful if documentation or examples.\n 3. This module does not participate in hacktober, please make your contributions meaningful.\n \n@@ -31,10 +31,9 @@ If you are reporting a security flaw, you may expect that we will provide the co\n   1. Include tests for your patch, 1 test should encapsulate the entire patch and should refer to the Github issue\n   1. If you have added new exposed/public functionality, you should ensure it is documented appropriately\n   1. If you have added new exposed/public functionality, you should consider demonstrating how to use it within one of the helpers or shipped policies if appropriate or within a test if modifying a helper or policy is not appropriate\n-  1. Run all of the tests `go test -v ./...` or `make test` and ensure all tests pass\n-  1. Run gofmt `gofmt -w ./$*` or `make fmt`\n-  1. Run vet `go tool vet *.go` or `make vet` and resolve any issues\n-  1. Install golint using `go get -u github.com/golang/lint/golint` and run vet `golint *.go` or `make lint` and resolve every warning\n+  1. Run all of the tests `go test -v ./...` and ensure all tests pass\n+  1. Run gofmt `go fmt ./...`\n+  1. Run vet `go vet ./...` and resolve any issues\n * When submitting the pull request you should\n   1. Note the issue(s) it resolves, i.e. `Closes #6` in the pull request comment to close issue #6 when the pull request is accepted\n "
    },
    {
      "sha": "f822458ed0c4f8707c940247e5a19bb5f0909aef",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/LICENSE.md",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FLICENSE.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FLICENSE.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FLICENSE.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,6 +1,3 @@\n-SPDX short identifier: BSD-3-Clause\n-https://opensource.org/licenses/BSD-3-Clause\n-\n Copyright (c) 2014, David Kitchen <david@buro9.com>\n \n All rights reserved."
    },
    {
      "sha": "97e9541d6f3dc3a49c672665ba20d9d2d950aa3d",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/Makefile",
      "status": "removed",
      "additions": 0,
      "deletions": 48,
      "changes": 48,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FMakefile",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FMakefile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FMakefile?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,48 +0,0 @@\n-# Targets:\n-#\n-#   all:          Builds the code locally after testing\n-#\n-#   fmt:          Formats the source files\n-#   fmt-check:    Check if the source files are formated\n-#   build:        Builds the code locally\n-#   vet:          Vets the code\n-#   staticcheck:  Runs staticcheck over the code\n-#   test:         Runs the tests\n-#   cover:        Gives you the URL to a nice test coverage report\n-#\n-#   install:      Builds, tests and installs the code locally\n-\n-GOFILES_NOVENDOR = $(shell find . -type f -name '*.go' -not -path \"./vendor/*\" -not -path \"./.git/*\")\n-\n-.PHONY: all fmt build vet lint test cover install\n-\n-# The first target is always the default action if `make` is called without\n-# args we build and install into $GOPATH so that it can just be run\n-\n-all: fmt vet test install\n-\n-fmt:\n-\t@gofmt -s -w ${GOFILES_NOVENDOR}\n-\n-fmt-check:\n-\t@([ -z \"$(shell gofmt -d $(GOFILES_NOVENDOR) | head)\" ]) || (echo \"Source is unformatted\"; exit 1)\n-\n-build:\n-\t@go build\n-\n-vet:\n-\t@go vet\n-\n-staticcheck:\n-\t@staticcheck ./...\n-\n-test:\n-\t@go test -v ./...\n-\n-cover: COVERAGE_FILE := coverage.out\n-cover:\n-\t@go test -coverprofile=$(COVERAGE_FILE) && \\\n-\tgo tool cover -html=$(COVERAGE_FILE) && rm $(COVERAGE_FILE)\n-\n-install:\n-\t@go install ./..."
    },
    {
      "sha": "023a3041f1b06480ce64a6b17fa9add9220fd668",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 33,
      "changes": 34,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FREADME.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -56,14 +56,6 @@ The policy containing the allowlist is applied using a fast non-validating, forw\n \n We expect to be supplied with well-formatted HTML (closing elements for every applicable open element, nested correctly) and so we do not focus on repairing badly nested or incomplete HTML. We focus on simply ensuring that whatever elements do exist are described in the policy allowlist and that attributes and links are safe for use on your web page. [GIGO](http://en.wikipedia.org/wiki/Garbage_in,_garbage_out) does apply and if you feed it bad HTML bluemonday is not tasked with figuring out how to make it good again.\n \n-### Supported Go Versions\n-\n-bluemonday is tested on all versions since Go 1.2 including tip.\n-\n-We do not support Go 1.0 as we depend on `golang.org/x/net/html` which includes a reference to `io.ErrNoProgress` which did not exist in Go 1.0.\n-\n-We support Go 1.1 but Travis no longer tests against it.\n-\n ## Is it production ready?\n \n *Yes*\n@@ -76,7 +68,7 @@ We invite pull requests and issues to help us ensure we are offering comprehensi\n \n ## Usage\n \n-Install in your `${GOPATH}` using `go get -u github.com/microcosm-cc/bluemonday`\n+Install using `go get github.com/microcosm-cc/bluemonday`\n \n Then call it:\n ```go\n@@ -388,30 +380,6 @@ It is not the job of bluemonday to fix your bad HTML, it is merely the job of bl\n * Investigate whether devs want to blacklist elements and attributes. This would allow devs to take an existing policy (such as the `bluemonday.UGCPolicy()` ) that encapsulates 90% of what they're looking for but does more than they need, and to remove the extra things they do not want to make it 100% what they want\n * Investigate whether devs want a validating HTML mode, in which the HTML elements are not just transformed into a balanced tree (every start tag has a closing tag at the correct depth) but also that elements and character data appear only in their allowed context (i.e. that a `table` element isn't a descendent of a `caption`, that `colgroup`, `thead`, `tbody`, `tfoot` and `tr` are permitted, and that character data is not permitted)\n \n-## Development\n-\n-If you have cloned this repo you will probably need the dependency:\n-\n-`go get golang.org/x/net/html`\n-\n-Gophers can use their familiar tools:\n-\n-`go build`\n-\n-`go test`\n-\n-I personally use a Makefile as it spares typing the same args over and over whilst providing consistency for those of us who jump from language to language and enjoy just typing `make` in a project directory and watch magic happen.\n-\n-`make` will build, vet, test and install the library.\n-\n-`make clean` will remove the library from a *single* `${GOPATH}/pkg` directory tree\n-\n-`make test` will run the tests\n-\n-`make cover` will run the tests and *open a browser window* with the coverage report\n-\n-`make lint` will run golint (install via `go get github.com/golang/lint/golint`)\n-\n ## Long term goals\n \n 1. Open the code to adversarial peer review similar to the [Attack Review Ground Rules](https://code.google.com/p/owasp-java-html-sanitizer/wiki/AttackReviewGroundRules)"
    },
    {
      "sha": "682364e372899aff8fe1743da8a3368a24d6fffe",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/SECURITY.md",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FSECURITY.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FSECURITY.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FSECURITY.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -4,12 +4,10 @@\n \n Latest tag and tip are supported.\n \n-Older tags remain present but changes result in new tags and are not back ported... please verify any issue against the latest tag and tip.\n+Changes are not backported, please verify any issue against the latest tag and tip.\n \n ## Reporting a Vulnerability\n \n-Email: <bluemonday@buro9.com>\n+Report vulnerabilities either via [GitHub's private reporting flow](https://github.com/microcosm-cc/bluemonday/security/advisories/new) or via email to the security@ alias of geomys.org.\n \n-Bluemonday is pure OSS and not maintained by a company. As such there is no bug bounty program but security issues will be taken seriously and resolved as soon as possible.\n-\n-The maintainer lives in the United Kingdom and whilst the email is monitored expect a reply or ACK when the maintainer is awake.\n+There is no bug bounty program but security issues will be taken seriously and resolved as soon as possible."
    },
    {
      "sha": "41a00c8cb49c75c1c7437449aa4905126a778cea",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/css/handlers.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fcss%2Fhandlers.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fcss%2Fhandlers.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fcss%2Fhandlers.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -291,7 +291,7 @@ var (\n \tFont              = regexp.MustCompile(`^('[a-z \\-]+'|[a-z \\-]+)$`)\n \tGrayscale         = regexp.MustCompile(`^grayscale\\(([0-9]{1,2}|100)%\\)$`)\n \tGridTemplateAreas = regexp.MustCompile(`^['\"]?[a-z ]+['\"]?$`)\n-\tHexRGB            = regexp.MustCompile(`^#([0-9a-f]{3}|[0-9a-f]{6}|[0-9a-f]{8})$`)\n+\tHexRGB            = regexp.MustCompile(`^#([0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$`)\n \tHSL               = regexp.MustCompile(`^hsl\\([ ]*([012]?[0-9]{1,2}|3[0-5][0-9]|360),[ ]*([0-9]{0,2}|100)\\%,[ ]*([0-9]{0,2}|100)\\%\\)$`)\n \tHSLA              = regexp.MustCompile(`^hsla\\(([ ]*[012]?[0-9]{1,2}|3[0-5][0-9]|360),[ ]*([0-9]{0,2}|100)\\%,[ ]*([0-9]{0,2}|100)\\%,[ ]*(1|1\\.0|0|(0\\.[0-9]+))\\)$`)\n \tHueRotate         = regexp.MustCompile(`^hue-rotate\\(([12]?[0-9]{1,2}|3[0-5][0-9]|360)?\\)$`)"
    },
    {
      "sha": "47c31f7daf772841498102df025085126d5d5f68",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/sanitize.go",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fsanitize.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fsanitize.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fsanitize.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -529,9 +529,11 @@ attrsLoop:\n \t\t\t\tif ap.regexp != nil {\n \t\t\t\t\tif ap.regexp.MatchString(htmlAttr.Val) {\n \t\t\t\t\t\tcleanAttrs = append(cleanAttrs, htmlAttr)\n+\t\t\t\t\t\tcontinue attrsLoop\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tcleanAttrs = append(cleanAttrs, htmlAttr)\n+\t\t\t\t\tcontinue attrsLoop\n \t\t\t\t}\n \t\t\t}\n \t\t}\n@@ -762,10 +764,10 @@ attrsLoop:\n \t\tswitch elementName {\n \t\tcase \"audio\", \"img\", \"link\", \"script\", \"video\":\n \t\t\tvar crossOriginFound bool\n-\t\t\tfor _, htmlAttr := range cleanAttrs {\n+\t\t\tfor i, htmlAttr := range cleanAttrs {\n \t\t\t\tif htmlAttr.Key == \"crossorigin\" {\n \t\t\t\t\tcrossOriginFound = true\n-\t\t\t\t\thtmlAttr.Val = \"anonymous\"\n+\t\t\t\t\tcleanAttrs[i].Val = \"anonymous\"\n \t\t\t\t}\n \t\t\t}\n \n@@ -1087,3 +1089,8 @@ func normaliseElementName(str string) string {\n \t\t`\"`,\n \t)\n }\n+\n+type stringWriterWriter interface {\n+\tio.Writer\n+\tio.StringWriter\n+}"
    },
    {
      "sha": "5d96b9778fe745ed0fd429e6722d21e9706fce87",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/stringwriterwriter_go1.12.go",
      "status": "removed",
      "additions": 0,
      "deletions": 11,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fstringwriterwriter_go1.12.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fstringwriterwriter_go1.12.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fstringwriterwriter_go1.12.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,11 +0,0 @@\n-//go:build go1.12\n-// +build go1.12\n-\n-package bluemonday\n-\n-import \"io\"\n-\n-type stringWriterWriter interface {\n-\tio.Writer\n-\tio.StringWriter\n-}"
    },
    {
      "sha": "ecdaa92cac348671df1fc4d2ff411dcae92b484d",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/stringwriterwriter_ltgo1.12.go",
      "status": "removed",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fstringwriterwriter_ltgo1.12.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fstringwriterwriter_ltgo1.12.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fstringwriterwriter_ltgo1.12.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,15 +0,0 @@\n-//go:build go1.1 && !go1.12\n-// +build go1.1,!go1.12\n-\n-package bluemonday\n-\n-import \"io\"\n-\n-type stringWriterWriter interface {\n-\tio.Writer\n-\tStringWriter\n-}\n-\n-type StringWriter interface {\n-\tWriteString(s string) (n int, err error)\n-}"
    },
    {
      "sha": "fd46abfc42f39bd25cfce3c08eb6d8e0fdc6d0f1",
      "filename": "backend/vendor/github.com/slack-go/slack/slash.go",
      "status": "modified",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fslack-go%2Fslack%2Fslash.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgithub.com%2Fslack-go%2Fslack%2Fslash.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fslack-go%2Fslack%2Fslash.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,7 +1,10 @@\n package slack\n \n import (\n+\t\"encoding/json\"\n+\t\"fmt\"\n \t\"net/http\"\n+\t\"strconv\"\n )\n \n // SlashCommand contains information about a request of the slash command\n@@ -55,3 +58,34 @@ func (s SlashCommand) ValidateToken(verificationTokens ...string) bool {\n \t}\n \treturn false\n }\n+\n+// UnmarshalJSON handles is_enterprise_install being either a boolean or a\n+// string when parsing JSON from various payloads\n+func (s *SlashCommand) UnmarshalJSON(data []byte) error {\n+\ttype SlashCommandCopy SlashCommand\n+\tscopy := &struct {\n+\t\t*SlashCommandCopy\n+\t\tIsEnterpriseInstall interface{} `json:\"is_enterprise_install\"`\n+\t}{\n+\t\tSlashCommandCopy: (*SlashCommandCopy)(s),\n+\t}\n+\n+\tif err := json.Unmarshal(data, scopy); err != nil {\n+\t\treturn err\n+\t}\n+\n+\tswitch rawValue := scopy.IsEnterpriseInstall.(type) {\n+\tcase string:\n+\t\tb, err := strconv.ParseBool(rawValue)\n+\t\tif err != nil {\n+\t\t\treturn fmt.Errorf(\"parsing boolean for is_enterprise_install: %w\", err)\n+\t\t}\n+\t\ts.IsEnterpriseInstall = b\n+\tcase bool:\n+\t\ts.IsEnterpriseInstall = rawValue\n+\tdefault:\n+\t\treturn fmt.Errorf(\"wrong data type for is_enterprise_install: %T\", scopy.IsEnterpriseInstall)\n+\t}\n+\n+\treturn nil\n+}"
    },
    {
      "sha": "3608f7dc794c1548140ae48d954c1220a7a6cf7f",
      "filename": "backend/vendor/github.com/youmark/pkcs8/.travis.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2F.travis.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2F.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fyoumark%2Fpkcs8%2F.travis.yml?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,14 +0,0 @@\n-arch:\n-    - amd64\n-    - ppc64le\n-language: go\n-\n-go:\n-  - \"1.10.x\"\n-  - \"1.11.x\"\n-  - \"1.12.x\"\n-  - \"1.13.x\"\n-  - master\n-\n-script:\n-  - go test -v ./..."
    },
    {
      "sha": "f124bfa155441cd3ef707e2bfb3923d8051f570c",
      "filename": "backend/vendor/go.etcd.io/bbolt/.go-version",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2F.go-version",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2F.go-version",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2F.go-version?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1 @@\n+1.21.9"
    },
    {
      "sha": "495a93ef8f38d4a404b0b9fb5cd69f217aa51782",
      "filename": "backend/vendor/go.etcd.io/bbolt/README.md",
      "status": "modified",
      "additions": 19,
      "deletions": 4,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2FREADME.md?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -421,10 +421,19 @@ Prev()   Move to the previous key.\n ```\n \n Each of those functions has a return signature of `(key []byte, value []byte)`.\n-When you have iterated to the end of the cursor then `Next()` will return a\n-`nil` key.  You must seek to a position using `First()`, `Last()`, or `Seek()`\n-before calling `Next()` or `Prev()`. If you do not seek to a position then\n-these functions will return a `nil` key.\n+You must seek to a position using `First()`, `Last()`, or `Seek()` before calling\n+`Next()` or `Prev()`. If you do not seek to a position then these functions will\n+return a `nil` key.\n+\n+When you have iterated to the end of the cursor, then `Next()` will return a\n+`nil` key and the cursor still points to the last element if present. When you\n+have iterated to the beginning of the cursor, then `Prev()` will return a `nil`\n+key and the cursor still points to the first element if present.\n+\n+If you remove key/value pairs during iteration, the cursor may automatically\n+move to the next position if present in current node each time removing a key.\n+When you call `c.Next()` after removing a key, it may skip one key/value pair.\n+Refer to [pull/611](https://github.com/etcd-io/bbolt/pull/611) to get more detailed info.\n \n During iteration, if the key is non-`nil` but the value is `nil`, that means\n the key refers to a bucket rather than a value.  Use `Bucket.Bucket()` to\n@@ -850,6 +859,12 @@ Here are a few things to note when evaluating and using Bolt:\n   to grow. However, it's important to note that deleting large chunks of data\n   will not allow you to reclaim that space on disk.\n \n+* Removing key/values pairs in a bucket during iteration on the bucket using\n+  cursor may not work properly. Each time when removing a key/value pair, the\n+  cursor may automatically move to the next position if present. When users\n+  call `c.Next()` after removing a key, it may skip one key/value pair.\n+  Refer to https://github.com/etcd-io/bbolt/pull/611 for more detailed info.\n+\n   For more information on page allocation, [see this comment][page-allocation].\n \n [page-allocation]: https://github.com/boltdb/bolt/issues/308#issuecomment-74811638"
    },
    {
      "sha": "bbfd92a9bc1ee4297c02ad2421e8abfca649c2fe",
      "filename": "backend/vendor/go.etcd.io/bbolt/cursor.go",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fcursor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fcursor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fcursor.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -71,7 +71,7 @@ func (c *Cursor) Last() (key []byte, value []byte) {\n \n \t// If this is an empty page (calling Delete may result in empty pages)\n \t// we call prev to find the last page that is not empty\n-\tfor len(c.stack) > 0 && c.stack[len(c.stack)-1].count() == 0 {\n+\tfor len(c.stack) > 1 && c.stack[len(c.stack)-1].count() == 0 {\n \t\tc.prev()\n \t}\n \n@@ -254,6 +254,15 @@ func (c *Cursor) prev() (key []byte, value []byte, flags uint32) {\n \t\t\telem.index--\n \t\t\tbreak\n \t\t}\n+\t\t// If we've hit the beginning, we should stop moving the cursor,\n+\t\t// and stay at the first element, so that users can continue to\n+\t\t// iterate over the elements in reverse direction by calling `Next`.\n+\t\t// We should return nil in such case.\n+\t\t// Refer to https://github.com/etcd-io/bbolt/issues/733\n+\t\tif len(c.stack) == 1 {\n+\t\t\tc.first()\n+\t\t\treturn nil, nil, 0\n+\t\t}\n \t\tc.stack = c.stack[:i]\n \t}\n "
    },
    {
      "sha": "61d43f81b46db95a5ee8bf09af768c2d66f512fc",
      "filename": "backend/vendor/go.etcd.io/bbolt/freelist.go",
      "status": "modified",
      "additions": 4,
      "deletions": 7,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ffreelist.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ffreelist.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Ffreelist.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -282,9 +282,8 @@ func (f *freelist) read(p *page) {\n \tif count == 0 {\n \t\tf.ids = nil\n \t} else {\n-\t\tvar ids []pgid\n-\t\tdata := unsafeIndex(unsafe.Pointer(p), unsafe.Sizeof(*p), unsafe.Sizeof(ids[0]), idx)\n-\t\tunsafeSlice(unsafe.Pointer(&ids), data, count)\n+\t\tdata := unsafeIndex(unsafe.Pointer(p), unsafe.Sizeof(*p), unsafe.Sizeof(pgid(0)), idx)\n+\t\tids := unsafe.Slice((*pgid)(data), count)\n \n \t\t// copy the ids, so we don't modify on the freelist page directly\n \t\tidsCopy := make([]pgid, count)\n@@ -322,15 +321,13 @@ func (f *freelist) write(p *page) error {\n \t\tp.count = uint16(l)\n \t} else if l < 0xFFFF {\n \t\tp.count = uint16(l)\n-\t\tvar ids []pgid\n \t\tdata := unsafeAdd(unsafe.Pointer(p), unsafe.Sizeof(*p))\n-\t\tunsafeSlice(unsafe.Pointer(&ids), data, l)\n+\t\tids := unsafe.Slice((*pgid)(data), l)\n \t\tf.copyall(ids)\n \t} else {\n \t\tp.count = 0xFFFF\n-\t\tvar ids []pgid\n \t\tdata := unsafeAdd(unsafe.Pointer(p), unsafe.Sizeof(*p))\n-\t\tunsafeSlice(unsafe.Pointer(&ids), data, l+1)\n+\t\tids := unsafe.Slice((*pgid)(data), l+1)\n \t\tids[0] = pgid(l)\n \t\tf.copyall(ids[1:])\n \t}"
    },
    {
      "sha": "bb081b031e659941c59326ca5da1db25da7f7e26",
      "filename": "backend/vendor/go.etcd.io/bbolt/page.go",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fpage.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fpage.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Fpage.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -74,9 +74,8 @@ func (p *page) leafPageElements() []leafPageElement {\n \tif p.count == 0 {\n \t\treturn nil\n \t}\n-\tvar elems []leafPageElement\n \tdata := unsafeAdd(unsafe.Pointer(p), unsafe.Sizeof(*p))\n-\tunsafeSlice(unsafe.Pointer(&elems), data, int(p.count))\n+\telems := unsafe.Slice((*leafPageElement)(data), int(p.count))\n \treturn elems\n }\n \n@@ -91,9 +90,8 @@ func (p *page) branchPageElements() []branchPageElement {\n \tif p.count == 0 {\n \t\treturn nil\n \t}\n-\tvar elems []branchPageElement\n \tdata := unsafeAdd(unsafe.Pointer(p), unsafe.Sizeof(*p))\n-\tunsafeSlice(unsafe.Pointer(&elems), data, int(p.count))\n+\telems := unsafe.Slice((*branchPageElement)(data), int(p.count))\n \treturn elems\n }\n "
    },
    {
      "sha": "7745d32ce194fe70ebfff18b6bda94d99a709b57",
      "filename": "backend/vendor/go.etcd.io/bbolt/unsafe.go",
      "status": "modified",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Funsafe.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Funsafe.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.etcd.io%2Fbbolt%2Funsafe.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -1,7 +1,6 @@\n package bbolt\n \n import (\n-\t\"reflect\"\n \t\"unsafe\"\n )\n \n@@ -26,14 +25,3 @@ func unsafeByteSlice(base unsafe.Pointer, offset uintptr, i, j int) []byte {\n \t// all), so this is believed to be correct.\n \treturn (*[maxAllocSize]byte)(unsafeAdd(base, offset))[i:j:j]\n }\n-\n-// unsafeSlice modifies the data, len, and cap of a slice variable pointed to by\n-// the slice parameter.  This helper should be used over other direct\n-// manipulation of reflect.SliceHeader to prevent misuse, namely, converting\n-// from reflect.SliceHeader to a Go slice type.\n-func unsafeSlice(slice, data unsafe.Pointer, len int) {\n-\ts := (*reflect.SliceHeader)(slice)\n-\ts.Data = uintptr(data)\n-\ts.Cap = len\n-\ts.Len = len\n-}"
    },
    {
      "sha": "fc4a7b1dbf587eb81d1a2200e35598b5b2d8ebdf",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/default_value_decoders.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fdefault_value_decoders.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fdefault_value_decoders.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fdefault_value_decoders.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -330,7 +330,7 @@ func (DefaultValueDecoders) intDecodeType(dc DecodeContext, vr bsonrw.ValueReade\n \tcase reflect.Int64:\n \t\treturn reflect.ValueOf(i64), nil\n \tcase reflect.Int:\n-\t\tif int64(int(i64)) != i64 { // Can we fit this inside of an int\n+\t\tif i64 > math.MaxInt { // Can we fit this inside of an int\n \t\t\treturn emptyValue, fmt.Errorf(\"%d overflows int\", i64)\n \t\t}\n \n@@ -434,7 +434,7 @@ func (dvd DefaultValueDecoders) UintDecodeValue(dc DecodeContext, vr bsonrw.Valu\n \t\t\treturn fmt.Errorf(\"%d overflows uint64\", i64)\n \t\t}\n \tcase reflect.Uint:\n-\t\tif i64 < 0 || int64(uint(i64)) != i64 { // Can we fit this inside of an uint\n+\t\tif i64 < 0 || uint64(i64) > uint64(math.MaxUint) { // Can we fit this inside of an uint\n \t\t\treturn fmt.Errorf(\"%d overflows uint\", i64)\n \t\t}\n \tdefault:"
    },
    {
      "sha": "39b07135b18268d6f25d3a74ddaeebec9a4b7999",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/uint_codec.go",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fuint_codec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fuint_codec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fuint_codec.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -164,11 +164,15 @@ func (uic *UIntCodec) decodeType(dc DecodeContext, vr bsonrw.ValueReader, t refl\n \n \t\treturn reflect.ValueOf(uint64(i64)), nil\n \tcase reflect.Uint:\n-\t\tif i64 < 0 || int64(uint(i64)) != i64 { // Can we fit this inside of an uint\n+\t\tif i64 < 0 {\n+\t\t\treturn emptyValue, fmt.Errorf(\"%d overflows uint\", i64)\n+\t\t}\n+\t\tv := uint64(i64)\n+\t\tif v > math.MaxUint { // Can we fit this inside of an uint\n \t\t\treturn emptyValue, fmt.Errorf(\"%d overflows uint\", i64)\n \t\t}\n \n-\t\treturn reflect.ValueOf(uint(i64)), nil\n+\t\treturn reflect.ValueOf(uint(v)), nil\n \tdefault:\n \t\treturn emptyValue, ValueDecoderError{\n \t\t\tName:     \"UintDecodeValue\","
    },
    {
      "sha": "af6ae7b76bfad9c877629b4f9ef47d2d96a1d515",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsonrw/extjson_wrappers.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fextjson_wrappers.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fextjson_wrappers.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fextjson_wrappers.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -95,9 +95,9 @@ func (ejv *extJSONValue) parseBinary() (b []byte, subType byte, err error) {\n \t\t\t\treturn nil, 0, fmt.Errorf(\"$binary subType value should be string, but instead is %s\", val.t)\n \t\t\t}\n \n-\t\t\ti, err := strconv.ParseInt(val.v.(string), 16, 64)\n+\t\t\ti, err := strconv.ParseUint(val.v.(string), 16, 8)\n \t\t\tif err != nil {\n-\t\t\t\treturn nil, 0, fmt.Errorf(\"invalid $binary subType string: %s\", val.v.(string))\n+\t\t\t\treturn nil, 0, fmt.Errorf(\"invalid $binary subType string: %q: %w\", val.v.(string), err)\n \t\t\t}\n \n \t\t\tsubType = byte(i)"
    },
    {
      "sha": "0e07d505586c3010ccfe191f53e7e04d7a5cb051",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsonrw/value_reader.go",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fvalue_reader.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fvalue_reader.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsonrw%2Fvalue_reader.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -842,7 +842,7 @@ func (vr *valueReader) peekLength() (int32, error) {\n \t}\n \n \tidx := vr.offset\n-\treturn (int32(vr.d[idx]) | int32(vr.d[idx+1])<<8 | int32(vr.d[idx+2])<<16 | int32(vr.d[idx+3])<<24), nil\n+\treturn int32(binary.LittleEndian.Uint32(vr.d[idx:])), nil\n }\n \n func (vr *valueReader) readLength() (int32, error) { return vr.readi32() }\n@@ -854,7 +854,7 @@ func (vr *valueReader) readi32() (int32, error) {\n \n \tidx := vr.offset\n \tvr.offset += 4\n-\treturn (int32(vr.d[idx]) | int32(vr.d[idx+1])<<8 | int32(vr.d[idx+2])<<16 | int32(vr.d[idx+3])<<24), nil\n+\treturn int32(binary.LittleEndian.Uint32(vr.d[idx:])), nil\n }\n \n func (vr *valueReader) readu32() (uint32, error) {\n@@ -864,7 +864,7 @@ func (vr *valueReader) readu32() (uint32, error) {\n \n \tidx := vr.offset\n \tvr.offset += 4\n-\treturn (uint32(vr.d[idx]) | uint32(vr.d[idx+1])<<8 | uint32(vr.d[idx+2])<<16 | uint32(vr.d[idx+3])<<24), nil\n+\treturn binary.LittleEndian.Uint32(vr.d[idx:]), nil\n }\n \n func (vr *valueReader) readi64() (int64, error) {\n@@ -874,8 +874,7 @@ func (vr *valueReader) readi64() (int64, error) {\n \n \tidx := vr.offset\n \tvr.offset += 8\n-\treturn int64(vr.d[idx]) | int64(vr.d[idx+1])<<8 | int64(vr.d[idx+2])<<16 | int64(vr.d[idx+3])<<24 |\n-\t\tint64(vr.d[idx+4])<<32 | int64(vr.d[idx+5])<<40 | int64(vr.d[idx+6])<<48 | int64(vr.d[idx+7])<<56, nil\n+\treturn int64(binary.LittleEndian.Uint64(vr.d[idx:])), nil\n }\n \n func (vr *valueReader) readu64() (uint64, error) {\n@@ -885,6 +884,5 @@ func (vr *valueReader) readu64() (uint64, error) {\n \n \tidx := vr.offset\n \tvr.offset += 8\n-\treturn uint64(vr.d[idx]) | uint64(vr.d[idx+1])<<8 | uint64(vr.d[idx+2])<<16 | uint64(vr.d[idx+3])<<24 |\n-\t\tuint64(vr.d[idx+4])<<32 | uint64(vr.d[idx+5])<<40 | uint64(vr.d[idx+6])<<48 | uint64(vr.d[idx+7])<<56, nil\n+\treturn binary.LittleEndian.Uint64(vr.d[idx:]), nil\n }"
    },
    {
      "sha": "a8088e1e30b7350b9e5e9108f6957c782238abec",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/raw_value.go",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fraw_value.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fraw_value.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fraw_value.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -88,8 +88,12 @@ func (rv RawValue) UnmarshalWithRegistry(r *bsoncodec.Registry, val interface{})\n \treturn dec.DecodeValue(bsoncodec.DecodeContext{Registry: r}, vr, rval)\n }\n \n-// UnmarshalWithContext performs the same unmarshalling as Unmarshal but uses the provided DecodeContext\n-// instead of the one attached or the default registry.\n+// UnmarshalWithContext performs the same unmarshalling as Unmarshal but uses\n+// the provided DecodeContext instead of the one attached or the default\n+// registry.\n+//\n+// Deprecated: Use [RawValue.UnmarshalWithRegistry] with a custom registry to customize\n+// unmarshal behavior instead.\n func (rv RawValue) UnmarshalWithContext(dc *bsoncodec.DecodeContext, val interface{}) error {\n \tif dc == nil {\n \t\treturn ErrNilContext"
    },
    {
      "sha": "d6afb2850e2efd44251c134dc22d9e820a2d3f2a",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/registry.go",
      "status": "modified",
      "additions": 15,
      "deletions": 3,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fregistry.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fregistry.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fregistry.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -10,15 +10,27 @@ import (\n \t\"go.mongodb.org/mongo-driver/bson/bsoncodec\"\n )\n \n-// DefaultRegistry is the default bsoncodec.Registry. It contains the default codecs and the\n-// primitive codecs.\n+// DefaultRegistry is the default bsoncodec.Registry. It contains the default\n+// codecs and the primitive codecs.\n+//\n+// Deprecated: Use [NewRegistry] to construct a new default registry. To use a\n+// custom registry when marshaling or unmarshaling, use the \"SetRegistry\" method\n+// on an [Encoder] or [Decoder] instead:\n+//\n+//\tdec, err := bson.NewDecoder(bsonrw.NewBSONDocumentReader(data))\n+//\tif err != nil {\n+//\t    panic(err)\n+//\t}\n+//\tdec.SetRegistry(reg)\n+//\n+// See [Encoder] and [Decoder] for more examples.\n var DefaultRegistry = NewRegistry()\n \n // NewRegistryBuilder creates a new RegistryBuilder configured with the default encoders and\n // decoders from the bsoncodec.DefaultValueEncoders and bsoncodec.DefaultValueDecoders types and the\n // PrimitiveCodecs type in this package.\n //\n-// Deprecated: Use NewRegistry instead.\n+// Deprecated: Use [NewRegistry] instead.\n func NewRegistryBuilder() *bsoncodec.RegistryBuilder {\n \trb := bsoncodec.NewRegistryBuilder()\n \tbsoncodec.DefaultValueEncoders{}.RegisterDefaultEncoders(rb)"
    },
    {
      "sha": "ddc7abacf7b56add99c29447088037756d3fa50e",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/event/monitoring.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fevent%2Fmonitoring.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fevent%2Fmonitoring.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fevent%2Fmonitoring.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -117,6 +117,7 @@ type PoolEvent struct {\n \tAddress      string              `json:\"address\"`\n \tConnectionID uint64              `json:\"connectionId\"`\n \tPoolOptions  *MonitorPoolOptions `json:\"options\"`\n+\tDuration     time.Duration       `json:\"duration\"`\n \tReason       string              `json:\"reason\"`\n \t// ServiceID is only set if the Type is PoolCleared and the server is deployed behind a load balancer. This field\n \t// can be used to distinguish between individual servers in a load balanced deployment."
    },
    {
      "sha": "43801a5d4f1fdf0a461cab941dba518ba8987217",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/internal/csot/csot.go",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Fcsot%2Fcsot.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Fcsot%2Fcsot.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Fcsot%2Fcsot.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -21,11 +21,13 @@ type timeoutKey struct{}\n // TODO default behavior.\n func MakeTimeoutContext(ctx context.Context, to time.Duration) (context.Context, context.CancelFunc) {\n \t// Only use the passed in Duration as a timeout on the Context if it\n-\t// is non-zero.\n+\t// is non-zero and if the Context doesn't already have a timeout.\n \tcancelFunc := func() {}\n-\tif to != 0 {\n+\tif _, deadlineSet := ctx.Deadline(); to != 0 && !deadlineSet {\n \t\tctx, cancelFunc = context.WithTimeout(ctx, to)\n \t}\n+\n+\t// Add timeoutKey either way to indicate CSOT is enabled.\n \treturn context.WithValue(ctx, timeoutKey{}, true), cancelFunc\n }\n "
    },
    {
      "sha": "0a6c1bdcabf7681dac30896be66869f911a0899a",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/internal/logger/io_sink.go",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Flogger%2Fio_sink.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Flogger%2Fio_sink.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Flogger%2Fio_sink.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -9,6 +9,7 @@ package logger\n import (\n \t\"encoding/json\"\n \t\"io\"\n+\t\"math\"\n \t\"sync\"\n \t\"time\"\n )\n@@ -36,7 +37,11 @@ func NewIOSink(out io.Writer) *IOSink {\n \n // Info will write a JSON-encoded message to the io.Writer.\n func (sink *IOSink) Info(_ int, msg string, keysAndValues ...interface{}) {\n-\tkvMap := make(map[string]interface{}, len(keysAndValues)/2+2)\n+\tmapSize := len(keysAndValues) / 2\n+\tif math.MaxInt-mapSize >= 2 {\n+\t\tmapSize += 2\n+\t}\n+\tkvMap := make(map[string]interface{}, mapSize)\n \n \tkvMap[KeyTimestamp] = time.Now().UnixNano()\n \tkvMap[KeyMessage] = msg"
    },
    {
      "sha": "8d0a2031de5fc9720ac75660d8be0850565eefc5",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/change_stream.go",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -277,10 +277,10 @@ func (cs *ChangeStream) executeOperation(ctx context.Context, resuming bool) err\n \t\tcs.aggregate.Pipeline(plArr)\n \t}\n \n-\t// If no deadline is set on the passed-in context, cs.client.timeout is set, and context is not already\n-\t// a Timeout context, honor cs.client.timeout in new Timeout context for change stream operation execution\n-\t// and potential retry.\n-\tif _, deadlineSet := ctx.Deadline(); !deadlineSet && cs.client.timeout != nil && !csot.IsTimeoutContext(ctx) {\n+\t// If cs.client.timeout is set and context is not already a Timeout context,\n+\t// honor cs.client.timeout in new Timeout context for change stream\n+\t// operation execution and potential retry.\n+\tif cs.client.timeout != nil && !csot.IsTimeoutContext(ctx) {\n \t\tnewCtx, cancelFunc := csot.MakeTimeoutContext(ctx, *cs.client.timeout)\n \t\t// Redefine ctx to be the new timeout-derived context.\n \t\tctx = newCtx\n@@ -531,6 +531,12 @@ func (cs *ChangeStream) ID() int64 {\n \treturn cs.cursor.ID()\n }\n \n+// RemainingBatchLength returns the number of documents left in the current batch. If this returns zero, the subsequent\n+// call to Next or TryNext will do a network request to fetch the next batch.\n+func (cs *ChangeStream) RemainingBatchLength() int {\n+\treturn len(cs.batch)\n+}\n+\n // SetBatchSize sets the number of documents to fetch from the database with\n // each iteration of the ChangeStream's \"Next\" or \"TryNext\" method. This setting\n // only affects subsequent document batches fetched from the database."
    },
    {
      "sha": "4266412aab909bfd6abc86cf8d3102fab281b124",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/client.go",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -209,10 +209,6 @@ func NewClient(opts ...*options.ClientOptions) (*Client, error) {\n \t\tclientOpt.SetMaxPoolSize(defaultMaxPoolSize)\n \t}\n \n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\n \tcfg, err := topology.NewConfig(clientOpt, client.clock)\n \tif err != nil {\n \t\treturn nil, err"
    },
    {
      "sha": "4cf6fd1a1a3fff610e7d72c745faa0180edaec2b",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/collection.go",
      "status": "modified",
      "additions": 33,
      "deletions": 3,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcollection.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcollection.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcollection.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -863,6 +863,15 @@ func aggregate(a aggregateParams) (cur *Cursor, err error) {\n \t\tTimeout(a.client.timeout).\n \t\tMaxTime(ao.MaxTime)\n \n+\t// Omit \"maxTimeMS\" from operations that return a user-managed cursor to\n+\t// prevent confusing \"cursor not found\" errors. To maintain existing\n+\t// behavior for users who set \"timeoutMS\" with no context deadline, only\n+\t// omit \"maxTimeMS\" when a context deadline is set.\n+\t//\n+\t// See DRIVERS-2722 for more detail.\n+\t_, deadlineSet := a.ctx.Deadline()\n+\top.OmitCSOTMaxTimeMS(deadlineSet)\n+\n \tif ao.AllowDiskUse != nil {\n \t\top.AllowDiskUse(*ao.AllowDiskUse)\n \t}\n@@ -1196,6 +1205,23 @@ func (coll *Collection) Find(ctx context.Context, filter interface{},\n \t\tctx = context.Background()\n \t}\n \n+\t// Omit \"maxTimeMS\" from operations that return a user-managed cursor to\n+\t// prevent confusing \"cursor not found\" errors. To maintain existing\n+\t// behavior for users who set \"timeoutMS\" with no context deadline, only\n+\t// omit \"maxTimeMS\" when a context deadline is set.\n+\t//\n+\t// See DRIVERS-2722 for more detail.\n+\t_, deadlineSet := ctx.Deadline()\n+\treturn coll.find(ctx, filter, deadlineSet, opts...)\n+}\n+\n+func (coll *Collection) find(\n+\tctx context.Context,\n+\tfilter interface{},\n+\tomitCSOTMaxTimeMS bool,\n+\topts ...*options.FindOptions,\n+) (cur *Cursor, err error) {\n+\n \tf, err := marshal(filter, coll.bsonOpts, coll.registry)\n \tif err != nil {\n \t\treturn nil, err\n@@ -1230,7 +1256,8 @@ func (coll *Collection) Find(ctx context.Context, filter interface{},\n \t\tCommandMonitor(coll.client.monitor).ServerSelector(selector).\n \t\tClusterClock(coll.client.clock).Database(coll.db.name).Collection(coll.name).\n \t\tDeployment(coll.client.deployment).Crypt(coll.client.cryptFLE).ServerAPI(coll.client.serverAPI).\n-\t\tTimeout(coll.client.timeout).MaxTime(fo.MaxTime).Logger(coll.client.logger)\n+\t\tTimeout(coll.client.timeout).MaxTime(fo.MaxTime).Logger(coll.client.logger).\n+\t\tOmitCSOTMaxTimeMS(omitCSOTMaxTimeMS)\n \n \tcursorOpts := coll.client.createBaseCursorOptions()\n \n@@ -1408,7 +1435,7 @@ func (coll *Collection) FindOne(ctx context.Context, filter interface{},\n \t// by the server.\n \tfindOpts = append(findOpts, options.Find().SetLimit(-1))\n \n-\tcursor, err := coll.Find(ctx, filter, findOpts...)\n+\tcursor, err := coll.find(ctx, filter, false, findOpts...)\n \treturn &SingleResult{\n \t\tctx:      ctx,\n \t\tcur:      cursor,\n@@ -1775,8 +1802,11 @@ func (coll *Collection) Indexes() IndexView {\n \n // SearchIndexes returns a SearchIndexView instance that can be used to perform operations on the search indexes for the collection.\n func (coll *Collection) SearchIndexes() SearchIndexView {\n+\tc, _ := coll.Clone() // Clone() always return a nil error.\n+\tc.readConcern = nil\n+\tc.writeConcern = nil\n \treturn SearchIndexView{\n-\t\tcoll: coll,\n+\t\tcoll: c,\n \t}\n }\n "
    },
    {
      "sha": "57c0186eca69ae157da5a3501fde9b8f7a34c0dd",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/database.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdatabase.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdatabase.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdatabase.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -580,7 +580,7 @@ func (db *Database) getEncryptedFieldsFromServer(ctx context.Context, collection\n \treturn encryptedFields, nil\n }\n \n-// getEncryptedFieldsFromServer tries to get an \"encryptedFields\" document associated with collectionName by checking the client EncryptedFieldsMap.\n+// getEncryptedFieldsFromMap tries to get an \"encryptedFields\" document associated with collectionName by checking the client EncryptedFieldsMap.\n // Returns nil and no error if an EncryptedFieldsMap is not configured, or does not contain an entry for collectionName.\n func (db *Database) getEncryptedFieldsFromMap(collectionName string) interface{} {\n \t// Check the EncryptedFieldsMap"
    },
    {
      "sha": "3bad4cb7c071b7563493588a7170af0ccaf355b1",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/gridfs/bucket.go",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fbucket.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fbucket.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fbucket.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -257,10 +257,10 @@ func (b *Bucket) Delete(fileID interface{}) error {\n //\n // Use the context parameter to time-out or cancel the delete operation. The deadline set by SetWriteDeadline is ignored.\n func (b *Bucket) DeleteContext(ctx context.Context, fileID interface{}) error {\n-\t// If no deadline is set on the passed-in context, Timeout is set on the Client, and context is\n-\t// not already a Timeout context, honor Timeout in new Timeout context for operation execution to\n+\t// If Timeout is set on the Client and context is not already a Timeout\n+\t// context, honor Timeout in new Timeout context for operation execution to\n \t// be shared by both delete operations.\n-\tif _, deadlineSet := ctx.Deadline(); !deadlineSet && b.db.Client().Timeout() != nil && !csot.IsTimeoutContext(ctx) {\n+\tif b.db.Client().Timeout() != nil && !csot.IsTimeoutContext(ctx) {\n \t\tnewCtx, cancelFunc := csot.MakeTimeoutContext(ctx, *b.db.Client().Timeout())\n \t\t// Redefine ctx to be the new timeout-derived context.\n \t\tctx = newCtx\n@@ -384,10 +384,10 @@ func (b *Bucket) Drop() error {\n //\n // Use the context parameter to time-out or cancel the drop operation. The deadline set by SetWriteDeadline is ignored.\n func (b *Bucket) DropContext(ctx context.Context) error {\n-\t// If no deadline is set on the passed-in context, Timeout is set on the Client, and context is\n-\t// not already a Timeout context, honor Timeout in new Timeout context for operation execution to\n+\t// If Timeout is set on the Client and context is not already a Timeout\n+\t// context, honor Timeout in new Timeout context for operation execution to\n \t// be shared by both drop operations.\n-\tif _, deadlineSet := ctx.Deadline(); !deadlineSet && b.db.Client().Timeout() != nil && !csot.IsTimeoutContext(ctx) {\n+\tif b.db.Client().Timeout() != nil && !csot.IsTimeoutContext(ctx) {\n \t\tnewCtx, cancelFunc := csot.MakeTimeoutContext(ctx, *b.db.Client().Timeout())\n \t\t// Redefine ctx to be the new timeout-derived context.\n \t\tctx = newCtx"
    },
    {
      "sha": "17b37313010ce77dfbfafb68870511d40c556119",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/options/clientoptions.go",
      "status": "modified",
      "additions": 14,
      "deletions": 1,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fclientoptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fclientoptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fclientoptions.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -15,6 +15,7 @@ import (\n \t\"errors\"\n \t\"fmt\"\n \t\"io/ioutil\"\n+\t\"math\"\n \t\"net\"\n \t\"net/http\"\n \t\"strings\"\n@@ -1177,7 +1178,19 @@ func addClientCertFromSeparateFiles(cfg *tls.Config, keyFile, certFile, keyPassw\n \t\treturn \"\", err\n \t}\n \n-\tdata := make([]byte, 0, len(keyData)+len(certData)+1)\n+\tkeySize := len(keyData)\n+\tif keySize > 64*1024*1024 {\n+\t\treturn \"\", errors.New(\"X.509 key must be less than 64 MiB\")\n+\t}\n+\tcertSize := len(certData)\n+\tif certSize > 64*1024*1024 {\n+\t\treturn \"\", errors.New(\"X.509 certificate must be less than 64 MiB\")\n+\t}\n+\tdataSize := keySize + certSize + 1\n+\tif dataSize > math.MaxInt {\n+\t\treturn \"\", errors.New(\"size overflow\")\n+\t}\n+\tdata := make([]byte, 0, dataSize)\n \tdata = append(data, keyData...)\n \tdata = append(data, '\\n')\n \tdata = append(data, certData...)"
    },
    {
      "sha": "36088c2fcbf05b3728ddc3e1878c207b2378fbd9",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/options/mongooptions.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fmongooptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fmongooptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fmongooptions.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -104,7 +104,7 @@ const (\n \t// UpdateLookup includes a delta describing the changes to the document and a copy of the entire document that\n \t// was changed.\n \tUpdateLookup FullDocument = \"updateLookup\"\n-\t// WhenAvailable includes a post-image of the the modified document for replace and update change events\n+\t// WhenAvailable includes a post-image of the modified document for replace and update change events\n \t// if the post-image for this event is available.\n \tWhenAvailable FullDocument = \"whenAvailable\"\n )"
    },
    {
      "sha": "8cb8a08b7800f4d52ee6939d07aae7d3b773002c",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/options/searchindexoptions.go",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fsearchindexoptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fsearchindexoptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fsearchindexoptions.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -9,6 +9,7 @@ package options\n // SearchIndexesOptions represents options that can be used to configure a SearchIndexView.\n type SearchIndexesOptions struct {\n \tName *string\n+\tType *string\n }\n \n // SearchIndexes creates a new SearchIndexesOptions instance.\n@@ -22,6 +23,12 @@ func (sio *SearchIndexesOptions) SetName(name string) *SearchIndexesOptions {\n \treturn sio\n }\n \n+// SetType sets the value for the Type field.\n+func (sio *SearchIndexesOptions) SetType(typ string) *SearchIndexesOptions {\n+\tsio.Type = &typ\n+\treturn sio\n+}\n+\n // CreateSearchIndexesOptions represents options that can be used to configure a SearchIndexView.CreateOne or\n // SearchIndexView.CreateMany operation.\n type CreateSearchIndexesOptions struct {"
    },
    {
      "sha": "73fe8534ed44b3b90e04b6d485a8a3c8bc02ef17",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/search_index_view.go",
      "status": "modified",
      "additions": 11,
      "deletions": 32,
      "changes": 43,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fsearch_index_view.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fsearch_index_view.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fsearch_index_view.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -13,7 +13,6 @@ import (\n \n \t\"go.mongodb.org/mongo-driver/bson\"\n \t\"go.mongodb.org/mongo-driver/mongo/options\"\n-\t\"go.mongodb.org/mongo-driver/mongo/writeconcern\"\n \t\"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/operation\"\n@@ -109,6 +108,9 @@ func (siv SearchIndexView) CreateMany(\n \t\tif model.Options != nil && model.Options.Name != nil {\n \t\t\tindexes = bsoncore.AppendStringElement(indexes, \"name\", *model.Options.Name)\n \t\t}\n+\t\tif model.Options != nil && model.Options.Type != nil {\n+\t\t\tindexes = bsoncore.AppendStringElement(indexes, \"type\", *model.Options.Type)\n+\t\t}\n \t\tindexes = bsoncore.AppendDocumentElement(indexes, \"definition\", definition)\n \n \t\tindexes, err = bsoncore.AppendDocumentEnd(indexes, iidx)\n@@ -134,20 +136,13 @@ func (siv SearchIndexView) CreateMany(\n \t\treturn nil, err\n \t}\n \n-\twc := siv.coll.writeConcern\n-\tif sess.TransactionRunning() {\n-\t\twc = nil\n-\t}\n-\tif !writeconcern.AckWrite(wc) {\n-\t\tsess = nil\n-\t}\n-\n \tselector := makePinnedSelector(sess, siv.coll.writeSelector)\n \n \top := operation.NewCreateSearchIndexes(indexes).\n-\t\tSession(sess).WriteConcern(wc).ClusterClock(siv.coll.client.clock).\n-\t\tDatabase(siv.coll.db.name).Collection(siv.coll.name).CommandMonitor(siv.coll.client.monitor).\n-\t\tDeployment(siv.coll.client.deployment).ServerSelector(selector).ServerAPI(siv.coll.client.serverAPI).\n+\t\tSession(sess).CommandMonitor(siv.coll.client.monitor).\n+\t\tServerSelector(selector).ClusterClock(siv.coll.client.clock).\n+\t\tCollection(siv.coll.name).Database(siv.coll.db.name).\n+\t\tDeployment(siv.coll.client.deployment).ServerAPI(siv.coll.client.serverAPI).\n \t\tTimeout(siv.coll.client.timeout)\n \n \terr = op.Execute(ctx)\n@@ -196,20 +191,12 @@ func (siv SearchIndexView) DropOne(\n \t\treturn err\n \t}\n \n-\twc := siv.coll.writeConcern\n-\tif sess.TransactionRunning() {\n-\t\twc = nil\n-\t}\n-\tif !writeconcern.AckWrite(wc) {\n-\t\tsess = nil\n-\t}\n-\n \tselector := makePinnedSelector(sess, siv.coll.writeSelector)\n \n \top := operation.NewDropSearchIndex(name).\n-\t\tSession(sess).WriteConcern(wc).CommandMonitor(siv.coll.client.monitor).\n+\t\tSession(sess).CommandMonitor(siv.coll.client.monitor).\n \t\tServerSelector(selector).ClusterClock(siv.coll.client.clock).\n-\t\tDatabase(siv.coll.db.name).Collection(siv.coll.name).\n+\t\tCollection(siv.coll.name).Database(siv.coll.db.name).\n \t\tDeployment(siv.coll.client.deployment).ServerAPI(siv.coll.client.serverAPI).\n \t\tTimeout(siv.coll.client.timeout)\n \n@@ -258,20 +245,12 @@ func (siv SearchIndexView) UpdateOne(\n \t\treturn err\n \t}\n \n-\twc := siv.coll.writeConcern\n-\tif sess.TransactionRunning() {\n-\t\twc = nil\n-\t}\n-\tif !writeconcern.AckWrite(wc) {\n-\t\tsess = nil\n-\t}\n-\n \tselector := makePinnedSelector(sess, siv.coll.writeSelector)\n \n \top := operation.NewUpdateSearchIndex(name, indexDefinition).\n-\t\tSession(sess).WriteConcern(wc).CommandMonitor(siv.coll.client.monitor).\n+\t\tSession(sess).CommandMonitor(siv.coll.client.monitor).\n \t\tServerSelector(selector).ClusterClock(siv.coll.client.clock).\n-\t\tDatabase(siv.coll.db.name).Collection(siv.coll.name).\n+\t\tCollection(siv.coll.name).Database(siv.coll.db.name).\n \t\tDeployment(siv.coll.client.deployment).ServerAPI(siv.coll.client.serverAPI).\n \t\tTimeout(siv.coll.client.timeout)\n "
    },
    {
      "sha": "7a73d8d72f9b2440fddb1cb82764dbeb488e1743",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/writeconcern/writeconcern.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fwriteconcern%2Fwriteconcern.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fwriteconcern%2Fwriteconcern.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fwriteconcern%2Fwriteconcern.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -42,7 +42,7 @@ var ErrNegativeW = errors.New(\"write concern `w` field cannot be a negative numb\n // Deprecated: ErrNegativeWTimeout will be removed in Go Driver 2.0.\n var ErrNegativeWTimeout = errors.New(\"write concern `wtimeout` field cannot be negative\")\n \n-// A WriteConcern defines a MongoDB read concern, which describes the level of acknowledgment\n+// A WriteConcern defines a MongoDB write concern, which describes the level of acknowledgment\n // requested from MongoDB for write operations to a standalone mongod, to replica sets, or to\n // sharded clusters.\n //\n@@ -51,7 +51,7 @@ var ErrNegativeWTimeout = errors.New(\"write concern `wtimeout` field cannot be n\n type WriteConcern struct {\n \t// W requests acknowledgment that the write operation has propagated to a\n \t// specified number of mongod instances or to mongod instances with\n-\t// specified tags. It sets the the \"w\" option in a MongoDB write concern.\n+\t// specified tags. It sets the \"w\" option in a MongoDB write concern.\n \t//\n \t// W values must be a string or an int.\n \t//"
    },
    {
      "sha": "659d48d7a829305a7a12c4e7e950578a4696e6e8",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/version/version.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fversion%2Fversion.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fversion%2Fversion.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fversion%2Fversion.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -8,4 +8,4 @@\n package version // import \"go.mongodb.org/mongo-driver/version\"\n \n // Driver is the current version of the driver.\n-var Driver = \"v1.14.0\"\n+var Driver = \"1.16.0\""
    },
    {
      "sha": "03925d7ada13fcb6110a25a7a5e73008b379802b",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/bsonx/bsoncore/bsoncore.go",
      "status": "modified",
      "additions": 18,
      "deletions": 22,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fbsonx%2Fbsoncore%2Fbsoncore.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fbsonx%2Fbsoncore%2Fbsoncore.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fbsonx%2Fbsoncore%2Fbsoncore.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -8,6 +8,7 @@ package bsoncore // import \"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n \n import (\n \t\"bytes\"\n+\t\"encoding/binary\"\n \t\"fmt\"\n \t\"math\"\n \t\"strconv\"\n@@ -706,17 +707,16 @@ func ReserveLength(dst []byte) (int32, []byte) {\n \n // UpdateLength updates the length at index with length and returns the []byte.\n func UpdateLength(dst []byte, index, length int32) []byte {\n-\tdst[index] = byte(length)\n-\tdst[index+1] = byte(length >> 8)\n-\tdst[index+2] = byte(length >> 16)\n-\tdst[index+3] = byte(length >> 24)\n+\tbinary.LittleEndian.PutUint32(dst[index:], uint32(length))\n \treturn dst\n }\n \n func appendLength(dst []byte, l int32) []byte { return appendi32(dst, l) }\n \n func appendi32(dst []byte, i32 int32) []byte {\n-\treturn append(dst, byte(i32), byte(i32>>8), byte(i32>>16), byte(i32>>24))\n+\tb := []byte{0, 0, 0, 0}\n+\tbinary.LittleEndian.PutUint32(b, uint32(i32))\n+\treturn append(dst, b...)\n }\n \n // ReadLength reads an int32 length from src and returns the length and the remaining bytes. If\n@@ -734,51 +734,47 @@ func readi32(src []byte) (int32, []byte, bool) {\n \tif len(src) < 4 {\n \t\treturn 0, src, false\n \t}\n-\treturn (int32(src[0]) | int32(src[1])<<8 | int32(src[2])<<16 | int32(src[3])<<24), src[4:], true\n+\treturn int32(binary.LittleEndian.Uint32(src)), src[4:], true\n }\n \n func appendi64(dst []byte, i64 int64) []byte {\n-\treturn append(dst,\n-\t\tbyte(i64), byte(i64>>8), byte(i64>>16), byte(i64>>24),\n-\t\tbyte(i64>>32), byte(i64>>40), byte(i64>>48), byte(i64>>56),\n-\t)\n+\tb := []byte{0, 0, 0, 0, 0, 0, 0, 0}\n+\tbinary.LittleEndian.PutUint64(b, uint64(i64))\n+\treturn append(dst, b...)\n }\n \n func readi64(src []byte) (int64, []byte, bool) {\n \tif len(src) < 8 {\n \t\treturn 0, src, false\n \t}\n-\ti64 := (int64(src[0]) | int64(src[1])<<8 | int64(src[2])<<16 | int64(src[3])<<24 |\n-\t\tint64(src[4])<<32 | int64(src[5])<<40 | int64(src[6])<<48 | int64(src[7])<<56)\n-\treturn i64, src[8:], true\n+\treturn int64(binary.LittleEndian.Uint64(src)), src[8:], true\n }\n \n func appendu32(dst []byte, u32 uint32) []byte {\n-\treturn append(dst, byte(u32), byte(u32>>8), byte(u32>>16), byte(u32>>24))\n+\tb := []byte{0, 0, 0, 0}\n+\tbinary.LittleEndian.PutUint32(b, u32)\n+\treturn append(dst, b...)\n }\n \n func readu32(src []byte) (uint32, []byte, bool) {\n \tif len(src) < 4 {\n \t\treturn 0, src, false\n \t}\n \n-\treturn (uint32(src[0]) | uint32(src[1])<<8 | uint32(src[2])<<16 | uint32(src[3])<<24), src[4:], true\n+\treturn binary.LittleEndian.Uint32(src), src[4:], true\n }\n \n func appendu64(dst []byte, u64 uint64) []byte {\n-\treturn append(dst,\n-\t\tbyte(u64), byte(u64>>8), byte(u64>>16), byte(u64>>24),\n-\t\tbyte(u64>>32), byte(u64>>40), byte(u64>>48), byte(u64>>56),\n-\t)\n+\tb := []byte{0, 0, 0, 0, 0, 0, 0, 0}\n+\tbinary.LittleEndian.PutUint64(b, u64)\n+\treturn append(dst, b...)\n }\n \n func readu64(src []byte) (uint64, []byte, bool) {\n \tif len(src) < 8 {\n \t\treturn 0, src, false\n \t}\n-\tu64 := (uint64(src[0]) | uint64(src[1])<<8 | uint64(src[2])<<16 | uint64(src[3])<<24 |\n-\t\tuint64(src[4])<<32 | uint64(src[5])<<40 | uint64(src[6])<<48 | uint64(src[7])<<56)\n-\treturn u64, src[8:], true\n+\treturn binary.LittleEndian.Uint64(src), src[8:], true\n }\n \n // keep in sync with readcstringbytes"
    },
    {
      "sha": "f68e1da1a09d999b2b82ce2f5bedfad7618961ee",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/bsonx/bsoncore/doc.go",
      "status": "modified",
      "additions": 14,
      "deletions": 9,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fbsonx%2Fbsoncore%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fbsonx%2Fbsoncore%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fbsonx%2Fbsoncore%2Fdoc.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -4,26 +4,31 @@\n // not use this file except in compliance with the License. You may obtain\n // a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n \n-// Package bsoncore contains functions that can be used to encode and decode BSON\n-// elements and values to or from a slice of bytes. These functions are aimed at\n-// allowing low level manipulation of BSON and can be used to build a higher\n-// level BSON library.\n+// Package bsoncore is intended for internal use only. It is made available to\n+// facilitate use cases that require access to internal MongoDB driver\n+// functionality and state. The API of this package is not stable and there is\n+// no backward compatibility guarantee.\n+//\n+// WARNING: THIS PACKAGE IS EXPERIMENTAL AND MAY BE MODIFIED OR REMOVED WITHOUT\n+// NOTICE! USE WITH EXTREME CAUTION!\n+//\n+// Package bsoncore contains functions that can be used to encode and decode\n+// BSON elements and values to or from a slice of bytes. These functions are\n+// aimed at allowing low level manipulation of BSON and can be used to build a\n+// higher level BSON library.\n //\n // The Read* functions within this package return the values of the element and\n // a boolean indicating if the values are valid. A boolean was used instead of\n // an error because any error that would be returned would be the same: not\n // enough bytes. This library attempts to do no validation, it will only return\n // false if there are not enough bytes for an item to be read. For example, the\n // ReadDocument function checks the length, if that length is larger than the\n-// number of bytes available, it will return false, if there are enough bytes, it\n-// will return those bytes and true. It is the consumers responsibility to\n+// number of bytes available, it will return false, if there are enough bytes,\n+// it will return those bytes and true. It is the consumers responsibility to\n // validate those bytes.\n //\n // The Append* functions within this package will append the type value to the\n // given dst slice. If the slice has enough capacity, it will not grow the\n // slice. The Append*Element functions within this package operate in the same\n // way, but additionally append the BSON type and the key before the value.\n-//\n-// Warning: Package bsoncore is unstable and there is no backward compatibility\n-// guarantee. It is experimental and subject to change.\n package bsoncore"
    },
    {
      "sha": "3c3e6c56cd0418ab18bd82e22698eeb565565b1c",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/DESIGN.md",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2FDESIGN.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2FDESIGN.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2FDESIGN.md?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,27 +0,0 @@\n-# Driver Library Design\n-\n-This document outlines the design for this package.\n-\n-## Deployment, Server, and Connection\n-\n-Acquiring a `Connection` from a `Server` selected from a `Deployment` enables sending and receiving\n-wire messages. A `Deployment` represents an set of MongoDB servers and a `Server` represents a\n-member of that set. These three types form the operation execution stack.\n-\n-### Compression\n-\n-Compression is handled by Connection type while uncompression is handled automatically by the\n-Operation type. This is done because the compressor to use for compressing a wire message is\n-chosen by the connection during handshake, while uncompression can be performed without this\n-information. This does make the design of compression non-symmetric, but it makes the design simpler\n-to implement and more consistent.\n-\n-## Operation\n-\n-The `Operation` type handles executing a series of commands using a `Deployment`. For most uses\n-`Operation` will only execute a single command, but the main use case for a series of commands is\n-batch split write commands, such as insert. The type itself is heavily documented, so reading the\n-code and comments together should provide an understanding of how the type works.\n-\n-This type is not meant to be used directly by callers. Instead a wrapping type should be defined\n-using the IDL."
    },
    {
      "sha": "99c4c3470f2497245c340a5fbd29017d57a3041f",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/auth/creds/doc.go",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fcreds%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fcreds%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fcreds%2Fdoc.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,14 @@\n+// Copyright (C) MongoDB, Inc. 2024-present.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n+// not use this file except in compliance with the License. You may obtain\n+// a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n+\n+// Package creds is intended for internal use only. It is made available to\n+// facilitate use cases that require access to internal MongoDB driver\n+// functionality and state. The API of this package is not stable and there is\n+// no backward compatibility guarantee.\n+//\n+// WARNING: THIS PACKAGE IS EXPERIMENTAL AND MAY BE MODIFIED OR REMOVED WITHOUT\n+// NOTICE! USE WITH EXTREME CAUTION!\n+package creds"
    },
    {
      "sha": "5f9f1f57430069918fa2231d763594d743a200f0",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/auth/doc.go",
      "status": "modified",
      "additions": 6,
      "deletions": 15,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fdoc.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -4,20 +4,11 @@\n // not use this file except in compliance with the License. You may obtain\n // a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n \n-// Package auth is not for public use.\n+// Package auth is intended for internal use only. It is made available to\n+// facilitate use cases that require access to internal MongoDB driver\n+// functionality and state. The API of this package is not stable and there is\n+// no backward compatibility guarantee.\n //\n-// The API for packages in the 'private' directory have no stability\n-// guarantee.\n-//\n-// The packages within the 'private' directory would normally be put into an\n-// 'internal' directory to prohibit their use outside the 'mongo' directory.\n-// However, some MongoDB tools require very low-level access to the building\n-// blocks of a driver, so we have placed them under 'private' to allow these\n-// packages to be imported by projects that need them.\n-//\n-// These package APIs may be modified in backwards-incompatible ways at any\n-// time.\n-//\n-// You are strongly discouraged from directly using any packages\n-// under 'private'.\n+// WARNING: THIS PACKAGE IS EXPERIMENTAL AND MAY BE MODIFIED OR REMOVED WITHOUT\n+// NOTICE! USE WITH EXTREME CAUTION!\n package auth"
    },
    {
      "sha": "d9a6c68feed073bc390f06525c47eb7004a17d8e",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/compression.go",
      "status": "modified",
      "additions": 19,
      "deletions": 2,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fcompression.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fcompression.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fcompression.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -30,7 +30,11 @@ type CompressionOpts struct {\n // destination writer. It panics on any errors and should only be used at\n // package initialization time.\n func mustZstdNewWriter(lvl zstd.EncoderLevel) *zstd.Encoder {\n-\tenc, err := zstd.NewWriter(nil, zstd.WithEncoderLevel(lvl))\n+\tenc, err := zstd.NewWriter(\n+\t\tnil,\n+\t\tzstd.WithWindowSize(8<<20), // Set window size to 8MB.\n+\t\tzstd.WithEncoderLevel(lvl),\n+\t)\n \tif err != nil {\n \t\tpanic(err)\n \t}\n@@ -105,6 +109,13 @@ func (e *zlibEncoder) Encode(dst, src []byte) ([]byte, error) {\n \treturn dst, nil\n }\n \n+var zstdBufPool = sync.Pool{\n+\tNew: func() interface{} {\n+\t\ts := make([]byte, 0)\n+\t\treturn &s\n+\t},\n+}\n+\n // CompressPayload takes a byte slice and compresses it according to the options passed\n func CompressPayload(in []byte, opts CompressionOpts) ([]byte, error) {\n \tswitch opts.Compressor {\n@@ -123,7 +134,13 @@ func CompressPayload(in []byte, opts CompressionOpts) ([]byte, error) {\n \t\tif err != nil {\n \t\t\treturn nil, err\n \t\t}\n-\t\treturn encoder.EncodeAll(in, nil), nil\n+\t\tptr := zstdBufPool.Get().(*[]byte)\n+\t\tb := encoder.EncodeAll(in, *ptr)\n+\t\tdst := make([]byte, len(b))\n+\t\tcopy(dst, b)\n+\t\t*ptr = b[:0]\n+\t\tzstdBufPool.Put(ptr)\n+\t\treturn dst, nil\n \tdefault:\n \t\treturn nil, fmt.Errorf(\"unknown compressor ID %v\", opts.Compressor)\n \t}"
    },
    {
      "sha": "686458e2929f82f5fab7ffa1fb32bf90ca142296",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/connstring/connstring.go",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fconnstring%2Fconnstring.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fconnstring%2Fconnstring.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fconnstring%2Fconnstring.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -4,6 +4,13 @@\n // not use this file except in compliance with the License. You may obtain\n // a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n \n+// Package connstring is intended for internal use only. It is made available to\n+// facilitate use cases that require access to internal MongoDB driver\n+// functionality and state. The API of this package is not stable and there is\n+// no backward compatibility guarantee.\n+//\n+// WARNING: THIS PACKAGE IS EXPERIMENTAL AND MAY BE MODIFIED OR REMOVED WITHOUT\n+// NOTICE! USE WITH EXTREME CAUTION!\n package connstring // import \"go.mongodb.org/mongo-driver/x/mongo/driver/connstring\"\n \n import ("
    },
    {
      "sha": "9334d493ed9c138835afb8d30bdb12db7b85ce4f",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/dns/dns.go",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fdns%2Fdns.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fdns%2Fdns.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fdns%2Fdns.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -4,6 +4,13 @@\n // not use this file except in compliance with the License. You may obtain\n // a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n \n+// Package dns is intended for internal use only. It is made available to\n+// facilitate use cases that require access to internal MongoDB driver\n+// functionality and state. The API of this package is not stable and there is\n+// no backward compatibility guarantee.\n+//\n+// WARNING: THIS PACKAGE IS EXPERIMENTAL AND MAY BE MODIFIED OR REMOVED WITHOUT\n+// NOTICE! USE WITH EXTREME CAUTION!\n package dns\n \n import ("
    },
    {
      "sha": "900729bf874906aea76cdb583e40b02f3c8f643f",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/driver.go",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fdriver.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fdriver.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fdriver.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -4,6 +4,13 @@\n // not use this file except in compliance with the License. You may obtain\n // a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n \n+// Package driver is intended for internal use only. It is made available to\n+// facilitate use cases that require access to internal MongoDB driver\n+// functionality and state. The API of this package is not stable and there is\n+// no backward compatibility guarantee.\n+//\n+// WARNING: THIS PACKAGE IS EXPERIMENTAL AND MAY BE MODIFIED OR REMOVED WITHOUT\n+// NOTICE! USE WITH EXTREME CAUTION!\n package driver // import \"go.mongodb.org/mongo-driver/x/mongo/driver\"\n \n import ("
    },
    {
      "sha": "177c2d4501a457ae1e6d7cfce1d61bd729073305",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/errors.go",
      "status": "modified",
      "additions": 17,
      "deletions": 2,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ferrors.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ferrors.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ferrors.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -14,6 +14,7 @@ import (\n \t\"strings\"\n \n \t\"go.mongodb.org/mongo-driver/bson\"\n+\t\"go.mongodb.org/mongo-driver/internal/csot\"\n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n \t\"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n )\n@@ -377,7 +378,7 @@ func (e Error) NamespaceNotFound() bool {\n \n // ExtractErrorFromServerResponse extracts an error from a server response bsoncore.Document\n // if there is one. Also used in testing for SDAM.\n-func ExtractErrorFromServerResponse(doc bsoncore.Document) error {\n+func ExtractErrorFromServerResponse(ctx context.Context, doc bsoncore.Document) error {\n \tvar errmsg, codeName string\n \tvar code int32\n \tvar labels []string\n@@ -514,14 +515,28 @@ func ExtractErrorFromServerResponse(doc bsoncore.Document) error {\n \t\t\terrmsg = \"command failed\"\n \t\t}\n \n-\t\treturn Error{\n+\t\terr := Error{\n \t\t\tCode:            code,\n \t\t\tMessage:         errmsg,\n \t\t\tName:            codeName,\n \t\t\tLabels:          labels,\n \t\t\tTopologyVersion: tv,\n \t\t\tRaw:             doc,\n \t\t}\n+\n+\t\t// If CSOT is enabled and we get a MaxTimeMSExpired error, assume that\n+\t\t// the error was caused by setting \"maxTimeMS\" on the command based on\n+\t\t// the context deadline or on \"timeoutMS\". In that case, make the error\n+\t\t// wrap context.DeadlineExceeded so that users can always check\n+\t\t//\n+\t\t//  errors.Is(err, context.DeadlineExceeded)\n+\t\t//\n+\t\t// for either client-side or server-side timeouts.\n+\t\tif csot.IsTimeoutContext(ctx) && err.Code == 50 {\n+\t\t\terr.Wrapped = context.DeadlineExceeded\n+\t\t}\n+\n+\t\treturn err\n \t}\n \n \tif len(wcError.WriteErrors) > 0 || wcError.WriteConcernError != nil {"
    },
    {
      "sha": "80f500085cbd23b4a62026fdb0f5b746d2f571e9",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/mongocrypt/mongocrypt_not_enabled.go",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt_not_enabled.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt_not_enabled.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt_not_enabled.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -7,6 +7,13 @@\n //go:build !cse\n // +build !cse\n \n+// Package mongocrypt is intended for internal use only. It is made available to\n+// facilitate use cases that require access to internal MongoDB driver\n+// functionality and state. The API of this package is not stable and there is\n+// no backward compatibility guarantee.\n+//\n+// WARNING: THIS PACKAGE IS EXPERIMENTAL AND MAY BE MODIFIED OR REMOVED WITHOUT\n+// NOTICE! USE WITH EXTREME CAUTION!\n package mongocrypt\n \n import ("
    },
    {
      "sha": "e0cc77052a8a2d693ea751ed65b5a39dc5c04380",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/mongocrypt/options/doc.go",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Foptions%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Foptions%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Foptions%2Fdoc.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,14 @@\n+// Copyright (C) MongoDB, Inc. 2024-present.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n+// not use this file except in compliance with the License. You may obtain\n+// a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n+\n+// Package options is intended for internal use only. It is made available to\n+// facilitate use cases that require access to internal MongoDB driver\n+// functionality and state. The API of this package is not stable and there is\n+// no backward compatibility guarantee.\n+//\n+// WARNING: THIS PACKAGE IS EXPERIMENTAL AND MAY BE MODIFIED OR REMOVED WITHOUT\n+// NOTICE! USE WITH EXTREME CAUTION!\n+package options"
    },
    {
      "sha": "2bff94a659b6c80b184f1c14de9cdce6c4d2406d",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/ocsp/ocsp.go",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Focsp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Focsp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Focsp.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -4,6 +4,13 @@\n // not use this file except in compliance with the License. You may obtain\n // a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n \n+// Package ocsp is intended for internal use only. It is made available to\n+// facilitate use cases that require access to internal MongoDB driver\n+// functionality and state. The API of this package is not stable and there is\n+// no backward compatibility guarantee.\n+//\n+// WARNING: THIS PACKAGE IS EXPERIMENTAL AND MAY BE MODIFIED OR REMOVED WITHOUT\n+// NOTICE! USE WITH EXTREME CAUTION!\n package ocsp\n \n import ("
    },
    {
      "sha": "db5367bed5d5521005dd92c2457331d1a8be97e5",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation.go",
      "status": "modified",
      "additions": 48,
      "deletions": 17,
      "changes": 65,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -310,6 +310,11 @@ type Operation struct {\n \t// OP_MSG as well as for logging server selection data.\n \tName string\n \n+\t// OmitCSOTMaxTimeMS omits the automatically-calculated \"maxTimeMS\" from the\n+\t// command when CSOT is enabled. It does not effect \"maxTimeMS\" set by\n+\t// [Operation.MaxTime].\n+\tOmitCSOTMaxTimeMS bool\n+\n \t// omitReadPreference is a boolean that indicates whether to omit the\n \t// read preference from the command. This omition includes the case\n \t// where a default read preference is used when the operation\n@@ -499,9 +504,9 @@ func (op Operation) Execute(ctx context.Context) error {\n \t\treturn err\n \t}\n \n-\t// If no deadline is set on the passed-in context, op.Timeout is set, and context is not already\n-\t// a Timeout context, honor op.Timeout in new Timeout context for operation execution.\n-\tif _, deadlineSet := ctx.Deadline(); !deadlineSet && op.Timeout != nil && !csot.IsTimeoutContext(ctx) {\n+\t// If op.Timeout is set, and context is not already a Timeout context, honor\n+\t// op.Timeout in new Timeout context for operation execution.\n+\tif op.Timeout != nil && !csot.IsTimeoutContext(ctx) {\n \t\tnewCtx, cancelFunc := csot.MakeTimeoutContext(ctx, *op.Timeout)\n \t\t// Redefine ctx to be the new timeout-derived context.\n \t\tctx = newCtx\n@@ -617,6 +622,13 @@ func (op Operation) Execute(ctx context.Context) error {\n \t\t}\n \t}()\n \tfor {\n+\t\t// If we're starting a retry and the error from the previous try was\n+\t\t// a context canceled or deadline exceeded error, stop retrying and\n+\t\t// return that error.\n+\t\tif errors.Is(prevErr, context.Canceled) || errors.Is(prevErr, context.DeadlineExceeded) {\n+\t\t\treturn prevErr\n+\t\t}\n+\n \t\trequestID := wiremessage.NextRequestID()\n \n \t\t// If the server or connection are nil, try to select a new server and get a new connection.\n@@ -683,8 +695,7 @@ func (op Operation) Execute(ctx context.Context) error {\n \t\t\tfirst = false\n \t\t}\n \n-\t\t// Calculate maxTimeMS value to potentially be appended to the wire message.\n-\t\tmaxTimeMS, err := op.calculateMaxTimeMS(ctx, srvr.RTTMonitor().P90(), srvr.RTTMonitor().Stats())\n+\t\tmaxTimeMS, err := op.calculateMaxTimeMS(ctx, srvr.RTTMonitor())\n \t\tif err != nil {\n \t\t\treturn err\n \t\t}\n@@ -777,7 +788,7 @@ func (op Operation) Execute(ctx context.Context) error {\n \t\t} else if deadline, ok := ctx.Deadline(); ok {\n \t\t\tif csot.IsTimeoutContext(ctx) && time.Now().Add(srvr.RTTMonitor().P90()).After(deadline) {\n \t\t\t\terr = fmt.Errorf(\n-\t\t\t\t\t\"remaining time %v until context deadline is less than 90th percentile RTT: %w\\n%v\",\n+\t\t\t\t\t\"remaining time %v until context deadline is less than 90th percentile network round-trip time: %w\\n%v\",\n \t\t\t\t\ttime.Until(deadline),\n \t\t\t\t\tErrDeadlineWouldBeExceeded,\n \t\t\t\t\tsrvr.RTTMonitor().Stats())\n@@ -1089,7 +1100,7 @@ func (op Operation) readWireMessage(ctx context.Context, conn Connection) (resul\n \t}\n \n \t// decode\n-\tres, err := op.decodeResult(opcode, rem)\n+\tres, err := op.decodeResult(ctx, opcode, rem)\n \t// Update cluster/operation time and recovery tokens before handling the error to ensure we're properly updating\n \t// everything.\n \top.updateClusterTimes(res)\n@@ -1562,22 +1573,43 @@ func (op Operation) addClusterTime(dst []byte, desc description.SelectedServer)\n // if the ctx is a Timeout context. If the context is not a Timeout context, it uses the\n // operation's MaxTimeMS if set. If no MaxTimeMS is set on the operation, and context is\n // not a Timeout context, calculateMaxTimeMS returns 0.\n-func (op Operation) calculateMaxTimeMS(ctx context.Context, rtt90 time.Duration, rttStats string) (uint64, error) {\n-\tif csot.IsTimeoutContext(ctx) {\n+func (op Operation) calculateMaxTimeMS(ctx context.Context, mon RTTMonitor) (uint64, error) {\n+\t// If CSOT is enabled and we're not omitting the CSOT-calculated maxTimeMS\n+\t// value, then calculate maxTimeMS.\n+\t//\n+\t// This allows commands that do not currently send CSOT-calculated maxTimeMS\n+\t// (e.g. Find and Aggregate) to still use a manually-provided maxTimeMS\n+\t// value.\n+\t//\n+\t// TODO(GODRIVER-2944): Remove or refactor this logic when we add the\n+\t// \"timeoutMode\" option, which will allow users to opt-in to the\n+\t// CSOT-calculated maxTimeMS values if that's the behavior they want.\n+\tif csot.IsTimeoutContext(ctx) && !op.OmitCSOTMaxTimeMS {\n \t\tif deadline, ok := ctx.Deadline(); ok {\n \t\t\tremainingTimeout := time.Until(deadline)\n+\t\t\trtt90 := mon.P90()\n \t\t\tmaxTime := remainingTimeout - rtt90\n \n \t\t\t// Always round up to the next millisecond value so we never truncate the calculated\n \t\t\t// maxTimeMS value (e.g. 400 microseconds evaluates to 1ms, not 0ms).\n \t\t\tmaxTimeMS := int64((maxTime + (time.Millisecond - 1)) / time.Millisecond)\n \t\t\tif maxTimeMS <= 0 {\n \t\t\t\treturn 0, fmt.Errorf(\n-\t\t\t\t\t\"remaining time %v until context deadline is less than or equal to 90th percentile RTT: %w\\n%v\",\n+\t\t\t\t\t\"negative maxTimeMS: remaining time %v until context deadline is less than 90th percentile network round-trip time (%v): %w\",\n \t\t\t\t\tremainingTimeout,\n-\t\t\t\t\tErrDeadlineWouldBeExceeded,\n-\t\t\t\t\trttStats)\n+\t\t\t\t\tmon.Stats(),\n+\t\t\t\t\tErrDeadlineWouldBeExceeded)\n \t\t\t}\n+\n+\t\t\t// The server will return a \"BadValue\" error if maxTimeMS is greater\n+\t\t\t// than the maximum positive int32 value (about 24.9 days). If the\n+\t\t\t// user specified a timeout value greater than that,  omit maxTimeMS\n+\t\t\t// and let the client-side timeout handle cancelling the op if the\n+\t\t\t// timeout is ever reached.\n+\t\t\tif maxTimeMS > math.MaxInt32 {\n+\t\t\t\treturn 0, nil\n+\t\t\t}\n+\n \t\t\treturn uint64(maxTimeMS), nil\n \t\t}\n \t} else if op.MaxTime != nil {\n@@ -1827,7 +1859,7 @@ func (Operation) decodeOpReply(wm []byte) opReply {\n \treturn reply\n }\n \n-func (op Operation) decodeResult(opcode wiremessage.OpCode, wm []byte) (bsoncore.Document, error) {\n+func (op Operation) decodeResult(ctx context.Context, opcode wiremessage.OpCode, wm []byte) (bsoncore.Document, error) {\n \tswitch opcode {\n \tcase wiremessage.OpReply:\n \t\treply := op.decodeOpReply(wm)\n@@ -1845,7 +1877,7 @@ func (op Operation) decodeResult(opcode wiremessage.OpCode, wm []byte) (bsoncore\n \t\t\treturn nil, NewCommandResponseError(\"malformed OP_REPLY: invalid document\", err)\n \t\t}\n \n-\t\treturn rdr, ExtractErrorFromServerResponse(rdr)\n+\t\treturn rdr, ExtractErrorFromServerResponse(ctx, rdr)\n \tcase wiremessage.OpMsg:\n \t\t_, wm, ok := wiremessage.ReadMsgFlags(wm)\n \t\tif !ok {\n@@ -1867,7 +1899,6 @@ func (op Operation) decodeResult(opcode wiremessage.OpCode, wm []byte) (bsoncore\n \t\t\t\t\treturn nil, errors.New(\"malformed wire message: insufficient bytes to read single document\")\n \t\t\t\t}\n \t\t\tcase wiremessage.DocumentSequence:\n-\t\t\t\t// TODO(GODRIVER-617): Implement document sequence returns.\n \t\t\t\t_, _, wm, ok = wiremessage.ReadMsgSectionDocumentSequence(wm)\n \t\t\t\tif !ok {\n \t\t\t\t\treturn nil, errors.New(\"malformed wire message: insufficient bytes to read document sequence\")\n@@ -1882,7 +1913,7 @@ func (op Operation) decodeResult(opcode wiremessage.OpCode, wm []byte) (bsoncore\n \t\t\treturn nil, NewCommandResponseError(\"malformed OP_MSG: invalid document\", err)\n \t\t}\n \n-\t\treturn res, ExtractErrorFromServerResponse(res)\n+\t\treturn res, ExtractErrorFromServerResponse(ctx, res)\n \tdefault:\n \t\treturn nil, fmt.Errorf(\"cannot decode result from %s\", opcode)\n \t}\n@@ -1963,7 +1994,7 @@ func (op Operation) publishStartedEvent(ctx context.Context, info startedInforma\n \t}\n }\n \n-// canPublishSucceededEvent returns true if a CommandSucceededEvent can be\n+// canPublishFinishedEvent returns true if a CommandSucceededEvent can be\n // published for the given command. This is true if the command is not an\n // unacknowledged write and the command monitor is monitoring succeeded events.\n func (op Operation) canPublishFinishedEvent(info finishedInformation) bool {"
    },
    {
      "sha": "44467df8fd386741d464aff1856b54cd1550e53e",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/aggregate.go",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Faggregate.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Faggregate.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Faggregate.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -50,6 +50,7 @@ type Aggregate struct {\n \thasOutputStage           bool\n \tcustomOptions            map[string]bsoncore.Value\n \ttimeout                  *time.Duration\n+\tomitCSOTMaxTimeMS        bool\n \n \tresult driver.CursorResponse\n }\n@@ -113,6 +114,7 @@ func (a *Aggregate) Execute(ctx context.Context) error {\n \t\tMaxTime:                        a.maxTime,\n \t\tTimeout:                        a.timeout,\n \t\tName:                           driverutil.AggregateOp,\n+\t\tOmitCSOTMaxTimeMS:              a.omitCSOTMaxTimeMS,\n \t}.Execute(ctx)\n \n }\n@@ -419,3 +421,15 @@ func (a *Aggregate) Timeout(timeout *time.Duration) *Aggregate {\n \ta.timeout = timeout\n \treturn a\n }\n+\n+// OmitCSOTMaxTimeMS omits the automatically-calculated \"maxTimeMS\" from the\n+// command when CSOT is enabled. It does not effect \"maxTimeMS\" set by\n+// [Aggregate.MaxTime].\n+func (a *Aggregate) OmitCSOTMaxTimeMS(omit bool) *Aggregate {\n+\tif a == nil {\n+\t\ta = new(Aggregate)\n+\t}\n+\n+\ta.omitCSOTMaxTimeMS = omit\n+\treturn a\n+}"
    },
    {
      "sha": "cb0d8079527f0a76e5f9a1976a86d025e1acb737",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/create_search_indexes.go",
      "status": "modified",
      "additions": 18,
      "deletions": 24,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcreate_search_indexes.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcreate_search_indexes.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcreate_search_indexes.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -15,27 +15,25 @@ import (\n \t\"go.mongodb.org/mongo-driver/bson\"\n \t\"go.mongodb.org/mongo-driver/event\"\n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n-\t\"go.mongodb.org/mongo-driver/mongo/writeconcern\"\n \t\"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/session\"\n )\n \n // CreateSearchIndexes performs a createSearchIndexes operation.\n type CreateSearchIndexes struct {\n-\tindexes      bsoncore.Document\n-\tsession      *session.Client\n-\tclock        *session.ClusterClock\n-\tcollection   string\n-\tmonitor      *event.CommandMonitor\n-\tcrypt        driver.Crypt\n-\tdatabase     string\n-\tdeployment   driver.Deployment\n-\tselector     description.ServerSelector\n-\twriteConcern *writeconcern.WriteConcern\n-\tresult       CreateSearchIndexesResult\n-\tserverAPI    *driver.ServerAPIOptions\n-\ttimeout      *time.Duration\n+\tindexes    bsoncore.Document\n+\tsession    *session.Client\n+\tclock      *session.ClusterClock\n+\tcollection string\n+\tmonitor    *event.CommandMonitor\n+\tcrypt      driver.Crypt\n+\tdatabase   string\n+\tdeployment driver.Deployment\n+\tselector   description.ServerSelector\n+\tresult     CreateSearchIndexesResult\n+\tserverAPI  *driver.ServerAPIOptions\n+\ttimeout    *time.Duration\n }\n \n // CreateSearchIndexResult represents a single search index result in CreateSearchIndexesResult.\n@@ -109,9 +107,15 @@ func (csi *CreateSearchIndexes) Execute(ctx context.Context) error {\n \treturn driver.Operation{\n \t\tCommandFn:         csi.command,\n \t\tProcessResponseFn: csi.processResponse,\n+\t\tClient:            csi.session,\n+\t\tClock:             csi.clock,\n \t\tCommandMonitor:    csi.monitor,\n+\t\tCrypt:             csi.crypt,\n \t\tDatabase:          csi.database,\n \t\tDeployment:        csi.deployment,\n+\t\tSelector:          csi.selector,\n+\t\tServerAPI:         csi.serverAPI,\n+\t\tTimeout:           csi.timeout,\n \t}.Execute(ctx)\n \n }\n@@ -214,16 +218,6 @@ func (csi *CreateSearchIndexes) ServerSelector(selector description.ServerSelect\n \treturn csi\n }\n \n-// WriteConcern sets the write concern for this operation.\n-func (csi *CreateSearchIndexes) WriteConcern(writeConcern *writeconcern.WriteConcern) *CreateSearchIndexes {\n-\tif csi == nil {\n-\t\tcsi = new(CreateSearchIndexes)\n-\t}\n-\n-\tcsi.writeConcern = writeConcern\n-\treturn csi\n-}\n-\n // ServerAPI sets the server API version for this operation.\n func (csi *CreateSearchIndexes) ServerAPI(serverAPI *driver.ServerAPIOptions) *CreateSearchIndexes {\n \tif csi == nil {"
    },
    {
      "sha": "e55b12a74880be7ecda60814898a80b767dbed17",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/doc.go",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdoc.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,14 @@\n+// Copyright (C) MongoDB, Inc. 2024-present.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n+// not use this file except in compliance with the License. You may obtain\n+// a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n+\n+// Package operation is intended for internal use only. It is made available to\n+// facilitate use cases that require access to internal MongoDB driver\n+// functionality and state. The API of this package is not stable and there is\n+// no backward compatibility guarantee.\n+//\n+// WARNING: THIS PACKAGE IS EXPERIMENTAL AND MAY BE MODIFIED OR REMOVED WITHOUT\n+// NOTICE! USE WITH EXTREME CAUTION!\n+package operation"
    },
    {
      "sha": "3992c831656c6b499c1876e9671a517832a5f56b",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/drop_search_index.go",
      "status": "modified",
      "additions": 12,
      "deletions": 25,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdrop_search_index.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdrop_search_index.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdrop_search_index.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -14,27 +14,25 @@ import (\n \n \t\"go.mongodb.org/mongo-driver/event\"\n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n-\t\"go.mongodb.org/mongo-driver/mongo/writeconcern\"\n \t\"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/session\"\n )\n \n // DropSearchIndex performs an dropSearchIndex operation.\n type DropSearchIndex struct {\n-\tindex        string\n-\tsession      *session.Client\n-\tclock        *session.ClusterClock\n-\tcollection   string\n-\tmonitor      *event.CommandMonitor\n-\tcrypt        driver.Crypt\n-\tdatabase     string\n-\tdeployment   driver.Deployment\n-\tselector     description.ServerSelector\n-\twriteConcern *writeconcern.WriteConcern\n-\tresult       DropSearchIndexResult\n-\tserverAPI    *driver.ServerAPIOptions\n-\ttimeout      *time.Duration\n+\tindex      string\n+\tsession    *session.Client\n+\tclock      *session.ClusterClock\n+\tcollection string\n+\tmonitor    *event.CommandMonitor\n+\tcrypt      driver.Crypt\n+\tdatabase   string\n+\tdeployment driver.Deployment\n+\tselector   description.ServerSelector\n+\tresult     DropSearchIndexResult\n+\tserverAPI  *driver.ServerAPIOptions\n+\ttimeout    *time.Duration\n }\n \n // DropSearchIndexResult represents a dropSearchIndex result returned by the server.\n@@ -93,7 +91,6 @@ func (dsi *DropSearchIndex) Execute(ctx context.Context) error {\n \t\tDatabase:          dsi.database,\n \t\tDeployment:        dsi.deployment,\n \t\tSelector:          dsi.selector,\n-\t\tWriteConcern:      dsi.writeConcern,\n \t\tServerAPI:         dsi.serverAPI,\n \t\tTimeout:           dsi.timeout,\n \t}.Execute(ctx)\n@@ -196,16 +193,6 @@ func (dsi *DropSearchIndex) ServerSelector(selector description.ServerSelector)\n \treturn dsi\n }\n \n-// WriteConcern sets the write concern for this operation.\n-func (dsi *DropSearchIndex) WriteConcern(writeConcern *writeconcern.WriteConcern) *DropSearchIndex {\n-\tif dsi == nil {\n-\t\tdsi = new(DropSearchIndex)\n-\t}\n-\n-\tdsi.writeConcern = writeConcern\n-\treturn dsi\n-}\n-\n // ServerAPI sets the server API version for this operation.\n func (dsi *DropSearchIndex) ServerAPI(serverAPI *driver.ServerAPIOptions) *DropSearchIndex {\n \tif dsi == nil {"
    },
    {
      "sha": "8950fde86d297f3478cbbf92ef414414f94cf4f5",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/find.go",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Ffind.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Ffind.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Ffind.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -62,6 +62,7 @@ type Find struct {\n \tresult              driver.CursorResponse\n \tserverAPI           *driver.ServerAPIOptions\n \ttimeout             *time.Duration\n+\tomitCSOTMaxTimeMS   bool\n \tlogger              *logger.Logger\n }\n \n@@ -110,6 +111,7 @@ func (f *Find) Execute(ctx context.Context) error {\n \t\tTimeout:           f.timeout,\n \t\tLogger:            f.logger,\n \t\tName:              driverutil.FindOp,\n+\t\tOmitCSOTMaxTimeMS: f.omitCSOTMaxTimeMS,\n \t}.Execute(ctx)\n \n }\n@@ -552,6 +554,18 @@ func (f *Find) Timeout(timeout *time.Duration) *Find {\n \treturn f\n }\n \n+// OmitCSOTMaxTimeMS omits the automatically-calculated \"maxTimeMS\" from the\n+// command when CSOT is enabled. It does not effect \"maxTimeMS\" set by\n+// [Find.MaxTime].\n+func (f *Find) OmitCSOTMaxTimeMS(omit bool) *Find {\n+\tif f == nil {\n+\t\tf = new(Find)\n+\t}\n+\n+\tf.omitCSOTMaxTimeMS = omit\n+\treturn f\n+}\n+\n // Logger sets the logger for this operation.\n func (f *Find) Logger(logger *logger.Logger) *Find {\n \tif f == nil {"
    },
    {
      "sha": "64f2da7f6fe3b6ae951488a2ffe1b009fbe7cdd7",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/update_search_index.go",
      "status": "modified",
      "additions": 13,
      "deletions": 26,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fupdate_search_index.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fupdate_search_index.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fupdate_search_index.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -14,28 +14,26 @@ import (\n \n \t\"go.mongodb.org/mongo-driver/event\"\n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n-\t\"go.mongodb.org/mongo-driver/mongo/writeconcern\"\n \t\"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/session\"\n )\n \n // UpdateSearchIndex performs a updateSearchIndex operation.\n type UpdateSearchIndex struct {\n-\tindex        string\n-\tdefinition   bsoncore.Document\n-\tsession      *session.Client\n-\tclock        *session.ClusterClock\n-\tcollection   string\n-\tmonitor      *event.CommandMonitor\n-\tcrypt        driver.Crypt\n-\tdatabase     string\n-\tdeployment   driver.Deployment\n-\tselector     description.ServerSelector\n-\twriteConcern *writeconcern.WriteConcern\n-\tresult       UpdateSearchIndexResult\n-\tserverAPI    *driver.ServerAPIOptions\n-\ttimeout      *time.Duration\n+\tindex      string\n+\tdefinition bsoncore.Document\n+\tsession    *session.Client\n+\tclock      *session.ClusterClock\n+\tcollection string\n+\tmonitor    *event.CommandMonitor\n+\tcrypt      driver.Crypt\n+\tdatabase   string\n+\tdeployment driver.Deployment\n+\tselector   description.ServerSelector\n+\tresult     UpdateSearchIndexResult\n+\tserverAPI  *driver.ServerAPIOptions\n+\ttimeout    *time.Duration\n }\n \n // UpdateSearchIndexResult represents a single index in the updateSearchIndexResult result.\n@@ -95,7 +93,6 @@ func (usi *UpdateSearchIndex) Execute(ctx context.Context) error {\n \t\tDatabase:          usi.database,\n \t\tDeployment:        usi.deployment,\n \t\tSelector:          usi.selector,\n-\t\tWriteConcern:      usi.writeConcern,\n \t\tServerAPI:         usi.serverAPI,\n \t\tTimeout:           usi.timeout,\n \t}.Execute(ctx)\n@@ -209,16 +206,6 @@ func (usi *UpdateSearchIndex) ServerSelector(selector description.ServerSelector\n \treturn usi\n }\n \n-// WriteConcern sets the write concern for this operation.\n-func (usi *UpdateSearchIndex) WriteConcern(writeConcern *writeconcern.WriteConcern) *UpdateSearchIndex {\n-\tif usi == nil {\n-\t\tusi = new(UpdateSearchIndex)\n-\t}\n-\n-\tusi.writeConcern = writeConcern\n-\treturn usi\n-}\n-\n // ServerAPI sets the server API version for this operation.\n func (usi *UpdateSearchIndex) ServerAPI(serverAPI *driver.ServerAPIOptions) *UpdateSearchIndex {\n \tif usi == nil {"
    },
    {
      "sha": "80b2ac2dd5e872a2cd0dbc2e87de9f906caef2c8",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/session/doc.go",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fsession%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fsession%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fsession%2Fdoc.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,14 @@\n+// Copyright (C) MongoDB, Inc. 2024-present.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n+// not use this file except in compliance with the License. You may obtain\n+// a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n+\n+// Package session is intended for internal use only. It is made available to\n+// facilitate use cases that require access to internal MongoDB driver\n+// functionality and state. The API of this package is not stable and there is\n+// no backward compatibility guarantee.\n+//\n+// WARNING: THIS PACKAGE IS EXPERIMENTAL AND MAY BE MODIFIED OR REMOVED WITHOUT\n+// NOTICE! USE WITH EXTREME CAUTION!\n+package session"
    },
    {
      "sha": "649e87b3d1969d95ed4e3b25ea618b6b0c406ac7",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/connection.go",
      "status": "modified",
      "additions": 18,
      "deletions": 4,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -18,6 +18,7 @@ import (\n \t\"sync/atomic\"\n \t\"time\"\n \n+\t\"go.mongodb.org/mongo-driver/internal/csot\"\n \t\"go.mongodb.org/mongo-driver/mongo/address\"\n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n \t\"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n@@ -77,6 +78,10 @@ type connection struct {\n \t// TODO(GODRIVER-2824): change driverConnectionID type to int64.\n \tdriverConnectionID uint64\n \tgeneration         uint64\n+\n+\t// awaitingResponse indicates that the server response was not completely\n+\t// read before returning the connection to the pool.\n+\tawaitingResponse bool\n }\n \n // newConnection handles the creation of a connection. It does not connect the connection.\n@@ -315,7 +320,7 @@ func transformNetworkError(ctx context.Context, originalError error, contextDead\n \n \t// If there was an error and the context was cancelled, we assume it happened due to the cancellation.\n \tif errors.Is(ctx.Err(), context.Canceled) {\n-\t\treturn context.Canceled\n+\t\treturn ctx.Err()\n \t}\n \n \t// If there was a timeout error and the context deadline was used, we convert the error into\n@@ -324,7 +329,7 @@ func transformNetworkError(ctx context.Context, originalError error, contextDead\n \t\treturn originalError\n \t}\n \tif netErr, ok := originalError.(net.Error); ok && netErr.Timeout() {\n-\t\treturn context.DeadlineExceeded\n+\t\treturn fmt.Errorf(\"%w: %s\", context.DeadlineExceeded, originalError.Error())\n \t}\n \n \treturn originalError\n@@ -414,8 +419,17 @@ func (c *connection) readWireMessage(ctx context.Context) ([]byte, error) {\n \n \tdst, errMsg, err := c.read(ctx)\n \tif err != nil {\n-\t\t// We closeConnection the connection because we don't know if there are other bytes left to read.\n-\t\tc.close()\n+\t\tif nerr := net.Error(nil); errors.As(err, &nerr) && nerr.Timeout() && csot.IsTimeoutContext(ctx) {\n+\t\t\t// If the error was a timeout error and CSOT is enabled, instead of\n+\t\t\t// closing the connection mark it as awaiting response so the pool\n+\t\t\t// can read the response before making it available to other\n+\t\t\t// operations.\n+\t\t\tc.awaitingResponse = true\n+\t\t} else {\n+\t\t\t// Otherwise, use the pre-CSOT behavior and close the connection\n+\t\t\t// because we don't know if there are other bytes left to read.\n+\t\t\tc.close()\n+\t\t}\n \t\tmessage := errMsg\n \t\tif errors.Is(err, io.EOF) {\n \t\t\tmessage = \"socket was unexpectedly closed\""
    },
    {
      "sha": "52461eb681b7ef73ad397b055e2d29e7d211151e",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/pool.go",
      "status": "modified",
      "additions": 137,
      "deletions": 22,
      "changes": 159,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fpool.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fpool.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fpool.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -467,6 +467,7 @@ func (p *pool) checkOut(ctx context.Context) (conn *connection, err error) {\n \t\t})\n \t}\n \n+\tstart := time.Now()\n \t// Check the pool state while holding a stateMu read lock. If the pool state is not \"ready\",\n \t// return an error. Do all of this while holding the stateMu read lock to prevent a state change between\n \t// checking the state and entering the wait queue. Not holding the stateMu read lock here may\n@@ -477,8 +478,10 @@ func (p *pool) checkOut(ctx context.Context) (conn *connection, err error) {\n \tcase poolClosed:\n \t\tp.stateMu.RUnlock()\n \n+\t\tduration := time.Since(start)\n \t\tif mustLogPoolMessage(p) {\n \t\t\tkeysAndValues := logger.KeyValues{\n+\t\t\t\tlogger.KeyDurationMS, duration.Milliseconds(),\n \t\t\t\tlogger.KeyReason, logger.ReasonConnCheckoutFailedPoolClosed,\n \t\t\t}\n \n@@ -487,18 +490,21 @@ func (p *pool) checkOut(ctx context.Context) (conn *connection, err error) {\n \n \t\tif p.monitor != nil {\n \t\t\tp.monitor.Event(&event.PoolEvent{\n-\t\t\t\tType:    event.GetFailed,\n-\t\t\t\tAddress: p.address.String(),\n-\t\t\t\tReason:  event.ReasonPoolClosed,\n+\t\t\t\tType:     event.GetFailed,\n+\t\t\t\tAddress:  p.address.String(),\n+\t\t\t\tDuration: duration,\n+\t\t\t\tReason:   event.ReasonPoolClosed,\n \t\t\t})\n \t\t}\n \t\treturn nil, ErrPoolClosed\n \tcase poolPaused:\n \t\terr := poolClearedError{err: p.lastClearErr, address: p.address}\n \t\tp.stateMu.RUnlock()\n \n+\t\tduration := time.Since(start)\n \t\tif mustLogPoolMessage(p) {\n \t\t\tkeysAndValues := logger.KeyValues{\n+\t\t\t\tlogger.KeyDurationMS, duration.Milliseconds(),\n \t\t\t\tlogger.KeyReason, logger.ReasonConnCheckoutFailedError,\n \t\t\t}\n \n@@ -507,10 +513,11 @@ func (p *pool) checkOut(ctx context.Context) (conn *connection, err error) {\n \n \t\tif p.monitor != nil {\n \t\t\tp.monitor.Event(&event.PoolEvent{\n-\t\t\t\tType:    event.GetFailed,\n-\t\t\t\tAddress: p.address.String(),\n-\t\t\t\tReason:  event.ReasonConnectionErrored,\n-\t\t\t\tError:   err,\n+\t\t\t\tType:     event.GetFailed,\n+\t\t\t\tAddress:  p.address.String(),\n+\t\t\t\tDuration: duration,\n+\t\t\t\tReason:   event.ReasonConnectionErrored,\n+\t\t\t\tError:    err,\n \t\t\t})\n \t\t}\n \t\treturn nil, err\n@@ -539,9 +546,11 @@ func (p *pool) checkOut(ctx context.Context) (conn *connection, err error) {\n \t\t// or an error, so unlock the stateMu lock here.\n \t\tp.stateMu.RUnlock()\n \n+\t\tduration := time.Since(start)\n \t\tif w.err != nil {\n \t\t\tif mustLogPoolMessage(p) {\n \t\t\t\tkeysAndValues := logger.KeyValues{\n+\t\t\t\t\tlogger.KeyDurationMS, duration.Milliseconds(),\n \t\t\t\t\tlogger.KeyReason, logger.ReasonConnCheckoutFailedError,\n \t\t\t\t}\n \n@@ -550,18 +559,21 @@ func (p *pool) checkOut(ctx context.Context) (conn *connection, err error) {\n \n \t\t\tif p.monitor != nil {\n \t\t\t\tp.monitor.Event(&event.PoolEvent{\n-\t\t\t\t\tType:    event.GetFailed,\n-\t\t\t\t\tAddress: p.address.String(),\n-\t\t\t\t\tReason:  event.ReasonConnectionErrored,\n-\t\t\t\t\tError:   w.err,\n+\t\t\t\t\tType:     event.GetFailed,\n+\t\t\t\t\tAddress:  p.address.String(),\n+\t\t\t\t\tDuration: duration,\n+\t\t\t\t\tReason:   event.ReasonConnectionErrored,\n+\t\t\t\t\tError:    w.err,\n \t\t\t\t})\n \t\t\t}\n \t\t\treturn nil, w.err\n \t\t}\n \n+\t\tduration = time.Since(start)\n \t\tif mustLogPoolMessage(p) {\n \t\t\tkeysAndValues := logger.KeyValues{\n \t\t\t\tlogger.KeyDriverConnectionID, w.conn.driverConnectionID,\n+\t\t\t\tlogger.KeyDurationMS, duration.Milliseconds(),\n \t\t\t}\n \n \t\t\tlogPoolMessage(p, logger.ConnectionCheckedOut, keysAndValues...)\n@@ -572,6 +584,7 @@ func (p *pool) checkOut(ctx context.Context) (conn *connection, err error) {\n \t\t\t\tType:         event.GetSucceeded,\n \t\t\t\tAddress:      p.address.String(),\n \t\t\t\tConnectionID: w.conn.driverConnectionID,\n+\t\t\t\tDuration:     duration,\n \t\t\t})\n \t\t}\n \n@@ -584,12 +597,14 @@ func (p *pool) checkOut(ctx context.Context) (conn *connection, err error) {\n \tp.stateMu.RUnlock()\n \n \t// Wait for either the wantConn to be ready or for the Context to time out.\n-\tstart := time.Now()\n+\twaitQueueStart := time.Now()\n \tselect {\n \tcase <-w.ready:\n \t\tif w.err != nil {\n+\t\t\tduration := time.Since(start)\n \t\t\tif mustLogPoolMessage(p) {\n \t\t\t\tkeysAndValues := logger.KeyValues{\n+\t\t\t\t\tlogger.KeyDurationMS, duration.Milliseconds(),\n \t\t\t\t\tlogger.KeyReason, logger.ReasonConnCheckoutFailedError,\n \t\t\t\t\tlogger.KeyError, w.err.Error(),\n \t\t\t\t}\n@@ -599,19 +614,22 @@ func (p *pool) checkOut(ctx context.Context) (conn *connection, err error) {\n \n \t\t\tif p.monitor != nil {\n \t\t\t\tp.monitor.Event(&event.PoolEvent{\n-\t\t\t\t\tType:    event.GetFailed,\n-\t\t\t\t\tAddress: p.address.String(),\n-\t\t\t\t\tReason:  event.ReasonConnectionErrored,\n-\t\t\t\t\tError:   w.err,\n+\t\t\t\t\tType:     event.GetFailed,\n+\t\t\t\t\tAddress:  p.address.String(),\n+\t\t\t\t\tDuration: duration,\n+\t\t\t\t\tReason:   event.ReasonConnectionErrored,\n+\t\t\t\t\tError:    w.err,\n \t\t\t\t})\n \t\t\t}\n \n \t\t\treturn nil, w.err\n \t\t}\n \n+\t\tduration := time.Since(start)\n \t\tif mustLogPoolMessage(p) {\n \t\t\tkeysAndValues := logger.KeyValues{\n \t\t\t\tlogger.KeyDriverConnectionID, w.conn.driverConnectionID,\n+\t\t\t\tlogger.KeyDurationMS, duration.Milliseconds(),\n \t\t\t}\n \n \t\t\tlogPoolMessage(p, logger.ConnectionCheckedOut, keysAndValues...)\n@@ -622,14 +640,17 @@ func (p *pool) checkOut(ctx context.Context) (conn *connection, err error) {\n \t\t\t\tType:         event.GetSucceeded,\n \t\t\t\tAddress:      p.address.String(),\n \t\t\t\tConnectionID: w.conn.driverConnectionID,\n+\t\t\t\tDuration:     duration,\n \t\t\t})\n \t\t}\n \t\treturn w.conn, nil\n \tcase <-ctx.Done():\n-\t\tduration := time.Since(start)\n+\t\twaitQueueDuration := time.Since(waitQueueStart)\n \n+\t\tduration := time.Since(start)\n \t\tif mustLogPoolMessage(p) {\n \t\t\tkeysAndValues := logger.KeyValues{\n+\t\t\t\tlogger.KeyDurationMS, duration.Milliseconds(),\n \t\t\t\tlogger.KeyReason, logger.ReasonConnCheckoutFailedTimout,\n \t\t\t}\n \n@@ -638,10 +659,11 @@ func (p *pool) checkOut(ctx context.Context) (conn *connection, err error) {\n \n \t\tif p.monitor != nil {\n \t\t\tp.monitor.Event(&event.PoolEvent{\n-\t\t\t\tType:    event.GetFailed,\n-\t\t\t\tAddress: p.address.String(),\n-\t\t\t\tReason:  event.ReasonTimedOut,\n-\t\t\t\tError:   ctx.Err(),\n+\t\t\t\tType:     event.GetFailed,\n+\t\t\t\tAddress:  p.address.String(),\n+\t\t\t\tDuration: duration,\n+\t\t\t\tReason:   event.ReasonTimedOut,\n+\t\t\t\tError:    ctx.Err(),\n \t\t\t})\n \t\t}\n \n@@ -650,7 +672,7 @@ func (p *pool) checkOut(ctx context.Context) (conn *connection, err error) {\n \t\t\tmaxPoolSize:          p.maxSize,\n \t\t\ttotalConnections:     p.totalConnectionCount(),\n \t\t\tavailableConnections: p.availableConnectionCount(),\n-\t\t\twaitDuration:         duration,\n+\t\t\twaitDuration:         waitQueueDuration,\n \t\t}\n \t\tif p.loadBalanced {\n \t\t\terr.pinnedConnections = &pinnedConnections{\n@@ -742,6 +764,81 @@ func (p *pool) removeConnection(conn *connection, reason reason, err error) erro\n \treturn nil\n }\n \n+var (\n+\t// BGReadTimeout is the maximum amount of the to wait when trying to read\n+\t// the server reply on a connection after an operation timed out. The\n+\t// default is 1 second.\n+\t//\n+\t// Deprecated: BGReadTimeout is intended for internal use only and may be\n+\t// removed or modified at any time.\n+\tBGReadTimeout = 1 * time.Second\n+\n+\t// BGReadCallback is a callback for monitoring the behavior of the\n+\t// background-read-on-timeout connection preserving mechanism.\n+\t//\n+\t// Deprecated: BGReadCallback is intended for internal use only and may be\n+\t// removed or modified at any time.\n+\tBGReadCallback func(addr string, start, read time.Time, errs []error, connClosed bool)\n+)\n+\n+// bgRead sets a new read deadline on the provided connection (1 second in the\n+// future) and tries to read any bytes returned by the server. If successful, it\n+// checks the connection into the provided pool. If there are any errors, it\n+// closes the connection.\n+//\n+// It calls the package-global BGReadCallback function, if set, with the\n+// address, timings, and any errors that occurred.\n+func bgRead(pool *pool, conn *connection) {\n+\tvar start, read time.Time\n+\tstart = time.Now()\n+\terrs := make([]error, 0)\n+\tconnClosed := false\n+\n+\tdefer func() {\n+\t\t// No matter what happens, always check the connection back into the\n+\t\t// pool, which will either make it available for other operations or\n+\t\t// remove it from the pool if it was closed.\n+\t\terr := pool.checkInNoEvent(conn)\n+\t\tif err != nil {\n+\t\t\terrs = append(errs, fmt.Errorf(\"error checking in: %w\", err))\n+\t\t}\n+\n+\t\tif BGReadCallback != nil {\n+\t\t\tBGReadCallback(conn.addr.String(), start, read, errs, connClosed)\n+\t\t}\n+\t}()\n+\n+\terr := conn.nc.SetReadDeadline(time.Now().Add(BGReadTimeout))\n+\tif err != nil {\n+\t\terrs = append(errs, fmt.Errorf(\"error setting a read deadline: %w\", err))\n+\n+\t\tconnClosed = true\n+\t\terr := conn.close()\n+\t\tif err != nil {\n+\t\t\terrs = append(errs, fmt.Errorf(\"error closing conn after setting read deadline: %w\", err))\n+\t\t}\n+\n+\t\treturn\n+\t}\n+\n+\t// The context here is only used for cancellation, not deadline timeout, so\n+\t// use context.Background(). The read timeout is set by calling\n+\t// SetReadDeadline above.\n+\t_, _, err = conn.read(context.Background())\n+\tread = time.Now()\n+\tif err != nil {\n+\t\terrs = append(errs, fmt.Errorf(\"error reading: %w\", err))\n+\n+\t\tconnClosed = true\n+\t\terr := conn.close()\n+\t\tif err != nil {\n+\t\t\terrs = append(errs, fmt.Errorf(\"error closing conn after reading: %w\", err))\n+\t\t}\n+\n+\t\treturn\n+\t}\n+}\n+\n // checkIn returns an idle connection to the pool. If the connection is perished or the pool is\n // closed, it is removed from the connection pool and closed.\n func (p *pool) checkIn(conn *connection) error {\n@@ -781,6 +878,20 @@ func (p *pool) checkInNoEvent(conn *connection) error {\n \t\treturn ErrWrongPool\n \t}\n \n+\t// If the connection has an awaiting server response, try to read the\n+\t// response in another goroutine before checking it back into the pool.\n+\t//\n+\t// Do this here because we want to publish checkIn events when the operation\n+\t// is done with the connection, not when it's ready to be used again. That\n+\t// means that connections in \"awaiting response\" state are checked in but\n+\t// not usable, which is not covered by the current pool events. We may need\n+\t// to add pool event information in the future to communicate that.\n+\tif conn.awaitingResponse {\n+\t\tconn.awaitingResponse = false\n+\t\tgo bgRead(p, conn)\n+\t\treturn nil\n+\t}\n+\n \t// Bump the connection idle deadline here because we're about to make the connection \"available\".\n \t// The idle deadline is used to determine when a connection has reached its max idle time and\n \t// should be closed. A connection reaches its max idle time when it has been \"available\" in the\n@@ -1085,6 +1196,7 @@ func (p *pool) createConnections(ctx context.Context, wg *sync.WaitGroup) {\n \t\t\t})\n \t\t}\n \n+\t\tstart := time.Now()\n \t\t// Pass the createConnections context to connect to allow pool close to cancel connection\n \t\t// establishment so shutdown doesn't block indefinitely if connectTimeout=0.\n \t\terr := conn.connect(ctx)\n@@ -1111,9 +1223,11 @@ func (p *pool) createConnections(ctx context.Context, wg *sync.WaitGroup) {\n \t\t\tcontinue\n \t\t}\n \n+\t\tduration := time.Since(start)\n \t\tif mustLogPoolMessage(p) {\n \t\t\tkeysAndValues := logger.KeyValues{\n \t\t\t\tlogger.KeyDriverConnectionID, conn.driverConnectionID,\n+\t\t\t\tlogger.KeyDurationMS, duration.Milliseconds(),\n \t\t\t}\n \n \t\t\tlogPoolMessage(p, logger.ConnectionReady, keysAndValues...)\n@@ -1124,6 +1238,7 @@ func (p *pool) createConnections(ctx context.Context, wg *sync.WaitGroup) {\n \t\t\t\tType:         event.ConnectionReady,\n \t\t\t\tAddress:      p.address.String(),\n \t\t\t\tConnectionID: conn.driverConnectionID,\n+\t\t\t\tDuration:     duration,\n \t\t\t})\n \t\t}\n "
    },
    {
      "sha": "c7b168dc2c424d88db223135eb8534d2f0ee2426",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/rtt_monitor.go",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Frtt_monitor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Frtt_monitor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Frtt_monitor.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -56,7 +56,6 @@ type rttMonitor struct {\n \tcfg      *rttConfig\n \tctx      context.Context\n \tcancelFn context.CancelFunc\n-\tstarted  bool\n }\n \n var _ driver.RTTMonitor = &rttMonitor{}\n@@ -83,7 +82,6 @@ func (r *rttMonitor) connect() {\n \tr.connMu.Lock()\n \tdefer r.connMu.Unlock()\n \n-\tr.started = true\n \tr.closeWg.Add(1)\n \n \tgo func() {\n@@ -97,10 +95,6 @@ func (r *rttMonitor) disconnect() {\n \tr.connMu.Lock()\n \tdefer r.connMu.Unlock()\n \n-\tif !r.started {\n-\t\treturn\n-\t}\n-\n \tr.cancelFn()\n \n \t// Wait for the existing connection to complete.\n@@ -322,7 +316,10 @@ func (r *rttMonitor) Stats() string {\n \t\t}\n \t}\n \n-\treturn fmt.Sprintf(`Round-trip-time monitor statistics:`+\"\\n\"+\n-\t\t`average RTT: %v, minimum RTT: %v, 90th percentile RTT: %v, standard dev: %v`+\"\\n\",\n-\t\ttime.Duration(avg), r.minRTT, r.rtt90, time.Duration(stdDev))\n+\treturn fmt.Sprintf(\n+\t\t\"network round-trip time stats: avg: %v, min: %v, 90th pct: %v, stddev: %v\",\n+\t\ttime.Duration(avg),\n+\t\tr.minRTT,\n+\t\tr.rtt90,\n+\t\ttime.Duration(stdDev))\n }"
    },
    {
      "sha": "99f8dd618ba04b4b7befa32516fb1888140fc39e",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/server.go",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -125,6 +125,7 @@ type Server struct {\n \n \tprocessErrorLock sync.Mutex\n \trttMonitor       *rttMonitor\n+\tmonitorOnce      sync.Once\n }\n \n // updateTopologyCallback is a callback used to create a server that should be called when the parent Topology instance\n@@ -285,10 +286,10 @@ func (s *Server) Disconnect(ctx context.Context) error {\n \tclose(s.done)\n \ts.cancelCheck()\n \n-\ts.rttMonitor.disconnect()\n \ts.pool.close(ctx)\n \n \ts.closewg.Wait()\n+\ts.rttMonitor.disconnect()\n \tatomic.StoreInt64(&s.state, serverDisconnected)\n \n \treturn nil\n@@ -661,8 +662,8 @@ func (s *Server) update() {\n \t\ttransitionedFromNetworkError := desc.LastError != nil && unwrapConnectionError(desc.LastError) != nil &&\n \t\t\tpreviousDescription.Kind != description.Unknown\n \n-\t\tif isStreamingEnabled(s) && isStreamable(s) && !s.rttMonitor.started {\n-\t\t\ts.rttMonitor.connect()\n+\t\tif isStreamingEnabled(s) && isStreamable(s) {\n+\t\t\ts.monitorOnce.Do(s.rttMonitor.connect)\n \t\t}\n \n \t\tif isStreamable(s) || connectionIsStreaming || transitionedFromNetworkError {"
    },
    {
      "sha": "0fb913d21b25c9cd3acdc339c23a8f0ffc514776",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/topology.go",
      "status": "modified",
      "additions": 13,
      "deletions": 4,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ftopology.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ftopology.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ftopology.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -4,10 +4,19 @@\n // not use this file except in compliance with the License. You may obtain\n // a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n \n-// Package topology contains types that handles the discovery, monitoring, and selection\n-// of servers. This package is designed to expose enough inner workings of service discovery\n-// and monitoring to allow low level applications to have fine grained control, while hiding\n-// most of the detailed implementation of the algorithms.\n+// Package topology is intended for internal use only. It is made available to\n+// facilitate use cases that require access to internal MongoDB driver\n+// functionality and state. The API of this package is not stable and there is\n+// no backward compatibility guarantee.\n+//\n+// WARNING: THIS PACKAGE IS EXPERIMENTAL AND MAY BE MODIFIED OR REMOVED WITHOUT\n+// NOTICE! USE WITH EXTREME CAUTION!\n+//\n+// Package topology contains types that handles the discovery, monitoring, and\n+// selection of servers. This package is designed to expose enough inner\n+// workings of service discovery and monitoring to allow low level applications\n+// to have fine grained control, while hiding most of the detailed\n+// implementation of the algorithms.\n package topology // import \"go.mongodb.org/mongo-driver/x/mongo/driver/topology\"\n \n import ("
    },
    {
      "sha": "2199f855ba6c55f45cae275cfa9ff46fa7d27d6d",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/wiremessage/wiremessage.go",
      "status": "modified",
      "additions": 25,
      "deletions": 15,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fwiremessage%2Fwiremessage.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fwiremessage%2Fwiremessage.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fwiremessage%2Fwiremessage.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -4,10 +4,18 @@\n // not use this file except in compliance with the License. You may obtain\n // a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n \n+// Package wiremessage is intended for internal use only. It is made available\n+// to facilitate use cases that require access to internal MongoDB driver\n+// functionality and state. The API of this package is not stable and there is\n+// no backward compatibility guarantee.\n+//\n+// WARNING: THIS PACKAGE IS EXPERIMENTAL AND MAY BE MODIFIED OR REMOVED WITHOUT\n+// NOTICE! USE WITH EXTREME CAUTION!\n package wiremessage\n \n import (\n \t\"bytes\"\n+\t\"encoding/binary\"\n \t\"strings\"\n \t\"sync/atomic\"\n \n@@ -231,10 +239,11 @@ func ReadHeader(src []byte) (length, requestID, responseTo int32, opcode OpCode,\n \tif len(src) < 16 {\n \t\treturn 0, 0, 0, 0, src, false\n \t}\n-\tlength = (int32(src[0]) | int32(src[1])<<8 | int32(src[2])<<16 | int32(src[3])<<24)\n-\trequestID = (int32(src[4]) | int32(src[5])<<8 | int32(src[6])<<16 | int32(src[7])<<24)\n-\tresponseTo = (int32(src[8]) | int32(src[9])<<8 | int32(src[10])<<16 | int32(src[11])<<24)\n-\topcode = OpCode(int32(src[12]) | int32(src[13])<<8 | int32(src[14])<<16 | int32(src[15])<<24)\n+\n+\tlength = readi32unsafe(src)\n+\trequestID = readi32unsafe(src[4:])\n+\tresponseTo = readi32unsafe(src[8:])\n+\topcode = OpCode(readi32unsafe(src[12:]))\n \treturn length, requestID, responseTo, opcode, src[16:], true\n }\n \n@@ -486,7 +495,7 @@ func ReadReplyCursorID(src []byte) (cursorID int64, rem []byte, ok bool) {\n \treturn readi64(src)\n }\n \n-// ReadReplyStartingFrom reads the starting from from src.\n+// ReadReplyStartingFrom reads the starting from src.\n func ReadReplyStartingFrom(src []byte) (startingFrom int32, rem []byte, ok bool) {\n \treturn readi32(src)\n }\n@@ -570,12 +579,16 @@ func ReadKillCursorsCursorIDs(src []byte, numIDs int32) (cursorIDs []int64, rem\n \treturn cursorIDs, src, true\n }\n \n-func appendi32(dst []byte, i32 int32) []byte {\n-\treturn append(dst, byte(i32), byte(i32>>8), byte(i32>>16), byte(i32>>24))\n+func appendi32(dst []byte, x int32) []byte {\n+\tb := []byte{0, 0, 0, 0}\n+\tbinary.LittleEndian.PutUint32(b, uint32(x))\n+\treturn append(dst, b...)\n }\n \n-func appendi64(b []byte, i int64) []byte {\n-\treturn append(b, byte(i), byte(i>>8), byte(i>>16), byte(i>>24), byte(i>>32), byte(i>>40), byte(i>>48), byte(i>>56))\n+func appendi64(dst []byte, x int64) []byte {\n+\tb := []byte{0, 0, 0, 0, 0, 0, 0, 0}\n+\tbinary.LittleEndian.PutUint64(b, uint64(x))\n+\treturn append(dst, b...)\n }\n \n func appendCString(b []byte, str string) []byte {\n@@ -587,21 +600,18 @@ func readi32(src []byte) (int32, []byte, bool) {\n \tif len(src) < 4 {\n \t\treturn 0, src, false\n \t}\n-\n-\treturn (int32(src[0]) | int32(src[1])<<8 | int32(src[2])<<16 | int32(src[3])<<24), src[4:], true\n+\treturn readi32unsafe(src), src[4:], true\n }\n \n func readi32unsafe(src []byte) int32 {\n-\treturn (int32(src[0]) | int32(src[1])<<8 | int32(src[2])<<16 | int32(src[3])<<24)\n+\treturn int32(binary.LittleEndian.Uint32(src))\n }\n \n func readi64(src []byte) (int64, []byte, bool) {\n \tif len(src) < 8 {\n \t\treturn 0, src, false\n \t}\n-\ti64 := (int64(src[0]) | int64(src[1])<<8 | int64(src[2])<<16 | int64(src[3])<<24 |\n-\t\tint64(src[4])<<32 | int64(src[5])<<40 | int64(src[6])<<48 | int64(src[7])<<56)\n-\treturn i64, src[8:], true\n+\treturn int64(binary.LittleEndian.Uint64(src)), src[8:], true\n }\n \n func readcstring(src []byte) (string, []byte, bool) {"
    },
    {
      "sha": "d92ff232fe983caa7b32af3f08807bfa00558437",
      "filename": "backend/vendor/golang.org/x/crypto/acme/http.go",
      "status": "modified",
      "additions": 20,
      "deletions": 1,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fhttp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fhttp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fhttp.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -15,6 +15,7 @@ import (\n \t\"io\"\n \t\"math/big\"\n \t\"net/http\"\n+\t\"runtime/debug\"\n \t\"strconv\"\n \t\"strings\"\n \t\"time\"\n@@ -271,9 +272,27 @@ func (c *Client) httpClient() *http.Client {\n }\n \n // packageVersion is the version of the module that contains this package, for\n-// sending as part of the User-Agent header. It's set in version_go112.go.\n+// sending as part of the User-Agent header.\n var packageVersion string\n \n+func init() {\n+\t// Set packageVersion if the binary was built in modules mode and x/crypto\n+\t// was not replaced with a different module.\n+\tinfo, ok := debug.ReadBuildInfo()\n+\tif !ok {\n+\t\treturn\n+\t}\n+\tfor _, m := range info.Deps {\n+\t\tif m.Path != \"golang.org/x/crypto\" {\n+\t\t\tcontinue\n+\t\t}\n+\t\tif m.Replace == nil {\n+\t\t\tpackageVersion = m.Version\n+\t\t}\n+\t\tbreak\n+\t}\n+}\n+\n // userAgent returns the User-Agent header value. It includes the package name,\n // the module version (if available), and the c.UserAgent value (if set).\n func (c *Client) userAgent() string {"
    },
    {
      "sha": "cc5fab604b8d06a9af020ab35e795bd90da57fbb",
      "filename": "backend/vendor/golang.org/x/crypto/acme/version_go112.go",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fversion_go112.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fversion_go112.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fversion_go112.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,27 +0,0 @@\n-// Copyright 2019 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-//go:build go1.12\n-\n-package acme\n-\n-import \"runtime/debug\"\n-\n-func init() {\n-\t// Set packageVersion if the binary was built in modules mode and x/crypto\n-\t// was not replaced with a different module.\n-\tinfo, ok := debug.ReadBuildInfo()\n-\tif !ok {\n-\t\treturn\n-\t}\n-\tfor _, m := range info.Deps {\n-\t\tif m.Path != \"golang.org/x/crypto\" {\n-\t\t\tcontinue\n-\t\t}\n-\t\tif m.Replace == nil {\n-\t\t\tpackageVersion = m.Version\n-\t\t}\n-\t\tbreak\n-\t}\n-}"
    },
    {
      "sha": "e6c645e7ceb47b4431b346484d240291e4dd7a2d",
      "filename": "backend/vendor/golang.org/x/crypto/ocsp/ocsp.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Focsp%2Focsp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Focsp%2Focsp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Focsp%2Focsp.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -5,7 +5,7 @@\n // Package ocsp parses OCSP responses as specified in RFC 2560. OCSP responses\n // are signed messages attesting to the validity of a certificate for a small\n // period of time. This is used to manage revocation for X.509 certificates.\n-package ocsp // import \"golang.org/x/crypto/ocsp\"\n+package ocsp\n \n import (\n \t\"crypto\""
    },
    {
      "sha": "28cd99c7f3fc50b03f3789b1013401db46d40bf9",
      "filename": "backend/vendor/golang.org/x/crypto/pbkdf2/pbkdf2.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Fpbkdf2%2Fpbkdf2.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Fpbkdf2%2Fpbkdf2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Fpbkdf2%2Fpbkdf2.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -16,7 +16,7 @@ Hash Functions SHA-1, SHA-224, SHA-256, SHA-384 and SHA-512 for HMAC. To\n choose, you can pass the `New` functions from the different SHA packages to\n pbkdf2.Key.\n */\n-package pbkdf2 // import \"golang.org/x/crypto/pbkdf2\"\n+package pbkdf2\n \n import (\n \t\"crypto/hmac\""
    },
    {
      "sha": "76fa40fb20afd69ab3d511c63963940383a795cb",
      "filename": "backend/vendor/golang.org/x/crypto/scrypt/scrypt.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Fscrypt%2Fscrypt.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Fscrypt%2Fscrypt.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Fscrypt%2Fscrypt.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -5,7 +5,7 @@\n // Package scrypt implements the scrypt key derivation function as defined in\n // Colin Percival's paper \"Stronger Key Derivation via Sequential Memory-Hard\n // Functions\" (https://www.tarsnap.com/scrypt/scrypt.pdf).\n-package scrypt // import \"golang.org/x/crypto/scrypt\"\n+package scrypt\n \n import (\n \t\"crypto/sha256\""
    },
    {
      "sha": "3a7e5ab1765be539989870ba07d9c073f67480b2",
      "filename": "backend/vendor/golang.org/x/net/html/doc.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fdoc.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -104,7 +104,7 @@ tokenization, and tokenization and tree construction stages of the WHATWG HTML\n parsing specification respectively. While the tokenizer parses and normalizes\n individual HTML tokens, only the parser constructs the DOM tree from the\n tokenized HTML, as described in the tree construction stage of the\n-specification, dynamically modifying or extending the docuemnt's DOM tree.\n+specification, dynamically modifying or extending the document's DOM tree.\n \n If your use case requires semantically well-formed HTML documents, as defined by\n the WHATWG specification, the parser should be used rather than the tokenizer."
    },
    {
      "sha": "3d6f516a595b3e0a8e530f2e220ea917da33ab62",
      "filename": "backend/vendor/golang.org/x/net/internal/socks/client.go",
      "status": "removed",
      "additions": 0,
      "deletions": 168,
      "changes": 168,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Finternal%2Fsocks%2Fclient.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Finternal%2Fsocks%2Fclient.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Finternal%2Fsocks%2Fclient.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,168 +0,0 @@\n-// Copyright 2018 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package socks\n-\n-import (\n-\t\"context\"\n-\t\"errors\"\n-\t\"io\"\n-\t\"net\"\n-\t\"strconv\"\n-\t\"time\"\n-)\n-\n-var (\n-\tnoDeadline   = time.Time{}\n-\taLongTimeAgo = time.Unix(1, 0)\n-)\n-\n-func (d *Dialer) connect(ctx context.Context, c net.Conn, address string) (_ net.Addr, ctxErr error) {\n-\thost, port, err := splitHostPort(address)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\tif deadline, ok := ctx.Deadline(); ok && !deadline.IsZero() {\n-\t\tc.SetDeadline(deadline)\n-\t\tdefer c.SetDeadline(noDeadline)\n-\t}\n-\tif ctx != context.Background() {\n-\t\terrCh := make(chan error, 1)\n-\t\tdone := make(chan struct{})\n-\t\tdefer func() {\n-\t\t\tclose(done)\n-\t\t\tif ctxErr == nil {\n-\t\t\t\tctxErr = <-errCh\n-\t\t\t}\n-\t\t}()\n-\t\tgo func() {\n-\t\t\tselect {\n-\t\t\tcase <-ctx.Done():\n-\t\t\t\tc.SetDeadline(aLongTimeAgo)\n-\t\t\t\terrCh <- ctx.Err()\n-\t\t\tcase <-done:\n-\t\t\t\terrCh <- nil\n-\t\t\t}\n-\t\t}()\n-\t}\n-\n-\tb := make([]byte, 0, 6+len(host)) // the size here is just an estimate\n-\tb = append(b, Version5)\n-\tif len(d.AuthMethods) == 0 || d.Authenticate == nil {\n-\t\tb = append(b, 1, byte(AuthMethodNotRequired))\n-\t} else {\n-\t\tams := d.AuthMethods\n-\t\tif len(ams) > 255 {\n-\t\t\treturn nil, errors.New(\"too many authentication methods\")\n-\t\t}\n-\t\tb = append(b, byte(len(ams)))\n-\t\tfor _, am := range ams {\n-\t\t\tb = append(b, byte(am))\n-\t\t}\n-\t}\n-\tif _, ctxErr = c.Write(b); ctxErr != nil {\n-\t\treturn\n-\t}\n-\n-\tif _, ctxErr = io.ReadFull(c, b[:2]); ctxErr != nil {\n-\t\treturn\n-\t}\n-\tif b[0] != Version5 {\n-\t\treturn nil, errors.New(\"unexpected protocol version \" + strconv.Itoa(int(b[0])))\n-\t}\n-\tam := AuthMethod(b[1])\n-\tif am == AuthMethodNoAcceptableMethods {\n-\t\treturn nil, errors.New(\"no acceptable authentication methods\")\n-\t}\n-\tif d.Authenticate != nil {\n-\t\tif ctxErr = d.Authenticate(ctx, c, am); ctxErr != nil {\n-\t\t\treturn\n-\t\t}\n-\t}\n-\n-\tb = b[:0]\n-\tb = append(b, Version5, byte(d.cmd), 0)\n-\tif ip := net.ParseIP(host); ip != nil {\n-\t\tif ip4 := ip.To4(); ip4 != nil {\n-\t\t\tb = append(b, AddrTypeIPv4)\n-\t\t\tb = append(b, ip4...)\n-\t\t} else if ip6 := ip.To16(); ip6 != nil {\n-\t\t\tb = append(b, AddrTypeIPv6)\n-\t\t\tb = append(b, ip6...)\n-\t\t} else {\n-\t\t\treturn nil, errors.New(\"unknown address type\")\n-\t\t}\n-\t} else {\n-\t\tif len(host) > 255 {\n-\t\t\treturn nil, errors.New(\"FQDN too long\")\n-\t\t}\n-\t\tb = append(b, AddrTypeFQDN)\n-\t\tb = append(b, byte(len(host)))\n-\t\tb = append(b, host...)\n-\t}\n-\tb = append(b, byte(port>>8), byte(port))\n-\tif _, ctxErr = c.Write(b); ctxErr != nil {\n-\t\treturn\n-\t}\n-\n-\tif _, ctxErr = io.ReadFull(c, b[:4]); ctxErr != nil {\n-\t\treturn\n-\t}\n-\tif b[0] != Version5 {\n-\t\treturn nil, errors.New(\"unexpected protocol version \" + strconv.Itoa(int(b[0])))\n-\t}\n-\tif cmdErr := Reply(b[1]); cmdErr != StatusSucceeded {\n-\t\treturn nil, errors.New(\"unknown error \" + cmdErr.String())\n-\t}\n-\tif b[2] != 0 {\n-\t\treturn nil, errors.New(\"non-zero reserved field\")\n-\t}\n-\tl := 2\n-\tvar a Addr\n-\tswitch b[3] {\n-\tcase AddrTypeIPv4:\n-\t\tl += net.IPv4len\n-\t\ta.IP = make(net.IP, net.IPv4len)\n-\tcase AddrTypeIPv6:\n-\t\tl += net.IPv6len\n-\t\ta.IP = make(net.IP, net.IPv6len)\n-\tcase AddrTypeFQDN:\n-\t\tif _, err := io.ReadFull(c, b[:1]); err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n-\t\tl += int(b[0])\n-\tdefault:\n-\t\treturn nil, errors.New(\"unknown address type \" + strconv.Itoa(int(b[3])))\n-\t}\n-\tif cap(b) < l {\n-\t\tb = make([]byte, l)\n-\t} else {\n-\t\tb = b[:l]\n-\t}\n-\tif _, ctxErr = io.ReadFull(c, b); ctxErr != nil {\n-\t\treturn\n-\t}\n-\tif a.IP != nil {\n-\t\tcopy(a.IP, b)\n-\t} else {\n-\t\ta.Name = string(b[:len(b)-2])\n-\t}\n-\ta.Port = int(b[len(b)-2])<<8 | int(b[len(b)-1])\n-\treturn &a, nil\n-}\n-\n-func splitHostPort(address string) (string, int, error) {\n-\thost, port, err := net.SplitHostPort(address)\n-\tif err != nil {\n-\t\treturn \"\", 0, err\n-\t}\n-\tportnum, err := strconv.Atoi(port)\n-\tif err != nil {\n-\t\treturn \"\", 0, err\n-\t}\n-\tif 1 > portnum || portnum > 0xffff {\n-\t\treturn \"\", 0, errors.New(\"port number out of range \" + port)\n-\t}\n-\treturn host, portnum, nil\n-}"
    },
    {
      "sha": "84fcc32b634b87124fe0f00afd596582dd740e30",
      "filename": "backend/vendor/golang.org/x/net/internal/socks/socks.go",
      "status": "removed",
      "additions": 0,
      "deletions": 317,
      "changes": 317,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Finternal%2Fsocks%2Fsocks.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Finternal%2Fsocks%2Fsocks.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Finternal%2Fsocks%2Fsocks.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,317 +0,0 @@\n-// Copyright 2018 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-// Package socks provides a SOCKS version 5 client implementation.\n-//\n-// SOCKS protocol version 5 is defined in RFC 1928.\n-// Username/Password authentication for SOCKS version 5 is defined in\n-// RFC 1929.\n-package socks\n-\n-import (\n-\t\"context\"\n-\t\"errors\"\n-\t\"io\"\n-\t\"net\"\n-\t\"strconv\"\n-)\n-\n-// A Command represents a SOCKS command.\n-type Command int\n-\n-func (cmd Command) String() string {\n-\tswitch cmd {\n-\tcase CmdConnect:\n-\t\treturn \"socks connect\"\n-\tcase cmdBind:\n-\t\treturn \"socks bind\"\n-\tdefault:\n-\t\treturn \"socks \" + strconv.Itoa(int(cmd))\n-\t}\n-}\n-\n-// An AuthMethod represents a SOCKS authentication method.\n-type AuthMethod int\n-\n-// A Reply represents a SOCKS command reply code.\n-type Reply int\n-\n-func (code Reply) String() string {\n-\tswitch code {\n-\tcase StatusSucceeded:\n-\t\treturn \"succeeded\"\n-\tcase 0x01:\n-\t\treturn \"general SOCKS server failure\"\n-\tcase 0x02:\n-\t\treturn \"connection not allowed by ruleset\"\n-\tcase 0x03:\n-\t\treturn \"network unreachable\"\n-\tcase 0x04:\n-\t\treturn \"host unreachable\"\n-\tcase 0x05:\n-\t\treturn \"connection refused\"\n-\tcase 0x06:\n-\t\treturn \"TTL expired\"\n-\tcase 0x07:\n-\t\treturn \"command not supported\"\n-\tcase 0x08:\n-\t\treturn \"address type not supported\"\n-\tdefault:\n-\t\treturn \"unknown code: \" + strconv.Itoa(int(code))\n-\t}\n-}\n-\n-// Wire protocol constants.\n-const (\n-\tVersion5 = 0x05\n-\n-\tAddrTypeIPv4 = 0x01\n-\tAddrTypeFQDN = 0x03\n-\tAddrTypeIPv6 = 0x04\n-\n-\tCmdConnect Command = 0x01 // establishes an active-open forward proxy connection\n-\tcmdBind    Command = 0x02 // establishes a passive-open forward proxy connection\n-\n-\tAuthMethodNotRequired         AuthMethod = 0x00 // no authentication required\n-\tAuthMethodUsernamePassword    AuthMethod = 0x02 // use username/password\n-\tAuthMethodNoAcceptableMethods AuthMethod = 0xff // no acceptable authentication methods\n-\n-\tStatusSucceeded Reply = 0x00\n-)\n-\n-// An Addr represents a SOCKS-specific address.\n-// Either Name or IP is used exclusively.\n-type Addr struct {\n-\tName string // fully-qualified domain name\n-\tIP   net.IP\n-\tPort int\n-}\n-\n-func (a *Addr) Network() string { return \"socks\" }\n-\n-func (a *Addr) String() string {\n-\tif a == nil {\n-\t\treturn \"<nil>\"\n-\t}\n-\tport := strconv.Itoa(a.Port)\n-\tif a.IP == nil {\n-\t\treturn net.JoinHostPort(a.Name, port)\n-\t}\n-\treturn net.JoinHostPort(a.IP.String(), port)\n-}\n-\n-// A Conn represents a forward proxy connection.\n-type Conn struct {\n-\tnet.Conn\n-\n-\tboundAddr net.Addr\n-}\n-\n-// BoundAddr returns the address assigned by the proxy server for\n-// connecting to the command target address from the proxy server.\n-func (c *Conn) BoundAddr() net.Addr {\n-\tif c == nil {\n-\t\treturn nil\n-\t}\n-\treturn c.boundAddr\n-}\n-\n-// A Dialer holds SOCKS-specific options.\n-type Dialer struct {\n-\tcmd          Command // either CmdConnect or cmdBind\n-\tproxyNetwork string  // network between a proxy server and a client\n-\tproxyAddress string  // proxy server address\n-\n-\t// ProxyDial specifies the optional dial function for\n-\t// establishing the transport connection.\n-\tProxyDial func(context.Context, string, string) (net.Conn, error)\n-\n-\t// AuthMethods specifies the list of request authentication\n-\t// methods.\n-\t// If empty, SOCKS client requests only AuthMethodNotRequired.\n-\tAuthMethods []AuthMethod\n-\n-\t// Authenticate specifies the optional authentication\n-\t// function. It must be non-nil when AuthMethods is not empty.\n-\t// It must return an error when the authentication is failed.\n-\tAuthenticate func(context.Context, io.ReadWriter, AuthMethod) error\n-}\n-\n-// DialContext connects to the provided address on the provided\n-// network.\n-//\n-// The returned error value may be a net.OpError. When the Op field of\n-// net.OpError contains \"socks\", the Source field contains a proxy\n-// server address and the Addr field contains a command target\n-// address.\n-//\n-// See func Dial of the net package of standard library for a\n-// description of the network and address parameters.\n-func (d *Dialer) DialContext(ctx context.Context, network, address string) (net.Conn, error) {\n-\tif err := d.validateTarget(network, address); err != nil {\n-\t\tproxy, dst, _ := d.pathAddrs(address)\n-\t\treturn nil, &net.OpError{Op: d.cmd.String(), Net: network, Source: proxy, Addr: dst, Err: err}\n-\t}\n-\tif ctx == nil {\n-\t\tproxy, dst, _ := d.pathAddrs(address)\n-\t\treturn nil, &net.OpError{Op: d.cmd.String(), Net: network, Source: proxy, Addr: dst, Err: errors.New(\"nil context\")}\n-\t}\n-\tvar err error\n-\tvar c net.Conn\n-\tif d.ProxyDial != nil {\n-\t\tc, err = d.ProxyDial(ctx, d.proxyNetwork, d.proxyAddress)\n-\t} else {\n-\t\tvar dd net.Dialer\n-\t\tc, err = dd.DialContext(ctx, d.proxyNetwork, d.proxyAddress)\n-\t}\n-\tif err != nil {\n-\t\tproxy, dst, _ := d.pathAddrs(address)\n-\t\treturn nil, &net.OpError{Op: d.cmd.String(), Net: network, Source: proxy, Addr: dst, Err: err}\n-\t}\n-\ta, err := d.connect(ctx, c, address)\n-\tif err != nil {\n-\t\tc.Close()\n-\t\tproxy, dst, _ := d.pathAddrs(address)\n-\t\treturn nil, &net.OpError{Op: d.cmd.String(), Net: network, Source: proxy, Addr: dst, Err: err}\n-\t}\n-\treturn &Conn{Conn: c, boundAddr: a}, nil\n-}\n-\n-// DialWithConn initiates a connection from SOCKS server to the target\n-// network and address using the connection c that is already\n-// connected to the SOCKS server.\n-//\n-// It returns the connection's local address assigned by the SOCKS\n-// server.\n-func (d *Dialer) DialWithConn(ctx context.Context, c net.Conn, network, address string) (net.Addr, error) {\n-\tif err := d.validateTarget(network, address); err != nil {\n-\t\tproxy, dst, _ := d.pathAddrs(address)\n-\t\treturn nil, &net.OpError{Op: d.cmd.String(), Net: network, Source: proxy, Addr: dst, Err: err}\n-\t}\n-\tif ctx == nil {\n-\t\tproxy, dst, _ := d.pathAddrs(address)\n-\t\treturn nil, &net.OpError{Op: d.cmd.String(), Net: network, Source: proxy, Addr: dst, Err: errors.New(\"nil context\")}\n-\t}\n-\ta, err := d.connect(ctx, c, address)\n-\tif err != nil {\n-\t\tproxy, dst, _ := d.pathAddrs(address)\n-\t\treturn nil, &net.OpError{Op: d.cmd.String(), Net: network, Source: proxy, Addr: dst, Err: err}\n-\t}\n-\treturn a, nil\n-}\n-\n-// Dial connects to the provided address on the provided network.\n-//\n-// Unlike DialContext, it returns a raw transport connection instead\n-// of a forward proxy connection.\n-//\n-// Deprecated: Use DialContext or DialWithConn instead.\n-func (d *Dialer) Dial(network, address string) (net.Conn, error) {\n-\tif err := d.validateTarget(network, address); err != nil {\n-\t\tproxy, dst, _ := d.pathAddrs(address)\n-\t\treturn nil, &net.OpError{Op: d.cmd.String(), Net: network, Source: proxy, Addr: dst, Err: err}\n-\t}\n-\tvar err error\n-\tvar c net.Conn\n-\tif d.ProxyDial != nil {\n-\t\tc, err = d.ProxyDial(context.Background(), d.proxyNetwork, d.proxyAddress)\n-\t} else {\n-\t\tc, err = net.Dial(d.proxyNetwork, d.proxyAddress)\n-\t}\n-\tif err != nil {\n-\t\tproxy, dst, _ := d.pathAddrs(address)\n-\t\treturn nil, &net.OpError{Op: d.cmd.String(), Net: network, Source: proxy, Addr: dst, Err: err}\n-\t}\n-\tif _, err := d.DialWithConn(context.Background(), c, network, address); err != nil {\n-\t\tc.Close()\n-\t\treturn nil, err\n-\t}\n-\treturn c, nil\n-}\n-\n-func (d *Dialer) validateTarget(network, address string) error {\n-\tswitch network {\n-\tcase \"tcp\", \"tcp6\", \"tcp4\":\n-\tdefault:\n-\t\treturn errors.New(\"network not implemented\")\n-\t}\n-\tswitch d.cmd {\n-\tcase CmdConnect, cmdBind:\n-\tdefault:\n-\t\treturn errors.New(\"command not implemented\")\n-\t}\n-\treturn nil\n-}\n-\n-func (d *Dialer) pathAddrs(address string) (proxy, dst net.Addr, err error) {\n-\tfor i, s := range []string{d.proxyAddress, address} {\n-\t\thost, port, err := splitHostPort(s)\n-\t\tif err != nil {\n-\t\t\treturn nil, nil, err\n-\t\t}\n-\t\ta := &Addr{Port: port}\n-\t\ta.IP = net.ParseIP(host)\n-\t\tif a.IP == nil {\n-\t\t\ta.Name = host\n-\t\t}\n-\t\tif i == 0 {\n-\t\t\tproxy = a\n-\t\t} else {\n-\t\t\tdst = a\n-\t\t}\n-\t}\n-\treturn\n-}\n-\n-// NewDialer returns a new Dialer that dials through the provided\n-// proxy server's network and address.\n-func NewDialer(network, address string) *Dialer {\n-\treturn &Dialer{proxyNetwork: network, proxyAddress: address, cmd: CmdConnect}\n-}\n-\n-const (\n-\tauthUsernamePasswordVersion = 0x01\n-\tauthStatusSucceeded         = 0x00\n-)\n-\n-// UsernamePassword are the credentials for the username/password\n-// authentication method.\n-type UsernamePassword struct {\n-\tUsername string\n-\tPassword string\n-}\n-\n-// Authenticate authenticates a pair of username and password with the\n-// proxy server.\n-func (up *UsernamePassword) Authenticate(ctx context.Context, rw io.ReadWriter, auth AuthMethod) error {\n-\tswitch auth {\n-\tcase AuthMethodNotRequired:\n-\t\treturn nil\n-\tcase AuthMethodUsernamePassword:\n-\t\tif len(up.Username) == 0 || len(up.Username) > 255 || len(up.Password) > 255 {\n-\t\t\treturn errors.New(\"invalid username/password\")\n-\t\t}\n-\t\tb := []byte{authUsernamePasswordVersion}\n-\t\tb = append(b, byte(len(up.Username)))\n-\t\tb = append(b, up.Username...)\n-\t\tb = append(b, byte(len(up.Password)))\n-\t\tb = append(b, up.Password...)\n-\t\t// TODO(mikio): handle IO deadlines and cancelation if\n-\t\t// necessary\n-\t\tif _, err := rw.Write(b); err != nil {\n-\t\t\treturn err\n-\t\t}\n-\t\tif _, err := io.ReadFull(rw, b[:2]); err != nil {\n-\t\t\treturn err\n-\t\t}\n-\t\tif b[0] != authUsernamePasswordVersion {\n-\t\t\treturn errors.New(\"invalid username/password version\")\n-\t\t}\n-\t\tif b[1] != authStatusSucceeded {\n-\t\t\treturn errors.New(\"username/password authentication failed\")\n-\t\t}\n-\t\treturn nil\n-\t}\n-\treturn errors.New(\"unsupported authentication method \" + strconv.Itoa(int(auth)))\n-}"
    },
    {
      "sha": "811c2e4e962ee76c13a56bb99c88d3b002b3095b",
      "filename": "backend/vendor/golang.org/x/net/proxy/dial.go",
      "status": "removed",
      "additions": 0,
      "deletions": 54,
      "changes": 54,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fdial.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fdial.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fdial.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,54 +0,0 @@\n-// Copyright 2019 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proxy\n-\n-import (\n-\t\"context\"\n-\t\"net\"\n-)\n-\n-// A ContextDialer dials using a context.\n-type ContextDialer interface {\n-\tDialContext(ctx context.Context, network, address string) (net.Conn, error)\n-}\n-\n-// Dial works like DialContext on net.Dialer but using a dialer returned by FromEnvironment.\n-//\n-// The passed ctx is only used for returning the Conn, not the lifetime of the Conn.\n-//\n-// Custom dialers (registered via RegisterDialerType) that do not implement ContextDialer\n-// can leak a goroutine for as long as it takes the underlying Dialer implementation to timeout.\n-//\n-// A Conn returned from a successful Dial after the context has been cancelled will be immediately closed.\n-func Dial(ctx context.Context, network, address string) (net.Conn, error) {\n-\td := FromEnvironment()\n-\tif xd, ok := d.(ContextDialer); ok {\n-\t\treturn xd.DialContext(ctx, network, address)\n-\t}\n-\treturn dialContext(ctx, d, network, address)\n-}\n-\n-// WARNING: this can leak a goroutine for as long as the underlying Dialer implementation takes to timeout\n-// A Conn returned from a successful Dial after the context has been cancelled will be immediately closed.\n-func dialContext(ctx context.Context, d Dialer, network, address string) (net.Conn, error) {\n-\tvar (\n-\t\tconn net.Conn\n-\t\tdone = make(chan struct{}, 1)\n-\t\terr  error\n-\t)\n-\tgo func() {\n-\t\tconn, err = d.Dial(network, address)\n-\t\tclose(done)\n-\t\tif conn != nil && ctx.Err() != nil {\n-\t\t\tconn.Close()\n-\t\t}\n-\t}()\n-\tselect {\n-\tcase <-ctx.Done():\n-\t\terr = ctx.Err()\n-\tcase <-done:\n-\t}\n-\treturn conn, err\n-}"
    },
    {
      "sha": "3d66bdef9d7493931859e181d22dff1892b8d1ef",
      "filename": "backend/vendor/golang.org/x/net/proxy/direct.go",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fdirect.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fdirect.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fdirect.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,31 +0,0 @@\n-// Copyright 2011 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proxy\n-\n-import (\n-\t\"context\"\n-\t\"net\"\n-)\n-\n-type direct struct{}\n-\n-// Direct implements Dialer by making network connections directly using net.Dial or net.DialContext.\n-var Direct = direct{}\n-\n-var (\n-\t_ Dialer        = Direct\n-\t_ ContextDialer = Direct\n-)\n-\n-// Dial directly invokes net.Dial with the supplied parameters.\n-func (direct) Dial(network, addr string) (net.Conn, error) {\n-\treturn net.Dial(network, addr)\n-}\n-\n-// DialContext instantiates a net.Dialer and invokes its DialContext receiver with the supplied parameters.\n-func (direct) DialContext(ctx context.Context, network, addr string) (net.Conn, error) {\n-\tvar d net.Dialer\n-\treturn d.DialContext(ctx, network, addr)\n-}"
    },
    {
      "sha": "573fe79e86ec50b480068a68f5164e7c1acee6e9",
      "filename": "backend/vendor/golang.org/x/net/proxy/per_host.go",
      "status": "removed",
      "additions": 0,
      "deletions": 155,
      "changes": 155,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fper_host.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fper_host.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fper_host.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,155 +0,0 @@\n-// Copyright 2011 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proxy\n-\n-import (\n-\t\"context\"\n-\t\"net\"\n-\t\"strings\"\n-)\n-\n-// A PerHost directs connections to a default Dialer unless the host name\n-// requested matches one of a number of exceptions.\n-type PerHost struct {\n-\tdef, bypass Dialer\n-\n-\tbypassNetworks []*net.IPNet\n-\tbypassIPs      []net.IP\n-\tbypassZones    []string\n-\tbypassHosts    []string\n-}\n-\n-// NewPerHost returns a PerHost Dialer that directs connections to either\n-// defaultDialer or bypass, depending on whether the connection matches one of\n-// the configured rules.\n-func NewPerHost(defaultDialer, bypass Dialer) *PerHost {\n-\treturn &PerHost{\n-\t\tdef:    defaultDialer,\n-\t\tbypass: bypass,\n-\t}\n-}\n-\n-// Dial connects to the address addr on the given network through either\n-// defaultDialer or bypass.\n-func (p *PerHost) Dial(network, addr string) (c net.Conn, err error) {\n-\thost, _, err := net.SplitHostPort(addr)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\n-\treturn p.dialerForRequest(host).Dial(network, addr)\n-}\n-\n-// DialContext connects to the address addr on the given network through either\n-// defaultDialer or bypass.\n-func (p *PerHost) DialContext(ctx context.Context, network, addr string) (c net.Conn, err error) {\n-\thost, _, err := net.SplitHostPort(addr)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\td := p.dialerForRequest(host)\n-\tif x, ok := d.(ContextDialer); ok {\n-\t\treturn x.DialContext(ctx, network, addr)\n-\t}\n-\treturn dialContext(ctx, d, network, addr)\n-}\n-\n-func (p *PerHost) dialerForRequest(host string) Dialer {\n-\tif ip := net.ParseIP(host); ip != nil {\n-\t\tfor _, net := range p.bypassNetworks {\n-\t\t\tif net.Contains(ip) {\n-\t\t\t\treturn p.bypass\n-\t\t\t}\n-\t\t}\n-\t\tfor _, bypassIP := range p.bypassIPs {\n-\t\t\tif bypassIP.Equal(ip) {\n-\t\t\t\treturn p.bypass\n-\t\t\t}\n-\t\t}\n-\t\treturn p.def\n-\t}\n-\n-\tfor _, zone := range p.bypassZones {\n-\t\tif strings.HasSuffix(host, zone) {\n-\t\t\treturn p.bypass\n-\t\t}\n-\t\tif host == zone[1:] {\n-\t\t\t// For a zone \".example.com\", we match \"example.com\"\n-\t\t\t// too.\n-\t\t\treturn p.bypass\n-\t\t}\n-\t}\n-\tfor _, bypassHost := range p.bypassHosts {\n-\t\tif bypassHost == host {\n-\t\t\treturn p.bypass\n-\t\t}\n-\t}\n-\treturn p.def\n-}\n-\n-// AddFromString parses a string that contains comma-separated values\n-// specifying hosts that should use the bypass proxy. Each value is either an\n-// IP address, a CIDR range, a zone (*.example.com) or a host name\n-// (localhost). A best effort is made to parse the string and errors are\n-// ignored.\n-func (p *PerHost) AddFromString(s string) {\n-\thosts := strings.Split(s, \",\")\n-\tfor _, host := range hosts {\n-\t\thost = strings.TrimSpace(host)\n-\t\tif len(host) == 0 {\n-\t\t\tcontinue\n-\t\t}\n-\t\tif strings.Contains(host, \"/\") {\n-\t\t\t// We assume that it's a CIDR address like 127.0.0.0/8\n-\t\t\tif _, net, err := net.ParseCIDR(host); err == nil {\n-\t\t\t\tp.AddNetwork(net)\n-\t\t\t}\n-\t\t\tcontinue\n-\t\t}\n-\t\tif ip := net.ParseIP(host); ip != nil {\n-\t\t\tp.AddIP(ip)\n-\t\t\tcontinue\n-\t\t}\n-\t\tif strings.HasPrefix(host, \"*.\") {\n-\t\t\tp.AddZone(host[1:])\n-\t\t\tcontinue\n-\t\t}\n-\t\tp.AddHost(host)\n-\t}\n-}\n-\n-// AddIP specifies an IP address that will use the bypass proxy. Note that\n-// this will only take effect if a literal IP address is dialed. A connection\n-// to a named host will never match an IP.\n-func (p *PerHost) AddIP(ip net.IP) {\n-\tp.bypassIPs = append(p.bypassIPs, ip)\n-}\n-\n-// AddNetwork specifies an IP range that will use the bypass proxy. Note that\n-// this will only take effect if a literal IP address is dialed. A connection\n-// to a named host will never match.\n-func (p *PerHost) AddNetwork(net *net.IPNet) {\n-\tp.bypassNetworks = append(p.bypassNetworks, net)\n-}\n-\n-// AddZone specifies a DNS suffix that will use the bypass proxy. A zone of\n-// \"example.com\" matches \"example.com\" and all of its subdomains.\n-func (p *PerHost) AddZone(zone string) {\n-\tif strings.HasSuffix(zone, \".\") {\n-\t\tzone = zone[:len(zone)-1]\n-\t}\n-\tif !strings.HasPrefix(zone, \".\") {\n-\t\tzone = \".\" + zone\n-\t}\n-\tp.bypassZones = append(p.bypassZones, zone)\n-}\n-\n-// AddHost specifies a host name that will use the bypass proxy.\n-func (p *PerHost) AddHost(host string) {\n-\tif strings.HasSuffix(host, \".\") {\n-\t\thost = host[:len(host)-1]\n-\t}\n-\tp.bypassHosts = append(p.bypassHosts, host)\n-}"
    },
    {
      "sha": "9ff4b9a7767accf28276313880db4b47bd59db5b",
      "filename": "backend/vendor/golang.org/x/net/proxy/proxy.go",
      "status": "removed",
      "additions": 0,
      "deletions": 149,
      "changes": 149,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fproxy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fproxy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fproxy.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,149 +0,0 @@\n-// Copyright 2011 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-// Package proxy provides support for a variety of protocols to proxy network\n-// data.\n-package proxy // import \"golang.org/x/net/proxy\"\n-\n-import (\n-\t\"errors\"\n-\t\"net\"\n-\t\"net/url\"\n-\t\"os\"\n-\t\"sync\"\n-)\n-\n-// A Dialer is a means to establish a connection.\n-// Custom dialers should also implement ContextDialer.\n-type Dialer interface {\n-\t// Dial connects to the given address via the proxy.\n-\tDial(network, addr string) (c net.Conn, err error)\n-}\n-\n-// Auth contains authentication parameters that specific Dialers may require.\n-type Auth struct {\n-\tUser, Password string\n-}\n-\n-// FromEnvironment returns the dialer specified by the proxy-related\n-// variables in the environment and makes underlying connections\n-// directly.\n-func FromEnvironment() Dialer {\n-\treturn FromEnvironmentUsing(Direct)\n-}\n-\n-// FromEnvironmentUsing returns the dialer specify by the proxy-related\n-// variables in the environment and makes underlying connections\n-// using the provided forwarding Dialer (for instance, a *net.Dialer\n-// with desired configuration).\n-func FromEnvironmentUsing(forward Dialer) Dialer {\n-\tallProxy := allProxyEnv.Get()\n-\tif len(allProxy) == 0 {\n-\t\treturn forward\n-\t}\n-\n-\tproxyURL, err := url.Parse(allProxy)\n-\tif err != nil {\n-\t\treturn forward\n-\t}\n-\tproxy, err := FromURL(proxyURL, forward)\n-\tif err != nil {\n-\t\treturn forward\n-\t}\n-\n-\tnoProxy := noProxyEnv.Get()\n-\tif len(noProxy) == 0 {\n-\t\treturn proxy\n-\t}\n-\n-\tperHost := NewPerHost(proxy, forward)\n-\tperHost.AddFromString(noProxy)\n-\treturn perHost\n-}\n-\n-// proxySchemes is a map from URL schemes to a function that creates a Dialer\n-// from a URL with such a scheme.\n-var proxySchemes map[string]func(*url.URL, Dialer) (Dialer, error)\n-\n-// RegisterDialerType takes a URL scheme and a function to generate Dialers from\n-// a URL with that scheme and a forwarding Dialer. Registered schemes are used\n-// by FromURL.\n-func RegisterDialerType(scheme string, f func(*url.URL, Dialer) (Dialer, error)) {\n-\tif proxySchemes == nil {\n-\t\tproxySchemes = make(map[string]func(*url.URL, Dialer) (Dialer, error))\n-\t}\n-\tproxySchemes[scheme] = f\n-}\n-\n-// FromURL returns a Dialer given a URL specification and an underlying\n-// Dialer for it to make network requests.\n-func FromURL(u *url.URL, forward Dialer) (Dialer, error) {\n-\tvar auth *Auth\n-\tif u.User != nil {\n-\t\tauth = new(Auth)\n-\t\tauth.User = u.User.Username()\n-\t\tif p, ok := u.User.Password(); ok {\n-\t\t\tauth.Password = p\n-\t\t}\n-\t}\n-\n-\tswitch u.Scheme {\n-\tcase \"socks5\", \"socks5h\":\n-\t\taddr := u.Hostname()\n-\t\tport := u.Port()\n-\t\tif port == \"\" {\n-\t\t\tport = \"1080\"\n-\t\t}\n-\t\treturn SOCKS5(\"tcp\", net.JoinHostPort(addr, port), auth, forward)\n-\t}\n-\n-\t// If the scheme doesn't match any of the built-in schemes, see if it\n-\t// was registered by another package.\n-\tif proxySchemes != nil {\n-\t\tif f, ok := proxySchemes[u.Scheme]; ok {\n-\t\t\treturn f(u, forward)\n-\t\t}\n-\t}\n-\n-\treturn nil, errors.New(\"proxy: unknown scheme: \" + u.Scheme)\n-}\n-\n-var (\n-\tallProxyEnv = &envOnce{\n-\t\tnames: []string{\"ALL_PROXY\", \"all_proxy\"},\n-\t}\n-\tnoProxyEnv = &envOnce{\n-\t\tnames: []string{\"NO_PROXY\", \"no_proxy\"},\n-\t}\n-)\n-\n-// envOnce looks up an environment variable (optionally by multiple\n-// names) once. It mitigates expensive lookups on some platforms\n-// (e.g. Windows).\n-// (Borrowed from net/http/transport.go)\n-type envOnce struct {\n-\tnames []string\n-\tonce  sync.Once\n-\tval   string\n-}\n-\n-func (e *envOnce) Get() string {\n-\te.once.Do(e.init)\n-\treturn e.val\n-}\n-\n-func (e *envOnce) init() {\n-\tfor _, n := range e.names {\n-\t\te.val = os.Getenv(n)\n-\t\tif e.val != \"\" {\n-\t\t\treturn\n-\t\t}\n-\t}\n-}\n-\n-// reset is used by tests\n-func (e *envOnce) reset() {\n-\te.once = sync.Once{}\n-\te.val = \"\"\n-}"
    },
    {
      "sha": "c91651f96db9264945ded8692569dc021dac08cf",
      "filename": "backend/vendor/golang.org/x/net/proxy/socks5.go",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fsocks5.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fsocks5.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fproxy%2Fsocks5.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,42 +0,0 @@\n-// Copyright 2011 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proxy\n-\n-import (\n-\t\"context\"\n-\t\"net\"\n-\n-\t\"golang.org/x/net/internal/socks\"\n-)\n-\n-// SOCKS5 returns a Dialer that makes SOCKSv5 connections to the given\n-// address with an optional username and password.\n-// See RFC 1928 and RFC 1929.\n-func SOCKS5(network, address string, auth *Auth, forward Dialer) (Dialer, error) {\n-\td := socks.NewDialer(network, address)\n-\tif forward != nil {\n-\t\tif f, ok := forward.(ContextDialer); ok {\n-\t\t\td.ProxyDial = func(ctx context.Context, network string, address string) (net.Conn, error) {\n-\t\t\t\treturn f.DialContext(ctx, network, address)\n-\t\t\t}\n-\t\t} else {\n-\t\t\td.ProxyDial = func(ctx context.Context, network string, address string) (net.Conn, error) {\n-\t\t\t\treturn dialContext(ctx, forward, network, address)\n-\t\t\t}\n-\t\t}\n-\t}\n-\tif auth != nil {\n-\t\tup := socks.UsernamePassword{\n-\t\t\tUsername: auth.User,\n-\t\t\tPassword: auth.Password,\n-\t\t}\n-\t\td.AuthMethods = []socks.AuthMethod{\n-\t\t\tsocks.AuthMethodNotRequired,\n-\t\t\tsocks.AuthMethodUsernamePassword,\n-\t\t}\n-\t\td.Authenticate = up.Authenticate\n-\t}\n-\treturn d, nil\n-}"
    },
    {
      "sha": "89ed30f2a9e849dd8a8780ba85f9dd265e3914bb",
      "filename": "backend/vendor/golang.org/x/oauth2/endpoints/endpoints.go",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fendpoints%2Fendpoints.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fendpoints%2Fendpoints.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fendpoints%2Fendpoints.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -68,8 +68,8 @@ var GitLab = oauth2.Endpoint{\n \n // Google is the endpoint for Google.\n var Google = oauth2.Endpoint{\n-\tAuthURL:  \"https://accounts.google.com/o/oauth2/auth\",\n-\tTokenURL: \"https://oauth2.googleapis.com/token\",\n+\tAuthURL:       \"https://accounts.google.com/o/oauth2/auth\",\n+\tTokenURL:      \"https://oauth2.googleapis.com/token\",\n \tDeviceAuthURL: \"https://oauth2.googleapis.com/device/code\",\n }\n \n@@ -227,8 +227,9 @@ func AzureAD(tenant string) oauth2.Endpoint {\n \t\ttenant = \"common\"\n \t}\n \treturn oauth2.Endpoint{\n-\t\tAuthURL:  \"https://login.microsoftonline.com/\" + tenant + \"/oauth2/v2.0/authorize\",\n-\t\tTokenURL: \"https://login.microsoftonline.com/\" + tenant + \"/oauth2/v2.0/token\",\n+\t\tAuthURL:       \"https://login.microsoftonline.com/\" + tenant + \"/oauth2/v2.0/authorize\",\n+\t\tTokenURL:      \"https://login.microsoftonline.com/\" + tenant + \"/oauth2/v2.0/token\",\n+\t\tDeviceAuthURL: \"https://login.microsoftonline.com/\" + tenant + \"/oauth2/v2.0/devicecode\",\n \t}\n }\n "
    },
    {
      "sha": "564920bd4243c956a581dcd3c2545dad616056ad",
      "filename": "backend/vendor/golang.org/x/oauth2/google/appengine.go",
      "status": "modified",
      "additions": 11,
      "deletions": 9,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fappengine.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fappengine.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fappengine.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -6,25 +6,24 @@ package google\n \n import (\n \t\"context\"\n-\t\"time\"\n+\t\"log\"\n+\t\"sync\"\n \n \t\"golang.org/x/oauth2\"\n )\n \n-// Set at init time by appengine_gen1.go. If nil, we're not on App Engine standard first generation (<= Go 1.9) or App Engine flexible.\n-var appengineTokenFunc func(c context.Context, scopes ...string) (token string, expiry time.Time, err error)\n-\n-// Set at init time by appengine_gen1.go. If nil, we're not on App Engine standard first generation (<= Go 1.9) or App Engine flexible.\n-var appengineAppIDFunc func(c context.Context) string\n+var logOnce sync.Once // only spam about deprecation once\n \n // AppEngineTokenSource returns a token source that fetches tokens from either\n // the current application's service account or from the metadata server,\n // depending on the App Engine environment. See below for environment-specific\n // details. If you are implementing a 3-legged OAuth 2.0 flow on App Engine that\n // involves user accounts, see oauth2.Config instead.\n //\n-// First generation App Engine runtimes (<= Go 1.9):\n-// AppEngineTokenSource returns a token source that fetches tokens issued to the\n+// The current version of this library requires at least Go 1.17 to build,\n+// so first generation App Engine runtimes (<= Go 1.9) are unsupported.\n+// Previously, on first generation App Engine runtimes, AppEngineTokenSource\n+// returned a token source that fetches tokens issued to the\n // current App Engine application's service account. The provided context must have\n // come from appengine.NewContext.\n //\n@@ -34,5 +33,8 @@ var appengineAppIDFunc func(c context.Context) string\n // context and scopes are not used. Please use DefaultTokenSource (or ComputeTokenSource,\n // which DefaultTokenSource will use in this case) instead.\n func AppEngineTokenSource(ctx context.Context, scope ...string) oauth2.TokenSource {\n-\treturn appEngineTokenSource(ctx, scope...)\n+\tlogOnce.Do(func() {\n+\t\tlog.Print(\"google: AppEngineTokenSource is deprecated on App Engine standard second generation runtimes (>= Go 1.11) and App Engine flexible. Please use DefaultTokenSource or ComputeTokenSource.\")\n+\t})\n+\treturn ComputeTokenSource(\"\")\n }"
    },
    {
      "sha": "e61587945b08f0a2fd68b21dc66240dbf5937248",
      "filename": "backend/vendor/golang.org/x/oauth2/google/appengine_gen1.go",
      "status": "removed",
      "additions": 0,
      "deletions": 77,
      "changes": 77,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fappengine_gen1.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fappengine_gen1.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fappengine_gen1.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,77 +0,0 @@\n-// Copyright 2018 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-//go:build appengine\n-\n-// This file applies to App Engine first generation runtimes (<= Go 1.9).\n-\n-package google\n-\n-import (\n-\t\"context\"\n-\t\"sort\"\n-\t\"strings\"\n-\t\"sync\"\n-\n-\t\"golang.org/x/oauth2\"\n-\t\"google.golang.org/appengine\"\n-)\n-\n-func init() {\n-\tappengineTokenFunc = appengine.AccessToken\n-\tappengineAppIDFunc = appengine.AppID\n-}\n-\n-// See comment on AppEngineTokenSource in appengine.go.\n-func appEngineTokenSource(ctx context.Context, scope ...string) oauth2.TokenSource {\n-\tscopes := append([]string{}, scope...)\n-\tsort.Strings(scopes)\n-\treturn &gaeTokenSource{\n-\t\tctx:    ctx,\n-\t\tscopes: scopes,\n-\t\tkey:    strings.Join(scopes, \" \"),\n-\t}\n-}\n-\n-// aeTokens helps the fetched tokens to be reused until their expiration.\n-var (\n-\taeTokensMu sync.Mutex\n-\taeTokens   = make(map[string]*tokenLock) // key is space-separated scopes\n-)\n-\n-type tokenLock struct {\n-\tmu sync.Mutex // guards t; held while fetching or updating t\n-\tt  *oauth2.Token\n-}\n-\n-type gaeTokenSource struct {\n-\tctx    context.Context\n-\tscopes []string\n-\tkey    string // to aeTokens map; space-separated scopes\n-}\n-\n-func (ts *gaeTokenSource) Token() (*oauth2.Token, error) {\n-\taeTokensMu.Lock()\n-\ttok, ok := aeTokens[ts.key]\n-\tif !ok {\n-\t\ttok = &tokenLock{}\n-\t\taeTokens[ts.key] = tok\n-\t}\n-\taeTokensMu.Unlock()\n-\n-\ttok.mu.Lock()\n-\tdefer tok.mu.Unlock()\n-\tif tok.t.Valid() {\n-\t\treturn tok.t, nil\n-\t}\n-\taccess, exp, err := appengineTokenFunc(ts.ctx, ts.scopes...)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\ttok.t = &oauth2.Token{\n-\t\tAccessToken: access,\n-\t\tExpiry:      exp,\n-\t}\n-\treturn tok.t, nil\n-}"
    },
    {
      "sha": "9c79aa0a0cc5d183092d6afc360c29307f5a06c9",
      "filename": "backend/vendor/golang.org/x/oauth2/google/appengine_gen2_flex.go",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fappengine_gen2_flex.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fappengine_gen2_flex.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fappengine_gen2_flex.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,27 +0,0 @@\n-// Copyright 2018 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-//go:build !appengine\n-\n-// This file applies to App Engine second generation runtimes (>= Go 1.11) and App Engine flexible.\n-\n-package google\n-\n-import (\n-\t\"context\"\n-\t\"log\"\n-\t\"sync\"\n-\n-\t\"golang.org/x/oauth2\"\n-)\n-\n-var logOnce sync.Once // only spam about deprecation once\n-\n-// See comment on AppEngineTokenSource in appengine.go.\n-func appEngineTokenSource(ctx context.Context, scope ...string) oauth2.TokenSource {\n-\tlogOnce.Do(func() {\n-\t\tlog.Print(\"google: AppEngineTokenSource is deprecated on App Engine standard second generation runtimes (>= Go 1.11) and App Engine flexible. Please use DefaultTokenSource or ComputeTokenSource.\")\n-\t})\n-\treturn ComputeTokenSource(\"\")\n-}"
    },
    {
      "sha": "df958359a87066c8cd4777ae5f674412982d9747",
      "filename": "backend/vendor/golang.org/x/oauth2/google/default.go",
      "status": "modified",
      "additions": 40,
      "deletions": 50,
      "changes": 90,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -42,6 +42,17 @@ type Credentials struct {\n \t// running on Google Cloud Platform.\n \tJSON []byte\n \n+\t// UniverseDomainProvider returns the default service domain for a given\n+\t// Cloud universe. Optional.\n+\t//\n+\t// On GCE, UniverseDomainProvider should return the universe domain value\n+\t// from Google Compute Engine (GCE)'s metadata server. See also [The attached service\n+\t// account](https://cloud.google.com/docs/authentication/application-default-credentials#attached-sa).\n+\t// If the GCE metadata server returns a 404 error, the default universe\n+\t// domain value should be returned. If the GCE metadata server returns an\n+\t// error other than 404, the error should be returned.\n+\tUniverseDomainProvider func() (string, error)\n+\n \tudMu sync.Mutex // guards universeDomain\n \t// universeDomain is the default service domain for a given Cloud universe.\n \tuniverseDomain string\n@@ -64,54 +75,32 @@ func (c *Credentials) UniverseDomain() string {\n }\n \n // GetUniverseDomain returns the default service domain for a given Cloud\n-// universe.\n+// universe. If present, UniverseDomainProvider will be invoked and its return\n+// value will be cached.\n //\n // The default value is \"googleapis.com\".\n-//\n-// It obtains the universe domain from the attached service account on GCE when\n-// authenticating via the GCE metadata server. See also [The attached service\n-// account](https://cloud.google.com/docs/authentication/application-default-credentials#attached-sa).\n-// If the GCE metadata server returns a 404 error, the default value is\n-// returned. If the GCE metadata server returns an error other than 404, the\n-// error is returned.\n func (c *Credentials) GetUniverseDomain() (string, error) {\n \tc.udMu.Lock()\n \tdefer c.udMu.Unlock()\n-\tif c.universeDomain == \"\" && metadata.OnGCE() {\n-\t\t// If we're on Google Compute Engine, an App Engine standard second\n-\t\t// generation runtime, or App Engine flexible, use the metadata server.\n-\t\terr := c.computeUniverseDomain()\n+\tif c.universeDomain == \"\" && c.UniverseDomainProvider != nil {\n+\t\t// On Google Compute Engine, an App Engine standard second generation\n+\t\t// runtime, or App Engine flexible, use an externally provided function\n+\t\t// to request the universe domain from the metadata server.\n+\t\tud, err := c.UniverseDomainProvider()\n \t\tif err != nil {\n \t\t\treturn \"\", err\n \t\t}\n+\t\tc.universeDomain = ud\n \t}\n-\t// If not on Google Compute Engine, or in case of any non-error path in\n-\t// computeUniverseDomain that did not set universeDomain, set the default\n-\t// universe domain.\n+\t// If no UniverseDomainProvider (meaning not on Google Compute Engine), or\n+\t// in case of any (non-error) empty return value from\n+\t// UniverseDomainProvider, set the default universe domain.\n \tif c.universeDomain == \"\" {\n \t\tc.universeDomain = defaultUniverseDomain\n \t}\n \treturn c.universeDomain, nil\n }\n \n-// computeUniverseDomain fetches the default service domain for a given Cloud\n-// universe from Google Compute Engine (GCE)'s metadata server. It's only valid\n-// to use this method if your program is running on a GCE instance.\n-func (c *Credentials) computeUniverseDomain() error {\n-\tvar err error\n-\tc.universeDomain, err = metadata.Get(\"universe/universe_domain\")\n-\tif err != nil {\n-\t\tif _, ok := err.(metadata.NotDefinedError); ok {\n-\t\t\t// http.StatusNotFound (404)\n-\t\t\tc.universeDomain = defaultUniverseDomain\n-\t\t\treturn nil\n-\t\t} else {\n-\t\t\treturn err\n-\t\t}\n-\t}\n-\treturn nil\n-}\n-\n // DefaultCredentials is the old name of Credentials.\n //\n // Deprecated: use Credentials instead.\n@@ -199,9 +188,7 @@ func DefaultTokenSource(ctx context.Context, scope ...string) (oauth2.TokenSourc\n //  2. A JSON file in a location known to the gcloud command-line tool.\n //     On Windows, this is %APPDATA%/gcloud/application_default_credentials.json.\n //     On other systems, $HOME/.config/gcloud/application_default_credentials.json.\n-//  3. On Google App Engine standard first generation runtimes (<= Go 1.9) it uses\n-//     the appengine.AccessToken function.\n-//  4. On Google Compute Engine, Google App Engine standard second generation runtimes\n+//  3. On Google Compute Engine, Google App Engine standard second generation runtimes\n //     (>= Go 1.11), and Google App Engine flexible environment, it fetches\n //     credentials from the metadata server.\n func FindDefaultCredentialsWithParams(ctx context.Context, params CredentialsParams) (*Credentials, error) {\n@@ -224,24 +211,27 @@ func FindDefaultCredentialsWithParams(ctx context.Context, params CredentialsPar\n \t\treturn CredentialsFromJSONWithParams(ctx, b, params)\n \t}\n \n-\t// Third, if we're on a Google App Engine standard first generation runtime (<= Go 1.9)\n-\t// use those credentials. App Engine standard second generation runtimes (>= Go 1.11)\n-\t// and App Engine flexible use ComputeTokenSource and the metadata server.\n-\tif appengineTokenFunc != nil {\n-\t\treturn &Credentials{\n-\t\t\tProjectID:   appengineAppIDFunc(ctx),\n-\t\t\tTokenSource: AppEngineTokenSource(ctx, params.Scopes...),\n-\t\t}, nil\n-\t}\n-\n-\t// Fourth, if we're on Google Compute Engine, an App Engine standard second generation runtime,\n+\t// Third, if we're on Google Compute Engine, an App Engine standard second generation runtime,\n \t// or App Engine flexible, use the metadata server.\n \tif metadata.OnGCE() {\n \t\tid, _ := metadata.ProjectID()\n+\t\tuniverseDomainProvider := func() (string, error) {\n+\t\t\tuniverseDomain, err := metadata.Get(\"universe/universe_domain\")\n+\t\t\tif err != nil {\n+\t\t\t\tif _, ok := err.(metadata.NotDefinedError); ok {\n+\t\t\t\t\t// http.StatusNotFound (404)\n+\t\t\t\t\treturn defaultUniverseDomain, nil\n+\t\t\t\t} else {\n+\t\t\t\t\treturn \"\", err\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn universeDomain, nil\n+\t\t}\n \t\treturn &Credentials{\n-\t\t\tProjectID:      id,\n-\t\t\tTokenSource:    computeTokenSource(\"\", params.EarlyTokenRefresh, params.Scopes...),\n-\t\t\tuniverseDomain: params.UniverseDomain,\n+\t\t\tProjectID:              id,\n+\t\t\tTokenSource:            computeTokenSource(\"\", params.EarlyTokenRefresh, params.Scopes...),\n+\t\t\tUniverseDomainProvider: universeDomainProvider,\n+\t\t\tuniverseDomain:         params.UniverseDomain,\n \t\t}, nil\n \t}\n "
    },
    {
      "sha": "ca27c2e98c96e19ba7f33a03410379958dd87307",
      "filename": "backend/vendor/golang.org/x/oauth2/google/externalaccount/aws.go",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Faws.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Faws.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Faws.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -520,7 +520,6 @@ func (cs *awsCredentialSource) getMetadataSecurityCredentials(roleName string, h\n \tif err != nil {\n \t\treturn result, err\n \t}\n-\treq.Header.Add(\"Content-Type\", \"application/json\")\n \n \tfor name, value := range headers {\n \t\treq.Header.Add(name, value)"
    },
    {
      "sha": "6c81a68728e1cbf1359870e07d47623bd31051f0",
      "filename": "backend/vendor/golang.org/x/oauth2/google/externalaccount/basecredentials.go",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fbasecredentials.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fbasecredentials.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fexternalaccount%2Fbasecredentials.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -471,11 +471,12 @@ func (ts tokenSource) Token() (*oauth2.Token, error) {\n \t\tAccessToken: stsResp.AccessToken,\n \t\tTokenType:   stsResp.TokenType,\n \t}\n-\tif stsResp.ExpiresIn < 0 {\n+\n+\t// The RFC8693 doesn't define the explicit 0 of \"expires_in\" field behavior.\n+\tif stsResp.ExpiresIn <= 0 {\n \t\treturn nil, fmt.Errorf(\"oauth2/google/externalaccount: got invalid expiry from security token service\")\n-\t} else if stsResp.ExpiresIn >= 0 {\n-\t\taccessToken.Expiry = now().Add(time.Duration(stsResp.ExpiresIn) * time.Second)\n \t}\n+\taccessToken.Expiry = now().Add(time.Duration(stsResp.ExpiresIn) * time.Second)\n \n \tif stsResp.RefreshToken != \"\" {\n \t\taccessToken.RefreshToken = stsResp.RefreshToken"
    },
    {
      "sha": "7b82e7a0837a4d78af6096d8fd062bbee5efb3b2",
      "filename": "backend/vendor/golang.org/x/oauth2/google/google.go",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fgoogle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fgoogle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fgoogle.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -252,7 +252,10 @@ func (f *credentialsFile) tokenSource(ctx context.Context, params CredentialsPar\n // Further information about retrieving access tokens from the GCE metadata\n // server can be found at https://cloud.google.com/compute/docs/authentication.\n func ComputeTokenSource(account string, scope ...string) oauth2.TokenSource {\n-\treturn computeTokenSource(account, 0, scope...)\n+\t// refresh 3 minutes and 45 seconds early. The shortest MDS cache is currently 4 minutes, so any\n+\t// refreshes earlier are a waste of compute.\n+\tearlyExpirySecs := 225 * time.Second\n+\treturn computeTokenSource(account, earlyExpirySecs, scope...)\n }\n \n func computeTokenSource(account string, earlyExpiry time.Duration, scope ...string) oauth2.TokenSource {"
    },
    {
      "sha": "d28140f789ec9d138fbb88e4d8cd3168293ec24d",
      "filename": "backend/vendor/golang.org/x/oauth2/internal/client_appengine.go",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Finternal%2Fclient_appengine.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Finternal%2Fclient_appengine.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Finternal%2Fclient_appengine.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,13 +0,0 @@\n-// Copyright 2018 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-//go:build appengine\n-\n-package internal\n-\n-import \"google.golang.org/appengine/urlfetch\"\n-\n-func init() {\n-\tappengineClientHook = urlfetch.Client\n-}"
    },
    {
      "sha": "b9db01ddfdff0f25dbf1a5b1ce34ab9d8ca27225",
      "filename": "backend/vendor/golang.org/x/oauth2/internal/transport.go",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Finternal%2Ftransport.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Finternal%2Ftransport.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Finternal%2Ftransport.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -18,16 +18,11 @@ var HTTPClient ContextKey\n // because nobody else can create a ContextKey, being unexported.\n type ContextKey struct{}\n \n-var appengineClientHook func(context.Context) *http.Client\n-\n func ContextClient(ctx context.Context) *http.Client {\n \tif ctx != nil {\n \t\tif hc, ok := ctx.Value(HTTPClient).(*http.Client); ok {\n \t\t\treturn hc\n \t\t}\n \t}\n-\tif appengineClientHook != nil {\n-\t\treturn appengineClientHook(ctx)\n-\t}\n \treturn http.DefaultClient\n }"
    },
    {
      "sha": "13091d66665cda9f5d50c73eb100d274f2ab1531",
      "filename": "backend/vendor/golang.org/x/oauth2/microsoft/microsoft.go",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fmicrosoft%2Fmicrosoft.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fmicrosoft%2Fmicrosoft.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fmicrosoft%2Fmicrosoft.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -25,7 +25,8 @@ func AzureADEndpoint(tenant string) oauth2.Endpoint {\n \t\ttenant = \"common\"\n \t}\n \treturn oauth2.Endpoint{\n-\t\tAuthURL:  \"https://login.microsoftonline.com/\" + tenant + \"/oauth2/v2.0/authorize\",\n-\t\tTokenURL: \"https://login.microsoftonline.com/\" + tenant + \"/oauth2/v2.0/token\",\n+\t\tAuthURL:       \"https://login.microsoftonline.com/\" + tenant + \"/oauth2/v2.0/authorize\",\n+\t\tTokenURL:      \"https://login.microsoftonline.com/\" + tenant + \"/oauth2/v2.0/token\",\n+\t\tDeviceAuthURL: \"https://login.microsoftonline.com/\" + tenant + \"/oauth2/v2.0/devicecode\",\n \t}\n }"
    },
    {
      "sha": "09f6a49b80a7e83f25e8a7c1022cf1adefe56182",
      "filename": "backend/vendor/golang.org/x/oauth2/oauth2.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Foauth2.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Foauth2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Foauth2.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -393,7 +393,7 @@ func ReuseTokenSource(t *Token, src TokenSource) TokenSource {\n \t}\n }\n \n-// ReuseTokenSource returns a TokenSource that acts in the same manner as the\n+// ReuseTokenSourceWithExpiry returns a TokenSource that acts in the same manner as the\n // TokenSource returned by ReuseTokenSource, except the expiry buffer is\n // configurable. The expiration time of a token is calculated as\n // t.Expiry.Add(-earlyExpiry)."
    },
    {
      "sha": "813dfad7d2646c4e96e5104baa8d74d65392f9e1",
      "filename": "backend/vendor/golang.org/x/sys/unix/asm_zos_s390x.s",
      "status": "modified",
      "additions": 312,
      "deletions": 353,
      "changes": 665,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fasm_zos_s390x.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fasm_zos_s390x.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fasm_zos_s390x.s?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -9,415 +9,374 @@\n #define PSALAA            1208(R0)\n #define GTAB64(x)           80(x)\n #define LCA64(x)            88(x)\n+#define SAVSTACK_ASYNC(x)  336(x) // in the LCA\n #define CAA(x)               8(x)\n-#define EDCHPXV(x)        1016(x)       // in the CAA\n-#define SAVSTACK_ASYNC(x)  336(x)       // in the LCA\n+#define CEECAATHDID(x)     976(x) // in the CAA\n+#define EDCHPXV(x)        1016(x) // in the CAA\n+#define GOCB(x)           1104(x) // in the CAA\n \n // SS_*, where x=SAVSTACK_ASYNC\n #define SS_LE(x)             0(x)\n #define SS_GO(x)             8(x)\n #define SS_ERRNO(x)         16(x)\n #define SS_ERRNOJR(x)       20(x)\n \n-#define LE_CALL BYTE $0x0D; BYTE $0x76; // BL R7, R6\n+// Function Descriptor Offsets\n+#define __errno  0x156*16\n+#define __err2ad 0x16C*16\n \n-TEXT ·clearErrno(SB),NOSPLIT,$0-0\n-\tBL\taddrerrno<>(SB)\n-\tMOVD\t$0, 0(R3)\n+// Call Instructions\n+#define LE_CALL    BYTE $0x0D; BYTE $0x76 // BL R7, R6\n+#define SVC_LOAD   BYTE $0x0A; BYTE $0x08 // SVC 08 LOAD\n+#define SVC_DELETE BYTE $0x0A; BYTE $0x09 // SVC 09 DELETE\n+\n+DATA zosLibVec<>(SB)/8, $0\n+GLOBL zosLibVec<>(SB), NOPTR, $8\n+\n+TEXT ·initZosLibVec(SB), NOSPLIT|NOFRAME, $0-0\n+\tMOVW PSALAA, R8\n+\tMOVD LCA64(R8), R8\n+\tMOVD CAA(R8), R8\n+\tMOVD EDCHPXV(R8), R8\n+\tMOVD R8, zosLibVec<>(SB)\n+\tRET\n+\n+TEXT ·GetZosLibVec(SB), NOSPLIT|NOFRAME, $0-0\n+\tMOVD zosLibVec<>(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+TEXT ·clearErrno(SB), NOSPLIT, $0-0\n+\tBL   addrerrno<>(SB)\n+\tMOVD $0, 0(R3)\n \tRET\n \n // Returns the address of errno in R3.\n-TEXT addrerrno<>(SB),NOSPLIT|NOFRAME,$0-0\n+TEXT addrerrno<>(SB), NOSPLIT|NOFRAME, $0-0\n \t// Get library control area (LCA).\n-\tMOVW\tPSALAA, R8\n-\tMOVD\tLCA64(R8), R8\n+\tMOVW PSALAA, R8\n+\tMOVD LCA64(R8), R8\n \n \t// Get __errno FuncDesc.\n-\tMOVD\tCAA(R8), R9\n-\tMOVD\tEDCHPXV(R9), R9\n-\tADD\t$(0x156*16), R9\n-\tLMG\t0(R9), R5, R6\n+\tMOVD CAA(R8), R9\n+\tMOVD EDCHPXV(R9), R9\n+\tADD  $(__errno), R9\n+\tLMG  0(R9), R5, R6\n \n \t// Switch to saved LE stack.\n-\tMOVD\tSAVSTACK_ASYNC(R8), R9\n-\tMOVD\t0(R9), R4\n-\tMOVD\t$0, 0(R9)\n+\tMOVD SAVSTACK_ASYNC(R8), R9\n+\tMOVD 0(R9), R4\n+\tMOVD $0, 0(R9)\n \n \t// Call __errno function.\n \tLE_CALL\n \tNOPH\n \n \t// Switch back to Go stack.\n-\tXOR\tR0, R0      // Restore R0 to $0.\n-\tMOVD\tR4, 0(R9)   // Save stack pointer.\n+\tXOR  R0, R0    // Restore R0 to $0.\n+\tMOVD R4, 0(R9) // Save stack pointer.\n \tRET\n \n-TEXT ·syscall_syscall(SB),NOSPLIT,$0-56\n-\tBL\truntime·entersyscall(SB)\n-\tMOVD\ta1+8(FP), R1\n-\tMOVD\ta2+16(FP), R2\n-\tMOVD\ta3+24(FP), R3\n+// func svcCall(fnptr unsafe.Pointer, argv *unsafe.Pointer, dsa *uint64)\n+TEXT ·svcCall(SB), NOSPLIT, $0\n+\tBL   runtime·save_g(SB)     // Save g and stack pointer\n+\tMOVW PSALAA, R8\n+\tMOVD LCA64(R8), R8\n+\tMOVD SAVSTACK_ASYNC(R8), R9\n+\tMOVD R15, 0(R9)\n \n-\t// Get library control area (LCA).\n-\tMOVW\tPSALAA, R8\n-\tMOVD\tLCA64(R8), R8\n+\tMOVD argv+8(FP), R1   // Move function arguments into registers\n+\tMOVD dsa+16(FP), g\n+\tMOVD fnptr+0(FP), R15\n \n-\t// Get function.\n-\tMOVD\tCAA(R8), R9\n-\tMOVD\tEDCHPXV(R9), R9\n-\tMOVD\ttrap+0(FP), R5\n-\tSLD\t$4, R5\n-\tADD\tR5, R9\n-\tLMG\t0(R9), R5, R6\n+\tBYTE $0x0D // Branch to function\n+\tBYTE $0xEF\n \n-\t// Restore LE stack.\n-\tMOVD\tSAVSTACK_ASYNC(R8), R9\n-\tMOVD\t0(R9), R4\n-\tMOVD\t$0, 0(R9)\n+\tBL   runtime·load_g(SB)     // Restore g and stack pointer\n+\tMOVW PSALAA, R8\n+\tMOVD LCA64(R8), R8\n+\tMOVD SAVSTACK_ASYNC(R8), R9\n+\tMOVD 0(R9), R15\n \n-\t// Call function.\n-\tLE_CALL\n-\tNOPH\n-\tXOR\tR0, R0      // Restore R0 to $0.\n-\tMOVD\tR4, 0(R9)   // Save stack pointer.\n-\n-\tMOVD\tR3, r1+32(FP)\n-\tMOVD\tR0, r2+40(FP)\n-\tMOVD\tR0, err+48(FP)\n-\tMOVW\tR3, R4\n-\tCMP\tR4, $-1\n-\tBNE\tdone\n-\tBL\taddrerrno<>(SB)\n-\tMOVWZ\t0(R3), R3\n-\tMOVD\tR3, err+48(FP)\n-done:\n-\tBL\truntime·exitsyscall(SB)\n \tRET\n \n-TEXT ·syscall_rawsyscall(SB),NOSPLIT,$0-56\n-\tMOVD\ta1+8(FP), R1\n-\tMOVD\ta2+16(FP), R2\n-\tMOVD\ta3+24(FP), R3\n-\n-\t// Get library control area (LCA).\n-\tMOVW\tPSALAA, R8\n-\tMOVD\tLCA64(R8), R8\n-\n-\t// Get function.\n-\tMOVD\tCAA(R8), R9\n-\tMOVD\tEDCHPXV(R9), R9\n-\tMOVD\ttrap+0(FP), R5\n-\tSLD\t$4, R5\n-\tADD\tR5, R9\n-\tLMG\t0(R9), R5, R6\n+// func svcLoad(name *byte) unsafe.Pointer\n+TEXT ·svcLoad(SB), NOSPLIT, $0\n+\tMOVD R15, R2         // Save go stack pointer\n+\tMOVD name+0(FP), R0  // Move SVC args into registers\n+\tMOVD $0x80000000, R1\n+\tMOVD $0, R15\n+\tSVC_LOAD\n+\tMOVW R15, R3         // Save return code from SVC\n+\tMOVD R2, R15         // Restore go stack pointer\n+\tCMP  R3, $0          // Check SVC return code\n+\tBNE  error\n+\n+\tMOVD $-2, R3       // Reset last bit of entry point to zero\n+\tAND  R0, R3\n+\tMOVD R3, ret+8(FP) // Return entry point returned by SVC\n+\tCMP  R0, R3        // Check if last bit of entry point was set\n+\tBNE  done\n+\n+\tMOVD R15, R2 // Save go stack pointer\n+\tMOVD $0, R15 // Move SVC args into registers (entry point still in r0 from SVC 08)\n+\tSVC_DELETE\n+\tMOVD R2, R15 // Restore go stack pointer\n \n-\t// Restore LE stack.\n-\tMOVD\tSAVSTACK_ASYNC(R8), R9\n-\tMOVD\t0(R9), R4\n-\tMOVD\t$0, 0(R9)\n+error:\n+\tMOVD $0, ret+8(FP) // Return 0 on failure\n \n-\t// Call function.\n-\tLE_CALL\n-\tNOPH\n-\tXOR\tR0, R0      // Restore R0 to $0.\n-\tMOVD\tR4, 0(R9)   // Save stack pointer.\n-\n-\tMOVD\tR3, r1+32(FP)\n-\tMOVD\tR0, r2+40(FP)\n-\tMOVD\tR0, err+48(FP)\n-\tMOVW\tR3, R4\n-\tCMP\tR4, $-1\n-\tBNE\tdone\n-\tBL\taddrerrno<>(SB)\n-\tMOVWZ\t0(R3), R3\n-\tMOVD\tR3, err+48(FP)\n done:\n+\tXOR R0, R0 // Reset r0 to 0\n \tRET\n \n-TEXT ·syscall_syscall6(SB),NOSPLIT,$0-80\n-\tBL\truntime·entersyscall(SB)\n-\tMOVD\ta1+8(FP), R1\n-\tMOVD\ta2+16(FP), R2\n-\tMOVD\ta3+24(FP), R3\n+// func svcUnload(name *byte, fnptr unsafe.Pointer) int64\n+TEXT ·svcUnload(SB), NOSPLIT, $0\n+\tMOVD R15, R2          // Save go stack pointer\n+\tMOVD name+0(FP), R0   // Move SVC args into registers\n+\tMOVD fnptr+8(FP), R15\n+\tSVC_DELETE\n+\tXOR  R0, R0           // Reset r0 to 0\n+\tMOVD R15, R1          // Save SVC return code\n+\tMOVD R2, R15          // Restore go stack pointer\n+\tMOVD R1, ret+16(FP)   // Return SVC return code\n+\tRET\n \n+// func gettid() uint64\n+TEXT ·gettid(SB), NOSPLIT, $0\n \t// Get library control area (LCA).\n-\tMOVW\tPSALAA, R8\n-\tMOVD\tLCA64(R8), R8\n+\tMOVW PSALAA, R8\n+\tMOVD LCA64(R8), R8\n \n-\t// Get function.\n-\tMOVD\tCAA(R8), R9\n-\tMOVD\tEDCHPXV(R9), R9\n-\tMOVD\ttrap+0(FP), R5\n-\tSLD\t$4, R5\n-\tADD\tR5, R9\n-\tLMG\t0(R9), R5, R6\n+\t// Get CEECAATHDID\n+\tMOVD CAA(R8), R9\n+\tMOVD CEECAATHDID(R9), R9\n+\tMOVD R9, ret+0(FP)\n \n-\t// Restore LE stack.\n-\tMOVD\tSAVSTACK_ASYNC(R8), R9\n-\tMOVD\t0(R9), R4\n-\tMOVD\t$0, 0(R9)\n-\n-\t// Fill in parameter list.\n-\tMOVD\ta4+32(FP), R12\n-\tMOVD\tR12, (2176+24)(R4)\n-\tMOVD\ta5+40(FP), R12\n-\tMOVD\tR12, (2176+32)(R4)\n-\tMOVD\ta6+48(FP), R12\n-\tMOVD\tR12, (2176+40)(R4)\n-\n-\t// Call function.\n-\tLE_CALL\n-\tNOPH\n-\tXOR\tR0, R0      // Restore R0 to $0.\n-\tMOVD\tR4, 0(R9)   // Save stack pointer.\n-\n-\tMOVD\tR3, r1+56(FP)\n-\tMOVD\tR0, r2+64(FP)\n-\tMOVD\tR0, err+72(FP)\n-\tMOVW\tR3, R4\n-\tCMP\tR4, $-1\n-\tBNE\tdone\n-\tBL\taddrerrno<>(SB)\n-\tMOVWZ\t0(R3), R3\n-\tMOVD\tR3, err+72(FP)\n-done:\n-\tBL\truntime·exitsyscall(SB)\n \tRET\n \n-TEXT ·syscall_rawsyscall6(SB),NOSPLIT,$0-80\n-\tMOVD\ta1+8(FP), R1\n-\tMOVD\ta2+16(FP), R2\n-\tMOVD\ta3+24(FP), R3\n-\n-\t// Get library control area (LCA).\n-\tMOVW\tPSALAA, R8\n-\tMOVD\tLCA64(R8), R8\n-\n-\t// Get function.\n-\tMOVD\tCAA(R8), R9\n-\tMOVD\tEDCHPXV(R9), R9\n-\tMOVD\ttrap+0(FP), R5\n-\tSLD\t$4, R5\n-\tADD\tR5, R9\n-\tLMG\t0(R9), R5, R6\n+//\n+// Call LE function, if the return is -1\n+// errno and errno2 is retrieved\n+//\n+TEXT ·CallLeFuncWithErr(SB), NOSPLIT, $0\n+\tMOVW PSALAA, R8\n+\tMOVD LCA64(R8), R8\n+\tMOVD CAA(R8), R9\n+\tMOVD g, GOCB(R9)\n \n \t// Restore LE stack.\n-\tMOVD\tSAVSTACK_ASYNC(R8), R9\n-\tMOVD\t0(R9), R4\n-\tMOVD\t$0, 0(R9)\n-\n-\t// Fill in parameter list.\n-\tMOVD\ta4+32(FP), R12\n-\tMOVD\tR12, (2176+24)(R4)\n-\tMOVD\ta5+40(FP), R12\n-\tMOVD\tR12, (2176+32)(R4)\n-\tMOVD\ta6+48(FP), R12\n-\tMOVD\tR12, (2176+40)(R4)\n-\n-\t// Call function.\n-\tLE_CALL\n+\tMOVD SAVSTACK_ASYNC(R8), R9 // R9-> LE stack frame saving address\n+\tMOVD 0(R9), R4              // R4-> restore previously saved stack frame pointer\n+\n+\tMOVD parms_base+8(FP), R7 // R7 -> argument array\n+\tMOVD parms_len+16(FP), R8 // R8 number of arguments\n+\n+\t//  arg 1 ---> R1\n+\tCMP  R8, $0\n+\tBEQ  docall\n+\tSUB  $1, R8\n+\tMOVD 0(R7), R1\n+\n+\t//  arg 2 ---> R2\n+\tCMP  R8, $0\n+\tBEQ  docall\n+\tSUB  $1, R8\n+\tADD  $8, R7\n+\tMOVD 0(R7), R2\n+\n+\t//  arg 3 --> R3\n+\tCMP  R8, $0\n+\tBEQ  docall\n+\tSUB  $1, R8\n+\tADD  $8, R7\n+\tMOVD 0(R7), R3\n+\n+\tCMP  R8, $0\n+\tBEQ  docall\n+\tMOVD $2176+16, R6 // starting LE stack address-8 to store 4th argument\n+\n+repeat:\n+\tADD  $8, R7\n+\tMOVD 0(R7), R0      // advance arg pointer by 8 byte\n+\tADD  $8, R6         // advance LE argument address by 8 byte\n+\tMOVD R0, (R4)(R6*1) // copy argument from go-slice to le-frame\n+\tSUB  $1, R8\n+\tCMP  R8, $0\n+\tBNE  repeat\n+\n+docall:\n+\tMOVD funcdesc+0(FP), R8 // R8-> function descriptor\n+\tLMG  0(R8), R5, R6\n+\tMOVD $0, 0(R9)          // R9 address of SAVSTACK_ASYNC\n+\tLE_CALL                 // balr R7, R6 (return #1)\n+\tNOPH\n+\tMOVD R3, ret+32(FP)\n+\tCMP  R3, $-1            // compare result to -1\n+\tBNE  done\n+\n+\t// retrieve errno and errno2\n+\tMOVD  zosLibVec<>(SB), R8\n+\tADD   $(__errno), R8\n+\tLMG   0(R8), R5, R6\n+\tLE_CALL                   // balr R7, R6 __errno (return #3)\n \tNOPH\n-\tXOR\tR0, R0      // Restore R0 to $0.\n-\tMOVD\tR4, 0(R9)   // Save stack pointer.\n-\n-\tMOVD\tR3, r1+56(FP)\n-\tMOVD\tR0, r2+64(FP)\n-\tMOVD\tR0, err+72(FP)\n-\tMOVW\tR3, R4\n-\tCMP\tR4, $-1\n-\tBNE\tdone\n-\tBL\t·rrno<>(SB)\n-\tMOVWZ\t0(R3), R3\n-\tMOVD\tR3, err+72(FP)\n+\tMOVWZ 0(R3), R3\n+\tMOVD  R3, err+48(FP)\n+\tMOVD  zosLibVec<>(SB), R8\n+\tADD   $(__err2ad), R8\n+\tLMG   0(R8), R5, R6\n+\tLE_CALL                   // balr R7, R6 __err2ad (return #2)\n+\tNOPH\n+\tMOVW  (R3), R2            // retrieve errno2\n+\tMOVD  R2, errno2+40(FP)   // store in return area\n+\n done:\n+\tMOVD R4, 0(R9)            // Save stack pointer.\n \tRET\n \n-TEXT ·syscall_syscall9(SB),NOSPLIT,$0\n-\tBL\truntime·entersyscall(SB)\n-\tMOVD\ta1+8(FP), R1\n-\tMOVD\ta2+16(FP), R2\n-\tMOVD\ta3+24(FP), R3\n-\n-\t// Get library control area (LCA).\n-\tMOVW\tPSALAA, R8\n-\tMOVD\tLCA64(R8), R8\n-\n-\t// Get function.\n-\tMOVD\tCAA(R8), R9\n-\tMOVD\tEDCHPXV(R9), R9\n-\tMOVD\ttrap+0(FP), R5\n-\tSLD\t$4, R5\n-\tADD\tR5, R9\n-\tLMG\t0(R9), R5, R6\n+//\n+// Call LE function, if the return is 0\n+// errno and errno2 is retrieved\n+//\n+TEXT ·CallLeFuncWithPtrReturn(SB), NOSPLIT, $0\n+\tMOVW PSALAA, R8\n+\tMOVD LCA64(R8), R8\n+\tMOVD CAA(R8), R9\n+\tMOVD g, GOCB(R9)\n \n \t// Restore LE stack.\n-\tMOVD\tSAVSTACK_ASYNC(R8), R9\n-\tMOVD\t0(R9), R4\n-\tMOVD\t$0, 0(R9)\n-\n-\t// Fill in parameter list.\n-\tMOVD\ta4+32(FP), R12\n-\tMOVD\tR12, (2176+24)(R4)\n-\tMOVD\ta5+40(FP), R12\n-\tMOVD\tR12, (2176+32)(R4)\n-\tMOVD\ta6+48(FP), R12\n-\tMOVD\tR12, (2176+40)(R4)\n-\tMOVD\ta7+56(FP), R12\n-\tMOVD\tR12, (2176+48)(R4)\n-\tMOVD\ta8+64(FP), R12\n-\tMOVD\tR12, (2176+56)(R4)\n-\tMOVD\ta9+72(FP), R12\n-\tMOVD\tR12, (2176+64)(R4)\n-\n-\t// Call function.\n-\tLE_CALL\n+\tMOVD SAVSTACK_ASYNC(R8), R9 // R9-> LE stack frame saving address\n+\tMOVD 0(R9), R4              // R4-> restore previously saved stack frame pointer\n+\n+\tMOVD parms_base+8(FP), R7 // R7 -> argument array\n+\tMOVD parms_len+16(FP), R8 // R8 number of arguments\n+\n+\t//  arg 1 ---> R1\n+\tCMP  R8, $0\n+\tBEQ  docall\n+\tSUB  $1, R8\n+\tMOVD 0(R7), R1\n+\n+\t//  arg 2 ---> R2\n+\tCMP  R8, $0\n+\tBEQ  docall\n+\tSUB  $1, R8\n+\tADD  $8, R7\n+\tMOVD 0(R7), R2\n+\n+\t//  arg 3 --> R3\n+\tCMP  R8, $0\n+\tBEQ  docall\n+\tSUB  $1, R8\n+\tADD  $8, R7\n+\tMOVD 0(R7), R3\n+\n+\tCMP  R8, $0\n+\tBEQ  docall\n+\tMOVD $2176+16, R6 // starting LE stack address-8 to store 4th argument\n+\n+repeat:\n+\tADD  $8, R7\n+\tMOVD 0(R7), R0      // advance arg pointer by 8 byte\n+\tADD  $8, R6         // advance LE argument address by 8 byte\n+\tMOVD R0, (R4)(R6*1) // copy argument from go-slice to le-frame\n+\tSUB  $1, R8\n+\tCMP  R8, $0\n+\tBNE  repeat\n+\n+docall:\n+\tMOVD funcdesc+0(FP), R8 // R8-> function descriptor\n+\tLMG  0(R8), R5, R6\n+\tMOVD $0, 0(R9)          // R9 address of SAVSTACK_ASYNC\n+\tLE_CALL                 // balr R7, R6 (return #1)\n \tNOPH\n-\tXOR\tR0, R0      // Restore R0 to $0.\n-\tMOVD\tR4, 0(R9)   // Save stack pointer.\n-\n-\tMOVD\tR3, r1+80(FP)\n-\tMOVD\tR0, r2+88(FP)\n-\tMOVD\tR0, err+96(FP)\n-\tMOVW\tR3, R4\n-\tCMP\tR4, $-1\n-\tBNE\tdone\n-\tBL\taddrerrno<>(SB)\n-\tMOVWZ\t0(R3), R3\n-\tMOVD\tR3, err+96(FP)\n-done:\n-        BL\truntime·exitsyscall(SB)\n-        RET\n-\n-TEXT ·syscall_rawsyscall9(SB),NOSPLIT,$0\n-\tMOVD\ta1+8(FP), R1\n-\tMOVD\ta2+16(FP), R2\n-\tMOVD\ta3+24(FP), R3\n-\n-\t// Get library control area (LCA).\n-\tMOVW\tPSALAA, R8\n-\tMOVD\tLCA64(R8), R8\n-\n-\t// Get function.\n-\tMOVD\tCAA(R8), R9\n-\tMOVD\tEDCHPXV(R9), R9\n-\tMOVD\ttrap+0(FP), R5\n-\tSLD\t$4, R5\n-\tADD\tR5, R9\n-\tLMG\t0(R9), R5, R6\n-\n-\t// Restore LE stack.\n-\tMOVD\tSAVSTACK_ASYNC(R8), R9\n-\tMOVD\t0(R9), R4\n-\tMOVD\t$0, 0(R9)\n-\n-\t// Fill in parameter list.\n-\tMOVD\ta4+32(FP), R12\n-\tMOVD\tR12, (2176+24)(R4)\n-\tMOVD\ta5+40(FP), R12\n-\tMOVD\tR12, (2176+32)(R4)\n-\tMOVD\ta6+48(FP), R12\n-\tMOVD\tR12, (2176+40)(R4)\n-\tMOVD\ta7+56(FP), R12\n-\tMOVD\tR12, (2176+48)(R4)\n-\tMOVD\ta8+64(FP), R12\n-\tMOVD\tR12, (2176+56)(R4)\n-\tMOVD\ta9+72(FP), R12\n-\tMOVD\tR12, (2176+64)(R4)\n-\n-\t// Call function.\n-\tLE_CALL\n+\tMOVD R3, ret+32(FP)\n+\tCMP  R3, $0             // compare result to 0\n+\tBNE  done\n+\n+\t// retrieve errno and errno2\n+\tMOVD  zosLibVec<>(SB), R8\n+\tADD   $(__errno), R8\n+\tLMG   0(R8), R5, R6\n+\tLE_CALL                   // balr R7, R6 __errno (return #3)\n \tNOPH\n-\tXOR\tR0, R0      // Restore R0 to $0.\n-\tMOVD\tR4, 0(R9)   // Save stack pointer.\n-\n-\tMOVD\tR3, r1+80(FP)\n-\tMOVD\tR0, r2+88(FP)\n-\tMOVD\tR0, err+96(FP)\n-\tMOVW\tR3, R4\n-\tCMP\tR4, $-1\n-\tBNE\tdone\n-\tBL\taddrerrno<>(SB)\n-\tMOVWZ\t0(R3), R3\n-\tMOVD\tR3, err+96(FP)\n-done:\n-\tRET\n-\n-// func svcCall(fnptr unsafe.Pointer, argv *unsafe.Pointer, dsa *uint64)\n-TEXT ·svcCall(SB),NOSPLIT,$0\n-\tBL\truntime·save_g(SB)   // Save g and stack pointer\n-\tMOVW\tPSALAA, R8\n-\tMOVD\tLCA64(R8), R8\n-\tMOVD\tSAVSTACK_ASYNC(R8), R9\n-\tMOVD\tR15, 0(R9)\n-\n-\tMOVD\targv+8(FP), R1       // Move function arguments into registers\n-\tMOVD\tdsa+16(FP), g\n-\tMOVD\tfnptr+0(FP), R15\n-\n-\tBYTE\t$0x0D                // Branch to function\n-\tBYTE\t$0xEF\n-\n-\tBL\truntime·load_g(SB)   // Restore g and stack pointer\n-\tMOVW\tPSALAA, R8\n-\tMOVD\tLCA64(R8), R8\n-\tMOVD\tSAVSTACK_ASYNC(R8), R9\n-\tMOVD\t0(R9), R15\n-\n-\tRET\n-\n-// func svcLoad(name *byte) unsafe.Pointer\n-TEXT ·svcLoad(SB),NOSPLIT,$0\n-\tMOVD\tR15, R2          // Save go stack pointer\n-\tMOVD\tname+0(FP), R0   // Move SVC args into registers\n-\tMOVD\t$0x80000000, R1\n-\tMOVD\t$0, R15\n-\tBYTE\t$0x0A            // SVC 08 LOAD\n-\tBYTE\t$0x08\n-\tMOVW\tR15, R3          // Save return code from SVC\n-\tMOVD\tR2, R15          // Restore go stack pointer\n-\tCMP\tR3, $0           // Check SVC return code\n-\tBNE\terror\n-\n-\tMOVD\t$-2, R3          // Reset last bit of entry point to zero\n-\tAND\tR0, R3\n-\tMOVD\tR3, addr+8(FP)   // Return entry point returned by SVC\n-\tCMP\tR0, R3           // Check if last bit of entry point was set\n-\tBNE\tdone\n-\n-\tMOVD\tR15, R2          // Save go stack pointer\n-\tMOVD\t$0, R15          // Move SVC args into registers (entry point still in r0 from SVC 08)\n-\tBYTE\t$0x0A            // SVC 09 DELETE\n-\tBYTE\t$0x09\n-\tMOVD\tR2, R15          // Restore go stack pointer\n+\tMOVWZ 0(R3), R3\n+\tMOVD  R3, err+48(FP)\n+\tMOVD  zosLibVec<>(SB), R8\n+\tADD   $(__err2ad), R8\n+\tLMG   0(R8), R5, R6\n+\tLE_CALL                   // balr R7, R6 __err2ad (return #2)\n+\tNOPH\n+\tMOVW  (R3), R2            // retrieve errno2\n+\tMOVD  R2, errno2+40(FP)   // store in return area\n+\tXOR   R2, R2\n+\tMOVWZ R2, (R3)            // clear errno2\n \n-error:\n-\tMOVD\t$0, addr+8(FP)   // Return 0 on failure\n done:\n-\tXOR\tR0, R0           // Reset r0 to 0\n+\tMOVD R4, 0(R9)            // Save stack pointer.\n \tRET\n \n-// func svcUnload(name *byte, fnptr unsafe.Pointer) int64\n-TEXT ·svcUnload(SB),NOSPLIT,$0\n-\tMOVD\tR15, R2          // Save go stack pointer\n-\tMOVD\tname+0(FP), R0   // Move SVC args into registers\n-\tMOVD\taddr+8(FP), R15\n-\tBYTE\t$0x0A            // SVC 09\n-\tBYTE\t$0x09\n-\tXOR\tR0, R0           // Reset r0 to 0\n-\tMOVD\tR15, R1          // Save SVC return code\n-\tMOVD\tR2, R15          // Restore go stack pointer\n-\tMOVD\tR1, rc+0(FP)     // Return SVC return code\n+//\n+// function to test if a pointer can be safely dereferenced (content read)\n+// return 0 for succces\n+//\n+TEXT ·ptrtest(SB), NOSPLIT, $0-16\n+\tMOVD arg+0(FP), R10 // test pointer in R10\n+\n+\t// set up R2 to point to CEECAADMC\n+\tBYTE $0xE3; BYTE $0x20; BYTE $0x04; BYTE $0xB8; BYTE $0x00; BYTE $0x17 // llgt  2,1208\n+\tBYTE $0xB9; BYTE $0x17; BYTE $0x00; BYTE $0x22                         // llgtr 2,2\n+\tBYTE $0xA5; BYTE $0x26; BYTE $0x7F; BYTE $0xFF                         // nilh  2,32767\n+\tBYTE $0xE3; BYTE $0x22; BYTE $0x00; BYTE $0x58; BYTE $0x00; BYTE $0x04 // lg    2,88(2)\n+\tBYTE $0xE3; BYTE $0x22; BYTE $0x00; BYTE $0x08; BYTE $0x00; BYTE $0x04 // lg    2,8(2)\n+\tBYTE $0x41; BYTE $0x22; BYTE $0x03; BYTE $0x68                         // la    2,872(2)\n+\n+\t// set up R5 to point to the \"shunt\" path which set 1 to R3 (failure)\n+\tBYTE $0xB9; BYTE $0x82; BYTE $0x00; BYTE $0x33 // xgr   3,3\n+\tBYTE $0xA7; BYTE $0x55; BYTE $0x00; BYTE $0x04 // bras  5,lbl1\n+\tBYTE $0xA7; BYTE $0x39; BYTE $0x00; BYTE $0x01 // lghi  3,1\n+\n+\t// if r3 is not zero (failed) then branch to finish\n+\tBYTE $0xB9; BYTE $0x02; BYTE $0x00; BYTE $0x33 // lbl1     ltgr  3,3\n+\tBYTE $0xA7; BYTE $0x74; BYTE $0x00; BYTE $0x08 // brc   b'0111',lbl2\n+\n+\t// stomic store shunt address in R5 into CEECAADMC\n+\tBYTE $0xE3; BYTE $0x52; BYTE $0x00; BYTE $0x00; BYTE $0x00; BYTE $0x24 // stg   5,0(2)\n+\n+\t// now try reading from the test pointer in R10, if it fails it branches to the \"lghi\" instruction above\n+\tBYTE $0xE3; BYTE $0x9A; BYTE $0x00; BYTE $0x00; BYTE $0x00; BYTE $0x04 // lg    9,0(10)\n+\n+\t// finish here, restore 0 into CEECAADMC\n+\tBYTE $0xB9; BYTE $0x82; BYTE $0x00; BYTE $0x99                         // lbl2     xgr   9,9\n+\tBYTE $0xE3; BYTE $0x92; BYTE $0x00; BYTE $0x00; BYTE $0x00; BYTE $0x24 // stg   9,0(2)\n+\tMOVD R3, ret+8(FP)                                                     // result in R3\n \tRET\n \n-// func gettid() uint64\n-TEXT ·gettid(SB), NOSPLIT, $0\n-\t// Get library control area (LCA).\n-\tMOVW PSALAA, R8\n-\tMOVD LCA64(R8), R8\n-\n-\t// Get CEECAATHDID\n-\tMOVD CAA(R8), R9\n-\tMOVD 0x3D0(R9), R9\n-\tMOVD R9, ret+0(FP)\n-\n+//\n+// function to test if a untptr can be loaded from a pointer\n+// return 1: the 8-byte content\n+//        2: 0 for success, 1 for failure\n+//\n+// func safeload(ptr uintptr) ( value uintptr, error uintptr)\n+TEXT ·safeload(SB), NOSPLIT, $0-24\n+\tMOVD ptr+0(FP), R10                                                    // test pointer in R10\n+\tMOVD $0x0, R6\n+\tBYTE $0xE3; BYTE $0x20; BYTE $0x04; BYTE $0xB8; BYTE $0x00; BYTE $0x17 // llgt  2,1208\n+\tBYTE $0xB9; BYTE $0x17; BYTE $0x00; BYTE $0x22                         // llgtr 2,2\n+\tBYTE $0xA5; BYTE $0x26; BYTE $0x7F; BYTE $0xFF                         // nilh  2,32767\n+\tBYTE $0xE3; BYTE $0x22; BYTE $0x00; BYTE $0x58; BYTE $0x00; BYTE $0x04 // lg    2,88(2)\n+\tBYTE $0xE3; BYTE $0x22; BYTE $0x00; BYTE $0x08; BYTE $0x00; BYTE $0x04 // lg    2,8(2)\n+\tBYTE $0x41; BYTE $0x22; BYTE $0x03; BYTE $0x68                         // la    2,872(2)\n+\tBYTE $0xB9; BYTE $0x82; BYTE $0x00; BYTE $0x33                         // xgr   3,3\n+\tBYTE $0xA7; BYTE $0x55; BYTE $0x00; BYTE $0x04                         // bras  5,lbl1\n+\tBYTE $0xA7; BYTE $0x39; BYTE $0x00; BYTE $0x01                         // lghi  3,1\n+\tBYTE $0xB9; BYTE $0x02; BYTE $0x00; BYTE $0x33                         // lbl1     ltgr  3,3\n+\tBYTE $0xA7; BYTE $0x74; BYTE $0x00; BYTE $0x08                         // brc   b'0111',lbl2\n+\tBYTE $0xE3; BYTE $0x52; BYTE $0x00; BYTE $0x00; BYTE $0x00; BYTE $0x24 // stg 5,0(2)\n+\tBYTE $0xE3; BYTE $0x6A; BYTE $0x00; BYTE $0x00; BYTE $0x00; BYTE $0x04 // lg    6,0(10)\n+\tBYTE $0xB9; BYTE $0x82; BYTE $0x00; BYTE $0x99                         // lbl2     xgr   9,9\n+\tBYTE $0xE3; BYTE $0x92; BYTE $0x00; BYTE $0x00; BYTE $0x00; BYTE $0x24 // stg   9,0(2)\n+\tMOVD R6, value+8(FP)                                                   // result in R6\n+\tMOVD R3, error+16(FP)                                                  // error in R3\n \tRET"
    },
    {
      "sha": "39d647d863a063f936063ba0d19369d6d05f872b",
      "filename": "backend/vendor/golang.org/x/sys/unix/bpxsvc_zos.go",
      "status": "added",
      "additions": 657,
      "deletions": 0,
      "changes": 657,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fbpxsvc_zos.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fbpxsvc_zos.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fbpxsvc_zos.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,657 @@\n+// Copyright 2024 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build zos\n+\n+package unix\n+\n+import (\n+\t\"bytes\"\n+\t\"fmt\"\n+\t\"unsafe\"\n+)\n+\n+//go:noescape\n+func bpxcall(plist []unsafe.Pointer, bpx_offset int64)\n+\n+//go:noescape\n+func A2e([]byte)\n+\n+//go:noescape\n+func E2a([]byte)\n+\n+const (\n+\tBPX4STA = 192  // stat\n+\tBPX4FST = 104  // fstat\n+\tBPX4LST = 132  // lstat\n+\tBPX4OPN = 156  // open\n+\tBPX4CLO = 72   // close\n+\tBPX4CHR = 500  // chattr\n+\tBPX4FCR = 504  // fchattr\n+\tBPX4LCR = 1180 // lchattr\n+\tBPX4CTW = 492  // cond_timed_wait\n+\tBPX4GTH = 1056 // __getthent\n+\tBPX4PTQ = 412  // pthread_quiesc\n+\tBPX4PTR = 320  // ptrace\n+)\n+\n+const (\n+\t//options\n+\t//byte1\n+\tBPX_OPNFHIGH = 0x80\n+\t//byte2\n+\tBPX_OPNFEXEC = 0x80\n+\t//byte3\n+\tBPX_O_NOLARGEFILE = 0x08\n+\tBPX_O_LARGEFILE   = 0x04\n+\tBPX_O_ASYNCSIG    = 0x02\n+\tBPX_O_SYNC        = 0x01\n+\t//byte4\n+\tBPX_O_CREXCL   = 0xc0\n+\tBPX_O_CREAT    = 0x80\n+\tBPX_O_EXCL     = 0x40\n+\tBPX_O_NOCTTY   = 0x20\n+\tBPX_O_TRUNC    = 0x10\n+\tBPX_O_APPEND   = 0x08\n+\tBPX_O_NONBLOCK = 0x04\n+\tBPX_FNDELAY    = 0x04\n+\tBPX_O_RDWR     = 0x03\n+\tBPX_O_RDONLY   = 0x02\n+\tBPX_O_WRONLY   = 0x01\n+\tBPX_O_ACCMODE  = 0x03\n+\tBPX_O_GETFL    = 0x0f\n+\n+\t//mode\n+\t// byte1 (file type)\n+\tBPX_FT_DIR      = 1\n+\tBPX_FT_CHARSPEC = 2\n+\tBPX_FT_REGFILE  = 3\n+\tBPX_FT_FIFO     = 4\n+\tBPX_FT_SYMLINK  = 5\n+\tBPX_FT_SOCKET   = 6\n+\t//byte3\n+\tBPX_S_ISUID  = 0x08\n+\tBPX_S_ISGID  = 0x04\n+\tBPX_S_ISVTX  = 0x02\n+\tBPX_S_IRWXU1 = 0x01\n+\tBPX_S_IRUSR  = 0x01\n+\t//byte4\n+\tBPX_S_IRWXU2 = 0xc0\n+\tBPX_S_IWUSR  = 0x80\n+\tBPX_S_IXUSR  = 0x40\n+\tBPX_S_IRWXG  = 0x38\n+\tBPX_S_IRGRP  = 0x20\n+\tBPX_S_IWGRP  = 0x10\n+\tBPX_S_IXGRP  = 0x08\n+\tBPX_S_IRWXOX = 0x07\n+\tBPX_S_IROTH  = 0x04\n+\tBPX_S_IWOTH  = 0x02\n+\tBPX_S_IXOTH  = 0x01\n+\n+\tCW_INTRPT  = 1\n+\tCW_CONDVAR = 32\n+\tCW_TIMEOUT = 64\n+\n+\tPGTHA_NEXT        = 2\n+\tPGTHA_CURRENT     = 1\n+\tPGTHA_FIRST       = 0\n+\tPGTHA_LAST        = 3\n+\tPGTHA_PROCESS     = 0x80\n+\tPGTHA_CONTTY      = 0x40\n+\tPGTHA_PATH        = 0x20\n+\tPGTHA_COMMAND     = 0x10\n+\tPGTHA_FILEDATA    = 0x08\n+\tPGTHA_THREAD      = 0x04\n+\tPGTHA_PTAG        = 0x02\n+\tPGTHA_COMMANDLONG = 0x01\n+\tPGTHA_THREADFAST  = 0x80\n+\tPGTHA_FILEPATH    = 0x40\n+\tPGTHA_THDSIGMASK  = 0x20\n+\t// thread quiece mode\n+\tQUIESCE_TERM       int32 = 1\n+\tQUIESCE_FORCE      int32 = 2\n+\tQUIESCE_QUERY      int32 = 3\n+\tQUIESCE_FREEZE     int32 = 4\n+\tQUIESCE_UNFREEZE   int32 = 5\n+\tFREEZE_THIS_THREAD int32 = 6\n+\tFREEZE_EXIT        int32 = 8\n+\tQUIESCE_SRB        int32 = 9\n+)\n+\n+type Pgtha struct {\n+\tPid        uint32 // 0\n+\tTid0       uint32 // 4\n+\tTid1       uint32\n+\tAccesspid  byte    // C\n+\tAccesstid  byte    // D\n+\tAccessasid uint16  // E\n+\tLoginname  [8]byte // 10\n+\tFlag1      byte    // 18\n+\tFlag1b2    byte    // 19\n+}\n+\n+type Bpxystat_t struct { // DSECT BPXYSTAT\n+\tSt_id           [4]uint8  // 0\n+\tSt_length       uint16    // 0x4\n+\tSt_version      uint16    // 0x6\n+\tSt_mode         uint32    // 0x8\n+\tSt_ino          uint32    // 0xc\n+\tSt_dev          uint32    // 0x10\n+\tSt_nlink        uint32    // 0x14\n+\tSt_uid          uint32    // 0x18\n+\tSt_gid          uint32    // 0x1c\n+\tSt_size         uint64    // 0x20\n+\tSt_atime        uint32    // 0x28\n+\tSt_mtime        uint32    // 0x2c\n+\tSt_ctime        uint32    // 0x30\n+\tSt_rdev         uint32    // 0x34\n+\tSt_auditoraudit uint32    // 0x38\n+\tSt_useraudit    uint32    // 0x3c\n+\tSt_blksize      uint32    // 0x40\n+\tSt_createtime   uint32    // 0x44\n+\tSt_auditid      [4]uint32 // 0x48\n+\tSt_res01        uint32    // 0x58\n+\tFt_ccsid        uint16    // 0x5c\n+\tFt_flags        uint16    // 0x5e\n+\tSt_res01a       [2]uint32 // 0x60\n+\tSt_res02        uint32    // 0x68\n+\tSt_blocks       uint32    // 0x6c\n+\tSt_opaque       [3]uint8  // 0x70\n+\tSt_visible      uint8     // 0x73\n+\tSt_reftime      uint32    // 0x74\n+\tSt_fid          uint64    // 0x78\n+\tSt_filefmt      uint8     // 0x80\n+\tSt_fspflag2     uint8     // 0x81\n+\tSt_res03        [2]uint8  // 0x82\n+\tSt_ctimemsec    uint32    // 0x84\n+\tSt_seclabel     [8]uint8  // 0x88\n+\tSt_res04        [4]uint8  // 0x90\n+\t// end of version 1\n+\t_               uint32    // 0x94\n+\tSt_atime64      uint64    // 0x98\n+\tSt_mtime64      uint64    // 0xa0\n+\tSt_ctime64      uint64    // 0xa8\n+\tSt_createtime64 uint64    // 0xb0\n+\tSt_reftime64    uint64    // 0xb8\n+\t_               uint64    // 0xc0\n+\tSt_res05        [16]uint8 // 0xc8\n+\t// end of version 2\n+}\n+\n+type BpxFilestatus struct {\n+\tOflag1 byte\n+\tOflag2 byte\n+\tOflag3 byte\n+\tOflag4 byte\n+}\n+\n+type BpxMode struct {\n+\tFtype byte\n+\tMode1 byte\n+\tMode2 byte\n+\tMode3 byte\n+}\n+\n+// Thr attribute structure for extended attributes\n+type Bpxyatt_t struct { // DSECT BPXYATT\n+\tAtt_id           [4]uint8\n+\tAtt_version      uint16\n+\tAtt_res01        [2]uint8\n+\tAtt_setflags1    uint8\n+\tAtt_setflags2    uint8\n+\tAtt_setflags3    uint8\n+\tAtt_setflags4    uint8\n+\tAtt_mode         uint32\n+\tAtt_uid          uint32\n+\tAtt_gid          uint32\n+\tAtt_opaquemask   [3]uint8\n+\tAtt_visblmaskres uint8\n+\tAtt_opaque       [3]uint8\n+\tAtt_visibleres   uint8\n+\tAtt_size_h       uint32\n+\tAtt_size_l       uint32\n+\tAtt_atime        uint32\n+\tAtt_mtime        uint32\n+\tAtt_auditoraudit uint32\n+\tAtt_useraudit    uint32\n+\tAtt_ctime        uint32\n+\tAtt_reftime      uint32\n+\t// end of version 1\n+\tAtt_filefmt uint8\n+\tAtt_res02   [3]uint8\n+\tAtt_filetag uint32\n+\tAtt_res03   [8]uint8\n+\t// end of version 2\n+\tAtt_atime64   uint64\n+\tAtt_mtime64   uint64\n+\tAtt_ctime64   uint64\n+\tAtt_reftime64 uint64\n+\tAtt_seclabel  [8]uint8\n+\tAtt_ver3res02 [8]uint8\n+\t// end of version 3\n+}\n+\n+func BpxOpen(name string, options *BpxFilestatus, mode *BpxMode) (rv int32, rc int32, rn int32) {\n+\tif len(name) < 1024 {\n+\t\tvar namebuf [1024]byte\n+\t\tsz := int32(copy(namebuf[:], name))\n+\t\tA2e(namebuf[:sz])\n+\t\tvar parms [7]unsafe.Pointer\n+\t\tparms[0] = unsafe.Pointer(&sz)\n+\t\tparms[1] = unsafe.Pointer(&namebuf[0])\n+\t\tparms[2] = unsafe.Pointer(options)\n+\t\tparms[3] = unsafe.Pointer(mode)\n+\t\tparms[4] = unsafe.Pointer(&rv)\n+\t\tparms[5] = unsafe.Pointer(&rc)\n+\t\tparms[6] = unsafe.Pointer(&rn)\n+\t\tbpxcall(parms[:], BPX4OPN)\n+\t\treturn rv, rc, rn\n+\t}\n+\treturn -1, -1, -1\n+}\n+\n+func BpxClose(fd int32) (rv int32, rc int32, rn int32) {\n+\tvar parms [4]unsafe.Pointer\n+\tparms[0] = unsafe.Pointer(&fd)\n+\tparms[1] = unsafe.Pointer(&rv)\n+\tparms[2] = unsafe.Pointer(&rc)\n+\tparms[3] = unsafe.Pointer(&rn)\n+\tbpxcall(parms[:], BPX4CLO)\n+\treturn rv, rc, rn\n+}\n+\n+func BpxFileFStat(fd int32, st *Bpxystat_t) (rv int32, rc int32, rn int32) {\n+\tst.St_id = [4]uint8{0xe2, 0xe3, 0xc1, 0xe3}\n+\tst.St_version = 2\n+\tstat_sz := uint32(unsafe.Sizeof(*st))\n+\tvar parms [6]unsafe.Pointer\n+\tparms[0] = unsafe.Pointer(&fd)\n+\tparms[1] = unsafe.Pointer(&stat_sz)\n+\tparms[2] = unsafe.Pointer(st)\n+\tparms[3] = unsafe.Pointer(&rv)\n+\tparms[4] = unsafe.Pointer(&rc)\n+\tparms[5] = unsafe.Pointer(&rn)\n+\tbpxcall(parms[:], BPX4FST)\n+\treturn rv, rc, rn\n+}\n+\n+func BpxFileStat(name string, st *Bpxystat_t) (rv int32, rc int32, rn int32) {\n+\tif len(name) < 1024 {\n+\t\tvar namebuf [1024]byte\n+\t\tsz := int32(copy(namebuf[:], name))\n+\t\tA2e(namebuf[:sz])\n+\t\tst.St_id = [4]uint8{0xe2, 0xe3, 0xc1, 0xe3}\n+\t\tst.St_version = 2\n+\t\tstat_sz := uint32(unsafe.Sizeof(*st))\n+\t\tvar parms [7]unsafe.Pointer\n+\t\tparms[0] = unsafe.Pointer(&sz)\n+\t\tparms[1] = unsafe.Pointer(&namebuf[0])\n+\t\tparms[2] = unsafe.Pointer(&stat_sz)\n+\t\tparms[3] = unsafe.Pointer(st)\n+\t\tparms[4] = unsafe.Pointer(&rv)\n+\t\tparms[5] = unsafe.Pointer(&rc)\n+\t\tparms[6] = unsafe.Pointer(&rn)\n+\t\tbpxcall(parms[:], BPX4STA)\n+\t\treturn rv, rc, rn\n+\t}\n+\treturn -1, -1, -1\n+}\n+\n+func BpxFileLStat(name string, st *Bpxystat_t) (rv int32, rc int32, rn int32) {\n+\tif len(name) < 1024 {\n+\t\tvar namebuf [1024]byte\n+\t\tsz := int32(copy(namebuf[:], name))\n+\t\tA2e(namebuf[:sz])\n+\t\tst.St_id = [4]uint8{0xe2, 0xe3, 0xc1, 0xe3}\n+\t\tst.St_version = 2\n+\t\tstat_sz := uint32(unsafe.Sizeof(*st))\n+\t\tvar parms [7]unsafe.Pointer\n+\t\tparms[0] = unsafe.Pointer(&sz)\n+\t\tparms[1] = unsafe.Pointer(&namebuf[0])\n+\t\tparms[2] = unsafe.Pointer(&stat_sz)\n+\t\tparms[3] = unsafe.Pointer(st)\n+\t\tparms[4] = unsafe.Pointer(&rv)\n+\t\tparms[5] = unsafe.Pointer(&rc)\n+\t\tparms[6] = unsafe.Pointer(&rn)\n+\t\tbpxcall(parms[:], BPX4LST)\n+\t\treturn rv, rc, rn\n+\t}\n+\treturn -1, -1, -1\n+}\n+\n+func BpxChattr(path string, attr *Bpxyatt_t) (rv int32, rc int32, rn int32) {\n+\tif len(path) >= 1024 {\n+\t\treturn -1, -1, -1\n+\t}\n+\tvar namebuf [1024]byte\n+\tsz := int32(copy(namebuf[:], path))\n+\tA2e(namebuf[:sz])\n+\tattr_sz := uint32(unsafe.Sizeof(*attr))\n+\tvar parms [7]unsafe.Pointer\n+\tparms[0] = unsafe.Pointer(&sz)\n+\tparms[1] = unsafe.Pointer(&namebuf[0])\n+\tparms[2] = unsafe.Pointer(&attr_sz)\n+\tparms[3] = unsafe.Pointer(attr)\n+\tparms[4] = unsafe.Pointer(&rv)\n+\tparms[5] = unsafe.Pointer(&rc)\n+\tparms[6] = unsafe.Pointer(&rn)\n+\tbpxcall(parms[:], BPX4CHR)\n+\treturn rv, rc, rn\n+}\n+\n+func BpxLchattr(path string, attr *Bpxyatt_t) (rv int32, rc int32, rn int32) {\n+\tif len(path) >= 1024 {\n+\t\treturn -1, -1, -1\n+\t}\n+\tvar namebuf [1024]byte\n+\tsz := int32(copy(namebuf[:], path))\n+\tA2e(namebuf[:sz])\n+\tattr_sz := uint32(unsafe.Sizeof(*attr))\n+\tvar parms [7]unsafe.Pointer\n+\tparms[0] = unsafe.Pointer(&sz)\n+\tparms[1] = unsafe.Pointer(&namebuf[0])\n+\tparms[2] = unsafe.Pointer(&attr_sz)\n+\tparms[3] = unsafe.Pointer(attr)\n+\tparms[4] = unsafe.Pointer(&rv)\n+\tparms[5] = unsafe.Pointer(&rc)\n+\tparms[6] = unsafe.Pointer(&rn)\n+\tbpxcall(parms[:], BPX4LCR)\n+\treturn rv, rc, rn\n+}\n+\n+func BpxFchattr(fd int32, attr *Bpxyatt_t) (rv int32, rc int32, rn int32) {\n+\tattr_sz := uint32(unsafe.Sizeof(*attr))\n+\tvar parms [6]unsafe.Pointer\n+\tparms[0] = unsafe.Pointer(&fd)\n+\tparms[1] = unsafe.Pointer(&attr_sz)\n+\tparms[2] = unsafe.Pointer(attr)\n+\tparms[3] = unsafe.Pointer(&rv)\n+\tparms[4] = unsafe.Pointer(&rc)\n+\tparms[5] = unsafe.Pointer(&rn)\n+\tbpxcall(parms[:], BPX4FCR)\n+\treturn rv, rc, rn\n+}\n+\n+func BpxCondTimedWait(sec uint32, nsec uint32, events uint32, secrem *uint32, nsecrem *uint32) (rv int32, rc int32, rn int32) {\n+\tvar parms [8]unsafe.Pointer\n+\tparms[0] = unsafe.Pointer(&sec)\n+\tparms[1] = unsafe.Pointer(&nsec)\n+\tparms[2] = unsafe.Pointer(&events)\n+\tparms[3] = unsafe.Pointer(secrem)\n+\tparms[4] = unsafe.Pointer(nsecrem)\n+\tparms[5] = unsafe.Pointer(&rv)\n+\tparms[6] = unsafe.Pointer(&rc)\n+\tparms[7] = unsafe.Pointer(&rn)\n+\tbpxcall(parms[:], BPX4CTW)\n+\treturn rv, rc, rn\n+}\n+func BpxGetthent(in *Pgtha, outlen *uint32, out unsafe.Pointer) (rv int32, rc int32, rn int32) {\n+\tvar parms [7]unsafe.Pointer\n+\tinlen := uint32(26) // nothing else will work. Go says Pgtha is 28-byte because of alignment, but Pgtha is \"packed\" and must be 26-byte\n+\tparms[0] = unsafe.Pointer(&inlen)\n+\tparms[1] = unsafe.Pointer(&in)\n+\tparms[2] = unsafe.Pointer(outlen)\n+\tparms[3] = unsafe.Pointer(&out)\n+\tparms[4] = unsafe.Pointer(&rv)\n+\tparms[5] = unsafe.Pointer(&rc)\n+\tparms[6] = unsafe.Pointer(&rn)\n+\tbpxcall(parms[:], BPX4GTH)\n+\treturn rv, rc, rn\n+}\n+func ZosJobname() (jobname string, err error) {\n+\tvar pgtha Pgtha\n+\tpgtha.Pid = uint32(Getpid())\n+\tpgtha.Accesspid = PGTHA_CURRENT\n+\tpgtha.Flag1 = PGTHA_PROCESS\n+\tvar out [256]byte\n+\tvar outlen uint32\n+\toutlen = 256\n+\trv, rc, rn := BpxGetthent(&pgtha, &outlen, unsafe.Pointer(&out[0]))\n+\tif rv == 0 {\n+\t\tgthc := []byte{0x87, 0xa3, 0x88, 0x83} // 'gthc' in ebcdic\n+\t\tix := bytes.Index(out[:], gthc)\n+\t\tif ix == -1 {\n+\t\t\terr = fmt.Errorf(\"BPX4GTH: gthc return data not found\")\n+\t\t\treturn\n+\t\t}\n+\t\tjn := out[ix+80 : ix+88] // we didn't declare Pgthc, but jobname is 8-byte at offset 80\n+\t\tE2a(jn)\n+\t\tjobname = string(bytes.TrimRight(jn, \" \"))\n+\n+\t} else {\n+\t\terr = fmt.Errorf(\"BPX4GTH: rc=%d errno=%d reason=code=0x%x\", rv, rc, rn)\n+\t}\n+\treturn\n+}\n+func Bpx4ptq(code int32, data string) (rv int32, rc int32, rn int32) {\n+\tvar userdata [8]byte\n+\tvar parms [5]unsafe.Pointer\n+\tcopy(userdata[:], data+\"        \")\n+\tA2e(userdata[:])\n+\tparms[0] = unsafe.Pointer(&code)\n+\tparms[1] = unsafe.Pointer(&userdata[0])\n+\tparms[2] = unsafe.Pointer(&rv)\n+\tparms[3] = unsafe.Pointer(&rc)\n+\tparms[4] = unsafe.Pointer(&rn)\n+\tbpxcall(parms[:], BPX4PTQ)\n+\treturn rv, rc, rn\n+}\n+\n+const (\n+\tPT_TRACE_ME             = 0  // Debug this process\n+\tPT_READ_I               = 1  // Read a full word\n+\tPT_READ_D               = 2  // Read a full word\n+\tPT_READ_U               = 3  // Read control info\n+\tPT_WRITE_I              = 4  //Write a full word\n+\tPT_WRITE_D              = 5  //Write a full word\n+\tPT_CONTINUE             = 7  //Continue the process\n+\tPT_KILL                 = 8  //Terminate the process\n+\tPT_READ_GPR             = 11 // Read GPR, CR, PSW\n+\tPT_READ_FPR             = 12 // Read FPR\n+\tPT_READ_VR              = 13 // Read VR\n+\tPT_WRITE_GPR            = 14 // Write GPR, CR, PSW\n+\tPT_WRITE_FPR            = 15 // Write FPR\n+\tPT_WRITE_VR             = 16 // Write VR\n+\tPT_READ_BLOCK           = 17 // Read storage\n+\tPT_WRITE_BLOCK          = 19 // Write storage\n+\tPT_READ_GPRH            = 20 // Read GPRH\n+\tPT_WRITE_GPRH           = 21 // Write GPRH\n+\tPT_REGHSET              = 22 // Read all GPRHs\n+\tPT_ATTACH               = 30 // Attach to a process\n+\tPT_DETACH               = 31 // Detach from a process\n+\tPT_REGSET               = 32 // Read all GPRs\n+\tPT_REATTACH             = 33 // Reattach to a process\n+\tPT_LDINFO               = 34 // Read loader info\n+\tPT_MULTI                = 35 // Multi process mode\n+\tPT_LD64INFO             = 36 // RMODE64 Info Area\n+\tPT_BLOCKREQ             = 40 // Block request\n+\tPT_THREAD_INFO          = 60 // Read thread info\n+\tPT_THREAD_MODIFY        = 61\n+\tPT_THREAD_READ_FOCUS    = 62\n+\tPT_THREAD_WRITE_FOCUS   = 63\n+\tPT_THREAD_HOLD          = 64\n+\tPT_THREAD_SIGNAL        = 65\n+\tPT_EXPLAIN              = 66\n+\tPT_EVENTS               = 67\n+\tPT_THREAD_INFO_EXTENDED = 68\n+\tPT_REATTACH2            = 71\n+\tPT_CAPTURE              = 72\n+\tPT_UNCAPTURE            = 73\n+\tPT_GET_THREAD_TCB       = 74\n+\tPT_GET_ALET             = 75\n+\tPT_SWAPIN               = 76\n+\tPT_EXTENDED_EVENT       = 98\n+\tPT_RECOVER              = 99  // Debug a program check\n+\tPT_GPR0                 = 0   // General purpose register 0\n+\tPT_GPR1                 = 1   // General purpose register 1\n+\tPT_GPR2                 = 2   // General purpose register 2\n+\tPT_GPR3                 = 3   // General purpose register 3\n+\tPT_GPR4                 = 4   // General purpose register 4\n+\tPT_GPR5                 = 5   // General purpose register 5\n+\tPT_GPR6                 = 6   // General purpose register 6\n+\tPT_GPR7                 = 7   // General purpose register 7\n+\tPT_GPR8                 = 8   // General purpose register 8\n+\tPT_GPR9                 = 9   // General purpose register 9\n+\tPT_GPR10                = 10  // General purpose register 10\n+\tPT_GPR11                = 11  // General purpose register 11\n+\tPT_GPR12                = 12  // General purpose register 12\n+\tPT_GPR13                = 13  // General purpose register 13\n+\tPT_GPR14                = 14  // General purpose register 14\n+\tPT_GPR15                = 15  // General purpose register 15\n+\tPT_FPR0                 = 16  // Floating point register 0\n+\tPT_FPR1                 = 17  // Floating point register 1\n+\tPT_FPR2                 = 18  // Floating point register 2\n+\tPT_FPR3                 = 19  // Floating point register 3\n+\tPT_FPR4                 = 20  // Floating point register 4\n+\tPT_FPR5                 = 21  // Floating point register 5\n+\tPT_FPR6                 = 22  // Floating point register 6\n+\tPT_FPR7                 = 23  // Floating point register 7\n+\tPT_FPR8                 = 24  // Floating point register 8\n+\tPT_FPR9                 = 25  // Floating point register 9\n+\tPT_FPR10                = 26  // Floating point register 10\n+\tPT_FPR11                = 27  // Floating point register 11\n+\tPT_FPR12                = 28  // Floating point register 12\n+\tPT_FPR13                = 29  // Floating point register 13\n+\tPT_FPR14                = 30  // Floating point register 14\n+\tPT_FPR15                = 31  // Floating point register 15\n+\tPT_FPC                  = 32  // Floating point control register\n+\tPT_PSW                  = 40  // PSW\n+\tPT_PSW0                 = 40  // Left half of the PSW\n+\tPT_PSW1                 = 41  // Right half of the PSW\n+\tPT_CR0                  = 42  // Control register 0\n+\tPT_CR1                  = 43  // Control register 1\n+\tPT_CR2                  = 44  // Control register 2\n+\tPT_CR3                  = 45  // Control register 3\n+\tPT_CR4                  = 46  // Control register 4\n+\tPT_CR5                  = 47  // Control register 5\n+\tPT_CR6                  = 48  // Control register 6\n+\tPT_CR7                  = 49  // Control register 7\n+\tPT_CR8                  = 50  // Control register 8\n+\tPT_CR9                  = 51  // Control register 9\n+\tPT_CR10                 = 52  // Control register 10\n+\tPT_CR11                 = 53  // Control register 11\n+\tPT_CR12                 = 54  // Control register 12\n+\tPT_CR13                 = 55  // Control register 13\n+\tPT_CR14                 = 56  // Control register 14\n+\tPT_CR15                 = 57  // Control register 15\n+\tPT_GPRH0                = 58  // GP High register 0\n+\tPT_GPRH1                = 59  // GP High register 1\n+\tPT_GPRH2                = 60  // GP High register 2\n+\tPT_GPRH3                = 61  // GP High register 3\n+\tPT_GPRH4                = 62  // GP High register 4\n+\tPT_GPRH5                = 63  // GP High register 5\n+\tPT_GPRH6                = 64  // GP High register 6\n+\tPT_GPRH7                = 65  // GP High register 7\n+\tPT_GPRH8                = 66  // GP High register 8\n+\tPT_GPRH9                = 67  // GP High register 9\n+\tPT_GPRH10               = 68  // GP High register 10\n+\tPT_GPRH11               = 69  // GP High register 11\n+\tPT_GPRH12               = 70  // GP High register 12\n+\tPT_GPRH13               = 71  // GP High register 13\n+\tPT_GPRH14               = 72  // GP High register 14\n+\tPT_GPRH15               = 73  // GP High register 15\n+\tPT_VR0                  = 74  // Vector register 0\n+\tPT_VR1                  = 75  // Vector register 1\n+\tPT_VR2                  = 76  // Vector register 2\n+\tPT_VR3                  = 77  // Vector register 3\n+\tPT_VR4                  = 78  // Vector register 4\n+\tPT_VR5                  = 79  // Vector register 5\n+\tPT_VR6                  = 80  // Vector register 6\n+\tPT_VR7                  = 81  // Vector register 7\n+\tPT_VR8                  = 82  // Vector register 8\n+\tPT_VR9                  = 83  // Vector register 9\n+\tPT_VR10                 = 84  // Vector register 10\n+\tPT_VR11                 = 85  // Vector register 11\n+\tPT_VR12                 = 86  // Vector register 12\n+\tPT_VR13                 = 87  // Vector register 13\n+\tPT_VR14                 = 88  // Vector register 14\n+\tPT_VR15                 = 89  // Vector register 15\n+\tPT_VR16                 = 90  // Vector register 16\n+\tPT_VR17                 = 91  // Vector register 17\n+\tPT_VR18                 = 92  // Vector register 18\n+\tPT_VR19                 = 93  // Vector register 19\n+\tPT_VR20                 = 94  // Vector register 20\n+\tPT_VR21                 = 95  // Vector register 21\n+\tPT_VR22                 = 96  // Vector register 22\n+\tPT_VR23                 = 97  // Vector register 23\n+\tPT_VR24                 = 98  // Vector register 24\n+\tPT_VR25                 = 99  // Vector register 25\n+\tPT_VR26                 = 100 // Vector register 26\n+\tPT_VR27                 = 101 // Vector register 27\n+\tPT_VR28                 = 102 // Vector register 28\n+\tPT_VR29                 = 103 // Vector register 29\n+\tPT_VR30                 = 104 // Vector register 30\n+\tPT_VR31                 = 105 // Vector register 31\n+\tPT_PSWG                 = 106 // PSWG\n+\tPT_PSWG0                = 106 // Bytes 0-3\n+\tPT_PSWG1                = 107 // Bytes 4-7\n+\tPT_PSWG2                = 108 // Bytes 8-11 (IA high word)\n+\tPT_PSWG3                = 109 // Bytes 12-15 (IA low word)\n+)\n+\n+func Bpx4ptr(request int32, pid int32, addr unsafe.Pointer, data unsafe.Pointer, buffer unsafe.Pointer) (rv int32, rc int32, rn int32) {\n+\tvar parms [8]unsafe.Pointer\n+\tparms[0] = unsafe.Pointer(&request)\n+\tparms[1] = unsafe.Pointer(&pid)\n+\tparms[2] = unsafe.Pointer(&addr)\n+\tparms[3] = unsafe.Pointer(&data)\n+\tparms[4] = unsafe.Pointer(&buffer)\n+\tparms[5] = unsafe.Pointer(&rv)\n+\tparms[6] = unsafe.Pointer(&rc)\n+\tparms[7] = unsafe.Pointer(&rn)\n+\tbpxcall(parms[:], BPX4PTR)\n+\treturn rv, rc, rn\n+}\n+\n+func copyU8(val uint8, dest []uint8) int {\n+\tif len(dest) < 1 {\n+\t\treturn 0\n+\t}\n+\tdest[0] = val\n+\treturn 1\n+}\n+\n+func copyU8Arr(src, dest []uint8) int {\n+\tif len(dest) < len(src) {\n+\t\treturn 0\n+\t}\n+\tfor i, v := range src {\n+\t\tdest[i] = v\n+\t}\n+\treturn len(src)\n+}\n+\n+func copyU16(val uint16, dest []uint16) int {\n+\tif len(dest) < 1 {\n+\t\treturn 0\n+\t}\n+\tdest[0] = val\n+\treturn 1\n+}\n+\n+func copyU32(val uint32, dest []uint32) int {\n+\tif len(dest) < 1 {\n+\t\treturn 0\n+\t}\n+\tdest[0] = val\n+\treturn 1\n+}\n+\n+func copyU32Arr(src, dest []uint32) int {\n+\tif len(dest) < len(src) {\n+\t\treturn 0\n+\t}\n+\tfor i, v := range src {\n+\t\tdest[i] = v\n+\t}\n+\treturn len(src)\n+}\n+\n+func copyU64(val uint64, dest []uint64) int {\n+\tif len(dest) < 1 {\n+\t\treturn 0\n+\t}\n+\tdest[0] = val\n+\treturn 1\n+}"
    },
    {
      "sha": "4bd4a179821bdc7e1bb6ad08caf45bb6803e7fae",
      "filename": "backend/vendor/golang.org/x/sys/unix/bpxsvc_zos.s",
      "status": "added",
      "additions": 192,
      "deletions": 0,
      "changes": 192,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fbpxsvc_zos.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fbpxsvc_zos.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fbpxsvc_zos.s?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,192 @@\n+// Copyright 2024 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+#include \"go_asm.h\"\n+#include \"textflag.h\"\n+\n+// function to call USS assembly language services\n+//\n+// doc: https://www.ibm.com/support/knowledgecenter/en/SSLTBW_3.1.0/com.ibm.zos.v3r1.bpxb100/bit64env.htm\n+//\n+//   arg1 unsafe.Pointer array that ressembles an OS PLIST\n+//\n+//   arg2 function offset as in\n+//       doc: https://www.ibm.com/support/knowledgecenter/en/SSLTBW_3.1.0/com.ibm.zos.v3r1.bpxb100/bpx2cr_List_of_offsets.htm\n+//\n+// func bpxcall(plist []unsafe.Pointer, bpx_offset int64)\n+\n+TEXT ·bpxcall(SB), NOSPLIT|NOFRAME, $0\n+\tMOVD  plist_base+0(FP), R1  // r1 points to plist\n+\tMOVD  bpx_offset+24(FP), R2 // r2 offset to BPX vector table\n+\tMOVD  R14, R7               // save r14\n+\tMOVD  R15, R8               // save r15\n+\tMOVWZ 16(R0), R9\n+\tMOVWZ 544(R9), R9\n+\tMOVWZ 24(R9), R9            // call vector in r9\n+\tADD   R2, R9                // add offset to vector table\n+\tMOVWZ (R9), R9              // r9 points to entry point\n+\tBYTE  $0x0D                 // BL R14,R9 --> basr r14,r9\n+\tBYTE  $0xE9                 // clobbers 0,1,14,15\n+\tMOVD  R8, R15               // restore 15\n+\tJMP   R7                    // return via saved return address\n+\n+//   func A2e(arr [] byte)\n+//   code page conversion from  819 to 1047\n+TEXT ·A2e(SB), NOSPLIT|NOFRAME, $0\n+\tMOVD arg_base+0(FP), R2                        // pointer to arry of characters\n+\tMOVD arg_len+8(FP), R3                         // count\n+\tXOR  R0, R0\n+\tXOR  R1, R1\n+\tBYTE $0xA7; BYTE $0x15; BYTE $0x00; BYTE $0x82 // BRAS 1,(2+(256/2))\n+\n+\t// ASCII -> EBCDIC conversion table:\n+\tBYTE $0x00; BYTE $0x01; BYTE $0x02; BYTE $0x03\n+\tBYTE $0x37; BYTE $0x2d; BYTE $0x2e; BYTE $0x2f\n+\tBYTE $0x16; BYTE $0x05; BYTE $0x15; BYTE $0x0b\n+\tBYTE $0x0c; BYTE $0x0d; BYTE $0x0e; BYTE $0x0f\n+\tBYTE $0x10; BYTE $0x11; BYTE $0x12; BYTE $0x13\n+\tBYTE $0x3c; BYTE $0x3d; BYTE $0x32; BYTE $0x26\n+\tBYTE $0x18; BYTE $0x19; BYTE $0x3f; BYTE $0x27\n+\tBYTE $0x1c; BYTE $0x1d; BYTE $0x1e; BYTE $0x1f\n+\tBYTE $0x40; BYTE $0x5a; BYTE $0x7f; BYTE $0x7b\n+\tBYTE $0x5b; BYTE $0x6c; BYTE $0x50; BYTE $0x7d\n+\tBYTE $0x4d; BYTE $0x5d; BYTE $0x5c; BYTE $0x4e\n+\tBYTE $0x6b; BYTE $0x60; BYTE $0x4b; BYTE $0x61\n+\tBYTE $0xf0; BYTE $0xf1; BYTE $0xf2; BYTE $0xf3\n+\tBYTE $0xf4; BYTE $0xf5; BYTE $0xf6; BYTE $0xf7\n+\tBYTE $0xf8; BYTE $0xf9; BYTE $0x7a; BYTE $0x5e\n+\tBYTE $0x4c; BYTE $0x7e; BYTE $0x6e; BYTE $0x6f\n+\tBYTE $0x7c; BYTE $0xc1; BYTE $0xc2; BYTE $0xc3\n+\tBYTE $0xc4; BYTE $0xc5; BYTE $0xc6; BYTE $0xc7\n+\tBYTE $0xc8; BYTE $0xc9; BYTE $0xd1; BYTE $0xd2\n+\tBYTE $0xd3; BYTE $0xd4; BYTE $0xd5; BYTE $0xd6\n+\tBYTE $0xd7; BYTE $0xd8; BYTE $0xd9; BYTE $0xe2\n+\tBYTE $0xe3; BYTE $0xe4; BYTE $0xe5; BYTE $0xe6\n+\tBYTE $0xe7; BYTE $0xe8; BYTE $0xe9; BYTE $0xad\n+\tBYTE $0xe0; BYTE $0xbd; BYTE $0x5f; BYTE $0x6d\n+\tBYTE $0x79; BYTE $0x81; BYTE $0x82; BYTE $0x83\n+\tBYTE $0x84; BYTE $0x85; BYTE $0x86; BYTE $0x87\n+\tBYTE $0x88; BYTE $0x89; BYTE $0x91; BYTE $0x92\n+\tBYTE $0x93; BYTE $0x94; BYTE $0x95; BYTE $0x96\n+\tBYTE $0x97; BYTE $0x98; BYTE $0x99; BYTE $0xa2\n+\tBYTE $0xa3; BYTE $0xa4; BYTE $0xa5; BYTE $0xa6\n+\tBYTE $0xa7; BYTE $0xa8; BYTE $0xa9; BYTE $0xc0\n+\tBYTE $0x4f; BYTE $0xd0; BYTE $0xa1; BYTE $0x07\n+\tBYTE $0x20; BYTE $0x21; BYTE $0x22; BYTE $0x23\n+\tBYTE $0x24; BYTE $0x25; BYTE $0x06; BYTE $0x17\n+\tBYTE $0x28; BYTE $0x29; BYTE $0x2a; BYTE $0x2b\n+\tBYTE $0x2c; BYTE $0x09; BYTE $0x0a; BYTE $0x1b\n+\tBYTE $0x30; BYTE $0x31; BYTE $0x1a; BYTE $0x33\n+\tBYTE $0x34; BYTE $0x35; BYTE $0x36; BYTE $0x08\n+\tBYTE $0x38; BYTE $0x39; BYTE $0x3a; BYTE $0x3b\n+\tBYTE $0x04; BYTE $0x14; BYTE $0x3e; BYTE $0xff\n+\tBYTE $0x41; BYTE $0xaa; BYTE $0x4a; BYTE $0xb1\n+\tBYTE $0x9f; BYTE $0xb2; BYTE $0x6a; BYTE $0xb5\n+\tBYTE $0xbb; BYTE $0xb4; BYTE $0x9a; BYTE $0x8a\n+\tBYTE $0xb0; BYTE $0xca; BYTE $0xaf; BYTE $0xbc\n+\tBYTE $0x90; BYTE $0x8f; BYTE $0xea; BYTE $0xfa\n+\tBYTE $0xbe; BYTE $0xa0; BYTE $0xb6; BYTE $0xb3\n+\tBYTE $0x9d; BYTE $0xda; BYTE $0x9b; BYTE $0x8b\n+\tBYTE $0xb7; BYTE $0xb8; BYTE $0xb9; BYTE $0xab\n+\tBYTE $0x64; BYTE $0x65; BYTE $0x62; BYTE $0x66\n+\tBYTE $0x63; BYTE $0x67; BYTE $0x9e; BYTE $0x68\n+\tBYTE $0x74; BYTE $0x71; BYTE $0x72; BYTE $0x73\n+\tBYTE $0x78; BYTE $0x75; BYTE $0x76; BYTE $0x77\n+\tBYTE $0xac; BYTE $0x69; BYTE $0xed; BYTE $0xee\n+\tBYTE $0xeb; BYTE $0xef; BYTE $0xec; BYTE $0xbf\n+\tBYTE $0x80; BYTE $0xfd; BYTE $0xfe; BYTE $0xfb\n+\tBYTE $0xfc; BYTE $0xba; BYTE $0xae; BYTE $0x59\n+\tBYTE $0x44; BYTE $0x45; BYTE $0x42; BYTE $0x46\n+\tBYTE $0x43; BYTE $0x47; BYTE $0x9c; BYTE $0x48\n+\tBYTE $0x54; BYTE $0x51; BYTE $0x52; BYTE $0x53\n+\tBYTE $0x58; BYTE $0x55; BYTE $0x56; BYTE $0x57\n+\tBYTE $0x8c; BYTE $0x49; BYTE $0xcd; BYTE $0xce\n+\tBYTE $0xcb; BYTE $0xcf; BYTE $0xcc; BYTE $0xe1\n+\tBYTE $0x70; BYTE $0xdd; BYTE $0xde; BYTE $0xdb\n+\tBYTE $0xdc; BYTE $0x8d; BYTE $0x8e; BYTE $0xdf\n+\n+retry:\n+\tWORD $0xB9931022 // TROO 2,2,b'0001'\n+\tBVS  retry\n+\tRET\n+\n+//   func e2a(arr [] byte)\n+//   code page conversion from  1047 to 819\n+TEXT ·E2a(SB), NOSPLIT|NOFRAME, $0\n+\tMOVD arg_base+0(FP), R2                        // pointer to arry of characters\n+\tMOVD arg_len+8(FP), R3                         // count\n+\tXOR  R0, R0\n+\tXOR  R1, R1\n+\tBYTE $0xA7; BYTE $0x15; BYTE $0x00; BYTE $0x82 // BRAS 1,(2+(256/2))\n+\n+\t// EBCDIC -> ASCII conversion table:\n+\tBYTE $0x00; BYTE $0x01; BYTE $0x02; BYTE $0x03\n+\tBYTE $0x9c; BYTE $0x09; BYTE $0x86; BYTE $0x7f\n+\tBYTE $0x97; BYTE $0x8d; BYTE $0x8e; BYTE $0x0b\n+\tBYTE $0x0c; BYTE $0x0d; BYTE $0x0e; BYTE $0x0f\n+\tBYTE $0x10; BYTE $0x11; BYTE $0x12; BYTE $0x13\n+\tBYTE $0x9d; BYTE $0x0a; BYTE $0x08; BYTE $0x87\n+\tBYTE $0x18; BYTE $0x19; BYTE $0x92; BYTE $0x8f\n+\tBYTE $0x1c; BYTE $0x1d; BYTE $0x1e; BYTE $0x1f\n+\tBYTE $0x80; BYTE $0x81; BYTE $0x82; BYTE $0x83\n+\tBYTE $0x84; BYTE $0x85; BYTE $0x17; BYTE $0x1b\n+\tBYTE $0x88; BYTE $0x89; BYTE $0x8a; BYTE $0x8b\n+\tBYTE $0x8c; BYTE $0x05; BYTE $0x06; BYTE $0x07\n+\tBYTE $0x90; BYTE $0x91; BYTE $0x16; BYTE $0x93\n+\tBYTE $0x94; BYTE $0x95; BYTE $0x96; BYTE $0x04\n+\tBYTE $0x98; BYTE $0x99; BYTE $0x9a; BYTE $0x9b\n+\tBYTE $0x14; BYTE $0x15; BYTE $0x9e; BYTE $0x1a\n+\tBYTE $0x20; BYTE $0xa0; BYTE $0xe2; BYTE $0xe4\n+\tBYTE $0xe0; BYTE $0xe1; BYTE $0xe3; BYTE $0xe5\n+\tBYTE $0xe7; BYTE $0xf1; BYTE $0xa2; BYTE $0x2e\n+\tBYTE $0x3c; BYTE $0x28; BYTE $0x2b; BYTE $0x7c\n+\tBYTE $0x26; BYTE $0xe9; BYTE $0xea; BYTE $0xeb\n+\tBYTE $0xe8; BYTE $0xed; BYTE $0xee; BYTE $0xef\n+\tBYTE $0xec; BYTE $0xdf; BYTE $0x21; BYTE $0x24\n+\tBYTE $0x2a; BYTE $0x29; BYTE $0x3b; BYTE $0x5e\n+\tBYTE $0x2d; BYTE $0x2f; BYTE $0xc2; BYTE $0xc4\n+\tBYTE $0xc0; BYTE $0xc1; BYTE $0xc3; BYTE $0xc5\n+\tBYTE $0xc7; BYTE $0xd1; BYTE $0xa6; BYTE $0x2c\n+\tBYTE $0x25; BYTE $0x5f; BYTE $0x3e; BYTE $0x3f\n+\tBYTE $0xf8; BYTE $0xc9; BYTE $0xca; BYTE $0xcb\n+\tBYTE $0xc8; BYTE $0xcd; BYTE $0xce; BYTE $0xcf\n+\tBYTE $0xcc; BYTE $0x60; BYTE $0x3a; BYTE $0x23\n+\tBYTE $0x40; BYTE $0x27; BYTE $0x3d; BYTE $0x22\n+\tBYTE $0xd8; BYTE $0x61; BYTE $0x62; BYTE $0x63\n+\tBYTE $0x64; BYTE $0x65; BYTE $0x66; BYTE $0x67\n+\tBYTE $0x68; BYTE $0x69; BYTE $0xab; BYTE $0xbb\n+\tBYTE $0xf0; BYTE $0xfd; BYTE $0xfe; BYTE $0xb1\n+\tBYTE $0xb0; BYTE $0x6a; BYTE $0x6b; BYTE $0x6c\n+\tBYTE $0x6d; BYTE $0x6e; BYTE $0x6f; BYTE $0x70\n+\tBYTE $0x71; BYTE $0x72; BYTE $0xaa; BYTE $0xba\n+\tBYTE $0xe6; BYTE $0xb8; BYTE $0xc6; BYTE $0xa4\n+\tBYTE $0xb5; BYTE $0x7e; BYTE $0x73; BYTE $0x74\n+\tBYTE $0x75; BYTE $0x76; BYTE $0x77; BYTE $0x78\n+\tBYTE $0x79; BYTE $0x7a; BYTE $0xa1; BYTE $0xbf\n+\tBYTE $0xd0; BYTE $0x5b; BYTE $0xde; BYTE $0xae\n+\tBYTE $0xac; BYTE $0xa3; BYTE $0xa5; BYTE $0xb7\n+\tBYTE $0xa9; BYTE $0xa7; BYTE $0xb6; BYTE $0xbc\n+\tBYTE $0xbd; BYTE $0xbe; BYTE $0xdd; BYTE $0xa8\n+\tBYTE $0xaf; BYTE $0x5d; BYTE $0xb4; BYTE $0xd7\n+\tBYTE $0x7b; BYTE $0x41; BYTE $0x42; BYTE $0x43\n+\tBYTE $0x44; BYTE $0x45; BYTE $0x46; BYTE $0x47\n+\tBYTE $0x48; BYTE $0x49; BYTE $0xad; BYTE $0xf4\n+\tBYTE $0xf6; BYTE $0xf2; BYTE $0xf3; BYTE $0xf5\n+\tBYTE $0x7d; BYTE $0x4a; BYTE $0x4b; BYTE $0x4c\n+\tBYTE $0x4d; BYTE $0x4e; BYTE $0x4f; BYTE $0x50\n+\tBYTE $0x51; BYTE $0x52; BYTE $0xb9; BYTE $0xfb\n+\tBYTE $0xfc; BYTE $0xf9; BYTE $0xfa; BYTE $0xff\n+\tBYTE $0x5c; BYTE $0xf7; BYTE $0x53; BYTE $0x54\n+\tBYTE $0x55; BYTE $0x56; BYTE $0x57; BYTE $0x58\n+\tBYTE $0x59; BYTE $0x5a; BYTE $0xb2; BYTE $0xd4\n+\tBYTE $0xd6; BYTE $0xd2; BYTE $0xd3; BYTE $0xd5\n+\tBYTE $0x30; BYTE $0x31; BYTE $0x32; BYTE $0x33\n+\tBYTE $0x34; BYTE $0x35; BYTE $0x36; BYTE $0x37\n+\tBYTE $0x38; BYTE $0x39; BYTE $0xb3; BYTE $0xdb\n+\tBYTE $0xdc; BYTE $0xd9; BYTE $0xda; BYTE $0x9f\n+\n+retry:\n+\tWORD $0xB9931022 // TROO 2,2,b'0001'\n+\tBVS  retry\n+\tRET"
    },
    {
      "sha": "7753fddea8174f8269316188817c30abbe7bc253",
      "filename": "backend/vendor/golang.org/x/sys/unix/epoll_zos.go",
      "status": "removed",
      "additions": 0,
      "deletions": 220,
      "changes": 220,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fepoll_zos.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fepoll_zos.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fepoll_zos.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,220 +0,0 @@\n-// Copyright 2020 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-//go:build zos && s390x\n-\n-package unix\n-\n-import (\n-\t\"sync\"\n-)\n-\n-// This file simulates epoll on z/OS using poll.\n-\n-// Analogous to epoll_event on Linux.\n-// TODO(neeilan): Pad is because the Linux kernel expects a 96-bit struct. We never pass this to the kernel; remove?\n-type EpollEvent struct {\n-\tEvents uint32\n-\tFd     int32\n-\tPad    int32\n-}\n-\n-const (\n-\tEPOLLERR      = 0x8\n-\tEPOLLHUP      = 0x10\n-\tEPOLLIN       = 0x1\n-\tEPOLLMSG      = 0x400\n-\tEPOLLOUT      = 0x4\n-\tEPOLLPRI      = 0x2\n-\tEPOLLRDBAND   = 0x80\n-\tEPOLLRDNORM   = 0x40\n-\tEPOLLWRBAND   = 0x200\n-\tEPOLLWRNORM   = 0x100\n-\tEPOLL_CTL_ADD = 0x1\n-\tEPOLL_CTL_DEL = 0x2\n-\tEPOLL_CTL_MOD = 0x3\n-\t// The following constants are part of the epoll API, but represent\n-\t// currently unsupported functionality on z/OS.\n-\t// EPOLL_CLOEXEC  = 0x80000\n-\t// EPOLLET        = 0x80000000\n-\t// EPOLLONESHOT   = 0x40000000\n-\t// EPOLLRDHUP     = 0x2000     // Typically used with edge-triggered notis\n-\t// EPOLLEXCLUSIVE = 0x10000000 // Exclusive wake-up mode\n-\t// EPOLLWAKEUP    = 0x20000000 // Relies on Linux's BLOCK_SUSPEND capability\n-)\n-\n-// TODO(neeilan): We can eliminate these epToPoll / pToEpoll calls by using identical mask values for POLL/EPOLL\n-// constants where possible The lower 16 bits of epoll events (uint32) can fit any system poll event (int16).\n-\n-// epToPollEvt converts epoll event field to poll equivalent.\n-// In epoll, Events is a 32-bit field, while poll uses 16 bits.\n-func epToPollEvt(events uint32) int16 {\n-\tvar ep2p = map[uint32]int16{\n-\t\tEPOLLIN:  POLLIN,\n-\t\tEPOLLOUT: POLLOUT,\n-\t\tEPOLLHUP: POLLHUP,\n-\t\tEPOLLPRI: POLLPRI,\n-\t\tEPOLLERR: POLLERR,\n-\t}\n-\n-\tvar pollEvts int16 = 0\n-\tfor epEvt, pEvt := range ep2p {\n-\t\tif (events & epEvt) != 0 {\n-\t\t\tpollEvts |= pEvt\n-\t\t}\n-\t}\n-\n-\treturn pollEvts\n-}\n-\n-// pToEpollEvt converts 16 bit poll event bitfields to 32-bit epoll event fields.\n-func pToEpollEvt(revents int16) uint32 {\n-\tvar p2ep = map[int16]uint32{\n-\t\tPOLLIN:  EPOLLIN,\n-\t\tPOLLOUT: EPOLLOUT,\n-\t\tPOLLHUP: EPOLLHUP,\n-\t\tPOLLPRI: EPOLLPRI,\n-\t\tPOLLERR: EPOLLERR,\n-\t}\n-\n-\tvar epollEvts uint32 = 0\n-\tfor pEvt, epEvt := range p2ep {\n-\t\tif (revents & pEvt) != 0 {\n-\t\t\tepollEvts |= epEvt\n-\t\t}\n-\t}\n-\n-\treturn epollEvts\n-}\n-\n-// Per-process epoll implementation.\n-type epollImpl struct {\n-\tmu       sync.Mutex\n-\tepfd2ep  map[int]*eventPoll\n-\tnextEpfd int\n-}\n-\n-// eventPoll holds a set of file descriptors being watched by the process. A process can have multiple epoll instances.\n-// On Linux, this is an in-kernel data structure accessed through a fd.\n-type eventPoll struct {\n-\tmu  sync.Mutex\n-\tfds map[int]*EpollEvent\n-}\n-\n-// epoll impl for this process.\n-var impl epollImpl = epollImpl{\n-\tepfd2ep:  make(map[int]*eventPoll),\n-\tnextEpfd: 0,\n-}\n-\n-func (e *epollImpl) epollcreate(size int) (epfd int, err error) {\n-\te.mu.Lock()\n-\tdefer e.mu.Unlock()\n-\tepfd = e.nextEpfd\n-\te.nextEpfd++\n-\n-\te.epfd2ep[epfd] = &eventPoll{\n-\t\tfds: make(map[int]*EpollEvent),\n-\t}\n-\treturn epfd, nil\n-}\n-\n-func (e *epollImpl) epollcreate1(flag int) (fd int, err error) {\n-\treturn e.epollcreate(4)\n-}\n-\n-func (e *epollImpl) epollctl(epfd int, op int, fd int, event *EpollEvent) (err error) {\n-\te.mu.Lock()\n-\tdefer e.mu.Unlock()\n-\n-\tep, ok := e.epfd2ep[epfd]\n-\tif !ok {\n-\n-\t\treturn EBADF\n-\t}\n-\n-\tswitch op {\n-\tcase EPOLL_CTL_ADD:\n-\t\t// TODO(neeilan): When we make epfds and fds disjoint, detect epoll\n-\t\t// loops here (instances watching each other) and return ELOOP.\n-\t\tif _, ok := ep.fds[fd]; ok {\n-\t\t\treturn EEXIST\n-\t\t}\n-\t\tep.fds[fd] = event\n-\tcase EPOLL_CTL_MOD:\n-\t\tif _, ok := ep.fds[fd]; !ok {\n-\t\t\treturn ENOENT\n-\t\t}\n-\t\tep.fds[fd] = event\n-\tcase EPOLL_CTL_DEL:\n-\t\tif _, ok := ep.fds[fd]; !ok {\n-\t\t\treturn ENOENT\n-\t\t}\n-\t\tdelete(ep.fds, fd)\n-\n-\t}\n-\treturn nil\n-}\n-\n-// Must be called while holding ep.mu\n-func (ep *eventPoll) getFds() []int {\n-\tfds := make([]int, len(ep.fds))\n-\tfor fd := range ep.fds {\n-\t\tfds = append(fds, fd)\n-\t}\n-\treturn fds\n-}\n-\n-func (e *epollImpl) epollwait(epfd int, events []EpollEvent, msec int) (n int, err error) {\n-\te.mu.Lock() // in [rare] case of concurrent epollcreate + epollwait\n-\tep, ok := e.epfd2ep[epfd]\n-\n-\tif !ok {\n-\t\te.mu.Unlock()\n-\t\treturn 0, EBADF\n-\t}\n-\n-\tpollfds := make([]PollFd, 4)\n-\tfor fd, epollevt := range ep.fds {\n-\t\tpollfds = append(pollfds, PollFd{Fd: int32(fd), Events: epToPollEvt(epollevt.Events)})\n-\t}\n-\te.mu.Unlock()\n-\n-\tn, err = Poll(pollfds, msec)\n-\tif err != nil {\n-\t\treturn n, err\n-\t}\n-\n-\ti := 0\n-\tfor _, pFd := range pollfds {\n-\t\tif pFd.Revents != 0 {\n-\t\t\tevents[i] = EpollEvent{Fd: pFd.Fd, Events: pToEpollEvt(pFd.Revents)}\n-\t\t\ti++\n-\t\t}\n-\n-\t\tif i == n {\n-\t\t\tbreak\n-\t\t}\n-\t}\n-\n-\treturn n, nil\n-}\n-\n-func EpollCreate(size int) (fd int, err error) {\n-\treturn impl.epollcreate(size)\n-}\n-\n-func EpollCreate1(flag int) (fd int, err error) {\n-\treturn impl.epollcreate1(flag)\n-}\n-\n-func EpollCtl(epfd int, op int, fd int, event *EpollEvent) (err error) {\n-\treturn impl.epollctl(epfd, op, fd, event)\n-}\n-\n-// Because EpollWait mutates events, the caller is expected to coordinate\n-// concurrent access if calling with the same epfd from multiple goroutines.\n-func EpollWait(epfd int, events []EpollEvent, msec int) (n int, err error) {\n-\treturn impl.epollwait(epfd, events, msec)\n-}"
    },
    {
      "sha": "c8bde601e772336736ec494940f5fc326c41dd2d",
      "filename": "backend/vendor/golang.org/x/sys/unix/fstatfs_zos.go",
      "status": "removed",
      "additions": 0,
      "deletions": 163,
      "changes": 163,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Ffstatfs_zos.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Ffstatfs_zos.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Ffstatfs_zos.go?ref=d2027f52415a58c0ff7fada15a28d31661170015",
      "patch": "@@ -1,163 +0,0 @@\n-// Copyright 2020 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-//go:build zos && s390x\n-\n-package unix\n-\n-import (\n-\t\"unsafe\"\n-)\n-\n-// This file simulates fstatfs on z/OS using fstatvfs and w_getmntent.\n-\n-func Fstatfs(fd int, stat *Statfs_t) (err error) {\n-\tvar stat_v Statvfs_t\n-\terr = Fstatvfs(fd, &stat_v)\n-\tif err == nil {\n-\t\t// populate stat\n-\t\tstat.Type = 0\n-\t\tstat.Bsize = stat_v.Bsize\n-\t\tstat.Blocks = stat_v.Blocks\n-\t\tstat.Bfree = stat_v.Bfree\n-\t\tstat.Bavail = stat_v.Bavail\n-\t\tstat.Files = stat_v.Files\n-\t\tstat.Ffree = stat_v.Ffree\n-\t\tstat.Fsid = stat_v.Fsid\n-\t\tstat.Namelen = stat_v.Namemax\n-\t\tstat.Frsize = stat_v.Frsize\n-\t\tstat.Flags = stat_v.Flag\n-\t\tfor passn := 0; passn < 5; passn++ {\n-\t\t\tswitch passn {\n-\t\t\tcase 0:\n-\t\t\t\terr = tryGetmntent64(stat)\n-\t\t\t\tbreak\n-\t\t\tcase 1:\n-\t\t\t\terr = tryGetmntent128(stat)\n-\t\t\t\tbreak\n-\t\t\tcase 2:\n-\t\t\t\terr = tryGetmntent256(stat)\n-\t\t\t\tbreak\n-\t\t\tcase 3:\n-\t\t\t\terr = tryGetmntent512(stat)\n-\t\t\t\tbreak\n-\t\t\tcase 4:\n-\t\t\t\terr = tryGetmntent1024(stat)\n-\t\t\t\tbreak\n-\t\t\tdefault:\n-\t\t\t\tbreak\n-\t\t\t}\n-\t\t\t//proceed to return if: err is nil (found), err is nonnil but not ERANGE (another error occurred)\n-\t\t\tif err == nil || err != nil && err != ERANGE {\n-\t\t\t\tbreak\n-\t\t\t}\n-\t\t}\n-\t}\n-\treturn err\n-}\n-\n-func tryGetmntent64(stat *Statfs_t) (err error) {\n-\tvar mnt_ent_buffer struct {\n-\t\theader       W_Mnth\n-\t\tfilesys_info [64]W_Mntent\n-\t}\n-\tvar buffer_size int = int(unsafe.Sizeof(mnt_ent_buffer))\n-\tfs_count, err := W_Getmntent((*byte)(unsafe.Pointer(&mnt_ent_buffer)), buffer_size)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\terr = ERANGE //return ERANGE if no match is found in this batch\n-\tfor i := 0; i < fs_count; i++ {\n-\t\tif stat.Fsid == uint64(mnt_ent_buffer.filesys_info[i].Dev) {\n-\t\t\tstat.Type = uint32(mnt_ent_buffer.filesys_info[i].Fstname[0])\n-\t\t\terr = nil\n-\t\t\tbreak\n-\t\t}\n-\t}\n-\treturn err\n-}\n-\n-func tryGetmntent128(stat *Statfs_t) (err error) {\n-\tvar mnt_ent_buffer struct {\n-\t\theader       W_Mnth\n-\t\tfilesys_info [128]W_Mntent\n-\t}\n-\tvar buffer_size int = int(unsafe.Sizeof(mnt_ent_buffer))\n-\tfs_count, err := W_Getmntent((*byte)(unsafe.Pointer(&mnt_ent_buffer)), buffer_size)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\terr = ERANGE //return ERANGE if no match is found in this batch\n-\tfor i := 0; i < fs_count; i++ {\n-\t\tif stat.Fsid == uint64(mnt_ent_buffer.filesys_info[i].Dev) {\n-\t\t\tstat.Type = uint32(mnt_ent_buffer.filesys_info[i].Fstname[0])\n-\t\t\terr = nil\n-\t\t\tbreak\n-\t\t}\n-\t}\n-\treturn err\n-}\n-\n-func tryGetmntent256(stat *Statfs_t) (err error) {\n-\tvar mnt_ent_buffer struct {\n-\t\theader       W_Mnth\n-\t\tfilesys_info [256]W_Mntent\n-\t}\n-\tvar buffer_size int = int(unsafe.Sizeof(mnt_ent_buffer))\n-\tfs_count, err := W_Getmntent((*byte)(unsafe.Pointer(&mnt_ent_buffer)), buffer_size)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\terr = ERANGE //return ERANGE if no match is found in this batch\n-\tfor i := 0; i < fs_count; i++ {\n-\t\tif stat.Fsid == uint64(mnt_ent_buffer.filesys_info[i].Dev) {\n-\t\t\tstat.Type = uint32(mnt_ent_buffer.filesys_info[i].Fstname[0])\n-\t\t\terr = nil\n-\t\t\tbreak\n-\t\t}\n-\t}\n-\treturn err\n-}\n-\n-func tryGetmntent512(stat *Statfs_t) (err error) {\n-\tvar mnt_ent_buffer struct {\n-\t\theader       W_Mnth\n-\t\tfilesys_info [512]W_Mntent\n-\t}\n-\tvar buffer_size int = int(unsafe.Sizeof(mnt_ent_buffer))\n-\tfs_count, err := W_Getmntent((*byte)(unsafe.Pointer(&mnt_ent_buffer)), buffer_size)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\terr = ERANGE //return ERANGE if no match is found in this batch\n-\tfor i := 0; i < fs_count; i++ {\n-\t\tif stat.Fsid == uint64(mnt_ent_buffer.filesys_info[i].Dev) {\n-\t\t\tstat.Type = uint32(mnt_ent_buffer.filesys_info[i].Fstname[0])\n-\t\t\terr = nil\n-\t\t\tbreak\n-\t\t}\n-\t}\n-\treturn err\n-}\n-\n-func tryGetmntent1024(stat *Statfs_t) (err error) {\n-\tvar mnt_ent_buffer struct {\n-\t\theader       W_Mnth\n-\t\tfilesys_info [1024]W_Mntent\n-\t}\n-\tvar buffer_size int = int(unsafe.Sizeof(mnt_ent_buffer))\n-\tfs_count, err := W_Getmntent((*byte)(unsafe.Pointer(&mnt_ent_buffer)), buffer_size)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\terr = ERANGE //return ERANGE if no match is found in this batch\n-\tfor i := 0; i < fs_count; i++ {\n-\t\tif stat.Fsid == uint64(mnt_ent_buffer.filesys_info[i].Dev) {\n-\t\t\tstat.Type = uint32(mnt_ent_buffer.filesys_info[i].Fstname[0])\n-\t\t\terr = nil\n-\t\t\tbreak\n-\t\t}\n-\t}\n-\treturn err\n-}"
    },
    {
      "sha": "4ed2e488b6167bbec52318da08626ec58e31c868",
      "filename": "backend/vendor/golang.org/x/sys/unix/mkerrors.sh",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkerrors.sh",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkerrors.sh",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkerrors.sh?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -263,6 +263,7 @@ struct ltchars {\n #include <linux/sched.h>\n #include <linux/seccomp.h>\n #include <linux/serial.h>\n+#include <linux/sock_diag.h>\n #include <linux/sockios.h>\n #include <linux/taskstats.h>\n #include <linux/tipc.h>\n@@ -549,6 +550,7 @@ ccflags=\"$@\"\n \t\t$2 !~ \"NLA_TYPE_MASK\" &&\n \t\t$2 !~ /^RTC_VL_(ACCURACY|BACKUP|DATA)/ &&\n \t\t$2 ~ /^(NETLINK|NLM|NLMSG|NLA|IFA|IFAN|RT|RTC|RTCF|RTN|RTPROT|RTNH|ARPHRD|ETH_P|NETNSA)_/ ||\n+\t\t$2 ~ /^SOCK_|SK_DIAG_|SKNLGRP_$/ ||\n \t\t$2 ~ /^FIORDCHK$/ ||\n \t\t$2 ~ /^SIOC/ ||\n \t\t$2 ~ /^TIOC/ ||"
    },
    {
      "sha": "3a5e776f895aae7aa0cf30d25e515705080090b6",
      "filename": "backend/vendor/golang.org/x/sys/unix/mremap.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmremap.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmremap.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmremap.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -50,3 +50,8 @@ func (m *mremapMmapper) Mremap(oldData []byte, newLength int, flags int) (data [\n func Mremap(oldData []byte, newLength int, flags int) (data []byte, err error) {\n \treturn mapper.Mremap(oldData, newLength, flags)\n }\n+\n+func MremapPtr(oldAddr unsafe.Pointer, oldSize uintptr, newAddr unsafe.Pointer, newSize uintptr, flags int) (ret unsafe.Pointer, err error) {\n+\txaddr, err := mapper.mremap(uintptr(oldAddr), oldSize, newSize, flags, uintptr(newAddr))\n+\treturn unsafe.Pointer(xaddr), err\n+}"
    },
    {
      "sha": "0482408d7c6c1b87d40d63ec4beae305b9c804ca",
      "filename": "backend/vendor/golang.org/x/sys/unix/pagesize_unix.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fpagesize_unix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fpagesize_unix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fpagesize_unix.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build aix || darwin || dragonfly || freebsd || linux || netbsd || openbsd || solaris\n+//go:build aix || darwin || dragonfly || freebsd || linux || netbsd || openbsd || solaris || zos\n \n // For Unix, get the pagesize from the runtime.\n "
    },
    {
      "sha": "b903c00604b99ca03e350d62447e91aa7f3d4606",
      "filename": "backend/vendor/golang.org/x/sys/unix/readdirent_getdirentries.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Freaddirent_getdirentries.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Freaddirent_getdirentries.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Freaddirent_getdirentries.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build darwin\n+//go:build darwin || zos\n \n package unix\n "
    },
    {
      "sha": "3e53dbc0286d094111e40065e21059dc543fd00e",
      "filename": "backend/vendor/golang.org/x/sys/unix/sockcmsg_zos.go",
      "status": "added",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsockcmsg_zos.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsockcmsg_zos.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsockcmsg_zos.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,58 @@\n+// Copyright 2024 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Socket control messages\n+\n+package unix\n+\n+import \"unsafe\"\n+\n+// UnixCredentials encodes credentials into a socket control message\n+// for sending to another process. This can be used for\n+// authentication.\n+func UnixCredentials(ucred *Ucred) []byte {\n+\tb := make([]byte, CmsgSpace(SizeofUcred))\n+\th := (*Cmsghdr)(unsafe.Pointer(&b[0]))\n+\th.Level = SOL_SOCKET\n+\th.Type = SCM_CREDENTIALS\n+\th.SetLen(CmsgLen(SizeofUcred))\n+\t*(*Ucred)(h.data(0)) = *ucred\n+\treturn b\n+}\n+\n+// ParseUnixCredentials decodes a socket control message that contains\n+// credentials in a Ucred structure. To receive such a message, the\n+// SO_PASSCRED option must be enabled on the socket.\n+func ParseUnixCredentials(m *SocketControlMessage) (*Ucred, error) {\n+\tif m.Header.Level != SOL_SOCKET {\n+\t\treturn nil, EINVAL\n+\t}\n+\tif m.Header.Type != SCM_CREDENTIALS {\n+\t\treturn nil, EINVAL\n+\t}\n+\tucred := *(*Ucred)(unsafe.Pointer(&m.Data[0]))\n+\treturn &ucred, nil\n+}\n+\n+// PktInfo4 encodes Inet4Pktinfo into a socket control message of type IP_PKTINFO.\n+func PktInfo4(info *Inet4Pktinfo) []byte {\n+\tb := make([]byte, CmsgSpace(SizeofInet4Pktinfo))\n+\th := (*Cmsghdr)(unsafe.Pointer(&b[0]))\n+\th.Level = SOL_IP\n+\th.Type = IP_PKTINFO\n+\th.SetLen(CmsgLen(SizeofInet4Pktinfo))\n+\t*(*Inet4Pktinfo)(h.data(0)) = *info\n+\treturn b\n+}\n+\n+// PktInfo6 encodes Inet6Pktinfo into a socket control message of type IPV6_PKTINFO.\n+func PktInfo6(info *Inet6Pktinfo) []byte {\n+\tb := make([]byte, CmsgSpace(SizeofInet6Pktinfo))\n+\th := (*Cmsghdr)(unsafe.Pointer(&b[0]))\n+\th.Level = SOL_IPV6\n+\th.Type = IPV6_PKTINFO\n+\th.SetLen(CmsgLen(SizeofInet6Pktinfo))\n+\t*(*Inet6Pktinfo)(h.data(0)) = *info\n+\treturn b\n+}"
    },
    {
      "sha": "3c4f33cb6a8022b36872915657d30ea552aa3540",
      "filename": "backend/vendor/golang.org/x/sys/unix/symaddr_zos_s390x.s",
      "status": "added",
      "additions": 75,
      "deletions": 0,
      "changes": 75,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsymaddr_zos_s390x.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsymaddr_zos_s390x.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsymaddr_zos_s390x.s?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,75 @@\n+// Copyright 2024 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build zos && s390x && gc\n+\n+#include \"textflag.h\"\n+\n+//  provide the address of function variable to be fixed up.\n+\n+TEXT ·getPipe2Addr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Pipe2(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+TEXT ·get_FlockAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Flock(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+TEXT ·get_GetxattrAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Getxattr(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+TEXT ·get_NanosleepAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Nanosleep(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+TEXT ·get_SetxattrAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Setxattr(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+TEXT ·get_Wait4Addr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Wait4(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+TEXT ·get_MountAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Mount(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+TEXT ·get_UnmountAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Unmount(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+TEXT ·get_UtimesNanoAtAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·UtimesNanoAt(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+TEXT ·get_UtimesNanoAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·UtimesNano(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+TEXT ·get_MkfifoatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Mkfifoat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+TEXT ·get_ChtagAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Chtag(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+TEXT ·get_ReadlinkatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Readlinkat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\t"
    },
    {
      "sha": "4cc7b005967ebd06f8078ec3d196c042edef1f94",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_darwin.go",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_darwin.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -542,6 +542,18 @@ func SysctlKinfoProcSlice(name string, args ...int) ([]KinfoProc, error) {\n \t}\n }\n \n+//sys\tpthread_chdir_np(path string) (err error)\n+\n+func PthreadChdir(path string) (err error) {\n+\treturn pthread_chdir_np(path)\n+}\n+\n+//sys\tpthread_fchdir_np(fd int) (err error)\n+\n+func PthreadFchdir(fd int) (err error) {\n+\treturn pthread_fchdir_np(fd)\n+}\n+\n //sys\tsendfile(infd int, outfd int, offset int64, len *int64, hdtr unsafe.Pointer, flags int) (err error)\n \n //sys\tshmat(id int, addr uintptr, flag int) (ret uintptr, err error)"
    },
    {
      "sha": "4e92e5aa40628b3a913cbf6f55f9429ef9e7b08e",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_unix.go",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_unix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_unix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_unix.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -154,6 +154,15 @@ func Munmap(b []byte) (err error) {\n \treturn mapper.Munmap(b)\n }\n \n+func MmapPtr(fd int, offset int64, addr unsafe.Pointer, length uintptr, prot int, flags int) (ret unsafe.Pointer, err error) {\n+\txaddr, err := mapper.mmap(uintptr(addr), length, prot, flags, fd, offset)\n+\treturn unsafe.Pointer(xaddr), err\n+}\n+\n+func MunmapPtr(addr unsafe.Pointer, length uintptr) (err error) {\n+\treturn mapper.munmap(uintptr(addr), length)\n+}\n+\n func Read(fd int, p []byte) (n int, err error) {\n \tn, err = read(fd, p)\n \tif raceenabled {"
    },
    {
      "sha": "312ae6ac1d21abb1b847d1036e21f20d877876b2",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
      "status": "modified",
      "additions": 1319,
      "deletions": 188,
      "changes": 1507,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_zos_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_zos_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_zos_s390x.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -4,11 +4,21 @@\n \n //go:build zos && s390x\n \n+// Many of the following syscalls are not available on all versions of z/OS.\n+// Some missing calls have legacy implementations/simulations but others\n+// will be missing completely. To achieve consistent failing behaviour on\n+// legacy systems, we first test the function pointer via a safeloading\n+// mechanism to see if the function exists on a given system. Then execution\n+// is branched to either continue the function call, or return an error.\n+\n package unix\n \n import (\n \t\"bytes\"\n \t\"fmt\"\n+\t\"os\"\n+\t\"reflect\"\n+\t\"regexp\"\n \t\"runtime\"\n \t\"sort\"\n \t\"strings\"\n@@ -17,17 +27,205 @@ import (\n \t\"unsafe\"\n )\n \n+//go:noescape\n+func initZosLibVec()\n+\n+//go:noescape\n+func GetZosLibVec() uintptr\n+\n+func init() {\n+\tinitZosLibVec()\n+\tr0, _, _ := CallLeFuncWithPtrReturn(GetZosLibVec()+SYS_____GETENV_A<<4, uintptr(unsafe.Pointer(&([]byte(\"__ZOS_XSYSTRACE\\x00\"))[0])))\n+\tif r0 != 0 {\n+\t\tn, _, _ := CallLeFuncWithPtrReturn(GetZosLibVec()+SYS___ATOI_A<<4, r0)\n+\t\tZosTraceLevel = int(n)\n+\t\tr0, _, _ := CallLeFuncWithPtrReturn(GetZosLibVec()+SYS_____GETENV_A<<4, uintptr(unsafe.Pointer(&([]byte(\"__ZOS_XSYSTRACEFD\\x00\"))[0])))\n+\t\tif r0 != 0 {\n+\t\t\tfd, _, _ := CallLeFuncWithPtrReturn(GetZosLibVec()+SYS___ATOI_A<<4, r0)\n+\t\t\tf := os.NewFile(fd, \"zostracefile\")\n+\t\t\tif f != nil {\n+\t\t\t\tZosTracefile = f\n+\t\t\t}\n+\t\t}\n+\n+\t}\n+}\n+\n+//go:noescape\n+func CallLeFuncWithErr(funcdesc uintptr, parms ...uintptr) (ret, errno2 uintptr, err Errno)\n+\n+//go:noescape\n+func CallLeFuncWithPtrReturn(funcdesc uintptr, parms ...uintptr) (ret, errno2 uintptr, err Errno)\n+\n+// -------------------------------\n+// pointer validity test\n+// good pointer returns 0\n+// bad pointer returns 1\n+//\n+//go:nosplit\n+func ptrtest(uintptr) uint64\n+\n+// Load memory at ptr location with error handling if the location is invalid\n+//\n+//go:noescape\n+func safeload(ptr uintptr) (value uintptr, error uintptr)\n+\n const (\n-\tO_CLOEXEC = 0       // Dummy value (not supported).\n-\tAF_LOCAL  = AF_UNIX // AF_LOCAL is an alias for AF_UNIX\n+\tentrypointLocationOffset = 8 // From function descriptor\n+\n+\txplinkEyecatcher   = 0x00c300c500c500f1 // \".C.E.E.1\"\n+\teyecatcherOffset   = 16                 // From function entrypoint (negative)\n+\tppa1LocationOffset = 8                  // From function entrypoint (negative)\n+\n+\tnameLenOffset = 0x14 // From PPA1 start\n+\tnameOffset    = 0x16 // From PPA1 start\n )\n \n-func syscall_syscall(trap, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno)\n-func syscall_rawsyscall(trap, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno)\n-func syscall_syscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)\n-func syscall_rawsyscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)\n-func syscall_syscall9(trap, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno)\n-func syscall_rawsyscall9(trap, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno)\n+func getPpaOffset(funcptr uintptr) int64 {\n+\tentrypoint, err := safeload(funcptr + entrypointLocationOffset)\n+\tif err != 0 {\n+\t\treturn -1\n+\t}\n+\n+\t// XPLink functions have \".C.E.E.1\" as the first 8 bytes (EBCDIC)\n+\tval, err := safeload(entrypoint - eyecatcherOffset)\n+\tif err != 0 {\n+\t\treturn -1\n+\t}\n+\tif val != xplinkEyecatcher {\n+\t\treturn -1\n+\t}\n+\n+\tppaoff, err := safeload(entrypoint - ppa1LocationOffset)\n+\tif err != 0 {\n+\t\treturn -1\n+\t}\n+\n+\tppaoff >>= 32\n+\treturn int64(ppaoff)\n+}\n+\n+//-------------------------------\n+// function descriptor pointer validity test\n+// good pointer returns 0\n+// bad pointer returns 1\n+\n+// TODO: currently mksyscall_zos_s390x.go generate empty string for funcName\n+// have correct funcName pass to the funcptrtest function\n+func funcptrtest(funcptr uintptr, funcName string) uint64 {\n+\tentrypoint, err := safeload(funcptr + entrypointLocationOffset)\n+\tif err != 0 {\n+\t\treturn 1\n+\t}\n+\n+\tppaoff := getPpaOffset(funcptr)\n+\tif ppaoff == -1 {\n+\t\treturn 1\n+\t}\n+\n+\t// PPA1 offset value is from the start of the entire function block, not the entrypoint\n+\tppa1 := (entrypoint - eyecatcherOffset) + uintptr(ppaoff)\n+\n+\tnameLen, err := safeload(ppa1 + nameLenOffset)\n+\tif err != 0 {\n+\t\treturn 1\n+\t}\n+\n+\tnameLen >>= 48\n+\tif nameLen > 128 {\n+\t\treturn 1\n+\t}\n+\n+\t// no function name input to argument end here\n+\tif funcName == \"\" {\n+\t\treturn 0\n+\t}\n+\n+\tvar funcname [128]byte\n+\tfor i := 0; i < int(nameLen); i += 8 {\n+\t\tv, err := safeload(ppa1 + nameOffset + uintptr(i))\n+\t\tif err != 0 {\n+\t\t\treturn 1\n+\t\t}\n+\t\tfuncname[i] = byte(v >> 56)\n+\t\tfuncname[i+1] = byte(v >> 48)\n+\t\tfuncname[i+2] = byte(v >> 40)\n+\t\tfuncname[i+3] = byte(v >> 32)\n+\t\tfuncname[i+4] = byte(v >> 24)\n+\t\tfuncname[i+5] = byte(v >> 16)\n+\t\tfuncname[i+6] = byte(v >> 8)\n+\t\tfuncname[i+7] = byte(v)\n+\t}\n+\n+\truntime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS___E2A_L<<4, // __e2a_l\n+\t\t[]uintptr{uintptr(unsafe.Pointer(&funcname[0])), nameLen})\n+\n+\tname := string(funcname[:nameLen])\n+\tif name != funcName {\n+\t\treturn 1\n+\t}\n+\n+\treturn 0\n+}\n+\n+// For detection of capabilities on a system.\n+// Is function descriptor f a valid function?\n+func isValidLeFunc(f uintptr) error {\n+\tret := funcptrtest(f, \"\")\n+\tif ret != 0 {\n+\t\treturn fmt.Errorf(\"Bad pointer, not an LE function \")\n+\t}\n+\treturn nil\n+}\n+\n+// Retrieve function name from descriptor\n+func getLeFuncName(f uintptr) (string, error) {\n+\t// assume it has been checked, only check ppa1 validity here\n+\tentry := ((*[2]uintptr)(unsafe.Pointer(f)))[1]\n+\tpreamp := ((*[4]uint32)(unsafe.Pointer(entry - eyecatcherOffset)))\n+\n+\toffsetPpa1 := preamp[2]\n+\tif offsetPpa1 > 0x0ffff {\n+\t\treturn \"\", fmt.Errorf(\"PPA1 offset seems too big 0x%x\\n\", offsetPpa1)\n+\t}\n+\n+\tppa1 := uintptr(unsafe.Pointer(preamp)) + uintptr(offsetPpa1)\n+\tres := ptrtest(ppa1)\n+\tif res != 0 {\n+\t\treturn \"\", fmt.Errorf(\"PPA1 address not valid\")\n+\t}\n+\n+\tsize := *(*uint16)(unsafe.Pointer(ppa1 + nameLenOffset))\n+\tif size > 128 {\n+\t\treturn \"\", fmt.Errorf(\"Function name seems too long, length=%d\\n\", size)\n+\t}\n+\n+\tvar name [128]byte\n+\tfuncname := (*[128]byte)(unsafe.Pointer(ppa1 + nameOffset))\n+\tcopy(name[0:size], funcname[0:size])\n+\n+\truntime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS___E2A_L<<4, // __e2a_l\n+\t\t[]uintptr{uintptr(unsafe.Pointer(&name[0])), uintptr(size)})\n+\n+\treturn string(name[:size]), nil\n+}\n+\n+// Check z/OS version\n+func zosLeVersion() (version, release uint32) {\n+\tp1 := (*(*uintptr)(unsafe.Pointer(uintptr(1208)))) >> 32\n+\tp1 = *(*uintptr)(unsafe.Pointer(uintptr(p1 + 88)))\n+\tp1 = *(*uintptr)(unsafe.Pointer(uintptr(p1 + 8)))\n+\tp1 = *(*uintptr)(unsafe.Pointer(uintptr(p1 + 984)))\n+\tvrm := *(*uint32)(unsafe.Pointer(p1 + 80))\n+\tversion = (vrm & 0x00ff0000) >> 16\n+\trelease = (vrm & 0x0000ff00) >> 8\n+\treturn\n+}\n+\n+// returns a zos C FILE * for stdio fd 0, 1, 2\n+func ZosStdioFilep(fd int32) uintptr {\n+\treturn uintptr(*(*uint64)(unsafe.Pointer(uintptr(*(*uint64)(unsafe.Pointer(uintptr(*(*uint64)(unsafe.Pointer(uintptr(uint64(*(*uint32)(unsafe.Pointer(uintptr(1208)))) + 80))) + uint64((fd+2)<<3))))))))\n+}\n \n func copyStat(stat *Stat_t, statLE *Stat_LE_t) {\n \tstat.Dev = uint64(statLE.Dev)\n@@ -65,6 +263,21 @@ func (d *Dirent) NameString() string {\n \t}\n }\n \n+func DecodeData(dest []byte, sz int, val uint64) {\n+\tfor i := 0; i < sz; i++ {\n+\t\tdest[sz-1-i] = byte((val >> (uint64(i * 8))) & 0xff)\n+\t}\n+}\n+\n+func EncodeData(data []byte) uint64 {\n+\tvar value uint64\n+\tsz := len(data)\n+\tfor i := 0; i < sz; i++ {\n+\t\tvalue |= uint64(data[i]) << uint64(((sz - i - 1) * 8))\n+\t}\n+\treturn value\n+}\n+\n func (sa *SockaddrInet4) sockaddr() (unsafe.Pointer, _Socklen, error) {\n \tif sa.Port < 0 || sa.Port > 0xFFFF {\n \t\treturn nil, 0, EINVAL\n@@ -74,7 +287,9 @@ func (sa *SockaddrInet4) sockaddr() (unsafe.Pointer, _Socklen, error) {\n \tp := (*[2]byte)(unsafe.Pointer(&sa.raw.Port))\n \tp[0] = byte(sa.Port >> 8)\n \tp[1] = byte(sa.Port)\n-\tsa.raw.Addr = sa.Addr\n+\tfor i := 0; i < len(sa.Addr); i++ {\n+\t\tsa.raw.Addr[i] = sa.Addr[i]\n+\t}\n \treturn unsafe.Pointer(&sa.raw), _Socklen(sa.raw.Len), nil\n }\n \n@@ -88,7 +303,9 @@ func (sa *SockaddrInet6) sockaddr() (unsafe.Pointer, _Socklen, error) {\n \tp[0] = byte(sa.Port >> 8)\n \tp[1] = byte(sa.Port)\n \tsa.raw.Scope_id = sa.ZoneId\n-\tsa.raw.Addr = sa.Addr\n+\tfor i := 0; i < len(sa.Addr); i++ {\n+\t\tsa.raw.Addr[i] = sa.Addr[i]\n+\t}\n \treturn unsafe.Pointer(&sa.raw), _Socklen(sa.raw.Len), nil\n }\n \n@@ -146,7 +363,9 @@ func anyToSockaddr(_ int, rsa *RawSockaddrAny) (Sockaddr, error) {\n \t\tsa := new(SockaddrInet4)\n \t\tp := (*[2]byte)(unsafe.Pointer(&pp.Port))\n \t\tsa.Port = int(p[0])<<8 + int(p[1])\n-\t\tsa.Addr = pp.Addr\n+\t\tfor i := 0; i < len(sa.Addr); i++ {\n+\t\t\tsa.Addr[i] = pp.Addr[i]\n+\t\t}\n \t\treturn sa, nil\n \n \tcase AF_INET6:\n@@ -155,7 +374,9 @@ func anyToSockaddr(_ int, rsa *RawSockaddrAny) (Sockaddr, error) {\n \t\tp := (*[2]byte)(unsafe.Pointer(&pp.Port))\n \t\tsa.Port = int(p[0])<<8 + int(p[1])\n \t\tsa.ZoneId = pp.Scope_id\n-\t\tsa.Addr = pp.Addr\n+\t\tfor i := 0; i < len(sa.Addr); i++ {\n+\t\t\tsa.Addr[i] = pp.Addr[i]\n+\t\t}\n \t\treturn sa, nil\n \t}\n \treturn nil, EAFNOSUPPORT\n@@ -177,6 +398,43 @@ func Accept(fd int) (nfd int, sa Sockaddr, err error) {\n \treturn\n }\n \n+func Accept4(fd int, flags int) (nfd int, sa Sockaddr, err error) {\n+\tvar rsa RawSockaddrAny\n+\tvar len _Socklen = SizeofSockaddrAny\n+\tnfd, err = accept4(fd, &rsa, &len, flags)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tif len > SizeofSockaddrAny {\n+\t\tpanic(\"RawSockaddrAny too small\")\n+\t}\n+\t// TODO(neeilan): Remove 0 in call\n+\tsa, err = anyToSockaddr(0, &rsa)\n+\tif err != nil {\n+\t\tClose(nfd)\n+\t\tnfd = 0\n+\t}\n+\treturn\n+}\n+\n+func Ctermid() (tty string, err error) {\n+\tvar termdev [1025]byte\n+\truntime.EnterSyscall()\n+\tr0, err2, err1 := CallLeFuncWithPtrReturn(GetZosLibVec()+SYS___CTERMID_A<<4, uintptr(unsafe.Pointer(&termdev[0])))\n+\truntime.ExitSyscall()\n+\tif r0 == 0 {\n+\t\treturn \"\", fmt.Errorf(\"%s (errno2=0x%x)\\n\", err1.Error(), err2)\n+\t}\n+\ts := string(termdev[:])\n+\tidx := strings.Index(s, string(rune(0)))\n+\tif idx == -1 {\n+\t\ttty = s\n+\t} else {\n+\t\ttty = s[:idx]\n+\t}\n+\treturn\n+}\n+\n func (iov *Iovec) SetLen(length int) {\n \tiov.Len = uint64(length)\n }\n@@ -190,10 +448,16 @@ func (cmsg *Cmsghdr) SetLen(length int) {\n }\n \n //sys   fcntl(fd int, cmd int, arg int) (val int, err error)\n+//sys   Flistxattr(fd int, dest []byte) (sz int, err error) = SYS___FLISTXATTR_A\n+//sys   Fremovexattr(fd int, attr string) (err error) = SYS___FREMOVEXATTR_A\n //sys\tread(fd int, p []byte) (n int, err error)\n //sys\twrite(fd int, p []byte) (n int, err error)\n \n+//sys   Fgetxattr(fd int, attr string, dest []byte) (sz int, err error) = SYS___FGETXATTR_A\n+//sys   Fsetxattr(fd int, attr string, data []byte, flag int) (err error) = SYS___FSETXATTR_A\n+\n //sys\taccept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) = SYS___ACCEPT_A\n+//sys\taccept4(s int, rsa *RawSockaddrAny, addrlen *_Socklen, flags int) (fd int, err error) = SYS___ACCEPT4_A\n //sys\tbind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) = SYS___BIND_A\n //sys\tconnect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) = SYS___CONNECT_A\n //sysnb\tgetgroups(n int, list *_Gid_t) (nn int, err error)\n@@ -204,6 +468,7 @@ func (cmsg *Cmsghdr) SetLen(length int) {\n //sysnb\tsocketpair(domain int, typ int, proto int, fd *[2]int32) (err error)\n //sysnb\tgetpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) = SYS___GETPEERNAME_A\n //sysnb\tgetsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) = SYS___GETSOCKNAME_A\n+//sys   Removexattr(path string, attr string) (err error) = SYS___REMOVEXATTR_A\n //sys\trecvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) = SYS___RECVFROM_A\n //sys\tsendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) = SYS___SENDTO_A\n //sys\trecvmsg(s int, msg *Msghdr, flags int) (n int, err error) = SYS___RECVMSG_A\n@@ -212,6 +477,10 @@ func (cmsg *Cmsghdr) SetLen(length int) {\n //sys   munmap(addr uintptr, length uintptr) (err error) = SYS_MUNMAP\n //sys   ioctl(fd int, req int, arg uintptr) (err error) = SYS_IOCTL\n //sys   ioctlPtr(fd int, req int, arg unsafe.Pointer) (err error) = SYS_IOCTL\n+//sys\tshmat(id int, addr uintptr, flag int) (ret uintptr, err error) = SYS_SHMAT\n+//sys\tshmctl(id int, cmd int, buf *SysvShmDesc) (result int, err error) = SYS_SHMCTL64\n+//sys\tshmdt(addr uintptr) (err error) = SYS_SHMDT\n+//sys\tshmget(key int, size int, flag int) (id int, err error) = SYS_SHMGET\n \n //sys   Access(path string, mode uint32) (err error) = SYS___ACCESS_A\n //sys   Chdir(path string) (err error) = SYS___CHDIR_A\n@@ -220,14 +489,31 @@ func (cmsg *Cmsghdr) SetLen(length int) {\n //sys   Creat(path string, mode uint32) (fd int, err error) = SYS___CREAT_A\n //sys\tDup(oldfd int) (fd int, err error)\n //sys\tDup2(oldfd int, newfd int) (err error)\n+//sys\tDup3(oldfd int, newfd int, flags int) (err error) = SYS_DUP3\n+//sys\tDirfd(dirp uintptr) (fd int, err error) = SYS_DIRFD\n+//sys\tEpollCreate(size int) (fd int, err error) = SYS_EPOLL_CREATE\n+//sys\tEpollCreate1(flags int) (fd int, err error) = SYS_EPOLL_CREATE1\n+//sys\tEpollCtl(epfd int, op int, fd int, event *EpollEvent) (err error) = SYS_EPOLL_CTL\n+//sys\tEpollPwait(epfd int, events []EpollEvent, msec int, sigmask *int) (n int, err error) = SYS_EPOLL_PWAIT\n+//sys\tEpollWait(epfd int, events []EpollEvent, msec int) (n int, err error) = SYS_EPOLL_WAIT\n //sys\tErrno2() (er2 int) = SYS___ERRNO2\n-//sys\tErr2ad() (eadd *int) = SYS___ERR2AD\n+//sys\tEventfd(initval uint, flags int) (fd int, err error) = SYS_EVENTFD\n //sys\tExit(code int)\n+//sys\tFaccessat(dirfd int, path string, mode uint32, flags int) (err error) = SYS___FACCESSAT_A\n+\n+func Faccessat2(dirfd int, path string, mode uint32, flags int) (err error) {\n+\treturn Faccessat(dirfd, path, mode, flags)\n+}\n+\n //sys\tFchdir(fd int) (err error)\n //sys\tFchmod(fd int, mode uint32) (err error)\n+//sys\tFchmodat(dirfd int, path string, mode uint32, flags int) (err error) = SYS___FCHMODAT_A\n //sys\tFchown(fd int, uid int, gid int) (err error)\n+//sys\tFchownat(fd int, path string, uid int, gid int, flags int) (err error) = SYS___FCHOWNAT_A\n //sys\tFcntlInt(fd uintptr, cmd int, arg int) (retval int, err error) = SYS_FCNTL\n+//sys\tFdatasync(fd int) (err error) = SYS_FDATASYNC\n //sys\tfstat(fd int, stat *Stat_LE_t) (err error)\n+//sys\tfstatat(dirfd int, path string, stat *Stat_LE_t, flags int) (err error) = SYS___FSTATAT_A\n \n func Fstat(fd int, stat *Stat_t) (err error) {\n \tvar statLE Stat_LE_t\n@@ -236,28 +522,208 @@ func Fstat(fd int, stat *Stat_t) (err error) {\n \treturn\n }\n \n+func Fstatat(dirfd int, path string, stat *Stat_t, flags int) (err error) {\n+\tvar statLE Stat_LE_t\n+\terr = fstatat(dirfd, path, &statLE, flags)\n+\tcopyStat(stat, &statLE)\n+\treturn\n+}\n+\n+func impl_Getxattr(path string, attr string, dest []byte) (sz int, err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p1 *byte\n+\t_p1, err = BytePtrFromString(attr)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p2 unsafe.Pointer\n+\tif len(dest) > 0 {\n+\t\t_p2 = unsafe.Pointer(&dest[0])\n+\t} else {\n+\t\t_p2 = unsafe.Pointer(&_zero)\n+\t}\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS___GETXATTR_A<<4, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(_p1)), uintptr(_p2), uintptr(len(dest)))\n+\tsz = int(r0)\n+\tif int64(r0) == -1 {\n+\t\terr = errnoErr2(e1, e2)\n+\t}\n+\treturn\n+}\n+\n+//go:nosplit\n+func get_GetxattrAddr() *(func(path string, attr string, dest []byte) (sz int, err error))\n+\n+var Getxattr = enter_Getxattr\n+\n+func enter_Getxattr(path string, attr string, dest []byte) (sz int, err error) {\n+\tfuncref := get_GetxattrAddr()\n+\tif validGetxattr() {\n+\t\t*funcref = impl_Getxattr\n+\t} else {\n+\t\t*funcref = error_Getxattr\n+\t}\n+\treturn (*funcref)(path, attr, dest)\n+}\n+\n+func error_Getxattr(path string, attr string, dest []byte) (sz int, err error) {\n+\treturn -1, ENOSYS\n+}\n+\n+func validGetxattr() bool {\n+\tif funcptrtest(GetZosLibVec()+SYS___GETXATTR_A<<4, \"\") == 0 {\n+\t\tif name, err := getLeFuncName(GetZosLibVec() + SYS___GETXATTR_A<<4); err == nil {\n+\t\t\treturn name == \"__getxattr_a\"\n+\t\t}\n+\t}\n+\treturn false\n+}\n+\n+//sys   Lgetxattr(link string, attr string, dest []byte) (sz int, err error) = SYS___LGETXATTR_A\n+//sys   Lsetxattr(path string, attr string, data []byte, flags int) (err error) = SYS___LSETXATTR_A\n+\n+func impl_Setxattr(path string, attr string, data []byte, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p1 *byte\n+\t_p1, err = BytePtrFromString(attr)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p2 unsafe.Pointer\n+\tif len(data) > 0 {\n+\t\t_p2 = unsafe.Pointer(&data[0])\n+\t} else {\n+\t\t_p2 = unsafe.Pointer(&_zero)\n+\t}\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS___SETXATTR_A<<4, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(_p1)), uintptr(_p2), uintptr(len(data)), uintptr(flags))\n+\tif int64(r0) == -1 {\n+\t\terr = errnoErr2(e1, e2)\n+\t}\n+\treturn\n+}\n+\n+//go:nosplit\n+func get_SetxattrAddr() *(func(path string, attr string, data []byte, flags int) (err error))\n+\n+var Setxattr = enter_Setxattr\n+\n+func enter_Setxattr(path string, attr string, data []byte, flags int) (err error) {\n+\tfuncref := get_SetxattrAddr()\n+\tif validSetxattr() {\n+\t\t*funcref = impl_Setxattr\n+\t} else {\n+\t\t*funcref = error_Setxattr\n+\t}\n+\treturn (*funcref)(path, attr, data, flags)\n+}\n+\n+func error_Setxattr(path string, attr string, data []byte, flags int) (err error) {\n+\treturn ENOSYS\n+}\n+\n+func validSetxattr() bool {\n+\tif funcptrtest(GetZosLibVec()+SYS___SETXATTR_A<<4, \"\") == 0 {\n+\t\tif name, err := getLeFuncName(GetZosLibVec() + SYS___SETXATTR_A<<4); err == nil {\n+\t\t\treturn name == \"__setxattr_a\"\n+\t\t}\n+\t}\n+\treturn false\n+}\n+\n+//sys\tFstatfs(fd int, buf *Statfs_t) (err error) = SYS_FSTATFS\n //sys\tFstatvfs(fd int, stat *Statvfs_t) (err error) = SYS_FSTATVFS\n //sys\tFsync(fd int) (err error)\n+//sys\tFutimes(fd int, tv []Timeval) (err error) = SYS_FUTIMES\n+//sys\tFutimesat(dirfd int, path string, tv []Timeval) (err error) = SYS___FUTIMESAT_A\n //sys\tFtruncate(fd int, length int64) (err error)\n-//sys   Getpagesize() (pgsize int) = SYS_GETPAGESIZE\n+//sys\tGetrandom(buf []byte, flags int) (n int, err error) = SYS_GETRANDOM\n+//sys\tInotifyInit() (fd int, err error) = SYS_INOTIFY_INIT\n+//sys\tInotifyInit1(flags int) (fd int, err error) = SYS_INOTIFY_INIT1\n+//sys\tInotifyAddWatch(fd int, pathname string, mask uint32) (watchdesc int, err error) = SYS___INOTIFY_ADD_WATCH_A\n+//sys\tInotifyRmWatch(fd int, watchdesc uint32) (success int, err error) = SYS_INOTIFY_RM_WATCH\n+//sys   Listxattr(path string, dest []byte) (sz int, err error) = SYS___LISTXATTR_A\n+//sys   Llistxattr(path string, dest []byte) (sz int, err error) = SYS___LLISTXATTR_A\n+//sys   Lremovexattr(path string, attr string) (err error) = SYS___LREMOVEXATTR_A\n+//sys\tLutimes(path string, tv []Timeval) (err error) = SYS___LUTIMES_A\n //sys   Mprotect(b []byte, prot int) (err error) = SYS_MPROTECT\n //sys   Msync(b []byte, flags int) (err error) = SYS_MSYNC\n+//sys   Console2(cmsg *ConsMsg2, modstr *byte, concmd *uint32) (err error) = SYS___CONSOLE2\n+\n+// Pipe2 begin\n+\n+//go:nosplit\n+func getPipe2Addr() *(func([]int, int) error)\n+\n+var Pipe2 = pipe2Enter\n+\n+func pipe2Enter(p []int, flags int) (err error) {\n+\tif funcptrtest(GetZosLibVec()+SYS_PIPE2<<4, \"\") == 0 {\n+\t\t*getPipe2Addr() = pipe2Impl\n+\t} else {\n+\t\t*getPipe2Addr() = pipe2Error\n+\t}\n+\treturn (*getPipe2Addr())(p, flags)\n+}\n+\n+func pipe2Impl(p []int, flags int) (err error) {\n+\tvar pp [2]_C_int\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS_PIPE2<<4, uintptr(unsafe.Pointer(&pp[0])), uintptr(flags))\n+\tif int64(r0) == -1 {\n+\t\terr = errnoErr2(e1, e2)\n+\t} else {\n+\t\tp[0] = int(pp[0])\n+\t\tp[1] = int(pp[1])\n+\t}\n+\treturn\n+}\n+func pipe2Error(p []int, flags int) (err error) {\n+\treturn fmt.Errorf(\"Pipe2 is not available on this system\")\n+}\n+\n+// Pipe2 end\n+\n //sys   Poll(fds []PollFd, timeout int) (n int, err error) = SYS_POLL\n+\n+func Readdir(dir uintptr) (dirent *Dirent, err error) {\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS___READDIR_A<<4, uintptr(dir))\n+\truntime.ExitSyscall()\n+\tdirent = (*Dirent)(unsafe.Pointer(r0))\n+\tif int64(r0) == -1 {\n+\t\terr = errnoErr2(e1, e2)\n+\t}\n+\treturn\n+}\n+\n+//sys\tReaddir_r(dirp uintptr, entry *direntLE, result **direntLE) (err error) = SYS___READDIR_R_A\n+//sys\tStatfs(path string, buf *Statfs_t) (err error) = SYS___STATFS_A\n+//sys\tSyncfs(fd int) (err error) = SYS_SYNCFS\n //sys   Times(tms *Tms) (ticks uintptr, err error) = SYS_TIMES\n //sys   W_Getmntent(buff *byte, size int) (lastsys int, err error) = SYS_W_GETMNTENT\n //sys   W_Getmntent_A(buff *byte, size int) (lastsys int, err error) = SYS___W_GETMNTENT_A\n \n //sys   mount_LE(path string, filesystem string, fstype string, mtm uint32, parmlen int32, parm string) (err error) = SYS___MOUNT_A\n-//sys   unmount(filesystem string, mtm int) (err error) = SYS___UMOUNT_A\n+//sys   unmount_LE(filesystem string, mtm int) (err error) = SYS___UMOUNT_A\n //sys   Chroot(path string) (err error) = SYS___CHROOT_A\n //sys   Select(nmsgsfds int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (ret int, err error) = SYS_SELECT\n-//sysnb Uname(buf *Utsname) (err error) = SYS___UNAME_A\n+//sysnb Uname(buf *Utsname) (err error) = SYS_____OSNAME_A\n+//sys   Unshare(flags int) (err error) = SYS_UNSHARE\n \n func Ptsname(fd int) (name string, err error) {\n-\tr0, _, e1 := syscall_syscall(SYS___PTSNAME_A, uintptr(fd), 0, 0)\n-\tname = u2s(unsafe.Pointer(r0))\n-\tif e1 != 0 {\n-\t\terr = errnoErr(e1)\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithPtrReturn(GetZosLibVec()+SYS___PTSNAME_A<<4, uintptr(fd))\n+\truntime.ExitSyscall()\n+\tif r0 == 0 {\n+\t\terr = errnoErr2(e1, e2)\n+\t} else {\n+\t\tname = u2s(unsafe.Pointer(r0))\n \t}\n \treturn\n }\n@@ -272,13 +738,19 @@ func u2s(cstr unsafe.Pointer) string {\n }\n \n func Close(fd int) (err error) {\n-\t_, _, e1 := syscall_syscall(SYS_CLOSE, uintptr(fd), 0, 0)\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS_CLOSE<<4, uintptr(fd))\n+\truntime.ExitSyscall()\n \tfor i := 0; e1 == EAGAIN && i < 10; i++ {\n-\t\t_, _, _ = syscall_syscall(SYS_USLEEP, uintptr(10), 0, 0)\n-\t\t_, _, e1 = syscall_syscall(SYS_CLOSE, uintptr(fd), 0, 0)\n+\t\truntime.EnterSyscall()\n+\t\tCallLeFuncWithErr(GetZosLibVec()+SYS_USLEEP<<4, uintptr(10))\n+\t\truntime.ExitSyscall()\n+\t\truntime.EnterSyscall()\n+\t\tr0, e2, e1 = CallLeFuncWithErr(GetZosLibVec()+SYS_CLOSE<<4, uintptr(fd))\n+\t\truntime.ExitSyscall()\n \t}\n-\tif e1 != 0 {\n-\t\terr = errnoErr(e1)\n+\tif r0 != 0 {\n+\t\terr = errnoErr2(e1, e2)\n \t}\n \treturn\n }\n@@ -288,9 +760,15 @@ func Madvise(b []byte, advice int) (err error) {\n \treturn\n }\n \n+func Mmap(fd int, offset int64, length int, prot int, flags int) (data []byte, err error) {\n+\treturn mapper.Mmap(fd, offset, length, prot, flags)\n+}\n+\n+func Munmap(b []byte) (err error) {\n+\treturn mapper.Munmap(b)\n+}\n+\n //sys   Gethostname(buf []byte) (err error) = SYS___GETHOSTNAME_A\n-//sysnb\tGetegid() (egid int)\n-//sysnb\tGeteuid() (uid int)\n //sysnb\tGetgid() (gid int)\n //sysnb\tGetpid() (pid int)\n //sysnb\tGetpgid(pid int) (pgid int, err error) = SYS_GETPGID\n@@ -317,11 +795,14 @@ func Getrusage(who int, rusage *Rusage) (err error) {\n \treturn\n }\n \n+//sys\tGetegid() (egid int) = SYS_GETEGID\n+//sys\tGeteuid() (euid int) = SYS_GETEUID\n //sysnb Getsid(pid int) (sid int, err error) = SYS_GETSID\n //sysnb\tGetuid() (uid int)\n //sysnb\tKill(pid int, sig Signal) (err error)\n //sys\tLchown(path string, uid int, gid int) (err error) = SYS___LCHOWN_A\n //sys\tLink(path string, link string) (err error) = SYS___LINK_A\n+//sys\tLinkat(oldDirFd int, oldPath string, newDirFd int, newPath string, flags int) (err error) = SYS___LINKAT_A\n //sys\tListen(s int, n int) (err error)\n //sys\tlstat(path string, stat *Stat_LE_t) (err error) = SYS___LSTAT_A\n \n@@ -332,15 +813,150 @@ func Lstat(path string, stat *Stat_t) (err error) {\n \treturn\n }\n \n+// for checking symlinks begins with $VERSION/ $SYSNAME/ $SYSSYMR/ $SYSSYMA/\n+func isSpecialPath(path []byte) (v bool) {\n+\tvar special = [4][8]byte{\n+\t\t[8]byte{'V', 'E', 'R', 'S', 'I', 'O', 'N', '/'},\n+\t\t[8]byte{'S', 'Y', 'S', 'N', 'A', 'M', 'E', '/'},\n+\t\t[8]byte{'S', 'Y', 'S', 'S', 'Y', 'M', 'R', '/'},\n+\t\t[8]byte{'S', 'Y', 'S', 'S', 'Y', 'M', 'A', '/'}}\n+\n+\tvar i, j int\n+\tfor i = 0; i < len(special); i++ {\n+\t\tfor j = 0; j < len(special[i]); j++ {\n+\t\t\tif path[j] != special[i][j] {\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t}\n+\t\tif j == len(special[i]) {\n+\t\t\treturn true\n+\t\t}\n+\t}\n+\treturn false\n+}\n+\n+func realpath(srcpath string, abspath []byte) (pathlen int, errno int) {\n+\tvar source [1024]byte\n+\tcopy(source[:], srcpath)\n+\tsource[len(srcpath)] = 0\n+\tret := runtime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS___REALPATH_A<<4, //__realpath_a()\n+\t\t[]uintptr{uintptr(unsafe.Pointer(&source[0])),\n+\t\t\tuintptr(unsafe.Pointer(&abspath[0]))})\n+\tif ret != 0 {\n+\t\tindex := bytes.IndexByte(abspath[:], byte(0))\n+\t\tif index != -1 {\n+\t\t\treturn index, 0\n+\t\t}\n+\t} else {\n+\t\terrptr := (*int)(unsafe.Pointer(runtime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS___ERRNO<<4, []uintptr{}))) //__errno()\n+\t\treturn 0, *errptr\n+\t}\n+\treturn 0, 245 // EBADDATA   245\n+}\n+\n+func Readlink(path string, buf []byte) (n int, err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p1 unsafe.Pointer\n+\tif len(buf) > 0 {\n+\t\t_p1 = unsafe.Pointer(&buf[0])\n+\t} else {\n+\t\t_p1 = unsafe.Pointer(&_zero)\n+\t}\n+\tn = int(runtime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS___READLINK_A<<4,\n+\t\t[]uintptr{uintptr(unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(buf))}))\n+\truntime.KeepAlive(unsafe.Pointer(_p0))\n+\tif n == -1 {\n+\t\tvalue := *(*int32)(unsafe.Pointer(runtime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS___ERRNO<<4, []uintptr{})))\n+\t\terr = errnoErr(Errno(value))\n+\t} else {\n+\t\tif buf[0] == '$' {\n+\t\t\tif isSpecialPath(buf[1:9]) {\n+\t\t\t\tcnt, err1 := realpath(path, buf)\n+\t\t\t\tif err1 == 0 {\n+\t\t\t\t\tn = cnt\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn\n+}\n+\n+func impl_Readlinkat(dirfd int, path string, buf []byte) (n int, err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p1 unsafe.Pointer\n+\tif len(buf) > 0 {\n+\t\t_p1 = unsafe.Pointer(&buf[0])\n+\t} else {\n+\t\t_p1 = unsafe.Pointer(&_zero)\n+\t}\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS___READLINKAT_A<<4, uintptr(dirfd), uintptr(unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(buf)))\n+\truntime.ExitSyscall()\n+\tn = int(r0)\n+\tif int64(r0) == -1 {\n+\t\terr = errnoErr2(e1, e2)\n+\t\treturn n, err\n+\t} else {\n+\t\tif buf[0] == '$' {\n+\t\t\tif isSpecialPath(buf[1:9]) {\n+\t\t\t\tcnt, err1 := realpath(path, buf)\n+\t\t\t\tif err1 == 0 {\n+\t\t\t\t\tn = cnt\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn\n+}\n+\n+//go:nosplit\n+func get_ReadlinkatAddr() *(func(dirfd int, path string, buf []byte) (n int, err error))\n+\n+var Readlinkat = enter_Readlinkat\n+\n+func enter_Readlinkat(dirfd int, path string, buf []byte) (n int, err error) {\n+\tfuncref := get_ReadlinkatAddr()\n+\tif funcptrtest(GetZosLibVec()+SYS___READLINKAT_A<<4, \"\") == 0 {\n+\t\t*funcref = impl_Readlinkat\n+\t} else {\n+\t\t*funcref = error_Readlinkat\n+\t}\n+\treturn (*funcref)(dirfd, path, buf)\n+}\n+\n+func error_Readlinkat(dirfd int, path string, buf []byte) (n int, err error) {\n+\tn = -1\n+\terr = ENOSYS\n+\treturn\n+}\n+\n //sys\tMkdir(path string, mode uint32) (err error) = SYS___MKDIR_A\n+//sys\tMkdirat(dirfd int, path string, mode uint32) (err error) = SYS___MKDIRAT_A\n //sys   Mkfifo(path string, mode uint32) (err error) = SYS___MKFIFO_A\n //sys\tMknod(path string, mode uint32, dev int) (err error) = SYS___MKNOD_A\n+//sys\tMknodat(dirfd int, path string, mode uint32, dev int) (err error) = SYS___MKNODAT_A\n+//sys\tPivotRoot(newroot string, oldroot string) (err error) = SYS___PIVOT_ROOT_A\n //sys\tPread(fd int, p []byte, offset int64) (n int, err error)\n //sys\tPwrite(fd int, p []byte, offset int64) (n int, err error)\n-//sys\tReadlink(path string, buf []byte) (n int, err error) = SYS___READLINK_A\n+//sys\tPrctl(option int, arg2 uintptr, arg3 uintptr, arg4 uintptr, arg5 uintptr) (err error) = SYS___PRCTL_A\n+//sysnb\tPrlimit(pid int, resource int, newlimit *Rlimit, old *Rlimit) (err error) = SYS_PRLIMIT\n //sys\tRename(from string, to string) (err error) = SYS___RENAME_A\n+//sys\tRenameat(olddirfd int, oldpath string, newdirfd int, newpath string) (err error) = SYS___RENAMEAT_A\n+//sys\tRenameat2(olddirfd int, oldpath string, newdirfd int, newpath string, flags uint) (err error) = SYS___RENAMEAT2_A\n //sys\tRmdir(path string) (err error) = SYS___RMDIR_A\n //sys   Seek(fd int, offset int64, whence int) (off int64, err error) = SYS_LSEEK\n+//sys\tSetegid(egid int) (err error) = SYS_SETEGID\n+//sys\tSeteuid(euid int) (err error) = SYS_SETEUID\n+//sys\tSethostname(p []byte) (err error) = SYS___SETHOSTNAME_A\n+//sys   Setns(fd int, nstype int) (err error) = SYS_SETNS\n //sys\tSetpriority(which int, who int, prio int) (err error)\n //sysnb\tSetpgid(pid int, pgid int) (err error) = SYS_SETPGID\n //sysnb\tSetrlimit(resource int, lim *Rlimit) (err error)\n@@ -360,32 +976,57 @@ func Stat(path string, sta *Stat_t) (err error) {\n }\n \n //sys\tSymlink(path string, link string) (err error) = SYS___SYMLINK_A\n+//sys\tSymlinkat(oldPath string, dirfd int, newPath string) (err error) = SYS___SYMLINKAT_A\n //sys\tSync() = SYS_SYNC\n //sys\tTruncate(path string, length int64) (err error) = SYS___TRUNCATE_A\n //sys\tTcgetattr(fildes int, termptr *Termios) (err error) = SYS_TCGETATTR\n //sys\tTcsetattr(fildes int, when int, termptr *Termios) (err error) = SYS_TCSETATTR\n //sys\tUmask(mask int) (oldmask int)\n //sys\tUnlink(path string) (err error) = SYS___UNLINK_A\n+//sys\tUnlinkat(dirfd int, path string, flags int) (err error) = SYS___UNLINKAT_A\n //sys\tUtime(path string, utim *Utimbuf) (err error) = SYS___UTIME_A\n \n //sys\topen(path string, mode int, perm uint32) (fd int, err error) = SYS___OPEN_A\n \n func Open(path string, mode int, perm uint32) (fd int, err error) {\n+\tif mode&O_ACCMODE == 0 {\n+\t\tmode |= O_RDONLY\n+\t}\n \treturn open(path, mode, perm)\n }\n \n-func Mkfifoat(dirfd int, path string, mode uint32) (err error) {\n-\twd, err := Getwd()\n-\tif err != nil {\n-\t\treturn err\n+//sys\topenat(dirfd int, path string, flags int, mode uint32) (fd int, err error) = SYS___OPENAT_A\n+\n+func Openat(dirfd int, path string, flags int, mode uint32) (fd int, err error) {\n+\tif flags&O_ACCMODE == 0 {\n+\t\tflags |= O_RDONLY\n \t}\n+\treturn openat(dirfd, path, flags, mode)\n+}\n \n-\tif err := Fchdir(dirfd); err != nil {\n-\t\treturn err\n+//sys\topenat2(dirfd int, path string, open_how *OpenHow, size int) (fd int, err error) = SYS___OPENAT2_A\n+\n+func Openat2(dirfd int, path string, how *OpenHow) (fd int, err error) {\n+\tif how.Flags&O_ACCMODE == 0 {\n+\t\thow.Flags |= O_RDONLY\n \t}\n-\tdefer Chdir(wd)\n+\treturn openat2(dirfd, path, how, SizeofOpenHow)\n+}\n \n-\treturn Mkfifo(path, mode)\n+func ZosFdToPath(dirfd int) (path string, err error) {\n+\tvar buffer [1024]byte\n+\truntime.EnterSyscall()\n+\tret, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS_W_IOCTL<<4, uintptr(dirfd), 17, 1024, uintptr(unsafe.Pointer(&buffer[0])))\n+\truntime.ExitSyscall()\n+\tif ret == 0 {\n+\t\tzb := bytes.IndexByte(buffer[:], 0)\n+\t\tif zb == -1 {\n+\t\t\tzb = len(buffer)\n+\t\t}\n+\t\tCallLeFuncWithErr(GetZosLibVec()+SYS___E2A_L<<4, uintptr(unsafe.Pointer(&buffer[0])), uintptr(zb))\n+\t\treturn string(buffer[:zb]), nil\n+\t}\n+\treturn \"\", errnoErr2(e1, e2)\n }\n \n //sys\tremove(path string) (err error)\n@@ -403,10 +1044,12 @@ func Getcwd(buf []byte) (n int, err error) {\n \t} else {\n \t\tp = unsafe.Pointer(&_zero)\n \t}\n-\t_, _, e := syscall_syscall(SYS___GETCWD_A, uintptr(p), uintptr(len(buf)), 0)\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithPtrReturn(GetZosLibVec()+SYS___GETCWD_A<<4, uintptr(p), uintptr(len(buf)))\n+\truntime.ExitSyscall()\n \tn = clen(buf) + 1\n-\tif e != 0 {\n-\t\terr = errnoErr(e)\n+\tif r0 == 0 {\n+\t\terr = errnoErr2(e1, e2)\n \t}\n \treturn\n }\n@@ -520,9 +1163,41 @@ func (w WaitStatus) StopSignal() Signal {\n \n func (w WaitStatus) TrapCause() int { return -1 }\n \n+//sys\twaitid(idType int, id int, info *Siginfo, options int) (err error)\n+\n+func Waitid(idType int, id int, info *Siginfo, options int, rusage *Rusage) (err error) {\n+\treturn waitid(idType, id, info, options)\n+}\n+\n //sys\twaitpid(pid int, wstatus *_C_int, options int) (wpid int, err error)\n \n-func Wait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, err error) {\n+func impl_Wait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, err error) {\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS_WAIT4<<4, uintptr(pid), uintptr(unsafe.Pointer(wstatus)), uintptr(options), uintptr(unsafe.Pointer(rusage)))\n+\truntime.ExitSyscall()\n+\twpid = int(r0)\n+\tif int64(r0) == -1 {\n+\t\terr = errnoErr2(e1, e2)\n+\t}\n+\treturn\n+}\n+\n+//go:nosplit\n+func get_Wait4Addr() *(func(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, err error))\n+\n+var Wait4 = enter_Wait4\n+\n+func enter_Wait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, err error) {\n+\tfuncref := get_Wait4Addr()\n+\tif funcptrtest(GetZosLibVec()+SYS_WAIT4<<4, \"\") == 0 {\n+\t\t*funcref = impl_Wait4\n+\t} else {\n+\t\t*funcref = legacyWait4\n+\t}\n+\treturn (*funcref)(pid, wstatus, options, rusage)\n+}\n+\n+func legacyWait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, err error) {\n \t// TODO(mundaym): z/OS doesn't have wait4. I don't think getrusage does what we want.\n \t// At the moment rusage will not be touched.\n \tvar status _C_int\n@@ -571,23 +1246,62 @@ func Pipe(p []int) (err error) {\n \t}\n \tvar pp [2]_C_int\n \terr = pipe(&pp)\n-\tif err == nil {\n-\t\tp[0] = int(pp[0])\n-\t\tp[1] = int(pp[1])\n-\t}\n+\tp[0] = int(pp[0])\n+\tp[1] = int(pp[1])\n \treturn\n }\n \n //sys\tutimes(path string, timeval *[2]Timeval) (err error) = SYS___UTIMES_A\n \n func Utimes(path string, tv []Timeval) (err error) {\n+\tif tv == nil {\n+\t\treturn utimes(path, nil)\n+\t}\n \tif len(tv) != 2 {\n \t\treturn EINVAL\n \t}\n \treturn utimes(path, (*[2]Timeval)(unsafe.Pointer(&tv[0])))\n }\n \n-func UtimesNano(path string, ts []Timespec) error {\n+//sys\tutimensat(dirfd int, path string, ts *[2]Timespec, flags int) (err error) = SYS___UTIMENSAT_A\n+\n+func validUtimensat() bool {\n+\tif funcptrtest(GetZosLibVec()+SYS___UTIMENSAT_A<<4, \"\") == 0 {\n+\t\tif name, err := getLeFuncName(GetZosLibVec() + SYS___UTIMENSAT_A<<4); err == nil {\n+\t\t\treturn name == \"__utimensat_a\"\n+\t\t}\n+\t}\n+\treturn false\n+}\n+\n+// Begin UtimesNano\n+\n+//go:nosplit\n+func get_UtimesNanoAddr() *(func(path string, ts []Timespec) (err error))\n+\n+var UtimesNano = enter_UtimesNano\n+\n+func enter_UtimesNano(path string, ts []Timespec) (err error) {\n+\tfuncref := get_UtimesNanoAddr()\n+\tif validUtimensat() {\n+\t\t*funcref = utimesNanoImpl\n+\t} else {\n+\t\t*funcref = legacyUtimesNano\n+\t}\n+\treturn (*funcref)(path, ts)\n+}\n+\n+func utimesNanoImpl(path string, ts []Timespec) (err error) {\n+\tif ts == nil {\n+\t\treturn utimensat(AT_FDCWD, path, nil, 0)\n+\t}\n+\tif len(ts) != 2 {\n+\t\treturn EINVAL\n+\t}\n+\treturn utimensat(AT_FDCWD, path, (*[2]Timespec)(unsafe.Pointer(&ts[0])), 0)\n+}\n+\n+func legacyUtimesNano(path string, ts []Timespec) (err error) {\n \tif len(ts) != 2 {\n \t\treturn EINVAL\n \t}\n@@ -600,6 +1314,70 @@ func UtimesNano(path string, ts []Timespec) error {\n \treturn utimes(path, (*[2]Timeval)(unsafe.Pointer(&tv[0])))\n }\n \n+// End UtimesNano\n+\n+// Begin UtimesNanoAt\n+\n+//go:nosplit\n+func get_UtimesNanoAtAddr() *(func(dirfd int, path string, ts []Timespec, flags int) (err error))\n+\n+var UtimesNanoAt = enter_UtimesNanoAt\n+\n+func enter_UtimesNanoAt(dirfd int, path string, ts []Timespec, flags int) (err error) {\n+\tfuncref := get_UtimesNanoAtAddr()\n+\tif validUtimensat() {\n+\t\t*funcref = utimesNanoAtImpl\n+\t} else {\n+\t\t*funcref = legacyUtimesNanoAt\n+\t}\n+\treturn (*funcref)(dirfd, path, ts, flags)\n+}\n+\n+func utimesNanoAtImpl(dirfd int, path string, ts []Timespec, flags int) (err error) {\n+\tif ts == nil {\n+\t\treturn utimensat(dirfd, path, nil, flags)\n+\t}\n+\tif len(ts) != 2 {\n+\t\treturn EINVAL\n+\t}\n+\treturn utimensat(dirfd, path, (*[2]Timespec)(unsafe.Pointer(&ts[0])), flags)\n+}\n+\n+func legacyUtimesNanoAt(dirfd int, path string, ts []Timespec, flags int) (err error) {\n+\tif path[0] != '/' {\n+\t\tdirPath, err := ZosFdToPath(dirfd)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tpath = dirPath + \"/\" + path\n+\t}\n+\tif flags == AT_SYMLINK_NOFOLLOW {\n+\t\tif len(ts) != 2 {\n+\t\t\treturn EINVAL\n+\t\t}\n+\n+\t\tif ts[0].Nsec >= 5e8 {\n+\t\t\tts[0].Sec++\n+\t\t}\n+\t\tts[0].Nsec = 0\n+\t\tif ts[1].Nsec >= 5e8 {\n+\t\t\tts[1].Sec++\n+\t\t}\n+\t\tts[1].Nsec = 0\n+\n+\t\t// Not as efficient as it could be because Timespec and\n+\t\t// Timeval have different types in the different OSes\n+\t\ttv := []Timeval{\n+\t\t\tNsecToTimeval(TimespecToNsec(ts[0])),\n+\t\t\tNsecToTimeval(TimespecToNsec(ts[1])),\n+\t\t}\n+\t\treturn Lutimes(path, tv)\n+\t}\n+\treturn UtimesNano(path, ts)\n+}\n+\n+// End UtimesNanoAt\n+\n func Getsockname(fd int) (sa Sockaddr, err error) {\n \tvar rsa RawSockaddrAny\n \tvar len _Socklen = SizeofSockaddrAny\n@@ -1191,62 +1969,41 @@ func Opendir(name string) (uintptr, error) {\n \tif err != nil {\n \t\treturn 0, err\n \t}\n-\tdir, _, e := syscall_syscall(SYS___OPENDIR_A, uintptr(unsafe.Pointer(p)), 0, 0)\n-\truntime.KeepAlive(unsafe.Pointer(p))\n-\tif e != 0 {\n-\t\terr = errnoErr(e)\n-\t}\n-\treturn dir, err\n-}\n-\n-// clearsyscall.Errno resets the errno value to 0.\n-func clearErrno()\n-\n-func Readdir(dir uintptr) (*Dirent, error) {\n-\tvar ent Dirent\n-\tvar res uintptr\n-\t// __readdir_r_a returns errno at the end of the directory stream, rather than 0.\n-\t// Therefore to avoid false positives we clear errno before calling it.\n-\n-\t// TODO(neeilan): Commented this out to get sys/unix compiling on z/OS. Uncomment and fix. Error: \"undefined: clearsyscall\"\n-\t//clearsyscall.Errno() // TODO(mundaym): check pre-emption rules.\n-\n-\te, _, _ := syscall_syscall(SYS___READDIR_R_A, dir, uintptr(unsafe.Pointer(&ent)), uintptr(unsafe.Pointer(&res)))\n-\tvar err error\n-\tif e != 0 {\n-\t\terr = errnoErr(Errno(e))\n-\t}\n-\tif res == 0 {\n-\t\treturn nil, err\n-\t}\n-\treturn &ent, err\n-}\n-\n-func readdir_r(dirp uintptr, entry *direntLE, result **direntLE) (err error) {\n-\tr0, _, e1 := syscall_syscall(SYS___READDIR_R_A, dirp, uintptr(unsafe.Pointer(entry)), uintptr(unsafe.Pointer(result)))\n-\tif int64(r0) == -1 {\n-\t\terr = errnoErr(Errno(e1))\n+\terr = nil\n+\truntime.EnterSyscall()\n+\tdir, e2, e1 := CallLeFuncWithPtrReturn(GetZosLibVec()+SYS___OPENDIR_A<<4, uintptr(unsafe.Pointer(p)))\n+\truntime.ExitSyscall()\n+\truntime.KeepAlive(unsafe.Pointer(p))\n+\tif dir == 0 {\n+\t\terr = errnoErr2(e1, e2)\n \t}\n-\treturn\n+\treturn dir, err\n }\n \n+// clearsyscall.Errno resets the errno value to 0.\n+func clearErrno()\n+\n func Closedir(dir uintptr) error {\n-\t_, _, e := syscall_syscall(SYS_CLOSEDIR, dir, 0, 0)\n-\tif e != 0 {\n-\t\treturn errnoErr(e)\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS_CLOSEDIR<<4, dir)\n+\truntime.ExitSyscall()\n+\tif r0 != 0 {\n+\t\treturn errnoErr2(e1, e2)\n \t}\n \treturn nil\n }\n \n func Seekdir(dir uintptr, pos int) {\n-\t_, _, _ = syscall_syscall(SYS_SEEKDIR, dir, uintptr(pos), 0)\n+\truntime.EnterSyscall()\n+\tCallLeFuncWithErr(GetZosLibVec()+SYS_SEEKDIR<<4, dir, uintptr(pos))\n+\truntime.ExitSyscall()\n }\n \n func Telldir(dir uintptr) (int, error) {\n-\tp, _, e := syscall_syscall(SYS_TELLDIR, dir, 0, 0)\n+\tp, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS_TELLDIR<<4, dir)\n \tpos := int(p)\n-\tif pos == -1 {\n-\t\treturn pos, errnoErr(e)\n+\tif int64(p) == -1 {\n+\t\treturn pos, errnoErr2(e1, e2)\n \t}\n \treturn pos, nil\n }\n@@ -1261,19 +2018,55 @@ func FcntlFlock(fd uintptr, cmd int, lk *Flock_t) error {\n \t*(*int64)(unsafe.Pointer(&flock[4])) = lk.Start\n \t*(*int64)(unsafe.Pointer(&flock[12])) = lk.Len\n \t*(*int32)(unsafe.Pointer(&flock[20])) = lk.Pid\n-\t_, _, errno := syscall_syscall(SYS_FCNTL, fd, uintptr(cmd), uintptr(unsafe.Pointer(&flock)))\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS_FCNTL<<4, fd, uintptr(cmd), uintptr(unsafe.Pointer(&flock)))\n+\truntime.ExitSyscall()\n \tlk.Type = *(*int16)(unsafe.Pointer(&flock[0]))\n \tlk.Whence = *(*int16)(unsafe.Pointer(&flock[2]))\n \tlk.Start = *(*int64)(unsafe.Pointer(&flock[4]))\n \tlk.Len = *(*int64)(unsafe.Pointer(&flock[12]))\n \tlk.Pid = *(*int32)(unsafe.Pointer(&flock[20]))\n-\tif errno == 0 {\n+\tif r0 == 0 {\n \t\treturn nil\n \t}\n-\treturn errno\n+\treturn errnoErr2(e1, e2)\n+}\n+\n+func impl_Flock(fd int, how int) (err error) {\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS_FLOCK<<4, uintptr(fd), uintptr(how))\n+\truntime.ExitSyscall()\n+\tif int64(r0) == -1 {\n+\t\terr = errnoErr2(e1, e2)\n+\t}\n+\treturn\n+}\n+\n+//go:nosplit\n+func get_FlockAddr() *(func(fd int, how int) (err error))\n+\n+var Flock = enter_Flock\n+\n+func validFlock(fp uintptr) bool {\n+\tif funcptrtest(GetZosLibVec()+SYS_FLOCK<<4, \"\") == 0 {\n+\t\tif name, err := getLeFuncName(GetZosLibVec() + SYS_FLOCK<<4); err == nil {\n+\t\t\treturn name == \"flock\"\n+\t\t}\n+\t}\n+\treturn false\n+}\n+\n+func enter_Flock(fd int, how int) (err error) {\n+\tfuncref := get_FlockAddr()\n+\tif validFlock(GetZosLibVec() + SYS_FLOCK<<4) {\n+\t\t*funcref = impl_Flock\n+\t} else {\n+\t\t*funcref = legacyFlock\n+\t}\n+\treturn (*funcref)(fd, how)\n }\n \n-func Flock(fd int, how int) error {\n+func legacyFlock(fd int, how int) error {\n \n \tvar flock_type int16\n \tvar fcntl_cmd int\n@@ -1307,41 +2100,51 @@ func Flock(fd int, how int) error {\n }\n \n func Mlock(b []byte) (err error) {\n-\t_, _, e1 := syscall_syscall(SYS___MLOCKALL, _BPX_NONSWAP, 0, 0)\n-\tif e1 != 0 {\n-\t\terr = errnoErr(e1)\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS___MLOCKALL<<4, _BPX_NONSWAP)\n+\truntime.ExitSyscall()\n+\tif r0 != 0 {\n+\t\terr = errnoErr2(e1, e2)\n \t}\n \treturn\n }\n \n func Mlock2(b []byte, flags int) (err error) {\n-\t_, _, e1 := syscall_syscall(SYS___MLOCKALL, _BPX_NONSWAP, 0, 0)\n-\tif e1 != 0 {\n-\t\terr = errnoErr(e1)\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS___MLOCKALL<<4, _BPX_NONSWAP)\n+\truntime.ExitSyscall()\n+\tif r0 != 0 {\n+\t\terr = errnoErr2(e1, e2)\n \t}\n \treturn\n }\n \n func Mlockall(flags int) (err error) {\n-\t_, _, e1 := syscall_syscall(SYS___MLOCKALL, _BPX_NONSWAP, 0, 0)\n-\tif e1 != 0 {\n-\t\terr = errnoErr(e1)\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS___MLOCKALL<<4, _BPX_NONSWAP)\n+\truntime.ExitSyscall()\n+\tif r0 != 0 {\n+\t\terr = errnoErr2(e1, e2)\n \t}\n \treturn\n }\n \n func Munlock(b []byte) (err error) {\n-\t_, _, e1 := syscall_syscall(SYS___MLOCKALL, _BPX_SWAP, 0, 0)\n-\tif e1 != 0 {\n-\t\terr = errnoErr(e1)\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS___MLOCKALL<<4, _BPX_SWAP)\n+\truntime.ExitSyscall()\n+\tif r0 != 0 {\n+\t\terr = errnoErr2(e1, e2)\n \t}\n \treturn\n }\n \n func Munlockall() (err error) {\n-\t_, _, e1 := syscall_syscall(SYS___MLOCKALL, _BPX_SWAP, 0, 0)\n-\tif e1 != 0 {\n-\t\terr = errnoErr(e1)\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS___MLOCKALL<<4, _BPX_SWAP)\n+\truntime.ExitSyscall()\n+\tif r0 != 0 {\n+\t\terr = errnoErr2(e1, e2)\n \t}\n \treturn\n }\n@@ -1372,15 +2175,104 @@ func ClockGettime(clockid int32, ts *Timespec) error {\n \treturn nil\n }\n \n-func Statfs(path string, stat *Statfs_t) (err error) {\n-\tfd, err := open(path, O_RDONLY, 0)\n-\tdefer Close(fd)\n-\tif err != nil {\n-\t\treturn err\n+// Chtag\n+\n+//go:nosplit\n+func get_ChtagAddr() *(func(path string, ccsid uint64, textbit uint64) error)\n+\n+var Chtag = enter_Chtag\n+\n+func enter_Chtag(path string, ccsid uint64, textbit uint64) error {\n+\tfuncref := get_ChtagAddr()\n+\tif validSetxattr() {\n+\t\t*funcref = impl_Chtag\n+\t} else {\n+\t\t*funcref = legacy_Chtag\n+\t}\n+\treturn (*funcref)(path, ccsid, textbit)\n+}\n+\n+func legacy_Chtag(path string, ccsid uint64, textbit uint64) error {\n+\ttag := ccsid<<16 | textbit<<15\n+\tvar tag_buff [8]byte\n+\tDecodeData(tag_buff[:], 8, tag)\n+\treturn Setxattr(path, \"filetag\", tag_buff[:], XATTR_REPLACE)\n+}\n+\n+func impl_Chtag(path string, ccsid uint64, textbit uint64) error {\n+\ttag := ccsid<<16 | textbit<<15\n+\tvar tag_buff [4]byte\n+\tDecodeData(tag_buff[:], 4, tag)\n+\treturn Setxattr(path, \"system.filetag\", tag_buff[:], XATTR_REPLACE)\n+}\n+\n+// End of Chtag\n+\n+// Nanosleep\n+\n+//go:nosplit\n+func get_NanosleepAddr() *(func(time *Timespec, leftover *Timespec) error)\n+\n+var Nanosleep = enter_Nanosleep\n+\n+func enter_Nanosleep(time *Timespec, leftover *Timespec) error {\n+\tfuncref := get_NanosleepAddr()\n+\tif funcptrtest(GetZosLibVec()+SYS_NANOSLEEP<<4, \"\") == 0 {\n+\t\t*funcref = impl_Nanosleep\n+\t} else {\n+\t\t*funcref = legacyNanosleep\n+\t}\n+\treturn (*funcref)(time, leftover)\n+}\n+\n+func impl_Nanosleep(time *Timespec, leftover *Timespec) error {\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS_NANOSLEEP<<4, uintptr(unsafe.Pointer(time)), uintptr(unsafe.Pointer(leftover)))\n+\truntime.ExitSyscall()\n+\tif int64(r0) == -1 {\n+\t\treturn errnoErr2(e1, e2)\n+\t}\n+\treturn nil\n+}\n+\n+func legacyNanosleep(time *Timespec, leftover *Timespec) error {\n+\tt0 := runtime.Nanotime1()\n+\tvar secrem uint32\n+\tvar nsecrem uint32\n+\ttotal := time.Sec*1000000000 + time.Nsec\n+\telapsed := runtime.Nanotime1() - t0\n+\tvar rv int32\n+\tvar rc int32\n+\tvar err error\n+\t// repeatedly sleep for 1 second until less than 1 second left\n+\tfor total-elapsed > 1000000000 {\n+\t\trv, rc, _ = BpxCondTimedWait(uint32(1), uint32(0), uint32(CW_CONDVAR), &secrem, &nsecrem)\n+\t\tif rv != 0 && rc != 112 { // 112 is EAGAIN\n+\t\t\tif leftover != nil && rc == 120 { // 120 is EINTR\n+\t\t\t\tleftover.Sec = int64(secrem)\n+\t\t\t\tleftover.Nsec = int64(nsecrem)\n+\t\t\t}\n+\t\t\terr = Errno(rc)\n+\t\t\treturn err\n+\t\t}\n+\t\telapsed = runtime.Nanotime1() - t0\n+\t}\n+\t// sleep the remainder\n+\tif total > elapsed {\n+\t\trv, rc, _ = BpxCondTimedWait(uint32(0), uint32(total-elapsed), uint32(CW_CONDVAR), &secrem, &nsecrem)\n+\t}\n+\tif leftover != nil && rc == 120 {\n+\t\tleftover.Sec = int64(secrem)\n+\t\tleftover.Nsec = int64(nsecrem)\n \t}\n-\treturn Fstatfs(fd, stat)\n+\tif rv != 0 && rc != 112 {\n+\t\terr = Errno(rc)\n+\t}\n+\treturn err\n }\n \n+// End of Nanosleep\n+\n var (\n \tStdin  = 0\n \tStdout = 1\n@@ -1395,6 +2287,9 @@ var (\n \terrENOENT error = syscall.ENOENT\n )\n \n+var ZosTraceLevel int\n+var ZosTracefile *os.File\n+\n var (\n \tsignalNameMapOnce sync.Once\n \tsignalNameMap     map[string]syscall.Signal\n@@ -1416,6 +2311,56 @@ func errnoErr(e Errno) error {\n \treturn e\n }\n \n+var reg *regexp.Regexp\n+\n+// enhanced with zos specific errno2\n+func errnoErr2(e Errno, e2 uintptr) error {\n+\tswitch e {\n+\tcase 0:\n+\t\treturn nil\n+\tcase EAGAIN:\n+\t\treturn errEAGAIN\n+\t\t/*\n+\t\t\tAllow the retrieval of errno2 for EINVAL and ENOENT on zos\n+\t\t\t\tcase EINVAL:\n+\t\t\t\t\treturn errEINVAL\n+\t\t\t\tcase ENOENT:\n+\t\t\t\t\treturn errENOENT\n+\t\t*/\n+\t}\n+\tif ZosTraceLevel > 0 {\n+\t\tvar name string\n+\t\tif reg == nil {\n+\t\t\treg = regexp.MustCompile(\"(^unix\\\\.[^/]+$|.*\\\\/unix\\\\.[^/]+$)\")\n+\t\t}\n+\t\ti := 1\n+\t\tpc, file, line, ok := runtime.Caller(i)\n+\t\tif ok {\n+\t\t\tname = runtime.FuncForPC(pc).Name()\n+\t\t}\n+\t\tfor ok && reg.MatchString(runtime.FuncForPC(pc).Name()) {\n+\t\t\ti += 1\n+\t\t\tpc, file, line, ok = runtime.Caller(i)\n+\t\t}\n+\t\tif ok {\n+\t\t\tif ZosTracefile == nil {\n+\t\t\t\tZosConsolePrintf(\"From %s:%d\\n\", file, line)\n+\t\t\t\tZosConsolePrintf(\"%s: %s (errno2=0x%x)\\n\", name, e.Error(), e2)\n+\t\t\t} else {\n+\t\t\t\tfmt.Fprintf(ZosTracefile, \"From %s:%d\\n\", file, line)\n+\t\t\t\tfmt.Fprintf(ZosTracefile, \"%s: %s (errno2=0x%x)\\n\", name, e.Error(), e2)\n+\t\t\t}\n+\t\t} else {\n+\t\t\tif ZosTracefile == nil {\n+\t\t\t\tZosConsolePrintf(\"%s (errno2=0x%x)\\n\", e.Error(), e2)\n+\t\t\t} else {\n+\t\t\t\tfmt.Fprintf(ZosTracefile, \"%s (errno2=0x%x)\\n\", e.Error(), e2)\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn e\n+}\n+\n // ErrnoName returns the error name for error number e.\n func ErrnoName(e Errno) string {\n \ti := sort.Search(len(errorList), func(i int) bool {\n@@ -1474,6 +2419,9 @@ func (m *mmapper) Mmap(fd int, offset int64, length int, prot int, flags int) (d\n \t\treturn nil, EINVAL\n \t}\n \n+\t// Set __MAP_64 by default\n+\tflags |= __MAP_64\n+\n \t// Map the requested memory.\n \taddr, errno := m.mmap(0, uintptr(length), prot, flags, fd, offset)\n \tif errno != nil {\n@@ -1520,14 +2468,6 @@ func (m *mmapper) Munmap(data []byte) (err error) {\n \treturn nil\n }\n \n-func Mmap(fd int, offset int64, length int, prot int, flags int) (data []byte, err error) {\n-        return mapper.Mmap(fd, offset, length, prot, flags)\n-}\n-\n-func Munmap(b []byte) (err error) {\n-        return mapper.Munmap(b)\n-}\n-\n func Read(fd int, p []byte) (n int, err error) {\n \tn, err = read(fd, p)\n \tif raceenabled {\n@@ -1786,83 +2726,170 @@ func Exec(argv0 string, argv []string, envv []string) error {\n \treturn syscall.Exec(argv0, argv, envv)\n }\n \n-func Mount(source string, target string, fstype string, flags uintptr, data string) (err error) {\n+func Getag(path string) (ccsid uint16, flag uint16, err error) {\n+\tvar val [8]byte\n+\tsz, err := Getxattr(path, \"ccsid\", val[:])\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tccsid = uint16(EncodeData(val[0:sz]))\n+\tsz, err = Getxattr(path, \"flags\", val[:])\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tflag = uint16(EncodeData(val[0:sz]) >> 15)\n+\treturn\n+}\n+\n+// Mount begin\n+func impl_Mount(source string, target string, fstype string, flags uintptr, data string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(source)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p1 *byte\n+\t_p1, err = BytePtrFromString(target)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p2 *byte\n+\t_p2, err = BytePtrFromString(fstype)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p3 *byte\n+\t_p3, err = BytePtrFromString(data)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS___MOUNT1_A<<4, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(_p1)), uintptr(unsafe.Pointer(_p2)), uintptr(flags), uintptr(unsafe.Pointer(_p3)))\n+\truntime.ExitSyscall()\n+\tif int64(r0) == -1 {\n+\t\terr = errnoErr2(e1, e2)\n+\t}\n+\treturn\n+}\n+\n+//go:nosplit\n+func get_MountAddr() *(func(source string, target string, fstype string, flags uintptr, data string) (err error))\n+\n+var Mount = enter_Mount\n+\n+func enter_Mount(source string, target string, fstype string, flags uintptr, data string) (err error) {\n+\tfuncref := get_MountAddr()\n+\tif validMount() {\n+\t\t*funcref = impl_Mount\n+\t} else {\n+\t\t*funcref = legacyMount\n+\t}\n+\treturn (*funcref)(source, target, fstype, flags, data)\n+}\n+\n+func legacyMount(source string, target string, fstype string, flags uintptr, data string) (err error) {\n \tif needspace := 8 - len(fstype); needspace <= 0 {\n-\t\tfstype = fstype[:8]\n+\t\tfstype = fstype[0:8]\n \t} else {\n-\t\tfstype += \"        \"[:needspace]\n+\t\tfstype += \"        \"[0:needspace]\n \t}\n \treturn mount_LE(target, source, fstype, uint32(flags), int32(len(data)), data)\n }\n \n-func Unmount(name string, mtm int) (err error) {\n+func validMount() bool {\n+\tif funcptrtest(GetZosLibVec()+SYS___MOUNT1_A<<4, \"\") == 0 {\n+\t\tif name, err := getLeFuncName(GetZosLibVec() + SYS___MOUNT1_A<<4); err == nil {\n+\t\t\treturn name == \"__mount1_a\"\n+\t\t}\n+\t}\n+\treturn false\n+}\n+\n+// Mount end\n+\n+// Unmount begin\n+func impl_Unmount(target string, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(target)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS___UMOUNT2_A<<4, uintptr(unsafe.Pointer(_p0)), uintptr(flags))\n+\truntime.ExitSyscall()\n+\tif int64(r0) == -1 {\n+\t\terr = errnoErr2(e1, e2)\n+\t}\n+\treturn\n+}\n+\n+//go:nosplit\n+func get_UnmountAddr() *(func(target string, flags int) (err error))\n+\n+var Unmount = enter_Unmount\n+\n+func enter_Unmount(target string, flags int) (err error) {\n+\tfuncref := get_UnmountAddr()\n+\tif funcptrtest(GetZosLibVec()+SYS___UMOUNT2_A<<4, \"\") == 0 {\n+\t\t*funcref = impl_Unmount\n+\t} else {\n+\t\t*funcref = legacyUnmount\n+\t}\n+\treturn (*funcref)(target, flags)\n+}\n+\n+func legacyUnmount(name string, mtm int) (err error) {\n \t// mountpoint is always a full path and starts with a '/'\n \t// check if input string is not a mountpoint but a filesystem name\n \tif name[0] != '/' {\n-\t\treturn unmount(name, mtm)\n+\t\treturn unmount_LE(name, mtm)\n \t}\n \t// treat name as mountpoint\n \tb2s := func(arr []byte) string {\n-\t\tnulli := bytes.IndexByte(arr, 0)\n-\t\tif nulli == -1 {\n-\t\t\treturn string(arr)\n-\t\t} else {\n-\t\t\treturn string(arr[:nulli])\n+\t\tvar str string\n+\t\tfor i := 0; i < len(arr); i++ {\n+\t\t\tif arr[i] == 0 {\n+\t\t\t\tstr = string(arr[:i])\n+\t\t\t\tbreak\n+\t\t\t}\n \t\t}\n+\t\treturn str\n \t}\n \tvar buffer struct {\n \t\theader W_Mnth\n \t\tfsinfo [64]W_Mntent\n \t}\n-\tfsCount, err := W_Getmntent_A((*byte)(unsafe.Pointer(&buffer)), int(unsafe.Sizeof(buffer)))\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\tif fsCount == 0 {\n-\t\treturn EINVAL\n-\t}\n-\tfor i := 0; i < fsCount; i++ {\n-\t\tif b2s(buffer.fsinfo[i].Mountpoint[:]) == name {\n-\t\t\terr = unmount(b2s(buffer.fsinfo[i].Fsname[:]), mtm)\n-\t\t\tbreak\n+\tfs_count, err := W_Getmntent_A((*byte)(unsafe.Pointer(&buffer)), int(unsafe.Sizeof(buffer)))\n+\tif err == nil {\n+\t\terr = EINVAL\n+\t\tfor i := 0; i < fs_count; i++ {\n+\t\t\tif b2s(buffer.fsinfo[i].Mountpoint[:]) == name {\n+\t\t\t\terr = unmount_LE(b2s(buffer.fsinfo[i].Fsname[:]), mtm)\n+\t\t\t\tbreak\n+\t\t\t}\n \t\t}\n+\t} else if fs_count == 0 {\n+\t\terr = EINVAL\n \t}\n \treturn err\n }\n \n-func fdToPath(dirfd int) (path string, err error) {\n-\tvar buffer [1024]byte\n-\t// w_ctrl()\n-\tret := runtime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS_W_IOCTL<<4,\n-\t\t[]uintptr{uintptr(dirfd), 17, 1024, uintptr(unsafe.Pointer(&buffer[0]))})\n-\tif ret == 0 {\n-\t\tzb := bytes.IndexByte(buffer[:], 0)\n-\t\tif zb == -1 {\n-\t\t\tzb = len(buffer)\n-\t\t}\n-\t\t// __e2a_l()\n-\t\truntime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS___E2A_L<<4,\n-\t\t\t[]uintptr{uintptr(unsafe.Pointer(&buffer[0])), uintptr(zb)})\n-\t\treturn string(buffer[:zb]), nil\n-\t}\n-\t// __errno()\n-\terrno := int(*(*int32)(unsafe.Pointer(runtime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS___ERRNO<<4,\n-\t\t[]uintptr{}))))\n-\t// __errno2()\n-\terrno2 := int(runtime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS___ERRNO2<<4,\n-\t\t[]uintptr{}))\n-\t// strerror_r()\n-\tret = runtime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS_STRERROR_R<<4,\n-\t\t[]uintptr{uintptr(errno), uintptr(unsafe.Pointer(&buffer[0])), 1024})\n-\tif ret == 0 {\n-\t\tzb := bytes.IndexByte(buffer[:], 0)\n-\t\tif zb == -1 {\n-\t\t\tzb = len(buffer)\n-\t\t}\n-\t\treturn \"\", fmt.Errorf(\"%s (errno2=0x%x)\", buffer[:zb], errno2)\n-\t} else {\n-\t\treturn \"\", fmt.Errorf(\"fdToPath errno %d (errno2=0x%x)\", errno, errno2)\n+// Unmount end\n+\n+func direntIno(buf []byte) (uint64, bool) {\n+\treturn readInt(buf, unsafe.Offsetof(Dirent{}.Ino), unsafe.Sizeof(Dirent{}.Ino))\n+}\n+\n+func direntReclen(buf []byte) (uint64, bool) {\n+\treturn readInt(buf, unsafe.Offsetof(Dirent{}.Reclen), unsafe.Sizeof(Dirent{}.Reclen))\n+}\n+\n+func direntNamlen(buf []byte) (uint64, bool) {\n+\treclen, ok := direntReclen(buf)\n+\tif !ok {\n+\t\treturn 0, false\n \t}\n+\treturn reclen - uint64(unsafe.Offsetof(Dirent{}.Name)), true\n }\n \n func direntLeToDirentUnix(dirent *direntLE, dir uintptr, path string) (Dirent, error) {\n@@ -1904,7 +2931,7 @@ func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {\n \t}\n \n \t// Get path from fd to avoid unavailable call (fdopendir)\n-\tpath, err := fdToPath(fd)\n+\tpath, err := ZosFdToPath(fd)\n \tif err != nil {\n \t\treturn 0, err\n \t}\n@@ -1918,7 +2945,7 @@ func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {\n \tfor {\n \t\tvar entryLE direntLE\n \t\tvar entrypLE *direntLE\n-\t\te := readdir_r(d, &entryLE, &entrypLE)\n+\t\te := Readdir_r(d, &entryLE, &entrypLE)\n \t\tif e != nil {\n \t\t\treturn n, e\n \t\t}\n@@ -1964,23 +2991,127 @@ func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {\n \treturn n, nil\n }\n \n-func ReadDirent(fd int, buf []byte) (n int, err error) {\n-\tvar base = (*uintptr)(unsafe.Pointer(new(uint64)))\n-\treturn Getdirentries(fd, buf, base)\n+func Err2ad() (eadd *int) {\n+\tr0, _, _ := CallLeFuncWithErr(GetZosLibVec() + SYS___ERR2AD<<4)\n+\teadd = (*int)(unsafe.Pointer(r0))\n+\treturn\n }\n \n-func direntIno(buf []byte) (uint64, bool) {\n-\treturn readInt(buf, unsafe.Offsetof(Dirent{}.Ino), unsafe.Sizeof(Dirent{}.Ino))\n+func ZosConsolePrintf(format string, v ...interface{}) (int, error) {\n+\ttype __cmsg struct {\n+\t\t_            uint16\n+\t\t_            [2]uint8\n+\t\t__msg_length uint32\n+\t\t__msg        uintptr\n+\t\t_            [4]uint8\n+\t}\n+\tmsg := fmt.Sprintf(format, v...)\n+\tstrptr := unsafe.Pointer((*reflect.StringHeader)(unsafe.Pointer(&msg)).Data)\n+\tlen := (*reflect.StringHeader)(unsafe.Pointer(&msg)).Len\n+\tcmsg := __cmsg{__msg_length: uint32(len), __msg: uintptr(strptr)}\n+\tcmd := uint32(0)\n+\truntime.EnterSyscall()\n+\trc, err2, err1 := CallLeFuncWithErr(GetZosLibVec()+SYS_____CONSOLE_A<<4, uintptr(unsafe.Pointer(&cmsg)), 0, uintptr(unsafe.Pointer(&cmd)))\n+\truntime.ExitSyscall()\n+\tif rc != 0 {\n+\t\treturn 0, fmt.Errorf(\"%s (errno2=0x%x)\\n\", err1.Error(), err2)\n+\t}\n+\treturn 0, nil\n+}\n+func ZosStringToEbcdicBytes(str string, nullterm bool) (ebcdicBytes []byte) {\n+\tif nullterm {\n+\t\tebcdicBytes = []byte(str + \"\\x00\")\n+\t} else {\n+\t\tebcdicBytes = []byte(str)\n+\t}\n+\tA2e(ebcdicBytes)\n+\treturn\n+}\n+func ZosEbcdicBytesToString(b []byte, trimRight bool) (str string) {\n+\tres := make([]byte, len(b))\n+\tcopy(res, b)\n+\tE2a(res)\n+\tif trimRight {\n+\t\tstr = string(bytes.TrimRight(res, \" \\x00\"))\n+\t} else {\n+\t\tstr = string(res)\n+\t}\n+\treturn\n }\n \n-func direntReclen(buf []byte) (uint64, bool) {\n-\treturn readInt(buf, unsafe.Offsetof(Dirent{}.Reclen), unsafe.Sizeof(Dirent{}.Reclen))\n+func fdToPath(dirfd int) (path string, err error) {\n+\tvar buffer [1024]byte\n+\t// w_ctrl()\n+\tret := runtime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS_W_IOCTL<<4,\n+\t\t[]uintptr{uintptr(dirfd), 17, 1024, uintptr(unsafe.Pointer(&buffer[0]))})\n+\tif ret == 0 {\n+\t\tzb := bytes.IndexByte(buffer[:], 0)\n+\t\tif zb == -1 {\n+\t\t\tzb = len(buffer)\n+\t\t}\n+\t\t// __e2a_l()\n+\t\truntime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS___E2A_L<<4,\n+\t\t\t[]uintptr{uintptr(unsafe.Pointer(&buffer[0])), uintptr(zb)})\n+\t\treturn string(buffer[:zb]), nil\n+\t}\n+\t// __errno()\n+\terrno := int(*(*int32)(unsafe.Pointer(runtime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS___ERRNO<<4,\n+\t\t[]uintptr{}))))\n+\t// __errno2()\n+\terrno2 := int(runtime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS___ERRNO2<<4,\n+\t\t[]uintptr{}))\n+\t// strerror_r()\n+\tret = runtime.CallLeFuncByPtr(runtime.XplinkLibvec+SYS_STRERROR_R<<4,\n+\t\t[]uintptr{uintptr(errno), uintptr(unsafe.Pointer(&buffer[0])), 1024})\n+\tif ret == 0 {\n+\t\tzb := bytes.IndexByte(buffer[:], 0)\n+\t\tif zb == -1 {\n+\t\t\tzb = len(buffer)\n+\t\t}\n+\t\treturn \"\", fmt.Errorf(\"%s (errno2=0x%x)\", buffer[:zb], errno2)\n+\t} else {\n+\t\treturn \"\", fmt.Errorf(\"fdToPath errno %d (errno2=0x%x)\", errno, errno2)\n+\t}\n }\n \n-func direntNamlen(buf []byte) (uint64, bool) {\n-\treclen, ok := direntReclen(buf)\n-\tif !ok {\n-\t\treturn 0, false\n+func impl_Mkfifoat(dirfd int, path string, mode uint32) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n \t}\n-\treturn reclen - uint64(unsafe.Offsetof(Dirent{}.Name)), true\n+\truntime.EnterSyscall()\n+\tr0, e2, e1 := CallLeFuncWithErr(GetZosLibVec()+SYS___MKFIFOAT_A<<4, uintptr(dirfd), uintptr(unsafe.Pointer(_p0)), uintptr(mode))\n+\truntime.ExitSyscall()\n+\tif int64(r0) == -1 {\n+\t\terr = errnoErr2(e1, e2)\n+\t}\n+\treturn\n+}\n+\n+//go:nosplit\n+func get_MkfifoatAddr() *(func(dirfd int, path string, mode uint32) (err error))\n+\n+var Mkfifoat = enter_Mkfifoat\n+\n+func enter_Mkfifoat(dirfd int, path string, mode uint32) (err error) {\n+\tfuncref := get_MkfifoatAddr()\n+\tif funcptrtest(GetZosLibVec()+SYS___MKFIFOAT_A<<4, \"\") == 0 {\n+\t\t*funcref = impl_Mkfifoat\n+\t} else {\n+\t\t*funcref = legacy_Mkfifoat\n+\t}\n+\treturn (*funcref)(dirfd, path, mode)\n+}\n+\n+func legacy_Mkfifoat(dirfd int, path string, mode uint32) (err error) {\n+\tdirname, err := ZosFdToPath(dirfd)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\treturn Mkfifo(dirname+\"/\"+path, mode)\n }\n+\n+//sys\tPosix_openpt(oflag int) (fd int, err error) = SYS_POSIX_OPENPT\n+//sys\tGrantpt(fildes int) (rc int, err error) = SYS_GRANTPT\n+//sys\tUnlockpt(fildes int) (rc int, err error) = SYS_UNLOCKPT"
    },
    {
      "sha": "672d6b0a8805d8ec9fc42fcf7a1cdca2d9b0b280",
      "filename": "backend/vendor/golang.org/x/sys/unix/sysvshm_unix.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsysvshm_unix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsysvshm_unix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsysvshm_unix.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build (darwin && !ios) || linux\n+//go:build (darwin && !ios) || linux || zos\n \n package unix\n "
    },
    {
      "sha": "8b7977a28c065d192c1780ff5efe0dc06176032c",
      "filename": "backend/vendor/golang.org/x/sys/unix/sysvshm_unix_other.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsysvshm_unix_other.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsysvshm_unix_other.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsysvshm_unix_other.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build darwin && !ios\n+//go:build (darwin && !ios) || zos\n \n package unix\n "
    },
    {
      "sha": "877a62b479a44fcbf403a9ff5dacb86881fceedc",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux.go",
      "status": "modified",
      "additions": 27,
      "deletions": 2,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -491,6 +491,7 @@ const (\n \tBPF_F_REPLACE                               = 0x4\n \tBPF_F_SLEEPABLE                             = 0x10\n \tBPF_F_STRICT_ALIGNMENT                      = 0x1\n+\tBPF_F_TEST_REG_INVARIANTS                   = 0x80\n \tBPF_F_TEST_RND_HI32                         = 0x4\n \tBPF_F_TEST_RUN_ON_CPU                       = 0x1\n \tBPF_F_TEST_STATE_FREQ                       = 0x8\n@@ -501,6 +502,7 @@ const (\n \tBPF_IMM                                     = 0x0\n \tBPF_IND                                     = 0x40\n \tBPF_JA                                      = 0x0\n+\tBPF_JCOND                                   = 0xe0\n \tBPF_JEQ                                     = 0x10\n \tBPF_JGE                                     = 0x30\n \tBPF_JGT                                     = 0x20\n@@ -656,6 +658,9 @@ const (\n \tCAN_NPROTO                                  = 0x8\n \tCAN_RAW                                     = 0x1\n \tCAN_RAW_FILTER_MAX                          = 0x200\n+\tCAN_RAW_XL_VCID_RX_FILTER                   = 0x4\n+\tCAN_RAW_XL_VCID_TX_PASS                     = 0x2\n+\tCAN_RAW_XL_VCID_TX_SET                      = 0x1\n \tCAN_RTR_FLAG                                = 0x40000000\n \tCAN_SFF_ID_BITS                             = 0xb\n \tCAN_SFF_MASK                                = 0x7ff\n@@ -1338,6 +1343,7 @@ const (\n \tF_OFD_SETLK                                 = 0x25\n \tF_OFD_SETLKW                                = 0x26\n \tF_OK                                        = 0x0\n+\tF_SEAL_EXEC                                 = 0x20\n \tF_SEAL_FUTURE_WRITE                         = 0x10\n \tF_SEAL_GROW                                 = 0x4\n \tF_SEAL_SEAL                                 = 0x1\n@@ -1626,6 +1632,7 @@ const (\n \tIP_FREEBIND                                 = 0xf\n \tIP_HDRINCL                                  = 0x3\n \tIP_IPSEC_POLICY                             = 0x10\n+\tIP_LOCAL_PORT_RANGE                         = 0x33\n \tIP_MAXPACKET                                = 0xffff\n \tIP_MAX_MEMBERSHIPS                          = 0x14\n \tIP_MF                                       = 0x2000\n@@ -1652,6 +1659,7 @@ const (\n \tIP_PMTUDISC_OMIT                            = 0x5\n \tIP_PMTUDISC_PROBE                           = 0x3\n \tIP_PMTUDISC_WANT                            = 0x1\n+\tIP_PROTOCOL                                 = 0x34\n \tIP_RECVERR                                  = 0xb\n \tIP_RECVERR_RFC4884                          = 0x1a\n \tIP_RECVFRAGSIZE                             = 0x19\n@@ -1697,6 +1705,7 @@ const (\n \tKEXEC_ARCH_S390                             = 0x160000\n \tKEXEC_ARCH_SH                               = 0x2a0000\n \tKEXEC_ARCH_X86_64                           = 0x3e0000\n+\tKEXEC_FILE_DEBUG                            = 0x8\n \tKEXEC_FILE_NO_INITRAMFS                     = 0x4\n \tKEXEC_FILE_ON_CRASH                         = 0x2\n \tKEXEC_FILE_UNLOAD                           = 0x1\n@@ -1898,6 +1907,7 @@ const (\n \tMNT_DETACH                                  = 0x2\n \tMNT_EXPIRE                                  = 0x4\n \tMNT_FORCE                                   = 0x1\n+\tMNT_ID_REQ_SIZE_VER0                        = 0x18\n \tMODULE_INIT_COMPRESSED_FILE                 = 0x4\n \tMODULE_INIT_IGNORE_MODVERSIONS              = 0x1\n \tMODULE_INIT_IGNORE_VERMAGIC                 = 0x2\n@@ -2166,7 +2176,7 @@ const (\n \tNFT_SECMARK_CTX_MAXLEN                      = 0x100\n \tNFT_SET_MAXNAMELEN                          = 0x100\n \tNFT_SOCKET_MAX                              = 0x3\n-\tNFT_TABLE_F_MASK                            = 0x3\n+\tNFT_TABLE_F_MASK                            = 0x7\n \tNFT_TABLE_MAXNAMELEN                        = 0x100\n \tNFT_TRACETYPE_MAX                           = 0x3\n \tNFT_TUNNEL_F_MASK                           = 0x7\n@@ -2302,6 +2312,7 @@ const (\n \tPERF_AUX_FLAG_PARTIAL                       = 0x4\n \tPERF_AUX_FLAG_PMU_FORMAT_TYPE_MASK          = 0xff00\n \tPERF_AUX_FLAG_TRUNCATED                     = 0x1\n+\tPERF_BRANCH_ENTRY_INFO_BITS_MAX             = 0x21\n \tPERF_BR_ARM64_DEBUG_DATA                    = 0x7\n \tPERF_BR_ARM64_DEBUG_EXIT                    = 0x5\n \tPERF_BR_ARM64_DEBUG_HALT                    = 0x4\n@@ -2399,6 +2410,7 @@ const (\n \tPERF_RECORD_MISC_USER                       = 0x2\n \tPERF_SAMPLE_BRANCH_PLM_ALL                  = 0x7\n \tPERF_SAMPLE_WEIGHT_TYPE                     = 0x1004000\n+\tPID_FS_MAGIC                                = 0x50494446\n \tPIPEFS_MAGIC                                = 0x50495045\n \tPPPIOCGNPMODE                               = 0xc008744c\n \tPPPIOCNEWUNIT                               = 0xc004743e\n@@ -2892,8 +2904,9 @@ const (\n \tRWF_APPEND                                  = 0x10\n \tRWF_DSYNC                                   = 0x2\n \tRWF_HIPRI                                   = 0x1\n+\tRWF_NOAPPEND                                = 0x20\n \tRWF_NOWAIT                                  = 0x8\n-\tRWF_SUPPORTED                               = 0x1f\n+\tRWF_SUPPORTED                               = 0x3f\n \tRWF_SYNC                                    = 0x4\n \tRWF_WRITE_LIFE_NOT_SET                      = 0x0\n \tSCHED_BATCH                                 = 0x3\n@@ -2914,7 +2927,9 @@ const (\n \tSCHED_RESET_ON_FORK                         = 0x40000000\n \tSCHED_RR                                    = 0x2\n \tSCM_CREDENTIALS                             = 0x2\n+\tSCM_PIDFD                                   = 0x4\n \tSCM_RIGHTS                                  = 0x1\n+\tSCM_SECURITY                                = 0x3\n \tSCM_TIMESTAMP                               = 0x1d\n \tSC_LOG_FLUSH                                = 0x100000\n \tSECCOMP_ADDFD_FLAG_SEND                     = 0x2\n@@ -3047,6 +3062,8 @@ const (\n \tSIOCSMIIREG                                 = 0x8949\n \tSIOCSRARP                                   = 0x8962\n \tSIOCWANDEV                                  = 0x894a\n+\tSK_DIAG_BPF_STORAGE_MAX                     = 0x3\n+\tSK_DIAG_BPF_STORAGE_REQ_MAX                 = 0x1\n \tSMACK_MAGIC                                 = 0x43415d53\n \tSMART_AUTOSAVE                              = 0xd2\n \tSMART_AUTO_OFFLINE                          = 0xdb\n@@ -3067,6 +3084,8 @@ const (\n \tSOCKFS_MAGIC                                = 0x534f434b\n \tSOCK_BUF_LOCK_MASK                          = 0x3\n \tSOCK_DCCP                                   = 0x6\n+\tSOCK_DESTROY                                = 0x15\n+\tSOCK_DIAG_BY_FAMILY                         = 0x14\n \tSOCK_IOC_TYPE                               = 0x89\n \tSOCK_PACKET                                 = 0xa\n \tSOCK_RAW                                    = 0x3\n@@ -3168,6 +3187,7 @@ const (\n \tSTATX_GID                                   = 0x10\n \tSTATX_INO                                   = 0x100\n \tSTATX_MNT_ID                                = 0x1000\n+\tSTATX_MNT_ID_UNIQUE                         = 0x4000\n \tSTATX_MODE                                  = 0x2\n \tSTATX_MTIME                                 = 0x40\n \tSTATX_NLINK                                 = 0x4\n@@ -3255,6 +3275,7 @@ const (\n \tTCP_MAX_WINSHIFT                            = 0xe\n \tTCP_MD5SIG                                  = 0xe\n \tTCP_MD5SIG_EXT                              = 0x20\n+\tTCP_MD5SIG_FLAG_IFINDEX                     = 0x2\n \tTCP_MD5SIG_FLAG_PREFIX                      = 0x1\n \tTCP_MD5SIG_MAXKEYLEN                        = 0x50\n \tTCP_MSS                                     = 0x200\n@@ -3562,12 +3583,16 @@ const (\n \tXDP_RX_RING                                 = 0x2\n \tXDP_SHARED_UMEM                             = 0x1\n \tXDP_STATISTICS                              = 0x7\n+\tXDP_TXMD_FLAGS_CHECKSUM                     = 0x2\n+\tXDP_TXMD_FLAGS_TIMESTAMP                    = 0x1\n+\tXDP_TX_METADATA                             = 0x2\n \tXDP_TX_RING                                 = 0x3\n \tXDP_UMEM_COMPLETION_RING                    = 0x6\n \tXDP_UMEM_FILL_RING                          = 0x5\n \tXDP_UMEM_PGOFF_COMPLETION_RING              = 0x180000000\n \tXDP_UMEM_PGOFF_FILL_RING                    = 0x100000000\n \tXDP_UMEM_REG                                = 0x4\n+\tXDP_UMEM_TX_SW_CSUM                         = 0x2\n \tXDP_UMEM_UNALIGNED_CHUNK_FLAG               = 0x1\n \tXDP_USE_NEED_WAKEUP                         = 0x8\n \tXDP_USE_SG                                  = 0x10"
    },
    {
      "sha": "e4bc0bd57c7c28408eba91fed4109d6e9b5510c7",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_386.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_386.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_386.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -118,6 +118,7 @@ const (\n \tIXOFF                            = 0x1000\n \tIXON                             = 0x400\n \tMAP_32BIT                        = 0x40\n+\tMAP_ABOVE4G                      = 0x80\n \tMAP_ANON                         = 0x20\n \tMAP_ANONYMOUS                    = 0x20\n \tMAP_DENYWRITE                    = 0x800"
    },
    {
      "sha": "689317afdbf3af762c2b419f5517334ba9e0ce00",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_amd64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_amd64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -118,6 +118,7 @@ const (\n \tIXOFF                            = 0x1000\n \tIXON                             = 0x400\n \tMAP_32BIT                        = 0x40\n+\tMAP_ABOVE4G                      = 0x80\n \tMAP_ANON                         = 0x20\n \tMAP_ANONYMOUS                    = 0x20\n \tMAP_DENYWRITE                    = 0x800"
    },
    {
      "sha": "14270508b040838829d7798faae7784e6fd2b7a3",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_arm64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_linux_arm64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -87,6 +87,7 @@ const (\n \tFICLONE                          = 0x40049409\n \tFICLONERANGE                     = 0x4020940d\n \tFLUSHO                           = 0x1000\n+\tFPMR_MAGIC                       = 0x46504d52\n \tFPSIMD_MAGIC                     = 0x46508001\n \tFS_IOC_ENABLE_VERITY             = 0x40806685\n \tFS_IOC_GETFLAGS                  = 0x80086601"
    },
    {
      "sha": "da08b2ab3d9390d54c8d8ccdb56eb0b458d7989f",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_zos_s390x.go",
      "status": "modified",
      "additions": 181,
      "deletions": 52,
      "changes": 233,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_zos_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_zos_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzerrors_zos_s390x.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -10,41 +10,99 @@\n package unix\n \n const (\n-\tBRKINT                          = 0x0001\n-\tCLOCK_MONOTONIC                 = 0x1\n-\tCLOCK_PROCESS_CPUTIME_ID        = 0x2\n-\tCLOCK_REALTIME                  = 0x0\n-\tCLOCK_THREAD_CPUTIME_ID         = 0x3\n-\tCS8                             = 0x0030\n-\tCSIZE                           = 0x0030\n-\tECHO                            = 0x00000008\n-\tECHONL                          = 0x00000001\n-\tFD_CLOEXEC                      = 0x01\n-\tFD_CLOFORK                      = 0x02\n-\tFNDELAY                         = 0x04\n-\tF_CLOSFD                        = 9\n-\tF_CONTROL_CVT                   = 13\n-\tF_DUPFD                         = 0\n-\tF_DUPFD2                        = 8\n-\tF_GETFD                         = 1\n-\tF_GETFL                         = 259\n-\tF_GETLK                         = 5\n-\tF_GETOWN                        = 10\n-\tF_OK                            = 0x0\n-\tF_RDLCK                         = 1\n-\tF_SETFD                         = 2\n-\tF_SETFL                         = 4\n-\tF_SETLK                         = 6\n-\tF_SETLKW                        = 7\n-\tF_SETOWN                        = 11\n-\tF_SETTAG                        = 12\n-\tF_UNLCK                         = 3\n-\tF_WRLCK                         = 2\n-\tFSTYPE_ZFS                      = 0xe9 //\"Z\"\n-\tFSTYPE_HFS                      = 0xc8 //\"H\"\n-\tFSTYPE_NFS                      = 0xd5 //\"N\"\n-\tFSTYPE_TFS                      = 0xe3 //\"T\"\n-\tFSTYPE_AUTOMOUNT                = 0xc1 //\"A\"\n+\tBRKINT                   = 0x0001\n+\tCLOCAL                   = 0x1\n+\tCLOCK_MONOTONIC          = 0x1\n+\tCLOCK_PROCESS_CPUTIME_ID = 0x2\n+\tCLOCK_REALTIME           = 0x0\n+\tCLOCK_THREAD_CPUTIME_ID  = 0x3\n+\tCLONE_NEWIPC             = 0x08000000\n+\tCLONE_NEWNET             = 0x40000000\n+\tCLONE_NEWNS              = 0x00020000\n+\tCLONE_NEWPID             = 0x20000000\n+\tCLONE_NEWUTS             = 0x04000000\n+\tCLONE_PARENT             = 0x00008000\n+\tCS8                      = 0x0030\n+\tCSIZE                    = 0x0030\n+\tECHO                     = 0x00000008\n+\tECHONL                   = 0x00000001\n+\tEFD_SEMAPHORE            = 0x00002000\n+\tEFD_CLOEXEC              = 0x00001000\n+\tEFD_NONBLOCK             = 0x00000004\n+\tEPOLL_CLOEXEC            = 0x00001000\n+\tEPOLL_CTL_ADD            = 0\n+\tEPOLL_CTL_MOD            = 1\n+\tEPOLL_CTL_DEL            = 2\n+\tEPOLLRDNORM              = 0x0001\n+\tEPOLLRDBAND              = 0x0002\n+\tEPOLLIN                  = 0x0003\n+\tEPOLLOUT                 = 0x0004\n+\tEPOLLWRBAND              = 0x0008\n+\tEPOLLPRI                 = 0x0010\n+\tEPOLLERR                 = 0x0020\n+\tEPOLLHUP                 = 0x0040\n+\tEPOLLEXCLUSIVE           = 0x20000000\n+\tEPOLLONESHOT             = 0x40000000\n+\tFD_CLOEXEC               = 0x01\n+\tFD_CLOFORK               = 0x02\n+\tFD_SETSIZE               = 0x800\n+\tFNDELAY                  = 0x04\n+\tF_CLOSFD                 = 9\n+\tF_CONTROL_CVT            = 13\n+\tF_DUPFD                  = 0\n+\tF_DUPFD2                 = 8\n+\tF_GETFD                  = 1\n+\tF_GETFL                  = 259\n+\tF_GETLK                  = 5\n+\tF_GETOWN                 = 10\n+\tF_OK                     = 0x0\n+\tF_RDLCK                  = 1\n+\tF_SETFD                  = 2\n+\tF_SETFL                  = 4\n+\tF_SETLK                  = 6\n+\tF_SETLKW                 = 7\n+\tF_SETOWN                 = 11\n+\tF_SETTAG                 = 12\n+\tF_UNLCK                  = 3\n+\tF_WRLCK                  = 2\n+\tFSTYPE_ZFS               = 0xe9 //\"Z\"\n+\tFSTYPE_HFS               = 0xc8 //\"H\"\n+\tFSTYPE_NFS               = 0xd5 //\"N\"\n+\tFSTYPE_TFS               = 0xe3 //\"T\"\n+\tFSTYPE_AUTOMOUNT         = 0xc1 //\"A\"\n+\tGRND_NONBLOCK            = 1\n+\tGRND_RANDOM              = 2\n+\tHUPCL                    = 0x0100 // Hang up on last close\n+\tIN_CLOEXEC               = 0x00001000\n+\tIN_NONBLOCK              = 0x00000004\n+\tIN_ACCESS                = 0x00000001\n+\tIN_MODIFY                = 0x00000002\n+\tIN_ATTRIB                = 0x00000004\n+\tIN_CLOSE_WRITE           = 0x00000008\n+\tIN_CLOSE_NOWRITE         = 0x00000010\n+\tIN_OPEN                  = 0x00000020\n+\tIN_MOVED_FROM            = 0x00000040\n+\tIN_MOVED_TO              = 0x00000080\n+\tIN_CREATE                = 0x00000100\n+\tIN_DELETE                = 0x00000200\n+\tIN_DELETE_SELF           = 0x00000400\n+\tIN_MOVE_SELF             = 0x00000800\n+\tIN_UNMOUNT               = 0x00002000\n+\tIN_Q_OVERFLOW            = 0x00004000\n+\tIN_IGNORED               = 0x00008000\n+\tIN_CLOSE                 = (IN_CLOSE_WRITE | IN_CLOSE_NOWRITE)\n+\tIN_MOVE                  = (IN_MOVED_FROM | IN_MOVED_TO)\n+\tIN_ALL_EVENTS            = (IN_ACCESS | IN_MODIFY | IN_ATTRIB |\n+\t\tIN_CLOSE | IN_OPEN | IN_MOVE |\n+\t\tIN_CREATE | IN_DELETE | IN_DELETE_SELF |\n+\t\tIN_MOVE_SELF)\n+\tIN_ONLYDIR                      = 0x01000000\n+\tIN_DONT_FOLLOW                  = 0x02000000\n+\tIN_EXCL_UNLINK                  = 0x04000000\n+\tIN_MASK_CREATE                  = 0x10000000\n+\tIN_MASK_ADD                     = 0x20000000\n+\tIN_ISDIR                        = 0x40000000\n+\tIN_ONESHOT                      = 0x80000000\n \tIP6F_MORE_FRAG                  = 0x0001\n \tIP6F_OFF_MASK                   = 0xfff8\n \tIP6F_RESERVED_MASK              = 0x0006\n@@ -152,10 +210,18 @@ const (\n \tIP_PKTINFO                      = 101\n \tIP_RECVPKTINFO                  = 102\n \tIP_TOS                          = 2\n-\tIP_TTL                          = 3\n+\tIP_TTL                          = 14\n \tIP_UNBLOCK_SOURCE               = 11\n+\tICMP6_FILTER                    = 1\n+\tMCAST_INCLUDE                   = 0\n+\tMCAST_EXCLUDE                   = 1\n+\tMCAST_JOIN_GROUP                = 40\n+\tMCAST_LEAVE_GROUP               = 41\n+\tMCAST_JOIN_SOURCE_GROUP         = 42\n+\tMCAST_LEAVE_SOURCE_GROUP        = 43\n+\tMCAST_BLOCK_SOURCE              = 44\n+\tMCAST_UNBLOCK_SOURCE            = 46\n \tICANON                          = 0x0010\n-\tICMP6_FILTER                    = 0x26\n \tICRNL                           = 0x0002\n \tIEXTEN                          = 0x0020\n \tIGNBRK                          = 0x0004\n@@ -165,10 +231,10 @@ const (\n \tISTRIP                          = 0x0080\n \tIXON                            = 0x0200\n \tIXOFF                           = 0x0100\n-\tLOCK_SH                         = 0x1 // Not exist on zOS\n-\tLOCK_EX                         = 0x2 // Not exist on zOS\n-\tLOCK_NB                         = 0x4 // Not exist on zOS\n-\tLOCK_UN                         = 0x8 // Not exist on zOS\n+\tLOCK_SH                         = 0x1\n+\tLOCK_EX                         = 0x2\n+\tLOCK_NB                         = 0x4\n+\tLOCK_UN                         = 0x8\n \tPOLLIN                          = 0x0003\n \tPOLLOUT                         = 0x0004\n \tPOLLPRI                         = 0x0010\n@@ -182,15 +248,29 @@ const (\n \tMAP_PRIVATE                     = 0x1 // changes are private\n \tMAP_SHARED                      = 0x2 // changes are shared\n \tMAP_FIXED                       = 0x4 // place exactly\n-\tMCAST_JOIN_GROUP                = 40\n-\tMCAST_LEAVE_GROUP               = 41\n-\tMCAST_JOIN_SOURCE_GROUP         = 42\n-\tMCAST_LEAVE_SOURCE_GROUP        = 43\n-\tMCAST_BLOCK_SOURCE              = 44\n-\tMCAST_UNBLOCK_SOURCE            = 45\n+\t__MAP_MEGA                      = 0x8\n+\t__MAP_64                        = 0x10\n+\tMAP_ANON                        = 0x20\n+\tMAP_ANONYMOUS                   = 0x20\n \tMS_SYNC                         = 0x1 // msync - synchronous writes\n \tMS_ASYNC                        = 0x2 // asynchronous writes\n \tMS_INVALIDATE                   = 0x4 // invalidate mappings\n+\tMS_BIND                         = 0x00001000\n+\tMS_MOVE                         = 0x00002000\n+\tMS_NOSUID                       = 0x00000002\n+\tMS_PRIVATE                      = 0x00040000\n+\tMS_REC                          = 0x00004000\n+\tMS_REMOUNT                      = 0x00008000\n+\tMS_RDONLY                       = 0x00000001\n+\tMS_UNBINDABLE                   = 0x00020000\n+\tMNT_DETACH                      = 0x00000004\n+\tZOSDSFS_SUPER_MAGIC             = 0x44534653 // zOS DSFS\n+\tNFS_SUPER_MAGIC                 = 0x6969     // NFS\n+\tNSFS_MAGIC                      = 0x6e736673 // PROCNS\n+\tPROC_SUPER_MAGIC                = 0x9fa0     // proc FS\n+\tZOSTFS_SUPER_MAGIC              = 0x544653   // zOS TFS\n+\tZOSUFS_SUPER_MAGIC              = 0x554653   // zOS UFS\n+\tZOSZFS_SUPER_MAGIC              = 0x5A4653   // zOS ZFS\n \tMTM_RDONLY                      = 0x80000000\n \tMTM_RDWR                        = 0x40000000\n \tMTM_UMOUNT                      = 0x10000000\n@@ -205,13 +285,20 @@ const (\n \tMTM_REMOUNT                     = 0x00000100\n \tMTM_NOSECURITY                  = 0x00000080\n \tNFDBITS                         = 0x20\n+\tONLRET                          = 0x0020 // NL performs CR function\n \tO_ACCMODE                       = 0x03\n \tO_APPEND                        = 0x08\n \tO_ASYNCSIG                      = 0x0200\n \tO_CREAT                         = 0x80\n+\tO_DIRECT                        = 0x00002000\n+\tO_NOFOLLOW                      = 0x00004000\n+\tO_DIRECTORY                     = 0x00008000\n+\tO_PATH                          = 0x00080000\n+\tO_CLOEXEC                       = 0x00001000\n \tO_EXCL                          = 0x40\n \tO_GETFL                         = 0x0F\n \tO_LARGEFILE                     = 0x0400\n+\tO_NDELAY                        = 0x4\n \tO_NONBLOCK                      = 0x04\n \tO_RDONLY                        = 0x02\n \tO_RDWR                          = 0x03\n@@ -248,6 +335,7 @@ const (\n \tAF_IUCV                         = 17\n \tAF_LAT                          = 14\n \tAF_LINK                         = 18\n+\tAF_LOCAL                        = AF_UNIX // AF_LOCAL is an alias for AF_UNIX\n \tAF_MAX                          = 30\n \tAF_NBS                          = 7\n \tAF_NDD                          = 23\n@@ -285,15 +373,33 @@ const (\n \tRLIMIT_AS                       = 5\n \tRLIMIT_NOFILE                   = 6\n \tRLIMIT_MEMLIMIT                 = 7\n+\tRLIMIT_MEMLOCK                  = 0x8\n \tRLIM_INFINITY                   = 2147483647\n+\tSCHED_FIFO                      = 0x2\n+\tSCM_CREDENTIALS                 = 0x2\n \tSCM_RIGHTS                      = 0x01\n \tSF_CLOSE                        = 0x00000002\n \tSF_REUSE                        = 0x00000001\n+\tSHM_RND                         = 0x2\n+\tSHM_RDONLY                      = 0x1\n+\tSHMLBA                          = 0x1000\n+\tIPC_STAT                        = 0x3\n+\tIPC_SET                         = 0x2\n+\tIPC_RMID                        = 0x1\n+\tIPC_PRIVATE                     = 0x0\n+\tIPC_CREAT                       = 0x1000000\n+\t__IPC_MEGA                      = 0x4000000\n+\t__IPC_SHAREAS                   = 0x20000000\n+\t__IPC_BELOWBAR                  = 0x10000000\n+\tIPC_EXCL                        = 0x2000000\n+\t__IPC_GIGA                      = 0x8000000\n \tSHUT_RD                         = 0\n \tSHUT_RDWR                       = 2\n \tSHUT_WR                         = 1\n+\tSOCK_CLOEXEC                    = 0x00001000\n \tSOCK_CONN_DGRAM                 = 6\n \tSOCK_DGRAM                      = 2\n+\tSOCK_NONBLOCK                   = 0x800\n \tSOCK_RAW                        = 3\n \tSOCK_RDM                        = 4\n \tSOCK_SEQPACKET                  = 5\n@@ -378,8 +484,6 @@ const (\n \tS_IFMST                         = 0x00FF0000\n \tTCP_KEEPALIVE                   = 0x8\n \tTCP_NODELAY                     = 0x1\n-\tTCP_INFO                        = 0xb\n-\tTCP_USER_TIMEOUT                = 0x1\n \tTIOCGWINSZ                      = 0x4008a368\n \tTIOCSWINSZ                      = 0x8008a367\n \tTIOCSBRK                        = 0x2000a77b\n@@ -427,7 +531,10 @@ const (\n \tVSUSP                           = 9\n \tVTIME                           = 10\n \tWCONTINUED                      = 0x4\n+\tWEXITED                         = 0x8\n \tWNOHANG                         = 0x1\n+\tWNOWAIT                         = 0x20\n+\tWSTOPPED                        = 0x10\n \tWUNTRACED                       = 0x2\n \t_BPX_SWAP                       = 1\n \t_BPX_NONSWAP                    = 2\n@@ -452,8 +559,28 @@ const (\n \tMADV_FREE                       = 15 // for Linux compatibility -- no zos semantics\n \tMADV_WIPEONFORK                 = 16 // for Linux compatibility -- no zos semantics\n \tMADV_KEEPONFORK                 = 17 // for Linux compatibility -- no zos semantics\n-\tAT_SYMLINK_NOFOLLOW             = 1  // for Unix  compatibility -- no zos semantics\n-\tAT_FDCWD                        = 2  // for Unix  compatibility -- no zos semantics\n+\tAT_SYMLINK_FOLLOW               = 0x400\n+\tAT_SYMLINK_NOFOLLOW             = 0x100\n+\tXATTR_CREATE                    = 0x1\n+\tXATTR_REPLACE                   = 0x2\n+\tP_PID                           = 0\n+\tP_PGID                          = 1\n+\tP_ALL                           = 2\n+\tPR_SET_NAME                     = 15\n+\tPR_GET_NAME                     = 16\n+\tPR_SET_NO_NEW_PRIVS             = 38\n+\tPR_GET_NO_NEW_PRIVS             = 39\n+\tPR_SET_DUMPABLE                 = 4\n+\tPR_GET_DUMPABLE                 = 3\n+\tPR_SET_PDEATHSIG                = 1\n+\tPR_GET_PDEATHSIG                = 2\n+\tPR_SET_CHILD_SUBREAPER          = 36\n+\tPR_GET_CHILD_SUBREAPER          = 37\n+\tAT_FDCWD                        = -100\n+\tAT_EACCESS                      = 0x200\n+\tAT_EMPTY_PATH                   = 0x1000\n+\tAT_REMOVEDIR                    = 0x200\n+\tRENAME_NOREPLACE                = 1 << 0\n )\n \n const (\n@@ -476,6 +603,7 @@ const (\n \tEMLINK             = Errno(125)\n \tENAMETOOLONG       = Errno(126)\n \tENFILE             = Errno(127)\n+\tENOATTR            = Errno(265)\n \tENODEV             = Errno(128)\n \tENOENT             = Errno(129)\n \tENOEXEC            = Errno(130)\n@@ -700,7 +828,7 @@ var errorList = [...]struct {\n \t{145, \"EDC5145I\", \"The parameter list is too long, or the message to receive was too large for the buffer.\"},\n \t{146, \"EDC5146I\", \"Too many levels of symbolic links.\"},\n \t{147, \"EDC5147I\", \"Illegal byte sequence.\"},\n-\t{148, \"\", \"\"},\n+\t{148, \"EDC5148I\", \"The named attribute or data not available.\"},\n \t{149, \"EDC5149I\", \"Value Overflow Error.\"},\n \t{150, \"EDC5150I\", \"UNIX System Services is not active.\"},\n \t{151, \"EDC5151I\", \"Dynamic allocation error.\"},\n@@ -743,6 +871,7 @@ var errorList = [...]struct {\n \t{259, \"EDC5259I\", \"A CUN_RS_NO_CONVERSION error was issued by Unicode Services.\"},\n \t{260, \"EDC5260I\", \"A CUN_RS_TABLE_NOT_ALIGNED error was issued by Unicode Services.\"},\n \t{262, \"EDC5262I\", \"An iconv() function encountered an unexpected error while using Unicode Services.\"},\n+\t{265, \"EDC5265I\", \"The named attribute not available.\"},\n \t{1000, \"EDC8000I\", \"A bad socket-call constant was found in the IUCV header.\"},\n \t{1001, \"EDC8001I\", \"An error was found in the IUCV header.\"},\n \t{1002, \"EDC8002I\", \"A socket descriptor is out of range.\"},"
    },
    {
      "sha": "b77ff5db90d5140bd5a9f7fedf590d4a90725101",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsymaddr_zos_s390x.s",
      "status": "added",
      "additions": 364,
      "deletions": 0,
      "changes": 364,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsymaddr_zos_s390x.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsymaddr_zos_s390x.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsymaddr_zos_s390x.s?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -0,0 +1,364 @@\n+// go run mksyscall_zos_s390x.go -o_sysnum zsysnum_zos_s390x.go -o_syscall zsyscall_zos_s390x.go -i_syscall syscall_zos_s390x.go -o_asm zsymaddr_zos_s390x.s\n+// Code generated by the command above; see README.md. DO NOT EDIT.\n+\n+//go:build zos && s390x\n+#include \"textflag.h\"\n+\n+//  provide the address of function variable to be fixed up.\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_FlistxattrAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Flistxattr(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_FremovexattrAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Fremovexattr(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_FgetxattrAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Fgetxattr(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_FsetxattrAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Fsetxattr(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_accept4Addr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·accept4(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_RemovexattrAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Removexattr(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_Dup3Addr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Dup3(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_DirfdAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Dirfd(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_EpollCreateAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·EpollCreate(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_EpollCreate1Addr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·EpollCreate1(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_EpollCtlAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·EpollCtl(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_EpollPwaitAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·EpollPwait(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_EpollWaitAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·EpollWait(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_EventfdAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Eventfd(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_FaccessatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Faccessat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_FchmodatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Fchmodat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_FchownatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Fchownat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_FdatasyncAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Fdatasync(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_fstatatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·fstatat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_LgetxattrAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Lgetxattr(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_LsetxattrAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Lsetxattr(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_FstatfsAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Fstatfs(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_FutimesAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Futimes(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_FutimesatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Futimesat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_GetrandomAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Getrandom(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_InotifyInitAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·InotifyInit(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_InotifyInit1Addr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·InotifyInit1(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_InotifyAddWatchAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·InotifyAddWatch(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_InotifyRmWatchAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·InotifyRmWatch(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_ListxattrAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Listxattr(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_LlistxattrAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Llistxattr(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_LremovexattrAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Lremovexattr(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_LutimesAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Lutimes(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_StatfsAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Statfs(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_SyncfsAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Syncfs(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_UnshareAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Unshare(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_LinkatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Linkat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_MkdiratAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Mkdirat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_MknodatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Mknodat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_PivotRootAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·PivotRoot(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_PrctlAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Prctl(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_PrlimitAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Prlimit(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_RenameatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Renameat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_Renameat2Addr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Renameat2(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_SethostnameAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Sethostname(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_SetnsAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Setns(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_SymlinkatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Symlinkat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_UnlinkatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·Unlinkat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_openatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·openat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_openat2Addr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·openat2(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+TEXT ·get_utimensatAddr(SB), NOSPLIT|NOFRAME, $0-8\n+\tMOVD $·utimensat(SB), R8\n+\tMOVD R8, ret+0(FP)\n+\tRET"
    },
    {
      "sha": "07642c308d3aa87af51068b91ab4f58c213d5cee",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_darwin_amd64.go",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_amd64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -760,6 +760,39 @@ var libc_sysctl_trampoline_addr uintptr\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func pthread_chdir_np(path string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := syscall_syscall(libc_pthread_chdir_np_trampoline_addr, uintptr(unsafe.Pointer(_p0)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+var libc_pthread_chdir_np_trampoline_addr uintptr\n+\n+//go:cgo_import_dynamic libc_pthread_chdir_np pthread_chdir_np \"/usr/lib/libSystem.B.dylib\"\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func pthread_fchdir_np(fd int) (err error) {\n+\t_, _, e1 := syscall_syscall(libc_pthread_fchdir_np_trampoline_addr, uintptr(fd), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+var libc_pthread_fchdir_np_trampoline_addr uintptr\n+\n+//go:cgo_import_dynamic libc_pthread_fchdir_np pthread_fchdir_np \"/usr/lib/libSystem.B.dylib\"\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func sendfile(infd int, outfd int, offset int64, len *int64, hdtr unsafe.Pointer, flags int) (err error) {\n \t_, _, e1 := syscall_syscall6(libc_sendfile_trampoline_addr, uintptr(infd), uintptr(outfd), uintptr(offset), uintptr(unsafe.Pointer(len)), uintptr(hdtr), uintptr(flags))\n \tif e1 != 0 {"
    },
    {
      "sha": "923e08cb7924cf8aaca4d31a8ab3708e61510e6d",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_darwin_amd64.s",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_amd64.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_amd64.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_amd64.s?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -228,6 +228,16 @@ TEXT libc_sysctl_trampoline<>(SB),NOSPLIT,$0-0\n GLOBL\t·libc_sysctl_trampoline_addr(SB), RODATA, $8\n DATA\t·libc_sysctl_trampoline_addr(SB)/8, $libc_sysctl_trampoline<>(SB)\n \n+TEXT libc_pthread_chdir_np_trampoline<>(SB),NOSPLIT,$0-0\n+\tJMP\tlibc_pthread_chdir_np(SB)\n+GLOBL\t·libc_pthread_chdir_np_trampoline_addr(SB), RODATA, $8\n+DATA\t·libc_pthread_chdir_np_trampoline_addr(SB)/8, $libc_pthread_chdir_np_trampoline<>(SB)\n+\n+TEXT libc_pthread_fchdir_np_trampoline<>(SB),NOSPLIT,$0-0\n+\tJMP\tlibc_pthread_fchdir_np(SB)\n+GLOBL\t·libc_pthread_fchdir_np_trampoline_addr(SB), RODATA, $8\n+DATA\t·libc_pthread_fchdir_np_trampoline_addr(SB)/8, $libc_pthread_fchdir_np_trampoline<>(SB)\n+\n TEXT libc_sendfile_trampoline<>(SB),NOSPLIT,$0-0\n \tJMP\tlibc_sendfile(SB)\n GLOBL\t·libc_sendfile_trampoline_addr(SB), RODATA, $8"
    },
    {
      "sha": "7d73dda64733ccdfced79148a1c5d4db3037d877",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_darwin_arm64.go",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_arm64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -760,6 +760,39 @@ var libc_sysctl_trampoline_addr uintptr\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func pthread_chdir_np(path string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := syscall_syscall(libc_pthread_chdir_np_trampoline_addr, uintptr(unsafe.Pointer(_p0)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+var libc_pthread_chdir_np_trampoline_addr uintptr\n+\n+//go:cgo_import_dynamic libc_pthread_chdir_np pthread_chdir_np \"/usr/lib/libSystem.B.dylib\"\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func pthread_fchdir_np(fd int) (err error) {\n+\t_, _, e1 := syscall_syscall(libc_pthread_fchdir_np_trampoline_addr, uintptr(fd), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+var libc_pthread_fchdir_np_trampoline_addr uintptr\n+\n+//go:cgo_import_dynamic libc_pthread_fchdir_np pthread_fchdir_np \"/usr/lib/libSystem.B.dylib\"\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func sendfile(infd int, outfd int, offset int64, len *int64, hdtr unsafe.Pointer, flags int) (err error) {\n \t_, _, e1 := syscall_syscall6(libc_sendfile_trampoline_addr, uintptr(infd), uintptr(outfd), uintptr(offset), uintptr(unsafe.Pointer(len)), uintptr(hdtr), uintptr(flags))\n \tif e1 != 0 {"
    },
    {
      "sha": "057700111e74658d543c58c4d1aff1dbef6da5ac",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_darwin_arm64.s",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_arm64.s",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_arm64.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_darwin_arm64.s?ref=a9b439602b094a694c30d4de47056f3fa2ed9734",
      "patch": "@@ -228,6 +228,16 @@ TEXT libc_sysctl_trampoline<>(SB),NOSPLIT,$0-0\n GLOBL\t·libc_sysctl_trampoline_addr(SB), RODATA, $8\n DATA\t·libc_sysctl_trampoline_addr(SB)/8, $libc_sysctl_trampoline<>(SB)\n \n+TEXT libc_pthread_chdir_np_trampoline<>(SB),NOSPLIT,$0-0\n+\tJMP\tlibc_pthread_chdir_np(SB)\n+GLOBL\t·libc_pthread_chdir_np_trampoline_addr(SB), RODATA, $8\n+DATA\t·libc_pthread_chdir_np_trampoline_addr(SB)/8, $libc_pthread_chdir_np_trampoline<>(SB)\n+\n+TEXT libc_pthread_fchdir_np_trampoline<>(SB),NOSPLIT,$0-0\n+\tJMP\tlibc_pthread_fchdir_np(SB)\n+GLOBL\t·libc_pthread_fchdir_np_trampoline_addr(SB), RODATA, $8\n+DATA\t·libc_pthread_fchdir_np_trampoline_addr(SB)/8, $libc_pthread_fchdir_np_trampoline<>(SB)\n+\n TEXT libc_sendfile_trampoline<>(SB),NOSPLIT,$0-0\n \tJMP\tlibc_sendfile(SB)\n GLOBL\t·libc_sendfile_trampoline_addr(SB), RODATA, $8"
    },
    {
      "sha": "7ccf66b7ee0d66a551ba032e4180d0f0061c132f",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_zos_s390x.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_zos_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_zos_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsyscall_zos_s390x.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "53aef5dc58df2f9816bf2c30c65cd3b4b1191497",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_386.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_386.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_386.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "71d524763d343c219079be9adefe912bfa3d328c",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_amd64.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_amd64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "c747706131cbbac79bb90ff80d96a04940452e8e",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_arm.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_arm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_arm.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "f96e214f6d408635d51ae75f3dde8d61adec3d57",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_arm64.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_arm64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "28425346cf180f072966a5c82135652e366c9db1",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_loong64.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_loong64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_loong64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_loong64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "d0953018dae086c0c3e0ff4edf1ea5a698565c0b",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_mips.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_mips.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_mips.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_mips.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "295c7f4b818490aab8c7b968adb2870b0ea17177",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_mips64.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_mips64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_mips64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_mips64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "d1a9eaca7a4183fafbb3fa04efa991ce1caa2ef4",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_mips64le.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_mips64le.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_mips64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_mips64le.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "bec157c39fd0fec951156f24f63ca7b0d672d489",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_mipsle.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_mipsle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_mipsle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_mipsle.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "7ee7bdc435cf8d6a39f6c4a8e098ecfcbea7c315",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_ppc.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_ppc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_ppc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_ppc.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "fad1f25b449d658e08a06eba85dbc8a4cafa2fab",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_ppc64.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_ppc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_ppc64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "7d3e16357d61f6c9f180f70c71d150801259a1f0",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_ppc64le.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_ppc64le.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_ppc64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_ppc64le.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "0ed53ad9f7e9b861b5c95452383211407bdec270",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_riscv64.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_riscv64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_riscv64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "2fba04ad50062896da1d0dce1ca9259a77433af8",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_s390x.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_s390x.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "621d00d741bf6ebb42b8a8c4d9e9e2b83f0dae0d",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_sparc64.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_sparc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_sparc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_linux_sparc64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "5e8c263ca9c6f77d8f2efc5e783e21c839d68f08",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_zos_s390x.go",
      "status": "modified",
      "additions": 2845,
      "deletions": 2662,
      "changes": 5507,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_zos_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_zos_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fzsysnum_zos_s390x.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "4740b834854bdd614b680a682aa22a3252f21c11",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux.go",
      "status": "modified",
      "additions": 50,
      "deletions": 9,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "fd402da43fce18a993f6ec554d7936594abbeedf",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_386.go",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_386.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_386.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "eb7a5e1864adae057314f1a4007adcabe376a202",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_amd64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_amd64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_amd64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "d78ac108b6c263fa7466ced80303c7838745d75a",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_arm.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_arm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_arm.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "cd06d47f1f7c76e70ca481f25b17aa5b3c0b0c02",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_arm64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_arm64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "2f28fe26c1a533d7d5b988c6615163e0c26d3c15",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_loong64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_loong64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_loong64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_loong64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "71d6cac2f1aabdb4c4d01c529cb81cd1a23d8cf6",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "8596d45356387339625784fe527ce211010f5177",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "cd60ea18662bfc9389fc47b21247438f8ae066b4",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips64le.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips64le.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mips64le.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "b0ae420c489d6bbd779af1654ce3c8de9456a03f",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_mipsle.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mipsle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mipsle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_mipsle.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "8359728759bcfd3056781eea34bda15f2baad939",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "69eb6a5c6892f527b6bdac2424915de142d6125c",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "5f583cb62bf304c9d82386aad07e8c481df6183b",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64le.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc64le.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_ppc64le.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "15adc04142f2b5a8cd2248839c4732b07626f53e",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_riscv64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_riscv64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_riscv64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "cf3ce90037704d303eadbfebdb87edb0de4c3d6a",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_s390x.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_s390x.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "590b56739c5b3356de134089d3c26e64f8f5dd95",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_sparc64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_sparc64.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_sparc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_linux_sparc64.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "d9a13af4684b0c370ba506917d95659e782194dc",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_zos_s390x.go",
      "status": "modified",
      "additions": 139,
      "deletions": 7,
      "changes": 146,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_zos_s390x.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_zos_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fztypes_zos_s390x.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "16f90560a23abf1723632cca5266995c29aaf4a9",
      "filename": "backend/vendor/golang.org/x/sys/windows/aliases.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Faliases.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Faliases.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Faliases.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "ba64caca5d3587a9d8ad145aef1cca247ca2d190",
      "filename": "backend/vendor/golang.org/x/sys/windows/empty.s",
      "status": "removed",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fempty.s",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fempty.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fempty.s?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "fd8632444ec243612f21ef136ce20c7b38796ede",
      "filename": "backend/vendor/golang.org/x/sys/windows/registry/key.go",
      "status": "added",
      "additions": 205,
      "deletions": 0,
      "changes": 205,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fkey.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fkey.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fkey.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "bbf86ccf0c05f774361a9d606c6384e1f49164ae",
      "filename": "backend/vendor/golang.org/x/sys/windows/registry/mksyscall.go",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fmksyscall.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fmksyscall.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fmksyscall.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "f533091c19ef16f174807c445600cd2b019e7210",
      "filename": "backend/vendor/golang.org/x/sys/windows/registry/syscall.go",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fsyscall.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fsyscall.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fsyscall.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "74db26b94dfaab59ad0dbe41f1b8b4a4faf88ceb",
      "filename": "backend/vendor/golang.org/x/sys/windows/registry/value.go",
      "status": "added",
      "additions": 386,
      "deletions": 0,
      "changes": 386,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fvalue.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fvalue.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fvalue.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "fc1835d8a233aaa12be8eaabb134e9ae1b420002",
      "filename": "backend/vendor/golang.org/x/sys/windows/registry/zsyscall_windows.go",
      "status": "added",
      "additions": 117,
      "deletions": 0,
      "changes": 117,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fzsyscall_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fzsyscall_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fregistry%2Fzsyscall_windows.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "97651b5bd04bfa850b4df3cd670b643249d10e33",
      "filename": "backend/vendor/golang.org/x/sys/windows/security_windows.go",
      "status": "modified",
      "additions": 24,
      "deletions": 1,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsecurity_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsecurity_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fsecurity_windows.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "eba761018aafe82957b5a91925c986aa8f39c72d",
      "filename": "backend/vendor/golang.org/x/sys/windows/zsyscall_windows.go",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fzsyscall_windows.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a9b439602b094a694c30d4de47056f3fa2ed9734/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fzsyscall_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Fwindows%2Fzsyscall_windows.go?ref=a9b439602b094a694c30d4de47056f3fa2ed9734"
    },
    {
      "sha": "289693613cccd36e4cce2c8f7bf1276b6e1408d3",
      "filename": "backend/vendor/google.golang.org/appengine/CONTRIBUTING.md",
      "status": "removed",
      "additions": 0,
      "deletions": 88,
      "changes": 88,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2FCONTRIBUTING.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2FCONTRIBUTING.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2FCONTRIBUTING.md?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "d645695673349e3947e8e5ae42332d0ac3164cd7",
      "filename": "backend/vendor/google.golang.org/appengine/LICENSE",
      "status": "removed",
      "additions": 0,
      "deletions": 202,
      "changes": 202,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2FLICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2FLICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2FLICENSE?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "5ccddd9990dd8e17701c9f99a74b16487e0c0e62",
      "filename": "backend/vendor/google.golang.org/appengine/README.md",
      "status": "removed",
      "additions": 0,
      "deletions": 100,
      "changes": 100,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2FREADME.md?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "35ba9c896766db21056ccd4ef2f72e294c365f50",
      "filename": "backend/vendor/google.golang.org/appengine/appengine.go",
      "status": "removed",
      "additions": 0,
      "deletions": 138,
      "changes": 138,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Fappengine.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Fappengine.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Fappengine.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "6e1d041cd95be9d75a812467e26b5b1ea3f39ded",
      "filename": "backend/vendor/google.golang.org/appengine/appengine_vm.go",
      "status": "removed",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Fappengine_vm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Fappengine_vm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Fappengine_vm.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "16d0772e2a46b834472dd984aa515a6a05699b90",
      "filename": "backend/vendor/google.golang.org/appengine/errors.go",
      "status": "removed",
      "additions": 0,
      "deletions": 46,
      "changes": 46,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Ferrors.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Ferrors.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Ferrors.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "1202fc1a5317c7846c9744035427429a0ee0b5f2",
      "filename": "backend/vendor/google.golang.org/appengine/identity.go",
      "status": "removed",
      "additions": 0,
      "deletions": 141,
      "changes": 141,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Fidentity.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Fidentity.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Fidentity.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "0569f5dd43e4901e8f0c4bdf10d423890897da21",
      "filename": "backend/vendor/google.golang.org/appengine/internal/api.go",
      "status": "removed",
      "additions": 0,
      "deletions": 653,
      "changes": 653,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapi.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapi.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapi.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "87c33c798e879e3f6e6f1aa13285078c1bc64f2a",
      "filename": "backend/vendor/google.golang.org/appengine/internal/api_classic.go",
      "status": "removed",
      "additions": 0,
      "deletions": 170,
      "changes": 170,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapi_classic.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapi_classic.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapi_classic.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "5b95c13d92661dcef5049765bb54196428e12429",
      "filename": "backend/vendor/google.golang.org/appengine/internal/api_common.go",
      "status": "removed",
      "additions": 0,
      "deletions": 141,
      "changes": 141,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapi_common.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapi_common.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapi_common.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "11df8c07b53863dc159518a47ee5b906bdc7c4f1",
      "filename": "backend/vendor/google.golang.org/appengine/internal/app_id.go",
      "status": "removed",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapp_id.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapp_id.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapp_id.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "9a2ff77ab5d46b26a1f9b757cdb2e0e7be5748b6",
      "filename": "backend/vendor/google.golang.org/appengine/internal/app_identity/app_identity_service.pb.go",
      "status": "removed",
      "additions": 0,
      "deletions": 611,
      "changes": 611,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapp_identity%2Fapp_identity_service.pb.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapp_identity%2Fapp_identity_service.pb.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapp_identity%2Fapp_identity_service.pb.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "19610ca5b753fb4ff69a8c6a565fa192827b571c",
      "filename": "backend/vendor/google.golang.org/appengine/internal/app_identity/app_identity_service.proto",
      "status": "removed",
      "additions": 0,
      "deletions": 64,
      "changes": 64,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapp_identity%2Fapp_identity_service.proto",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapp_identity%2Fapp_identity_service.proto",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fapp_identity%2Fapp_identity_service.proto?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "db4777e68e5b4082a54dcea89544d18c5ec9f84c",
      "filename": "backend/vendor/google.golang.org/appengine/internal/base/api_base.pb.go",
      "status": "removed",
      "additions": 0,
      "deletions": 308,
      "changes": 308,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fbase%2Fapi_base.pb.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fbase%2Fapi_base.pb.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fbase%2Fapi_base.pb.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "56cd7a3cad05e290f84a97ce8d55ffd4d1a6e299",
      "filename": "backend/vendor/google.golang.org/appengine/internal/base/api_base.proto",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fbase%2Fapi_base.proto",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fbase%2Fapi_base.proto",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fbase%2Fapi_base.proto?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "2fb74828969cc1688ce0f52b13d063446335bd41",
      "filename": "backend/vendor/google.golang.org/appengine/internal/datastore/datastore_v3.pb.go",
      "status": "removed",
      "additions": 0,
      "deletions": 4367,
      "changes": 4367,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fdatastore%2Fdatastore_v3.pb.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fdatastore%2Fdatastore_v3.pb.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fdatastore%2Fdatastore_v3.pb.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "497b4d9a9af51b2bf31ce2a11cc145e4f09d272a",
      "filename": "backend/vendor/google.golang.org/appengine/internal/datastore/datastore_v3.proto",
      "status": "removed",
      "additions": 0,
      "deletions": 551,
      "changes": 551,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fdatastore%2Fdatastore_v3.proto",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fdatastore%2Fdatastore_v3.proto",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fdatastore%2Fdatastore_v3.proto?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "0f95aa91d5bc63910cccbb3e2c7af1371b845ecd",
      "filename": "backend/vendor/google.golang.org/appengine/internal/identity.go",
      "status": "removed",
      "additions": 0,
      "deletions": 54,
      "changes": 54,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fidentity.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fidentity.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fidentity.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "5ad3548bf7416fc6f2bf7db9ef9dd0666ceb720f",
      "filename": "backend/vendor/google.golang.org/appengine/internal/identity_classic.go",
      "status": "removed",
      "additions": 0,
      "deletions": 62,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fidentity_classic.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fidentity_classic.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fidentity_classic.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "4201b6b585a69e441b57d06237f77ca51b67cefc",
      "filename": "backend/vendor/google.golang.org/appengine/internal/identity_flex.go",
      "status": "removed",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fidentity_flex.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fidentity_flex.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fidentity_flex.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "18ddda3a4235e63c3fd6fe675e63c685f70d70d9",
      "filename": "backend/vendor/google.golang.org/appengine/internal/identity_vm.go",
      "status": "removed",
      "additions": 0,
      "deletions": 134,
      "changes": 134,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fidentity_vm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fidentity_vm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fidentity_vm.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "051ea3980abe4d4e189dbc1b64b1c9c80a3844f4",
      "filename": "backend/vendor/google.golang.org/appengine/internal/internal.go",
      "status": "removed",
      "additions": 0,
      "deletions": 110,
      "changes": 110,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Finternal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Finternal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Finternal.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "8545ac4ad6abbbb60cfd033497e4278b28533262",
      "filename": "backend/vendor/google.golang.org/appengine/internal/log/log_service.pb.go",
      "status": "removed",
      "additions": 0,
      "deletions": 1313,
      "changes": 1313,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Flog%2Flog_service.pb.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Flog%2Flog_service.pb.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Flog%2Flog_service.pb.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "8981dc47577cedcbd5ac1fe11d698c3db24b5d45",
      "filename": "backend/vendor/google.golang.org/appengine/internal/log/log_service.proto",
      "status": "removed",
      "additions": 0,
      "deletions": 150,
      "changes": 150,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Flog%2Flog_service.proto",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Flog%2Flog_service.proto",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Flog%2Flog_service.proto?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "afd0ae84fdfbf828eb00e90181d1f648220695d4",
      "filename": "backend/vendor/google.golang.org/appengine/internal/main.go",
      "status": "removed",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmain.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmain.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmain.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "357dce4dd01298c4f10ff9856cc2469dc4f8831e",
      "filename": "backend/vendor/google.golang.org/appengine/internal/main_common.go",
      "status": "removed",
      "additions": 0,
      "deletions": 7,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmain_common.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmain_common.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmain_common.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "86a8caf06f31ae4cf2b2e913ffd8789f24252e48",
      "filename": "backend/vendor/google.golang.org/appengine/internal/main_vm.go",
      "status": "removed",
      "additions": 0,
      "deletions": 70,
      "changes": 70,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmain_vm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmain_vm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmain_vm.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "c4ba63bb4819f4b865805beb1bfa6d29ac88d732",
      "filename": "backend/vendor/google.golang.org/appengine/internal/metadata.go",
      "status": "removed",
      "additions": 0,
      "deletions": 60,
      "changes": 60,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmetadata.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmetadata.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmetadata.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "ddfc0c04a1263d9c90dff0e913425afa81c76ab6",
      "filename": "backend/vendor/google.golang.org/appengine/internal/modules/modules_service.pb.go",
      "status": "removed",
      "additions": 0,
      "deletions": 786,
      "changes": 786,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmodules%2Fmodules_service.pb.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmodules%2Fmodules_service.pb.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmodules%2Fmodules_service.pb.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "d29f0065a2f807b59ec5e3a6a381137ec54acc3d",
      "filename": "backend/vendor/google.golang.org/appengine/internal/modules/modules_service.proto",
      "status": "removed",
      "additions": 0,
      "deletions": 80,
      "changes": 80,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmodules%2Fmodules_service.proto",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmodules%2Fmodules_service.proto",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fmodules%2Fmodules_service.proto?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "fe429720e1f25d9e65982c3a4f0cd605913225ed",
      "filename": "backend/vendor/google.golang.org/appengine/internal/net.go",
      "status": "removed",
      "additions": 0,
      "deletions": 56,
      "changes": 56,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fnet.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fnet.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fnet.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "2fdb546a63335a08a0c82688066c80291a02a112",
      "filename": "backend/vendor/google.golang.org/appengine/internal/regen.sh",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fregen.sh",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fregen.sh",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fregen.sh?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "8d782a38e172d9fed7b26716ab699f69d33d572b",
      "filename": "backend/vendor/google.golang.org/appengine/internal/remote_api/remote_api.pb.go",
      "status": "removed",
      "additions": 0,
      "deletions": 361,
      "changes": 361,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fremote_api%2Fremote_api.pb.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fremote_api%2Fremote_api.pb.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fremote_api%2Fremote_api.pb.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "f21763a4e239ad1ef2daf053725b521d7989e71a",
      "filename": "backend/vendor/google.golang.org/appengine/internal/remote_api/remote_api.proto",
      "status": "removed",
      "additions": 0,
      "deletions": 44,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fremote_api%2Fremote_api.proto",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fremote_api%2Fremote_api.proto",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Fremote_api%2Fremote_api.proto?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "2ae8ab9fa4212906bc48c88d8970aef96d9b4957",
      "filename": "backend/vendor/google.golang.org/appengine/internal/transaction.go",
      "status": "removed",
      "additions": 0,
      "deletions": 115,
      "changes": 115,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Ftransaction.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Ftransaction.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Ftransaction.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "5f727750adc7c8b82f6b92298ec5f1c1b5afe3a1",
      "filename": "backend/vendor/google.golang.org/appengine/internal/urlfetch/urlfetch_service.pb.go",
      "status": "removed",
      "additions": 0,
      "deletions": 527,
      "changes": 527,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Furlfetch%2Furlfetch_service.pb.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Furlfetch%2Furlfetch_service.pb.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Furlfetch%2Furlfetch_service.pb.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "f695edf6a9071962db5f1297c5df0459b1431baa",
      "filename": "backend/vendor/google.golang.org/appengine/internal/urlfetch/urlfetch_service.proto",
      "status": "removed",
      "additions": 0,
      "deletions": 64,
      "changes": 64,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Furlfetch%2Furlfetch_service.proto",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Furlfetch%2Furlfetch_service.proto",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Finternal%2Furlfetch%2Furlfetch_service.proto?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "6f169be487d620542ef576de641e183ec20018c5",
      "filename": "backend/vendor/google.golang.org/appengine/namespace.go",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Fnamespace.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Fnamespace.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Fnamespace.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "fcf3ad0a58f11857a0e7d5f36a430e1576d2ce37",
      "filename": "backend/vendor/google.golang.org/appengine/timeout.go",
      "status": "removed",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Ftimeout.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Ftimeout.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Ftimeout.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "6c0d72418d890b90e3834887cc8a7691dfd03422",
      "filename": "backend/vendor/google.golang.org/appengine/urlfetch/urlfetch.go",
      "status": "removed",
      "additions": 0,
      "deletions": 209,
      "changes": 209,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Furlfetch%2Furlfetch.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Furlfetch%2Furlfetch.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fappengine%2Furlfetch%2Furlfetch.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "49ea0f928825ac4339299665088d332ac9953476",
      "filename": "backend/vendor/google.golang.org/protobuf/LICENSE",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2FLICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2FLICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2FLICENSE?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "733099041f84fa1e58611ab2e11af51c1f26d1d2",
      "filename": "backend/vendor/google.golang.org/protobuf/PATENTS",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2FPATENTS",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2FPATENTS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2FPATENTS?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "a45f112bce304bb05f41375fcbe1408abd8418c4",
      "filename": "backend/vendor/google.golang.org/protobuf/encoding/prototext/decode.go",
      "status": "removed",
      "additions": 0,
      "deletions": 772,
      "changes": 772,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fdecode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fdecode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fdecode.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "162b4f98a41fda4ccbb51a9a9d1b6c753c77c7de",
      "filename": "backend/vendor/google.golang.org/protobuf/encoding/prototext/doc.go",
      "status": "removed",
      "additions": 0,
      "deletions": 7,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fdoc.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    },
    {
      "sha": "95967e8112a7c2050d039568010f9daebbb72987",
      "filename": "backend/vendor/google.golang.org/protobuf/encoding/prototext/encode.go",
      "status": "removed",
      "additions": 0,
      "deletions": 376,
      "changes": 376,
      "blob_url": "https://github.com/umputun/remark42/blob/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fencode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/d2027f52415a58c0ff7fada15a28d31661170015/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fencode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgoogle.golang.org%2Fprotobuf%2Fencoding%2Fprototext%2Fencode.go?ref=d2027f52415a58c0ff7fada15a28d31661170015"
    }
  ]
}
