{
  "sha": "37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
  "node_id": "C_kwDOCQOkhNoAKDM3ZDRjYTc2ZmE3MmUwZmViMGI1N2IzYTY1NmZhMzJiZjZhMTk5YjI",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2023-10-30T11:29:14Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2023-10-30T11:50:32Z"
    },
    "message": "refactor(ui): reduce coupling with `ContextApi`",
    "tree": {
      "sha": "a8560f0b1144a516b9ad5038080175e0d5bf8b13",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/a8560f0b1144a516b9ad5038080175e0d5bf8b13"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZT+YiAAKCRDUbg8O6nwT\naovkAQDafIYTrHpZse/Mv0PYk7KqphiJw2rOVzLio33iN4InOQD/c7oYuVF4tFGi\nbM7A77oKTsByq6AltSLm1HNDnspKRw4=\n=PrFn\n-----END PGP SIGNATURE-----",
      "payload": "tree a8560f0b1144a516b9ad5038080175e0d5bf8b13\nparent 8cc39f322cfce74a2e0cb138dcf4a35ac8410c30\nauthor qwqcode <qwqcode@gmail.com> 1698665354 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1698666632 +0800\n\nrefactor(ui): reduce coupling with `ContextApi`\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8cc39f322cfce74a2e0cb138dcf4a35ac8410c30",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/8cc39f322cfce74a2e0cb138dcf4a35ac8410c30",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/8cc39f322cfce74a2e0cb138dcf4a35ac8410c30"
    }
  ],
  "stats": {
    "total": 369,
    "additions": 195,
    "deletions": 174
  },
  "files": [
    {
      "sha": "01dfca554486efb25558ac9cffa71ae4f607ad9f",
      "filename": "ui/packages/artalk-sidebar/src/pages/comments.vue",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk-sidebar%2Fsrc%2Fpages%2Fcomments.vue",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk-sidebar%2Fsrc%2Fpages%2Fcomments.vue",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk-sidebar%2Fsrc%2Fpages%2Fcomments.vue?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -62,8 +62,11 @@ onMounted(() => {\n   artalk!.reload()\n \n   const $el = artalk!.ctx.get('list')!.$el\n-  $el.querySelector<HTMLElement>('.atk-list-header')!.style.display = 'none'\n-  $el.querySelector<HTMLElement>('.atk-list-footer')!.style.display = 'none'\n+\n+  // @ts-ignore\n+  $el.querySelector<HTMLElement>('.atk-list-header').style.display = 'none'\n+  // @ts-ignore\n+  $el.querySelector<HTMLElement>('.atk-list-footer').style.display = 'none'\n \n   listEl.value?.append($el)\n "
    },
    {
      "sha": "09e69478b67cb2361dcdebd4f7a48df86a5f1f44",
      "filename": "ui/packages/artalk/src/comment/comment.ts",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Fcomment.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Fcomment.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Fcomment.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -159,7 +159,11 @@ export default class Comment extends Component {\n \n   /** 获取 Gravatar 头像 URL */\n   public getGravatarURL() {\n-    return Utils.getGravatarURL(this.ctx, this.data.email_encrypted)\n+    return Utils.getGravatarURL({\n+      mirror: this.ctx.conf.gravatar.mirror,\n+      params: this.ctx.conf.gravatar.params,\n+      emailMD5: this.data.email_encrypted,\n+    })\n   }\n \n   /** 获取评论 markdown 解析后的内容 */\n@@ -169,7 +173,7 @@ export default class Comment extends Component {\n \n   /** 获取格式化后的日期 */\n   public getDateFormatted() {\n-    return Utils.timeAgo(new Date(this.data.date), this.ctx)\n+    return Utils.timeAgo(new Date(this.data.date), this.ctx.$t)\n   }\n \n   /** 获取用户 UserAgent 信息 */"
    },
    {
      "sha": "ccf322a15f3e45a71a06826f6a9fbccf3e00966c",
      "filename": "ui/packages/artalk/src/comment/renders/actions.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Factions.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Factions.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Factions.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -21,14 +21,14 @@ function renderVote(r: Render) {\n   if (!r.ctx.conf.vote) return // 关闭投票功能\n \n   // 赞同按钮\n-  r.voteBtnUp = new ActionBtn(r.ctx, () => `${r.ctx.$t('voteUp')} (${r.data.vote_up || 0})`).appendTo(r.$actions)\n+  r.voteBtnUp = new ActionBtn(() => `${r.ctx.$t('voteUp')} (${r.data.vote_up || 0})`).appendTo(r.$actions)\n   r.voteBtnUp.setClick(() => {\n     r.comment.getActions().vote('up')\n   })\n \n   // 反对按钮\n   if (r.ctx.conf.voteDown) {\n-    r.voteBtnDown = new ActionBtn(r.ctx, () => `${r.ctx.$t('voteDown')} (${r.data.vote_down || 0})`).appendTo(r.$actions)\n+    r.voteBtnDown = new ActionBtn(() => `${r.ctx.$t('voteDown')} (${r.data.vote_down || 0})`).appendTo(r.$actions)\n     r.voteBtnDown.setClick(() => {\n       r.comment.getActions().vote('down')\n     })\n@@ -53,7 +53,7 @@ function renderReply(r: Render) {\n \n // 操作按钮 - 折叠\n function renderCollapse(r: Render) {\n-  const collapseBtn = new ActionBtn(r.ctx, {\n+  const collapseBtn = new ActionBtn({\n     text: () => (r.data.is_collapsed ? r.ctx.$t('expand') : r.ctx.$t('collapse')),\n     adminOnly: true\n   })\n@@ -65,7 +65,7 @@ function renderCollapse(r: Render) {\n \n // 操作按钮 - 审核\n function renderModerator(r: Render) {\n-  const pendingBtn = new ActionBtn(r.ctx, {\n+  const pendingBtn = new ActionBtn({\n     text: () => (r.data.is_pending ? r.ctx.$t('pending') : r.ctx.$t('approved')),\n     adminOnly: true\n   })\n@@ -77,7 +77,7 @@ function renderModerator(r: Render) {\n \n // 操作按钮 - 置顶\n function renderPin(r: Render) {\n-  const pinnedBtn = new ActionBtn(r.ctx, {\n+  const pinnedBtn = new ActionBtn({\n     text: () => (r.data.is_pinned ? r.ctx.$t('unpin') : r.ctx.$t('pin')),\n     adminOnly: true\n   })\n@@ -89,7 +89,7 @@ function renderPin(r: Render) {\n \n // 操作按钮 - 编辑\n function renderEdit(r: Render) {\n-  const editBtn = new ActionBtn(r.ctx, {\n+  const editBtn = new ActionBtn({\n     text: r.ctx.$t('edit'),\n     adminOnly: true\n   })\n@@ -101,7 +101,7 @@ function renderEdit(r: Render) {\n \n // 操作按钮 - 删除\n function renderDel(r: Render) {\n-  const delBtn = new ActionBtn(r.ctx, {\n+  const delBtn = new ActionBtn({\n     text: r.ctx.$t('delete'),\n     confirm: true,\n     confirmText: r.ctx.$t('deleteConfirm'),"
    },
    {
      "sha": "5614f8e0b50439d0f3c9a47a773ba2f46365faae",
      "filename": "ui/packages/artalk/src/components/action-btn.ts",
      "status": "modified",
      "additions": 11,
      "deletions": 13,
      "changes": 24,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Faction-btn.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Faction-btn.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Faction-btn.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,7 +1,7 @@\n-import type { ContextApi } from '~/types'\n+import $t from '@/i18n'\n import * as Utils from '../lib/utils'\n \n-interface ActionBtnConf {\n+interface ActionBtnOptions {\n   /** 按钮文字 (动态/静态) */\n   text: (() => string) | string\n \n@@ -19,8 +19,7 @@ interface ActionBtnConf {\n  * 通用操作按钮\n  */\n export default class ActionBtn {\n-  private ctx: ContextApi\n-  private conf: ActionBtnConf\n+  private opts: ActionBtnOptions\n   public $el: HTMLElement\n \n   public isLoading = false // 正在加载\n@@ -33,15 +32,14 @@ export default class ActionBtn {\n   public confirmRecTimer?: number // 确认消息复原定时器\n \n   /** 构造函数 */\n-  constructor(ctx: ContextApi, conf: ActionBtnConf|string|(() => string)) {\n-    this.ctx = ctx\n+  constructor(opts: ActionBtnOptions|string|(() => string)) {\n     this.$el = Utils.createElement(`<span class=\"atk-common-action-btn\"></span>`)\n \n-    this.conf = (typeof conf !== 'object') ? ({ text: conf }) : conf\n+    this.opts = (typeof opts !== 'object') ? ({ text: opts }) : opts\n     this.$el.innerText = this.getText()\n \n     // 仅管理员可操作\n-    if (this.conf.adminOnly) this.$el.setAttribute('atk-only-admin-show', '')\n+    if (this.opts.adminOnly) this.$el.setAttribute('atk-only-admin-show', '')\n   }\n \n   /** 将按钮装载到指定元素 */\n@@ -52,7 +50,7 @@ export default class ActionBtn {\n \n   /** 获取按钮文字（动态/静态） */\n   private getText() {\n-    return (typeof this.conf.text === 'string') ? this.conf.text : this.conf.text()\n+    return (typeof this.opts.text === 'string') ? this.opts.text : this.opts.text()\n   }\n \n   /** 设置点击事件 */\n@@ -66,7 +64,7 @@ export default class ActionBtn {\n       }\n \n       // 操作确认\n-      if (this.conf.confirm && !this.isMessaging) {\n+      if (this.opts.confirm && !this.isMessaging) {\n         const confirmRestore = () => {\n           this.isConfirming = false\n           this.$el.classList.remove('atk-btn-confirm')\n@@ -76,7 +74,7 @@ export default class ActionBtn {\n         if (!this.isConfirming) {\n           this.isConfirming = true\n           this.$el.classList.add('atk-btn-confirm')\n-          this.$el.innerText = this.conf.confirmText || this.ctx.$t('actionConfirm')\n+          this.$el.innerText = this.opts.confirmText || $t('actionConfirm')\n           this.confirmRecTimer = window.setTimeout(() => confirmRestore(), 5000)\n           return\n         }\n@@ -99,7 +97,7 @@ export default class ActionBtn {\n \n   /** 文字刷新（动态/静态） */\n   public updateText(text?: (() => string) | string) {\n-    if (text) this.conf.text = text\n+    if (text) this.opts.text = text\n     this.setLoading(false)\n     this.$el.innerText = this.getText()\n   }\n@@ -110,7 +108,7 @@ export default class ActionBtn {\n     this.isLoading = value\n     if (value) {\n       this.$el.classList.add('atk-btn-loading')\n-      this.$el.innerText = loadingText || `${this.ctx.$t('loading')}...`\n+      this.$el.innerText = loadingText || `${$t('loading')}...`\n     } else {\n       this.$el.classList.remove('atk-btn-loading')\n       this.$el.innerText = this.getText()"
    },
    {
      "sha": "8f17891cf0c75a0d95c9f87653907555d09d88ea",
      "filename": "ui/packages/artalk/src/components/checker/admin.ts",
      "status": "renamed",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fchecker%2Fadmin.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fchecker%2Fadmin.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fchecker%2Fadmin.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,5 +1,6 @@\n-import * as Utils from '../utils'\n-import User from '../user'\n+import $t from '@/i18n'\n+import * as Utils from '@/lib/utils'\n+import User from '@/lib/user'\n import type { Checker } from '.'\n \n const AdminChecker: Checker = {\n@@ -19,16 +20,15 @@ const AdminChecker: Checker = {\n   },\n \n   body(checker) {\n-    return Utils.createElement(`<span>${checker.getCtx().$t('adminCheck')}</span>`)\n+    return Utils.createElement(`<span>${$t('adminCheck')}</span>`)\n   },\n \n   onSuccess(checker, userToken, inputVal, formEl) {\n     User.update({\n       isAdmin: true,\n       token: userToken\n     })\n-    checker.getCtx().trigger('user-changed', User.data)\n-    checker.getCtx().reload()\n+    checker.getOpts().onReload()\n   },\n \n   onError(checker, err, inputVal, formEl) {}",
      "previous_filename": "ui/packages/artalk/src/lib/checker/admin.ts"
    },
    {
      "sha": "2b0f05786916fa853c1534acc87df471abd8083f",
      "filename": "ui/packages/artalk/src/components/checker/captcha-renders.ts",
      "status": "renamed",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fchecker%2Fcaptcha-renders.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fchecker%2Fcaptcha-renders.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fchecker%2Fcaptcha-renders.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,12 +1,13 @@\n-import * as Utils from '../utils'\n-import * as Ui from '../ui'\n+import $t from '@/i18n'\n+import * as Utils from '@/lib/utils'\n+import * as Ui from '@/lib/ui'\n import type { CheckerCtx } from '.'\n \n /** 图片验证码 */\n export function imgBody(checker: CheckerCtx) {\n   // 图片验证方式\n   const elem = Utils.createElement(\n-    `<span><img class=\"atk-captcha-img\" src=\"${checker.get('img_data') || ''}\">${checker.getCtx().$t('captchaCheck')}</span>`\n+    `<span><img class=\"atk-captcha-img\" src=\"${checker.get('img_data') || ''}\">${$t('captchaCheck')}</span>`\n   );\n \n   // 刷新验证码\n@@ -29,7 +30,7 @@ export function iframeBody(checker: CheckerCtx) {\n   const $iframe = Utils.createElement<HTMLIFrameElement>(`<iframe class=\"atk-fade-in\"></iframe>`)\n   $iframe.style.display = 'none'\n   Ui.showLoading($iframeWrap, { transparentBg: true })\n-  $iframe.src = `${checker.getCtx().conf.server}/api/captcha/get?t=${+new Date()}`\n+  $iframe.src = `${checker.getOpts().getIframeURLBase() || ''}/api/captcha/get?t=${+new Date()}`\n   $iframe.onload = () => {\n     $iframe.style.display = ''\n     Ui.hideLoading($iframeWrap)\n@@ -49,7 +50,7 @@ export function iframeBody(checker: CheckerCtx) {\n     if (stop) return\n     let isPass = false\n     try {\n-      const resp = await checker.getCtx().getApi().captcha.captchaStatus()\n+      const resp = await checker.getApi().captcha.captchaStatus()\n       isPass = resp.is_pass\n     } catch { isPass = false }\n     if (isPass) {",
      "previous_filename": "ui/packages/artalk/src/lib/checker/captcha-renders.ts"
    },
    {
      "sha": "1c7c40b73d0108408dc6e59da62fd44a6d668101",
      "filename": "ui/packages/artalk/src/components/checker/captcha.ts",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fchecker%2Fcaptcha.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fchecker%2Fcaptcha.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fchecker%2Fcaptcha.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "previous_filename": "ui/packages/artalk/src/lib/checker/captcha.ts"
    },
    {
      "sha": "2f49864deaa2e2b83f6f0399149b34aecf970fe7",
      "filename": "ui/packages/artalk/src/components/checker/index.ts",
      "status": "renamed",
      "additions": 16,
      "deletions": 13,
      "changes": 29,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fchecker%2Findex.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fchecker%2Findex.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fchecker%2Findex.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,10 +1,10 @@\n-import type { ContextApi } from '~/types'\n+import type Api from '@/api'\n import Dialog from '@/components/dialog'\n import Layer from '@/layer'\n-import * as Utils from '../utils'\n+import $t from '@/i18n'\n+import * as Utils from '@/lib/utils'\n import CaptchaChecker from './captcha'\n import AdminChecker from './admin'\n-import type Api from '../../api'\n \n export interface CheckerCaptchaPayload extends CheckerPayload {\n   imgData?: string\n@@ -17,16 +17,19 @@ export interface CheckerPayload {\n   onCancel?: () => void\n }\n \n+export interface CheckerLauncherOptions {\n+  getApi: () => Api\n+  getIframeURLBase: () => string\n+  onReload: () => void\n+}\n+\n /**\n  * Checker 发射台\n  */\n export default class CheckerLauncher {\n-  public ctx: ContextApi\n   public launched: Checker[] = []\n \n-  constructor(ctx: ContextApi) {\n-    this.ctx = ctx\n-  }\n+  constructor(private opts: CheckerLauncherOptions) { }\n \n   public checkCaptcha(payload: CheckerCaptchaPayload) {\n     this.fire(CaptchaChecker, payload, (ctx) => {\n@@ -44,7 +47,7 @@ export default class CheckerLauncher {\n     this.launched.push(checker)\n \n     // 创建层\n-    const layer = new Layer(this.ctx, `checker-${new Date().getTime()}`)\n+    const layer = new Layer(`checker-${new Date().getTime()}`)\n     layer.setMaskClickHide(false)\n     layer.show()\n \n@@ -54,8 +57,8 @@ export default class CheckerLauncher {\n     const checkerCtx: CheckerCtx = {\n       set: (key, val) => { checkerStore[key] = val },\n       get: (key) => (checkerStore[key]),\n-      getCtx: () => (this.ctx),\n-      getApi: () => (this.ctx.getApi()),\n+      getOpts: () => (this.opts),\n+      getApi: () => (this.opts.getApi()),\n       getLayer: () => layer,\n       hideInteractInput: () => {\n         hideInteractInput = true\n@@ -97,7 +100,7 @@ export default class CheckerLauncher {\n     }\n \n     let btnTextOrg: string | undefined\n-    const dialog = new Dialog(this.ctx, formEl)\n+    const dialog = new Dialog(formEl)\n \n     // 确认按钮\n     dialog.setYes((btnEl) => {\n@@ -114,7 +117,7 @@ export default class CheckerLauncher {\n         btnEl.classList.remove('error')\n       }\n \n-      btnEl.innerText = `${this.ctx.$t('loading')}...`\n+      btnEl.innerText = `${$t('loading')}...`\n \n       // 发送请求\n       checker\n@@ -187,7 +190,7 @@ interface CheckerStore {\n export interface CheckerCtx {\n   get<K extends keyof CheckerStore>(key: K): CheckerStore[K]\n   set<K extends keyof CheckerStore>(key: K, val: CheckerStore[K]): void\n-  getCtx(): ContextApi\n+  getOpts(): CheckerLauncherOptions\n   getApi(): Api\n   getLayer(): Layer\n   hideInteractInput(): void",
      "previous_filename": "ui/packages/artalk/src/lib/checker/index.ts"
    },
    {
      "sha": "79cc8a84bd32994c032d1de3382ae51602ec3db8",
      "filename": "ui/packages/artalk/src/components/dark-mode.ts",
      "status": "renamed",
      "additions": 5,
      "deletions": 10,
      "changes": 15,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fdark-mode.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fdark-mode.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fdark-mode.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,16 +1,11 @@\n-import type { ContextApi } from '~/types'\n import { getLayerWrap } from '../layer'\n \n const darkModeMedia = window.matchMedia('(prefers-color-scheme: dark)')\n let darkModeAutoFunc: (evt: MediaQueryListEvent) => void\n \n-export function syncDarkModeConf(ctx: ContextApi) {\n-  setDarkMode(ctx, ctx.conf.darkMode)\n-}\n-\n-export function setDarkMode(ctx: ContextApi, darkMode: boolean|'auto') {\n+export function setDarkMode($el: HTMLElement, darkMode: boolean|'auto') {\n   const apply = (d: boolean) => {\n-    updateClassName(ctx, d)\n+    updateClassName($el, d)\n   }\n \n   if (darkMode === 'auto') {\n@@ -30,9 +25,9 @@ export function setDarkMode(ctx: ContextApi, darkMode: boolean|'auto') {\n }\n \n const DarkModeClassName = 'atk-dark-mode'\n-export function updateClassName(ctx: ContextApi, darkMode: boolean) {\n-  if (darkMode) ctx.$root.classList.add(DarkModeClassName)\n-  else ctx.$root.classList.remove(DarkModeClassName)\n+function updateClassName($el: HTMLElement, darkMode: boolean) {\n+  if (darkMode) $el.classList.add(DarkModeClassName)\n+  else $el.classList.remove(DarkModeClassName)\n \n   // for Layer\n   const { $wrap: $layerWrap } = getLayerWrap()",
      "previous_filename": "ui/packages/artalk/src/lib/dark-mode.ts"
    },
    {
      "sha": "71960645ec2fb22a233bcd3b882666966c320081",
      "filename": "ui/packages/artalk/src/components/dialog.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 7,
      "changes": 11,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fdialog.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fdialog.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fdialog.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,4 +1,4 @@\n-import type { ContextApi } from '~/types'\n+import $t from '@/i18n'\n import * as Utils from '../lib/utils'\n \n type BtnClickHandler = (btnEl: HTMLElement, dialog: Dialog) => boolean|void\n@@ -7,14 +7,11 @@ type BtnClickHandler = (btnEl: HTMLElement, dialog: Dialog) => boolean|void\n  * 对话框\n  */\n export default class Dialog {\n-  public ctx: ContextApi\n   public $el: HTMLElement\n   public $content: HTMLElement\n   public $actions: HTMLElement\n \n-  constructor (ctx: ContextApi, contentEl: HTMLElement) {\n-    this.ctx = ctx\n-\n+  constructor (contentEl: HTMLElement) {\n     this.$el = Utils.createElement(\n       `<div class=\"atk-layer-dialog-wrap\">\n         <div class=\"atk-layer-dialog\">\n@@ -35,7 +32,7 @@ export default class Dialog {\n   /** 按钮 · 确定 */\n   public setYes(handler: BtnClickHandler) {\n     const btn = Utils.createElement<HTMLButtonElement>(\n-      `<button data-action=\"confirm\">${this.ctx.$t('confirm')}</button>`\n+      `<button data-action=\"confirm\">${$t('confirm')}</button>`\n     )\n     btn.onclick = this.onBtnClick(handler)\n     this.$actions.appendChild(btn)\n@@ -46,7 +43,7 @@ export default class Dialog {\n   /** 按钮 · 取消 */\n   public setNo(handler: BtnClickHandler) {\n     const btn = Utils.createElement<HTMLButtonElement>(\n-      `<button data-action=\"cancel\">${this.ctx.$t('cancel')}</button>`\n+      `<button data-action=\"cancel\">${$t('cancel')}</button>`\n     )\n     btn.onclick = this.onBtnClick(handler)\n     this.$actions.appendChild(btn)"
    },
    {
      "sha": "17a72c41f7f902710fa7f7f3713a7ea1bd7065f3",
      "filename": "ui/packages/artalk/src/components/error-dialog.ts",
      "status": "modified",
      "additions": 22,
      "deletions": 21,
      "changes": 43,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Ferror-dialog.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Ferror-dialog.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Ferror-dialog.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,34 +1,35 @@\n-import type { ContextApi } from '~/types'\n import * as Utils from '@/lib/utils'\n import * as Ui from '@/lib/ui'\n import User from '@/lib/user'\n import $t from '@/i18n'\n \n-export function showErrorDialog(ctx: ContextApi, errMsg: string, errData?: any, retryFn?: () => void) {\n-  const errEl = Utils.createElement(`<span>${errMsg}，${$t('listLoadFailMsg')}<br/></span>`)\n+export interface ErrorDialogOptions {\n+  $err: HTMLElement\n \n-  const $retryBtn = Utils.createElement(`<span style=\"cursor:pointer;\">${$t('listRetry')}</span>`)\n-  $retryBtn.onclick = () => retryFn && retryFn()\n-  errEl.appendChild($retryBtn)\n+  errMsg: string\n+  errData?: any\n+  retryFn?: () => void\n \n-  const adminBtn = Utils.createElement('<span atk-only-admin-show> | <span style=\"cursor:pointer;\">打开控制台</span></span>')\n-  errEl.appendChild(adminBtn)\n-  if (!User.data.isAdmin) adminBtn.classList.add('atk-hide')\n+  onOpenSidebar?: () => void\n+}\n \n-  let sidebarView = ''\n+export function showErrorDialog(opts: ErrorDialogOptions) {\n+  const errEl = Utils.createElement(`<span>${opts.errMsg}，${$t('listLoadFailMsg')}<br/></span>`)\n \n-  // 找不到站点错误，打开侧边栏并填入创建站点表单\n-  if (errData?.err_no_site) {\n-    const viewLoadParam = {\n-      create_name: ctx.conf.site,\n-      create_urls: `${window.location.protocol}//${window.location.host}`\n-    }\n-    sidebarView = `sites|${JSON.stringify(viewLoadParam)}`\n+  if (opts.retryFn) {\n+    const $retryBtn = Utils.createElement(`<span style=\"cursor:pointer;\">${$t('listRetry')}</span>`)\n+    $retryBtn.onclick = () => opts.retryFn && opts.retryFn()\n+    errEl.appendChild($retryBtn)\n   }\n \n-  adminBtn.onclick = () => ctx.showSidebar({\n-    view: sidebarView as any\n-  })\n+  if (opts.onOpenSidebar) {\n+    const $openSidebar = Utils.createElement('<span atk-only-admin-show> | <span style=\"cursor:pointer;\">打开控制台</span></span>')\n+    errEl.appendChild($openSidebar)\n+    if (!User.data.isAdmin) { // only display if user is admin\n+      $openSidebar.classList.add('atk-hide')\n+    }\n+    $openSidebar.onclick = () => opts.onOpenSidebar && opts.onOpenSidebar()\n+  }\n \n-  Ui.setError(ctx.get('list').$el, errEl)\n+  Ui.setError(opts.$err, errEl)\n }"
    },
    {
      "sha": "2a1eb9c88bb341a15f653113d7614eac7a892bee",
      "filename": "ui/packages/artalk/src/components/pagination.ts",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fpagination.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fpagination.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fpagination.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,7 +1,7 @@\n import * as Utils from '../lib/utils'\n import * as Ui from '../lib/ui'\n \n-export interface PaginationConf {\n+export interface PaginationOptions {\n   /** 每页条数 */\n   pageSize: number\n \n@@ -10,7 +10,7 @@ export interface PaginationConf {\n }\n \n export default class Pagination {\n-  private conf: PaginationConf\n+  private opts: PaginationOptions\n   public total: number\n   public $el: HTMLElement\n   public $input: HTMLInputElement\n@@ -20,7 +20,7 @@ export default class Pagination {\n \n   public page: number = 1\n   get pageSize(): number {\n-    return this.conf.pageSize\n+    return this.opts.pageSize\n   }\n   get offset(): number {\n     return this.pageSize * (this.page - 1)\n@@ -29,9 +29,9 @@ export default class Pagination {\n     return Math.ceil(this.total / this.pageSize)\n   }\n \n-  public constructor(total: number, conf: PaginationConf) {\n+  public constructor(total: number, opts: PaginationOptions) {\n     this.total = total\n-    this.conf = conf\n+    this.opts = opts\n \n     this.$el = Utils.createElement(\n       `<div class=\"atk-pagination-wrap\">\n@@ -105,7 +105,7 @@ export default class Pagination {\n \n   public change(page: number) {\n     this.page = page\n-    this.conf.onChange(this.offset)\n+    this.opts.onChange(this.offset)\n     this.setInput(page)\n     this.checkDisabled()\n   }"
    },
    {
      "sha": "0a29d635950cef4025ff5e9cbb2484c106cc2a0c",
      "filename": "ui/packages/artalk/src/components/read-more-btn.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fread-more-btn.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fread-more-btn.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomponents%2Fread-more-btn.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,6 +1,6 @@\n import * as Utils from '../lib/utils'\n \n-export interface ReadMoreBtnConf {\n+export interface ReadMoreBtnOptions {\n   /** 回调函数 */\n   onClick: (offset: number) => void\n \n@@ -13,7 +13,7 @@ export interface ReadMoreBtnConf {\n  * 阅读更多按钮\n  */\n export default class ReadMoreBtn {\n-  public conf: ReadMoreBtnConf\n+  public opts: ReadMoreBtnOptions\n   public $el: HTMLElement\n   private $loading: HTMLElement\n   private $text: HTMLElement\n@@ -23,12 +23,12 @@ export default class ReadMoreBtn {\n \n   /** 是否有更多内容 */\n   get hasMore() {\n-    return this.total > (this.offset + this.conf.pageSize)\n+    return this.total > (this.offset + this.opts.pageSize)\n   }\n \n-  public constructor(conf: ReadMoreBtnConf) {\n-    this.conf = conf\n-    this.origText = this.conf.text || this.origText\n+  public constructor(opts: ReadMoreBtnOptions) {\n+    this.opts = opts\n+    this.origText = this.opts.text || this.origText\n \n     this.$el = Utils.createElement(\n     `<div class=\"atk-list-read-more\" style=\"display: none;\">\n@@ -45,7 +45,7 @@ export default class ReadMoreBtn {\n   }\n \n   click() {\n-    if (this.hasMore) this.conf.onClick(this.offset + this.conf.pageSize)\n+    if (this.hasMore) this.opts.onClick(this.offset + this.opts.pageSize)\n     this.checkDisabled()\n   }\n "
    },
    {
      "sha": "4eb009d746a0e5313171984d476d15897b54310d",
      "filename": "ui/packages/artalk/src/context.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcontext.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fcontext.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcontext.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -3,9 +3,9 @@ import type { TInjectedServices } from './service'\n import Api from './api'\n \n import * as Utils from './lib/utils'\n-import * as DarkMode from './lib/dark-mode'\n+import * as DarkMode from './components/dark-mode'\n import * as marked from './lib/marked'\n-import { CheckerCaptchaPayload, CheckerPayload } from './lib/checker'\n+import { CheckerCaptchaPayload, CheckerPayload } from './components/checker'\n \n import { DataManager } from './data'\n import * as I18n from './i18n'\n@@ -127,8 +127,8 @@ class Context implements ContextApi {\n     return I18n.t(key, args)\n   }\n \n-  public setDarkMode(darkMode: boolean): void {\n-    DarkMode.setDarkMode(this, darkMode)\n+  public setDarkMode(darkMode: boolean|'auto'): void {\n+    DarkMode.setDarkMode(this.$root, darkMode)\n   }\n \n   public updateConf(nConf: Partial<ArtalkConfig>): void {"
    },
    {
      "sha": "84b7c286863472fb43ee4d9fbdb57868b74cb25d",
      "filename": "ui/packages/artalk/src/layer/layer.ts",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Flayer%2Flayer.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Flayer%2Flayer.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Flayer%2Flayer.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,9 +1,9 @@\n-import type { ContextApi } from '~/types'\n-import Component from '../lib/component'\n import * as Utils from '../lib/utils'\n import * as Ui from '../lib/ui'\n \n-export default class Layer extends Component {\n+export default class Layer {\n+  private $el: HTMLElement\n+\n   private name: string\n   private $wrap: HTMLElement\n   private $mask: HTMLElement\n@@ -15,9 +15,7 @@ export default class Layer extends Component {\n \n   public afterHide?: Function\n \n-  constructor (ctx: ContextApi, name: string, el?: HTMLElement) {\n-    super(ctx)\n-\n+  constructor(name: string, el?: HTMLElement) {\n     this.name = name\n     const { $wrap, $mask } = getLayerWrap()\n     this.$wrap = $wrap\n@@ -68,7 +66,7 @@ export default class Layer extends Component {\n     this.pageBodyScrollBarHide()\n   }\n \n-  hide () {\n+  hide() {\n     if (this.afterHide) this.afterHide()\n     this.$wrap.classList.add('atk-fade-out')\n     this.$el.style.display = 'none'\n@@ -86,7 +84,7 @@ export default class Layer extends Component {\n     }, 200)\n   }\n \n-  setMaskClickHide (enable: boolean) {\n+  setMaskClickHide(enable: boolean) {\n     this.maskClickHideEnable = enable\n   }\n "
    },
    {
      "sha": "52637ab87a19186abcec5f183948229234eace51",
      "filename": "ui/packages/artalk/src/layer/sidebar-layer.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Flayer%2Fsidebar-layer.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Flayer%2Fsidebar-layer.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Flayer%2Fsidebar-layer.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -37,7 +37,7 @@ export default class SidebarLayer extends Component {\n \n     // 获取 Layer\n     if (this.layer == null) {\n-      this.layer = new Layer(this.ctx, 'sidebar', this.$el)\n+      this.layer = new Layer('sidebar', this.$el)\n       this.layer.afterHide = () => {\n         // 防止评论框被吞\n         this.ctx.editorResetState()\n@@ -73,7 +73,10 @@ export default class SidebarLayer extends Component {\n \n       // 准备 Iframe 参数\n       const baseURL = (import.meta.env.DEV)  ? 'http://localhost:23367/'\n-        : Utils.getURLBasedOnApi(this.ctx, '/sidebar/')\n+        : Utils.getURLBasedOnApi({\n+          base: this.ctx.conf.server,\n+          path: '/sidebar/',\n+        })\n \n       const query: any = {\n         pageKey: this.conf.pageKey,"
    },
    {
      "sha": "37096751c50ffa1fc974b43ba6e09d8718f40d5b",
      "filename": "ui/packages/artalk/src/lib/component.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 9,
      "changes": 12,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Flib%2Fcomponent.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Flib%2Fcomponent.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Flib%2Fcomponent.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,18 +1,12 @@\n import type { ArtalkConfig, ContextApi } from '~/types'\n-import { I18n } from '../i18n'\n \n export default abstract class Component {\n   public $el!: HTMLElement\n-\n-  public ctx: ContextApi\n   public readonly conf: ArtalkConfig\n \n-  public constructor(ctx: ContextApi) {\n-    this.ctx = ctx\n+  public constructor(\n+    public ctx: ContextApi\n+  ) {\n     this.conf = ctx.conf\n   }\n-\n-  public $t(key: keyof I18n, args: {[key: string]: string} = {}): string {\n-    return this.ctx.$t(key, args)\n-  }\n }"
    },
    {
      "sha": "723e91edb61fec6d4ddf91291b56755a4fa012f1",
      "filename": "ui/packages/artalk/src/lib/detect.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Flib%2Fdetect.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Flib%2Fdetect.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Flib%2Fdetect.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,7 +1,7 @@\n const win = (window as any) || {}\n const nav = navigator || {}\n \n-function Detect (userAgent?: string) {\n+function Detect(userAgent?: string) {\n   const u = String(userAgent || nav.userAgent)\n   const dest = {\n     os: '',"
    },
    {
      "sha": "7ec1bef2e7c9f2306a835c58a39cd7e10de0d5c6",
      "filename": "ui/packages/artalk/src/lib/user.ts",
      "status": "modified",
      "additions": 16,
      "deletions": 14,
      "changes": 30,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Flib%2Fuser.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Flib%2Fuser.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Flib%2Fuser.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,12 +1,14 @@\n-import type { LocalUser, ContextApi } from '~/types'\n+import type { LocalUser } from '~/types'\n+\n+const LOCAL_USER_KEY = 'ArtalkUser'\n \n class User {\n-  public ctx?: ContextApi\n-  public data: LocalUser\n+  data: LocalUser\n+  onUserChanged: ((user: LocalUser) => void) | null = null\n \n-  public constructor() {\n+  constructor() {\n     // 从 localStorage 导入\n-    const localUser = JSON.parse(window.localStorage.getItem('ArtalkUser') || '{}')\n+    const localUser = JSON.parse(window.localStorage.getItem(LOCAL_USER_KEY) || '{}')\n     this.data = {\n       nick: localUser.nick || '',\n       email: localUser.email || '',\n@@ -16,34 +18,34 @@ class User {\n     }\n   }\n \n-  public setContext(ctx: ContextApi) {\n-    this.ctx = ctx\n-  }\n-\n   /** 保存用户到 localStorage 中 */\n-  public update(obj: Partial<LocalUser> = {}) {\n+  update(obj: Partial<LocalUser> = {}) {\n     Object.entries(obj).forEach(([key, value]) => {\n       this.data[key] = value\n     })\n \n-    window.localStorage.setItem('ArtalkUser', JSON.stringify(this.data))\n-    this.ctx?.trigger('user-changed', this.data)\n+    window.localStorage.setItem(LOCAL_USER_KEY, JSON.stringify(this.data))\n+    this.onUserChanged && this.onUserChanged(this.data)\n+  }\n+\n+  public setOnUserChanged(fn: ((user: LocalUser) => void) | null) {\n+    this.onUserChanged = fn\n   }\n \n   /**\n    * Logout\n    *\n    * @description Logout will clear login status, but not clear user data (nick, email, link)\n    */\n-  public logout() {\n+  logout() {\n     this.update({\n       token: '',\n       isAdmin: false\n     })\n   }\n \n   /** 是否已填写基本用户信息 */\n-  public checkHasBasicUserInfo() {\n+  checkHasBasicUserInfo() {\n     return !!this.data.nick && !!this.data.email\n   }\n }"
    },
    {
      "sha": "71184e90b4c19ae33d9c93d87232bf236db193a2",
      "filename": "ui/packages/artalk/src/lib/utils.ts",
      "status": "modified",
      "additions": 11,
      "deletions": 14,
      "changes": 25,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Flib%2Futils.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Flib%2Futils.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Flib%2Futils.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,5 +1,3 @@\n-import type { ContextApi } from '~/types'\n-\n export function createElement<E extends HTMLElement = HTMLElement>(htmlStr: string = ''): E {\n   const div = document.createElement('div')\n   div.innerHTML = htmlStr.trim()\n@@ -64,7 +62,7 @@ export function dateFormat(date: Date) {\n   return `${vYear}-${vMonth}-${vDay}`\n }\n \n-export function timeAgo(date: Date, ctx: ContextApi) {\n+export function timeAgo(date: Date, $t: Function = (n: string) => n) {\n   try {\n     const oldTime = date.getTime()\n     const currTime = new Date().getTime()\n@@ -83,17 +81,17 @@ export function timeAgo(date: Date, ctx: ContextApi) {\n           // 计算相差秒数\n           const leave3 = leave2 % (60 * 1000) // 计算分钟数后剩余的毫秒数\n           const seconds = Math.round(leave3 / 1000)\n-          if (seconds < 10) return ctx.$t('now')\n-          return `${seconds} ${ctx.$t('seconds')}`\n+          if (seconds < 10) return $t('now')\n+          return `${seconds} ${$t('seconds')}`\n         }\n-        return `${minutes} ${ctx.$t('minutes')}`\n+        return `${minutes} ${$t('minutes')}`\n       }\n-      return `${hours} ${ctx.$t('hours')}`\n+      return `${hours} ${$t('hours')}`\n     }\n-    if (days < 0) return ctx.$t('now')\n+    if (days < 0) return $t('now')\n \n     if (days < 8) {\n-      return `${days} ${ctx.$t('days')}`\n+      return `${days} ${$t('days')}`\n     }\n \n     return dateFormat(date)\n@@ -124,9 +122,8 @@ export function onImagesLoaded($container: HTMLElement, event: Function) {\n   }\n }\n \n-export function getGravatarURL(ctx: ContextApi, emailMD5: string) {\n-  const { mirror, params } = ctx.conf.gravatar\n-  return `${mirror.replace(/\\/$/, '')}/${emailMD5}?${params.replace(/^\\?/, '')}`\n+export function getGravatarURL(opts: { params: string, mirror: string, emailMD5: string }) {\n+  return `${opts.mirror.replace(/\\/$/, '')}/${opts.emailMD5}?${opts.params.replace(/^\\?/, '')}`\n }\n \n export function sleep(ms: number) {\n@@ -194,8 +191,8 @@ export function isValidURL(urlRaw: string) {\n }\n \n /** 获取基于 conf.server 的 URL */\n-export function getURLBasedOnApi(ctx: ContextApi, path: string) {\n-  return getURLBasedOn(ctx.conf.server, path)\n+export function getURLBasedOnApi(opts: { base: string, path: string }) {\n+  return getURLBasedOn(opts.base, opts.path)\n }\n \n /** 获取基于某个 baseURL 的 URL */"
    },
    {
      "sha": "aca53d05ca33e44b9072a7133928223ba45a0ca0",
      "filename": "ui/packages/artalk/src/plugins/conf-remoter.ts",
      "status": "modified",
      "additions": 16,
      "deletions": 2,
      "changes": 18,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fconf-remoter.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fconf-remoter.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fconf-remoter.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -30,8 +30,22 @@ function loadConf(ctx: ContextApi) {\n   }).catch((err) => {\n     ctx.updateConf({})\n \n-    showErrorDialog(ctx, err.msg || String(err), err.data, () => {\n-      loadConf(ctx)\n+    let sidebarOpenView = ''\n+\n+    // if response err_no_site, modify the sidebar open view to create site\n+    if (err.data?.err_no_site) {\n+      const viewLoadParam = { create_name: ctx.conf.site, create_urls: `${window.location.protocol}//${window.location.host}` }\n+      sidebarOpenView = `sites|${JSON.stringify(viewLoadParam)}`\n+    }\n+\n+    showErrorDialog({\n+      $err: ctx.get('list').$el,\n+      errMsg: err.msg || String(err),\n+      errData: err.data,\n+      retryFn: () => loadConf(ctx),\n+      onOpenSidebar:() => ctx.showSidebar({\n+        view: sidebarOpenView as any\n+      })\n     })\n \n     throw err"
    },
    {
      "sha": "28eb80d7b9a7ced24801e9eb329cd8c551892531",
      "filename": "ui/packages/artalk/src/plugins/dark-mode.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fdark-mode.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fdark-mode.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fdark-mode.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,12 +1,11 @@\n-import { syncDarkModeConf } from '@/lib/dark-mode'\n import type { ArtalkPlugin } from '~/types'\n \n export const DarkMode: ArtalkPlugin = (ctx) => {\n   ctx.on('inited', () => {\n-    syncDarkModeConf(ctx)\n+    ctx.setDarkMode(ctx.conf.darkMode)\n   })\n \n   ctx.on('conf-loaded', () => {\n-    syncDarkModeConf(ctx)\n+    ctx.setDarkMode(ctx.conf.darkMode)\n   })\n }"
    },
    {
      "sha": "f4eebaae6eb1e6f3fe9fe8c65349c1724b9fd2c4",
      "filename": "ui/packages/artalk/src/plugins/editor/upload.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Feditor%2Fupload.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Feditor%2Fupload.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Feditor%2Fupload.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -130,7 +130,10 @@ export default class Upload extends EditorPlug {\n       let imgURL = resp.img_url as string\n \n       // 若为相对路径，加上 artalk server\n-      if (!Utils.isValidURL(imgURL)) imgURL = Utils.getURLBasedOnApi(this.kit.useGlobalCtx(), imgURL)\n+      if (!Utils.isValidURL(imgURL)) imgURL = Utils.getURLBasedOnApi({\n+        base: this.kit.useConf().server,\n+        path: imgURL,\n+      })\n \n       // 上传成功插入图片\n       this.kit.useEditor().setContent(this.kit.useUI().$textarea.value.replace(uploadPlaceholderTxt, `${insertPrefix}![](${imgURL})`))"
    },
    {
      "sha": "c9edf37b460defab179fdd87744a35a1e5946f9b",
      "filename": "ui/packages/artalk/src/plugins/list/error-dialog.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ferror-dialog.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ferror-dialog.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ferror-dialog.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -11,8 +11,11 @@ export const ErrorDialog: ArtalkPlugin = (ctx) => {\n   })\n \n   ctx.on('list-error', (err) => {\n-    showErrorDialog(ctx, err.msg, err.data, () => {\n-      ctx.fetch({ offset: 0 })\n+    showErrorDialog({\n+      $err: ctx.get('list').$el,\n+      errMsg: err.msg,\n+      errData: err.data,\n+      retryFn: () => ctx.fetch({ offset: 0 })\n     })\n   })\n }"
    },
    {
      "sha": "b43ca6dcab90f02b56559277225666fbc201ba04",
      "filename": "ui/packages/artalk/src/plugins/list/time-ticking.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ftime-ticking.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ftime-ticking.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Flist%2Ftime-ticking.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -11,7 +11,7 @@ export const TimeTicking: ArtalkPlugin = (ctx) => {\n \n       list.$el.querySelectorAll<HTMLElement>('[data-atk-comment-date]').forEach(el => {\n         const date = el.getAttribute('data-atk-comment-date')\n-        el.innerText = Utils.timeAgo(new Date(Number(date)), ctx)\n+        el.innerText = Utils.timeAgo(new Date(Number(date)), ctx.$t)\n       })\n     }, 30 * 1000) // 30s 更新一次\n   })"
    },
    {
      "sha": "c910ebbb8c336dd9b8f7f9042aebb0044377c08c",
      "filename": "ui/packages/artalk/src/plugins/markdown.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fmarkdown.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fmarkdown.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fplugins%2Fmarkdown.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -4,7 +4,7 @@ import * as marked from '@/lib/marked'\n export const Markdown: ArtalkPlugin = (ctx) => {\n   marked.initMarked()\n \n-  if (ctx.conf.markedReplacers) {\n-    marked.setReplacers(ctx.conf.markedReplacers)\n-  }\n+  ctx.on('conf-loaded', (conf) => {\n+    if (conf.markedReplacers) marked.setReplacers(conf.markedReplacers)\n+  })\n }"
    },
    {
      "sha": "4f8fb36dfde5a2c437724e53b3ea5a55a59f2882",
      "filename": "ui/packages/artalk/src/service.ts",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fservice.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Fsrc%2Fservice.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fservice.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,5 +1,5 @@\n import type { ContextApi } from '~/types'\n-import CheckerLauncher from './lib/checker'\n+import CheckerLauncher from './components/checker'\n import Editor from './editor/editor'\n import Layer from './layer'\n import SidebarLayer from './layer/sidebar-layer'\n@@ -26,13 +26,19 @@ const services = {\n \n   // User Store\n   user(ctx: ContextApi) {\n-    User.setContext(ctx)\n+    User.setOnUserChanged((user) => {\n+      ctx?.trigger('user-changed', user)\n+    })\n     return User\n   },\n \n   // CheckerLauncher\n   checkerLauncher(ctx: ContextApi) {\n-    const checkerLauncher = new CheckerLauncher(ctx)\n+    const checkerLauncher = new CheckerLauncher({\n+      getApi: () => ctx.getApi(),\n+      getIframeURLBase: () => ctx.conf.server,\n+      onReload: () => ctx.reload()\n+    })\n     return checkerLauncher\n   },\n "
    },
    {
      "sha": "22ac02766c7cc4cca7f56066b8c913626fd2f862",
      "filename": "ui/packages/artalk/types/context.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Ftypes%2Fcontext.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Ftypes%2Fcontext.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Ftypes%2Fcontext.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,10 +1,10 @@\n+import type { TInjectedServices } from '@/service'\n+import type { CheckerCaptchaPayload, CheckerPayload } from '@/components/checker'\n+import type { EventManagerFuncs } from '@/lib/event-manager'\n+import type { TMarked } from '@/lib/marked'\n+import type { I18n } from '@/i18n'\n+import type Api from '@/api'\n import type { SidebarShowPayload, EventPayloadMap, ArtalkConfig, CommentData, DataManagerApi, ListFetchParams, NotifyLevel } from '.'\n-import type { EventManagerFuncs } from '../src/lib/event-manager'\n-import type { I18n } from '../src/i18n'\n-import type Api from '../src/api'\n-import type { CheckerCaptchaPayload, CheckerPayload } from '../src/lib/checker'\n-import type { TMarked } from '../src/lib/marked'\n-import type { TInjectedServices } from '../src/service'\n \n /**\n  * Context 接口\n@@ -77,7 +77,7 @@ export interface ContextApi extends EventManagerFuncs<EventPayloadMap> {\n   $t(key: keyof I18n, args?: {[key: string]: string}): string\n \n   /** 设置夜间模式 */\n-  setDarkMode(darkMode: boolean): void\n+  setDarkMode(darkMode: boolean|'auto'): void\n \n   /** 更新配置 */\n   updateConf(conf: Partial<ArtalkConfig>): void"
    },
    {
      "sha": "7a3ac2c4096173fe0bd2ee520d0b117b05b3eac0",
      "filename": "ui/packages/artalk/types/editor.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Ftypes%2Feditor.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2/ui%2Fpackages%2Fartalk%2Ftypes%2Feditor.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Ftypes%2Feditor.ts?ref=37d4ca76fa72e0feb0b57b3a656fa32bf6a199b2",
      "patch": "@@ -1,6 +1,6 @@\n import type { CommentData, NotifyLevel } from '.'\n-import Component from '../src/lib/component'\n-import { EditorUI } from '../src/editor/ui'\n+import type Component from '../src/lib/component'\n+import type { EditorUI } from '../src/editor/ui'\n \n export type EditorState = 'reply' | 'edit' | 'normal'\n "
    }
  ]
}
