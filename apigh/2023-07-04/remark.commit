{
  "sha": "497f3ce47f86dc782a7e721a20d67ac0bc3adc1e",
  "node_id": "C_kwDOBtgov9oAKDQ5N2YzY2U0N2Y4NmRjNzgyYTdlNzIxYTIwZDY3YWMwYmMzYWRjMWU",
  "commit": {
    "author": {
      "name": "Eugene",
      "email": "jaskon97@gmail.com",
      "date": "2023-06-29T19:15:59Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2023-06-29T19:15:59Z"
    },
    "message": "Skip confirmation step on email subscription (#1646)\n\n* Email subscription params in request body\r\n\r\n* Email subscription params in request body\r\n\r\nfix tests\r\n\r\n* Skip confirm step on email sub\r\n\r\nWhen user logged in with the same email he tries to subscribe\r\n\r\n* Skip confirm step on email sub\r\n\r\nset autoConfirm param to make it work\r\n\r\n* Update size-limit\r\n\r\n* Handle 409: already subscribed\r\n\r\n* refactor: prevStep to justSubscribed\r\n\r\nprevStep is not used anywhere else and because of it influences output text (haveSubscribed), have changed it to more intuitive justSubscribed variable\r\n\r\n* Test case for http error 409",
    "tree": {
      "sha": "2d6d1d3d7abfdac5ea0e596b2dad97aed458711a",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/2d6d1d3d7abfdac5ea0e596b2dad97aed458711a"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkndhvCRBK7hj4Ov3rIwAAZcgIAHm12AjLJghGtI4LKsApLI4t\neta+2C6HNKOOFqJr1zh3wV1J4HPWYtQ0WLnh5PLx6JU3MttGc/VOfG/h/ib36CNf\nstoqYps4cw7YGqAiwtNGKDO9GzLBPi/KAj34wsWFTeRqwalJ37H1mrJjX8RoB8nc\nVvSB5uqMIbHZVkhzDAhMEO+fkyq7iRz7j9FRAc1KOnqOsYGre6lYaATIHQuo1esh\nxmvbK+lb3rFn860udXri4z4W3OM4F+uJ2ABFbarZZmJ/N7ou6vBQrxCXE2jxqyjf\n8zrLCACnB61NGQZtoekL3BLZEq7Y/nD9MfkDHTgq9p/SolxvsINCAJS++K/zii4=\n=vnF1\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 2d6d1d3d7abfdac5ea0e596b2dad97aed458711a\nparent 64188e5713085f871cbbc429742517b3381c2b50\nauthor Eugene <jaskon97@gmail.com> 1688066159 +0200\ncommitter GitHub <noreply@github.com> 1688066159 -0500\n\nSkip confirmation step on email subscription (#1646)\n\n* Email subscription params in request body\r\n\r\n* Email subscription params in request body\r\n\r\nfix tests\r\n\r\n* Skip confirm step on email sub\r\n\r\nWhen user logged in with the same email he tries to subscribe\r\n\r\n* Skip confirm step on email sub\r\n\r\nset autoConfirm param to make it work\r\n\r\n* Update size-limit\r\n\r\n* Handle 409: already subscribed\r\n\r\n* refactor: prevStep to justSubscribed\r\n\r\nprevStep is not used anywhere else and because of it influences output text (haveSubscribed), have changed it to more intuitive justSubscribed variable\r\n\r\n* Test case for http error 409"
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e",
  "html_url": "https://github.com/umputun/remark42/commit/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e/comments",
  "author": {
    "login": "Jaskon",
    "id": 18248628,
    "node_id": "MDQ6VXNlcjE4MjQ4NjI4",
    "avatar_url": "https://avatars.githubusercontent.com/u/18248628?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Jaskon",
    "html_url": "https://github.com/Jaskon",
    "followers_url": "https://api.github.com/users/Jaskon/followers",
    "following_url": "https://api.github.com/users/Jaskon/following{/other_user}",
    "gists_url": "https://api.github.com/users/Jaskon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Jaskon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Jaskon/subscriptions",
    "organizations_url": "https://api.github.com/users/Jaskon/orgs",
    "repos_url": "https://api.github.com/users/Jaskon/repos",
    "events_url": "https://api.github.com/users/Jaskon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Jaskon/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "64188e5713085f871cbbc429742517b3381c2b50",
      "url": "https://api.github.com/repos/umputun/remark42/commits/64188e5713085f871cbbc429742517b3381c2b50",
      "html_url": "https://github.com/umputun/remark42/commit/64188e5713085f871cbbc429742517b3381c2b50"
    }
  ],
  "stats": {
    "total": 102,
    "additions": 89,
    "deletions": 13
  },
  "files": [
    {
      "sha": "2690e8a4e5943bade9fa1f742f8d1f10dfcdbb46",
      "filename": "frontend/apps/remark42/app/common/api.ts",
      "status": "modified",
      "additions": 13,
      "deletions": 3,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Fapi.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Fapi.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Fapi.ts?ref=497f3ce47f86dc782a7e721a20d67ac0bc3adc1e",
      "patch": "@@ -1,6 +1,16 @@\n import { siteId, url } from './settings';\n import { BASE_URL, API_BASE } from './constants';\n-import { Config, Comment, Tree, User, BlockedUser, Sorting, BlockTTL, Image } from './types';\n+import {\n+  Config,\n+  Comment,\n+  Tree,\n+  User,\n+  BlockedUser,\n+  Sorting,\n+  BlockTTL,\n+  Image,\n+  EmailSubVerificationStatus,\n+} from './types';\n import { apiFetcher, adminFetcher } from './fetcher';\n \n /* API methods */\n@@ -72,8 +82,8 @@ export const uploadImage = (image: File): Promise<Image> => {\n  * Start process of email subscription to updates\n  * @param emailAddress email for subscription\n  */\n-export const emailVerificationForSubscribe = (emailAddress: string) =>\n-  apiFetcher.post('/email/subscribe', {}, { address: emailAddress });\n+export const emailVerificationForSubscribe = (emailAddress: string): Promise<EmailSubVerificationStatus> =>\n+  apiFetcher.post('/email/subscribe', {}, { address: emailAddress, autoConfirm: true });\n \n /**\n  * Confirmation of email subscription to updates"
    },
    {
      "sha": "3d02ee560957a66dcd516c770fd2f47429400d45",
      "filename": "frontend/apps/remark42/app/common/types.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Ftypes.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Ftypes.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Ftypes.ts?ref=497f3ce47f86dc782a7e721a20d67ac0bc3adc1e",
      "patch": "@@ -156,3 +156,8 @@ export interface ApiError {\n   /** in-depth explanation */\n   error: string;\n }\n+\n+export interface EmailSubVerificationStatus {\n+  updated: boolean;\n+  address: string;\n+}"
    },
    {
      "sha": "8aa999ea9d8a3dd3d548e34fbceedd034ab623df",
      "filename": "frontend/apps/remark42/app/components/comment-form/__subscribe-by-email/comment-form__subscribe-by-email.test.tsx",
      "status": "modified",
      "additions": 45,
      "deletions": 1,
      "changes": 46,
      "blob_url": "https://github.com/umputun/remark42/blob/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment-form%2F__subscribe-by-email%2Fcomment-form__subscribe-by-email.test.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment-form%2F__subscribe-by-email%2Fcomment-form__subscribe-by-email.test.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment-form%2F__subscribe-by-email%2Fcomment-form__subscribe-by-email.test.tsx?ref=497f3ce47f86dc782a7e721a20d67ac0bc3adc1e",
      "patch": "@@ -18,6 +18,7 @@ import { persistEmail } from 'components/auth/auth.utils';\n import enMessages from 'locales/en.json';\n \n import { SubscribeByEmail, SubscribeByEmailForm } from '.';\n+import { RequestError } from '../../../utils/errorUtils';\n \n const emailVerificationForSubscribeMock = emailVerificationForSubscribe as unknown as jest.Mock<\n   ReturnType<typeof emailVerificationForSubscribe>\n@@ -29,6 +30,8 @@ const unsubscribeFromEmailUpdatesMock = unsubscribeFromEmailUpdates as unknown a\n   ReturnType<typeof unsubscribeFromEmailUpdates>\n >;\n \n+emailVerificationForSubscribeMock.mockImplementation((email) => Promise.resolve({ address: email, updated: false }));\n+\n const initialStore = {\n   user,\n   theme: 'light',\n@@ -104,7 +107,7 @@ describe('<SubscribeByEmailForm/>', () => {\n     expect(wrapper.text().startsWith('You are subscribed on updates by email')).toBe(true);\n   });\n \n-  it('should pass throw subscribe process', async () => {\n+  it('should pass through subscribe process', async () => {\n     const wrapper = createWrapper();\n \n     const input = wrapper.find('input');\n@@ -138,6 +141,47 @@ describe('<SubscribeByEmailForm/>', () => {\n     expect(wrapper.find(Button).text()).toEqual('Unsubscribe');\n   });\n \n+  it('should handle http error 409: already subscribed', async () => {\n+    emailVerificationForSubscribeMock.mockImplementationOnce(() => Promise.reject(new RequestError('', 409)));\n+\n+    const wrapper = createWrapper();\n+\n+    const input = wrapper.find('input');\n+    const form = wrapper.find('form');\n+\n+    input.getDOMNode<HTMLInputElement>().value = 'some@email.com';\n+    input.simulate('input');\n+    form.simulate('submit');\n+\n+    await sleep();\n+    wrapper.update();\n+\n+    expect(wrapper.text().startsWith('You are subscribed on updates by email')).toBe(true);\n+  });\n+\n+  it('should pass through subscribe process without confirmation', async () => {\n+    emailVerificationForSubscribeMock.mockImplementationOnce((email) =>\n+      Promise.resolve({ address: email, updated: true })\n+    );\n+\n+    const wrapper = createWrapper();\n+\n+    const input = wrapper.find('input');\n+    const form = wrapper.find('form');\n+\n+    input.getDOMNode<HTMLInputElement>().value = 'some@email.com';\n+    input.simulate('input');\n+    form.simulate('submit');\n+\n+    expect(emailVerificationForSubscribeMock).toHaveBeenCalledWith('some@email.com');\n+\n+    await sleep();\n+    wrapper.update();\n+\n+    expect(wrapper.text().startsWith('You have been subscribed on updates by email')).toBe(true);\n+    expect(wrapper.find(Button).text()).toEqual('Unsubscribe');\n+  });\n+\n   it('should fill in email from local storage', async () => {\n     const expected = 'someone@email.com';\n     persistEmail(expected);"
    },
    {
      "sha": "ad26b5005c8094608735f0be6dbae6478ad1a768",
      "filename": "frontend/apps/remark42/app/components/comment-form/__subscribe-by-email/comment-form__subscribe-by-email.tsx",
      "status": "modified",
      "additions": 22,
      "deletions": 9,
      "changes": 31,
      "blob_url": "https://github.com/umputun/remark42/blob/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment-form%2F__subscribe-by-email%2Fcomment-form__subscribe-by-email.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment-form%2F__subscribe-by-email%2Fcomment-form__subscribe-by-email.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment-form%2F__subscribe-by-email%2Fcomment-form__subscribe-by-email.tsx?ref=497f3ce47f86dc782a7e721a20d67ac0bc3adc1e",
      "patch": "@@ -8,7 +8,7 @@ import { User } from 'common/types';\n import { StoreState } from 'store';\n import { setUserSubscribed } from 'store/user/actions';\n import { sleep } from 'utils/sleep';\n-import { extractErrorMessageFromResponse } from 'utils/errorUtils';\n+import { extractErrorMessageFromResponse, RequestError } from 'utils/errorUtils';\n import { useTheme } from 'hooks/useTheme';\n import { getHandleClickProps } from 'common/accessibility';\n import { emailVerificationForSubscribe, emailConfirmationForSubscribe, unsubscribeFromEmailUpdates } from 'common/api';\n@@ -120,7 +120,7 @@ export const SubscribeByEmailForm: FunctionComponent = () => {\n   const subscribed = useSelector<StoreState, boolean>(({ user }) =>\n     user === null ? false : Boolean(user.email_subscription)\n   );\n-  const previousStep = useRef<Step | null>(null);\n+  const justSubscribed = useRef<Boolean>(false);\n \n   const [step, setStep] = useState(subscribed ? Step.Subscribed : Step.Email);\n \n@@ -136,16 +136,31 @@ export const SubscribeByEmailForm: FunctionComponent = () => {\n       setError(null);\n \n       try {\n+        let emailVerificationResponse;\n+\n         switch (step) {\n           case Step.Email:\n-            await emailVerificationForSubscribe(emailAddress);\n+            try {\n+              emailVerificationResponse = await emailVerificationForSubscribe(emailAddress);\n+              justSubscribed.current = true;\n+            } catch (e) {\n+              if ((e as RequestError).code !== 409) {\n+                throw e;\n+              }\n+              emailVerificationResponse = { address: emailAddress, updated: true };\n+            }\n+            if (emailVerificationResponse.updated) {\n+              dispatch(setUserSubscribed(true));\n+              setStep(Step.Subscribed);\n+              break;\n+            }\n             setToken('');\n             setStep(Step.Token);\n             break;\n           case Step.Token:\n             await emailConfirmationForSubscribe(currentToken);\n             dispatch(setUserSubscribed(true));\n-            previousStep.current = Step.Token;\n+            justSubscribed.current = true;\n             setStep(Step.Subscribed);\n             break;\n           default:\n@@ -210,7 +225,6 @@ export const SubscribeByEmailForm: FunctionComponent = () => {\n     try {\n       await unsubscribeFromEmailUpdates();\n       dispatch(setUserSubscribed(false));\n-      previousStep.current = Step.Subscribed;\n       setStep(Step.Unsubscribed);\n     } catch (e) {\n       // @ts-ignore\n@@ -229,10 +243,9 @@ export const SubscribeByEmailForm: FunctionComponent = () => {\n   }\n \n   if (step === Step.Subscribed) {\n-    const text =\n-      previousStep.current === Step.Token\n-        ? intl.formatMessage(messages.haveSubscribed)\n-        : intl.formatMessage(messages.subscribed);\n+    const text = justSubscribed.current\n+      ? intl.formatMessage(messages.haveSubscribed)\n+      : intl.formatMessage(messages.subscribed);\n \n     return (\n       <div className={b('comment-form__subscribe-by-email', { mods: { subscribed: true } })}>"
    },
    {
      "sha": "df17c922a278ae7059a4e6754a02d24d85ca0ace",
      "filename": "frontend/apps/remark42/app/utils/errorUtils.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2FerrorUtils.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/497f3ce47f86dc782a7e721a20d67ac0bc3adc1e/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2FerrorUtils.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2FerrorUtils.ts?ref=497f3ce47f86dc782a7e721a20d67ac0bc3adc1e",
      "patch": "@@ -97,6 +97,10 @@ export const errorMessages = defineMessages<string | number>({\n     id: 'errors.forbidden',\n     defaultMessage: 'Forbidden.',\n   },\n+  409: {\n+    id: 'errors.conflict',\n+    defaultMessage: 'Conflict.',\n+  },\n   429: {\n     id: 'errors.to-many-request',\n     defaultMessage: 'You have reached maximum request limit.',"
    }
  ]
}
