{
  "sha": "962f53f0aa5abe4220c3116be0cb861a5536a7b3",
  "node_id": "C_kwDOCQOkhNoAKDk2MmY1M2YwYWE1YWJlNDIyMGMzMTE2YmUwY2I4NjFhNTUzNmE3YjM",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "22412567+qwqcode@users.noreply.github.com",
      "date": "2024-05-01T04:51:18Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2024-05-01T04:51:18Z"
    },
    "message": "fix(ui/height_limit): height limit not working while loading images (#849)",
    "tree": {
      "sha": "b2a8af830f96f16a1fe2b0df33a7c2554e8ade1f",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/b2a8af830f96f16a1fe2b0df33a7c2554e8ade1f"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/962f53f0aa5abe4220c3116be0cb861a5536a7b3",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmMcpGCRC1aQ7uu5UhlAAAVT8QAHdTpWkQv6OrgkezfIGZ28Vs\nEVHoVbA0NvQSoyjk35bMlFGCbB7IbOYYnKQnUYa8dPHO5kLkqaCbUPXevu3DKssG\nHr3SwpZoTk09mQAl2qxa7lNmGz6NAypOndX/Il+TI5zC7e93pWHUn9Cg9uG+H7wf\nulAX6kX195yZP8FpptINHZGJqdjGC4Jyl2zIkB/IA643s5vYHxmG8+/m55ghZ/cC\nTf765NDURyrQy0XcDYMgpKP1h0HS3Es/9JmJkOMqmnpltkLfsqcnHudsvt43BIyH\nPTsOSdtkO3bgpQpiP1YVFtNcsjRXk8lgcX99ua/G2loUyPWQ+mTf5DuhRGykkqNF\nw8+HkQRyZVQ7Ni/8BZkIWMTVT1diAzkwCteQ563+TcAjl3gtDackiULjATvJqnb0\nPq0GvPrfguK2oHz4U4GbkAnR4zuG9CeH2/2DNO7NJWd7XTfr69eO6Q6xeMzAlPoH\nZJRkT+aDOSDKFczFWigf3yqSqdWU5bNOqVXm8TDF+u/6uW9e7c8RhoHisRGujV5m\nRNT/1gyEuro6VCsA88EFnLb57iHRiLcMYdNQqCV+GtXR4ZEdlKQYtswm/NKWI2wi\nuthzsOqxJ9upZWHxDqSi3M7Y7IzZmKgDFJnAlbuELqqs2A/2KKLKycWLQeqDItu+\n0Aka6m94WAMLwSya2k68\n=7LMQ\n-----END PGP SIGNATURE-----\n",
      "payload": "tree b2a8af830f96f16a1fe2b0df33a7c2554e8ade1f\nparent e132c31150916b56b89579909f9baab5286547e0\nauthor qwqcode <22412567+qwqcode@users.noreply.github.com> 1714539078 +0800\ncommitter GitHub <noreply@github.com> 1714539078 +0800\n\nfix(ui/height_limit): height limit not working while loading images (#849)\n\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/962f53f0aa5abe4220c3116be0cb861a5536a7b3",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/962f53f0aa5abe4220c3116be0cb861a5536a7b3",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/962f53f0aa5abe4220c3116be0cb861a5536a7b3/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e132c31150916b56b89579909f9baab5286547e0",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/e132c31150916b56b89579909f9baab5286547e0",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/e132c31150916b56b89579909f9baab5286547e0"
    }
  ],
  "stats": {
    "total": 81,
    "additions": 34,
    "deletions": 47
  },
  "files": [
    {
      "sha": "9cc4aac4df652ca5cb035661fd80e6558068057a",
      "filename": "ui/artalk/src/comment/height-limit.ts",
      "status": "modified",
      "additions": 31,
      "deletions": 23,
      "changes": 54,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/962f53f0aa5abe4220c3116be0cb861a5536a7b3/ui%2Fartalk%2Fsrc%2Fcomment%2Fheight-limit.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/962f53f0aa5abe4220c3116be0cb861a5536a7b3/ui%2Fartalk%2Fsrc%2Fcomment%2Fheight-limit.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fcomment%2Fheight-limit.ts?ref=962f53f0aa5abe4220c3116be0cb861a5536a7b3",
      "patch": "@@ -16,33 +16,40 @@ export interface IHeightLimitRule {\n   max: number\n \n   /** Whether or not the element contains `<img />` */\n-  imgContains?: boolean\n+  imgCheck?: boolean\n }\n \n export type THeightLimitRuleSet = IHeightLimitRule[]\n \n /** Check all elements below the max height limit */\n export function check(conf: IHeightLimitConf, rules: THeightLimitRuleSet) {\n-  rules.forEach(({ el, max: maxHeight, imgContains }) => {\n+  rules.forEach(({ el, max, imgCheck }) => {\n+    if (!el) return\n+\n+    // set max height to limit the height\n+    el.style.maxHeight = `${max + 1}px` // allow 2px more for next detecting\n+\n     const _apply = () => {\n-      if (!el) return\n-      if (!conf.scrollable)\n-        applyHeightLimit({\n-          el,\n-          maxHeight,\n-          postBtnClick: conf.postExpandBtnClick,\n-        })\n-      else applyScrollableHeightLimit({ el, maxHeight })\n+      const postBtnClick = conf.postExpandBtnClick\n+      !conf.scrollable\n+        ? applyHeightLimit({ el, max, postBtnClick })\n+        : applyScrollableHeightLimit({ el, max })\n     }\n \n     // checking\n     const _check = () => {\n-      if (el && Utils.getHeight(el) > maxHeight) _apply() // 是否超过高度\n+      if (Utils.getHeight(el) > max) _apply() // 是否超过高度\n+    }\n+\n+    _check() // check immediately\n+\n+    // image check\n+    if (imgCheck) {\n+      // check again when image loaded\n+      el.querySelectorAll<HTMLImageElement>('.atk-content img').forEach((img) => {\n+        img.onload = () => _check()\n+      })\n     }\n-    _check() // check now\n-    if (imgContains && el)\n-      // check again if img contains\n-      Utils.onImagesLoaded(el, () => _check())\n   })\n }\n \n@@ -52,15 +59,15 @@ const HEIGHT_LIMIT_CSS = 'atk-height-limit'\n /** Apply height limit on an element and add expand btn */\n export function applyHeightLimit(obj: {\n   el: HTMLElement\n-  maxHeight: number\n+  max: number\n   postBtnClick?: (e: MouseEvent) => void\n }) {\n   if (!obj.el) return\n-  if (!obj.maxHeight) return\n+  if (!obj.max) return\n   if (obj.el.classList.contains(HEIGHT_LIMIT_CSS)) return\n \n   obj.el.classList.add(HEIGHT_LIMIT_CSS)\n-  obj.el.style.height = `${obj.maxHeight}px`\n+  obj.el.style.height = `${obj.max}px`\n   obj.el.style.overflow = 'hidden'\n \n   /* Expand button */\n@@ -86,16 +93,17 @@ export function disposeHeightLimit($el: HTMLElement) {\n     if (e.classList.contains('atk-height-limit-btn')) e.remove()\n   })\n   $el.style.height = ''\n+  $el.style.maxHeight = ''\n   $el.style.overflow = ''\n }\n \n /** Height limit scrollable CSS class name */\n const HEIGHT_LIMIT_SCROLL_CSS = 'atk-height-limit-scroll'\n \n /** Apply scrollable height limit */\n-export function applyScrollableHeightLimit(obj: { el: HTMLElement; maxHeight: number }) {\n-  if (!obj.el) return\n-  if (obj.el.classList.contains(HEIGHT_LIMIT_SCROLL_CSS)) return\n-  obj.el.classList.add(HEIGHT_LIMIT_SCROLL_CSS)\n-  obj.el.style.height = `${obj.maxHeight}px`\n+export function applyScrollableHeightLimit(opt: { el: HTMLElement; max: number }) {\n+  if (!opt.el) return\n+  if (opt.el.classList.contains(HEIGHT_LIMIT_SCROLL_CSS)) return\n+  opt.el.classList.add(HEIGHT_LIMIT_SCROLL_CSS)\n+  opt.el.style.height = `${opt.max}px`\n }"
    },
    {
      "sha": "cff75ae78df7d81571cc7551657b19a29f5ef008",
      "filename": "ui/artalk/src/comment/render.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/962f53f0aa5abe4220c3116be0cb861a5536a7b3/ui%2Fartalk%2Fsrc%2Fcomment%2Frender.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/962f53f0aa5abe4220c3116be0cb861a5536a7b3/ui%2Fartalk%2Fsrc%2Fcomment%2Frender.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fcomment%2Frender.ts?ref=962f53f0aa5abe4220c3116be0cb861a5536a7b3",
      "patch": "@@ -88,10 +88,10 @@ export default class Render {\n       },\n       [\n         // 评论内容限高\n-        { el: this.$content, max: contentMaxH, imgContains: true },\n-        { el: this.$replyTo, max: contentMaxH, imgContains: true },\n+        { el: this.$content, max: contentMaxH, imgCheck: true },\n+        { el: this.$replyTo, max: contentMaxH, imgCheck: true },\n         // 子评论区域限高（仅嵌套模式）\n-        { el: this.$childrenWrap, max: childrenMaxH, imgContains: false },\n+        { el: this.$childrenWrap, max: childrenMaxH, imgCheck: false },\n       ],\n     )\n   }"
    },
    {
      "sha": "763fcc74f0b73b5ea81ada90969f2c5537996c27",
      "filename": "ui/artalk/src/lib/utils.ts",
      "status": "modified",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/962f53f0aa5abe4220c3116be0cb861a5536a7b3/ui%2Fartalk%2Fsrc%2Flib%2Futils.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/962f53f0aa5abe4220c3116be0cb861a5536a7b3/ui%2Fartalk%2Fsrc%2Flib%2Futils.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Flib%2Futils.ts?ref=962f53f0aa5abe4220c3116be0cb861a5536a7b3",
      "patch": "@@ -106,27 +106,6 @@ export function timeAgo(date: Date, $t: Function = (n: string) => n) {\n   }\n }\n \n-/** 所有图片加载完毕后执行 */\n-export function onImagesLoaded($container: HTMLElement, event: Function) {\n-  if (!$container) return\n-  const images = $container.getElementsByTagName('img')\n-  if (!images.length) return\n-  let loaded = images.length\n-  for (let i = 0; i < images.length; i++) {\n-    if (images[i].complete) {\n-      loaded--\n-    } else {\n-      // eslint-disable-next-line @typescript-eslint/no-loop-func\n-      images[i].addEventListener('load', () => {\n-        loaded--\n-        if (loaded === 0) event()\n-      })\n-    }\n-\n-    if (loaded === 0) event()\n-  }\n-}\n-\n export function getGravatarURL(opts: { params: string; mirror: string; emailMD5: string }) {\n   return `${opts.mirror.replace(/\\/$/, '')}/${opts.emailMD5}?${opts.params.replace(/^\\?/, '')}`\n }"
    }
  ]
}
