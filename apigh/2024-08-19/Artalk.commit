{
  "sha": "4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
  "node_id": "C_kwDOCQOkhNoAKDRkN2UxNTdmZjA5OWRiNDE0M2ZiODFjYTcwN2NlYjhiYzAyZjZlNzU",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "22412567+qwqcode@users.noreply.github.com",
      "date": "2024-08-19T08:27:20Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2024-08-19T08:27:20Z"
    },
    "message": "fix(ui/sidebar): show env variables in sidebar settings ui (#946) (#956)\n\n* fix(ui/sidebar): show env variables in sidebar settings ui (#946)\r\n\r\n* fix unit test",
    "tree": {
      "sha": "6ef044ecdd14c3f129649906e48b0e9350749fd3",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/6ef044ecdd14c3f129649906e48b0e9350749fd3"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmwwHoCRC1aQ7uu5UhlAAAqjMQAFQxT30w0a90lieCfJWMbmV2\nz2kchr8mXsg29FXY4VNbOUu6dWmLBkfV4LCCGnoDF4iUXoO1aUIfdSsYm6cAjUQf\nHrkaK94p3LTowiKpOeYc8Z4HZVCAKxBrfqtnZc4GqU7T+hJFvirH9nGqIvdApvp0\nd6/rHOcuHtKk2Y/7HFedMNvYDgf5qnBScIn5fwY6WIzghXb6wKPqYvtQfE/hesH3\n6EJbAaXdKaDmyPNfoe0bbeFIbgERPFJLfnpqDWWMtth5loPov+dlkSYwNFNR7nIF\nq1KH+6CieogEP/5XHCwZAFLIWvcYtxpEbGKUXPhmxPrF89OtZqqxzaTu8layyhZE\nsm52GEppO1LjxfjlA6RDWTiArxPvyliLhyfoSvtIcAln5O7LPp0f3dG2CFbml5yO\nn6iAxaGAWjRopQEoitnqH+ZyXLKjIT5zUbLcXHnXnVijPu9/V8ITiTDfgHEAo3v1\npxIvpnxj9q4rYRkTtW/s5btIfdGv9z/BGpQNa+M5+AbI06cfuJanYUeHsci9QH+W\noAWUzd920t/7RBpk8mYUPeoo0RbrwQoQ/OtKsoSyc3spoRxdNK4KsXW7T3CyZihl\nIMwp2+F5+wiE6f9UhhTaW9aXhdtDkJNYfZYP07oiAml/5IGMxwNA95Vxw1fFX9/W\n9YIdbQLdc94Y8JTx1kCc\n=uJBZ\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 6ef044ecdd14c3f129649906e48b0e9350749fd3\nparent 528847de7bb2849538c481f6ce5651b8f6a43a72\nauthor qwqcode <22412567+qwqcode@users.noreply.github.com> 1724056040 +0800\ncommitter GitHub <noreply@github.com> 1724056040 +0800\n\nfix(ui/sidebar): show env variables in sidebar settings ui (#946) (#956)\n\n* fix(ui/sidebar): show env variables in sidebar settings ui (#946)\r\n\r\n* fix unit test"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "528847de7bb2849538c481f6ce5651b8f6a43a72",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/528847de7bb2849538c481f6ce5651b8f6a43a72",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/528847de7bb2849538c481f6ce5651b8f6a43a72"
    }
  ],
  "stats": {
    "total": 205,
    "additions": 153,
    "deletions": 52
  },
  "files": [
    {
      "sha": "a5d3c0254d89f05df65ed929db613f020f9e1b1d",
      "filename": "docs/swagger/docs.go",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/docs%2Fswagger%2Fdocs.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/docs%2Fswagger%2Fdocs.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/docs%2Fswagger%2Fdocs.go?ref=4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
      "patch": "@@ -4970,9 +4970,16 @@ const docTemplate = `{\n         \"handler.ResponseSettingGet\": {\n             \"type\": \"object\",\n             \"required\": [\n+                \"envs\",\n                 \"yaml\"\n             ],\n             \"properties\": {\n+                \"envs\": {\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                        \"type\": \"string\"\n+                    }\n+                },\n                 \"yaml\": {\n                     \"type\": \"string\"\n                 }"
    },
    {
      "sha": "eb442a5fce946723a6e300e2cbf68d0b0c5aac9b",
      "filename": "docs/swagger/swagger.json",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/docs%2Fswagger%2Fswagger.json",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/docs%2Fswagger%2Fswagger.json",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/docs%2Fswagger%2Fswagger.json?ref=4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
      "patch": "@@ -4963,9 +4963,16 @@\n         \"handler.ResponseSettingGet\": {\n             \"type\": \"object\",\n             \"required\": [\n+                \"envs\",\n                 \"yaml\"\n             ],\n             \"properties\": {\n+                \"envs\": {\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                        \"type\": \"string\"\n+                    }\n+                },\n                 \"yaml\": {\n                     \"type\": \"string\"\n                 }"
    },
    {
      "sha": "59d527cd1b61dd6b520221434a880fb2e8a727cb",
      "filename": "docs/swagger/swagger.yaml",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/docs%2Fswagger%2Fswagger.yaml",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/docs%2Fswagger%2Fswagger.yaml",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/docs%2Fswagger%2Fswagger.yaml?ref=4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
      "patch": "@@ -1012,9 +1012,14 @@ definitions:\n     type: object\n   handler.ResponseSettingGet:\n     properties:\n+      envs:\n+        items:\n+          type: string\n+        type: array\n       yaml:\n         type: string\n     required:\n+    - envs\n     - yaml\n     type: object\n   handler.ResponseSettingTemplate:"
    },
    {
      "sha": "484e24d8e4aaa15f6219a5cdad993ac5be866a10",
      "filename": "server/handler/setting_get.go",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/server%2Fhandler%2Fsetting_get.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/server%2Fhandler%2Fsetting_get.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/server%2Fhandler%2Fsetting_get.go?ref=4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
      "patch": "@@ -2,15 +2,18 @@ package handler\n \n import (\n \t\"os\"\n+\t\"strings\"\n \n \t\"github.com/ArtalkJS/Artalk/internal/core\"\n \t\"github.com/ArtalkJS/Artalk/internal/i18n\"\n \t\"github.com/ArtalkJS/Artalk/server/common\"\n \t\"github.com/gofiber/fiber/v2\"\n+\t\"github.com/samber/lo\"\n )\n \n type ResponseSettingGet struct {\n-\tYaml string `json:\"yaml\"`\n+\tYaml string   `json:\"yaml\"`\n+\tEnvs []string `json:\"envs\"`\n }\n \n // @Id           GetSettings\n@@ -30,8 +33,14 @@ func SettingGet(app *core.App, router fiber.Router) {\n \t\t\treturn common.RespError(c, 500, i18n.T(\"Config file read failed\"))\n \t\t}\n \n+\t\t// get all environment variables which start with ATK_\n+\t\tenvs := lo.Filter(os.Environ(), func(v string, _ int) bool {\n+\t\t\treturn strings.HasPrefix(v, \"ATK_\")\n+\t\t})\n+\n \t\treturn common.RespData(c, ResponseSettingGet{\n \t\t\tYaml: string(dat),\n+\t\t\tEnvs: envs,\n \t\t})\n \t}))\n }"
    },
    {
      "sha": "143e291fda5388398017c6891c16fd5adf6de8bb",
      "filename": "ui/artalk-sidebar/src/components/PreferenceArr.vue",
      "status": "modified",
      "additions": 16,
      "deletions": 4,
      "changes": 20,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk-sidebar%2Fsrc%2Fcomponents%2FPreferenceArr.vue",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk-sidebar%2Fsrc%2Fcomponents%2FPreferenceArr.vue",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk-sidebar%2Fsrc%2Fcomponents%2FPreferenceArr.vue?ref=4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
      "patch": "@@ -6,14 +6,22 @@ const props = defineProps<{\n }>()\n \n const customValue = ref<string[]>([])\n+const disabled = ref(false)\n \n onMounted(() => {\n   sync()\n })\n \n function sync() {\n   const value = settings.get().getCustom(props.node.path)\n-  customValue.value = value && typeof value.toJSON === 'function' ? value.toJSON() : []\n+  disabled.value = !!settings.get().getEnvByPath(props.node.path)\n+  if (typeof value === 'object' && 'toJSON' in value && typeof value.toJSON === 'function') {\n+    customValue.value = value.toJSON()\n+  } else if (typeof value === 'string') {\n+    customValue.value = value.split(' ')\n+  } else {\n+    customValue.value = []\n+  }\n }\n \n function save() {\n@@ -43,21 +51,25 @@ function add() {\n       <input\n         type=\"text\"\n         :value=\"String(item)\"\n+        :disabled=\"disabled\"\n         @change=\"onChange(index, ($event.target as any).value)\"\n       />\n-      <button class=\"act-btn\" @click=\"remove(index)\">-</button>\n+      <button v-if=\"!disabled\" class=\"act-btn\" @click=\"remove(index)\">-</button>\n     </div>\n-    <div class=\"act-grp\">\n+    <div v-if=\"!disabled\" class=\"act-grp\">\n       <button class=\"act-btn\" @click=\"add()\">+</button>\n     </div>\n   </div>\n </template>\n \n <style scoped lang=\"scss\">\n+.arr-grp {\n+  width: 100%;\n+}\n+\n .arr-item {\n   position: relative;\n   margin-bottom: 20px;\n-  margin-left: 10px;\n   padding-right: 50px;\n \n   .act-btn {"
    },
    {
      "sha": "4167d821bfdbf6593d371bd7d1b2e8084aac5bde",
      "filename": "ui/artalk-sidebar/src/components/PreferenceItem.vue",
      "status": "modified",
      "additions": 31,
      "deletions": 3,
      "changes": 34,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk-sidebar%2Fsrc%2Fcomponents%2FPreferenceItem.vue",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk-sidebar%2Fsrc%2Fcomponents%2FPreferenceItem.vue",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk-sidebar%2Fsrc%2Fcomponents%2FPreferenceItem.vue?ref=4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
      "patch": "@@ -6,10 +6,14 @@ const props = defineProps<{\n }>()\n \n const value = ref('')\n+const disabled = ref(false)\n+\n+const { t } = useI18n()\n \n onBeforeMount(() => {\n   // initial value\n   value.value = settings.get().getCustom(props.node.path)\n+  disabled.value = !!settings.get().getEnvByPath(props.node.path)\n })\n \n function onChange() {\n@@ -27,14 +31,18 @@ function onChange() {\n     </div>\n \n     <div class=\"value\">\n+      <div v-if=\"disabled\" class=\"disable-note\">\n+        {{ t('envVarControlHint', { key: 'ATK_' + props.node.path.toUpperCase() }) }}\n+      </div>\n+\n       <!-- Array -->\n       <template v-if=\"node.type === 'array'\">\n         <PreferenceArr :node=\"node\" />\n       </template>\n \n       <!-- 候选框 -->\n       <template v-else-if=\"node.selector\">\n-        <select v-model=\"value\" @change=\"onChange\">\n+        <select v-model=\"value\" :disabled=\"disabled\" @change=\"onChange\">\n           <option v-for=\"(item, i) in node.selector\" :key=\"i\" :value=\"item\">\n             {{ item }}\n           </option>\n@@ -43,12 +51,12 @@ function onChange() {\n \n       <!-- 开关 -->\n       <template v-else-if=\"node.type === 'boolean'\">\n-        <input v-model=\"value\" type=\"checkbox\" @change=\"onChange\" />\n+        <input v-model=\"value\" type=\"checkbox\" :disabled=\"disabled\" @change=\"onChange\" />\n       </template>\n \n       <!-- 文本框 -->\n       <template v-else>\n-        <input v-model=\"value\" type=\"text\" @change=\"onChange\" />\n+        <input v-model=\"value\" type=\"text\" :disabled=\"disabled\" @change=\"onChange\" />\n       </template>\n     </div>\n   </div>\n@@ -78,12 +86,32 @@ function onChange() {\n   }\n \n   & > .value {\n+    position: relative;\n     flex: 1;\n     display: flex;\n     flex-direction: row;\n     justify-content: flex-end;\n     align-items: center;\n     min-height: 35px;\n+\n+    &:hover {\n+      .disable-note {\n+        opacity: 1;\n+      }\n+    }\n+\n+    .disable-note {\n+      z-index: 999;\n+      padding: 3px 8px;\n+      background: rgba(105, 113, 130, 0.9);\n+      color: #fff;\n+      position: absolute;\n+      top: -30px;\n+      font-size: 13px;\n+      left: 0;\n+      opacity: 0;\n+      transition: opacity 0.2s;\n+    }\n   }\n }\n </style>"
    },
    {
      "sha": "e572969173dde967c46f7e68edd8f9e12b8a5257",
      "filename": "ui/artalk-sidebar/src/i18n/messages.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk-sidebar%2Fsrc%2Fi18n%2Fmessages.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk-sidebar%2Fsrc%2Fi18n%2Fmessages.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk-sidebar%2Fsrc%2Fi18n%2Fmessages.ts?ref=4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
      "patch": "@@ -35,6 +35,7 @@ const en = {\n   commentAllowAll: 'Anyone Comment',\n   commentOnlyAdmin: 'Admin Comment Only',\n   config: 'Config',\n+  envVarControlHint: 'Referenced by the environment variable {key}',\n   userAdminHint: 'Admin user',\n   userInConfHint: 'This user is defined in config file',\n   edit: 'Edit',\n@@ -118,6 +119,7 @@ const zhCN: typeof en = {\n   commentAllowAll: '所有人可评',\n   commentOnlyAdmin: '仅管理员可评',\n   config: '配置文件',\n+  envVarControlHint: '由环境变量 {key} 控制',\n   userAdminHint: '该用户具有管理员权限',\n   userInConfHint: '该用户存在于配置文件中',\n   edit: '编辑',\n@@ -201,6 +203,7 @@ const zhTW: typeof en = {\n   commentAllowAll: '允許任何人評論',\n   commentOnlyAdmin: '僅允許管理員評論',\n   config: '配置文件',\n+  envVarControlHint: '由環境變數 {key} 參照',\n   userAdminHint: '該用戶具有管理員權限',\n   userInConfHint: '該用戶存在於配置文件中',\n   edit: '編輯',"
    },
    {
      "sha": "04ec79b2181cca3eac6eeab74e87ddefdfa3fd4c",
      "filename": "ui/artalk-sidebar/src/lib/settings.ts",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk-sidebar%2Fsrc%2Flib%2Fsettings.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk-sidebar%2Fsrc%2Flib%2Fsettings.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk-sidebar%2Fsrc%2Flib%2Fsettings.ts?ref=4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
      "patch": "@@ -5,6 +5,7 @@ export class Settings {\n   private tree: OptionNode\n   private flatten: { [path: string]: OptionNode }\n   private customs = shallowRef<YAML.Document.Parsed<YAML.ParsedNode>>()\n+  private envs = shallowRef<{ [key: string]: string }>()\n \n   constructor(yamlObj: YAML.Document.Parsed) {\n     this.tree = getTree(yamlObj)\n@@ -27,7 +28,35 @@ export class Settings {\n     this.customs.value = YAML.parseDocument(yamlStr)\n   }\n \n+  setEnvs(envs: string[]) {\n+    const envsObj: { [key: string]: string } = {}\n+    envs.forEach((env) => {\n+      const [key, value] = env.split('=')\n+      envsObj[key] = value\n+    })\n+    this.envs.value = envsObj\n+  }\n+\n+  getEnv(key: string) {\n+    return this.envs.value?.[key] || null\n+  }\n+\n+  getEnvByPath(path: string) {\n+    // replace `.` to `_` and uppercase\n+    // replace `ATK_TRUSTED_DOMAINS_0` to `ATK_TRUSTED_DOMAINS`\n+    // replace `ATK_ADMIN_USERS_0_NAME` to `ATK_ADMIN_USERS`\n+    return this.getEnv(\n+      'ATK_' +\n+        path\n+          .replace(/\\./g, '_')\n+          .toUpperCase()\n+          .replace(/(_\\d+?_\\w+|_\\d+)$/, ''),\n+    )\n+  }\n+\n   getCustom(path: string) {\n+    const env = this.getEnvByPath(path)\n+    if (env) return env\n     return this.customs.value?.getIn(path.split('.')) as any\n   }\n "
    },
    {
      "sha": "35fc287b522cfaf38546d16e1a8e511749a8257a",
      "filename": "ui/artalk-sidebar/src/pages/settings.vue",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk-sidebar%2Fsrc%2Fpages%2Fsettings.vue",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk-sidebar%2Fsrc%2Fpages%2Fsettings.vue",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk-sidebar%2Fsrc%2Fpages%2Fsettings.vue?ref=4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
      "patch": "@@ -33,6 +33,7 @@ onMounted(() => {\n     tree.value = settings.init(yamlObj).getTree()\n     // console.log(tree.value)\n     settings.get().setCustoms(custom.data.yaml)\n+    settings.get().setEnvs(custom.data.envs)\n   })\n })\n "
    },
    {
      "sha": "3956e3bd9e5b6ab0b599e34bb9aad727c8f1058f",
      "filename": "ui/artalk/src/api/v2.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk%2Fsrc%2Fapi%2Fv2.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk%2Fsrc%2Fapi%2Fv2.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fapi%2Fv2.ts?ref=4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
      "patch": "@@ -486,6 +486,7 @@ export interface HandlerResponsePageUpdate {\n }\n \n export interface HandlerResponseSettingGet {\n+  envs: string[]\n   yaml: string\n }\n \n@@ -697,8 +698,8 @@ export class HttpClient<SecurityDataType = unknown> {\n           property instanceof Blob\n             ? property\n             : typeof property === 'object' && property !== null\n-            ? JSON.stringify(property)\n-            : `${property}`,\n+              ? JSON.stringify(property)\n+              : `${property}`,\n         )\n         return formData\n       }, new FormData()),\n@@ -774,7 +775,7 @@ export class HttpClient<SecurityDataType = unknown> {\n         body: typeof body === 'undefined' || body === null ? null : payloadFormatter(body),\n       },\n     ).then(async (response) => {\n-      const r = response as HttpResponse<T, E>\n+      const r = response.clone() as HttpResponse<T, E>\n       r.data = null as unknown as T\n       r.error = null as unknown as E\n "
    },
    {
      "sha": "5cd3c230977402fa9334446f72317cd8a89bcfda",
      "filename": "ui/artalk/tests/ui-api.test.ts",
      "status": "modified",
      "additions": 40,
      "deletions": 41,
      "changes": 81,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk%2Ftests%2Fui-api.test.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/4d7e157ff099db4143fb81ca707ceb8bc02f6e75/ui%2Fartalk%2Ftests%2Fui-api.test.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Ftests%2Fui-api.test.ts?ref=4d7e157ff099db4143fb81ca707ceb8bc02f6e75",
      "patch": "@@ -18,49 +18,48 @@ const ContainerID = 'artalk-container'\n \n beforeAll(() => {\n   // mock fetch\n-  global.fetch = vi.fn().mockImplementation((url: string, init: RequestInit) =>\n-    Promise.resolve({\n-      ok: true,\n-      status: 200,\n-      json: () => {\n-        let resp: any = {}\n-\n-        const map = {\n-          '/api/v2/conf': {\n-            frontend_conf: RemoteConf,\n-            version: {},\n-          },\n-          '/api/v2/stat': { data: { '/': 0 } },\n-          '/api/v2/pages/pv': { pv: 2 },\n-          '/api/v2/notifies': { notifies: [], count: 0 },\n-          '/api/v2/comments': {\n-            comments: [],\n-            count: 0,\n-            roots_count: 0,\n-            page: {\n-              id: 4,\n-              admin_only: false,\n-              key: '/',\n-              url: '/',\n-              title: 'Artalk DEMO',\n-              site_name: 'ArtalkDocs',\n-              vote_up: 0,\n-              vote_down: 0,\n-              pv: 1,\n-            },\n-          },\n-        }\n-\n-        const path = new URL(url).pathname\n-\n-        Object.entries(map).forEach(([k, v]) => {\n-          if (path.startsWith(k)) resp = v\n-        })\n+  global.fetch = vi.fn().mockImplementation((url: string, init: RequestInit) => {\n+    let resp: any = {}\n \n-        return Promise.resolve(resp)\n+    const map = {\n+      '/api/v2/conf': {\n+        frontend_conf: RemoteConf,\n+        version: {},\n+      },\n+      '/api/v2/stat': { data: { '/': 0 } },\n+      '/api/v2/pages/pv': { pv: 2 },\n+      '/api/v2/notifies': { notifies: [], count: 0 },\n+      '/api/v2/comments': {\n+        comments: [],\n+        count: 0,\n+        roots_count: 0,\n+        page: {\n+          id: 4,\n+          admin_only: false,\n+          key: '/',\n+          url: '/',\n+          title: 'Artalk DEMO',\n+          site_name: 'ArtalkDocs',\n+          vote_up: 0,\n+          vote_down: 0,\n+          pv: 1,\n+        },\n       },\n-    }),\n-  ) as any\n+    }\n+\n+    const path = new URL(url).pathname\n+    Object.entries(map).forEach(([k, v]) => {\n+      if (path.startsWith(k)) resp = v\n+    })\n+\n+    const mockResponse = new Response(JSON.stringify(resp), {\n+      status: 200,\n+      statusText: 'OK',\n+      headers: { 'Content-Type': 'application/json' },\n+    })\n+\n+    return Promise.resolve(mockResponse)\n+  })\n })\n \n describe('Artalk instance', () => {"
    }
  ]
}
