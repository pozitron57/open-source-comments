{
  "sha": "5d20ff1ef52b43795b9f3f0df8993c3bd9888032",
  "node_id": "C_kwDOCQOkhNoAKDVkMjBmZjFlZjUyYjQzNzk1YjlmM2YwZGY4OTkzYzNiZDk4ODgwMzI",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-02-06T07:55:27Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-02-06T08:03:04Z"
    },
    "message": "chore(fiber_logger): correct the http status code range for err log",
    "tree": {
      "sha": "68af8a12e4ad53731358acec874cdc39571fbcc5",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/68af8a12e4ad53731358acec874cdc39571fbcc5"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/5d20ff1ef52b43795b9f3f0df8993c3bd9888032",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZcHn4wAKCRDUbg8O6nwT\napgBAP9+6VaTgJoSTkktkjlzpRCE5pe8vWbSmCilYUJf0V8nkgEAvWSHBMaGoPdS\nDqcqPWA7JTs6OfEfELG0xqwnWaxEZg0=\n=PHNu\n-----END PGP SIGNATURE-----",
      "payload": "tree 68af8a12e4ad53731358acec874cdc39571fbcc5\nparent 86e0eeafd12bf4b7ad2d47c161fc322c49b112a3\nauthor qwqcode <qwqcode@gmail.com> 1707206127 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1707206584 +0800\n\nchore(fiber_logger): correct the http status code range for err log\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/5d20ff1ef52b43795b9f3f0df8993c3bd9888032",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/5d20ff1ef52b43795b9f3f0df8993c3bd9888032",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/5d20ff1ef52b43795b9f3f0df8993c3bd9888032/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "86e0eeafd12bf4b7ad2d47c161fc322c49b112a3",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/86e0eeafd12bf4b7ad2d47c161fc322c49b112a3",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/86e0eeafd12bf4b7ad2d47c161fc322c49b112a3"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 4,
    "deletions": 4
  },
  "files": [
    {
      "sha": "e0e1aa53cde84a9574149ade7c00ea8fb07773f6",
      "filename": "server/server.go",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/5d20ff1ef52b43795b9f3f0df8993c3bd9888032/server%2Fserver.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/5d20ff1ef52b43795b9f3f0df8993c3bd9888032/server%2Fserver.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/server%2Fserver.go?ref=5d20ff1ef52b43795b9f3f0df8993c3bd9888032",
      "patch": "@@ -57,11 +57,11 @@ func Serve(app *core.App) (*fiber.App, error) {\n \t\tFormat: \"[${status}] ${method} ${path} ${latency} ${ip} ${reqHeader:X-Request-ID} ${referer} ${ua}\\n\",\n \t\tOutput: io.Discard,\n \t\tDone: func(c *fiber.Ctx, logString []byte) {\n-\t\t\tstatusOK := c.Response().StatusCode() >= 200 && c.Response().StatusCode() <= 302\n-\t\t\tif !statusOK {\n-\t\t\t\tlog.StandardLogger().WriterLevel(log.ErrorLevel).Write(logString)\n-\t\t\t} else {\n+\t\t\tcode := c.Response().StatusCode()\n+\t\t\tif (code >= 200 && code <= 299) || (code >= 300 && code <= 308) {\n \t\t\t\tlog.StandardLogger().WriterLevel(log.DebugLevel).Write(logString)\n+\t\t\t} else {\n+\t\t\t\tlog.StandardLogger().WriterLevel(log.ErrorLevel).Write(logString)\n \t\t\t}\n \t\t},\n \t}))"
    }
  ]
}
