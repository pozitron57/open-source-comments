{
  "sha": "58657524cffdf0165fa33c05d43c6f8ed555c274",
  "node_id": "C_kwDOCQOkhNoAKDU4NjU3NTI0Y2ZmZGYwMTY1ZmEzM2MwNWQ0M2M2ZjhlZDU1NWMyNzQ",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-05-11T14:29:22Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2024-05-11T14:29:40Z"
    },
    "message": "fix(ui/types): remove marked dependency in dts (#868)",
    "tree": {
      "sha": "2ac6c65d2e06a282fedd896ee1a1b6c8daff744f",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/2ac6c65d2e06a282fedd896ee1a1b6c8daff744f"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/58657524cffdf0165fa33c05d43c6f8ed555c274",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCZj+A1AAKCRDUbg8O6nwT\navY3AP9W2cSiwRj4iCb6gGleeUyPqCscRoVbVPMClrROUqhZsAD/WxQb+4YCbWrJ\nHipz6yzgXrvj6W98MGY5XI7FslWdrQM=\n=5qLT\n-----END PGP SIGNATURE-----",
      "payload": "tree 2ac6c65d2e06a282fedd896ee1a1b6c8daff744f\nparent b5db1616974dd5350022a13004abe9e8833bafd0\nauthor qwqcode <qwqcode@gmail.com> 1715437762 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1715437780 +0800\n\nfix(ui/types): remove marked dependency in dts (#868)\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/58657524cffdf0165fa33c05d43c6f8ed555c274",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/58657524cffdf0165fa33c05d43c6f8ed555c274",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/58657524cffdf0165fa33c05d43c6f8ed555c274/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b5db1616974dd5350022a13004abe9e8833bafd0",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/b5db1616974dd5350022a13004abe9e8833bafd0",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/b5db1616974dd5350022a13004abe9e8833bafd0"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 5,
    "deletions": 8
  },
  "files": [
    {
      "sha": "6198295a875e3352d38b7555d8142114f0be29dd",
      "filename": "ui/artalk/src/lib/marked-renderer.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/58657524cffdf0165fa33c05d43c6f8ed555c274/ui%2Fartalk%2Fsrc%2Flib%2Fmarked-renderer.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/58657524cffdf0165fa33c05d43c6f8ed555c274/ui%2Fartalk%2Fsrc%2Flib%2Fmarked-renderer.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Flib%2Fmarked-renderer.ts?ref=58657524cffdf0165fa33c05d43c6f8ed555c274",
      "patch": "@@ -1,4 +1,4 @@\n-import { marked as libMarked } from 'marked'\n+import { marked } from 'marked'\n import type { ArtalkConfig } from '@/types'\n import { renderCode } from './highlight'\n \n@@ -7,7 +7,7 @@ export interface RendererOptions {\n }\n \n export function getRenderer(options: RendererOptions) {\n-  const renderer = new libMarked.Renderer()\n+  const renderer = new marked.Renderer()\n   renderer.link = markedLinkRenderer(renderer, renderer.link)\n   renderer.code = markedCodeRenderer()\n   renderer.image = markedImageRenderer(renderer, renderer.image, options)"
    },
    {
      "sha": "15b51f91e56a9ff9c8a18eac477ec5e69df4012c",
      "filename": "ui/artalk/src/lib/marked.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/58657524cffdf0165fa33c05d43c6f8ed555c274/ui%2Fartalk%2Fsrc%2Flib%2Fmarked.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/58657524cffdf0165fa33c05d43c6f8ed555c274/ui%2Fartalk%2Fsrc%2Flib%2Fmarked.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Flib%2Fmarked.ts?ref=58657524cffdf0165fa33c05d43c6f8ed555c274",
      "patch": "@@ -6,9 +6,8 @@ import { renderCode } from './highlight'\n import { getRenderer } from './marked-renderer'\n \n type Replacer = (raw: string) => string\n-export type TMarked = typeof libMarked\n \n-let instance: TMarked | undefined\n+let instance: (typeof libMarked) | undefined\n let replacers: Replacer[] = []\n \n const markedOptions: MarkedOptions = {"
    },
    {
      "sha": "09aba0605409092080999d1b589662604e38a979",
      "filename": "ui/artalk/src/types/config.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/58657524cffdf0165fa33c05d43c6f8ed555c274/ui%2Fartalk%2Fsrc%2Ftypes%2Fconfig.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/58657524cffdf0165fa33c05d43c6f8ed555c274/ui%2Fartalk%2Fsrc%2Ftypes%2Fconfig.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Ftypes%2Fconfig.ts?ref=58657524cffdf0165fa33c05d43c6f8ed555c274",
      "patch": "@@ -1,4 +1,3 @@\n-import type { MarkedOptions } from 'marked'\n import type { I18n } from '@/i18n'\n import type { CommentData } from './data'\n import type { EditorApi } from './editor'\n@@ -131,7 +130,7 @@ export interface ArtalkConfig {\n   markedReplacers?: ((raw: string) => string)[]\n \n   /** Marked options */\n-  markedOptions?: MarkedOptions\n+  markedOptions?: any // MarkedOptions\n \n   /** 列表请求参数修改器 */\n   listFetchParamsModifier?: (params: any) => void"
    },
    {
      "sha": "7eda6c68dbb0489544b71a9f95f04ab393b7417c",
      "filename": "ui/artalk/src/types/context.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/58657524cffdf0165fa33c05d43c6f8ed555c274/ui%2Fartalk%2Fsrc%2Ftypes%2Fcontext.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/58657524cffdf0165fa33c05d43c6f8ed555c274/ui%2Fartalk%2Fsrc%2Ftypes%2Fcontext.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Ftypes%2Fcontext.ts?ref=58657524cffdf0165fa33c05d43c6f8ed555c274",
      "patch": "@@ -1,7 +1,6 @@\n import type { TInjectedServices } from '@/service'\n import type { CheckerCaptchaPayload, CheckerPayload } from '@/components/checker'\n import type { EventManagerFuncs } from '@/lib/event-manager'\n-import type { TMarked } from '@/lib/marked'\n import type { I18n } from '@/i18n'\n import type { Api, ApiHandlers } from '@/api'\n import type { CommentNode } from '@/comment'\n@@ -33,7 +32,7 @@ export interface ContextApi extends EventManagerFuncs<EventPayloadMap> {\n   conf: ArtalkConfig\n \n   /** marked 依赖对象 */\n-  getMarked(): TMarked | undefined\n+  getMarked(): any | undefined\n \n   /** 获取 API 以供 HTTP 请求 */\n   getApi(): Api"
    }
  ]
}
