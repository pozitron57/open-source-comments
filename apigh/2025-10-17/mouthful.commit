{
  "sha": "598b9b57e65694fa62bbf4b9e9053e626f7d2737",
  "node_id": "C_kwDOByn37doAKDU5OGI5YjU3ZTY1Njk0ZmE2MmJiZjRiOWU5MDUzZTYyNmY3ZDI3Mzc",
  "commit": {
    "author": {
      "name": "Viktoras",
      "email": "vkuznecovas@users.noreply.github.com",
      "date": "2025-10-08T07:27:12Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2025-10-08T07:27:12Z"
    },
    "message": "Merge pull request #150 from carterjc/feat/improve-webhook-payload\n\nEnhance webhook payload on comment create",
    "tree": {
      "sha": "2a80dc229c9d2d61ee25a026c07adb58fd199628",
      "url": "https://api.github.com/repos/vkuznecovas/mouthful/git/trees/2a80dc229c9d2d61ee25a026c07adb58fd199628"
    },
    "url": "https://api.github.com/repos/vkuznecovas/mouthful/git/commits/598b9b57e65694fa62bbf4b9e9053e626f7d2737",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJo5hJQCRC1aQ7uu5UhlAAAYTAQAA3JE+hBBUMOGY/rwh2p1Fvp\nXHe8t725DRLfe7ton2iikPtNKiwBHO91sqjPtkQPp/pADbgr/TmP80ihC9ed6VLq\n7ZRfdNSq1+WeONFWb5BzSmpj/JQDDGvsgWpGdvpmD9na5U6YIU9GMNCOmZsQHw7e\n5rfObqfsiRSACFkr733vCf8ibIAU4Inu1M6oQfKHYeYlvPFBfcHgtijLC5ezOWTf\nb+Qo0nYB+LvfHZAl60I9c6fNO+5SQ7CzJg7mlFxylJjyFbtb3TWbjnvgBXgQFeFT\nwGSCNjaXzlwWs3ZoQ+YFJv50WsgaK7UbTkM0kqUg1Vo3iyejS5a4Ld3UfbapQJiR\nXEYWiOUiBiifi+/KNlGa3fu0Dq4yMsdiDXlSC6CzG0jBpXb20uAiES1kVyGqyMDs\n1jD84F2h4NvBGaEANcUVfRzitw0SAGIOvQerTZp2Re+waB0pvZ0E0DC1AKIWhshe\ngjOs/1CUNuaVA/M/NiljQwuGpddKHYL+TiC/Xri30vT6CyFHKcKu8P90QC8ttFz/\nQ7g+0KJLIvH1JP+XmUQg6+pcJMDplP15tLbZHT5ZWUhPaA0VRW+z3ZbZUoML15UL\nOqaEAig4EuE6K+UbhApBnF27UnL71rurV9NlrzE8JIN9vhNqUYDwsmtper7Vq9oT\nlcXTXkbLSCqserRjP5Dw\n=WGN0\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 2a80dc229c9d2d61ee25a026c07adb58fd199628\nparent 09e72e1bce516138377e35d16d7987cd15824433\nparent d38b0f5a8c9d16949e274caacdc56c31938d16db\nauthor Viktoras <vkuznecovas@users.noreply.github.com> 1759908432 +0300\ncommitter GitHub <noreply@github.com> 1759908432 +0300\n\nMerge pull request #150 from carterjc/feat/improve-webhook-payload\n\nEnhance webhook payload on comment create",
      "verified_at": "2025-10-08T07:27:12Z"
    }
  },
  "url": "https://api.github.com/repos/vkuznecovas/mouthful/commits/598b9b57e65694fa62bbf4b9e9053e626f7d2737",
  "html_url": "https://github.com/vkuznecovas/mouthful/commit/598b9b57e65694fa62bbf4b9e9053e626f7d2737",
  "comments_url": "https://api.github.com/repos/vkuznecovas/mouthful/commits/598b9b57e65694fa62bbf4b9e9053e626f7d2737/comments",
  "author": {
    "login": "vkuznecovas",
    "id": 18392269,
    "node_id": "MDQ6VXNlcjE4MzkyMjY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/18392269?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vkuznecovas",
    "html_url": "https://github.com/vkuznecovas",
    "followers_url": "https://api.github.com/users/vkuznecovas/followers",
    "following_url": "https://api.github.com/users/vkuznecovas/following{/other_user}",
    "gists_url": "https://api.github.com/users/vkuznecovas/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vkuznecovas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vkuznecovas/subscriptions",
    "organizations_url": "https://api.github.com/users/vkuznecovas/orgs",
    "repos_url": "https://api.github.com/users/vkuznecovas/repos",
    "events_url": "https://api.github.com/users/vkuznecovas/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vkuznecovas/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "09e72e1bce516138377e35d16d7987cd15824433",
      "url": "https://api.github.com/repos/vkuznecovas/mouthful/commits/09e72e1bce516138377e35d16d7987cd15824433",
      "html_url": "https://github.com/vkuznecovas/mouthful/commit/09e72e1bce516138377e35d16d7987cd15824433"
    },
    {
      "sha": "d38b0f5a8c9d16949e274caacdc56c31938d16db",
      "url": "https://api.github.com/repos/vkuznecovas/mouthful/commits/d38b0f5a8c9d16949e274caacdc56c31938d16db",
      "html_url": "https://github.com/vkuznecovas/mouthful/commit/d38b0f5a8c9d16949e274caacdc56c31938d16db"
    }
  ],
  "stats": {
    "total": 93,
    "additions": 80,
    "deletions": 13
  },
  "files": [
    {
      "sha": "b7ef75cba8424ff2e4c542ff824bc3a97dd93877",
      "filename": "api/router.go",
      "status": "modified",
      "additions": 23,
      "deletions": 13,
      "changes": 36,
      "blob_url": "https://github.com/vkuznecovas/mouthful/blob/598b9b57e65694fa62bbf4b9e9053e626f7d2737/api%2Frouter.go",
      "raw_url": "https://github.com/vkuznecovas/mouthful/raw/598b9b57e65694fa62bbf4b9e9053e626f7d2737/api%2Frouter.go",
      "contents_url": "https://api.github.com/repos/vkuznecovas/mouthful/contents/api%2Frouter.go?ref=598b9b57e65694fa62bbf4b9e9053e626f7d2737",
      "patch": "@@ -4,7 +4,6 @@ package api\n import (\n \t\"bytes\"\n \t\"encoding/json\"\n-\t\"fmt\"\n \t\"log\"\n \t\"net/http\"\n \n@@ -249,30 +248,41 @@ func (r *Router) CreateComment(c *gin.Context) {\n \t\treturn\n \t}\n \n+\tresponse := model.CreateCommentResponse{\n+\t\tId:      commentUID.String(),\n+\t\tPath:    createCommentBody.Path,\n+\t\tBody:    createCommentBody.Body,\n+\t\tAuthor:  createCommentBody.Author,\n+\t\tEmail:   createCommentBody.Email,\n+\t\tReplyTo: createCommentBody.ReplyTo,\n+\t}\n+\n \tif r.config.Notification.Webhook.Enabled {\n \t\turl := *r.config.Notification.Webhook.URL\n \n-\t\tgo func() {\n-\t\t\t_, err := http.Post(\n+\t\tgo func(url string, payload model.CreateCommentResponse) {\n+\t\t\tpayloadBytes, err := json.Marshal(payload)\n+\t\t\tif err != nil {\n+\t\t\t\tlog.Println(err)\n+\t\t\t\treturn\n+\t\t\t}\n+\n+\t\t\tresp, err := http.Post(\n \t\t\t\turl,\n \t\t\t\t\"application/json\",\n-\t\t\t\tbytes.NewBufferString(fmt.Sprintf(`{\"message\":\"%s\"}`, \"Comment received\")),\n+\t\t\t\tbytes.NewBuffer(payloadBytes),\n \t\t\t)\n \n \t\t\tif err != nil {\n \t\t\t\tlog.Println(err)\n+\t\t\t\treturn\n \t\t\t}\n-\t\t}()\n+\n+\t\t\tdefer resp.Body.Close()\n+\t\t}(url, response)\n \t}\n \n-\tc.AbortWithStatusJSON(200, model.CreateCommentResponse{\n-\t\tId:      commentUID.String(),\n-\t\tPath:    createCommentBody.Path,\n-\t\tBody:    createCommentBody.Body,\n-\t\tAuthor:  createCommentBody.Author,\n-\t\tEmail:   createCommentBody.Email,\n-\t\tReplyTo: createCommentBody.ReplyTo,\n-\t})\n+\tc.AbortWithStatusJSON(200, response)\n }\n \n // UpdateComment updates the provided comment in body"
    },
    {
      "sha": "d212ecaf4b5c76843a1e5f44ebf5afa3131c5cc9",
      "filename": "api/router_test.go",
      "status": "modified",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/vkuznecovas/mouthful/blob/598b9b57e65694fa62bbf4b9e9053e626f7d2737/api%2Frouter_test.go",
      "raw_url": "https://github.com/vkuznecovas/mouthful/raw/598b9b57e65694fa62bbf4b9e9053e626f7d2737/api%2Frouter_test.go",
      "contents_url": "https://api.github.com/repos/vkuznecovas/mouthful/contents/api%2Frouter_test.go?ref=598b9b57e65694fa62bbf4b9e9053e626f7d2737",
      "patch": "@@ -4,12 +4,15 @@ import (\n \t\"bytes\"\n \t\"encoding/json\"\n \t\"fmt\"\n+\t\"io\"\n \t\"io/ioutil\"\n \t\"net/http\"\n+\t\"net/http/httptest\"\n \t\"net/url\"\n \t\"os\"\n \t\"strings\"\n \t\"testing\"\n+\t\"time\"\n \n \t\"github.com/gofrs/uuid\"\n \t\"github.com/vkuznecovas/mouthful/global\"\n@@ -114,6 +117,7 @@ var testFunctions = [...]interface{}{\n \tCreateCommentEmptyBody,\n \tCreateCommentEmptyBodyAfterSanitization,\n \tCreateCommentEmptyAuthor,\n+\tCreateCommentWebhook,\n \tGetAdminConfig,\n \tOauthPathsExist,\n \tDeleteCommentHard,\n@@ -2089,6 +2093,59 @@ func CreateCommentEmptyAuthor(t *testing.T, testDB abstraction.Database) {\n \t\t})\n }\n \n+func CreateCommentWebhook(t *testing.T, testDB abstraction.Database) {\n+\treceived := make(chan model.CreateCommentResponse, 1)\n+\tdummyWebhook := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n+\t\tdefer r.Body.Close()\n+\t\tpayloadBytes, err := io.ReadAll(r.Body)\n+\t\tassert.Nil(t, err)\n+\t\tvar payload model.CreateCommentResponse\n+\t\terr = json.Unmarshal(payloadBytes, &payload)\n+\t\tassert.Nil(t, err)\n+\t\treceived <- payload\n+\t\tw.WriteHeader(http.StatusOK)\n+\t}))\n+\tdefer dummyWebhook.Close()\n+\n+\t// temporary mutation of mouthful config\n+\tconfigCopy := config\n+\tconfigCopy.Notification.Webhook.Enabled = true\n+\twebhookURL := dummyWebhook.URL\n+\tconfigCopy.Notification.Webhook.URL = &webhookURL\n+\t//\n+\n+\tserver, err := api.GetServer(&testDB, &configCopy)\n+\tassert.Nil(t, err)\n+\tr := gofight.New()\n+\tcommentBody := model.CreateCommentBody{\n+\t\tPath:   \"/webhook/test\",\n+\t\tBody:   \"**body**\",\n+\t\tAuthor: \"webhook-tester\",\n+\t}\n+\tbodyBytes, err := json.Marshal(commentBody)\n+\tassert.Nil(t, err)\n+\tvar response model.CreateCommentResponse\n+\tr.POST(\"/v1/comments\").\n+\t\tSetBody(string(bodyBytes[:])).\n+\t\tSetDebug(debug).\n+\t\tRun(server, func(r gofight.HTTPResponse, rq gofight.HTTPRequest) {\n+\t\t\tassert.Equal(t, http.StatusOK, r.Code)\n+\t\t\terr = json.Unmarshal(r.Body.Bytes(), &response)\n+\t\t\tassert.Nil(t, err)\n+\t\t\tassert.NotEmpty(t, response.Id)\n+\t\t\tassert.Equal(t, api.NormalizePath(commentBody.Path), response.Path)\n+\t\t\tassert.Equal(t, commentBody.Author, response.Author)\n+\t\t\tassert.Equal(t, global.ParseAndSaniziteMarkdown(commentBody.Body), response.Body)\n+\t\t})\n+\n+\tselect {\n+\tcase payload := <-received:\n+\t\tassert.Equal(t, response, payload)\n+\tcase <-time.After(time.Second):\n+\t\tassert.Fail(t, \"webhook payload not received\")\n+\t}\n+}\n+\n func GetAdminConfig(t *testing.T, testDB abstraction.Database) {\n \tserver, err := api.GetServer(&testDB, &config)\n \tassert.Nil(t, err)"
    }
  ]
}
