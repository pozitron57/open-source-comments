{
  "sha": "3a94f71680dc9df6ca0ed475f998457e3da589e2",
  "node_id": "C_kwDOBQ8bstoAKDNhOTRmNzE2ODBkYzlkZjZjYTBlZDQ3NWY5OTg0NTdlM2RhNTg5ZTI",
  "commit": {
    "author": {
      "name": "Sönke Ludwig",
      "email": "sludwig@outerproduct.org",
      "date": "2023-09-25T10:38:26Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2023-09-25T10:38:26Z"
    },
    "message": "Merge pull request #17 from rejectedsoftware/housekeeping\n\nAvoid deprecated MongoDB APIs",
    "tree": {
      "sha": "b98580185ad6161f6c0073e34f0e37b455282f09",
      "url": "https://api.github.com/repos/rejectedsoftware/diskuto/git/trees/b98580185ad6161f6c0073e34f0e37b455282f09"
    },
    "url": "https://api.github.com/repos/rejectedsoftware/diskuto/git/commits/3a94f71680dc9df6ca0ed475f998457e3da589e2",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlEWMiCRBK7hj4Ov3rIwAA5WQIABhHaE3nOTtDUzKlctpNDKYT\noaF2jqGtThpljSXL3CmaoIVLzn3iMQ9GIfJ+xD0T8PQBuXspmh6azCnWKbdC/PS7\nI152jolwjcnx4oFtmkvFP1NUiC4Qxs6XdkHccwiBpNsem/XyRtApMDUdGmjam+cI\nz2AmWD8NJDluCiw9Xuf2p12mDF2+OerCIN8BuwwxVYndR4DnwkTZRfZ77y///y1k\nQFWImXNnxI+93ZbRSkv6qhetJTpcEhPeeR5VTivFsMKaHNfpuMPgBzalhzFTRaER\nSGMrqcUPxAZoMbROEBXKgcE7vWjIwrL2zmMZnD9I+KBHxacQC4rzf+cRfYj/cUw=\n=WC4v\n-----END PGP SIGNATURE-----\n",
      "payload": "tree b98580185ad6161f6c0073e34f0e37b455282f09\nparent 5a725405c8ce7fb7dd10bc0c9203a2a3382cc18b\nparent 89fe8c12bc1dc6f69e4fdeb05c9ed35568738989\nauthor Sönke Ludwig <sludwig@outerproduct.org> 1695638306 +0200\ncommitter GitHub <noreply@github.com> 1695638306 +0200\n\nMerge pull request #17 from rejectedsoftware/housekeeping\n\nAvoid deprecated MongoDB APIs"
    }
  },
  "url": "https://api.github.com/repos/rejectedsoftware/diskuto/commits/3a94f71680dc9df6ca0ed475f998457e3da589e2",
  "html_url": "https://github.com/rejectedsoftware/diskuto/commit/3a94f71680dc9df6ca0ed475f998457e3da589e2",
  "comments_url": "https://api.github.com/repos/rejectedsoftware/diskuto/commits/3a94f71680dc9df6ca0ed475f998457e3da589e2/comments",
  "author": {
    "login": "s-ludwig",
    "id": 1645969,
    "node_id": "MDQ6VXNlcjE2NDU5Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1645969?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/s-ludwig",
    "html_url": "https://github.com/s-ludwig",
    "followers_url": "https://api.github.com/users/s-ludwig/followers",
    "following_url": "https://api.github.com/users/s-ludwig/following{/other_user}",
    "gists_url": "https://api.github.com/users/s-ludwig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/s-ludwig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/s-ludwig/subscriptions",
    "organizations_url": "https://api.github.com/users/s-ludwig/orgs",
    "repos_url": "https://api.github.com/users/s-ludwig/repos",
    "events_url": "https://api.github.com/users/s-ludwig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/s-ludwig/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5a725405c8ce7fb7dd10bc0c9203a2a3382cc18b",
      "url": "https://api.github.com/repos/rejectedsoftware/diskuto/commits/5a725405c8ce7fb7dd10bc0c9203a2a3382cc18b",
      "html_url": "https://github.com/rejectedsoftware/diskuto/commit/5a725405c8ce7fb7dd10bc0c9203a2a3382cc18b"
    },
    {
      "sha": "89fe8c12bc1dc6f69e4fdeb05c9ed35568738989",
      "url": "https://api.github.com/repos/rejectedsoftware/diskuto/commits/89fe8c12bc1dc6f69e4fdeb05c9ed35568738989",
      "html_url": "https://github.com/rejectedsoftware/diskuto/commit/89fe8c12bc1dc6f69e4fdeb05c9ed35568738989"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 11,
    "deletions": 11
  },
  "files": [
    {
      "sha": "582c2dd74aebf4df895f778894eed42537bde42b",
      "filename": "dub.sdl",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/rejectedsoftware/diskuto/blob/3a94f71680dc9df6ca0ed475f998457e3da589e2/dub.sdl",
      "raw_url": "https://github.com/rejectedsoftware/diskuto/raw/3a94f71680dc9df6ca0ed475f998457e3da589e2/dub.sdl",
      "contents_url": "https://api.github.com/repos/rejectedsoftware/diskuto/contents/dub.sdl?ref=3a94f71680dc9df6ca0ed475f998457e3da589e2",
      "patch": "@@ -1,7 +1,7 @@\n ﻿name \"diskuto\"\n description \"Embedded comment engine\"\n authors \"Sönke Ludwig\"\n-copyright \"Copyright © 2017-2020, Sönke Ludwig\"\n+copyright \"Copyright © 2017-2023, Sönke Ludwig\"\n license \"MIT\"\n dependency \"vibe-d:mongodb\" version=\">=0.7.31 <0.10.0-0\"\n dependency \"vibe-d:web\" version=\">=0.7.31 <0.10.0-0\""
    },
    {
      "sha": "3be8c18739429befdd6122e018634e4f56746b36",
      "filename": "source/diskuto/commentstores/mongodb.d",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/rejectedsoftware/diskuto/blob/3a94f71680dc9df6ca0ed475f998457e3da589e2/source%2Fdiskuto%2Fcommentstores%2Fmongodb.d",
      "raw_url": "https://github.com/rejectedsoftware/diskuto/raw/3a94f71680dc9df6ca0ed475f998457e3da589e2/source%2Fdiskuto%2Fcommentstores%2Fmongodb.d",
      "contents_url": "https://api.github.com/repos/rejectedsoftware/diskuto/contents/source%2Fdiskuto%2Fcommentstores%2Fmongodb.d?ref=3a94f71680dc9df6ca0ed475f998457e3da589e2",
      "patch": "@@ -25,12 +25,12 @@ class MongoDBCommentStore : DiskutoCommentStore {\n \n \t\t// upgrade \"author\" field name\n \t\tforeach (c; m_comments.find([\"userID\": [\"$exists\": true]], [\"userID\": true]))\n-\t\t\tm_comments.update([\"_id\": c[\"_id\"]], [\"$unset\": [\"userID\": Bson(null)], \"$set\": [\"author\": c[\"userID\"]]]);\n+\t\t\tm_comments.updateOne([\"_id\": c[\"_id\"]], [\"$unset\": [\"userID\": Bson(null)], \"$set\": [\"author\": c[\"userID\"]]]);\n \t\t// upgrade missing \"clientAddress\" field name\n-\t\tm_comments.update([\"clientAddress\": [\"$exists\": false]], [\"$set\": [\"clientAddress\": \"\"]], UpdateFlags.multiUpdate);\n+\t\tm_comments.updateMany([\"clientAddress\": [\"$exists\": false]], [\"$set\": [\"clientAddress\": \"\"]]);\n \t\t// upgrade old status field\n-\t\tm_comments.update([\"status\": cast(int)StoredComment.Status.active], [\"$set\": [\"status\": \"active\"]], UpdateFlags.multiUpdate);\n-\t\tm_comments.update([\"status\": cast(int)StoredComment.Status.disabled], [\"$set\": [\"status\": \"disabled\"]], UpdateFlags.multiUpdate);\n+\t\tm_comments.updateMany([\"status\": cast(int)StoredComment.Status.active], [\"$set\": [\"status\": \"active\"]]);\n+\t\tm_comments.updateMany([\"status\": cast(int)StoredComment.Status.disabled], [\"$set\": [\"status\": \"disabled\"]]);\n \n \t\tm_comments.createIndex([\"topic\": 1, \"status\": 1]);\n \t}\n@@ -39,7 +39,7 @@ class MongoDBCommentStore : DiskutoCommentStore {\n \t{\n \t\tauto mc = MongoStruct!StoredComment(comment);\n \t\tmc._id = BsonObjectID.generate();\n-\t\tm_comments.insert(mc);\n+\t\tm_comments.insertOne(mc);\n \t\treturn mc._id.toString();\n \t}\n \n@@ -53,17 +53,17 @@ class MongoDBCommentStore : DiskutoCommentStore {\n \tvoid setCommentStatus(StoredComment.ID id, StoredComment.Status status)\n \t{\n \t\timport std.conv : to;\n-\t\tm_comments.update([\"_id\": BsonObjectID.fromString(id)], [\"$set\": [\"status\": status.to!string]]);\n+\t\tm_comments.updateOne([\"_id\": BsonObjectID.fromString(id)], [\"$set\": [\"status\": status.to!string]]);\n \t}\n \n \tvoid editComment(StoredComment.ID id, string new_text)\n \t{\n-\t\tm_comments.update([\"_id\": BsonObjectID.fromString(id)], [\"$set\": [\"text\": new_text]]);\n+\t\tm_comments.updateOne([\"_id\": BsonObjectID.fromString(id)], [\"$set\": [\"text\": new_text]]);\n \t}\n \n \tvoid deleteComment(StoredComment.ID id)\n \t{\n-\t\tm_comments.remove([\"_id\": BsonObjectID.fromString(id)]);\n+\t\tm_comments.deleteOne([\"_id\": BsonObjectID.fromString(id)]);\n \t}\n \n \tVoteDirection vote(StoredComment.ID id, StoredComment.UserID user, VoteDirection direction)\n@@ -91,7 +91,7 @@ class MongoDBCommentStore : DiskutoCommentStore {\n \t\tif (direction != VoteDirection.none) {\n \t\t\tstatic struct DQ { @name(\"$ne\") string ne; }\n \t\t\tstatic struct Q { BsonObjectID _id; DQ downvotes; DQ author; }\n-\t\t\tm_comments.update(Q(BsonObjectID.fromString(id), DQ(user), DQ(user)), [\"$addToSet\": [direction == VoteDirection.up ? \"upvotes\" : \"downvotes\": user]]);\n+\t\t\tm_comments.updateOne(Q(BsonObjectID.fromString(id), DQ(user), DQ(user)), [\"$addToSet\": [direction == VoteDirection.up ? \"upvotes\" : \"downvotes\": user]]);\n \t\t}\n \n \t\treturn direction;\n@@ -100,7 +100,7 @@ class MongoDBCommentStore : DiskutoCommentStore {\n \tuint getActiveCommentCount(string topic)\n \t{\n \t\timport std.conv : to;\n-\t\treturn m_comments.count([\"topic\": topic, \"status\": \"active\"]).to!uint;\n+\t\treturn m_comments.countDocuments([\"topic\": topic, \"status\": \"active\"]).to!uint;\n \t}\n \n \tvoid iterateAllComments(scope void delegate(ref StoredComment) del)"
    }
  ]
}
