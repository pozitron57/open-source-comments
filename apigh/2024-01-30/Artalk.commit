{
  "sha": "37e0091502db90b782eda68addfd7110e0f05424",
  "node_id": "C_kwDOCQOkhNoAKDM3ZTAwOTE1MDJkYjkwYjc4MmVkYTY4YWRkZmQ3MTEwZTBmMDU0MjQ",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "22412567+qwqcode@users.noreply.github.com",
      "date": "2024-01-30T11:14:09Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2024-01-30T11:14:09Z"
    },
    "message": "perf(ui/conf): support for watching partial changes in config with `watchConf()` (#755)",
    "tree": {
      "sha": "12fe4e2743a9495a84014ac0fe49ff36f766ba09",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/12fe4e2743a9495a84014ac0fe49ff36f766ba09"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/37e0091502db90b782eda68addfd7110e0f05424",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJluNoBCRC1aQ7uu5UhlAAAnacQAIReW6HbcVD4S9oK0xmS6ozX\nbD6WihN0m2P0QXENqfoueGbm8M3Oo2YakN9DX8hM+PB4CqA9V1c5J9U40IzWaGkY\njO49Mv2WVF8HqQS/L29Uq8yCSPlhGCxskcXJVVtL+TfujFuAaO8rAA6fPowlp/fN\nZ3hWLdwfD2u6mWPaHuDooqsidg5njyc0ti7JPXQRS9bvICTakcEpm5oj2VWNCEDD\na1ywml9Xx3CLD3y56ZJLV8/jffmNbskC+N15ihdWoZnVo6AeX3D5sQuBRmbyK+K4\nt8nj6PYYOtmXAvX+3CcIAHLUI+/5T9aSy+kJEW30tFYNaP0RurjWAx6xbrQRFwU8\ns2VBSsIpyCsW+ub09B5XYbIhXoP5UyoGU+8Kc7nZPaiBj1x0af1UI/lk4lsoT9BD\nlp3fpmtZUGOx2kdmgl5W7O5PQF4sj5bpSMzklWZu/BK5vw2GCROm/nSnFzf8GR6/\nI9ZTHSiw8yAATjtnVu9EY+j0smVzXroTQ9+crknZbripe7I8wt48ezghYkMKP1Uz\ndQuA6AWmkzP5kYEnvLgTmgF8heFSKonxLB6UTJhdwqQMIq4tjzfZn01UPR1JmNa+\nJ22dtfX6iLJNDY7I8vOtwWRwKZvEU6TMwepjX29MK8G+3bS4NfcQZkoTptCMcbQa\n4QJNJxTGl78PXhJrTS+G\n=BYhw\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 12fe4e2743a9495a84014ac0fe49ff36f766ba09\nparent a7c3f1bbda6e2502907da9de6d133254b99467c7\nauthor qwqcode <22412567+qwqcode@users.noreply.github.com> 1706613249 +0800\ncommitter GitHub <noreply@github.com> 1706613249 +0800\n\nperf(ui/conf): support for watching partial changes in config with `watchConf()` (#755)\n\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/37e0091502db90b782eda68addfd7110e0f05424",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/37e0091502db90b782eda68addfd7110e0f05424",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/37e0091502db90b782eda68addfd7110e0f05424/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a7c3f1bbda6e2502907da9de6d133254b99467c7",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/a7c3f1bbda6e2502907da9de6d133254b99467c7",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/a7c3f1bbda6e2502907da9de6d133254b99467c7"
    }
  ],
  "stats": {
    "total": 108,
    "additions": 66,
    "deletions": 42
  },
  "files": [
    {
      "sha": "9c730b5f57b3fbcb7d0a894335d0dadd76665a87",
      "filename": "ui/artalk-sidebar/src/main.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk-sidebar%2Fsrc%2Fmain.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk-sidebar%2Fsrc%2Fmain.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk-sidebar%2Fsrc%2Fmain.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -20,7 +20,7 @@ const i18n = createI18n({\n // Artalk extension\n Artalk.use((ctx) => {\n   // Sync config from artalk instance to sidebar\n-  ctx.on('conf-loaded', (conf) => {\n+  ctx.watchConf(['locale'], (conf) => {\n     if (typeof conf.locale === 'string' && conf.locale !== 'auto')\n       i18n.global.locale.value = conf.locale as any\n   })"
    },
    {
      "sha": "dd065c6ce7b3321214320483ca9e3af70542deb0",
      "filename": "ui/artalk/src/context.ts",
      "status": "modified",
      "additions": 21,
      "deletions": 4,
      "changes": 25,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fcontext.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fcontext.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fcontext.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -139,10 +139,7 @@ class Context implements ContextApi {\n   }\n \n   setDarkMode(darkMode: boolean|'auto'): void {\n-    // prevent trigger 'conf-loaded' to improve performance\n-    // this.updateConf({ ...this.conf, darkMode })\n-    this.conf.darkMode = darkMode\n-    this.events.trigger('dark-mode-changed', darkMode)\n+    this.updateConf({ darkMode })\n   }\n \n   updateConf(nConf: Partial<ArtalkConfig>): void {\n@@ -161,6 +158,26 @@ class Context implements ContextApi {\n   getMarked() {\n     return marked.getInstance()\n   }\n+\n+  watchConf<T extends (keyof ArtalkConfig)[]>(keys: T, effect: (conf: Pick<ArtalkConfig, T[number]>) => void): void {\n+    const deepEqual = (a: any, b: any) => JSON.stringify(a) === JSON.stringify(b)\n+    const val = () => {\n+      const conf = this.getConf()\n+      const res: any = {}\n+      keys.forEach((key) => { res[key] = conf[key] })\n+      return res\n+    }\n+    let lastVal = {}\n+    this.on('conf-loaded', () => {\n+      const newVal = val()\n+      const isDiff = !deepEqual(lastVal, newVal)\n+      // only trigger when specific keys changed\n+      if (isDiff) {\n+        lastVal = newVal\n+        effect(newVal)\n+      }\n+    })\n+  }\n }\n \n export default Context"
    },
    {
      "sha": "279269b0655eb481a0ca9b26878285577878304d",
      "filename": "ui/artalk/src/list/page.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Flist%2Fpage.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Flist%2Fpage.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Flist%2Fpage.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -4,7 +4,7 @@ import { Paginator } from './paginator'\n import ReadMorePaginator from './paginator/read-more'\n import UpDownPaginator from './paginator/up-down'\n \n-function createPaginatorByConf(conf: ArtalkConfig): Paginator {\n+function createPaginatorByConf(conf: Pick<ArtalkConfig, 'pagination'>): Paginator {\n   if (conf.pagination.readMore) return new ReadMorePaginator()\n   return new UpDownPaginator()\n }\n@@ -24,7 +24,7 @@ export const initListPaginatorFunc = (ctx: ContextApi) => {\n   let paginator: Paginator|null = null\n \n   // Init paginator when conf loaded\n-  ctx.on('conf-loaded', (conf) => {\n+  ctx.watchConf(['pagination', 'locale'], (conf) => {\n     const list = ctx.get('list')\n \n     if (paginator) paginator.dispose() // if had been init, dispose it"
    },
    {
      "sha": "f9eb45c570d62a4a2223e787f9fd4a86bd235547",
      "filename": "ui/artalk/src/plugins/dark-mode.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Fdark-mode.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Fdark-mode.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Fdark-mode.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -1,6 +1,6 @@\n import type { ArtalkPlugin } from '@/types'\n \n-// Notice: Singleton mode needs to be loaded as lazy as possible,\n+// Notice: Singleton pattern needs to be loaded as lazy as possible,\n //         because the SSG application does not have a `window` context.\n let darkModeMedia: MediaQueryList | undefined\n \n@@ -48,9 +48,8 @@ export const DarkMode: ArtalkPlugin = (ctx) => {\n     }\n   }\n \n+  ctx.watchConf(['darkMode'], (conf) => sync(conf.darkMode))\n   ctx.on('inited', () => sync(ctx.conf.darkMode))\n-  ctx.on('conf-loaded', (conf) => sync(conf.darkMode))\n-  ctx.on('dark-mode-changed', (darkMode) => sync(darkMode))\n   ctx.on('destroy', () => {\n     // if handler exists, don't forget to remove it, or it will cause memory leak\n     darkModeAutoHandler && darkModeMedia?.removeEventListener('change', darkModeAutoHandler)"
    },
    {
      "sha": "223b5c4ad16c611f8ead1689a94943ace28bde58",
      "filename": "ui/artalk/src/plugins/editor-kit.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 6,
      "changes": 11,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Feditor-kit.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Feditor-kit.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Feditor-kit.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -1,6 +1,6 @@\n import type { EditorApi, ArtalkPlugin } from '@/types'\n import EventManager from '@/lib/event-manager'\n-import { ENABLED_PLUGS, getDisabledPlugByConf } from './editor'\n+import { getEnabledPlugs } from './editor'\n import EditorPlug from './editor/_plug'\n import PlugKit from './editor/_kit'\n \n@@ -43,7 +43,9 @@ export class PlugManager {\n     public editor: EditorApi\n   ) {\n     let confLoaded = false // config not loaded at first time\n-    this.editor.ctx.on('conf-loaded', () => {\n+    this.editor.ctx.watchConf([\n+      'imgUpload', 'emoticons', 'preview', 'editorTravel', 'locale'\n+    ], (conf) => {\n       // trigger unmount event will call all plugs' unmount function\n       // (this will only be called while conf reloaded, not be called at first time)\n       confLoaded && this.getEvents().trigger('unmounted')\n@@ -52,10 +54,7 @@ export class PlugManager {\n       this.clear()\n \n       // init the all enabled plugs\n-      const DISABLED = getDisabledPlugByConf(this.editor.ctx.conf)\n-\n-      ENABLED_PLUGS\n-        .filter(p => !DISABLED.includes(p)) // 禁用的插件\n+      getEnabledPlugs(conf)\n         .forEach((Plug) => {\n           // create the plug instance\n           const kit = new PlugKit(this)"
    },
    {
      "sha": "3db326938d5c4eefa82fd2018373b194a37e433a",
      "filename": "ui/artalk/src/plugins/editor/index.ts",
      "status": "modified",
      "additions": 14,
      "deletions": 9,
      "changes": 23,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Feditor%2Findex.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Feditor%2Findex.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Feditor%2Findex.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -16,7 +16,7 @@ import Upload from './upload'\n import Preview from './preview'\n \n /** The default enabled plugs */\n-export const ENABLED_PLUGS: (typeof EditorPlug)[] = [\n+const EDITOR_PLUGS: (typeof EditorPlug)[] = [\n   // Core\n   LocalStorage,\n   HeaderEvent, HeaderUser, HeaderLink,\n@@ -29,12 +29,17 @@ export const ENABLED_PLUGS: (typeof EditorPlug)[] = [\n   Emoticons, Upload, Preview\n ]\n \n-/** Get the name list of disabled plugs */\n-export function getDisabledPlugByConf(conf: ArtalkConfig): (typeof EditorPlug)[] {\n-  return [\n-    {k: Upload, v: conf.imgUpload},\n-    {k: Emoticons, v: conf.emoticons},\n-    {k: Preview, v: conf.preview},\n-    {k: Mover, v: conf.editorTravel},\n-  ].filter(n => !n.v).flatMap(n => n.k)\n+/**\n+ * Get the enabled plugs by config\n+ */\n+export function getEnabledPlugs(conf: Pick<ArtalkConfig, 'imgUpload'|'emoticons'|'preview'|'editorTravel'>): (typeof EditorPlug)[] {\n+  // The reference map of config and plugs\n+  // (for check if the plug is enabled)\n+  const confRefs = new Map<typeof EditorPlug, any>()\n+  confRefs.set(Upload, conf.imgUpload)\n+  confRefs.set(Emoticons, conf.emoticons)\n+  confRefs.set(Preview, conf.preview)\n+  confRefs.set(Mover, conf.editorTravel)\n+\n+  return EDITOR_PLUGS.filter(p => !confRefs.has(p) || !!confRefs.get(p))\n }"
    },
    {
      "sha": "85647ed104ebe0a351ef1a6929fe38697a2daa04",
      "filename": "ui/artalk/src/plugins/list/copyright.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fcopyright.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fcopyright.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fcopyright.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -2,7 +2,7 @@ import type { ArtalkPlugin } from '@/types'\n import { version as ARTALK_VERSION } from '~/package.json'\n \n export const Copyright: ArtalkPlugin = (ctx) => {\n-  ctx.on('conf-loaded', () => {\n+  ctx.on('inited', () => {\n     const list = ctx.get('list')\n \n     const $copyright = list.$el.querySelector<HTMLElement>('.atk-copyright')"
    },
    {
      "sha": "0dbb6fba3d5d248d0c473503d5ceec9df2953fc1",
      "filename": "ui/artalk/src/plugins/list/dropdown.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fdropdown.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fdropdown.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fdropdown.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -20,14 +20,14 @@ export const Dropdown: ArtalkPlugin = (ctx) => {\n     })\n   }\n \n-  ctx.on('conf-loaded', () => {\n+  ctx.watchConf(['listSort', 'locale'], (conf) => {\n     const list = ctx.get('list')\n \n     const $count = list.$el.querySelector<HTMLElement>('.atk-comment-count')\n     if (!$count) return\n \n     // 评论列表排序 Dropdown 下拉选择层\n-    if (ctx.conf.listSort) {\n+    if (conf.listSort) {\n       initDropdown($count)\n     } else {\n       removeDropdown({"
    },
    {
      "sha": "dbe8de390fa38649a53920b8bc8d5c6f3d44d063",
      "filename": "ui/artalk/src/plugins/list/sidebar-btn.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fsidebar-btn.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fsidebar-btn.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Fsidebar-btn.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -20,7 +20,7 @@ export const SidebarBtn: ArtalkPlugin = (ctx) => {\n     }\n   }\n \n-  ctx.on('conf-loaded', () => {\n+  ctx.watchConf(['locale'], (conf) => {\n     const list = ctx.get('list')\n \n     $openSidebarBtn = list.$el.querySelector<HTMLElement>('[data-action=\"open-sidebar\"]')"
    },
    {
      "sha": "45ccfce261194284087dcf4c0cf23f7437308067",
      "filename": "ui/artalk/src/plugins/list/unread-badge.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Funread-badge.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Funread-badge.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Flist%2Funread-badge.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -14,7 +14,7 @@ export const UnreadBadge: ArtalkPlugin = (ctx) => {\n     }\n   }\n \n-  ctx.on('conf-loaded', () => {\n+  ctx.on('inited', () => {\n     const list = ctx.get('list')\n \n     $unreadBadge = list.$el.querySelector<HTMLElement>('.atk-unread-badge')"
    },
    {
      "sha": "86d33f2e3bd218852f48f74dd32f103bf3a9d347",
      "filename": "ui/artalk/src/plugins/stat.ts",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Fstat.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Fstat.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Fstat.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -1,4 +1,4 @@\n-import type { ContextApi, ArtalkPlugin } from '@/types'\n+import type { ContextApi, ArtalkPlugin, ArtalkConfig } from '@/types'\n import { Api } from '@/api'\n \n export interface CountOptions {\n@@ -14,13 +14,15 @@ export interface CountOptions {\n }\n \n export const PvCountWidget: ArtalkPlugin = (ctx: ContextApi) => {\n-  ctx.on('conf-loaded', () => {\n+  ctx.watchConf([\n+    'site', 'pageKey', 'countEl', 'pvEl',\n+  ], (conf) => {\n     initCountWidget({\n       getApi: () => ctx.getApi(),\n-      siteName: ctx.conf.site,\n-      pageKey: ctx.conf.pageKey,\n-      countEl: ctx.conf.countEl,\n-      pvEl: ctx.conf.pvEl,\n+      siteName: conf.site,\n+      pageKey: conf.pageKey,\n+      countEl: conf.countEl,\n+      pvEl: conf.pvEl,\n       pvAdd: true,\n     })\n   })"
    },
    {
      "sha": "39d1e693833aef8ca5f51ed8e22d0988a133cd25",
      "filename": "ui/artalk/src/plugins/version-check.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Fversion-check.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fplugins%2Fversion-check.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fplugins%2Fversion-check.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -8,10 +8,10 @@ import $t from '@/i18n'\n let IgnoreVersionCheck = false\n \n export const VersionCheck: ArtalkPlugin = (ctx) => {\n-  ctx.on('conf-loaded', () => {\n+  ctx.watchConf(['apiVersion', 'versionCheck'], (conf) => {\n     const list = ctx.get('list')\n-    if (ctx.conf.apiVersion && ctx.conf.versionCheck && !IgnoreVersionCheck)\n-      versionCheck(list, ARTALK_VERSION, ctx.conf.apiVersion)\n+    if (conf.apiVersion && conf.versionCheck && !IgnoreVersionCheck)\n+      versionCheck(list, ARTALK_VERSION, conf.apiVersion)\n   })\n }\n "
    },
    {
      "sha": "b1c8437941fb52ab857cd6d0e87bdb23d460346b",
      "filename": "ui/artalk/src/service.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fservice.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Fservice.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Fservice.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -20,8 +20,8 @@ const services = {\n   i18n(ctx: ContextApi) {\n     I18n.setLocale(ctx.conf.locale)\n \n-    ctx.on('conf-loaded', () => {\n-      I18n.setLocale(ctx.conf.locale)\n+    ctx.watchConf(['locale'], (conf) => {\n+      I18n.setLocale(conf.locale)\n     })\n   },\n "
    },
    {
      "sha": "b245e47bfe0e34a3fd180908b15c775e9936c94c",
      "filename": "ui/artalk/src/types/context.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Ftypes%2Fcontext.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Ftypes%2Fcontext.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Ftypes%2Fcontext.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -104,4 +104,7 @@ export interface ContextApi extends EventManagerFuncs<EventPayloadMap> {\n \n   /** 更新配置 */\n   updateConf(conf: Partial<ArtalkConfig>): void\n+\n+  /** 监听配置更新 */\n+  watchConf<T extends (keyof ArtalkConfig)[]>(keys: T, effect: (val: Pick<ArtalkConfig, T[number]>) => void): void\n }"
    },
    {
      "sha": "fe70ec1f6f8334f5e0f68125d9a4deebcb77591a",
      "filename": "ui/artalk/src/types/event.ts",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Ftypes%2Fevent.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/37e0091502db90b782eda68addfd7110e0f05424/ui%2Fartalk%2Fsrc%2Ftypes%2Fevent.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fartalk%2Fsrc%2Ftypes%2Fevent.ts?ref=37e0091502db90b782eda68addfd7110e0f05424",
      "patch": "@@ -35,7 +35,6 @@ export interface EventPayloadMap {\n   'editor-submitted': undefined    // 编辑器提交后\n   'user-changed': LocalUser        // 本地用户数据变更时\n   'conf-loaded': ArtalkConfig      // Artalk 配置变更时\n-  'dark-mode-changed': boolean|'auto' // 深色模式变更时\n   'sidebar-show': undefined        // 侧边栏显示\n   'sidebar-hide': undefined        // 侧边栏隐藏\n }"
    }
  ]
}
