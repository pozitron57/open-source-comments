{
  "sha": "d02099844eb81ef78011293b50329d9ac53dab87",
  "node_id": "C_kwDOBtgov9oAKGQwMjA5OTg0NGViODFlZjc4MDExMjkzYjUwMzI5ZDlhYzUzZGFiODc",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2024-02-23T00:20:57Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2024-02-26T00:27:06Z"
    },
    "message": "apply prettier to site files",
    "tree": {
      "sha": "22d22a8a96faf6ce4d121f878274549e61d3b6f7",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/22d22a8a96faf6ce4d121f878274549e61d3b6f7"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/d02099844eb81ef78011293b50329d9ac53dab87",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/d02099844eb81ef78011293b50329d9ac53dab87",
  "html_url": "https://github.com/umputun/remark42/commit/d02099844eb81ef78011293b50329d9ac53dab87",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/d02099844eb81ef78011293b50329d9ac53dab87/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6fcfaa12b777baa4cfa1da4233fde757ca276b51",
      "url": "https://api.github.com/repos/umputun/remark42/commits/6fcfaa12b777baa4cfa1da4233fde757ca276b51",
      "html_url": "https://github.com/umputun/remark42/commit/6fcfaa12b777baa4cfa1da4233fde757ca276b51"
    }
  ],
  "stats": {
    "total": 830,
    "additions": 423,
    "deletions": 407
  },
  "files": [
    {
      "sha": "006399edf4f3bff716d96706767941eaa71ea4aa",
      "filename": "site/.prettierignore",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2F.prettierignore",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2F.prettierignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2F.prettierignore?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -0,0 +1,3 @@\n+build\n+public/site.webmanifest\n+src/docs/configuration/parameters/index.md"
    },
    {
      "sha": "a50eccd1f42e34c386e7aa27b0ee04ff5f520f7a",
      "filename": "site/.prettierrc",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2F.prettierrc",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2F.prettierrc",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2F.prettierrc?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -2,6 +2,7 @@\n \t\"semi\": false,\n \t\"singleQuote\": true,\n \t\"arrowParens\": \"always\",\n+\t\"useTabs\": true,\n \t\"overrides\": [\n \t\t{\n \t\t\t\"files\": \"*.md\","
    },
    {
      "sha": "289c1414f16d2220ad1744274cd059847b96e13c",
      "filename": "site/README.md",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2FREADME.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -4,8 +4,8 @@\n \n Requirements:\n \n-* [Node.js v20](https://nodejs.org/en/) or higher - install from package or with Homebrew\n-* Yarn 1.22 or higher - once you have Node.js, run `npm i -g yarn`\n+- [Node.js v20](https://nodejs.org/en/) or higher - install from package or with Homebrew\n+- Yarn 1.22 or higher - once you have Node.js, run `npm i -g yarn`\n \n ### Development\n "
    },
    {
      "sha": "1ce6d0e6b2cfbbf7f07ac9ab820c55b1de042066",
      "filename": "site/src/docs/backup/url-migration/index.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fbackup%2Furl-migration%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fbackup%2Furl-migration%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fbackup%2Furl-migration%2Findex.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -29,7 +29,7 @@ If running in a docker container, the command becomes (`ADMIN_PASSWD` will be ta\n docker exec -it remark42 remap -s <your site ID> -f var/rules\n ```\n \n-The command above sends a *request* to start the remap job. You can see the job execution logs by running:\n+The command above sends a _request_ to start the remap job. You can see the job execution logs by running:\n \n ```shell\n docker logs <container>"
    },
    {
      "sha": "a60e0fa9b4a7136a79240bf90a386608ca311642",
      "filename": "site/src/docs/configuration/authorization/index.md",
      "status": "modified",
      "additions": 20,
      "deletions": 20,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fconfiguration%2Fauthorization%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fconfiguration%2Fauthorization%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fconfiguration%2Fauthorization%2Findex.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -48,28 +48,28 @@ After completing the previous steps, you can configure the Apple auth provider.\n 4. In the left Nav pane, choose **\"Credentials\"**\n 5. In the center pane, choose the **\"OAuth consent screen\"** tab.\n \n-    - Select \"**External**\" and click \"Create\"\n-    - Fill in **\"App name\"** and select **User support email**\n-    - Upload a logo, if you want to\n-    - In the **App Domain** section:\n-        - **Application home page** - your site URL, e.g., `https://mysite.com`\n-        - **Application privacy policy link** - `/web/privacy.html` of your Remark42 installation, e.g. `https://remark42.mysite.com/web/privacy.html` (please check that it works)\n-        - **Terms of service** - leave empty\n-    - **Authorized domains** - your site domain, e.g., `mysite.com`\n-    - **Developer contact information** - add your email, and then click **Save and continue**\n-    - On the **Scopes** tab, just click **Save and continue**\n-    - On the **Test users**, add your email, then click **Save and continue**\n-    - Before going to the next step, set the app to \"Production\" and send it to verification\n+   - Select \"**External**\" and click \"Create\"\n+   - Fill in **\"App name\"** and select **User support email**\n+   - Upload a logo, if you want to\n+   - In the **App Domain** section:\n+     - **Application home page** - your site URL, e.g., `https://mysite.com`\n+     - **Application privacy policy link** - `/web/privacy.html` of your Remark42 installation, e.g. `https://remark42.mysite.com/web/privacy.html` (please check that it works)\n+     - **Terms of service** - leave empty\n+   - **Authorized domains** - your site domain, e.g., `mysite.com`\n+   - **Developer contact information** - add your email, and then click **Save and continue**\n+   - On the **Scopes** tab, just click **Save and continue**\n+   - On the **Test users**, add your email, then click **Save and continue**\n+   - Before going to the next step, set the app to \"Production\" and send it to verification\n \n 6. In the center pane, choose the **\"Credentials\"** tab\n \n-    - Open the **\"Create credentials\"** drop-down\n-    - Choose **\"OAuth client ID\"**\n-    - Choose **\"Web application\"**\n-    - Application **Name** is freeform; choose something appropriate, like \"Comments on mysite.com\"\n-    - **Authorized JavaScript Origins** should be your domain, e.g., `https://remark42.mysite.com`\n-    - **Authorized redirect URIs** is the location of OAuth2/callback constructed as domain + `/auth/google/callback`, e.g., `https://remark42.mysite.com/auth/google/callback`\n-    - Click **\"Create\"**\n+   - Open the **\"Create credentials\"** drop-down\n+   - Choose **\"OAuth client ID\"**\n+   - Choose **\"Web application\"**\n+   - Application **Name** is freeform; choose something appropriate, like \"Comments on mysite.com\"\n+   - **Authorized JavaScript Origins** should be your domain, e.g., `https://remark42.mysite.com`\n+   - **Authorized redirect URIs** is the location of OAuth2/callback constructed as domain + `/auth/google/callback`, e.g., `https://remark42.mysite.com/auth/google/callback`\n+   - Click **\"Create\"**\n \n 7. Take note of the **Client ID** (`AUTH_GOOGLE_CID`) and **Client Secret** (`AUTH_GOOGLE_CSEC`)\n \n@@ -124,4 +124,4 @@ For more details refer to [Yandex OAuth](https://yandex.com/dev/oauth/doc/dg/con\n Optionally, anonymous access can be turned on. In this case, an extra `anonymous` provider will allow logins without any social login with any name satisfying two conditions:\n \n - the name should be at least three characters long\n-- the name has to start from the letter and contains letters, numbers, underscores and spaces only**\n+- the name has to start from the letter and contains letters, numbers, underscores and spaces only"
    },
    {
      "sha": "94c501359862e4a4076595d3bf8188fcf76b1615",
      "filename": "site/src/docs/configuration/email/index.md",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fconfiguration%2Femail%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fconfiguration%2Femail%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fconfiguration%2Femail%2Findex.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -204,13 +204,13 @@ Now we have the following templates:\n To replace any template, add the file with the same name to the directory with the remark42 executable file. In case you run Remark42 inside docker-compose, you can put customised templates into a directory like `customised_templates` and then mount it like that:\n \n ```yaml\n-    volumes:\n-      - ./var:/srv/var\n-      - ./customised_templates/email_confirmation_login.html.tmpl:/srv/email_confirmation_login.html.tmpl:ro\n-      - ./customised_templates/email_confirmation_subscription.html.tmpl:/srv/email_confirmation_subscription.html.tmpl:ro\n-      - ./customised_templates/email_reply.html.tmpl:/srv/email_reply.html.tmpl:ro\n-      - ./customised_templates/email_unsubscribe.html.tmpl:/srv/email_unsubscribe.html.tmpl:ro\n-      - ./customised_templates/error_response.html.tmpl:/srv/error_response.html.tmpl:ro\n+volumes:\n+  - ./var:/srv/var\n+  - ./customised_templates/email_confirmation_login.html.tmpl:/srv/email_confirmation_login.html.tmpl:ro\n+  - ./customised_templates/email_confirmation_subscription.html.tmpl:/srv/email_confirmation_subscription.html.tmpl:ro\n+  - ./customised_templates/email_reply.html.tmpl:/srv/email_reply.html.tmpl:ro\n+  - ./customised_templates/email_unsubscribe.html.tmpl:/srv/email_unsubscribe.html.tmpl:ro\n+  - ./customised_templates/error_response.html.tmpl:/srv/error_response.html.tmpl:ro\n ```\n \n The easiest way to test it is to mount `error_response.html.tmpl`, and then head to <http://127.0.0.1:8080/email/unsubscribe.html>, where you are supposed to see the page like the following:"
    },
    {
      "sha": "2887d0833547565d5287752b45f350ec7c030850",
      "filename": "site/src/docs/configuration/frontend/index.md",
      "status": "modified",
      "additions": 24,
      "deletions": 24,
      "changes": 48,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fconfiguration%2Ffrontend%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fconfiguration%2Ffrontend%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fconfiguration%2Ffrontend%2Findex.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -27,18 +27,18 @@ Example with all of the params:\n \n ```html\n <script>\n-  var remark_config = {\n-    host: 'https://remark42.example.com',\n-    site_id: 'my_site',\n-    components: ['embed', 'last-comments']\n-    max_shown_comments: 100,\n-    theme: 'dark',\n-    page_title: 'My custom title for a page',\n-    locale: 'es',\n-    show_email_subscription: false,\n-    simple_view: true,\n-    no_footer: false\n-  }\n+\tvar remark_config = {\n+\t\thost: 'https://remark42.example.com',\n+\t\tsite_id: 'my_site',\n+\t\tcomponents: ['embed', 'last-comments']\n+\t\tmax_shown_comments: 100,\n+\t\ttheme: 'dark',\n+\t\tpage_title: 'My custom title for a page',\n+\t\tlocale: 'es',\n+\t\tshow_email_subscription: false,\n+\t\tsimple_view: true,\n+\t\tno_footer: false\n+\t}\n </script>\n ```\n \n@@ -92,11 +92,11 @@ Add this snippet to the bottom of web page, or adjust already present `remark_co\n \n ```html\n <script>\n-  var remark_config = {\n-    host: \"REMARK_URL\",\n-    site_id: \"YOUR_SITE_ID\",\n-    components: [\"last-comments\"],\n-  }\n+\tvar remark_config = {\n+\t\thost: \"REMARK_URL\",\n+\t\tsite_id: \"YOUR_SITE_ID\",\n+\t\tcomponents: [\"last-comments\"],\n+\t}\n </script>\n ```\n \n@@ -119,11 +119,11 @@ Add this snippet to the bottom of web page, or adjust already present `remark_co\n \n ```html\n <script>\n-  var remark_config = {\n-    host: \"REMARK_URL\",\n-    site_id: \"YOUR_SITE_ID\",\n-    components: [\"counter\"],\n-  }\n+\tvar remark_config = {\n+\t\thost: \"REMARK_URL\",\n+\t\tsite_id: \"YOUR_SITE_ID\",\n+\t\tcomponents: [\"counter\"],\n+\t}\n </script>\n ```\n \n@@ -135,8 +135,8 @@ And then add a node like this in the place where you want to see a number of com\n \n ```html\n <span\n-  class=\"remark42__counter\"\n-  data-url=\"https://domain.com/path/to/article/\"\n+\tclass=\"remark42__counter\"\n+\tdata-url=\"https://domain.com/path/to/article/\"\n ></span>\n ```\n "
    },
    {
      "sha": "4ab4db5a579510cce83c6d782fea190877afde4a",
      "filename": "site/src/docs/configuration/frontend/spa.md",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fconfiguration%2Ffrontend%2Fspa.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fconfiguration%2Ffrontend%2Fspa.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fconfiguration%2Ffrontend%2Fspa.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -1,4 +1,3 @@\n-\n ## API for Single-Page Application\n \n Add the following JavaScript to your `index.html`, which in this case, it is identical to `<script defer src=\"$HOST/web/embed.js\"></script>`"
    },
    {
      "sha": "bbb2cc8612bb6714f10937ab39b263b461ce2766",
      "filename": "site/src/docs/configuration/parameters/index.md",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fconfiguration%2Fparameters%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fconfiguration%2Fparameters%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fconfiguration%2Fparameters%2Findex.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -13,22 +13,22 @@ Most of the parameters have sane defaults and don't require customization. There\n The minimal `docker-compose.yml` has to include all required parameters:\n \n ```yaml\n-version: '2'\n+version: \"2\"\n \n services:\n   remark42:\n     image: umputun/remark42:latest\n     restart: always\n     container_name: \"remark42\"\n     environment:\n-      - REMARK_URL=https://demo.remark42.com  # URL pointing to your Remark42 server\n-      - SITE=YOUR_SITE_ID                     # site ID, same as used for `site_id`, see \"Setup on your website\"\n-      - SECRET=abcd-123456-xyz-$%^&           # secret key\n-      - AUTH_ANON=true                        # enable anonymous commenting\n-      - AUTH_GITHUB_CID=12345667890           # OAuth2 client ID\n-      - AUTH_GITHUB_CSEC=abcdefg12345678      # OAuth2 client secret\n+      - REMARK_URL=https://demo.remark42.com # URL pointing to your Remark42 server\n+      - SITE=YOUR_SITE_ID # site ID, same as used for `site_id`, see \"Setup on your website\"\n+      - SECRET=abcd-123456-xyz-$%^& # secret key\n+      - AUTH_ANON=true # enable anonymous commenting\n+      - AUTH_GITHUB_CID=12345667890 # OAuth2 client ID\n+      - AUTH_GITHUB_CSEC=abcdefg12345678 # OAuth2 client secret\n     volumes:\n-      - ./var:/srv/var                        # persistent volume to store all Remark42 data\n+      - ./var:/srv/var # persistent volume to store all Remark42 data\n ```\n \n ### Complete parameters list\n@@ -208,7 +208,7 @@ To get a user ID just log in and click on your username or any other user you wa\n \n Two parameters allow customizing the Docker container on the system level:\n \n-* `APP_UID` - sets UID to run Remark42 application in container (default=1001)\n-* `TIME_ZONE` - sets time zone of Remark42 container, would be used only on the backend as comments shown with user's timezone in the web interface (default=America/Chicago)\n+- `APP_UID` - sets UID to run Remark42 application in container (default=1001)\n+- `TIME_ZONE` - sets time zone of Remark42 container, would be used only on the backend as comments shown with user's timezone in the web interface (default=America/Chicago)\n \n _See [umputun/baseimage](https://github.com/umputun/baseimage) for more details._"
    },
    {
      "sha": "d892cc16e06a2c95bff27fa6d1f06d0c8e87b48b",
      "filename": "site/src/docs/configuration/telegram/index.md",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fconfiguration%2Ftelegram%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fconfiguration%2Ftelegram%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fconfiguration%2Ftelegram%2Findex.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -49,9 +49,10 @@ To integrate notifications about any comment on your sites with remark42 with [T\n \n 1. Set `NOTIFY_ADMINS=telegram`\n 2. Make [a channel](https://telegram.org/faq_channels), **add your bot as Administrator** into it and add channel ID to remark42 configuration as `NOTIFY_TELEGRAM_CHAN`\n-  * \"Post messages\" permission is enough for bot to be able to post messages in your channel, others are unnecessary;\n-  * To obtain a public channel ID, forward any message from it to [@JsonDumpBot](https://t.me/JsonDumpBot): look for `id` in `forward_from_chat`;\n-  * If you want to use a private channel or chat, use [these instructions](https://github.com/GabrielRF/telegram-id#web-channel-id) to obtain the ID.\n+\n+   - \"Post messages\" permission is enough for bot to be able to post messages in your channel, others are unnecessary;\n+   - To obtain a public channel ID, forward any message from it to [@JsonDumpBot](https://t.me/JsonDumpBot): look for `id` in `forward_from_chat`;\n+   - If you want to use a private channel or chat, use [these instructions](https://github.com/GabrielRF/telegram-id#web-channel-id) to obtain the ID.\n \n ### Notifications for users\n "
    },
    {
      "sha": "b0b5e871f47f071d82b9aa84167ca509434d2df3",
      "filename": "site/src/docs/contributing/api/index.md",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fcontributing%2Fapi%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fcontributing%2Fapi%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fcontributing%2Fapi%2Findex.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -143,6 +143,7 @@ Streaming API supposed to provide server-sent events for post updates as well as\n - `GET /api/v1/stream/last?site=site-id&since=unix_ts_msec` - returns updates stream (`event: last`) with comments for the site, `since` is optional\n \n It was removed in https://github.com/umputun/remark42/pull/826 due to not being used and affecting tests flakiness and could be returned if there will be a developer who would be willing to write frontend support for it.\n+\n </details>\n \n <details><summary>Response example</summary>"
    },
    {
      "sha": "63f385fc25476f345b4b82045825e9693abb5081",
      "filename": "site/src/docs/getting-started/installation/index.md",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fgetting-started%2Finstallation%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fgetting-started%2Finstallation%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fgetting-started%2Finstallation%2Findex.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -29,21 +29,21 @@ Add config for Remark on a page of your site ([here](/docs/configuration/fronten\n \n ```html\n <script>\n-  var remark_config = {\n-    host: 'REMARK_URL',\n-    site_id: 'YOUR_SITE_ID',\n-  }\n+\tvar remark_config = {\n+\t\thost: \"REMARK_URL\",\n+\t\tsite_id: \"YOUR_SITE_ID\",\n+\t}\n </script>\n ```\n \n For example:\n \n ```html\n <script>\n-  var remark_config = {\n-    host: 'https://demo.remark42.com',\n-    site_id: 'remark',\n-  }\n+\tvar remark_config = {\n+\t\thost: \"https://demo.remark42.com\",\n+\t\tsite_id: \"remark\",\n+\t}\n </script>\n ```\n \n@@ -76,5 +76,5 @@ To verify if Remark42 has been properly installed, check a demo page at `${REMAR\n \n ### Build from the source\n \n-* to build Docker container - `make docker`. This command will produce container `umputun/remark42`\n-* to build a single binary for direct execution - `make OS=<linux|windows|darwin> ARCH=<amd64|386>`. This step will produce an executable `remark42` file with everything embedded\n+- to build Docker container - `make docker`. This command will produce container `umputun/remark42`\n+- to build a single binary for direct execution - `make OS=<linux|windows|darwin> ARCH=<amd64|386>`. This step will produce an executable `remark42` file with everything embedded"
    },
    {
      "sha": "9faab97bc9c79efd33114a7142fb91a55b84d55d",
      "filename": "site/src/docs/manuals/integration-with-astro/index.md",
      "status": "modified",
      "additions": 83,
      "deletions": 70,
      "changes": 153,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fmanuals%2Fintegration-with-astro%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fmanuals%2Fintegration-with-astro%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fmanuals%2Fintegration-with-astro%2Findex.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -10,10 +10,12 @@\n \n While Astro supports numerous front-end framework [integrations](https://docs.astro.build/en/guides/integrations-guide/#official-integrations) (e.g. React, Vue, SolidJS, etc.)\n \n-\n ## w/ Svelte Components\n+\n ### Svelte Component (Embedded Frame)\n+\n #### remark42-embed.svelte\n+\n ```js\n <svelte:head>\n   <script async lang=\"javascript\">\n@@ -42,7 +44,9 @@ While Astro supports numerous front-end framework [integrations](https://docs.as\n ```\n \n ### Astro Layout (Page)\n+\n #### blogpageLayout.astro (partial Astro layout)\n+\n ```js\n ---\n ...\n@@ -63,10 +67,13 @@ const { frontmatter } = Astro.props;\n     ...\n </html>\n ```\n+\n Note the use of the `client:visible` directive which will hydrate the component once the element becomes visible.\n \n ### Svelte Component (Counter)\n+\n #### remark42-counter.svelte\n+\n ```js\n <script>\n   export let url;\n@@ -99,7 +106,9 @@ Note the use of the `client:visible` directive which will hydrate the component\n ```\n \n ### Astro Component (Card)\n+\n #### blogCard.astro (partial Astro component)\n+\n ```js\n ---\n const { post } = Astro.props;\n@@ -121,42 +130,44 @@ import Remark42Count from \"../components/remark42-count.svelte\";\n     ...\n </div>\n ```\n+\n Note the use of the `client:idle` directive which will hydrate the component once the page has completed the initial load.\n \n ## w/ React/Preact Components\n \n This example demonstrates how to integrate the Remark42 commenting system using a React/Preact component. The component manages the insertion and removal of the Remark42 script in the DOM, provides the ability to toggle between light and dark themes, and includes areas for embedding comments and displaying a comment count. This makes it easy to incorporate a commenting system into a React/Preact application.\n \n #### Comment.tsx\n+\n ```ts\n-import {useEffect, useState} from 'preact/hooks'\n+import { useEffect, useState } from \"preact/hooks\"\n \n declare global {\n-  // Declare the global types for REMARK42 and remark_config so they can be used in this module.\n-  interface Window {\n-    REMARK42: any\n-    remark_config: any\n-  }\n+\t// Declare the global types for REMARK42 and remark_config so they can be used in this module.\n+\tinterface Window {\n+\t\tREMARK42: any\n+\t\tremark_config: any\n+\t}\n }\n \n // Function to insert the Remark42 script into the DOM.\n const insertScript = (id: string, parentElement: HTMLElement) => {\n-  const script = window.document.createElement('script')\n-  script.type = 'text/javascript'\n-  script.async = true\n-  script.id = id\n-\n-  // Get the current URL, and remove trailing slash if it exists.\n-  let url = window.location.origin + window.location.pathname\n-  if (url.endsWith('/')) {\n-    url = url.slice(0, -1)\n-  }\n-\n-  // Get the host from the environment variables.\n-  const host = import.meta.env.PUBLIC_REMARK_URL\n-\n-  // Set the inner HTML of the script to load Remark42.\n-  script.innerHTML = `\n+\tconst script = window.document.createElement(\"script\")\n+\tscript.type = \"text/javascript\"\n+\tscript.async = true\n+\tscript.id = id\n+\n+\t// Get the current URL, and remove trailing slash if it exists.\n+\tlet url = window.location.origin + window.location.pathname\n+\tif (url.endsWith(\"/\")) {\n+\t\turl = url.slice(0, -1)\n+\t}\n+\n+\t// Get the host from the environment variables.\n+\tconst host = import.meta.env.PUBLIC_REMARK_URL\n+\n+\t// Set the inner HTML of the script to load Remark42.\n+\tscript.innerHTML = `\n     var remark_config = {\n       host: \"${host}\",\n       site_id: \"remark\",\n@@ -166,67 +177,69 @@ const insertScript = (id: string, parentElement: HTMLElement) => {\n     };\n     !function(e,n){for(var o=0;o<e.length;o++){var r=n.createElement(\"script\"),c=\".js\",d=n.head||n.body;\"noModule\"in r?(r.type=\"module\",c=\".mjs\"):r.async=!0,r.defer=!0,r.src=remark_config.host+\"/web/\"+e[o]+c,d.appendChild(r)}}(remark_config.components||[\"embed\"],document);`\n \n-  // Append the script to the parent element.\n-  parentElement.appendChild(script)\n+\t// Append the script to the parent element.\n+\tparentElement.appendChild(script)\n }\n \n // Function to remove the Remark42 script from the DOM.\n const removeScript = (id: string, parentElement: HTMLElement) => {\n-  const script = window.document.getElementById(id)\n-  if (script) {\n-    parentElement.removeChild(script)\n-  }\n+\tconst script = window.document.getElementById(id)\n+\tif (script) {\n+\t\tparentElement.removeChild(script)\n+\t}\n }\n \n // Function to manage the insertion and removal of the Remark42 script.\n const manageScript = () => {\n-  if (!window) {\n-    return () => {}\n-  }\n-  const {document} = window\n-  if (document.getElementById('remark42')) {\n-    insertScript('comments-script', document.body)\n-  }\n-\n-  // Return a cleanup function to remove the script when the component unmounts.\n-  return () => removeScript('comments-script', document.body)\n+\tif (!window) {\n+\t\treturn () => {}\n+\t}\n+\tconst { document } = window\n+\tif (document.getElementById(\"remark42\")) {\n+\t\tinsertScript(\"comments-script\", document.body)\n+\t}\n+\n+\t// Return a cleanup function to remove the script when the component unmounts.\n+\treturn () => removeScript(\"comments-script\", document.body)\n }\n \n export function Comments() {\n-  // State for tracking the current theme.\n-  const [theme, setTheme] = useState('dark')\n-\n-  // Use effect to manage the Remark42 script.\n-  useEffect(manageScript, [])\n-\n-  // Use effect to update the theme when it changes.\n-  useEffect(() => {\n-    if (window.REMARK42) {\n-      window.REMARK42.changeTheme(theme)\n-    }\n-  }, [theme])\n-\n-  // Function to toggle the theme.\n-  const toggleTheme = () => {\n-    setTheme((prevTheme) => (prevTheme === 'dark' ? 'light' : 'dark'))\n-  }\n-\n-  return (\n-    <>\n-      <h2>Comments</h2>\n-      {/* Button to change the theme. */}\n-      <button onClick={toggleTheme}>Change Theme</button>\n-      {/* The span where Remark42 will embed the comment count. */}\n-      <p>\n-        There are <span className=\"remark42__counter\"></span> comments.\n-      </p>\n-      {/* The div where Remark42 will embed the comments. */}\n-      <div id=\"remark42\"></div>\n-    </>\n-  )\n+\t// State for tracking the current theme.\n+\tconst [theme, setTheme] = useState(\"dark\")\n+\n+\t// Use effect to manage the Remark42 script.\n+\tuseEffect(manageScript, [])\n+\n+\t// Use effect to update the theme when it changes.\n+\tuseEffect(() => {\n+\t\tif (window.REMARK42) {\n+\t\t\twindow.REMARK42.changeTheme(theme)\n+\t\t}\n+\t}, [theme])\n+\n+\t// Function to toggle the theme.\n+\tconst toggleTheme = () => {\n+\t\tsetTheme((prevTheme) => (prevTheme === \"dark\" ? \"light\" : \"dark\"))\n+\t}\n+\n+\treturn (\n+\t\t<>\n+\t\t\t<h2>Comments</h2>\n+\t\t\t{/* Button to change the theme. */}\n+\t\t\t<button onClick={toggleTheme}>Change Theme</button>\n+\t\t\t{/* The span where Remark42 will embed the comment count. */}\n+\t\t\t<p>\n+\t\t\t\tThere are <span className=\"remark42__counter\"></span> comments.\n+\t\t\t</p>\n+\t\t\t{/* The div where Remark42 will embed the comments. */}\n+\t\t\t<div id=\"remark42\"></div>\n+\t\t</>\n+\t)\n }\n ```\n+\n #### Here how to use it in your Astro component.\n+\n ```js\n ---\n import { Comments } from \"@components/Comment\";"
    },
    {
      "sha": "d3c1b2dfa16e12e2c31c553fef3e6d870c1c545f",
      "filename": "site/src/docs/manuals/integration-with-gatsby/index.md",
      "status": "modified",
      "additions": 99,
      "deletions": 101,
      "changes": 200,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fmanuals%2Fintegration-with-gatsby%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fmanuals%2Fintegration-with-gatsby%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fmanuals%2Fintegration-with-gatsby%2Findex.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -1,18 +1,18 @@\n # Using Remark42 in Gatsby projects\n+\n ## React component written in Javascript\n \n ```js\n-\n import * as React from \"react\"\n \n // This function will insert the usual <script> tag of\n // Remark42 into the specified DOM location (parentElement)\n const insertScript = (id, parentElement) => {\n-  const script = window.document.createElement(\"script\")\n-  script.type = \"text/javascript\"\n-  script.async = true\n-  script.id = id\n-  /* For Gatsby it's important to manually provide the URL\n+\tconst script = window.document.createElement(\"script\")\n+\tscript.type = \"text/javascript\"\n+\tscript.async = true\n+\tscript.id = id\n+\t/* For Gatsby it's important to manually provide the URL\n   and make sure it does not contain a trailing slash (\"/\").\n   Because otherwise the comments for paths with/without \n   the trailing slash are stored separately in the BoltDB database.\n@@ -22,12 +22,12 @@ const insertScript = (id, parentElement) => {\n   your comments from the inverse URL at your present URL.\n   Making sure url is provided without the trailing slash\n   in the remark42 config solves this. */\n-  let url = window.location.origin + window.location.pathname\n-  if(url.endsWith(\"/\")) {\n-    url = url.slice(0, -1)\n-  }\n-  // Now the actual config and script-fetching function:\n-  script.innerHTML = `\n+\tlet url = window.location.origin + window.location.pathname\n+\tif (url.endsWith(\"/\")) {\n+\t\turl = url.slice(0, -1)\n+\t}\n+\t// Now the actual config and script-fetching function:\n+\tscript.innerHTML = `\n     var remark_config = {\n       host: \"https://remark42.example.com\",\n       site_id: \"example-name\",\n@@ -36,87 +36,86 @@ const insertScript = (id, parentElement) => {\n       components: [\"embed\"],\n     };\n     !function(e,n){for(var o=0;o<e.length;o++){var r=n.createElement(\"script\"),c=\".js\",d=n.head||n.body;\"noModule\"in r?(r.type=\"module\",c=\".mjs\"):r.async=!0,r.defer=!0,r.src=remark_config.host+\"/web/\"+e[o]+c,d.appendChild(r)}}(remark_config.components||[\"embed\"],document);`\n-  parentElement.appendChild(script)\n+\tparentElement.appendChild(script)\n }\n \n /* This function removes the previously added script from the DOM.\n Might be necessary when page transitions happen, to make sure a new instance \n is created, pointing to the current URL. Although this might actually \n not be necessary, please do your own testing.*/\n const removeScript = (id, parentElement) => {\n-  const script = window.document.getElementById(id)\n-  if (script) {\n-    parentElement.removeChild(script)\n-  }\n+\tconst script = window.document.getElementById(id)\n+\tif (script) {\n+\t\tparentElement.removeChild(script)\n+\t}\n }\n \n // This function will be provided to useEffect and will insert the script\n // when the component is mounted and remove it when it unmounts\n const manageScript = () => {\n-  if (!window) {\n-    return\n-  }\n-  const document = window.document\n-  if (document.getElementById(\"remark42\")) {\n-    insertScript(\"comments-script\", document.body)\n-  }\n-  return () => removeScript(\"comments-script\", document.body)\n+\tif (!window) {\n+\t\treturn\n+\t}\n+\tconst document = window.document\n+\tif (document.getElementById(\"remark42\")) {\n+\t\tinsertScript(\"comments-script\", document.body)\n+\t}\n+\treturn () => removeScript(\"comments-script\", document.body)\n }\n \n /* Another function for another useEffect - this is the most crucial part for\n Gatsby compatibility. It will ensure that each page loads its own appropriate\n comments, and that comments will be properly loaded */\n const recreateRemark42Instance = () => {\n-    if (!window) {\n-      return\n-    }\n-    const remark42 = window.REMARK42\n-    if (remark42) {\n-      remark42.destroy()\n-      remark42.createInstance(window.remark_config)\n-    }\n+\tif (!window) {\n+\t\treturn\n+\t}\n+\tconst remark42 = window.REMARK42\n+\tif (remark42) {\n+\t\tremark42.destroy()\n+\t\tremark42.createInstance(window.remark_config)\n+\t}\n }\n \n // The location prop is {props.location.pathname} from the parent component.\n // I.e. invoke the component like this in the parent: <Comments location={props.location.pathname} />\n const Comments = ({ location }) => {\n-  // Insert the two useEffect hooks. Maybe you can combine them into one? Feel free if you want to.\n-  React.useEffect(manageScript, [location])\n-  React.useEffect(recreateRemark42Instance, [location])\n-\n-  return (\n-    <>\n-      <h2>Comments</h2>\n-      { /* This div is the target for actual comments insertion */ }\n-      <div id=\"remark42\"></div>\n-    </>\n-  )\n+\t// Insert the two useEffect hooks. Maybe you can combine them into one? Feel free if you want to.\n+\tReact.useEffect(manageScript, [location])\n+\tReact.useEffect(recreateRemark42Instance, [location])\n+\n+\treturn (\n+\t\t<>\n+\t\t\t<h2>Comments</h2>\n+\t\t\t{/* This div is the target for actual comments insertion */}\n+\t\t\t<div id=\"remark42\"></div>\n+\t\t</>\n+\t)\n }\n \n export default Comments\n-\n ```\n \n ## React component written in Typescript\n \n ```ts\n-import { Fragment, useEffect } from 'react';\n+import { Fragment, useEffect } from \"react\"\n \n declare global {\n-  interface Window {\n-    REMARK42: any;\n-    remark_config: any;\n-  }\n+\tinterface Window {\n+\t\tREMARK42: any\n+\t\tremark_config: any\n+\t}\n }\n \n // This function will insert the usual <script> tag of\n // Remark42 into the specified DOM location (parentElement)\n const insertScript = (id: string, parentElement: HTMLElement) => {\n-  const script = window.document.createElement('script');\n-  script.type = 'text/javascript';\n-  script.async = true;\n-  script.id = id;\n-  /* For Gatsby it's important to manually provide the URL\n+\tconst script = window.document.createElement(\"script\")\n+\tscript.type = \"text/javascript\"\n+\tscript.async = true\n+\tscript.id = id\n+\t/* For Gatsby it's important to manually provide the URL\n   and make sure it does not contain a trailing slash (\"/\").\n   Because otherwise the comments for paths with/without \n   the trailing slash are stored separately in the BoltDB database.\n@@ -126,79 +125,78 @@ const insertScript = (id: string, parentElement: HTMLElement) => {\n   your comments from the inverse URL at your present URL.\n   Making sure url is provided without the trailing slash\n   in the remark42 config solves this. */\n-  let url = window.location.origin + window.location.pathname;\n-  if (url.endsWith('/')) {\n-    url = url.slice(0, -1);\n-  }\n-  // Now the actual config and script-fetching function:\n-  script.innerHTML = `\n+\tlet url = window.location.origin + window.location.pathname\n+\tif (url.endsWith(\"/\")) {\n+\t\turl = url.slice(0, -1)\n+\t}\n+\t// Now the actual config and script-fetching function:\n+\tscript.innerHTML = `\n     var remark_config = {\n       host: \"https://remark42.example.com\",\n       site_id: \"example-name\",\n       url: \"${url}\",\n       theme: \"dark\",\n       components: [\"embed\"],\n     };\n-    !function(e,n){for(var o=0;o<e.length;o++){var r=n.createElement(\"script\"),c=\".js\",d=n.head||n.body;\"noModule\"in r?(r.type=\"module\",c=\".mjs\"):r.async=!0,r.defer=!0,r.src=remark_config.host+\"/web/\"+e[o]+c,d.appendChild(r)}}(remark_config.components||[\"embed\"],document);`;\n-  parentElement.appendChild(script);\n-};\n+    !function(e,n){for(var o=0;o<e.length;o++){var r=n.createElement(\"script\"),c=\".js\",d=n.head||n.body;\"noModule\"in r?(r.type=\"module\",c=\".mjs\"):r.async=!0,r.defer=!0,r.src=remark_config.host+\"/web/\"+e[o]+c,d.appendChild(r)}}(remark_config.components||[\"embed\"],document);`\n+\tparentElement.appendChild(script)\n+}\n \n /* This function removes the previously added script from the DOM.\n Might be necessary when page transitions happen, to make sure a new instance \n is created, pointing to the current URL. Although this might actually \n not be necessary, please do your own testing. */\n const removeScript = (id: string, parentElement: HTMLElement) => {\n-  const script = window.document.getElementById(id);\n-  if (script) {\n-    parentElement.removeChild(script);\n-  }\n-};\n+\tconst script = window.document.getElementById(id)\n+\tif (script) {\n+\t\tparentElement.removeChild(script)\n+\t}\n+}\n \n // This function will be provided to useEffect and will insert the script\n // when the component is mounted and remove it when it unmounts\n const manageScript = () => {\n-  if (!window) {\n-    return () => {};\n-  }\n-  const { document } = window;\n-  if (document.getElementById('remark42')) {\n-    insertScript('comments-script', document.body);\n-  }\n-  return () => removeScript('comments-script', document.body);\n-};\n+\tif (!window) {\n+\t\treturn () => {}\n+\t}\n+\tconst { document } = window\n+\tif (document.getElementById(\"remark42\")) {\n+\t\tinsertScript(\"comments-script\", document.body)\n+\t}\n+\treturn () => removeScript(\"comments-script\", document.body)\n+}\n \n /* Another function for another useEffect - this is the most crucial part for\n Gatsby compatibility. It will ensure that each page loads its own appropriate\n comments, and that comments will be properly loaded */\n const recreateRemark42Instance = () => {\n-  if (!window) {\n-    return;\n-  }\n-  const remark42 = window.REMARK42;\n-  if (remark42) {\n-    remark42.destroy();\n-    remark42.createInstance(window.remark_config);\n-  }\n-};\n+\tif (!window) {\n+\t\treturn\n+\t}\n+\tconst remark42 = window.REMARK42\n+\tif (remark42) {\n+\t\tremark42.destroy()\n+\t\tremark42.createInstance(window.remark_config)\n+\t}\n+}\n \n type CommentsProps = {\n-  location: string;\n-};\n+\tlocation: string\n+}\n \n // The location prop is {props.location.pathname} from the parent component.\n // I.e. invoke the component like this in the parent: <Comments location={props.location.pathname} />\n export function Comments({ location }: CommentsProps) {\n-  // Insert the two useEffect hooks. Maybe you can combine them into one? Feel free if you want to.\n-  useEffect(manageScript, [location]);\n-  useEffect(recreateRemark42Instance, [location]);\n-\n-  return (\n-    <Fragment>\n-      <h2>Comments</h2>\n-      {/* This div is the target for actual comments insertion */}\n-      <div id=\"remark42\" />\n-    </Fragment>\n-  );\n+\t// Insert the two useEffect hooks. Maybe you can combine them into one? Feel free if you want to.\n+\tuseEffect(manageScript, [location])\n+\tuseEffect(recreateRemark42Instance, [location])\n+\n+\treturn (\n+\t\t<Fragment>\n+\t\t\t<h2>Comments</h2>\n+\t\t\t{/* This div is the target for actual comments insertion */}\n+\t\t\t<div id=\"remark42\" />\n+\t\t</Fragment>\n+\t)\n }\n-\n ```"
    },
    {
      "sha": "83815f9061b38b9b7419a422fad5482c8dbfe144",
      "filename": "site/src/docs/manuals/separate-domain/index.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fmanuals%2Fseparate-domain%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fmanuals%2Fseparate-domain%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fmanuals%2Fseparate-domain%2Findex.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -16,7 +16,7 @@ Set `ALLOWED_HOSTS='self',example1.org,example2.org` with your domain names and\n \n `ALLOWED_HOSTS` sets CSP [frame-ancestors](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors), which, once enabled, limits the domains where Remark42 would work. The default value is not set so that it would work on any domain.\n \n-`AUTH_SAME_SITE` sets the [SAME_SITE](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite) attribute for authorisation cookies, allowing Remark42 either on the original domain and subdomains there  (default value, not set which equals to `Lax`) or allows setting authorisation cookies on any domain where remark42 is shown (`None` setting).\n+`AUTH_SAME_SITE` sets the [SAME_SITE](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite) attribute for authorisation cookies, allowing Remark42 either on the original domain and subdomains there (default value, not set which equals to `Lax`) or allows setting authorisation cookies on any domain where remark42 is shown (`None` setting).\n \n Here are all possible combinations of these two:\n "
    },
    {
      "sha": "7c4e9917887eb215ecdb43e522b1e51b18c9ad8b",
      "filename": "site/src/docs/manuals/subdomain/index.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fmanuals%2Fsubdomain%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fmanuals%2Fsubdomain%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fmanuals%2Fsubdomain%2Findex.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -73,7 +73,7 @@ example.com {\n   handle_path /remark42* {\n     reverse_proxy remark42:8080\n   }\n-  \n+\n   file_server\n }\n ```"
    },
    {
      "sha": "ac02d02460a24f1cc960e57d2128fd8389208369",
      "filename": "site/src/docs/nav.json",
      "status": "modified",
      "additions": 121,
      "deletions": 121,
      "changes": 242,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fnav.json",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fdocs%2Fnav.json",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fnav.json?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -1,123 +1,123 @@\n [\n-  {\n-    \"section\": \"Getting Started\",\n-    \"children\": [\n-      {\n-        \"title\": \"Installation\",\n-        \"href\": \"/getting-started/installation/\"\n-      }\n-    ]\n-  },\n-  {\n-    \"section\": \"Configuration\",\n-    \"children\": [\n-      {\n-        \"title\": \"Frontend configuration\",\n-        \"href\": \"/configuration/frontend/\"\n-      },\n-      {\n-        \"title\": \"Backend configuration\",\n-        \"href\": \"/configuration/parameters/\"\n-      },\n-      {\n-        \"title\": \"Authorization\",\n-        \"href\": \"/configuration/authorization/\"\n-      },\n-      {\n-        \"title\": \"Notifications\",\n-        \"href\": \"/configuration/notifications/\"\n-      },\n-      {\n-        \"title\": \"Email\",\n-        \"href\": \"/configuration/email/\"\n-      },\n-      {\n-        \"title\": \"Telegram\",\n-        \"href\": \"/configuration/telegram/\"\n-      }\n-    ]\n-  },\n-  {\n-    \"section\": \"Manuals\",\n-    \"children\": [\n-      {\n-        \"title\": \"Admin UI\",\n-        \"href\": \"/manuals/admin-interface/\"\n-      },\n-      {\n-        \"title\": \"Without subdomain\",\n-        \"href\": \"/manuals/subdomain/\"\n-      },\n-      {\n-        \"title\": \"On a separate domain\",\n-        \"href\": \"/manuals/separate-domain/\"\n-      },\n-      {\n-        \"title\": \"Reproxy\",\n-        \"href\": \"/manuals/reproxy/\"\n-      },\n-      {\n-        \"title\": \"Nginx\",\n-        \"href\": \"/manuals/nginx/\"\n-      },\n-      {\n-        \"title\": \"Kubernetes\",\n-        \"href\": \"/manuals/kubernetes/\"\n-      },\n-      {\n-        \"title\": \"Astro Integration (w/Svelte)\",\n-        \"href\": \"/manuals/integration-with-astro/\"\n-      },\n-      {\n-        \"title\": \"Gatsby Integration\",\n-        \"href\": \"/manuals/integration-with-gatsby/\"\n-      },\n-      {\n-        \"title\": \"Anti-Spam\",\n-        \"href\": \"/manuals/spam/\"\n-      }\n-    ]\n-  },\n-  {\n-    \"section\": \"Backup\",\n-    \"children\": [\n-      {\n-        \"title\": \"Backup\",\n-        \"href\": \"/backup/backup/\"\n-      },\n-      {\n-        \"title\": \"Restore\",\n-        \"href\": \"/backup/restore/\"\n-      },\n-      {\n-        \"title\": \"Migration\",\n-        \"href\": \"/backup/migration/\"\n-      },\n-      {\n-        \"title\": \"Site URL migration\",\n-        \"href\": \"/backup/url-migration/\"\n-      }\n-    ]\n-  },\n-  {\n-    \"section\": \"Contributing\",\n-    \"children\": [\n-      {\n-        \"title\": \"Backend\",\n-        \"href\": \"/contributing/backend/\"\n-      },\n-      {\n-        \"title\": \"Frontend\",\n-        \"href\": \"/contributing/frontend/\"\n-      },\n-      {\n-        \"title\": \"Translations\",\n-        \"href\": \"/contributing/translations/\"\n-      },\n-      {\n-        \"title\": \"API\",\n-        \"href\": \"/contributing/api/\"\n-      }\n-    ]\n-  }\n+\t{\n+\t\t\"section\": \"Getting Started\",\n+\t\t\"children\": [\n+\t\t\t{\n+\t\t\t\t\"title\": \"Installation\",\n+\t\t\t\t\"href\": \"/getting-started/installation/\"\n+\t\t\t}\n+\t\t]\n+\t},\n+\t{\n+\t\t\"section\": \"Configuration\",\n+\t\t\"children\": [\n+\t\t\t{\n+\t\t\t\t\"title\": \"Frontend configuration\",\n+\t\t\t\t\"href\": \"/configuration/frontend/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Backend configuration\",\n+\t\t\t\t\"href\": \"/configuration/parameters/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Authorization\",\n+\t\t\t\t\"href\": \"/configuration/authorization/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Notifications\",\n+\t\t\t\t\"href\": \"/configuration/notifications/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Email\",\n+\t\t\t\t\"href\": \"/configuration/email/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Telegram\",\n+\t\t\t\t\"href\": \"/configuration/telegram/\"\n+\t\t\t}\n+\t\t]\n+\t},\n+\t{\n+\t\t\"section\": \"Manuals\",\n+\t\t\"children\": [\n+\t\t\t{\n+\t\t\t\t\"title\": \"Admin UI\",\n+\t\t\t\t\"href\": \"/manuals/admin-interface/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Without subdomain\",\n+\t\t\t\t\"href\": \"/manuals/subdomain/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"On a separate domain\",\n+\t\t\t\t\"href\": \"/manuals/separate-domain/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Reproxy\",\n+\t\t\t\t\"href\": \"/manuals/reproxy/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Nginx\",\n+\t\t\t\t\"href\": \"/manuals/nginx/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Kubernetes\",\n+\t\t\t\t\"href\": \"/manuals/kubernetes/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Astro Integration (w/Svelte)\",\n+\t\t\t\t\"href\": \"/manuals/integration-with-astro/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Gatsby Integration\",\n+\t\t\t\t\"href\": \"/manuals/integration-with-gatsby/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Anti-Spam\",\n+\t\t\t\t\"href\": \"/manuals/spam/\"\n+\t\t\t}\n+\t\t]\n+\t},\n+\t{\n+\t\t\"section\": \"Backup\",\n+\t\t\"children\": [\n+\t\t\t{\n+\t\t\t\t\"title\": \"Backup\",\n+\t\t\t\t\"href\": \"/backup/backup/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Restore\",\n+\t\t\t\t\"href\": \"/backup/restore/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Migration\",\n+\t\t\t\t\"href\": \"/backup/migration/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Site URL migration\",\n+\t\t\t\t\"href\": \"/backup/url-migration/\"\n+\t\t\t}\n+\t\t]\n+\t},\n+\t{\n+\t\t\"section\": \"Contributing\",\n+\t\t\"children\": [\n+\t\t\t{\n+\t\t\t\t\"title\": \"Backend\",\n+\t\t\t\t\"href\": \"/contributing/backend/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Frontend\",\n+\t\t\t\t\"href\": \"/contributing/frontend/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"Translations\",\n+\t\t\t\t\"href\": \"/contributing/translations/\"\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t\"title\": \"API\",\n+\t\t\t\t\"href\": \"/contributing/api/\"\n+\t\t\t}\n+\t\t]\n+\t}\n ]"
    },
    {
      "sha": "698fe050938b82cc20592ed4ad08766c865a8eea",
      "filename": "site/src/pages/index.md",
      "status": "modified",
      "additions": 33,
      "deletions": 33,
      "changes": 66,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fpages%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fpages%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fpages%2Findex.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -8,41 +8,41 @@ title: Remark42 – Privacy-focused lightweight commenting engine\n \n Remark42 allows you to have a self-hosted, lightweight, and simple (yet functional) comment engine, which doesn't spy on users. It can be embedded into blogs, articles or any other place where readers add comments.\n \n-* Social login via Google, Twitter, Facebook, Microsoft, GitHub, Apple, Yandex, Patreon and Telegram\n-* Login via email\n-* Optional anonymous access\n-* Multi-level nested comments with both tree and plain presentations\n-* Import from Disqus and WordPress\n-* Markdown support with friendly formatter toolbar\n-* Moderators can remove comments and block users\n-* Voting, pinning and verification system\n-* Sortable comments\n-* Images upload with drag-and-drop\n-* Extractor for recent comments, cross-post\n-* RSS for all comments and each post\n-* Telegram, Slack, email and webhook admin notifications for each new comment on your site\n-* Email and Telegram notifications for users so that they get notified when someone responds to their comments\n-* Export data to JSON with automatic backups\n-* No external databases, everything embedded in a single data file\n-* Fully dockerized and can be deployed in a single command\n-* A self-contained executable can be deployed directly to Linux, Windows and macOS\n-* Clean, lightweight and customizable UI with white and dark themes\n-* Multi-site mode from a single instance\n-* Integration with automatic SSL (direct or via reproxy)\n-* Privacy-focused\n+- Social login via Google, Twitter, Facebook, Microsoft, GitHub, Apple, Yandex, Patreon and Telegram\n+- Login via email\n+- Optional anonymous access\n+- Multi-level nested comments with both tree and plain presentations\n+- Import from Disqus and WordPress\n+- Markdown support with friendly formatter toolbar\n+- Moderators can remove comments and block users\n+- Voting, pinning and verification system\n+- Sortable comments\n+- Images upload with drag-and-drop\n+- Extractor for recent comments, cross-post\n+- RSS for all comments and each post\n+- Telegram, Slack, email and webhook admin notifications for each new comment on your site\n+- Email and Telegram notifications for users so that they get notified when someone responds to their comments\n+- Export data to JSON with automatic backups\n+- No external databases, everything embedded in a single data file\n+- Fully dockerized and can be deployed in a single command\n+- A self-contained executable can be deployed directly to Linux, Windows and macOS\n+- Clean, lightweight and customizable UI with white and dark themes\n+- Multi-site mode from a single instance\n+- Integration with automatic SSL (direct or via reproxy)\n+- Privacy-focused\n \n ## Privacy\n \n-* Remark42 is trying to be very sensitive to any private or semi-private information.\n-* Authentication is requesting the minimal possible scope from authentication providers and all extra information returned by them is immediately dropped and not stored in any form.\n-* Generally, Remark42 keeps user ID, username and avatar link only. None of these fields exposed directly - ID and name hashed, avatar proxied.\n-* There is no tracking of any sort.\n-* Login mechanic uses JWT stored in a cookie (HttpOnly, secured). The second cookie (XSRF_TOKEN) is a random ID preventing CSRF.\n-* There is no cross-site login, i.e., user's behavior can't be analyzed across independent sites running Remark42.\n-* There are no third-party analytic services involved.\n-* Users can request all information Remark42 knows about them and receive the export in the gz file.\n-* Supports complete cleanup of all information related to user's activity by user's \"deleteme\" request.\n-* Cookie lifespan can be restricted to session-only.\n-* All potentially sensitive data stored by Remark42 hashed and encrypted.\n+- Remark42 is trying to be very sensitive to any private or semi-private information.\n+- Authentication is requesting the minimal possible scope from authentication providers and all extra information returned by them is immediately dropped and not stored in any form.\n+- Generally, Remark42 keeps user ID, username and avatar link only. None of these fields exposed directly - ID and name hashed, avatar proxied.\n+- There is no tracking of any sort.\n+- Login mechanic uses JWT stored in a cookie (HttpOnly, secured). The second cookie (XSRF_TOKEN) is a random ID preventing CSRF.\n+- There is no cross-site login, i.e., user's behavior can't be analyzed across independent sites running Remark42.\n+- There are no third-party analytic services involved.\n+- Users can request all information Remark42 knows about them and receive the export in the gz file.\n+- Supports complete cleanup of all information related to user's activity by user's \"deleteme\" request.\n+- Cookie lifespan can be restricted to session-only.\n+- All potentially sensitive data stored by Remark42 hashed and encrypted.\n \n <div class=\"text-right italic\">— The Remark42 Team</div>"
    },
    {
      "sha": "fca88d105647790ce612f9b2dced9a974b335a96",
      "filename": "site/src/pages/redirects.md",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fpages%2Fredirects.md",
      "raw_url": "https://github.com/umputun/remark42/raw/d02099844eb81ef78011293b50329d9ac53dab87/site%2Fsrc%2Fpages%2Fredirects.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fpages%2Fredirects.md?ref=d02099844eb81ef78011293b50329d9ac53dab87",
      "patch": "@@ -12,9 +12,9 @@ pagination:\n   alias: redirect\n # Add your redirection tuples to this list!\n redirects:\n-  - { 'from': '/docs/', 'destination': '/docs/getting-started/installation/' }\n+  - { \"from\": \"/docs/\", \"destination\": \"/docs/getting-started/installation/\" }\n # The \"permalink\" attribute determines where the output page will be located.\n-permalink: '{{ redirect.from }}'\n+permalink: \"{{ redirect.from }}\"\n # The \"redirect\" layout just has a small html header with the meta tags that do redirection.\n layout: redirect\n ---"
    }
  ]
}
